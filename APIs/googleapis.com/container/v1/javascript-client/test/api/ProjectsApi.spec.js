/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KubernetesEngineApi);
  }
}(this, function(expect, KubernetesEngineApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KubernetesEngineApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('containerProjectsAggregatedUsableSubnetworksList', function() {
      it('should call containerProjectsAggregatedUsableSubnetworksList successfully', function(done) {
        //uncomment below and update the code to test containerProjectsAggregatedUsableSubnetworksList
        //instance.containerProjectsAggregatedUsableSubnetworksList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersCheckAutopilotCompatibility', function() {
      it('should call containerProjectsLocationsClustersCheckAutopilotCompatibility successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersCheckAutopilotCompatibility
        //instance.containerProjectsLocationsClustersCheckAutopilotCompatibility(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersCompleteIpRotation', function() {
      it('should call containerProjectsLocationsClustersCompleteIpRotation successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersCompleteIpRotation
        //instance.containerProjectsLocationsClustersCompleteIpRotation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersCreate', function() {
      it('should call containerProjectsLocationsClustersCreate successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersCreate
        //instance.containerProjectsLocationsClustersCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersGetJwks', function() {
      it('should call containerProjectsLocationsClustersGetJwks successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersGetJwks
        //instance.containerProjectsLocationsClustersGetJwks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersList', function() {
      it('should call containerProjectsLocationsClustersList successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersList
        //instance.containerProjectsLocationsClustersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersNodePoolsCompleteUpgrade', function() {
      it('should call containerProjectsLocationsClustersNodePoolsCompleteUpgrade successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersNodePoolsCompleteUpgrade
        //instance.containerProjectsLocationsClustersNodePoolsCompleteUpgrade(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersNodePoolsCreate', function() {
      it('should call containerProjectsLocationsClustersNodePoolsCreate successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersNodePoolsCreate
        //instance.containerProjectsLocationsClustersNodePoolsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersNodePoolsDelete', function() {
      it('should call containerProjectsLocationsClustersNodePoolsDelete successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersNodePoolsDelete
        //instance.containerProjectsLocationsClustersNodePoolsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersNodePoolsList', function() {
      it('should call containerProjectsLocationsClustersNodePoolsList successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersNodePoolsList
        //instance.containerProjectsLocationsClustersNodePoolsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersNodePoolsRollback', function() {
      it('should call containerProjectsLocationsClustersNodePoolsRollback successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersNodePoolsRollback
        //instance.containerProjectsLocationsClustersNodePoolsRollback(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersNodePoolsSetAutoscaling', function() {
      it('should call containerProjectsLocationsClustersNodePoolsSetAutoscaling successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersNodePoolsSetAutoscaling
        //instance.containerProjectsLocationsClustersNodePoolsSetAutoscaling(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersNodePoolsSetManagement', function() {
      it('should call containerProjectsLocationsClustersNodePoolsSetManagement successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersNodePoolsSetManagement
        //instance.containerProjectsLocationsClustersNodePoolsSetManagement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersNodePoolsSetSize', function() {
      it('should call containerProjectsLocationsClustersNodePoolsSetSize successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersNodePoolsSetSize
        //instance.containerProjectsLocationsClustersNodePoolsSetSize(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersNodePoolsUpdate', function() {
      it('should call containerProjectsLocationsClustersNodePoolsUpdate successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersNodePoolsUpdate
        //instance.containerProjectsLocationsClustersNodePoolsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersSetAddons', function() {
      it('should call containerProjectsLocationsClustersSetAddons successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersSetAddons
        //instance.containerProjectsLocationsClustersSetAddons(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersSetLegacyAbac', function() {
      it('should call containerProjectsLocationsClustersSetLegacyAbac successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersSetLegacyAbac
        //instance.containerProjectsLocationsClustersSetLegacyAbac(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersSetLocations', function() {
      it('should call containerProjectsLocationsClustersSetLocations successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersSetLocations
        //instance.containerProjectsLocationsClustersSetLocations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersSetLogging', function() {
      it('should call containerProjectsLocationsClustersSetLogging successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersSetLogging
        //instance.containerProjectsLocationsClustersSetLogging(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersSetMaintenancePolicy', function() {
      it('should call containerProjectsLocationsClustersSetMaintenancePolicy successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersSetMaintenancePolicy
        //instance.containerProjectsLocationsClustersSetMaintenancePolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersSetMasterAuth', function() {
      it('should call containerProjectsLocationsClustersSetMasterAuth successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersSetMasterAuth
        //instance.containerProjectsLocationsClustersSetMasterAuth(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersSetMonitoring', function() {
      it('should call containerProjectsLocationsClustersSetMonitoring successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersSetMonitoring
        //instance.containerProjectsLocationsClustersSetMonitoring(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersSetNetworkPolicy', function() {
      it('should call containerProjectsLocationsClustersSetNetworkPolicy successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersSetNetworkPolicy
        //instance.containerProjectsLocationsClustersSetNetworkPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersSetResourceLabels', function() {
      it('should call containerProjectsLocationsClustersSetResourceLabels successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersSetResourceLabels
        //instance.containerProjectsLocationsClustersSetResourceLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersStartIpRotation', function() {
      it('should call containerProjectsLocationsClustersStartIpRotation successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersStartIpRotation
        //instance.containerProjectsLocationsClustersStartIpRotation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersUpdateMaster', function() {
      it('should call containerProjectsLocationsClustersUpdateMaster successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersUpdateMaster
        //instance.containerProjectsLocationsClustersUpdateMaster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsClustersWellKnownGetOpenidConfiguration', function() {
      it('should call containerProjectsLocationsClustersWellKnownGetOpenidConfiguration successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsClustersWellKnownGetOpenidConfiguration
        //instance.containerProjectsLocationsClustersWellKnownGetOpenidConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsGetServerConfig', function() {
      it('should call containerProjectsLocationsGetServerConfig successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsGetServerConfig
        //instance.containerProjectsLocationsGetServerConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsOperationsCancel', function() {
      it('should call containerProjectsLocationsOperationsCancel successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsOperationsCancel
        //instance.containerProjectsLocationsOperationsCancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsOperationsGet', function() {
      it('should call containerProjectsLocationsOperationsGet successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsOperationsGet
        //instance.containerProjectsLocationsOperationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsLocationsOperationsList', function() {
      it('should call containerProjectsLocationsOperationsList successfully', function(done) {
        //uncomment below and update the code to test containerProjectsLocationsOperationsList
        //instance.containerProjectsLocationsOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersAddons', function() {
      it('should call containerProjectsZonesClustersAddons successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersAddons
        //instance.containerProjectsZonesClustersAddons(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersCompleteIpRotation', function() {
      it('should call containerProjectsZonesClustersCompleteIpRotation successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersCompleteIpRotation
        //instance.containerProjectsZonesClustersCompleteIpRotation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersCreate', function() {
      it('should call containerProjectsZonesClustersCreate successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersCreate
        //instance.containerProjectsZonesClustersCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersDelete', function() {
      it('should call containerProjectsZonesClustersDelete successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersDelete
        //instance.containerProjectsZonesClustersDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersGet', function() {
      it('should call containerProjectsZonesClustersGet successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersGet
        //instance.containerProjectsZonesClustersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersLegacyAbac', function() {
      it('should call containerProjectsZonesClustersLegacyAbac successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersLegacyAbac
        //instance.containerProjectsZonesClustersLegacyAbac(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersList', function() {
      it('should call containerProjectsZonesClustersList successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersList
        //instance.containerProjectsZonesClustersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersLocations', function() {
      it('should call containerProjectsZonesClustersLocations successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersLocations
        //instance.containerProjectsZonesClustersLocations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersLogging', function() {
      it('should call containerProjectsZonesClustersLogging successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersLogging
        //instance.containerProjectsZonesClustersLogging(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersMaster', function() {
      it('should call containerProjectsZonesClustersMaster successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersMaster
        //instance.containerProjectsZonesClustersMaster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersMonitoring', function() {
      it('should call containerProjectsZonesClustersMonitoring successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersMonitoring
        //instance.containerProjectsZonesClustersMonitoring(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersNodePoolsAutoscaling', function() {
      it('should call containerProjectsZonesClustersNodePoolsAutoscaling successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersNodePoolsAutoscaling
        //instance.containerProjectsZonesClustersNodePoolsAutoscaling(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersNodePoolsCreate', function() {
      it('should call containerProjectsZonesClustersNodePoolsCreate successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersNodePoolsCreate
        //instance.containerProjectsZonesClustersNodePoolsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersNodePoolsDelete', function() {
      it('should call containerProjectsZonesClustersNodePoolsDelete successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersNodePoolsDelete
        //instance.containerProjectsZonesClustersNodePoolsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersNodePoolsGet', function() {
      it('should call containerProjectsZonesClustersNodePoolsGet successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersNodePoolsGet
        //instance.containerProjectsZonesClustersNodePoolsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersNodePoolsList', function() {
      it('should call containerProjectsZonesClustersNodePoolsList successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersNodePoolsList
        //instance.containerProjectsZonesClustersNodePoolsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersNodePoolsRollback', function() {
      it('should call containerProjectsZonesClustersNodePoolsRollback successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersNodePoolsRollback
        //instance.containerProjectsZonesClustersNodePoolsRollback(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersNodePoolsSetManagement', function() {
      it('should call containerProjectsZonesClustersNodePoolsSetManagement successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersNodePoolsSetManagement
        //instance.containerProjectsZonesClustersNodePoolsSetManagement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersNodePoolsSetSize', function() {
      it('should call containerProjectsZonesClustersNodePoolsSetSize successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersNodePoolsSetSize
        //instance.containerProjectsZonesClustersNodePoolsSetSize(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersNodePoolsUpdate', function() {
      it('should call containerProjectsZonesClustersNodePoolsUpdate successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersNodePoolsUpdate
        //instance.containerProjectsZonesClustersNodePoolsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersResourceLabels', function() {
      it('should call containerProjectsZonesClustersResourceLabels successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersResourceLabels
        //instance.containerProjectsZonesClustersResourceLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersSetMaintenancePolicy', function() {
      it('should call containerProjectsZonesClustersSetMaintenancePolicy successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersSetMaintenancePolicy
        //instance.containerProjectsZonesClustersSetMaintenancePolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersSetMasterAuth', function() {
      it('should call containerProjectsZonesClustersSetMasterAuth successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersSetMasterAuth
        //instance.containerProjectsZonesClustersSetMasterAuth(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersSetNetworkPolicy', function() {
      it('should call containerProjectsZonesClustersSetNetworkPolicy successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersSetNetworkPolicy
        //instance.containerProjectsZonesClustersSetNetworkPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersStartIpRotation', function() {
      it('should call containerProjectsZonesClustersStartIpRotation successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersStartIpRotation
        //instance.containerProjectsZonesClustersStartIpRotation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesClustersUpdate', function() {
      it('should call containerProjectsZonesClustersUpdate successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesClustersUpdate
        //instance.containerProjectsZonesClustersUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesGetServerconfig', function() {
      it('should call containerProjectsZonesGetServerconfig successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesGetServerconfig
        //instance.containerProjectsZonesGetServerconfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesOperationsCancel', function() {
      it('should call containerProjectsZonesOperationsCancel successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesOperationsCancel
        //instance.containerProjectsZonesOperationsCancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesOperationsGet', function() {
      it('should call containerProjectsZonesOperationsGet successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesOperationsGet
        //instance.containerProjectsZonesOperationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containerProjectsZonesOperationsList', function() {
      it('should call containerProjectsZonesOperationsList successfully', function(done) {
        //uncomment below and update the code to test containerProjectsZonesOperationsList
        //instance.containerProjectsZonesOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
