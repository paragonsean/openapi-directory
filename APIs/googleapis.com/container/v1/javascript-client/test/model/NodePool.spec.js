/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KubernetesEngineApi);
  }
}(this, function(expect, KubernetesEngineApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KubernetesEngineApi.NodePool();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NodePool', function() {
    it('should create an instance of NodePool', function() {
      // uncomment below and update the code to test NodePool
      //var instance = new KubernetesEngineApi.NodePool();
      //expect(instance).to.be.a(KubernetesEngineApi.NodePool);
    });

    it('should have the property autoscaling (base name: "autoscaling")', function() {
      // uncomment below and update the code to test the property autoscaling
      //var instance = new KubernetesEngineApi.NodePool();
      //expect(instance).to.be();
    });

    it('should have the property bestEffortProvisioning (base name: "bestEffortProvisioning")', function() {
      // uncomment below and update the code to test the property bestEffortProvisioning
      //var instance = new KubernetesEngineApi.NodePool();
      //expect(instance).to.be();
    });

    it('should have the property conditions (base name: "conditions")', function() {
      // uncomment below and update the code to test the property conditions
      //var instance = new KubernetesEngineApi.NodePool();
      //expect(instance).to.be();
    });

    it('should have the property config (base name: "config")', function() {
      // uncomment below and update the code to test the property config
      //var instance = new KubernetesEngineApi.NodePool();
      //expect(instance).to.be();
    });

    it('should have the property etag (base name: "etag")', function() {
      // uncomment below and update the code to test the property etag
      //var instance = new KubernetesEngineApi.NodePool();
      //expect(instance).to.be();
    });

    it('should have the property initialNodeCount (base name: "initialNodeCount")', function() {
      // uncomment below and update the code to test the property initialNodeCount
      //var instance = new KubernetesEngineApi.NodePool();
      //expect(instance).to.be();
    });

    it('should have the property instanceGroupUrls (base name: "instanceGroupUrls")', function() {
      // uncomment below and update the code to test the property instanceGroupUrls
      //var instance = new KubernetesEngineApi.NodePool();
      //expect(instance).to.be();
    });

    it('should have the property locations (base name: "locations")', function() {
      // uncomment below and update the code to test the property locations
      //var instance = new KubernetesEngineApi.NodePool();
      //expect(instance).to.be();
    });

    it('should have the property management (base name: "management")', function() {
      // uncomment below and update the code to test the property management
      //var instance = new KubernetesEngineApi.NodePool();
      //expect(instance).to.be();
    });

    it('should have the property maxPodsConstraint (base name: "maxPodsConstraint")', function() {
      // uncomment below and update the code to test the property maxPodsConstraint
      //var instance = new KubernetesEngineApi.NodePool();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new KubernetesEngineApi.NodePool();
      //expect(instance).to.be();
    });

    it('should have the property networkConfig (base name: "networkConfig")', function() {
      // uncomment below and update the code to test the property networkConfig
      //var instance = new KubernetesEngineApi.NodePool();
      //expect(instance).to.be();
    });

    it('should have the property placementPolicy (base name: "placementPolicy")', function() {
      // uncomment below and update the code to test the property placementPolicy
      //var instance = new KubernetesEngineApi.NodePool();
      //expect(instance).to.be();
    });

    it('should have the property podIpv4CidrSize (base name: "podIpv4CidrSize")', function() {
      // uncomment below and update the code to test the property podIpv4CidrSize
      //var instance = new KubernetesEngineApi.NodePool();
      //expect(instance).to.be();
    });

    it('should have the property queuedProvisioning (base name: "queuedProvisioning")', function() {
      // uncomment below and update the code to test the property queuedProvisioning
      //var instance = new KubernetesEngineApi.NodePool();
      //expect(instance).to.be();
    });

    it('should have the property selfLink (base name: "selfLink")', function() {
      // uncomment below and update the code to test the property selfLink
      //var instance = new KubernetesEngineApi.NodePool();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new KubernetesEngineApi.NodePool();
      //expect(instance).to.be();
    });

    it('should have the property statusMessage (base name: "statusMessage")', function() {
      // uncomment below and update the code to test the property statusMessage
      //var instance = new KubernetesEngineApi.NodePool();
      //expect(instance).to.be();
    });

    it('should have the property updateInfo (base name: "updateInfo")', function() {
      // uncomment below and update the code to test the property updateInfo
      //var instance = new KubernetesEngineApi.NodePool();
      //expect(instance).to.be();
    });

    it('should have the property upgradeSettings (base name: "upgradeSettings")', function() {
      // uncomment below and update the code to test the property upgradeSettings
      //var instance = new KubernetesEngineApi.NodePool();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new KubernetesEngineApi.NodePool();
      //expect(instance).to.be();
    });

  });

}));
