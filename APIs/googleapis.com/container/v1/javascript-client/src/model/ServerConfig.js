/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReleaseChannelConfig from './ReleaseChannelConfig';

/**
 * The ServerConfig model module.
 * @module model/ServerConfig
 * @version v1
 */
class ServerConfig {
    /**
     * Constructs a new <code>ServerConfig</code>.
     * Kubernetes Engine service configuration.
     * @alias module:model/ServerConfig
     */
    constructor() { 
        
        ServerConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServerConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServerConfig} obj Optional instance to populate.
     * @return {module:model/ServerConfig} The populated <code>ServerConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServerConfig();

            if (data.hasOwnProperty('channels')) {
                obj['channels'] = ApiClient.convertToType(data['channels'], [ReleaseChannelConfig]);
            }
            if (data.hasOwnProperty('defaultClusterVersion')) {
                obj['defaultClusterVersion'] = ApiClient.convertToType(data['defaultClusterVersion'], 'String');
            }
            if (data.hasOwnProperty('defaultImageType')) {
                obj['defaultImageType'] = ApiClient.convertToType(data['defaultImageType'], 'String');
            }
            if (data.hasOwnProperty('validImageTypes')) {
                obj['validImageTypes'] = ApiClient.convertToType(data['validImageTypes'], ['String']);
            }
            if (data.hasOwnProperty('validMasterVersions')) {
                obj['validMasterVersions'] = ApiClient.convertToType(data['validMasterVersions'], ['String']);
            }
            if (data.hasOwnProperty('validNodeVersions')) {
                obj['validNodeVersions'] = ApiClient.convertToType(data['validNodeVersions'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServerConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServerConfig</code>.
     */
    static validateJSON(data) {
        if (data['channels']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['channels'])) {
                throw new Error("Expected the field `channels` to be an array in the JSON data but got " + data['channels']);
            }
            // validate the optional field `channels` (array)
            for (const item of data['channels']) {
                ReleaseChannelConfig.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['defaultClusterVersion'] && !(typeof data['defaultClusterVersion'] === 'string' || data['defaultClusterVersion'] instanceof String)) {
            throw new Error("Expected the field `defaultClusterVersion` to be a primitive type in the JSON string but got " + data['defaultClusterVersion']);
        }
        // ensure the json data is a string
        if (data['defaultImageType'] && !(typeof data['defaultImageType'] === 'string' || data['defaultImageType'] instanceof String)) {
            throw new Error("Expected the field `defaultImageType` to be a primitive type in the JSON string but got " + data['defaultImageType']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['validImageTypes'])) {
            throw new Error("Expected the field `validImageTypes` to be an array in the JSON data but got " + data['validImageTypes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['validMasterVersions'])) {
            throw new Error("Expected the field `validMasterVersions` to be an array in the JSON data but got " + data['validMasterVersions']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['validNodeVersions'])) {
            throw new Error("Expected the field `validNodeVersions` to be an array in the JSON data but got " + data['validNodeVersions']);
        }

        return true;
    }


}



/**
 * List of release channel configurations.
 * @member {Array.<module:model/ReleaseChannelConfig>} channels
 */
ServerConfig.prototype['channels'] = undefined;

/**
 * Version of Kubernetes the service deploys by default.
 * @member {String} defaultClusterVersion
 */
ServerConfig.prototype['defaultClusterVersion'] = undefined;

/**
 * Default image type.
 * @member {String} defaultImageType
 */
ServerConfig.prototype['defaultImageType'] = undefined;

/**
 * List of valid image types.
 * @member {Array.<String>} validImageTypes
 */
ServerConfig.prototype['validImageTypes'] = undefined;

/**
 * List of valid master versions, in descending order.
 * @member {Array.<String>} validMasterVersions
 */
ServerConfig.prototype['validMasterVersions'] = undefined;

/**
 * List of valid node upgrade target versions, in descending order.
 * @member {Array.<String>} validNodeVersions
 */
ServerConfig.prototype['validNodeVersions'] = undefined;






export default ServerConfig;

