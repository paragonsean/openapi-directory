/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReleaseChannelConfig model module.
 * @module model/ReleaseChannelConfig
 * @version v1
 */
class ReleaseChannelConfig {
    /**
     * Constructs a new <code>ReleaseChannelConfig</code>.
     * ReleaseChannelConfig exposes configuration for a release channel.
     * @alias module:model/ReleaseChannelConfig
     */
    constructor() { 
        
        ReleaseChannelConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReleaseChannelConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReleaseChannelConfig} obj Optional instance to populate.
     * @return {module:model/ReleaseChannelConfig} The populated <code>ReleaseChannelConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReleaseChannelConfig();

            if (data.hasOwnProperty('channel')) {
                obj['channel'] = ApiClient.convertToType(data['channel'], 'String');
            }
            if (data.hasOwnProperty('defaultVersion')) {
                obj['defaultVersion'] = ApiClient.convertToType(data['defaultVersion'], 'String');
            }
            if (data.hasOwnProperty('validVersions')) {
                obj['validVersions'] = ApiClient.convertToType(data['validVersions'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReleaseChannelConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReleaseChannelConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['channel'] && !(typeof data['channel'] === 'string' || data['channel'] instanceof String)) {
            throw new Error("Expected the field `channel` to be a primitive type in the JSON string but got " + data['channel']);
        }
        // ensure the json data is a string
        if (data['defaultVersion'] && !(typeof data['defaultVersion'] === 'string' || data['defaultVersion'] instanceof String)) {
            throw new Error("Expected the field `defaultVersion` to be a primitive type in the JSON string but got " + data['defaultVersion']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['validVersions'])) {
            throw new Error("Expected the field `validVersions` to be an array in the JSON data but got " + data['validVersions']);
        }

        return true;
    }


}



/**
 * The release channel this configuration applies to.
 * @member {module:model/ReleaseChannelConfig.ChannelEnum} channel
 */
ReleaseChannelConfig.prototype['channel'] = undefined;

/**
 * The default version for newly created clusters on the channel.
 * @member {String} defaultVersion
 */
ReleaseChannelConfig.prototype['defaultVersion'] = undefined;

/**
 * List of valid versions for the channel.
 * @member {Array.<String>} validVersions
 */
ReleaseChannelConfig.prototype['validVersions'] = undefined;





/**
 * Allowed values for the <code>channel</code> property.
 * @enum {String}
 * @readonly
 */
ReleaseChannelConfig['ChannelEnum'] = {

    /**
     * value: "UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "UNSPECIFIED",

    /**
     * value: "RAPID"
     * @const
     */
    "RAPID": "RAPID",

    /**
     * value: "REGULAR"
     * @const
     */
    "REGULAR": "REGULAR",

    /**
     * value: "STABLE"
     * @const
     */
    "STABLE": "STABLE"
};



export default ReleaseChannelConfig;

