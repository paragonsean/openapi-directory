/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OperationProgress from './OperationProgress';
import Status from './Status';
import StatusCondition from './StatusCondition';

/**
 * The Operation model module.
 * @module model/Operation
 * @version v1
 */
class Operation {
    /**
     * Constructs a new <code>Operation</code>.
     * This operation resource represents operations that may have happened or are happening on the cluster. All fields are output only.
     * @alias module:model/Operation
     */
    constructor() { 
        
        Operation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Operation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Operation} obj Optional instance to populate.
     * @return {module:model/Operation} The populated <code>Operation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Operation();

            if (data.hasOwnProperty('clusterConditions')) {
                obj['clusterConditions'] = ApiClient.convertToType(data['clusterConditions'], [StatusCondition]);
            }
            if (data.hasOwnProperty('detail')) {
                obj['detail'] = ApiClient.convertToType(data['detail'], 'String');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = Status.constructFromObject(data['error']);
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('nodepoolConditions')) {
                obj['nodepoolConditions'] = ApiClient.convertToType(data['nodepoolConditions'], [StatusCondition]);
            }
            if (data.hasOwnProperty('operationType')) {
                obj['operationType'] = ApiClient.convertToType(data['operationType'], 'String');
            }
            if (data.hasOwnProperty('progress')) {
                obj['progress'] = OperationProgress.constructFromObject(data['progress']);
            }
            if (data.hasOwnProperty('selfLink')) {
                obj['selfLink'] = ApiClient.convertToType(data['selfLink'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('statusMessage')) {
                obj['statusMessage'] = ApiClient.convertToType(data['statusMessage'], 'String');
            }
            if (data.hasOwnProperty('targetLink')) {
                obj['targetLink'] = ApiClient.convertToType(data['targetLink'], 'String');
            }
            if (data.hasOwnProperty('zone')) {
                obj['zone'] = ApiClient.convertToType(data['zone'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Operation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Operation</code>.
     */
    static validateJSON(data) {
        if (data['clusterConditions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['clusterConditions'])) {
                throw new Error("Expected the field `clusterConditions` to be an array in the JSON data but got " + data['clusterConditions']);
            }
            // validate the optional field `clusterConditions` (array)
            for (const item of data['clusterConditions']) {
                StatusCondition.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['detail'] && !(typeof data['detail'] === 'string' || data['detail'] instanceof String)) {
            throw new Error("Expected the field `detail` to be a primitive type in the JSON string but got " + data['detail']);
        }
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        // validate the optional field `error`
        if (data['error']) { // data not null
          Status.validateJSON(data['error']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['nodepoolConditions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['nodepoolConditions'])) {
                throw new Error("Expected the field `nodepoolConditions` to be an array in the JSON data but got " + data['nodepoolConditions']);
            }
            // validate the optional field `nodepoolConditions` (array)
            for (const item of data['nodepoolConditions']) {
                StatusCondition.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['operationType'] && !(typeof data['operationType'] === 'string' || data['operationType'] instanceof String)) {
            throw new Error("Expected the field `operationType` to be a primitive type in the JSON string but got " + data['operationType']);
        }
        // validate the optional field `progress`
        if (data['progress']) { // data not null
          OperationProgress.validateJSON(data['progress']);
        }
        // ensure the json data is a string
        if (data['selfLink'] && !(typeof data['selfLink'] === 'string' || data['selfLink'] instanceof String)) {
            throw new Error("Expected the field `selfLink` to be a primitive type in the JSON string but got " + data['selfLink']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['statusMessage'] && !(typeof data['statusMessage'] === 'string' || data['statusMessage'] instanceof String)) {
            throw new Error("Expected the field `statusMessage` to be a primitive type in the JSON string but got " + data['statusMessage']);
        }
        // ensure the json data is a string
        if (data['targetLink'] && !(typeof data['targetLink'] === 'string' || data['targetLink'] instanceof String)) {
            throw new Error("Expected the field `targetLink` to be a primitive type in the JSON string but got " + data['targetLink']);
        }
        // ensure the json data is a string
        if (data['zone'] && !(typeof data['zone'] === 'string' || data['zone'] instanceof String)) {
            throw new Error("Expected the field `zone` to be a primitive type in the JSON string but got " + data['zone']);
        }

        return true;
    }


}



/**
 * Which conditions caused the current cluster state. Deprecated. Use field error instead.
 * @member {Array.<module:model/StatusCondition>} clusterConditions
 */
Operation.prototype['clusterConditions'] = undefined;

/**
 * Detailed operation progress, if available.
 * @member {String} detail
 */
Operation.prototype['detail'] = undefined;

/**
 * [Output only] The time the operation completed, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
 * @member {String} endTime
 */
Operation.prototype['endTime'] = undefined;

/**
 * @member {module:model/Status} error
 */
Operation.prototype['error'] = undefined;

/**
 * [Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) or [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) in which the cluster resides.
 * @member {String} location
 */
Operation.prototype['location'] = undefined;

/**
 * The server-assigned ID for the operation.
 * @member {String} name
 */
Operation.prototype['name'] = undefined;

/**
 * Which conditions caused the current node pool state. Deprecated. Use field error instead.
 * @member {Array.<module:model/StatusCondition>} nodepoolConditions
 */
Operation.prototype['nodepoolConditions'] = undefined;

/**
 * The operation type.
 * @member {module:model/Operation.OperationTypeEnum} operationType
 */
Operation.prototype['operationType'] = undefined;

/**
 * @member {module:model/OperationProgress} progress
 */
Operation.prototype['progress'] = undefined;

/**
 * Server-defined URI for the operation. Example: `https://container.googleapis.com/v1alpha1/projects/123/locations/us-central1/operations/operation-123`.
 * @member {String} selfLink
 */
Operation.prototype['selfLink'] = undefined;

/**
 * [Output only] The time the operation started, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
 * @member {String} startTime
 */
Operation.prototype['startTime'] = undefined;

/**
 * The current status of the operation.
 * @member {module:model/Operation.StatusEnum} status
 */
Operation.prototype['status'] = undefined;

/**
 * Output only. If an error has occurred, a textual description of the error. Deprecated. Use the field error instead.
 * @member {String} statusMessage
 */
Operation.prototype['statusMessage'] = undefined;

/**
 * Server-defined URI for the target of the operation. The format of this is a URI to the resource being modified (such as a cluster, node pool, or node). For node pool repairs, there may be multiple nodes being repaired, but only one will be the target. Examples: - ## `https://container.googleapis.com/v1/projects/123/locations/us-central1/clusters/my-cluster` ## `https://container.googleapis.com/v1/projects/123/zones/us-central1-c/clusters/my-cluster/nodePools/my-np` `https://container.googleapis.com/v1/projects/123/zones/us-central1-c/clusters/my-cluster/nodePools/my-np/node/my-node`
 * @member {String} targetLink
 */
Operation.prototype['targetLink'] = undefined;

/**
 * The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the operation is taking place. This field is deprecated, use location instead.
 * @member {String} zone
 */
Operation.prototype['zone'] = undefined;





/**
 * Allowed values for the <code>operationType</code> property.
 * @enum {String}
 * @readonly
 */
Operation['OperationTypeEnum'] = {

    /**
     * value: "TYPE_UNSPECIFIED"
     * @const
     */
    "TYPE_UNSPECIFIED": "TYPE_UNSPECIFIED",

    /**
     * value: "CREATE_CLUSTER"
     * @const
     */
    "CREATE_CLUSTER": "CREATE_CLUSTER",

    /**
     * value: "DELETE_CLUSTER"
     * @const
     */
    "DELETE_CLUSTER": "DELETE_CLUSTER",

    /**
     * value: "UPGRADE_MASTER"
     * @const
     */
    "UPGRADE_MASTER": "UPGRADE_MASTER",

    /**
     * value: "UPGRADE_NODES"
     * @const
     */
    "UPGRADE_NODES": "UPGRADE_NODES",

    /**
     * value: "REPAIR_CLUSTER"
     * @const
     */
    "REPAIR_CLUSTER": "REPAIR_CLUSTER",

    /**
     * value: "UPDATE_CLUSTER"
     * @const
     */
    "UPDATE_CLUSTER": "UPDATE_CLUSTER",

    /**
     * value: "CREATE_NODE_POOL"
     * @const
     */
    "CREATE_NODE_POOL": "CREATE_NODE_POOL",

    /**
     * value: "DELETE_NODE_POOL"
     * @const
     */
    "DELETE_NODE_POOL": "DELETE_NODE_POOL",

    /**
     * value: "SET_NODE_POOL_MANAGEMENT"
     * @const
     */
    "SET_NODE_POOL_MANAGEMENT": "SET_NODE_POOL_MANAGEMENT",

    /**
     * value: "AUTO_REPAIR_NODES"
     * @const
     */
    "AUTO_REPAIR_NODES": "AUTO_REPAIR_NODES",

    /**
     * value: "AUTO_UPGRADE_NODES"
     * @const
     */
    "AUTO_UPGRADE_NODES": "AUTO_UPGRADE_NODES",

    /**
     * value: "SET_LABELS"
     * @const
     */
    "SET_LABELS": "SET_LABELS",

    /**
     * value: "SET_MASTER_AUTH"
     * @const
     */
    "SET_MASTER_AUTH": "SET_MASTER_AUTH",

    /**
     * value: "SET_NODE_POOL_SIZE"
     * @const
     */
    "SET_NODE_POOL_SIZE": "SET_NODE_POOL_SIZE",

    /**
     * value: "SET_NETWORK_POLICY"
     * @const
     */
    "SET_NETWORK_POLICY": "SET_NETWORK_POLICY",

    /**
     * value: "SET_MAINTENANCE_POLICY"
     * @const
     */
    "SET_MAINTENANCE_POLICY": "SET_MAINTENANCE_POLICY",

    /**
     * value: "RESIZE_CLUSTER"
     * @const
     */
    "RESIZE_CLUSTER": "RESIZE_CLUSTER",

    /**
     * value: "FLEET_FEATURE_UPGRADE"
     * @const
     */
    "FLEET_FEATURE_UPGRADE": "FLEET_FEATURE_UPGRADE"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
Operation['StatusEnum'] = {

    /**
     * value: "STATUS_UNSPECIFIED"
     * @const
     */
    "STATUS_UNSPECIFIED": "STATUS_UNSPECIFIED",

    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",

    /**
     * value: "RUNNING"
     * @const
     */
    "RUNNING": "RUNNING",

    /**
     * value: "DONE"
     * @const
     */
    "DONE": "DONE",

    /**
     * value: "ABORTING"
     * @const
     */
    "ABORTING": "ABORTING"
};



export default Operation;

