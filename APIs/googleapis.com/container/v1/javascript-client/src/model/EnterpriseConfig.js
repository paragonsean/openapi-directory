/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EnterpriseConfig model module.
 * @module model/EnterpriseConfig
 * @version v1
 */
class EnterpriseConfig {
    /**
     * Constructs a new <code>EnterpriseConfig</code>.
     * EnterpriseConfig is the cluster enterprise configuration.
     * @alias module:model/EnterpriseConfig
     */
    constructor() { 
        
        EnterpriseConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EnterpriseConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnterpriseConfig} obj Optional instance to populate.
     * @return {module:model/EnterpriseConfig} The populated <code>EnterpriseConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnterpriseConfig();

            if (data.hasOwnProperty('clusterTier')) {
                obj['clusterTier'] = ApiClient.convertToType(data['clusterTier'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnterpriseConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnterpriseConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['clusterTier'] && !(typeof data['clusterTier'] === 'string' || data['clusterTier'] instanceof String)) {
            throw new Error("Expected the field `clusterTier` to be a primitive type in the JSON string but got " + data['clusterTier']);
        }

        return true;
    }


}



/**
 * Output only. [Output only] cluster_tier specifies the premium tier of the cluster.
 * @member {module:model/EnterpriseConfig.ClusterTierEnum} clusterTier
 */
EnterpriseConfig.prototype['clusterTier'] = undefined;





/**
 * Allowed values for the <code>clusterTier</code> property.
 * @enum {String}
 * @readonly
 */
EnterpriseConfig['ClusterTierEnum'] = {

    /**
     * value: "CLUSTER_TIER_UNSPECIFIED"
     * @const
     */
    "CLUSTER_TIER_UNSPECIFIED": "CLUSTER_TIER_UNSPECIFIED",

    /**
     * value: "STANDARD"
     * @const
     */
    "STANDARD": "STANDARD",

    /**
     * value: "ENTERPRISE"
     * @const
     */
    "ENTERPRISE": "ENTERPRISE"
};



export default EnterpriseConfig;

