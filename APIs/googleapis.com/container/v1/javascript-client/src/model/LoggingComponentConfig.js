/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LoggingComponentConfig model module.
 * @module model/LoggingComponentConfig
 * @version v1
 */
class LoggingComponentConfig {
    /**
     * Constructs a new <code>LoggingComponentConfig</code>.
     * LoggingComponentConfig is cluster logging component configuration.
     * @alias module:model/LoggingComponentConfig
     */
    constructor() { 
        
        LoggingComponentConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LoggingComponentConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LoggingComponentConfig} obj Optional instance to populate.
     * @return {module:model/LoggingComponentConfig} The populated <code>LoggingComponentConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoggingComponentConfig();

            if (data.hasOwnProperty('enableComponents')) {
                obj['enableComponents'] = ApiClient.convertToType(data['enableComponents'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LoggingComponentConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LoggingComponentConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['enableComponents'])) {
            throw new Error("Expected the field `enableComponents` to be an array in the JSON data but got " + data['enableComponents']);
        }

        return true;
    }


}



/**
 * Select components to collect logs. An empty set would disable all logging.
 * @member {Array.<module:model/LoggingComponentConfig.EnableComponentsEnum>} enableComponents
 */
LoggingComponentConfig.prototype['enableComponents'] = undefined;





/**
 * Allowed values for the <code>enableComponents</code> property.
 * @enum {String}
 * @readonly
 */
LoggingComponentConfig['EnableComponentsEnum'] = {

    /**
     * value: "COMPONENT_UNSPECIFIED"
     * @const
     */
    "COMPONENT_UNSPECIFIED": "COMPONENT_UNSPECIFIED",

    /**
     * value: "SYSTEM_COMPONENTS"
     * @const
     */
    "SYSTEM_COMPONENTS": "SYSTEM_COMPONENTS",

    /**
     * value: "WORKLOADS"
     * @const
     */
    "WORKLOADS": "WORKLOADS",

    /**
     * value: "APISERVER"
     * @const
     */
    "APISERVER": "APISERVER",

    /**
     * value: "SCHEDULER"
     * @const
     */
    "SCHEDULER": "SCHEDULER",

    /**
     * value: "CONTROLLER_MANAGER"
     * @const
     */
    "CONTROLLER_MANAGER": "CONTROLLER_MANAGER"
};



export default LoggingComponentConfig;

