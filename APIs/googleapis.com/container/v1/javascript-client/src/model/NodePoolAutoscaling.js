/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NodePoolAutoscaling model module.
 * @module model/NodePoolAutoscaling
 * @version v1
 */
class NodePoolAutoscaling {
    /**
     * Constructs a new <code>NodePoolAutoscaling</code>.
     * NodePoolAutoscaling contains information required by cluster autoscaler to adjust the size of the node pool to the current cluster usage.
     * @alias module:model/NodePoolAutoscaling
     */
    constructor() { 
        
        NodePoolAutoscaling.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NodePoolAutoscaling</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NodePoolAutoscaling} obj Optional instance to populate.
     * @return {module:model/NodePoolAutoscaling} The populated <code>NodePoolAutoscaling</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NodePoolAutoscaling();

            if (data.hasOwnProperty('autoprovisioned')) {
                obj['autoprovisioned'] = ApiClient.convertToType(data['autoprovisioned'], 'Boolean');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('locationPolicy')) {
                obj['locationPolicy'] = ApiClient.convertToType(data['locationPolicy'], 'String');
            }
            if (data.hasOwnProperty('maxNodeCount')) {
                obj['maxNodeCount'] = ApiClient.convertToType(data['maxNodeCount'], 'Number');
            }
            if (data.hasOwnProperty('minNodeCount')) {
                obj['minNodeCount'] = ApiClient.convertToType(data['minNodeCount'], 'Number');
            }
            if (data.hasOwnProperty('totalMaxNodeCount')) {
                obj['totalMaxNodeCount'] = ApiClient.convertToType(data['totalMaxNodeCount'], 'Number');
            }
            if (data.hasOwnProperty('totalMinNodeCount')) {
                obj['totalMinNodeCount'] = ApiClient.convertToType(data['totalMinNodeCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NodePoolAutoscaling</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NodePoolAutoscaling</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['locationPolicy'] && !(typeof data['locationPolicy'] === 'string' || data['locationPolicy'] instanceof String)) {
            throw new Error("Expected the field `locationPolicy` to be a primitive type in the JSON string but got " + data['locationPolicy']);
        }

        return true;
    }


}



/**
 * Can this node pool be deleted automatically.
 * @member {Boolean} autoprovisioned
 */
NodePoolAutoscaling.prototype['autoprovisioned'] = undefined;

/**
 * Is autoscaling enabled for this node pool.
 * @member {Boolean} enabled
 */
NodePoolAutoscaling.prototype['enabled'] = undefined;

/**
 * Location policy used when scaling up a nodepool.
 * @member {module:model/NodePoolAutoscaling.LocationPolicyEnum} locationPolicy
 */
NodePoolAutoscaling.prototype['locationPolicy'] = undefined;

/**
 * Maximum number of nodes for one location in the NodePool. Must be >= min_node_count. There has to be enough quota to scale up the cluster.
 * @member {Number} maxNodeCount
 */
NodePoolAutoscaling.prototype['maxNodeCount'] = undefined;

/**
 * Minimum number of nodes for one location in the NodePool. Must be >= 1 and <= max_node_count.
 * @member {Number} minNodeCount
 */
NodePoolAutoscaling.prototype['minNodeCount'] = undefined;

/**
 * Maximum number of nodes in the node pool. Must be greater than total_min_node_count. There has to be enough quota to scale up the cluster. The total_*_node_count fields are mutually exclusive with the *_node_count fields.
 * @member {Number} totalMaxNodeCount
 */
NodePoolAutoscaling.prototype['totalMaxNodeCount'] = undefined;

/**
 * Minimum number of nodes in the node pool. Must be greater than 1 less than total_max_node_count. The total_*_node_count fields are mutually exclusive with the *_node_count fields.
 * @member {Number} totalMinNodeCount
 */
NodePoolAutoscaling.prototype['totalMinNodeCount'] = undefined;





/**
 * Allowed values for the <code>locationPolicy</code> property.
 * @enum {String}
 * @readonly
 */
NodePoolAutoscaling['LocationPolicyEnum'] = {

    /**
     * value: "LOCATION_POLICY_UNSPECIFIED"
     * @const
     */
    "LOCATION_POLICY_UNSPECIFIED": "LOCATION_POLICY_UNSPECIFIED",

    /**
     * value: "BALANCED"
     * @const
     */
    "BALANCED": "BALANCED",

    /**
     * value: "ANY"
     * @const
     */
    "ANY": "ANY"
};



export default NodePoolAutoscaling;

