/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AutoUpgradeOptions model module.
 * @module model/AutoUpgradeOptions
 * @version v1
 */
class AutoUpgradeOptions {
    /**
     * Constructs a new <code>AutoUpgradeOptions</code>.
     * AutoUpgradeOptions defines the set of options for the user to control how the Auto Upgrades will proceed.
     * @alias module:model/AutoUpgradeOptions
     */
    constructor() { 
        
        AutoUpgradeOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AutoUpgradeOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutoUpgradeOptions} obj Optional instance to populate.
     * @return {module:model/AutoUpgradeOptions} The populated <code>AutoUpgradeOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutoUpgradeOptions();

            if (data.hasOwnProperty('autoUpgradeStartTime')) {
                obj['autoUpgradeStartTime'] = ApiClient.convertToType(data['autoUpgradeStartTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AutoUpgradeOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AutoUpgradeOptions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['autoUpgradeStartTime'] && !(typeof data['autoUpgradeStartTime'] === 'string' || data['autoUpgradeStartTime'] instanceof String)) {
            throw new Error("Expected the field `autoUpgradeStartTime` to be a primitive type in the JSON string but got " + data['autoUpgradeStartTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }

        return true;
    }


}



/**
 * [Output only] This field is set when upgrades are about to commence with the approximate start time for the upgrades, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
 * @member {String} autoUpgradeStartTime
 */
AutoUpgradeOptions.prototype['autoUpgradeStartTime'] = undefined;

/**
 * [Output only] This field is set when upgrades are about to commence with the description of the upgrade.
 * @member {String} description
 */
AutoUpgradeOptions.prototype['description'] = undefined;






export default AutoUpgradeOptions;

