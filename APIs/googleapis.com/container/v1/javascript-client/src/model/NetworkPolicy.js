/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NetworkPolicy model module.
 * @module model/NetworkPolicy
 * @version v1
 */
class NetworkPolicy {
    /**
     * Constructs a new <code>NetworkPolicy</code>.
     * Configuration options for the NetworkPolicy feature. https://kubernetes.io/docs/concepts/services-networking/networkpolicies/
     * @alias module:model/NetworkPolicy
     */
    constructor() { 
        
        NetworkPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NetworkPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetworkPolicy} obj Optional instance to populate.
     * @return {module:model/NetworkPolicy} The populated <code>NetworkPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworkPolicy();

            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('provider')) {
                obj['provider'] = ApiClient.convertToType(data['provider'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NetworkPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NetworkPolicy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['provider'] && !(typeof data['provider'] === 'string' || data['provider'] instanceof String)) {
            throw new Error("Expected the field `provider` to be a primitive type in the JSON string but got " + data['provider']);
        }

        return true;
    }


}



/**
 * Whether network policy is enabled on the cluster.
 * @member {Boolean} enabled
 */
NetworkPolicy.prototype['enabled'] = undefined;

/**
 * The selected network policy provider.
 * @member {module:model/NetworkPolicy.ProviderEnum} provider
 */
NetworkPolicy.prototype['provider'] = undefined;





/**
 * Allowed values for the <code>provider</code> property.
 * @enum {String}
 * @readonly
 */
NetworkPolicy['ProviderEnum'] = {

    /**
     * value: "PROVIDER_UNSPECIFIED"
     * @const
     */
    "PROVIDER_UNSPECIFIED": "PROVIDER_UNSPECIFIED",

    /**
     * value: "CALICO"
     * @const
     */
    "CALICO": "CALICO"
};



export default NetworkPolicy;

