/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResourceLimit model module.
 * @module model/ResourceLimit
 * @version v1
 */
class ResourceLimit {
    /**
     * Constructs a new <code>ResourceLimit</code>.
     * Contains information about amount of some resource in the cluster. For memory, value should be in GB.
     * @alias module:model/ResourceLimit
     */
    constructor() { 
        
        ResourceLimit.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResourceLimit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceLimit} obj Optional instance to populate.
     * @return {module:model/ResourceLimit} The populated <code>ResourceLimit</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceLimit();

            if (data.hasOwnProperty('maximum')) {
                obj['maximum'] = ApiClient.convertToType(data['maximum'], 'String');
            }
            if (data.hasOwnProperty('minimum')) {
                obj['minimum'] = ApiClient.convertToType(data['minimum'], 'String');
            }
            if (data.hasOwnProperty('resourceType')) {
                obj['resourceType'] = ApiClient.convertToType(data['resourceType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceLimit</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceLimit</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['maximum'] && !(typeof data['maximum'] === 'string' || data['maximum'] instanceof String)) {
            throw new Error("Expected the field `maximum` to be a primitive type in the JSON string but got " + data['maximum']);
        }
        // ensure the json data is a string
        if (data['minimum'] && !(typeof data['minimum'] === 'string' || data['minimum'] instanceof String)) {
            throw new Error("Expected the field `minimum` to be a primitive type in the JSON string but got " + data['minimum']);
        }
        // ensure the json data is a string
        if (data['resourceType'] && !(typeof data['resourceType'] === 'string' || data['resourceType'] instanceof String)) {
            throw new Error("Expected the field `resourceType` to be a primitive type in the JSON string but got " + data['resourceType']);
        }

        return true;
    }


}



/**
 * Maximum amount of the resource in the cluster.
 * @member {String} maximum
 */
ResourceLimit.prototype['maximum'] = undefined;

/**
 * Minimum amount of the resource in the cluster.
 * @member {String} minimum
 */
ResourceLimit.prototype['minimum'] = undefined;

/**
 * Resource name \"cpu\", \"memory\" or gpu-specific string.
 * @member {String} resourceType
 */
ResourceLimit.prototype['resourceType'] = undefined;






export default ResourceLimit;

