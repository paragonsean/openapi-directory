/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClientCertificateConfig from './ClientCertificateConfig';

/**
 * The MasterAuth model module.
 * @module model/MasterAuth
 * @version v1
 */
class MasterAuth {
    /**
     * Constructs a new <code>MasterAuth</code>.
     * The authentication information for accessing the master endpoint. Authentication can be done using HTTP basic auth or using client certificates.
     * @alias module:model/MasterAuth
     */
    constructor() { 
        
        MasterAuth.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MasterAuth</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MasterAuth} obj Optional instance to populate.
     * @return {module:model/MasterAuth} The populated <code>MasterAuth</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MasterAuth();

            if (data.hasOwnProperty('clientCertificate')) {
                obj['clientCertificate'] = ApiClient.convertToType(data['clientCertificate'], 'String');
            }
            if (data.hasOwnProperty('clientCertificateConfig')) {
                obj['clientCertificateConfig'] = ClientCertificateConfig.constructFromObject(data['clientCertificateConfig']);
            }
            if (data.hasOwnProperty('clientKey')) {
                obj['clientKey'] = ApiClient.convertToType(data['clientKey'], 'String');
            }
            if (data.hasOwnProperty('clusterCaCertificate')) {
                obj['clusterCaCertificate'] = ApiClient.convertToType(data['clusterCaCertificate'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MasterAuth</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MasterAuth</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['clientCertificate'] && !(typeof data['clientCertificate'] === 'string' || data['clientCertificate'] instanceof String)) {
            throw new Error("Expected the field `clientCertificate` to be a primitive type in the JSON string but got " + data['clientCertificate']);
        }
        // validate the optional field `clientCertificateConfig`
        if (data['clientCertificateConfig']) { // data not null
          ClientCertificateConfig.validateJSON(data['clientCertificateConfig']);
        }
        // ensure the json data is a string
        if (data['clientKey'] && !(typeof data['clientKey'] === 'string' || data['clientKey'] instanceof String)) {
            throw new Error("Expected the field `clientKey` to be a primitive type in the JSON string but got " + data['clientKey']);
        }
        // ensure the json data is a string
        if (data['clusterCaCertificate'] && !(typeof data['clusterCaCertificate'] === 'string' || data['clusterCaCertificate'] instanceof String)) {
            throw new Error("Expected the field `clusterCaCertificate` to be a primitive type in the JSON string but got " + data['clusterCaCertificate']);
        }
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}



/**
 * [Output only] Base64-encoded public certificate used by clients to authenticate to the cluster endpoint.
 * @member {String} clientCertificate
 */
MasterAuth.prototype['clientCertificate'] = undefined;

/**
 * @member {module:model/ClientCertificateConfig} clientCertificateConfig
 */
MasterAuth.prototype['clientCertificateConfig'] = undefined;

/**
 * [Output only] Base64-encoded private key used by clients to authenticate to the cluster endpoint.
 * @member {String} clientKey
 */
MasterAuth.prototype['clientKey'] = undefined;

/**
 * [Output only] Base64-encoded public certificate that is the root of trust for the cluster.
 * @member {String} clusterCaCertificate
 */
MasterAuth.prototype['clusterCaCertificate'] = undefined;

/**
 * The password to use for HTTP basic authentication to the master endpoint. Because the master endpoint is open to the Internet, you should create a strong password. If a password is provided for cluster creation, username must be non-empty. Warning: basic authentication is deprecated, and will be removed in GKE control plane versions 1.19 and newer. For a list of recommended authentication methods, see: https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication
 * @member {String} password
 */
MasterAuth.prototype['password'] = undefined;

/**
 * The username to use for HTTP basic authentication to the master endpoint. For clusters v1.6.0 and later, basic authentication can be disabled by leaving username unspecified (or setting it to the empty string). Warning: basic authentication is deprecated, and will be removed in GKE control plane versions 1.19 and newer. For a list of recommended authentication methods, see: https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication
 * @member {String} username
 */
MasterAuth.prototype['username'] = undefined;






export default MasterAuth;

