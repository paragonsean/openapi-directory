/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GPUDriverInstallationConfig from './GPUDriverInstallationConfig';
import GPUSharingConfig from './GPUSharingConfig';

/**
 * The AcceleratorConfig model module.
 * @module model/AcceleratorConfig
 * @version v1
 */
class AcceleratorConfig {
    /**
     * Constructs a new <code>AcceleratorConfig</code>.
     * AcceleratorConfig represents a Hardware Accelerator request.
     * @alias module:model/AcceleratorConfig
     */
    constructor() { 
        
        AcceleratorConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AcceleratorConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AcceleratorConfig} obj Optional instance to populate.
     * @return {module:model/AcceleratorConfig} The populated <code>AcceleratorConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AcceleratorConfig();

            if (data.hasOwnProperty('acceleratorCount')) {
                obj['acceleratorCount'] = ApiClient.convertToType(data['acceleratorCount'], 'String');
            }
            if (data.hasOwnProperty('acceleratorType')) {
                obj['acceleratorType'] = ApiClient.convertToType(data['acceleratorType'], 'String');
            }
            if (data.hasOwnProperty('gpuDriverInstallationConfig')) {
                obj['gpuDriverInstallationConfig'] = GPUDriverInstallationConfig.constructFromObject(data['gpuDriverInstallationConfig']);
            }
            if (data.hasOwnProperty('gpuPartitionSize')) {
                obj['gpuPartitionSize'] = ApiClient.convertToType(data['gpuPartitionSize'], 'String');
            }
            if (data.hasOwnProperty('gpuSharingConfig')) {
                obj['gpuSharingConfig'] = GPUSharingConfig.constructFromObject(data['gpuSharingConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AcceleratorConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AcceleratorConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['acceleratorCount'] && !(typeof data['acceleratorCount'] === 'string' || data['acceleratorCount'] instanceof String)) {
            throw new Error("Expected the field `acceleratorCount` to be a primitive type in the JSON string but got " + data['acceleratorCount']);
        }
        // ensure the json data is a string
        if (data['acceleratorType'] && !(typeof data['acceleratorType'] === 'string' || data['acceleratorType'] instanceof String)) {
            throw new Error("Expected the field `acceleratorType` to be a primitive type in the JSON string but got " + data['acceleratorType']);
        }
        // validate the optional field `gpuDriverInstallationConfig`
        if (data['gpuDriverInstallationConfig']) { // data not null
          GPUDriverInstallationConfig.validateJSON(data['gpuDriverInstallationConfig']);
        }
        // ensure the json data is a string
        if (data['gpuPartitionSize'] && !(typeof data['gpuPartitionSize'] === 'string' || data['gpuPartitionSize'] instanceof String)) {
            throw new Error("Expected the field `gpuPartitionSize` to be a primitive type in the JSON string but got " + data['gpuPartitionSize']);
        }
        // validate the optional field `gpuSharingConfig`
        if (data['gpuSharingConfig']) { // data not null
          GPUSharingConfig.validateJSON(data['gpuSharingConfig']);
        }

        return true;
    }


}



/**
 * The number of the accelerator cards exposed to an instance.
 * @member {String} acceleratorCount
 */
AcceleratorConfig.prototype['acceleratorCount'] = undefined;

/**
 * The accelerator type resource name. List of supported accelerators [here](https://cloud.google.com/compute/docs/gpus)
 * @member {String} acceleratorType
 */
AcceleratorConfig.prototype['acceleratorType'] = undefined;

/**
 * @member {module:model/GPUDriverInstallationConfig} gpuDriverInstallationConfig
 */
AcceleratorConfig.prototype['gpuDriverInstallationConfig'] = undefined;

/**
 * Size of partitions to create on the GPU. Valid values are described in the NVIDIA [mig user guide](https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).
 * @member {String} gpuPartitionSize
 */
AcceleratorConfig.prototype['gpuPartitionSize'] = undefined;

/**
 * @member {module:model/GPUSharingConfig} gpuSharingConfig
 */
AcceleratorConfig.prototype['gpuSharingConfig'] = undefined;






export default AcceleratorConfig;

