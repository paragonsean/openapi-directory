/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClusterNetworkPerformanceConfig from './ClusterNetworkPerformanceConfig';
import DNSConfig from './DNSConfig';
import DefaultSnatStatus from './DefaultSnatStatus';
import GatewayAPIConfig from './GatewayAPIConfig';
import ServiceExternalIPsConfig from './ServiceExternalIPsConfig';

/**
 * The NetworkConfig model module.
 * @module model/NetworkConfig
 * @version v1
 */
class NetworkConfig {
    /**
     * Constructs a new <code>NetworkConfig</code>.
     * NetworkConfig reports the relative names of network &amp; subnetwork.
     * @alias module:model/NetworkConfig
     */
    constructor() { 
        
        NetworkConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NetworkConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetworkConfig} obj Optional instance to populate.
     * @return {module:model/NetworkConfig} The populated <code>NetworkConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworkConfig();

            if (data.hasOwnProperty('datapathProvider')) {
                obj['datapathProvider'] = ApiClient.convertToType(data['datapathProvider'], 'String');
            }
            if (data.hasOwnProperty('defaultSnatStatus')) {
                obj['defaultSnatStatus'] = DefaultSnatStatus.constructFromObject(data['defaultSnatStatus']);
            }
            if (data.hasOwnProperty('dnsConfig')) {
                obj['dnsConfig'] = DNSConfig.constructFromObject(data['dnsConfig']);
            }
            if (data.hasOwnProperty('enableFqdnNetworkPolicy')) {
                obj['enableFqdnNetworkPolicy'] = ApiClient.convertToType(data['enableFqdnNetworkPolicy'], 'Boolean');
            }
            if (data.hasOwnProperty('enableIntraNodeVisibility')) {
                obj['enableIntraNodeVisibility'] = ApiClient.convertToType(data['enableIntraNodeVisibility'], 'Boolean');
            }
            if (data.hasOwnProperty('enableL4ilbSubsetting')) {
                obj['enableL4ilbSubsetting'] = ApiClient.convertToType(data['enableL4ilbSubsetting'], 'Boolean');
            }
            if (data.hasOwnProperty('enableMultiNetworking')) {
                obj['enableMultiNetworking'] = ApiClient.convertToType(data['enableMultiNetworking'], 'Boolean');
            }
            if (data.hasOwnProperty('gatewayApiConfig')) {
                obj['gatewayApiConfig'] = GatewayAPIConfig.constructFromObject(data['gatewayApiConfig']);
            }
            if (data.hasOwnProperty('inTransitEncryptionConfig')) {
                obj['inTransitEncryptionConfig'] = ApiClient.convertToType(data['inTransitEncryptionConfig'], 'String');
            }
            if (data.hasOwnProperty('network')) {
                obj['network'] = ApiClient.convertToType(data['network'], 'String');
            }
            if (data.hasOwnProperty('networkPerformanceConfig')) {
                obj['networkPerformanceConfig'] = ClusterNetworkPerformanceConfig.constructFromObject(data['networkPerformanceConfig']);
            }
            if (data.hasOwnProperty('privateIpv6GoogleAccess')) {
                obj['privateIpv6GoogleAccess'] = ApiClient.convertToType(data['privateIpv6GoogleAccess'], 'String');
            }
            if (data.hasOwnProperty('serviceExternalIpsConfig')) {
                obj['serviceExternalIpsConfig'] = ServiceExternalIPsConfig.constructFromObject(data['serviceExternalIpsConfig']);
            }
            if (data.hasOwnProperty('subnetwork')) {
                obj['subnetwork'] = ApiClient.convertToType(data['subnetwork'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NetworkConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NetworkConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['datapathProvider'] && !(typeof data['datapathProvider'] === 'string' || data['datapathProvider'] instanceof String)) {
            throw new Error("Expected the field `datapathProvider` to be a primitive type in the JSON string but got " + data['datapathProvider']);
        }
        // validate the optional field `defaultSnatStatus`
        if (data['defaultSnatStatus']) { // data not null
          DefaultSnatStatus.validateJSON(data['defaultSnatStatus']);
        }
        // validate the optional field `dnsConfig`
        if (data['dnsConfig']) { // data not null
          DNSConfig.validateJSON(data['dnsConfig']);
        }
        // validate the optional field `gatewayApiConfig`
        if (data['gatewayApiConfig']) { // data not null
          GatewayAPIConfig.validateJSON(data['gatewayApiConfig']);
        }
        // ensure the json data is a string
        if (data['inTransitEncryptionConfig'] && !(typeof data['inTransitEncryptionConfig'] === 'string' || data['inTransitEncryptionConfig'] instanceof String)) {
            throw new Error("Expected the field `inTransitEncryptionConfig` to be a primitive type in the JSON string but got " + data['inTransitEncryptionConfig']);
        }
        // ensure the json data is a string
        if (data['network'] && !(typeof data['network'] === 'string' || data['network'] instanceof String)) {
            throw new Error("Expected the field `network` to be a primitive type in the JSON string but got " + data['network']);
        }
        // validate the optional field `networkPerformanceConfig`
        if (data['networkPerformanceConfig']) { // data not null
          ClusterNetworkPerformanceConfig.validateJSON(data['networkPerformanceConfig']);
        }
        // ensure the json data is a string
        if (data['privateIpv6GoogleAccess'] && !(typeof data['privateIpv6GoogleAccess'] === 'string' || data['privateIpv6GoogleAccess'] instanceof String)) {
            throw new Error("Expected the field `privateIpv6GoogleAccess` to be a primitive type in the JSON string but got " + data['privateIpv6GoogleAccess']);
        }
        // validate the optional field `serviceExternalIpsConfig`
        if (data['serviceExternalIpsConfig']) { // data not null
          ServiceExternalIPsConfig.validateJSON(data['serviceExternalIpsConfig']);
        }
        // ensure the json data is a string
        if (data['subnetwork'] && !(typeof data['subnetwork'] === 'string' || data['subnetwork'] instanceof String)) {
            throw new Error("Expected the field `subnetwork` to be a primitive type in the JSON string but got " + data['subnetwork']);
        }

        return true;
    }


}



/**
 * The desired datapath provider for this cluster. By default, uses the IPTables-based kube-proxy implementation.
 * @member {module:model/NetworkConfig.DatapathProviderEnum} datapathProvider
 */
NetworkConfig.prototype['datapathProvider'] = undefined;

/**
 * @member {module:model/DefaultSnatStatus} defaultSnatStatus
 */
NetworkConfig.prototype['defaultSnatStatus'] = undefined;

/**
 * @member {module:model/DNSConfig} dnsConfig
 */
NetworkConfig.prototype['dnsConfig'] = undefined;

/**
 * Whether FQDN Network Policy is enabled on this cluster.
 * @member {Boolean} enableFqdnNetworkPolicy
 */
NetworkConfig.prototype['enableFqdnNetworkPolicy'] = undefined;

/**
 * Whether Intra-node visibility is enabled for this cluster. This makes same node pod to pod traffic visible for VPC network.
 * @member {Boolean} enableIntraNodeVisibility
 */
NetworkConfig.prototype['enableIntraNodeVisibility'] = undefined;

/**
 * Whether L4ILB Subsetting is enabled for this cluster.
 * @member {Boolean} enableL4ilbSubsetting
 */
NetworkConfig.prototype['enableL4ilbSubsetting'] = undefined;

/**
 * Whether multi-networking is enabled for this cluster.
 * @member {Boolean} enableMultiNetworking
 */
NetworkConfig.prototype['enableMultiNetworking'] = undefined;

/**
 * @member {module:model/GatewayAPIConfig} gatewayApiConfig
 */
NetworkConfig.prototype['gatewayApiConfig'] = undefined;

/**
 * Specify the details of in-transit encryption.
 * @member {module:model/NetworkConfig.InTransitEncryptionConfigEnum} inTransitEncryptionConfig
 */
NetworkConfig.prototype['inTransitEncryptionConfig'] = undefined;

/**
 * Output only. The relative name of the Google Compute Engine network(https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. Example: projects/my-project/global/networks/my-network
 * @member {String} network
 */
NetworkConfig.prototype['network'] = undefined;

/**
 * @member {module:model/ClusterNetworkPerformanceConfig} networkPerformanceConfig
 */
NetworkConfig.prototype['networkPerformanceConfig'] = undefined;

/**
 * The desired state of IPv6 connectivity to Google Services. By default, no private IPv6 access to or from Google Services (all access will be via IPv4)
 * @member {module:model/NetworkConfig.PrivateIpv6GoogleAccessEnum} privateIpv6GoogleAccess
 */
NetworkConfig.prototype['privateIpv6GoogleAccess'] = undefined;

/**
 * @member {module:model/ServiceExternalIPsConfig} serviceExternalIpsConfig
 */
NetworkConfig.prototype['serviceExternalIpsConfig'] = undefined;

/**
 * Output only. The relative name of the Google Compute Engine [subnetwork](https://cloud.google.com/compute/docs/vpc) to which the cluster is connected. Example: projects/my-project/regions/us-central1/subnetworks/my-subnet
 * @member {String} subnetwork
 */
NetworkConfig.prototype['subnetwork'] = undefined;





/**
 * Allowed values for the <code>datapathProvider</code> property.
 * @enum {String}
 * @readonly
 */
NetworkConfig['DatapathProviderEnum'] = {

    /**
     * value: "DATAPATH_PROVIDER_UNSPECIFIED"
     * @const
     */
    "DATAPATH_PROVIDER_UNSPECIFIED": "DATAPATH_PROVIDER_UNSPECIFIED",

    /**
     * value: "LEGACY_DATAPATH"
     * @const
     */
    "LEGACY_DATAPATH": "LEGACY_DATAPATH",

    /**
     * value: "ADVANCED_DATAPATH"
     * @const
     */
    "ADVANCED_DATAPATH": "ADVANCED_DATAPATH"
};


/**
 * Allowed values for the <code>inTransitEncryptionConfig</code> property.
 * @enum {String}
 * @readonly
 */
NetworkConfig['InTransitEncryptionConfigEnum'] = {

    /**
     * value: "IN_TRANSIT_ENCRYPTION_CONFIG_UNSPECIFIED"
     * @const
     */
    "CONFIG_UNSPECIFIED": "IN_TRANSIT_ENCRYPTION_CONFIG_UNSPECIFIED",

    /**
     * value: "IN_TRANSIT_ENCRYPTION_DISABLED"
     * @const
     */
    "DISABLED": "IN_TRANSIT_ENCRYPTION_DISABLED",

    /**
     * value: "IN_TRANSIT_ENCRYPTION_INTER_NODE_TRANSPARENT"
     * @const
     */
    "INTER_NODE_TRANSPARENT": "IN_TRANSIT_ENCRYPTION_INTER_NODE_TRANSPARENT"
};


/**
 * Allowed values for the <code>privateIpv6GoogleAccess</code> property.
 * @enum {String}
 * @readonly
 */
NetworkConfig['PrivateIpv6GoogleAccessEnum'] = {

    /**
     * value: "PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED",

    /**
     * value: "PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED"
     * @const
     */
    "DISABLED": "PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED",

    /**
     * value: "PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE"
     * @const
     */
    "TO_GOOGLE": "PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE",

    /**
     * value: "PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL"
     * @const
     */
    "BIDIRECTIONAL": "PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL"
};



export default NetworkConfig;

