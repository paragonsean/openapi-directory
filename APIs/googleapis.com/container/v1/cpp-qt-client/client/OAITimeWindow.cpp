/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITimeWindow.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITimeWindow::OAITimeWindow(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITimeWindow::OAITimeWindow() {
    this->initializeModel();
}

OAITimeWindow::~OAITimeWindow() {}

void OAITimeWindow::initializeModel() {

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_maintenance_exclusion_options_isSet = false;
    m_maintenance_exclusion_options_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;
}

void OAITimeWindow::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITimeWindow::fromJsonObject(QJsonObject json) {

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_maintenance_exclusion_options_isValid = ::OpenAPI::fromJsonValue(m_maintenance_exclusion_options, json[QString("maintenanceExclusionOptions")]);
    m_maintenance_exclusion_options_isSet = !json[QString("maintenanceExclusionOptions")].isNull() && m_maintenance_exclusion_options_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;
}

QString OAITimeWindow::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITimeWindow::asJsonObject() const {
    QJsonObject obj;
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_maintenance_exclusion_options.isSet()) {
        obj.insert(QString("maintenanceExclusionOptions"), ::OpenAPI::toJsonValue(m_maintenance_exclusion_options));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    return obj;
}

QString OAITimeWindow::getEndTime() const {
    return m_end_time;
}
void OAITimeWindow::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAITimeWindow::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAITimeWindow::is_end_time_Valid() const{
    return m_end_time_isValid;
}

OAIMaintenanceExclusionOptions OAITimeWindow::getMaintenanceExclusionOptions() const {
    return m_maintenance_exclusion_options;
}
void OAITimeWindow::setMaintenanceExclusionOptions(const OAIMaintenanceExclusionOptions &maintenance_exclusion_options) {
    m_maintenance_exclusion_options = maintenance_exclusion_options;
    m_maintenance_exclusion_options_isSet = true;
}

bool OAITimeWindow::is_maintenance_exclusion_options_Set() const{
    return m_maintenance_exclusion_options_isSet;
}

bool OAITimeWindow::is_maintenance_exclusion_options_Valid() const{
    return m_maintenance_exclusion_options_isValid;
}

QString OAITimeWindow::getStartTime() const {
    return m_start_time;
}
void OAITimeWindow::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAITimeWindow::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAITimeWindow::is_start_time_Valid() const{
    return m_start_time_isValid;
}

bool OAITimeWindow::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_maintenance_exclusion_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITimeWindow::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
