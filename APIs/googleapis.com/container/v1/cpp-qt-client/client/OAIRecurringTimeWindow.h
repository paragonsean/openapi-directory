/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRecurringTimeWindow.h
 *
 * Represents an arbitrary window of time that recurs.
 */

#ifndef OAIRecurringTimeWindow_H
#define OAIRecurringTimeWindow_H

#include <QJsonObject>

#include "OAITimeWindow.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITimeWindow;

class OAIRecurringTimeWindow : public OAIObject {
public:
    OAIRecurringTimeWindow();
    OAIRecurringTimeWindow(QString json);
    ~OAIRecurringTimeWindow() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRecurrence() const;
    void setRecurrence(const QString &recurrence);
    bool is_recurrence_Set() const;
    bool is_recurrence_Valid() const;

    OAITimeWindow getWindow() const;
    void setWindow(const OAITimeWindow &window);
    bool is_window_Set() const;
    bool is_window_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_recurrence;
    bool m_recurrence_isSet;
    bool m_recurrence_isValid;

    OAITimeWindow m_window;
    bool m_window_isSet;
    bool m_window_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRecurringTimeWindow)

#endif // OAIRecurringTimeWindow_H
