/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINodeNetworkConfig.h
 *
 * Parameters for node pool-level network config.
 */

#ifndef OAINodeNetworkConfig_H
#define OAINodeNetworkConfig_H

#include <QJsonObject>

#include "OAIAdditionalNodeNetworkConfig.h"
#include "OAIAdditionalPodNetworkConfig.h"
#include "OAINetworkPerformanceConfig.h"
#include "OAIPodCIDROverprovisionConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAdditionalNodeNetworkConfig;
class OAIAdditionalPodNetworkConfig;
class OAINetworkPerformanceConfig;
class OAIPodCIDROverprovisionConfig;

class OAINodeNetworkConfig : public OAIObject {
public:
    OAINodeNetworkConfig();
    OAINodeNetworkConfig(QString json);
    ~OAINodeNetworkConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAdditionalNodeNetworkConfig> getAdditionalNodeNetworkConfigs() const;
    void setAdditionalNodeNetworkConfigs(const QList<OAIAdditionalNodeNetworkConfig> &additional_node_network_configs);
    bool is_additional_node_network_configs_Set() const;
    bool is_additional_node_network_configs_Valid() const;

    QList<OAIAdditionalPodNetworkConfig> getAdditionalPodNetworkConfigs() const;
    void setAdditionalPodNetworkConfigs(const QList<OAIAdditionalPodNetworkConfig> &additional_pod_network_configs);
    bool is_additional_pod_network_configs_Set() const;
    bool is_additional_pod_network_configs_Valid() const;

    bool isCreatePodRange() const;
    void setCreatePodRange(const bool &create_pod_range);
    bool is_create_pod_range_Set() const;
    bool is_create_pod_range_Valid() const;

    bool isEnablePrivateNodes() const;
    void setEnablePrivateNodes(const bool &enable_private_nodes);
    bool is_enable_private_nodes_Set() const;
    bool is_enable_private_nodes_Valid() const;

    OAINetworkPerformanceConfig getNetworkPerformanceConfig() const;
    void setNetworkPerformanceConfig(const OAINetworkPerformanceConfig &network_performance_config);
    bool is_network_performance_config_Set() const;
    bool is_network_performance_config_Valid() const;

    OAIPodCIDROverprovisionConfig getPodCidrOverprovisionConfig() const;
    void setPodCidrOverprovisionConfig(const OAIPodCIDROverprovisionConfig &pod_cidr_overprovision_config);
    bool is_pod_cidr_overprovision_config_Set() const;
    bool is_pod_cidr_overprovision_config_Valid() const;

    QString getPodIpv4CidrBlock() const;
    void setPodIpv4CidrBlock(const QString &pod_ipv4_cidr_block);
    bool is_pod_ipv4_cidr_block_Set() const;
    bool is_pod_ipv4_cidr_block_Valid() const;

    double getPodIpv4RangeUtilization() const;
    void setPodIpv4RangeUtilization(const double &pod_ipv4_range_utilization);
    bool is_pod_ipv4_range_utilization_Set() const;
    bool is_pod_ipv4_range_utilization_Valid() const;

    QString getPodRange() const;
    void setPodRange(const QString &pod_range);
    bool is_pod_range_Set() const;
    bool is_pod_range_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAdditionalNodeNetworkConfig> m_additional_node_network_configs;
    bool m_additional_node_network_configs_isSet;
    bool m_additional_node_network_configs_isValid;

    QList<OAIAdditionalPodNetworkConfig> m_additional_pod_network_configs;
    bool m_additional_pod_network_configs_isSet;
    bool m_additional_pod_network_configs_isValid;

    bool m_create_pod_range;
    bool m_create_pod_range_isSet;
    bool m_create_pod_range_isValid;

    bool m_enable_private_nodes;
    bool m_enable_private_nodes_isSet;
    bool m_enable_private_nodes_isValid;

    OAINetworkPerformanceConfig m_network_performance_config;
    bool m_network_performance_config_isSet;
    bool m_network_performance_config_isValid;

    OAIPodCIDROverprovisionConfig m_pod_cidr_overprovision_config;
    bool m_pod_cidr_overprovision_config_isSet;
    bool m_pod_cidr_overprovision_config_isValid;

    QString m_pod_ipv4_cidr_block;
    bool m_pod_ipv4_cidr_block_isSet;
    bool m_pod_ipv4_cidr_block_isValid;

    double m_pod_ipv4_range_utilization;
    bool m_pod_ipv4_range_utilization_isSet;
    bool m_pod_ipv4_range_utilization_isValid;

    QString m_pod_range;
    bool m_pod_range_isSet;
    bool m_pod_range_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINodeNetworkConfig)

#endif // OAINodeNetworkConfig_H
