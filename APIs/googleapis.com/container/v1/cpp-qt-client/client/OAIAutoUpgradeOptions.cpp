/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAutoUpgradeOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAutoUpgradeOptions::OAIAutoUpgradeOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAutoUpgradeOptions::OAIAutoUpgradeOptions() {
    this->initializeModel();
}

OAIAutoUpgradeOptions::~OAIAutoUpgradeOptions() {}

void OAIAutoUpgradeOptions::initializeModel() {

    m_auto_upgrade_start_time_isSet = false;
    m_auto_upgrade_start_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;
}

void OAIAutoUpgradeOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAutoUpgradeOptions::fromJsonObject(QJsonObject json) {

    m_auto_upgrade_start_time_isValid = ::OpenAPI::fromJsonValue(m_auto_upgrade_start_time, json[QString("autoUpgradeStartTime")]);
    m_auto_upgrade_start_time_isSet = !json[QString("autoUpgradeStartTime")].isNull() && m_auto_upgrade_start_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;
}

QString OAIAutoUpgradeOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAutoUpgradeOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_auto_upgrade_start_time_isSet) {
        obj.insert(QString("autoUpgradeStartTime"), ::OpenAPI::toJsonValue(m_auto_upgrade_start_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    return obj;
}

QString OAIAutoUpgradeOptions::getAutoUpgradeStartTime() const {
    return m_auto_upgrade_start_time;
}
void OAIAutoUpgradeOptions::setAutoUpgradeStartTime(const QString &auto_upgrade_start_time) {
    m_auto_upgrade_start_time = auto_upgrade_start_time;
    m_auto_upgrade_start_time_isSet = true;
}

bool OAIAutoUpgradeOptions::is_auto_upgrade_start_time_Set() const{
    return m_auto_upgrade_start_time_isSet;
}

bool OAIAutoUpgradeOptions::is_auto_upgrade_start_time_Valid() const{
    return m_auto_upgrade_start_time_isValid;
}

QString OAIAutoUpgradeOptions::getDescription() const {
    return m_description;
}
void OAIAutoUpgradeOptions::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIAutoUpgradeOptions::is_description_Set() const{
    return m_description_isSet;
}

bool OAIAutoUpgradeOptions::is_description_Valid() const{
    return m_description_isValid;
}

bool OAIAutoUpgradeOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_auto_upgrade_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAutoUpgradeOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
