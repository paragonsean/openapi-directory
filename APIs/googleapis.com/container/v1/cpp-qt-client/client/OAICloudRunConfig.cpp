/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICloudRunConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICloudRunConfig::OAICloudRunConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICloudRunConfig::OAICloudRunConfig() {
    this->initializeModel();
}

OAICloudRunConfig::~OAICloudRunConfig() {}

void OAICloudRunConfig::initializeModel() {

    m_disabled_isSet = false;
    m_disabled_isValid = false;

    m_load_balancer_type_isSet = false;
    m_load_balancer_type_isValid = false;
}

void OAICloudRunConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICloudRunConfig::fromJsonObject(QJsonObject json) {

    m_disabled_isValid = ::OpenAPI::fromJsonValue(m_disabled, json[QString("disabled")]);
    m_disabled_isSet = !json[QString("disabled")].isNull() && m_disabled_isValid;

    m_load_balancer_type_isValid = ::OpenAPI::fromJsonValue(m_load_balancer_type, json[QString("loadBalancerType")]);
    m_load_balancer_type_isSet = !json[QString("loadBalancerType")].isNull() && m_load_balancer_type_isValid;
}

QString OAICloudRunConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICloudRunConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_disabled_isSet) {
        obj.insert(QString("disabled"), ::OpenAPI::toJsonValue(m_disabled));
    }
    if (m_load_balancer_type_isSet) {
        obj.insert(QString("loadBalancerType"), ::OpenAPI::toJsonValue(m_load_balancer_type));
    }
    return obj;
}

bool OAICloudRunConfig::isDisabled() const {
    return m_disabled;
}
void OAICloudRunConfig::setDisabled(const bool &disabled) {
    m_disabled = disabled;
    m_disabled_isSet = true;
}

bool OAICloudRunConfig::is_disabled_Set() const{
    return m_disabled_isSet;
}

bool OAICloudRunConfig::is_disabled_Valid() const{
    return m_disabled_isValid;
}

QString OAICloudRunConfig::getLoadBalancerType() const {
    return m_load_balancer_type;
}
void OAICloudRunConfig::setLoadBalancerType(const QString &load_balancer_type) {
    m_load_balancer_type = load_balancer_type;
    m_load_balancer_type_isSet = true;
}

bool OAICloudRunConfig::is_load_balancer_type_Set() const{
    return m_load_balancer_type_isSet;
}

bool OAICloudRunConfig::is_load_balancer_type_Valid() const{
    return m_load_balancer_type_isValid;
}

bool OAICloudRunConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_load_balancer_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICloudRunConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
