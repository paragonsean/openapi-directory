/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClusterAutoscaling.h
 *
 * ClusterAutoscaling contains global, per-cluster information required by Cluster Autoscaler to automatically adjust the size of the cluster and create/delete node pools based on the current needs.
 */

#ifndef OAIClusterAutoscaling_H
#define OAIClusterAutoscaling_H

#include <QJsonObject>

#include "OAIAutoprovisioningNodePoolDefaults.h"
#include "OAIResourceLimit.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAutoprovisioningNodePoolDefaults;
class OAIResourceLimit;

class OAIClusterAutoscaling : public OAIObject {
public:
    OAIClusterAutoscaling();
    OAIClusterAutoscaling(QString json);
    ~OAIClusterAutoscaling() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAutoprovisioningLocations() const;
    void setAutoprovisioningLocations(const QList<QString> &autoprovisioning_locations);
    bool is_autoprovisioning_locations_Set() const;
    bool is_autoprovisioning_locations_Valid() const;

    OAIAutoprovisioningNodePoolDefaults getAutoprovisioningNodePoolDefaults() const;
    void setAutoprovisioningNodePoolDefaults(const OAIAutoprovisioningNodePoolDefaults &autoprovisioning_node_pool_defaults);
    bool is_autoprovisioning_node_pool_defaults_Set() const;
    bool is_autoprovisioning_node_pool_defaults_Valid() const;

    QString getAutoscalingProfile() const;
    void setAutoscalingProfile(const QString &autoscaling_profile);
    bool is_autoscaling_profile_Set() const;
    bool is_autoscaling_profile_Valid() const;

    bool isEnableNodeAutoprovisioning() const;
    void setEnableNodeAutoprovisioning(const bool &enable_node_autoprovisioning);
    bool is_enable_node_autoprovisioning_Set() const;
    bool is_enable_node_autoprovisioning_Valid() const;

    QList<OAIResourceLimit> getResourceLimits() const;
    void setResourceLimits(const QList<OAIResourceLimit> &resource_limits);
    bool is_resource_limits_Set() const;
    bool is_resource_limits_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_autoprovisioning_locations;
    bool m_autoprovisioning_locations_isSet;
    bool m_autoprovisioning_locations_isValid;

    OAIAutoprovisioningNodePoolDefaults m_autoprovisioning_node_pool_defaults;
    bool m_autoprovisioning_node_pool_defaults_isSet;
    bool m_autoprovisioning_node_pool_defaults_isValid;

    QString m_autoscaling_profile;
    bool m_autoscaling_profile_isSet;
    bool m_autoscaling_profile_isValid;

    bool m_enable_node_autoprovisioning;
    bool m_enable_node_autoprovisioning_isSet;
    bool m_enable_node_autoprovisioning_isValid;

    QList<OAIResourceLimit> m_resource_limits;
    bool m_resource_limits_isSet;
    bool m_resource_limits_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClusterAutoscaling)

#endif // OAIClusterAutoscaling_H
