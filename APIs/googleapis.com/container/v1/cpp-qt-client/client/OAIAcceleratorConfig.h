/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAcceleratorConfig.h
 *
 * AcceleratorConfig represents a Hardware Accelerator request.
 */

#ifndef OAIAcceleratorConfig_H
#define OAIAcceleratorConfig_H

#include <QJsonObject>

#include "OAIGPUDriverInstallationConfig.h"
#include "OAIGPUSharingConfig.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGPUDriverInstallationConfig;
class OAIGPUSharingConfig;

class OAIAcceleratorConfig : public OAIObject {
public:
    OAIAcceleratorConfig();
    OAIAcceleratorConfig(QString json);
    ~OAIAcceleratorConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAcceleratorCount() const;
    void setAcceleratorCount(const QString &accelerator_count);
    bool is_accelerator_count_Set() const;
    bool is_accelerator_count_Valid() const;

    QString getAcceleratorType() const;
    void setAcceleratorType(const QString &accelerator_type);
    bool is_accelerator_type_Set() const;
    bool is_accelerator_type_Valid() const;

    OAIGPUDriverInstallationConfig getGpuDriverInstallationConfig() const;
    void setGpuDriverInstallationConfig(const OAIGPUDriverInstallationConfig &gpu_driver_installation_config);
    bool is_gpu_driver_installation_config_Set() const;
    bool is_gpu_driver_installation_config_Valid() const;

    QString getGpuPartitionSize() const;
    void setGpuPartitionSize(const QString &gpu_partition_size);
    bool is_gpu_partition_size_Set() const;
    bool is_gpu_partition_size_Valid() const;

    OAIGPUSharingConfig getGpuSharingConfig() const;
    void setGpuSharingConfig(const OAIGPUSharingConfig &gpu_sharing_config);
    bool is_gpu_sharing_config_Set() const;
    bool is_gpu_sharing_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_accelerator_count;
    bool m_accelerator_count_isSet;
    bool m_accelerator_count_isValid;

    QString m_accelerator_type;
    bool m_accelerator_type_isSet;
    bool m_accelerator_type_isValid;

    OAIGPUDriverInstallationConfig m_gpu_driver_installation_config;
    bool m_gpu_driver_installation_config_isSet;
    bool m_gpu_driver_installation_config_isValid;

    QString m_gpu_partition_size;
    bool m_gpu_partition_size_isSet;
    bool m_gpu_partition_size_isValid;

    OAIGPUSharingConfig m_gpu_sharing_config;
    bool m_gpu_sharing_config_isSet;
    bool m_gpu_sharing_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAcceleratorConfig)

#endif // OAIAcceleratorConfig_H
