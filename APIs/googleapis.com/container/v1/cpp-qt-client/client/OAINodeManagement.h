/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINodeManagement.h
 *
 * NodeManagement defines the set of node management services turned on for the node pool.
 */

#ifndef OAINodeManagement_H
#define OAINodeManagement_H

#include <QJsonObject>

#include "OAIAutoUpgradeOptions.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAutoUpgradeOptions;

class OAINodeManagement : public OAIObject {
public:
    OAINodeManagement();
    OAINodeManagement(QString json);
    ~OAINodeManagement() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAutoRepair() const;
    void setAutoRepair(const bool &auto_repair);
    bool is_auto_repair_Set() const;
    bool is_auto_repair_Valid() const;

    bool isAutoUpgrade() const;
    void setAutoUpgrade(const bool &auto_upgrade);
    bool is_auto_upgrade_Set() const;
    bool is_auto_upgrade_Valid() const;

    OAIAutoUpgradeOptions getUpgradeOptions() const;
    void setUpgradeOptions(const OAIAutoUpgradeOptions &upgrade_options);
    bool is_upgrade_options_Set() const;
    bool is_upgrade_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_auto_repair;
    bool m_auto_repair_isSet;
    bool m_auto_repair_isValid;

    bool m_auto_upgrade;
    bool m_auto_upgrade_isSet;
    bool m_auto_upgrade_isValid;

    OAIAutoUpgradeOptions m_upgrade_options;
    bool m_upgrade_options_isSet;
    bool m_upgrade_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINodeManagement)

#endif // OAINodeManagement_H
