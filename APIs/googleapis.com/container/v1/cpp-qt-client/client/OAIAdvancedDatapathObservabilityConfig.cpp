/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdvancedDatapathObservabilityConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdvancedDatapathObservabilityConfig::OAIAdvancedDatapathObservabilityConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdvancedDatapathObservabilityConfig::OAIAdvancedDatapathObservabilityConfig() {
    this->initializeModel();
}

OAIAdvancedDatapathObservabilityConfig::~OAIAdvancedDatapathObservabilityConfig() {}

void OAIAdvancedDatapathObservabilityConfig::initializeModel() {

    m_enable_metrics_isSet = false;
    m_enable_metrics_isValid = false;

    m_enable_relay_isSet = false;
    m_enable_relay_isValid = false;

    m_relay_mode_isSet = false;
    m_relay_mode_isValid = false;
}

void OAIAdvancedDatapathObservabilityConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdvancedDatapathObservabilityConfig::fromJsonObject(QJsonObject json) {

    m_enable_metrics_isValid = ::OpenAPI::fromJsonValue(m_enable_metrics, json[QString("enableMetrics")]);
    m_enable_metrics_isSet = !json[QString("enableMetrics")].isNull() && m_enable_metrics_isValid;

    m_enable_relay_isValid = ::OpenAPI::fromJsonValue(m_enable_relay, json[QString("enableRelay")]);
    m_enable_relay_isSet = !json[QString("enableRelay")].isNull() && m_enable_relay_isValid;

    m_relay_mode_isValid = ::OpenAPI::fromJsonValue(m_relay_mode, json[QString("relayMode")]);
    m_relay_mode_isSet = !json[QString("relayMode")].isNull() && m_relay_mode_isValid;
}

QString OAIAdvancedDatapathObservabilityConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdvancedDatapathObservabilityConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_enable_metrics_isSet) {
        obj.insert(QString("enableMetrics"), ::OpenAPI::toJsonValue(m_enable_metrics));
    }
    if (m_enable_relay_isSet) {
        obj.insert(QString("enableRelay"), ::OpenAPI::toJsonValue(m_enable_relay));
    }
    if (m_relay_mode_isSet) {
        obj.insert(QString("relayMode"), ::OpenAPI::toJsonValue(m_relay_mode));
    }
    return obj;
}

bool OAIAdvancedDatapathObservabilityConfig::isEnableMetrics() const {
    return m_enable_metrics;
}
void OAIAdvancedDatapathObservabilityConfig::setEnableMetrics(const bool &enable_metrics) {
    m_enable_metrics = enable_metrics;
    m_enable_metrics_isSet = true;
}

bool OAIAdvancedDatapathObservabilityConfig::is_enable_metrics_Set() const{
    return m_enable_metrics_isSet;
}

bool OAIAdvancedDatapathObservabilityConfig::is_enable_metrics_Valid() const{
    return m_enable_metrics_isValid;
}

bool OAIAdvancedDatapathObservabilityConfig::isEnableRelay() const {
    return m_enable_relay;
}
void OAIAdvancedDatapathObservabilityConfig::setEnableRelay(const bool &enable_relay) {
    m_enable_relay = enable_relay;
    m_enable_relay_isSet = true;
}

bool OAIAdvancedDatapathObservabilityConfig::is_enable_relay_Set() const{
    return m_enable_relay_isSet;
}

bool OAIAdvancedDatapathObservabilityConfig::is_enable_relay_Valid() const{
    return m_enable_relay_isValid;
}

QString OAIAdvancedDatapathObservabilityConfig::getRelayMode() const {
    return m_relay_mode;
}
void OAIAdvancedDatapathObservabilityConfig::setRelayMode(const QString &relay_mode) {
    m_relay_mode = relay_mode;
    m_relay_mode_isSet = true;
}

bool OAIAdvancedDatapathObservabilityConfig::is_relay_mode_Set() const{
    return m_relay_mode_isSet;
}

bool OAIAdvancedDatapathObservabilityConfig::is_relay_mode_Valid() const{
    return m_relay_mode_isValid;
}

bool OAIAdvancedDatapathObservabilityConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enable_metrics_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_relay_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_relay_mode_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdvancedDatapathObservabilityConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
