/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINetworkConfig.h
 *
 * NetworkConfig reports the relative names of network &amp; subnetwork.
 */

#ifndef OAINetworkConfig_H
#define OAINetworkConfig_H

#include <QJsonObject>

#include "OAIClusterNetworkPerformanceConfig.h"
#include "OAIDNSConfig.h"
#include "OAIDefaultSnatStatus.h"
#include "OAIGatewayAPIConfig.h"
#include "OAIServiceExternalIPsConfig.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDefaultSnatStatus;
class OAIDNSConfig;
class OAIGatewayAPIConfig;
class OAIClusterNetworkPerformanceConfig;
class OAIServiceExternalIPsConfig;

class OAINetworkConfig : public OAIObject {
public:
    OAINetworkConfig();
    OAINetworkConfig(QString json);
    ~OAINetworkConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDatapathProvider() const;
    void setDatapathProvider(const QString &datapath_provider);
    bool is_datapath_provider_Set() const;
    bool is_datapath_provider_Valid() const;

    OAIDefaultSnatStatus getDefaultSnatStatus() const;
    void setDefaultSnatStatus(const OAIDefaultSnatStatus &default_snat_status);
    bool is_default_snat_status_Set() const;
    bool is_default_snat_status_Valid() const;

    OAIDNSConfig getDnsConfig() const;
    void setDnsConfig(const OAIDNSConfig &dns_config);
    bool is_dns_config_Set() const;
    bool is_dns_config_Valid() const;

    bool isEnableFqdnNetworkPolicy() const;
    void setEnableFqdnNetworkPolicy(const bool &enable_fqdn_network_policy);
    bool is_enable_fqdn_network_policy_Set() const;
    bool is_enable_fqdn_network_policy_Valid() const;

    bool isEnableIntraNodeVisibility() const;
    void setEnableIntraNodeVisibility(const bool &enable_intra_node_visibility);
    bool is_enable_intra_node_visibility_Set() const;
    bool is_enable_intra_node_visibility_Valid() const;

    bool isEnableL4ilbSubsetting() const;
    void setEnableL4ilbSubsetting(const bool &enable_l4ilb_subsetting);
    bool is_enable_l4ilb_subsetting_Set() const;
    bool is_enable_l4ilb_subsetting_Valid() const;

    bool isEnableMultiNetworking() const;
    void setEnableMultiNetworking(const bool &enable_multi_networking);
    bool is_enable_multi_networking_Set() const;
    bool is_enable_multi_networking_Valid() const;

    OAIGatewayAPIConfig getGatewayApiConfig() const;
    void setGatewayApiConfig(const OAIGatewayAPIConfig &gateway_api_config);
    bool is_gateway_api_config_Set() const;
    bool is_gateway_api_config_Valid() const;

    QString getInTransitEncryptionConfig() const;
    void setInTransitEncryptionConfig(const QString &in_transit_encryption_config);
    bool is_in_transit_encryption_config_Set() const;
    bool is_in_transit_encryption_config_Valid() const;

    QString getNetwork() const;
    void setNetwork(const QString &network);
    bool is_network_Set() const;
    bool is_network_Valid() const;

    OAIClusterNetworkPerformanceConfig getNetworkPerformanceConfig() const;
    void setNetworkPerformanceConfig(const OAIClusterNetworkPerformanceConfig &network_performance_config);
    bool is_network_performance_config_Set() const;
    bool is_network_performance_config_Valid() const;

    QString getPrivateIpv6GoogleAccess() const;
    void setPrivateIpv6GoogleAccess(const QString &private_ipv6_google_access);
    bool is_private_ipv6_google_access_Set() const;
    bool is_private_ipv6_google_access_Valid() const;

    OAIServiceExternalIPsConfig getServiceExternalIpsConfig() const;
    void setServiceExternalIpsConfig(const OAIServiceExternalIPsConfig &service_external_ips_config);
    bool is_service_external_ips_config_Set() const;
    bool is_service_external_ips_config_Valid() const;

    QString getSubnetwork() const;
    void setSubnetwork(const QString &subnetwork);
    bool is_subnetwork_Set() const;
    bool is_subnetwork_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_datapath_provider;
    bool m_datapath_provider_isSet;
    bool m_datapath_provider_isValid;

    OAIDefaultSnatStatus m_default_snat_status;
    bool m_default_snat_status_isSet;
    bool m_default_snat_status_isValid;

    OAIDNSConfig m_dns_config;
    bool m_dns_config_isSet;
    bool m_dns_config_isValid;

    bool m_enable_fqdn_network_policy;
    bool m_enable_fqdn_network_policy_isSet;
    bool m_enable_fqdn_network_policy_isValid;

    bool m_enable_intra_node_visibility;
    bool m_enable_intra_node_visibility_isSet;
    bool m_enable_intra_node_visibility_isValid;

    bool m_enable_l4ilb_subsetting;
    bool m_enable_l4ilb_subsetting_isSet;
    bool m_enable_l4ilb_subsetting_isValid;

    bool m_enable_multi_networking;
    bool m_enable_multi_networking_isSet;
    bool m_enable_multi_networking_isValid;

    OAIGatewayAPIConfig m_gateway_api_config;
    bool m_gateway_api_config_isSet;
    bool m_gateway_api_config_isValid;

    QString m_in_transit_encryption_config;
    bool m_in_transit_encryption_config_isSet;
    bool m_in_transit_encryption_config_isValid;

    QString m_network;
    bool m_network_isSet;
    bool m_network_isValid;

    OAIClusterNetworkPerformanceConfig m_network_performance_config;
    bool m_network_performance_config_isSet;
    bool m_network_performance_config_isValid;

    QString m_private_ipv6_google_access;
    bool m_private_ipv6_google_access_isSet;
    bool m_private_ipv6_google_access_isValid;

    OAIServiceExternalIPsConfig m_service_external_ips_config;
    bool m_service_external_ips_config_isSet;
    bool m_service_external_ips_config_isValid;

    QString m_subnetwork;
    bool m_subnetwork_isSet;
    bool m_subnetwork_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetworkConfig)

#endif // OAINetworkConfig_H
