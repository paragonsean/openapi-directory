/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdditionalPodRangesConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdditionalPodRangesConfig::OAIAdditionalPodRangesConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdditionalPodRangesConfig::OAIAdditionalPodRangesConfig() {
    this->initializeModel();
}

OAIAdditionalPodRangesConfig::~OAIAdditionalPodRangesConfig() {}

void OAIAdditionalPodRangesConfig::initializeModel() {

    m_pod_range_info_isSet = false;
    m_pod_range_info_isValid = false;

    m_pod_range_names_isSet = false;
    m_pod_range_names_isValid = false;
}

void OAIAdditionalPodRangesConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdditionalPodRangesConfig::fromJsonObject(QJsonObject json) {

    m_pod_range_info_isValid = ::OpenAPI::fromJsonValue(m_pod_range_info, json[QString("podRangeInfo")]);
    m_pod_range_info_isSet = !json[QString("podRangeInfo")].isNull() && m_pod_range_info_isValid;

    m_pod_range_names_isValid = ::OpenAPI::fromJsonValue(m_pod_range_names, json[QString("podRangeNames")]);
    m_pod_range_names_isSet = !json[QString("podRangeNames")].isNull() && m_pod_range_names_isValid;
}

QString OAIAdditionalPodRangesConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdditionalPodRangesConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_pod_range_info.size() > 0) {
        obj.insert(QString("podRangeInfo"), ::OpenAPI::toJsonValue(m_pod_range_info));
    }
    if (m_pod_range_names.size() > 0) {
        obj.insert(QString("podRangeNames"), ::OpenAPI::toJsonValue(m_pod_range_names));
    }
    return obj;
}

QList<OAIRangeInfo> OAIAdditionalPodRangesConfig::getPodRangeInfo() const {
    return m_pod_range_info;
}
void OAIAdditionalPodRangesConfig::setPodRangeInfo(const QList<OAIRangeInfo> &pod_range_info) {
    m_pod_range_info = pod_range_info;
    m_pod_range_info_isSet = true;
}

bool OAIAdditionalPodRangesConfig::is_pod_range_info_Set() const{
    return m_pod_range_info_isSet;
}

bool OAIAdditionalPodRangesConfig::is_pod_range_info_Valid() const{
    return m_pod_range_info_isValid;
}

QList<QString> OAIAdditionalPodRangesConfig::getPodRangeNames() const {
    return m_pod_range_names;
}
void OAIAdditionalPodRangesConfig::setPodRangeNames(const QList<QString> &pod_range_names) {
    m_pod_range_names = pod_range_names;
    m_pod_range_names_isSet = true;
}

bool OAIAdditionalPodRangesConfig::is_pod_range_names_Set() const{
    return m_pod_range_names_isSet;
}

bool OAIAdditionalPodRangesConfig::is_pod_range_names_Valid() const{
    return m_pod_range_names_isValid;
}

bool OAIAdditionalPodRangesConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pod_range_info.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_pod_range_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdditionalPodRangesConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
