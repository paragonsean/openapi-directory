/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBlueGreenSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBlueGreenSettings::OAIBlueGreenSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBlueGreenSettings::OAIBlueGreenSettings() {
    this->initializeModel();
}

OAIBlueGreenSettings::~OAIBlueGreenSettings() {}

void OAIBlueGreenSettings::initializeModel() {

    m_node_pool_soak_duration_isSet = false;
    m_node_pool_soak_duration_isValid = false;

    m_standard_rollout_policy_isSet = false;
    m_standard_rollout_policy_isValid = false;
}

void OAIBlueGreenSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBlueGreenSettings::fromJsonObject(QJsonObject json) {

    m_node_pool_soak_duration_isValid = ::OpenAPI::fromJsonValue(m_node_pool_soak_duration, json[QString("nodePoolSoakDuration")]);
    m_node_pool_soak_duration_isSet = !json[QString("nodePoolSoakDuration")].isNull() && m_node_pool_soak_duration_isValid;

    m_standard_rollout_policy_isValid = ::OpenAPI::fromJsonValue(m_standard_rollout_policy, json[QString("standardRolloutPolicy")]);
    m_standard_rollout_policy_isSet = !json[QString("standardRolloutPolicy")].isNull() && m_standard_rollout_policy_isValid;
}

QString OAIBlueGreenSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBlueGreenSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_node_pool_soak_duration_isSet) {
        obj.insert(QString("nodePoolSoakDuration"), ::OpenAPI::toJsonValue(m_node_pool_soak_duration));
    }
    if (m_standard_rollout_policy.isSet()) {
        obj.insert(QString("standardRolloutPolicy"), ::OpenAPI::toJsonValue(m_standard_rollout_policy));
    }
    return obj;
}

QString OAIBlueGreenSettings::getNodePoolSoakDuration() const {
    return m_node_pool_soak_duration;
}
void OAIBlueGreenSettings::setNodePoolSoakDuration(const QString &node_pool_soak_duration) {
    m_node_pool_soak_duration = node_pool_soak_duration;
    m_node_pool_soak_duration_isSet = true;
}

bool OAIBlueGreenSettings::is_node_pool_soak_duration_Set() const{
    return m_node_pool_soak_duration_isSet;
}

bool OAIBlueGreenSettings::is_node_pool_soak_duration_Valid() const{
    return m_node_pool_soak_duration_isValid;
}

OAIStandardRolloutPolicy OAIBlueGreenSettings::getStandardRolloutPolicy() const {
    return m_standard_rollout_policy;
}
void OAIBlueGreenSettings::setStandardRolloutPolicy(const OAIStandardRolloutPolicy &standard_rollout_policy) {
    m_standard_rollout_policy = standard_rollout_policy;
    m_standard_rollout_policy_isSet = true;
}

bool OAIBlueGreenSettings::is_standard_rollout_policy_Set() const{
    return m_standard_rollout_policy_isSet;
}

bool OAIBlueGreenSettings::is_standard_rollout_policy_Valid() const{
    return m_standard_rollout_policy_isValid;
}

bool OAIBlueGreenSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_node_pool_soak_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_standard_rollout_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBlueGreenSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
