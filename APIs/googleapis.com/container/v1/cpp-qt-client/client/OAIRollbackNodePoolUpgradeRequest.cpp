/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRollbackNodePoolUpgradeRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRollbackNodePoolUpgradeRequest::OAIRollbackNodePoolUpgradeRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRollbackNodePoolUpgradeRequest::OAIRollbackNodePoolUpgradeRequest() {
    this->initializeModel();
}

OAIRollbackNodePoolUpgradeRequest::~OAIRollbackNodePoolUpgradeRequest() {}

void OAIRollbackNodePoolUpgradeRequest::initializeModel() {

    m_cluster_id_isSet = false;
    m_cluster_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_node_pool_id_isSet = false;
    m_node_pool_id_isValid = false;

    m_project_id_isSet = false;
    m_project_id_isValid = false;

    m_respect_pdb_isSet = false;
    m_respect_pdb_isValid = false;

    m_zone_isSet = false;
    m_zone_isValid = false;
}

void OAIRollbackNodePoolUpgradeRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRollbackNodePoolUpgradeRequest::fromJsonObject(QJsonObject json) {

    m_cluster_id_isValid = ::OpenAPI::fromJsonValue(m_cluster_id, json[QString("clusterId")]);
    m_cluster_id_isSet = !json[QString("clusterId")].isNull() && m_cluster_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_node_pool_id_isValid = ::OpenAPI::fromJsonValue(m_node_pool_id, json[QString("nodePoolId")]);
    m_node_pool_id_isSet = !json[QString("nodePoolId")].isNull() && m_node_pool_id_isValid;

    m_project_id_isValid = ::OpenAPI::fromJsonValue(m_project_id, json[QString("projectId")]);
    m_project_id_isSet = !json[QString("projectId")].isNull() && m_project_id_isValid;

    m_respect_pdb_isValid = ::OpenAPI::fromJsonValue(m_respect_pdb, json[QString("respectPdb")]);
    m_respect_pdb_isSet = !json[QString("respectPdb")].isNull() && m_respect_pdb_isValid;

    m_zone_isValid = ::OpenAPI::fromJsonValue(m_zone, json[QString("zone")]);
    m_zone_isSet = !json[QString("zone")].isNull() && m_zone_isValid;
}

QString OAIRollbackNodePoolUpgradeRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRollbackNodePoolUpgradeRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_cluster_id_isSet) {
        obj.insert(QString("clusterId"), ::OpenAPI::toJsonValue(m_cluster_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_node_pool_id_isSet) {
        obj.insert(QString("nodePoolId"), ::OpenAPI::toJsonValue(m_node_pool_id));
    }
    if (m_project_id_isSet) {
        obj.insert(QString("projectId"), ::OpenAPI::toJsonValue(m_project_id));
    }
    if (m_respect_pdb_isSet) {
        obj.insert(QString("respectPdb"), ::OpenAPI::toJsonValue(m_respect_pdb));
    }
    if (m_zone_isSet) {
        obj.insert(QString("zone"), ::OpenAPI::toJsonValue(m_zone));
    }
    return obj;
}

QString OAIRollbackNodePoolUpgradeRequest::getClusterId() const {
    return m_cluster_id;
}
void OAIRollbackNodePoolUpgradeRequest::setClusterId(const QString &cluster_id) {
    m_cluster_id = cluster_id;
    m_cluster_id_isSet = true;
}

bool OAIRollbackNodePoolUpgradeRequest::is_cluster_id_Set() const{
    return m_cluster_id_isSet;
}

bool OAIRollbackNodePoolUpgradeRequest::is_cluster_id_Valid() const{
    return m_cluster_id_isValid;
}

QString OAIRollbackNodePoolUpgradeRequest::getName() const {
    return m_name;
}
void OAIRollbackNodePoolUpgradeRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIRollbackNodePoolUpgradeRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAIRollbackNodePoolUpgradeRequest::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIRollbackNodePoolUpgradeRequest::getNodePoolId() const {
    return m_node_pool_id;
}
void OAIRollbackNodePoolUpgradeRequest::setNodePoolId(const QString &node_pool_id) {
    m_node_pool_id = node_pool_id;
    m_node_pool_id_isSet = true;
}

bool OAIRollbackNodePoolUpgradeRequest::is_node_pool_id_Set() const{
    return m_node_pool_id_isSet;
}

bool OAIRollbackNodePoolUpgradeRequest::is_node_pool_id_Valid() const{
    return m_node_pool_id_isValid;
}

QString OAIRollbackNodePoolUpgradeRequest::getProjectId() const {
    return m_project_id;
}
void OAIRollbackNodePoolUpgradeRequest::setProjectId(const QString &project_id) {
    m_project_id = project_id;
    m_project_id_isSet = true;
}

bool OAIRollbackNodePoolUpgradeRequest::is_project_id_Set() const{
    return m_project_id_isSet;
}

bool OAIRollbackNodePoolUpgradeRequest::is_project_id_Valid() const{
    return m_project_id_isValid;
}

bool OAIRollbackNodePoolUpgradeRequest::isRespectPdb() const {
    return m_respect_pdb;
}
void OAIRollbackNodePoolUpgradeRequest::setRespectPdb(const bool &respect_pdb) {
    m_respect_pdb = respect_pdb;
    m_respect_pdb_isSet = true;
}

bool OAIRollbackNodePoolUpgradeRequest::is_respect_pdb_Set() const{
    return m_respect_pdb_isSet;
}

bool OAIRollbackNodePoolUpgradeRequest::is_respect_pdb_Valid() const{
    return m_respect_pdb_isValid;
}

QString OAIRollbackNodePoolUpgradeRequest::getZone() const {
    return m_zone;
}
void OAIRollbackNodePoolUpgradeRequest::setZone(const QString &zone) {
    m_zone = zone;
    m_zone_isSet = true;
}

bool OAIRollbackNodePoolUpgradeRequest::is_zone_Set() const{
    return m_zone_isSet;
}

bool OAIRollbackNodePoolUpgradeRequest::is_zone_Valid() const{
    return m_zone_isValid;
}

bool OAIRollbackNodePoolUpgradeRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cluster_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_node_pool_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_respect_pdb_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zone_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRollbackNodePoolUpgradeRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
