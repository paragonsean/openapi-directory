/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMasterAuthorizedNetworksConfig.h
 *
 * Configuration options for the master authorized networks feature. Enabled master authorized networks will disallow all external traffic to access Kubernetes master through HTTPS except traffic from the given CIDR blocks, Google Compute Engine Public IPs and Google Prod IPs.
 */

#ifndef OAIMasterAuthorizedNetworksConfig_H
#define OAIMasterAuthorizedNetworksConfig_H

#include <QJsonObject>

#include "OAICidrBlock.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICidrBlock;

class OAIMasterAuthorizedNetworksConfig : public OAIObject {
public:
    OAIMasterAuthorizedNetworksConfig();
    OAIMasterAuthorizedNetworksConfig(QString json);
    ~OAIMasterAuthorizedNetworksConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICidrBlock> getCidrBlocks() const;
    void setCidrBlocks(const QList<OAICidrBlock> &cidr_blocks);
    bool is_cidr_blocks_Set() const;
    bool is_cidr_blocks_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    bool isGcpPublicCidrsAccessEnabled() const;
    void setGcpPublicCidrsAccessEnabled(const bool &gcp_public_cidrs_access_enabled);
    bool is_gcp_public_cidrs_access_enabled_Set() const;
    bool is_gcp_public_cidrs_access_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICidrBlock> m_cidr_blocks;
    bool m_cidr_blocks_isSet;
    bool m_cidr_blocks_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    bool m_gcp_public_cidrs_access_enabled;
    bool m_gcp_public_cidrs_access_enabled_isSet;
    bool m_gcp_public_cidrs_access_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMasterAuthorizedNetworksConfig)

#endif // OAIMasterAuthorizedNetworksConfig_H
