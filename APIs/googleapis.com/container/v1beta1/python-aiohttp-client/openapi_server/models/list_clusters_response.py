# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cluster import Cluster
from openapi_server import util


class ListClustersResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, clusters: List[Cluster]=None, missing_zones: List[str]=None):
        """ListClustersResponse - a model defined in OpenAPI

        :param clusters: The clusters of this ListClustersResponse.
        :param missing_zones: The missing_zones of this ListClustersResponse.
        """
        self.openapi_types = {
            'clusters': List[Cluster],
            'missing_zones': List[str]
        }

        self.attribute_map = {
            'clusters': 'clusters',
            'missing_zones': 'missingZones'
        }

        self._clusters = clusters
        self._missing_zones = missing_zones

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListClustersResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListClustersResponse of this ListClustersResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clusters(self):
        """Gets the clusters of this ListClustersResponse.

        A list of clusters in the project in the specified zone, or across all ones.

        :return: The clusters of this ListClustersResponse.
        :rtype: List[Cluster]
        """
        return self._clusters

    @clusters.setter
    def clusters(self, clusters):
        """Sets the clusters of this ListClustersResponse.

        A list of clusters in the project in the specified zone, or across all ones.

        :param clusters: The clusters of this ListClustersResponse.
        :type clusters: List[Cluster]
        """

        self._clusters = clusters

    @property
    def missing_zones(self):
        """Gets the missing_zones of this ListClustersResponse.

        If any zones are listed here, the list of clusters returned may be missing those zones.

        :return: The missing_zones of this ListClustersResponse.
        :rtype: List[str]
        """
        return self._missing_zones

    @missing_zones.setter
    def missing_zones(self, missing_zones):
        """Sets the missing_zones of this ListClustersResponse.

        If any zones are listed here, the list of clusters returned may be missing those zones.

        :param missing_zones: The missing_zones of this ListClustersResponse.
        :type missing_zones: List[str]
        """

        self._missing_zones = missing_zones
