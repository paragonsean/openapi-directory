# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.additional_pod_ranges_config import AdditionalPodRangesConfig
from openapi_server.models.addons_config import AddonsConfig
from openapi_server.models.authenticator_groups_config import AuthenticatorGroupsConfig
from openapi_server.models.binary_authorization import BinaryAuthorization
from openapi_server.models.cluster_autoscaling import ClusterAutoscaling
from openapi_server.models.cluster_network_performance_config import ClusterNetworkPerformanceConfig
from openapi_server.models.cluster_telemetry import ClusterTelemetry
from openapi_server.models.cost_management_config import CostManagementConfig
from openapi_server.models.dns_config import DNSConfig
from openapi_server.models.database_encryption import DatabaseEncryption
from openapi_server.models.default_snat_status import DefaultSnatStatus
from openapi_server.models.fleet import Fleet
from openapi_server.models.gateway_api_config import GatewayAPIConfig
from openapi_server.models.gcfs_config import GcfsConfig
from openapi_server.models.host_maintenance_policy import HostMaintenancePolicy
from openapi_server.models.ilb_subsetting_config import ILBSubsettingConfig
from openapi_server.models.identity_service_config import IdentityServiceConfig
from openapi_server.models.intra_node_visibility_config import IntraNodeVisibilityConfig
from openapi_server.models.k8s_beta_api_config import K8sBetaAPIConfig
from openapi_server.models.logging_config import LoggingConfig
from openapi_server.models.master_authorized_networks_config import MasterAuthorizedNetworksConfig
from openapi_server.models.mesh_certificates import MeshCertificates
from openapi_server.models.monitoring_config import MonitoringConfig
from openapi_server.models.network_tags import NetworkTags
from openapi_server.models.node_pool_autoscaling import NodePoolAutoscaling
from openapi_server.models.node_pool_logging_config import NodePoolLoggingConfig
from openapi_server.models.notification_config import NotificationConfig
from openapi_server.models.parent_product_config import ParentProductConfig
from openapi_server.models.pod_security_policy_config import PodSecurityPolicyConfig
from openapi_server.models.private_cluster_config import PrivateClusterConfig
from openapi_server.models.protect_config import ProtectConfig
from openapi_server.models.release_channel import ReleaseChannel
from openapi_server.models.resource_manager_tags import ResourceManagerTags
from openapi_server.models.resource_usage_export_config import ResourceUsageExportConfig
from openapi_server.models.security_posture_config import SecurityPostureConfig
from openapi_server.models.service_external_ips_config import ServiceExternalIPsConfig
from openapi_server.models.shielded_nodes import ShieldedNodes
from openapi_server.models.tpu_config import TpuConfig
from openapi_server.models.vertical_pod_autoscaling import VerticalPodAutoscaling
from openapi_server.models.workload_alts_config import WorkloadALTSConfig
from openapi_server.models.workload_certificates import WorkloadCertificates
from openapi_server.models.workload_identity_config import WorkloadIdentityConfig
from openapi_server.models.workload_policy_config import WorkloadPolicyConfig
from openapi_server import util


class ClusterUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_pod_ranges_config: AdditionalPodRangesConfig=None, desired_addons_config: AddonsConfig=None, desired_authenticator_groups_config: AuthenticatorGroupsConfig=None, desired_autopilot_workload_policy_config: WorkloadPolicyConfig=None, desired_binary_authorization: BinaryAuthorization=None, desired_cluster_autoscaling: ClusterAutoscaling=None, desired_cluster_telemetry: ClusterTelemetry=None, desired_cost_management_config: CostManagementConfig=None, desired_database_encryption: DatabaseEncryption=None, desired_datapath_provider: str=None, desired_default_snat_status: DefaultSnatStatus=None, desired_dns_config: DNSConfig=None, desired_enable_fqdn_network_policy: bool=None, desired_enable_private_endpoint: bool=None, desired_fleet: Fleet=None, desired_gateway_api_config: GatewayAPIConfig=None, desired_gcfs_config: GcfsConfig=None, desired_host_maintenance_policy: HostMaintenancePolicy=None, desired_identity_service_config: IdentityServiceConfig=None, desired_image_type: str=None, desired_in_transit_encryption_config: str=None, desired_intra_node_visibility_config: IntraNodeVisibilityConfig=None, desired_k8s_beta_apis: K8sBetaAPIConfig=None, desired_l4ilb_subsetting_config: ILBSubsettingConfig=None, desired_locations: List[str]=None, desired_logging_config: LoggingConfig=None, desired_logging_service: str=None, desired_master: object=None, desired_master_authorized_networks_config: MasterAuthorizedNetworksConfig=None, desired_master_version: str=None, desired_mesh_certificates: MeshCertificates=None, desired_monitoring_config: MonitoringConfig=None, desired_monitoring_service: str=None, desired_network_performance_config: ClusterNetworkPerformanceConfig=None, desired_node_pool_auto_config_network_tags: NetworkTags=None, desired_node_pool_auto_config_resource_manager_tags: ResourceManagerTags=None, desired_node_pool_autoscaling: NodePoolAutoscaling=None, desired_node_pool_id: str=None, desired_node_pool_logging_config: NodePoolLoggingConfig=None, desired_node_version: str=None, desired_notification_config: NotificationConfig=None, desired_parent_product_config: ParentProductConfig=None, desired_pod_security_policy_config: PodSecurityPolicyConfig=None, desired_private_cluster_config: PrivateClusterConfig=None, desired_private_ipv6_google_access: str=None, desired_protect_config: ProtectConfig=None, desired_release_channel: ReleaseChannel=None, desired_resource_usage_export_config: ResourceUsageExportConfig=None, desired_security_posture_config: SecurityPostureConfig=None, desired_service_external_ips_config: ServiceExternalIPsConfig=None, desired_shielded_nodes: ShieldedNodes=None, desired_stack_type: str=None, desired_tpu_config: TpuConfig=None, desired_vertical_pod_autoscaling: VerticalPodAutoscaling=None, desired_workload_alts_config: WorkloadALTSConfig=None, desired_workload_certificates: WorkloadCertificates=None, desired_workload_identity_config: WorkloadIdentityConfig=None, enable_k8s_beta_apis: K8sBetaAPIConfig=None, etag: str=None, removed_additional_pod_ranges_config: AdditionalPodRangesConfig=None):
        """ClusterUpdate - a model defined in OpenAPI

        :param additional_pod_ranges_config: The additional_pod_ranges_config of this ClusterUpdate.
        :param desired_addons_config: The desired_addons_config of this ClusterUpdate.
        :param desired_authenticator_groups_config: The desired_authenticator_groups_config of this ClusterUpdate.
        :param desired_autopilot_workload_policy_config: The desired_autopilot_workload_policy_config of this ClusterUpdate.
        :param desired_binary_authorization: The desired_binary_authorization of this ClusterUpdate.
        :param desired_cluster_autoscaling: The desired_cluster_autoscaling of this ClusterUpdate.
        :param desired_cluster_telemetry: The desired_cluster_telemetry of this ClusterUpdate.
        :param desired_cost_management_config: The desired_cost_management_config of this ClusterUpdate.
        :param desired_database_encryption: The desired_database_encryption of this ClusterUpdate.
        :param desired_datapath_provider: The desired_datapath_provider of this ClusterUpdate.
        :param desired_default_snat_status: The desired_default_snat_status of this ClusterUpdate.
        :param desired_dns_config: The desired_dns_config of this ClusterUpdate.
        :param desired_enable_fqdn_network_policy: The desired_enable_fqdn_network_policy of this ClusterUpdate.
        :param desired_enable_private_endpoint: The desired_enable_private_endpoint of this ClusterUpdate.
        :param desired_fleet: The desired_fleet of this ClusterUpdate.
        :param desired_gateway_api_config: The desired_gateway_api_config of this ClusterUpdate.
        :param desired_gcfs_config: The desired_gcfs_config of this ClusterUpdate.
        :param desired_host_maintenance_policy: The desired_host_maintenance_policy of this ClusterUpdate.
        :param desired_identity_service_config: The desired_identity_service_config of this ClusterUpdate.
        :param desired_image_type: The desired_image_type of this ClusterUpdate.
        :param desired_in_transit_encryption_config: The desired_in_transit_encryption_config of this ClusterUpdate.
        :param desired_intra_node_visibility_config: The desired_intra_node_visibility_config of this ClusterUpdate.
        :param desired_k8s_beta_apis: The desired_k8s_beta_apis of this ClusterUpdate.
        :param desired_l4ilb_subsetting_config: The desired_l4ilb_subsetting_config of this ClusterUpdate.
        :param desired_locations: The desired_locations of this ClusterUpdate.
        :param desired_logging_config: The desired_logging_config of this ClusterUpdate.
        :param desired_logging_service: The desired_logging_service of this ClusterUpdate.
        :param desired_master: The desired_master of this ClusterUpdate.
        :param desired_master_authorized_networks_config: The desired_master_authorized_networks_config of this ClusterUpdate.
        :param desired_master_version: The desired_master_version of this ClusterUpdate.
        :param desired_mesh_certificates: The desired_mesh_certificates of this ClusterUpdate.
        :param desired_monitoring_config: The desired_monitoring_config of this ClusterUpdate.
        :param desired_monitoring_service: The desired_monitoring_service of this ClusterUpdate.
        :param desired_network_performance_config: The desired_network_performance_config of this ClusterUpdate.
        :param desired_node_pool_auto_config_network_tags: The desired_node_pool_auto_config_network_tags of this ClusterUpdate.
        :param desired_node_pool_auto_config_resource_manager_tags: The desired_node_pool_auto_config_resource_manager_tags of this ClusterUpdate.
        :param desired_node_pool_autoscaling: The desired_node_pool_autoscaling of this ClusterUpdate.
        :param desired_node_pool_id: The desired_node_pool_id of this ClusterUpdate.
        :param desired_node_pool_logging_config: The desired_node_pool_logging_config of this ClusterUpdate.
        :param desired_node_version: The desired_node_version of this ClusterUpdate.
        :param desired_notification_config: The desired_notification_config of this ClusterUpdate.
        :param desired_parent_product_config: The desired_parent_product_config of this ClusterUpdate.
        :param desired_pod_security_policy_config: The desired_pod_security_policy_config of this ClusterUpdate.
        :param desired_private_cluster_config: The desired_private_cluster_config of this ClusterUpdate.
        :param desired_private_ipv6_google_access: The desired_private_ipv6_google_access of this ClusterUpdate.
        :param desired_protect_config: The desired_protect_config of this ClusterUpdate.
        :param desired_release_channel: The desired_release_channel of this ClusterUpdate.
        :param desired_resource_usage_export_config: The desired_resource_usage_export_config of this ClusterUpdate.
        :param desired_security_posture_config: The desired_security_posture_config of this ClusterUpdate.
        :param desired_service_external_ips_config: The desired_service_external_ips_config of this ClusterUpdate.
        :param desired_shielded_nodes: The desired_shielded_nodes of this ClusterUpdate.
        :param desired_stack_type: The desired_stack_type of this ClusterUpdate.
        :param desired_tpu_config: The desired_tpu_config of this ClusterUpdate.
        :param desired_vertical_pod_autoscaling: The desired_vertical_pod_autoscaling of this ClusterUpdate.
        :param desired_workload_alts_config: The desired_workload_alts_config of this ClusterUpdate.
        :param desired_workload_certificates: The desired_workload_certificates of this ClusterUpdate.
        :param desired_workload_identity_config: The desired_workload_identity_config of this ClusterUpdate.
        :param enable_k8s_beta_apis: The enable_k8s_beta_apis of this ClusterUpdate.
        :param etag: The etag of this ClusterUpdate.
        :param removed_additional_pod_ranges_config: The removed_additional_pod_ranges_config of this ClusterUpdate.
        """
        self.openapi_types = {
            'additional_pod_ranges_config': AdditionalPodRangesConfig,
            'desired_addons_config': AddonsConfig,
            'desired_authenticator_groups_config': AuthenticatorGroupsConfig,
            'desired_autopilot_workload_policy_config': WorkloadPolicyConfig,
            'desired_binary_authorization': BinaryAuthorization,
            'desired_cluster_autoscaling': ClusterAutoscaling,
            'desired_cluster_telemetry': ClusterTelemetry,
            'desired_cost_management_config': CostManagementConfig,
            'desired_database_encryption': DatabaseEncryption,
            'desired_datapath_provider': str,
            'desired_default_snat_status': DefaultSnatStatus,
            'desired_dns_config': DNSConfig,
            'desired_enable_fqdn_network_policy': bool,
            'desired_enable_private_endpoint': bool,
            'desired_fleet': Fleet,
            'desired_gateway_api_config': GatewayAPIConfig,
            'desired_gcfs_config': GcfsConfig,
            'desired_host_maintenance_policy': HostMaintenancePolicy,
            'desired_identity_service_config': IdentityServiceConfig,
            'desired_image_type': str,
            'desired_in_transit_encryption_config': str,
            'desired_intra_node_visibility_config': IntraNodeVisibilityConfig,
            'desired_k8s_beta_apis': K8sBetaAPIConfig,
            'desired_l4ilb_subsetting_config': ILBSubsettingConfig,
            'desired_locations': List[str],
            'desired_logging_config': LoggingConfig,
            'desired_logging_service': str,
            'desired_master': object,
            'desired_master_authorized_networks_config': MasterAuthorizedNetworksConfig,
            'desired_master_version': str,
            'desired_mesh_certificates': MeshCertificates,
            'desired_monitoring_config': MonitoringConfig,
            'desired_monitoring_service': str,
            'desired_network_performance_config': ClusterNetworkPerformanceConfig,
            'desired_node_pool_auto_config_network_tags': NetworkTags,
            'desired_node_pool_auto_config_resource_manager_tags': ResourceManagerTags,
            'desired_node_pool_autoscaling': NodePoolAutoscaling,
            'desired_node_pool_id': str,
            'desired_node_pool_logging_config': NodePoolLoggingConfig,
            'desired_node_version': str,
            'desired_notification_config': NotificationConfig,
            'desired_parent_product_config': ParentProductConfig,
            'desired_pod_security_policy_config': PodSecurityPolicyConfig,
            'desired_private_cluster_config': PrivateClusterConfig,
            'desired_private_ipv6_google_access': str,
            'desired_protect_config': ProtectConfig,
            'desired_release_channel': ReleaseChannel,
            'desired_resource_usage_export_config': ResourceUsageExportConfig,
            'desired_security_posture_config': SecurityPostureConfig,
            'desired_service_external_ips_config': ServiceExternalIPsConfig,
            'desired_shielded_nodes': ShieldedNodes,
            'desired_stack_type': str,
            'desired_tpu_config': TpuConfig,
            'desired_vertical_pod_autoscaling': VerticalPodAutoscaling,
            'desired_workload_alts_config': WorkloadALTSConfig,
            'desired_workload_certificates': WorkloadCertificates,
            'desired_workload_identity_config': WorkloadIdentityConfig,
            'enable_k8s_beta_apis': K8sBetaAPIConfig,
            'etag': str,
            'removed_additional_pod_ranges_config': AdditionalPodRangesConfig
        }

        self.attribute_map = {
            'additional_pod_ranges_config': 'additionalPodRangesConfig',
            'desired_addons_config': 'desiredAddonsConfig',
            'desired_authenticator_groups_config': 'desiredAuthenticatorGroupsConfig',
            'desired_autopilot_workload_policy_config': 'desiredAutopilotWorkloadPolicyConfig',
            'desired_binary_authorization': 'desiredBinaryAuthorization',
            'desired_cluster_autoscaling': 'desiredClusterAutoscaling',
            'desired_cluster_telemetry': 'desiredClusterTelemetry',
            'desired_cost_management_config': 'desiredCostManagementConfig',
            'desired_database_encryption': 'desiredDatabaseEncryption',
            'desired_datapath_provider': 'desiredDatapathProvider',
            'desired_default_snat_status': 'desiredDefaultSnatStatus',
            'desired_dns_config': 'desiredDnsConfig',
            'desired_enable_fqdn_network_policy': 'desiredEnableFqdnNetworkPolicy',
            'desired_enable_private_endpoint': 'desiredEnablePrivateEndpoint',
            'desired_fleet': 'desiredFleet',
            'desired_gateway_api_config': 'desiredGatewayApiConfig',
            'desired_gcfs_config': 'desiredGcfsConfig',
            'desired_host_maintenance_policy': 'desiredHostMaintenancePolicy',
            'desired_identity_service_config': 'desiredIdentityServiceConfig',
            'desired_image_type': 'desiredImageType',
            'desired_in_transit_encryption_config': 'desiredInTransitEncryptionConfig',
            'desired_intra_node_visibility_config': 'desiredIntraNodeVisibilityConfig',
            'desired_k8s_beta_apis': 'desiredK8sBetaApis',
            'desired_l4ilb_subsetting_config': 'desiredL4ilbSubsettingConfig',
            'desired_locations': 'desiredLocations',
            'desired_logging_config': 'desiredLoggingConfig',
            'desired_logging_service': 'desiredLoggingService',
            'desired_master': 'desiredMaster',
            'desired_master_authorized_networks_config': 'desiredMasterAuthorizedNetworksConfig',
            'desired_master_version': 'desiredMasterVersion',
            'desired_mesh_certificates': 'desiredMeshCertificates',
            'desired_monitoring_config': 'desiredMonitoringConfig',
            'desired_monitoring_service': 'desiredMonitoringService',
            'desired_network_performance_config': 'desiredNetworkPerformanceConfig',
            'desired_node_pool_auto_config_network_tags': 'desiredNodePoolAutoConfigNetworkTags',
            'desired_node_pool_auto_config_resource_manager_tags': 'desiredNodePoolAutoConfigResourceManagerTags',
            'desired_node_pool_autoscaling': 'desiredNodePoolAutoscaling',
            'desired_node_pool_id': 'desiredNodePoolId',
            'desired_node_pool_logging_config': 'desiredNodePoolLoggingConfig',
            'desired_node_version': 'desiredNodeVersion',
            'desired_notification_config': 'desiredNotificationConfig',
            'desired_parent_product_config': 'desiredParentProductConfig',
            'desired_pod_security_policy_config': 'desiredPodSecurityPolicyConfig',
            'desired_private_cluster_config': 'desiredPrivateClusterConfig',
            'desired_private_ipv6_google_access': 'desiredPrivateIpv6GoogleAccess',
            'desired_protect_config': 'desiredProtectConfig',
            'desired_release_channel': 'desiredReleaseChannel',
            'desired_resource_usage_export_config': 'desiredResourceUsageExportConfig',
            'desired_security_posture_config': 'desiredSecurityPostureConfig',
            'desired_service_external_ips_config': 'desiredServiceExternalIpsConfig',
            'desired_shielded_nodes': 'desiredShieldedNodes',
            'desired_stack_type': 'desiredStackType',
            'desired_tpu_config': 'desiredTpuConfig',
            'desired_vertical_pod_autoscaling': 'desiredVerticalPodAutoscaling',
            'desired_workload_alts_config': 'desiredWorkloadAltsConfig',
            'desired_workload_certificates': 'desiredWorkloadCertificates',
            'desired_workload_identity_config': 'desiredWorkloadIdentityConfig',
            'enable_k8s_beta_apis': 'enableK8sBetaApis',
            'etag': 'etag',
            'removed_additional_pod_ranges_config': 'removedAdditionalPodRangesConfig'
        }

        self._additional_pod_ranges_config = additional_pod_ranges_config
        self._desired_addons_config = desired_addons_config
        self._desired_authenticator_groups_config = desired_authenticator_groups_config
        self._desired_autopilot_workload_policy_config = desired_autopilot_workload_policy_config
        self._desired_binary_authorization = desired_binary_authorization
        self._desired_cluster_autoscaling = desired_cluster_autoscaling
        self._desired_cluster_telemetry = desired_cluster_telemetry
        self._desired_cost_management_config = desired_cost_management_config
        self._desired_database_encryption = desired_database_encryption
        self._desired_datapath_provider = desired_datapath_provider
        self._desired_default_snat_status = desired_default_snat_status
        self._desired_dns_config = desired_dns_config
        self._desired_enable_fqdn_network_policy = desired_enable_fqdn_network_policy
        self._desired_enable_private_endpoint = desired_enable_private_endpoint
        self._desired_fleet = desired_fleet
        self._desired_gateway_api_config = desired_gateway_api_config
        self._desired_gcfs_config = desired_gcfs_config
        self._desired_host_maintenance_policy = desired_host_maintenance_policy
        self._desired_identity_service_config = desired_identity_service_config
        self._desired_image_type = desired_image_type
        self._desired_in_transit_encryption_config = desired_in_transit_encryption_config
        self._desired_intra_node_visibility_config = desired_intra_node_visibility_config
        self._desired_k8s_beta_apis = desired_k8s_beta_apis
        self._desired_l4ilb_subsetting_config = desired_l4ilb_subsetting_config
        self._desired_locations = desired_locations
        self._desired_logging_config = desired_logging_config
        self._desired_logging_service = desired_logging_service
        self._desired_master = desired_master
        self._desired_master_authorized_networks_config = desired_master_authorized_networks_config
        self._desired_master_version = desired_master_version
        self._desired_mesh_certificates = desired_mesh_certificates
        self._desired_monitoring_config = desired_monitoring_config
        self._desired_monitoring_service = desired_monitoring_service
        self._desired_network_performance_config = desired_network_performance_config
        self._desired_node_pool_auto_config_network_tags = desired_node_pool_auto_config_network_tags
        self._desired_node_pool_auto_config_resource_manager_tags = desired_node_pool_auto_config_resource_manager_tags
        self._desired_node_pool_autoscaling = desired_node_pool_autoscaling
        self._desired_node_pool_id = desired_node_pool_id
        self._desired_node_pool_logging_config = desired_node_pool_logging_config
        self._desired_node_version = desired_node_version
        self._desired_notification_config = desired_notification_config
        self._desired_parent_product_config = desired_parent_product_config
        self._desired_pod_security_policy_config = desired_pod_security_policy_config
        self._desired_private_cluster_config = desired_private_cluster_config
        self._desired_private_ipv6_google_access = desired_private_ipv6_google_access
        self._desired_protect_config = desired_protect_config
        self._desired_release_channel = desired_release_channel
        self._desired_resource_usage_export_config = desired_resource_usage_export_config
        self._desired_security_posture_config = desired_security_posture_config
        self._desired_service_external_ips_config = desired_service_external_ips_config
        self._desired_shielded_nodes = desired_shielded_nodes
        self._desired_stack_type = desired_stack_type
        self._desired_tpu_config = desired_tpu_config
        self._desired_vertical_pod_autoscaling = desired_vertical_pod_autoscaling
        self._desired_workload_alts_config = desired_workload_alts_config
        self._desired_workload_certificates = desired_workload_certificates
        self._desired_workload_identity_config = desired_workload_identity_config
        self._enable_k8s_beta_apis = enable_k8s_beta_apis
        self._etag = etag
        self._removed_additional_pod_ranges_config = removed_additional_pod_ranges_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClusterUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClusterUpdate of this ClusterUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_pod_ranges_config(self):
        """Gets the additional_pod_ranges_config of this ClusterUpdate.


        :return: The additional_pod_ranges_config of this ClusterUpdate.
        :rtype: AdditionalPodRangesConfig
        """
        return self._additional_pod_ranges_config

    @additional_pod_ranges_config.setter
    def additional_pod_ranges_config(self, additional_pod_ranges_config):
        """Sets the additional_pod_ranges_config of this ClusterUpdate.


        :param additional_pod_ranges_config: The additional_pod_ranges_config of this ClusterUpdate.
        :type additional_pod_ranges_config: AdditionalPodRangesConfig
        """

        self._additional_pod_ranges_config = additional_pod_ranges_config

    @property
    def desired_addons_config(self):
        """Gets the desired_addons_config of this ClusterUpdate.


        :return: The desired_addons_config of this ClusterUpdate.
        :rtype: AddonsConfig
        """
        return self._desired_addons_config

    @desired_addons_config.setter
    def desired_addons_config(self, desired_addons_config):
        """Sets the desired_addons_config of this ClusterUpdate.


        :param desired_addons_config: The desired_addons_config of this ClusterUpdate.
        :type desired_addons_config: AddonsConfig
        """

        self._desired_addons_config = desired_addons_config

    @property
    def desired_authenticator_groups_config(self):
        """Gets the desired_authenticator_groups_config of this ClusterUpdate.


        :return: The desired_authenticator_groups_config of this ClusterUpdate.
        :rtype: AuthenticatorGroupsConfig
        """
        return self._desired_authenticator_groups_config

    @desired_authenticator_groups_config.setter
    def desired_authenticator_groups_config(self, desired_authenticator_groups_config):
        """Sets the desired_authenticator_groups_config of this ClusterUpdate.


        :param desired_authenticator_groups_config: The desired_authenticator_groups_config of this ClusterUpdate.
        :type desired_authenticator_groups_config: AuthenticatorGroupsConfig
        """

        self._desired_authenticator_groups_config = desired_authenticator_groups_config

    @property
    def desired_autopilot_workload_policy_config(self):
        """Gets the desired_autopilot_workload_policy_config of this ClusterUpdate.


        :return: The desired_autopilot_workload_policy_config of this ClusterUpdate.
        :rtype: WorkloadPolicyConfig
        """
        return self._desired_autopilot_workload_policy_config

    @desired_autopilot_workload_policy_config.setter
    def desired_autopilot_workload_policy_config(self, desired_autopilot_workload_policy_config):
        """Sets the desired_autopilot_workload_policy_config of this ClusterUpdate.


        :param desired_autopilot_workload_policy_config: The desired_autopilot_workload_policy_config of this ClusterUpdate.
        :type desired_autopilot_workload_policy_config: WorkloadPolicyConfig
        """

        self._desired_autopilot_workload_policy_config = desired_autopilot_workload_policy_config

    @property
    def desired_binary_authorization(self):
        """Gets the desired_binary_authorization of this ClusterUpdate.


        :return: The desired_binary_authorization of this ClusterUpdate.
        :rtype: BinaryAuthorization
        """
        return self._desired_binary_authorization

    @desired_binary_authorization.setter
    def desired_binary_authorization(self, desired_binary_authorization):
        """Sets the desired_binary_authorization of this ClusterUpdate.


        :param desired_binary_authorization: The desired_binary_authorization of this ClusterUpdate.
        :type desired_binary_authorization: BinaryAuthorization
        """

        self._desired_binary_authorization = desired_binary_authorization

    @property
    def desired_cluster_autoscaling(self):
        """Gets the desired_cluster_autoscaling of this ClusterUpdate.


        :return: The desired_cluster_autoscaling of this ClusterUpdate.
        :rtype: ClusterAutoscaling
        """
        return self._desired_cluster_autoscaling

    @desired_cluster_autoscaling.setter
    def desired_cluster_autoscaling(self, desired_cluster_autoscaling):
        """Sets the desired_cluster_autoscaling of this ClusterUpdate.


        :param desired_cluster_autoscaling: The desired_cluster_autoscaling of this ClusterUpdate.
        :type desired_cluster_autoscaling: ClusterAutoscaling
        """

        self._desired_cluster_autoscaling = desired_cluster_autoscaling

    @property
    def desired_cluster_telemetry(self):
        """Gets the desired_cluster_telemetry of this ClusterUpdate.


        :return: The desired_cluster_telemetry of this ClusterUpdate.
        :rtype: ClusterTelemetry
        """
        return self._desired_cluster_telemetry

    @desired_cluster_telemetry.setter
    def desired_cluster_telemetry(self, desired_cluster_telemetry):
        """Sets the desired_cluster_telemetry of this ClusterUpdate.


        :param desired_cluster_telemetry: The desired_cluster_telemetry of this ClusterUpdate.
        :type desired_cluster_telemetry: ClusterTelemetry
        """

        self._desired_cluster_telemetry = desired_cluster_telemetry

    @property
    def desired_cost_management_config(self):
        """Gets the desired_cost_management_config of this ClusterUpdate.


        :return: The desired_cost_management_config of this ClusterUpdate.
        :rtype: CostManagementConfig
        """
        return self._desired_cost_management_config

    @desired_cost_management_config.setter
    def desired_cost_management_config(self, desired_cost_management_config):
        """Sets the desired_cost_management_config of this ClusterUpdate.


        :param desired_cost_management_config: The desired_cost_management_config of this ClusterUpdate.
        :type desired_cost_management_config: CostManagementConfig
        """

        self._desired_cost_management_config = desired_cost_management_config

    @property
    def desired_database_encryption(self):
        """Gets the desired_database_encryption of this ClusterUpdate.


        :return: The desired_database_encryption of this ClusterUpdate.
        :rtype: DatabaseEncryption
        """
        return self._desired_database_encryption

    @desired_database_encryption.setter
    def desired_database_encryption(self, desired_database_encryption):
        """Sets the desired_database_encryption of this ClusterUpdate.


        :param desired_database_encryption: The desired_database_encryption of this ClusterUpdate.
        :type desired_database_encryption: DatabaseEncryption
        """

        self._desired_database_encryption = desired_database_encryption

    @property
    def desired_datapath_provider(self):
        """Gets the desired_datapath_provider of this ClusterUpdate.

        The desired datapath provider for the cluster.

        :return: The desired_datapath_provider of this ClusterUpdate.
        :rtype: str
        """
        return self._desired_datapath_provider

    @desired_datapath_provider.setter
    def desired_datapath_provider(self, desired_datapath_provider):
        """Sets the desired_datapath_provider of this ClusterUpdate.

        The desired datapath provider for the cluster.

        :param desired_datapath_provider: The desired_datapath_provider of this ClusterUpdate.
        :type desired_datapath_provider: str
        """
        allowed_values = ["DATAPATH_PROVIDER_UNSPECIFIED", "LEGACY_DATAPATH", "ADVANCED_DATAPATH"]  # noqa: E501
        if desired_datapath_provider not in allowed_values:
            raise ValueError(
                "Invalid value for `desired_datapath_provider` ({0}), must be one of {1}"
                .format(desired_datapath_provider, allowed_values)
            )

        self._desired_datapath_provider = desired_datapath_provider

    @property
    def desired_default_snat_status(self):
        """Gets the desired_default_snat_status of this ClusterUpdate.


        :return: The desired_default_snat_status of this ClusterUpdate.
        :rtype: DefaultSnatStatus
        """
        return self._desired_default_snat_status

    @desired_default_snat_status.setter
    def desired_default_snat_status(self, desired_default_snat_status):
        """Sets the desired_default_snat_status of this ClusterUpdate.


        :param desired_default_snat_status: The desired_default_snat_status of this ClusterUpdate.
        :type desired_default_snat_status: DefaultSnatStatus
        """

        self._desired_default_snat_status = desired_default_snat_status

    @property
    def desired_dns_config(self):
        """Gets the desired_dns_config of this ClusterUpdate.


        :return: The desired_dns_config of this ClusterUpdate.
        :rtype: DNSConfig
        """
        return self._desired_dns_config

    @desired_dns_config.setter
    def desired_dns_config(self, desired_dns_config):
        """Sets the desired_dns_config of this ClusterUpdate.


        :param desired_dns_config: The desired_dns_config of this ClusterUpdate.
        :type desired_dns_config: DNSConfig
        """

        self._desired_dns_config = desired_dns_config

    @property
    def desired_enable_fqdn_network_policy(self):
        """Gets the desired_enable_fqdn_network_policy of this ClusterUpdate.

        Enable/Disable FQDN Network Policy for the cluster.

        :return: The desired_enable_fqdn_network_policy of this ClusterUpdate.
        :rtype: bool
        """
        return self._desired_enable_fqdn_network_policy

    @desired_enable_fqdn_network_policy.setter
    def desired_enable_fqdn_network_policy(self, desired_enable_fqdn_network_policy):
        """Sets the desired_enable_fqdn_network_policy of this ClusterUpdate.

        Enable/Disable FQDN Network Policy for the cluster.

        :param desired_enable_fqdn_network_policy: The desired_enable_fqdn_network_policy of this ClusterUpdate.
        :type desired_enable_fqdn_network_policy: bool
        """

        self._desired_enable_fqdn_network_policy = desired_enable_fqdn_network_policy

    @property
    def desired_enable_private_endpoint(self):
        """Gets the desired_enable_private_endpoint of this ClusterUpdate.

        Enable/Disable private endpoint for the cluster's master.

        :return: The desired_enable_private_endpoint of this ClusterUpdate.
        :rtype: bool
        """
        return self._desired_enable_private_endpoint

    @desired_enable_private_endpoint.setter
    def desired_enable_private_endpoint(self, desired_enable_private_endpoint):
        """Sets the desired_enable_private_endpoint of this ClusterUpdate.

        Enable/Disable private endpoint for the cluster's master.

        :param desired_enable_private_endpoint: The desired_enable_private_endpoint of this ClusterUpdate.
        :type desired_enable_private_endpoint: bool
        """

        self._desired_enable_private_endpoint = desired_enable_private_endpoint

    @property
    def desired_fleet(self):
        """Gets the desired_fleet of this ClusterUpdate.


        :return: The desired_fleet of this ClusterUpdate.
        :rtype: Fleet
        """
        return self._desired_fleet

    @desired_fleet.setter
    def desired_fleet(self, desired_fleet):
        """Sets the desired_fleet of this ClusterUpdate.


        :param desired_fleet: The desired_fleet of this ClusterUpdate.
        :type desired_fleet: Fleet
        """

        self._desired_fleet = desired_fleet

    @property
    def desired_gateway_api_config(self):
        """Gets the desired_gateway_api_config of this ClusterUpdate.


        :return: The desired_gateway_api_config of this ClusterUpdate.
        :rtype: GatewayAPIConfig
        """
        return self._desired_gateway_api_config

    @desired_gateway_api_config.setter
    def desired_gateway_api_config(self, desired_gateway_api_config):
        """Sets the desired_gateway_api_config of this ClusterUpdate.


        :param desired_gateway_api_config: The desired_gateway_api_config of this ClusterUpdate.
        :type desired_gateway_api_config: GatewayAPIConfig
        """

        self._desired_gateway_api_config = desired_gateway_api_config

    @property
    def desired_gcfs_config(self):
        """Gets the desired_gcfs_config of this ClusterUpdate.


        :return: The desired_gcfs_config of this ClusterUpdate.
        :rtype: GcfsConfig
        """
        return self._desired_gcfs_config

    @desired_gcfs_config.setter
    def desired_gcfs_config(self, desired_gcfs_config):
        """Sets the desired_gcfs_config of this ClusterUpdate.


        :param desired_gcfs_config: The desired_gcfs_config of this ClusterUpdate.
        :type desired_gcfs_config: GcfsConfig
        """

        self._desired_gcfs_config = desired_gcfs_config

    @property
    def desired_host_maintenance_policy(self):
        """Gets the desired_host_maintenance_policy of this ClusterUpdate.


        :return: The desired_host_maintenance_policy of this ClusterUpdate.
        :rtype: HostMaintenancePolicy
        """
        return self._desired_host_maintenance_policy

    @desired_host_maintenance_policy.setter
    def desired_host_maintenance_policy(self, desired_host_maintenance_policy):
        """Sets the desired_host_maintenance_policy of this ClusterUpdate.


        :param desired_host_maintenance_policy: The desired_host_maintenance_policy of this ClusterUpdate.
        :type desired_host_maintenance_policy: HostMaintenancePolicy
        """

        self._desired_host_maintenance_policy = desired_host_maintenance_policy

    @property
    def desired_identity_service_config(self):
        """Gets the desired_identity_service_config of this ClusterUpdate.


        :return: The desired_identity_service_config of this ClusterUpdate.
        :rtype: IdentityServiceConfig
        """
        return self._desired_identity_service_config

    @desired_identity_service_config.setter
    def desired_identity_service_config(self, desired_identity_service_config):
        """Sets the desired_identity_service_config of this ClusterUpdate.


        :param desired_identity_service_config: The desired_identity_service_config of this ClusterUpdate.
        :type desired_identity_service_config: IdentityServiceConfig
        """

        self._desired_identity_service_config = desired_identity_service_config

    @property
    def desired_image_type(self):
        """Gets the desired_image_type of this ClusterUpdate.

        The desired image type for the node pool. NOTE: Set the \"desired_node_pool\" field as well.

        :return: The desired_image_type of this ClusterUpdate.
        :rtype: str
        """
        return self._desired_image_type

    @desired_image_type.setter
    def desired_image_type(self, desired_image_type):
        """Sets the desired_image_type of this ClusterUpdate.

        The desired image type for the node pool. NOTE: Set the \"desired_node_pool\" field as well.

        :param desired_image_type: The desired_image_type of this ClusterUpdate.
        :type desired_image_type: str
        """

        self._desired_image_type = desired_image_type

    @property
    def desired_in_transit_encryption_config(self):
        """Gets the desired_in_transit_encryption_config of this ClusterUpdate.

        Specify the details of in-transit encryption.

        :return: The desired_in_transit_encryption_config of this ClusterUpdate.
        :rtype: str
        """
        return self._desired_in_transit_encryption_config

    @desired_in_transit_encryption_config.setter
    def desired_in_transit_encryption_config(self, desired_in_transit_encryption_config):
        """Sets the desired_in_transit_encryption_config of this ClusterUpdate.

        Specify the details of in-transit encryption.

        :param desired_in_transit_encryption_config: The desired_in_transit_encryption_config of this ClusterUpdate.
        :type desired_in_transit_encryption_config: str
        """
        allowed_values = ["IN_TRANSIT_ENCRYPTION_CONFIG_UNSPECIFIED", "IN_TRANSIT_ENCRYPTION_DISABLED", "IN_TRANSIT_ENCRYPTION_INTER_NODE_TRANSPARENT"]  # noqa: E501
        if desired_in_transit_encryption_config not in allowed_values:
            raise ValueError(
                "Invalid value for `desired_in_transit_encryption_config` ({0}), must be one of {1}"
                .format(desired_in_transit_encryption_config, allowed_values)
            )

        self._desired_in_transit_encryption_config = desired_in_transit_encryption_config

    @property
    def desired_intra_node_visibility_config(self):
        """Gets the desired_intra_node_visibility_config of this ClusterUpdate.


        :return: The desired_intra_node_visibility_config of this ClusterUpdate.
        :rtype: IntraNodeVisibilityConfig
        """
        return self._desired_intra_node_visibility_config

    @desired_intra_node_visibility_config.setter
    def desired_intra_node_visibility_config(self, desired_intra_node_visibility_config):
        """Sets the desired_intra_node_visibility_config of this ClusterUpdate.


        :param desired_intra_node_visibility_config: The desired_intra_node_visibility_config of this ClusterUpdate.
        :type desired_intra_node_visibility_config: IntraNodeVisibilityConfig
        """

        self._desired_intra_node_visibility_config = desired_intra_node_visibility_config

    @property
    def desired_k8s_beta_apis(self):
        """Gets the desired_k8s_beta_apis of this ClusterUpdate.


        :return: The desired_k8s_beta_apis of this ClusterUpdate.
        :rtype: K8sBetaAPIConfig
        """
        return self._desired_k8s_beta_apis

    @desired_k8s_beta_apis.setter
    def desired_k8s_beta_apis(self, desired_k8s_beta_apis):
        """Sets the desired_k8s_beta_apis of this ClusterUpdate.


        :param desired_k8s_beta_apis: The desired_k8s_beta_apis of this ClusterUpdate.
        :type desired_k8s_beta_apis: K8sBetaAPIConfig
        """

        self._desired_k8s_beta_apis = desired_k8s_beta_apis

    @property
    def desired_l4ilb_subsetting_config(self):
        """Gets the desired_l4ilb_subsetting_config of this ClusterUpdate.


        :return: The desired_l4ilb_subsetting_config of this ClusterUpdate.
        :rtype: ILBSubsettingConfig
        """
        return self._desired_l4ilb_subsetting_config

    @desired_l4ilb_subsetting_config.setter
    def desired_l4ilb_subsetting_config(self, desired_l4ilb_subsetting_config):
        """Sets the desired_l4ilb_subsetting_config of this ClusterUpdate.


        :param desired_l4ilb_subsetting_config: The desired_l4ilb_subsetting_config of this ClusterUpdate.
        :type desired_l4ilb_subsetting_config: ILBSubsettingConfig
        """

        self._desired_l4ilb_subsetting_config = desired_l4ilb_subsetting_config

    @property
    def desired_locations(self):
        """Gets the desired_locations of this ClusterUpdate.

        The desired list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes should be located. This list must always include the cluster's primary zone. Warning: changing cluster locations will update the locations of all node pools and will result in nodes being added and/or removed.

        :return: The desired_locations of this ClusterUpdate.
        :rtype: List[str]
        """
        return self._desired_locations

    @desired_locations.setter
    def desired_locations(self, desired_locations):
        """Sets the desired_locations of this ClusterUpdate.

        The desired list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes should be located. This list must always include the cluster's primary zone. Warning: changing cluster locations will update the locations of all node pools and will result in nodes being added and/or removed.

        :param desired_locations: The desired_locations of this ClusterUpdate.
        :type desired_locations: List[str]
        """

        self._desired_locations = desired_locations

    @property
    def desired_logging_config(self):
        """Gets the desired_logging_config of this ClusterUpdate.


        :return: The desired_logging_config of this ClusterUpdate.
        :rtype: LoggingConfig
        """
        return self._desired_logging_config

    @desired_logging_config.setter
    def desired_logging_config(self, desired_logging_config):
        """Sets the desired_logging_config of this ClusterUpdate.


        :param desired_logging_config: The desired_logging_config of this ClusterUpdate.
        :type desired_logging_config: LoggingConfig
        """

        self._desired_logging_config = desired_logging_config

    @property
    def desired_logging_service(self):
        """Gets the desired_logging_service of this ClusterUpdate.

        The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.

        :return: The desired_logging_service of this ClusterUpdate.
        :rtype: str
        """
        return self._desired_logging_service

    @desired_logging_service.setter
    def desired_logging_service(self, desired_logging_service):
        """Sets the desired_logging_service of this ClusterUpdate.

        The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.

        :param desired_logging_service: The desired_logging_service of this ClusterUpdate.
        :type desired_logging_service: str
        """

        self._desired_logging_service = desired_logging_service

    @property
    def desired_master(self):
        """Gets the desired_master of this ClusterUpdate.

        Master is the configuration for components on master.

        :return: The desired_master of this ClusterUpdate.
        :rtype: object
        """
        return self._desired_master

    @desired_master.setter
    def desired_master(self, desired_master):
        """Sets the desired_master of this ClusterUpdate.

        Master is the configuration for components on master.

        :param desired_master: The desired_master of this ClusterUpdate.
        :type desired_master: object
        """

        self._desired_master = desired_master

    @property
    def desired_master_authorized_networks_config(self):
        """Gets the desired_master_authorized_networks_config of this ClusterUpdate.


        :return: The desired_master_authorized_networks_config of this ClusterUpdate.
        :rtype: MasterAuthorizedNetworksConfig
        """
        return self._desired_master_authorized_networks_config

    @desired_master_authorized_networks_config.setter
    def desired_master_authorized_networks_config(self, desired_master_authorized_networks_config):
        """Sets the desired_master_authorized_networks_config of this ClusterUpdate.


        :param desired_master_authorized_networks_config: The desired_master_authorized_networks_config of this ClusterUpdate.
        :type desired_master_authorized_networks_config: MasterAuthorizedNetworksConfig
        """

        self._desired_master_authorized_networks_config = desired_master_authorized_networks_config

    @property
    def desired_master_version(self):
        """Gets the desired_master_version of this ClusterUpdate.

        The Kubernetes version to change the master to. The only valid value is the latest supported version. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - \"latest\": picks the highest valid Kubernetes version - \"1.X\": picks the highest valid patch+gke.N patch in the 1.X version - \"1.X.Y\": picks the highest valid gke.N patch in the 1.X.Y version - \"1.X.Y-gke.N\": picks an explicit Kubernetes version - \"-\": picks the default Kubernetes version

        :return: The desired_master_version of this ClusterUpdate.
        :rtype: str
        """
        return self._desired_master_version

    @desired_master_version.setter
    def desired_master_version(self, desired_master_version):
        """Sets the desired_master_version of this ClusterUpdate.

        The Kubernetes version to change the master to. The only valid value is the latest supported version. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - \"latest\": picks the highest valid Kubernetes version - \"1.X\": picks the highest valid patch+gke.N patch in the 1.X version - \"1.X.Y\": picks the highest valid gke.N patch in the 1.X.Y version - \"1.X.Y-gke.N\": picks an explicit Kubernetes version - \"-\": picks the default Kubernetes version

        :param desired_master_version: The desired_master_version of this ClusterUpdate.
        :type desired_master_version: str
        """

        self._desired_master_version = desired_master_version

    @property
    def desired_mesh_certificates(self):
        """Gets the desired_mesh_certificates of this ClusterUpdate.


        :return: The desired_mesh_certificates of this ClusterUpdate.
        :rtype: MeshCertificates
        """
        return self._desired_mesh_certificates

    @desired_mesh_certificates.setter
    def desired_mesh_certificates(self, desired_mesh_certificates):
        """Sets the desired_mesh_certificates of this ClusterUpdate.


        :param desired_mesh_certificates: The desired_mesh_certificates of this ClusterUpdate.
        :type desired_mesh_certificates: MeshCertificates
        """

        self._desired_mesh_certificates = desired_mesh_certificates

    @property
    def desired_monitoring_config(self):
        """Gets the desired_monitoring_config of this ClusterUpdate.


        :return: The desired_monitoring_config of this ClusterUpdate.
        :rtype: MonitoringConfig
        """
        return self._desired_monitoring_config

    @desired_monitoring_config.setter
    def desired_monitoring_config(self, desired_monitoring_config):
        """Sets the desired_monitoring_config of this ClusterUpdate.


        :param desired_monitoring_config: The desired_monitoring_config of this ClusterUpdate.
        :type desired_monitoring_config: MonitoringConfig
        """

        self._desired_monitoring_config = desired_monitoring_config

    @property
    def desired_monitoring_service(self):
        """Gets the desired_monitoring_service of this ClusterUpdate.

        The monitoring service the cluster should use to write metrics. Currently available options: * \"monitoring.googleapis.com/kubernetes\" - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.

        :return: The desired_monitoring_service of this ClusterUpdate.
        :rtype: str
        """
        return self._desired_monitoring_service

    @desired_monitoring_service.setter
    def desired_monitoring_service(self, desired_monitoring_service):
        """Sets the desired_monitoring_service of this ClusterUpdate.

        The monitoring service the cluster should use to write metrics. Currently available options: * \"monitoring.googleapis.com/kubernetes\" - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.

        :param desired_monitoring_service: The desired_monitoring_service of this ClusterUpdate.
        :type desired_monitoring_service: str
        """

        self._desired_monitoring_service = desired_monitoring_service

    @property
    def desired_network_performance_config(self):
        """Gets the desired_network_performance_config of this ClusterUpdate.


        :return: The desired_network_performance_config of this ClusterUpdate.
        :rtype: ClusterNetworkPerformanceConfig
        """
        return self._desired_network_performance_config

    @desired_network_performance_config.setter
    def desired_network_performance_config(self, desired_network_performance_config):
        """Sets the desired_network_performance_config of this ClusterUpdate.


        :param desired_network_performance_config: The desired_network_performance_config of this ClusterUpdate.
        :type desired_network_performance_config: ClusterNetworkPerformanceConfig
        """

        self._desired_network_performance_config = desired_network_performance_config

    @property
    def desired_node_pool_auto_config_network_tags(self):
        """Gets the desired_node_pool_auto_config_network_tags of this ClusterUpdate.


        :return: The desired_node_pool_auto_config_network_tags of this ClusterUpdate.
        :rtype: NetworkTags
        """
        return self._desired_node_pool_auto_config_network_tags

    @desired_node_pool_auto_config_network_tags.setter
    def desired_node_pool_auto_config_network_tags(self, desired_node_pool_auto_config_network_tags):
        """Sets the desired_node_pool_auto_config_network_tags of this ClusterUpdate.


        :param desired_node_pool_auto_config_network_tags: The desired_node_pool_auto_config_network_tags of this ClusterUpdate.
        :type desired_node_pool_auto_config_network_tags: NetworkTags
        """

        self._desired_node_pool_auto_config_network_tags = desired_node_pool_auto_config_network_tags

    @property
    def desired_node_pool_auto_config_resource_manager_tags(self):
        """Gets the desired_node_pool_auto_config_resource_manager_tags of this ClusterUpdate.


        :return: The desired_node_pool_auto_config_resource_manager_tags of this ClusterUpdate.
        :rtype: ResourceManagerTags
        """
        return self._desired_node_pool_auto_config_resource_manager_tags

    @desired_node_pool_auto_config_resource_manager_tags.setter
    def desired_node_pool_auto_config_resource_manager_tags(self, desired_node_pool_auto_config_resource_manager_tags):
        """Sets the desired_node_pool_auto_config_resource_manager_tags of this ClusterUpdate.


        :param desired_node_pool_auto_config_resource_manager_tags: The desired_node_pool_auto_config_resource_manager_tags of this ClusterUpdate.
        :type desired_node_pool_auto_config_resource_manager_tags: ResourceManagerTags
        """

        self._desired_node_pool_auto_config_resource_manager_tags = desired_node_pool_auto_config_resource_manager_tags

    @property
    def desired_node_pool_autoscaling(self):
        """Gets the desired_node_pool_autoscaling of this ClusterUpdate.


        :return: The desired_node_pool_autoscaling of this ClusterUpdate.
        :rtype: NodePoolAutoscaling
        """
        return self._desired_node_pool_autoscaling

    @desired_node_pool_autoscaling.setter
    def desired_node_pool_autoscaling(self, desired_node_pool_autoscaling):
        """Sets the desired_node_pool_autoscaling of this ClusterUpdate.


        :param desired_node_pool_autoscaling: The desired_node_pool_autoscaling of this ClusterUpdate.
        :type desired_node_pool_autoscaling: NodePoolAutoscaling
        """

        self._desired_node_pool_autoscaling = desired_node_pool_autoscaling

    @property
    def desired_node_pool_id(self):
        """Gets the desired_node_pool_id of this ClusterUpdate.

        The node pool to be upgraded. This field is mandatory if \"desired_node_version\", \"desired_image_family\", \"desired_node_pool_autoscaling\", or \"desired_workload_metadata_config\" is specified and there is more than one node pool on the cluster.

        :return: The desired_node_pool_id of this ClusterUpdate.
        :rtype: str
        """
        return self._desired_node_pool_id

    @desired_node_pool_id.setter
    def desired_node_pool_id(self, desired_node_pool_id):
        """Sets the desired_node_pool_id of this ClusterUpdate.

        The node pool to be upgraded. This field is mandatory if \"desired_node_version\", \"desired_image_family\", \"desired_node_pool_autoscaling\", or \"desired_workload_metadata_config\" is specified and there is more than one node pool on the cluster.

        :param desired_node_pool_id: The desired_node_pool_id of this ClusterUpdate.
        :type desired_node_pool_id: str
        """

        self._desired_node_pool_id = desired_node_pool_id

    @property
    def desired_node_pool_logging_config(self):
        """Gets the desired_node_pool_logging_config of this ClusterUpdate.


        :return: The desired_node_pool_logging_config of this ClusterUpdate.
        :rtype: NodePoolLoggingConfig
        """
        return self._desired_node_pool_logging_config

    @desired_node_pool_logging_config.setter
    def desired_node_pool_logging_config(self, desired_node_pool_logging_config):
        """Sets the desired_node_pool_logging_config of this ClusterUpdate.


        :param desired_node_pool_logging_config: The desired_node_pool_logging_config of this ClusterUpdate.
        :type desired_node_pool_logging_config: NodePoolLoggingConfig
        """

        self._desired_node_pool_logging_config = desired_node_pool_logging_config

    @property
    def desired_node_version(self):
        """Gets the desired_node_version of this ClusterUpdate.

        The Kubernetes version to change the nodes to (typically an upgrade). Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - \"latest\": picks the highest valid Kubernetes version - \"1.X\": picks the highest valid patch+gke.N patch in the 1.X version - \"1.X.Y\": picks the highest valid gke.N patch in the 1.X.Y version - \"1.X.Y-gke.N\": picks an explicit Kubernetes version - \"-\": picks the Kubernetes master version

        :return: The desired_node_version of this ClusterUpdate.
        :rtype: str
        """
        return self._desired_node_version

    @desired_node_version.setter
    def desired_node_version(self, desired_node_version):
        """Sets the desired_node_version of this ClusterUpdate.

        The Kubernetes version to change the nodes to (typically an upgrade). Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - \"latest\": picks the highest valid Kubernetes version - \"1.X\": picks the highest valid patch+gke.N patch in the 1.X version - \"1.X.Y\": picks the highest valid gke.N patch in the 1.X.Y version - \"1.X.Y-gke.N\": picks an explicit Kubernetes version - \"-\": picks the Kubernetes master version

        :param desired_node_version: The desired_node_version of this ClusterUpdate.
        :type desired_node_version: str
        """

        self._desired_node_version = desired_node_version

    @property
    def desired_notification_config(self):
        """Gets the desired_notification_config of this ClusterUpdate.


        :return: The desired_notification_config of this ClusterUpdate.
        :rtype: NotificationConfig
        """
        return self._desired_notification_config

    @desired_notification_config.setter
    def desired_notification_config(self, desired_notification_config):
        """Sets the desired_notification_config of this ClusterUpdate.


        :param desired_notification_config: The desired_notification_config of this ClusterUpdate.
        :type desired_notification_config: NotificationConfig
        """

        self._desired_notification_config = desired_notification_config

    @property
    def desired_parent_product_config(self):
        """Gets the desired_parent_product_config of this ClusterUpdate.


        :return: The desired_parent_product_config of this ClusterUpdate.
        :rtype: ParentProductConfig
        """
        return self._desired_parent_product_config

    @desired_parent_product_config.setter
    def desired_parent_product_config(self, desired_parent_product_config):
        """Sets the desired_parent_product_config of this ClusterUpdate.


        :param desired_parent_product_config: The desired_parent_product_config of this ClusterUpdate.
        :type desired_parent_product_config: ParentProductConfig
        """

        self._desired_parent_product_config = desired_parent_product_config

    @property
    def desired_pod_security_policy_config(self):
        """Gets the desired_pod_security_policy_config of this ClusterUpdate.


        :return: The desired_pod_security_policy_config of this ClusterUpdate.
        :rtype: PodSecurityPolicyConfig
        """
        return self._desired_pod_security_policy_config

    @desired_pod_security_policy_config.setter
    def desired_pod_security_policy_config(self, desired_pod_security_policy_config):
        """Sets the desired_pod_security_policy_config of this ClusterUpdate.


        :param desired_pod_security_policy_config: The desired_pod_security_policy_config of this ClusterUpdate.
        :type desired_pod_security_policy_config: PodSecurityPolicyConfig
        """

        self._desired_pod_security_policy_config = desired_pod_security_policy_config

    @property
    def desired_private_cluster_config(self):
        """Gets the desired_private_cluster_config of this ClusterUpdate.


        :return: The desired_private_cluster_config of this ClusterUpdate.
        :rtype: PrivateClusterConfig
        """
        return self._desired_private_cluster_config

    @desired_private_cluster_config.setter
    def desired_private_cluster_config(self, desired_private_cluster_config):
        """Sets the desired_private_cluster_config of this ClusterUpdate.


        :param desired_private_cluster_config: The desired_private_cluster_config of this ClusterUpdate.
        :type desired_private_cluster_config: PrivateClusterConfig
        """

        self._desired_private_cluster_config = desired_private_cluster_config

    @property
    def desired_private_ipv6_google_access(self):
        """Gets the desired_private_ipv6_google_access of this ClusterUpdate.

        The desired state of IPv6 connectivity to Google Services.

        :return: The desired_private_ipv6_google_access of this ClusterUpdate.
        :rtype: str
        """
        return self._desired_private_ipv6_google_access

    @desired_private_ipv6_google_access.setter
    def desired_private_ipv6_google_access(self, desired_private_ipv6_google_access):
        """Sets the desired_private_ipv6_google_access of this ClusterUpdate.

        The desired state of IPv6 connectivity to Google Services.

        :param desired_private_ipv6_google_access: The desired_private_ipv6_google_access of this ClusterUpdate.
        :type desired_private_ipv6_google_access: str
        """
        allowed_values = ["PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED", "PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED", "PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE", "PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL"]  # noqa: E501
        if desired_private_ipv6_google_access not in allowed_values:
            raise ValueError(
                "Invalid value for `desired_private_ipv6_google_access` ({0}), must be one of {1}"
                .format(desired_private_ipv6_google_access, allowed_values)
            )

        self._desired_private_ipv6_google_access = desired_private_ipv6_google_access

    @property
    def desired_protect_config(self):
        """Gets the desired_protect_config of this ClusterUpdate.


        :return: The desired_protect_config of this ClusterUpdate.
        :rtype: ProtectConfig
        """
        return self._desired_protect_config

    @desired_protect_config.setter
    def desired_protect_config(self, desired_protect_config):
        """Sets the desired_protect_config of this ClusterUpdate.


        :param desired_protect_config: The desired_protect_config of this ClusterUpdate.
        :type desired_protect_config: ProtectConfig
        """

        self._desired_protect_config = desired_protect_config

    @property
    def desired_release_channel(self):
        """Gets the desired_release_channel of this ClusterUpdate.


        :return: The desired_release_channel of this ClusterUpdate.
        :rtype: ReleaseChannel
        """
        return self._desired_release_channel

    @desired_release_channel.setter
    def desired_release_channel(self, desired_release_channel):
        """Sets the desired_release_channel of this ClusterUpdate.


        :param desired_release_channel: The desired_release_channel of this ClusterUpdate.
        :type desired_release_channel: ReleaseChannel
        """

        self._desired_release_channel = desired_release_channel

    @property
    def desired_resource_usage_export_config(self):
        """Gets the desired_resource_usage_export_config of this ClusterUpdate.


        :return: The desired_resource_usage_export_config of this ClusterUpdate.
        :rtype: ResourceUsageExportConfig
        """
        return self._desired_resource_usage_export_config

    @desired_resource_usage_export_config.setter
    def desired_resource_usage_export_config(self, desired_resource_usage_export_config):
        """Sets the desired_resource_usage_export_config of this ClusterUpdate.


        :param desired_resource_usage_export_config: The desired_resource_usage_export_config of this ClusterUpdate.
        :type desired_resource_usage_export_config: ResourceUsageExportConfig
        """

        self._desired_resource_usage_export_config = desired_resource_usage_export_config

    @property
    def desired_security_posture_config(self):
        """Gets the desired_security_posture_config of this ClusterUpdate.


        :return: The desired_security_posture_config of this ClusterUpdate.
        :rtype: SecurityPostureConfig
        """
        return self._desired_security_posture_config

    @desired_security_posture_config.setter
    def desired_security_posture_config(self, desired_security_posture_config):
        """Sets the desired_security_posture_config of this ClusterUpdate.


        :param desired_security_posture_config: The desired_security_posture_config of this ClusterUpdate.
        :type desired_security_posture_config: SecurityPostureConfig
        """

        self._desired_security_posture_config = desired_security_posture_config

    @property
    def desired_service_external_ips_config(self):
        """Gets the desired_service_external_ips_config of this ClusterUpdate.


        :return: The desired_service_external_ips_config of this ClusterUpdate.
        :rtype: ServiceExternalIPsConfig
        """
        return self._desired_service_external_ips_config

    @desired_service_external_ips_config.setter
    def desired_service_external_ips_config(self, desired_service_external_ips_config):
        """Sets the desired_service_external_ips_config of this ClusterUpdate.


        :param desired_service_external_ips_config: The desired_service_external_ips_config of this ClusterUpdate.
        :type desired_service_external_ips_config: ServiceExternalIPsConfig
        """

        self._desired_service_external_ips_config = desired_service_external_ips_config

    @property
    def desired_shielded_nodes(self):
        """Gets the desired_shielded_nodes of this ClusterUpdate.


        :return: The desired_shielded_nodes of this ClusterUpdate.
        :rtype: ShieldedNodes
        """
        return self._desired_shielded_nodes

    @desired_shielded_nodes.setter
    def desired_shielded_nodes(self, desired_shielded_nodes):
        """Sets the desired_shielded_nodes of this ClusterUpdate.


        :param desired_shielded_nodes: The desired_shielded_nodes of this ClusterUpdate.
        :type desired_shielded_nodes: ShieldedNodes
        """

        self._desired_shielded_nodes = desired_shielded_nodes

    @property
    def desired_stack_type(self):
        """Gets the desired_stack_type of this ClusterUpdate.

        The desired stack type of the cluster. If a stack type is provided and does not match the current stack type of the cluster, update will attempt to change the stack type to the new type.

        :return: The desired_stack_type of this ClusterUpdate.
        :rtype: str
        """
        return self._desired_stack_type

    @desired_stack_type.setter
    def desired_stack_type(self, desired_stack_type):
        """Sets the desired_stack_type of this ClusterUpdate.

        The desired stack type of the cluster. If a stack type is provided and does not match the current stack type of the cluster, update will attempt to change the stack type to the new type.

        :param desired_stack_type: The desired_stack_type of this ClusterUpdate.
        :type desired_stack_type: str
        """
        allowed_values = ["STACK_TYPE_UNSPECIFIED", "IPV4", "IPV4_IPV6"]  # noqa: E501
        if desired_stack_type not in allowed_values:
            raise ValueError(
                "Invalid value for `desired_stack_type` ({0}), must be one of {1}"
                .format(desired_stack_type, allowed_values)
            )

        self._desired_stack_type = desired_stack_type

    @property
    def desired_tpu_config(self):
        """Gets the desired_tpu_config of this ClusterUpdate.


        :return: The desired_tpu_config of this ClusterUpdate.
        :rtype: TpuConfig
        """
        return self._desired_tpu_config

    @desired_tpu_config.setter
    def desired_tpu_config(self, desired_tpu_config):
        """Sets the desired_tpu_config of this ClusterUpdate.


        :param desired_tpu_config: The desired_tpu_config of this ClusterUpdate.
        :type desired_tpu_config: TpuConfig
        """

        self._desired_tpu_config = desired_tpu_config

    @property
    def desired_vertical_pod_autoscaling(self):
        """Gets the desired_vertical_pod_autoscaling of this ClusterUpdate.


        :return: The desired_vertical_pod_autoscaling of this ClusterUpdate.
        :rtype: VerticalPodAutoscaling
        """
        return self._desired_vertical_pod_autoscaling

    @desired_vertical_pod_autoscaling.setter
    def desired_vertical_pod_autoscaling(self, desired_vertical_pod_autoscaling):
        """Sets the desired_vertical_pod_autoscaling of this ClusterUpdate.


        :param desired_vertical_pod_autoscaling: The desired_vertical_pod_autoscaling of this ClusterUpdate.
        :type desired_vertical_pod_autoscaling: VerticalPodAutoscaling
        """

        self._desired_vertical_pod_autoscaling = desired_vertical_pod_autoscaling

    @property
    def desired_workload_alts_config(self):
        """Gets the desired_workload_alts_config of this ClusterUpdate.


        :return: The desired_workload_alts_config of this ClusterUpdate.
        :rtype: WorkloadALTSConfig
        """
        return self._desired_workload_alts_config

    @desired_workload_alts_config.setter
    def desired_workload_alts_config(self, desired_workload_alts_config):
        """Sets the desired_workload_alts_config of this ClusterUpdate.


        :param desired_workload_alts_config: The desired_workload_alts_config of this ClusterUpdate.
        :type desired_workload_alts_config: WorkloadALTSConfig
        """

        self._desired_workload_alts_config = desired_workload_alts_config

    @property
    def desired_workload_certificates(self):
        """Gets the desired_workload_certificates of this ClusterUpdate.


        :return: The desired_workload_certificates of this ClusterUpdate.
        :rtype: WorkloadCertificates
        """
        return self._desired_workload_certificates

    @desired_workload_certificates.setter
    def desired_workload_certificates(self, desired_workload_certificates):
        """Sets the desired_workload_certificates of this ClusterUpdate.


        :param desired_workload_certificates: The desired_workload_certificates of this ClusterUpdate.
        :type desired_workload_certificates: WorkloadCertificates
        """

        self._desired_workload_certificates = desired_workload_certificates

    @property
    def desired_workload_identity_config(self):
        """Gets the desired_workload_identity_config of this ClusterUpdate.


        :return: The desired_workload_identity_config of this ClusterUpdate.
        :rtype: WorkloadIdentityConfig
        """
        return self._desired_workload_identity_config

    @desired_workload_identity_config.setter
    def desired_workload_identity_config(self, desired_workload_identity_config):
        """Sets the desired_workload_identity_config of this ClusterUpdate.


        :param desired_workload_identity_config: The desired_workload_identity_config of this ClusterUpdate.
        :type desired_workload_identity_config: WorkloadIdentityConfig
        """

        self._desired_workload_identity_config = desired_workload_identity_config

    @property
    def enable_k8s_beta_apis(self):
        """Gets the enable_k8s_beta_apis of this ClusterUpdate.


        :return: The enable_k8s_beta_apis of this ClusterUpdate.
        :rtype: K8sBetaAPIConfig
        """
        return self._enable_k8s_beta_apis

    @enable_k8s_beta_apis.setter
    def enable_k8s_beta_apis(self, enable_k8s_beta_apis):
        """Sets the enable_k8s_beta_apis of this ClusterUpdate.


        :param enable_k8s_beta_apis: The enable_k8s_beta_apis of this ClusterUpdate.
        :type enable_k8s_beta_apis: K8sBetaAPIConfig
        """

        self._enable_k8s_beta_apis = enable_k8s_beta_apis

    @property
    def etag(self):
        """Gets the etag of this ClusterUpdate.

        The current etag of the cluster. If an etag is provided and does not match the current etag of the cluster, update will be blocked and an ABORTED error will be returned.

        :return: The etag of this ClusterUpdate.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this ClusterUpdate.

        The current etag of the cluster. If an etag is provided and does not match the current etag of the cluster, update will be blocked and an ABORTED error will be returned.

        :param etag: The etag of this ClusterUpdate.
        :type etag: str
        """

        self._etag = etag

    @property
    def removed_additional_pod_ranges_config(self):
        """Gets the removed_additional_pod_ranges_config of this ClusterUpdate.


        :return: The removed_additional_pod_ranges_config of this ClusterUpdate.
        :rtype: AdditionalPodRangesConfig
        """
        return self._removed_additional_pod_ranges_config

    @removed_additional_pod_ranges_config.setter
    def removed_additional_pod_ranges_config(self, removed_additional_pod_ranges_config):
        """Sets the removed_additional_pod_ranges_config of this ClusterUpdate.


        :param removed_additional_pod_ranges_config: The removed_additional_pod_ranges_config of this ClusterUpdate.
        :type removed_additional_pod_ranges_config: AdditionalPodRangesConfig
        """

        self._removed_additional_pod_ranges_config = removed_additional_pod_ranges_config
