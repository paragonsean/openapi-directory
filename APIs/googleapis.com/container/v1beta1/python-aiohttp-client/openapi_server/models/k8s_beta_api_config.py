# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class K8sBetaAPIConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled_apis: List[str]=None):
        """K8sBetaAPIConfig - a model defined in OpenAPI

        :param enabled_apis: The enabled_apis of this K8sBetaAPIConfig.
        """
        self.openapi_types = {
            'enabled_apis': List[str]
        }

        self.attribute_map = {
            'enabled_apis': 'enabledApis'
        }

        self._enabled_apis = enabled_apis

    @classmethod
    def from_dict(cls, dikt: dict) -> 'K8sBetaAPIConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The K8sBetaAPIConfig of this K8sBetaAPIConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled_apis(self):
        """Gets the enabled_apis of this K8sBetaAPIConfig.

        api name, e.g. storage.k8s.io/v1beta1/csistoragecapacities.

        :return: The enabled_apis of this K8sBetaAPIConfig.
        :rtype: List[str]
        """
        return self._enabled_apis

    @enabled_apis.setter
    def enabled_apis(self, enabled_apis):
        """Sets the enabled_apis of this K8sBetaAPIConfig.

        api name, e.g. storage.k8s.io/v1beta1/csistoragecapacities.

        :param enabled_apis: The enabled_apis of this K8sBetaAPIConfig.
        :type enabled_apis: List[str]
        """

        self._enabled_apis = enabled_apis
