# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.logging_variant_config import LoggingVariantConfig
from openapi_server import util


class NodePoolLoggingConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, variant_config: LoggingVariantConfig=None):
        """NodePoolLoggingConfig - a model defined in OpenAPI

        :param variant_config: The variant_config of this NodePoolLoggingConfig.
        """
        self.openapi_types = {
            'variant_config': LoggingVariantConfig
        }

        self.attribute_map = {
            'variant_config': 'variantConfig'
        }

        self._variant_config = variant_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NodePoolLoggingConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NodePoolLoggingConfig of this NodePoolLoggingConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def variant_config(self):
        """Gets the variant_config of this NodePoolLoggingConfig.


        :return: The variant_config of this NodePoolLoggingConfig.
        :rtype: LoggingVariantConfig
        """
        return self._variant_config

    @variant_config.setter
    def variant_config(self, variant_config):
        """Sets the variant_config of this NodePoolLoggingConfig.


        :param variant_config: The variant_config of this NodePoolLoggingConfig.
        :type variant_config: LoggingVariantConfig
        """

        self._variant_config = variant_config
