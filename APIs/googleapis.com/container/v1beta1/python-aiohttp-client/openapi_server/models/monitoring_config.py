# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.advanced_datapath_observability_config import AdvancedDatapathObservabilityConfig
from openapi_server.models.managed_prometheus_config import ManagedPrometheusConfig
from openapi_server.models.monitoring_component_config import MonitoringComponentConfig
from openapi_server import util


class MonitoringConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, advanced_datapath_observability_config: AdvancedDatapathObservabilityConfig=None, component_config: MonitoringComponentConfig=None, managed_prometheus_config: ManagedPrometheusConfig=None):
        """MonitoringConfig - a model defined in OpenAPI

        :param advanced_datapath_observability_config: The advanced_datapath_observability_config of this MonitoringConfig.
        :param component_config: The component_config of this MonitoringConfig.
        :param managed_prometheus_config: The managed_prometheus_config of this MonitoringConfig.
        """
        self.openapi_types = {
            'advanced_datapath_observability_config': AdvancedDatapathObservabilityConfig,
            'component_config': MonitoringComponentConfig,
            'managed_prometheus_config': ManagedPrometheusConfig
        }

        self.attribute_map = {
            'advanced_datapath_observability_config': 'advancedDatapathObservabilityConfig',
            'component_config': 'componentConfig',
            'managed_prometheus_config': 'managedPrometheusConfig'
        }

        self._advanced_datapath_observability_config = advanced_datapath_observability_config
        self._component_config = component_config
        self._managed_prometheus_config = managed_prometheus_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MonitoringConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MonitoringConfig of this MonitoringConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advanced_datapath_observability_config(self):
        """Gets the advanced_datapath_observability_config of this MonitoringConfig.


        :return: The advanced_datapath_observability_config of this MonitoringConfig.
        :rtype: AdvancedDatapathObservabilityConfig
        """
        return self._advanced_datapath_observability_config

    @advanced_datapath_observability_config.setter
    def advanced_datapath_observability_config(self, advanced_datapath_observability_config):
        """Sets the advanced_datapath_observability_config of this MonitoringConfig.


        :param advanced_datapath_observability_config: The advanced_datapath_observability_config of this MonitoringConfig.
        :type advanced_datapath_observability_config: AdvancedDatapathObservabilityConfig
        """

        self._advanced_datapath_observability_config = advanced_datapath_observability_config

    @property
    def component_config(self):
        """Gets the component_config of this MonitoringConfig.


        :return: The component_config of this MonitoringConfig.
        :rtype: MonitoringComponentConfig
        """
        return self._component_config

    @component_config.setter
    def component_config(self, component_config):
        """Sets the component_config of this MonitoringConfig.


        :param component_config: The component_config of this MonitoringConfig.
        :type component_config: MonitoringComponentConfig
        """

        self._component_config = component_config

    @property
    def managed_prometheus_config(self):
        """Gets the managed_prometheus_config of this MonitoringConfig.


        :return: The managed_prometheus_config of this MonitoringConfig.
        :rtype: ManagedPrometheusConfig
        """
        return self._managed_prometheus_config

    @managed_prometheus_config.setter
    def managed_prometheus_config(self, managed_prometheus_config):
        """Sets the managed_prometheus_config of this MonitoringConfig.


        :param managed_prometheus_config: The managed_prometheus_config of this MonitoringConfig.
        :type managed_prometheus_config: ManagedPrometheusConfig
        """

        self._managed_prometheus_config = managed_prometheus_config
