# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.http_cache_control_response_header import HttpCacheControlResponseHeader
from openapi_server import util


class GetOpenIDConfigResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cache_header: HttpCacheControlResponseHeader=None, claims_supported: List[str]=None, grant_types: List[str]=None, id_token_signing_alg_values_supported: List[str]=None, issuer: str=None, jwks_uri: str=None, response_types_supported: List[str]=None, subject_types_supported: List[str]=None):
        """GetOpenIDConfigResponse - a model defined in OpenAPI

        :param cache_header: The cache_header of this GetOpenIDConfigResponse.
        :param claims_supported: The claims_supported of this GetOpenIDConfigResponse.
        :param grant_types: The grant_types of this GetOpenIDConfigResponse.
        :param id_token_signing_alg_values_supported: The id_token_signing_alg_values_supported of this GetOpenIDConfigResponse.
        :param issuer: The issuer of this GetOpenIDConfigResponse.
        :param jwks_uri: The jwks_uri of this GetOpenIDConfigResponse.
        :param response_types_supported: The response_types_supported of this GetOpenIDConfigResponse.
        :param subject_types_supported: The subject_types_supported of this GetOpenIDConfigResponse.
        """
        self.openapi_types = {
            'cache_header': HttpCacheControlResponseHeader,
            'claims_supported': List[str],
            'grant_types': List[str],
            'id_token_signing_alg_values_supported': List[str],
            'issuer': str,
            'jwks_uri': str,
            'response_types_supported': List[str],
            'subject_types_supported': List[str]
        }

        self.attribute_map = {
            'cache_header': 'cacheHeader',
            'claims_supported': 'claims_supported',
            'grant_types': 'grant_types',
            'id_token_signing_alg_values_supported': 'id_token_signing_alg_values_supported',
            'issuer': 'issuer',
            'jwks_uri': 'jwks_uri',
            'response_types_supported': 'response_types_supported',
            'subject_types_supported': 'subject_types_supported'
        }

        self._cache_header = cache_header
        self._claims_supported = claims_supported
        self._grant_types = grant_types
        self._id_token_signing_alg_values_supported = id_token_signing_alg_values_supported
        self._issuer = issuer
        self._jwks_uri = jwks_uri
        self._response_types_supported = response_types_supported
        self._subject_types_supported = subject_types_supported

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOpenIDConfigResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetOpenIDConfigResponse of this GetOpenIDConfigResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cache_header(self):
        """Gets the cache_header of this GetOpenIDConfigResponse.


        :return: The cache_header of this GetOpenIDConfigResponse.
        :rtype: HttpCacheControlResponseHeader
        """
        return self._cache_header

    @cache_header.setter
    def cache_header(self, cache_header):
        """Sets the cache_header of this GetOpenIDConfigResponse.


        :param cache_header: The cache_header of this GetOpenIDConfigResponse.
        :type cache_header: HttpCacheControlResponseHeader
        """

        self._cache_header = cache_header

    @property
    def claims_supported(self):
        """Gets the claims_supported of this GetOpenIDConfigResponse.

        Supported claims.

        :return: The claims_supported of this GetOpenIDConfigResponse.
        :rtype: List[str]
        """
        return self._claims_supported

    @claims_supported.setter
    def claims_supported(self, claims_supported):
        """Sets the claims_supported of this GetOpenIDConfigResponse.

        Supported claims.

        :param claims_supported: The claims_supported of this GetOpenIDConfigResponse.
        :type claims_supported: List[str]
        """

        self._claims_supported = claims_supported

    @property
    def grant_types(self):
        """Gets the grant_types of this GetOpenIDConfigResponse.

        Supported grant types.

        :return: The grant_types of this GetOpenIDConfigResponse.
        :rtype: List[str]
        """
        return self._grant_types

    @grant_types.setter
    def grant_types(self, grant_types):
        """Sets the grant_types of this GetOpenIDConfigResponse.

        Supported grant types.

        :param grant_types: The grant_types of this GetOpenIDConfigResponse.
        :type grant_types: List[str]
        """

        self._grant_types = grant_types

    @property
    def id_token_signing_alg_values_supported(self):
        """Gets the id_token_signing_alg_values_supported of this GetOpenIDConfigResponse.

        supported ID Token signing Algorithms.

        :return: The id_token_signing_alg_values_supported of this GetOpenIDConfigResponse.
        :rtype: List[str]
        """
        return self._id_token_signing_alg_values_supported

    @id_token_signing_alg_values_supported.setter
    def id_token_signing_alg_values_supported(self, id_token_signing_alg_values_supported):
        """Sets the id_token_signing_alg_values_supported of this GetOpenIDConfigResponse.

        supported ID Token signing Algorithms.

        :param id_token_signing_alg_values_supported: The id_token_signing_alg_values_supported of this GetOpenIDConfigResponse.
        :type id_token_signing_alg_values_supported: List[str]
        """

        self._id_token_signing_alg_values_supported = id_token_signing_alg_values_supported

    @property
    def issuer(self):
        """Gets the issuer of this GetOpenIDConfigResponse.

        OIDC Issuer.

        :return: The issuer of this GetOpenIDConfigResponse.
        :rtype: str
        """
        return self._issuer

    @issuer.setter
    def issuer(self, issuer):
        """Sets the issuer of this GetOpenIDConfigResponse.

        OIDC Issuer.

        :param issuer: The issuer of this GetOpenIDConfigResponse.
        :type issuer: str
        """

        self._issuer = issuer

    @property
    def jwks_uri(self):
        """Gets the jwks_uri of this GetOpenIDConfigResponse.

        JSON Web Key uri.

        :return: The jwks_uri of this GetOpenIDConfigResponse.
        :rtype: str
        """
        return self._jwks_uri

    @jwks_uri.setter
    def jwks_uri(self, jwks_uri):
        """Sets the jwks_uri of this GetOpenIDConfigResponse.

        JSON Web Key uri.

        :param jwks_uri: The jwks_uri of this GetOpenIDConfigResponse.
        :type jwks_uri: str
        """

        self._jwks_uri = jwks_uri

    @property
    def response_types_supported(self):
        """Gets the response_types_supported of this GetOpenIDConfigResponse.

        Supported response types.

        :return: The response_types_supported of this GetOpenIDConfigResponse.
        :rtype: List[str]
        """
        return self._response_types_supported

    @response_types_supported.setter
    def response_types_supported(self, response_types_supported):
        """Sets the response_types_supported of this GetOpenIDConfigResponse.

        Supported response types.

        :param response_types_supported: The response_types_supported of this GetOpenIDConfigResponse.
        :type response_types_supported: List[str]
        """

        self._response_types_supported = response_types_supported

    @property
    def subject_types_supported(self):
        """Gets the subject_types_supported of this GetOpenIDConfigResponse.

        Supported subject types.

        :return: The subject_types_supported of this GetOpenIDConfigResponse.
        :rtype: List[str]
        """
        return self._subject_types_supported

    @subject_types_supported.setter
    def subject_types_supported(self, subject_types_supported):
        """Sets the subject_types_supported of this GetOpenIDConfigResponse.

        Supported subject types.

        :param subject_types_supported: The subject_types_supported of this GetOpenIDConfigResponse.
        :type subject_types_supported: List[str]
        """

        self._subject_types_supported = subject_types_supported
