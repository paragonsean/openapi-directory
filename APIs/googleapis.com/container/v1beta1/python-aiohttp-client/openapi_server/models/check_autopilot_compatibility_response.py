# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.autopilot_compatibility_issue import AutopilotCompatibilityIssue
from openapi_server import util


class CheckAutopilotCompatibilityResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, issues: List[AutopilotCompatibilityIssue]=None, summary: str=None):
        """CheckAutopilotCompatibilityResponse - a model defined in OpenAPI

        :param issues: The issues of this CheckAutopilotCompatibilityResponse.
        :param summary: The summary of this CheckAutopilotCompatibilityResponse.
        """
        self.openapi_types = {
            'issues': List[AutopilotCompatibilityIssue],
            'summary': str
        }

        self.attribute_map = {
            'issues': 'issues',
            'summary': 'summary'
        }

        self._issues = issues
        self._summary = summary

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CheckAutopilotCompatibilityResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CheckAutopilotCompatibilityResponse of this CheckAutopilotCompatibilityResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def issues(self):
        """Gets the issues of this CheckAutopilotCompatibilityResponse.

        The list of issues for the given operation.

        :return: The issues of this CheckAutopilotCompatibilityResponse.
        :rtype: List[AutopilotCompatibilityIssue]
        """
        return self._issues

    @issues.setter
    def issues(self, issues):
        """Sets the issues of this CheckAutopilotCompatibilityResponse.

        The list of issues for the given operation.

        :param issues: The issues of this CheckAutopilotCompatibilityResponse.
        :type issues: List[AutopilotCompatibilityIssue]
        """

        self._issues = issues

    @property
    def summary(self):
        """Gets the summary of this CheckAutopilotCompatibilityResponse.

        The summary of the autopilot compatibility response.

        :return: The summary of this CheckAutopilotCompatibilityResponse.
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this CheckAutopilotCompatibilityResponse.

        The summary of the autopilot compatibility response.

        :param summary: The summary of this CheckAutopilotCompatibilityResponse.
        :type summary: str
        """

        self._summary = summary
