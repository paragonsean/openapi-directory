# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.workload_config import WorkloadConfig
from openapi_server import util


class ProtectConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, workload_config: WorkloadConfig=None, workload_vulnerability_mode: str=None):
        """ProtectConfig - a model defined in OpenAPI

        :param workload_config: The workload_config of this ProtectConfig.
        :param workload_vulnerability_mode: The workload_vulnerability_mode of this ProtectConfig.
        """
        self.openapi_types = {
            'workload_config': WorkloadConfig,
            'workload_vulnerability_mode': str
        }

        self.attribute_map = {
            'workload_config': 'workloadConfig',
            'workload_vulnerability_mode': 'workloadVulnerabilityMode'
        }

        self._workload_config = workload_config
        self._workload_vulnerability_mode = workload_vulnerability_mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProtectConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProtectConfig of this ProtectConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def workload_config(self):
        """Gets the workload_config of this ProtectConfig.


        :return: The workload_config of this ProtectConfig.
        :rtype: WorkloadConfig
        """
        return self._workload_config

    @workload_config.setter
    def workload_config(self, workload_config):
        """Sets the workload_config of this ProtectConfig.


        :param workload_config: The workload_config of this ProtectConfig.
        :type workload_config: WorkloadConfig
        """

        self._workload_config = workload_config

    @property
    def workload_vulnerability_mode(self):
        """Gets the workload_vulnerability_mode of this ProtectConfig.

        Sets which mode to use for Protect workload vulnerability scanning feature.

        :return: The workload_vulnerability_mode of this ProtectConfig.
        :rtype: str
        """
        return self._workload_vulnerability_mode

    @workload_vulnerability_mode.setter
    def workload_vulnerability_mode(self, workload_vulnerability_mode):
        """Sets the workload_vulnerability_mode of this ProtectConfig.

        Sets which mode to use for Protect workload vulnerability scanning feature.

        :param workload_vulnerability_mode: The workload_vulnerability_mode of this ProtectConfig.
        :type workload_vulnerability_mode: str
        """
        allowed_values = ["WORKLOAD_VULNERABILITY_MODE_UNSPECIFIED", "DISABLED", "BASIC"]  # noqa: E501
        if workload_vulnerability_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `workload_vulnerability_mode` ({0}), must be one of {1}"
                .format(workload_vulnerability_mode, allowed_values)
            )

        self._workload_vulnerability_mode = workload_vulnerability_mode
