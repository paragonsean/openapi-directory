# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.node_taint import NodeTaint
from openapi_server import util


class NodeTaints(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, taints: List[NodeTaint]=None):
        """NodeTaints - a model defined in OpenAPI

        :param taints: The taints of this NodeTaints.
        """
        self.openapi_types = {
            'taints': List[NodeTaint]
        }

        self.attribute_map = {
            'taints': 'taints'
        }

        self._taints = taints

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NodeTaints':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NodeTaints of this NodeTaints.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def taints(self):
        """Gets the taints of this NodeTaints.

        List of node taints.

        :return: The taints of this NodeTaints.
        :rtype: List[NodeTaint]
        """
        return self._taints

    @taints.setter
    def taints(self, taints):
        """Sets the taints of this NodeTaints.

        List of node taints.

        :param taints: The taints of this NodeTaints.
        :type taints: List[NodeTaint]
        """

        self._taints = taints
