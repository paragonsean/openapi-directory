# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.range_info import RangeInfo
from openapi_server import util


class AdditionalPodRangesConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pod_range_info: List[RangeInfo]=None, pod_range_names: List[str]=None):
        """AdditionalPodRangesConfig - a model defined in OpenAPI

        :param pod_range_info: The pod_range_info of this AdditionalPodRangesConfig.
        :param pod_range_names: The pod_range_names of this AdditionalPodRangesConfig.
        """
        self.openapi_types = {
            'pod_range_info': List[RangeInfo],
            'pod_range_names': List[str]
        }

        self.attribute_map = {
            'pod_range_info': 'podRangeInfo',
            'pod_range_names': 'podRangeNames'
        }

        self._pod_range_info = pod_range_info
        self._pod_range_names = pod_range_names

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdditionalPodRangesConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdditionalPodRangesConfig of this AdditionalPodRangesConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pod_range_info(self):
        """Gets the pod_range_info of this AdditionalPodRangesConfig.

        Output only. [Output only] Information for additional pod range.

        :return: The pod_range_info of this AdditionalPodRangesConfig.
        :rtype: List[RangeInfo]
        """
        return self._pod_range_info

    @pod_range_info.setter
    def pod_range_info(self, pod_range_info):
        """Sets the pod_range_info of this AdditionalPodRangesConfig.

        Output only. [Output only] Information for additional pod range.

        :param pod_range_info: The pod_range_info of this AdditionalPodRangesConfig.
        :type pod_range_info: List[RangeInfo]
        """

        self._pod_range_info = pod_range_info

    @property
    def pod_range_names(self):
        """Gets the pod_range_names of this AdditionalPodRangesConfig.

        Name for pod secondary ipv4 range which has the actual range defined ahead.

        :return: The pod_range_names of this AdditionalPodRangesConfig.
        :rtype: List[str]
        """
        return self._pod_range_names

    @pod_range_names.setter
    def pod_range_names(self, pod_range_names):
        """Sets the pod_range_names of this AdditionalPodRangesConfig.

        Name for pod secondary ipv4 range which has the actual range defined ahead.

        :param pod_range_names: The pod_range_names of this AdditionalPodRangesConfig.
        :type pod_range_names: List[str]
        """

        self._pod_range_names = pod_range_names
