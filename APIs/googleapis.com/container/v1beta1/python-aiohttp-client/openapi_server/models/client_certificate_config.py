# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClientCertificateConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, issue_client_certificate: bool=None):
        """ClientCertificateConfig - a model defined in OpenAPI

        :param issue_client_certificate: The issue_client_certificate of this ClientCertificateConfig.
        """
        self.openapi_types = {
            'issue_client_certificate': bool
        }

        self.attribute_map = {
            'issue_client_certificate': 'issueClientCertificate'
        }

        self._issue_client_certificate = issue_client_certificate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClientCertificateConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClientCertificateConfig of this ClientCertificateConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def issue_client_certificate(self):
        """Gets the issue_client_certificate of this ClientCertificateConfig.

        Issue a client certificate.

        :return: The issue_client_certificate of this ClientCertificateConfig.
        :rtype: bool
        """
        return self._issue_client_certificate

    @issue_client_certificate.setter
    def issue_client_certificate(self, issue_client_certificate):
        """Sets the issue_client_certificate of this ClientCertificateConfig.

        Issue a client certificate.

        :param issue_client_certificate: The issue_client_certificate of this ClientCertificateConfig.
        :type issue_client_certificate: bool
        """

        self._issue_client_certificate = issue_client_certificate
