# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RangeInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, range_name: str=None, utilization: float=None):
        """RangeInfo - a model defined in OpenAPI

        :param range_name: The range_name of this RangeInfo.
        :param utilization: The utilization of this RangeInfo.
        """
        self.openapi_types = {
            'range_name': str,
            'utilization': float
        }

        self.attribute_map = {
            'range_name': 'rangeName',
            'utilization': 'utilization'
        }

        self._range_name = range_name
        self._utilization = utilization

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RangeInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RangeInfo of this RangeInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def range_name(self):
        """Gets the range_name of this RangeInfo.

        Output only. [Output only] Name of a range.

        :return: The range_name of this RangeInfo.
        :rtype: str
        """
        return self._range_name

    @range_name.setter
    def range_name(self, range_name):
        """Sets the range_name of this RangeInfo.

        Output only. [Output only] Name of a range.

        :param range_name: The range_name of this RangeInfo.
        :type range_name: str
        """

        self._range_name = range_name

    @property
    def utilization(self):
        """Gets the utilization of this RangeInfo.

        Output only. [Output only] The utilization of the range.

        :return: The utilization of this RangeInfo.
        :rtype: float
        """
        return self._utilization

    @utilization.setter
    def utilization(self, utilization):
        """Sets the utilization of this RangeInfo.

        Output only. [Output only] The utilization of the range.

        :param utilization: The utilization of this RangeInfo.
        :type utilization: float
        """

        self._utilization = utilization
