# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cloud_run_config import CloudRunConfig
from openapi_server.models.config_connector_config import ConfigConnectorConfig
from openapi_server.models.dns_cache_config import DnsCacheConfig
from openapi_server.models.gce_persistent_disk_csi_driver_config import GcePersistentDiskCsiDriverConfig
from openapi_server.models.gcp_filestore_csi_driver_config import GcpFilestoreCsiDriverConfig
from openapi_server.models.gcs_fuse_csi_driver_config import GcsFuseCsiDriverConfig
from openapi_server.models.gke_backup_agent_config import GkeBackupAgentConfig
from openapi_server.models.horizontal_pod_autoscaling import HorizontalPodAutoscaling
from openapi_server.models.http_load_balancing import HttpLoadBalancing
from openapi_server.models.istio_config import IstioConfig
from openapi_server.models.kalm_config import KalmConfig
from openapi_server.models.kubernetes_dashboard import KubernetesDashboard
from openapi_server.models.network_policy_config import NetworkPolicyConfig
from openapi_server.models.stateful_ha_config import StatefulHAConfig
from openapi_server import util


class AddonsConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cloud_run_config: CloudRunConfig=None, config_connector_config: ConfigConnectorConfig=None, dns_cache_config: DnsCacheConfig=None, gce_persistent_disk_csi_driver_config: GcePersistentDiskCsiDriverConfig=None, gcp_filestore_csi_driver_config: GcpFilestoreCsiDriverConfig=None, gcs_fuse_csi_driver_config: GcsFuseCsiDriverConfig=None, gke_backup_agent_config: GkeBackupAgentConfig=None, horizontal_pod_autoscaling: HorizontalPodAutoscaling=None, http_load_balancing: HttpLoadBalancing=None, istio_config: IstioConfig=None, kalm_config: KalmConfig=None, kubernetes_dashboard: KubernetesDashboard=None, network_policy_config: NetworkPolicyConfig=None, stateful_ha_config: StatefulHAConfig=None):
        """AddonsConfig - a model defined in OpenAPI

        :param cloud_run_config: The cloud_run_config of this AddonsConfig.
        :param config_connector_config: The config_connector_config of this AddonsConfig.
        :param dns_cache_config: The dns_cache_config of this AddonsConfig.
        :param gce_persistent_disk_csi_driver_config: The gce_persistent_disk_csi_driver_config of this AddonsConfig.
        :param gcp_filestore_csi_driver_config: The gcp_filestore_csi_driver_config of this AddonsConfig.
        :param gcs_fuse_csi_driver_config: The gcs_fuse_csi_driver_config of this AddonsConfig.
        :param gke_backup_agent_config: The gke_backup_agent_config of this AddonsConfig.
        :param horizontal_pod_autoscaling: The horizontal_pod_autoscaling of this AddonsConfig.
        :param http_load_balancing: The http_load_balancing of this AddonsConfig.
        :param istio_config: The istio_config of this AddonsConfig.
        :param kalm_config: The kalm_config of this AddonsConfig.
        :param kubernetes_dashboard: The kubernetes_dashboard of this AddonsConfig.
        :param network_policy_config: The network_policy_config of this AddonsConfig.
        :param stateful_ha_config: The stateful_ha_config of this AddonsConfig.
        """
        self.openapi_types = {
            'cloud_run_config': CloudRunConfig,
            'config_connector_config': ConfigConnectorConfig,
            'dns_cache_config': DnsCacheConfig,
            'gce_persistent_disk_csi_driver_config': GcePersistentDiskCsiDriverConfig,
            'gcp_filestore_csi_driver_config': GcpFilestoreCsiDriverConfig,
            'gcs_fuse_csi_driver_config': GcsFuseCsiDriverConfig,
            'gke_backup_agent_config': GkeBackupAgentConfig,
            'horizontal_pod_autoscaling': HorizontalPodAutoscaling,
            'http_load_balancing': HttpLoadBalancing,
            'istio_config': IstioConfig,
            'kalm_config': KalmConfig,
            'kubernetes_dashboard': KubernetesDashboard,
            'network_policy_config': NetworkPolicyConfig,
            'stateful_ha_config': StatefulHAConfig
        }

        self.attribute_map = {
            'cloud_run_config': 'cloudRunConfig',
            'config_connector_config': 'configConnectorConfig',
            'dns_cache_config': 'dnsCacheConfig',
            'gce_persistent_disk_csi_driver_config': 'gcePersistentDiskCsiDriverConfig',
            'gcp_filestore_csi_driver_config': 'gcpFilestoreCsiDriverConfig',
            'gcs_fuse_csi_driver_config': 'gcsFuseCsiDriverConfig',
            'gke_backup_agent_config': 'gkeBackupAgentConfig',
            'horizontal_pod_autoscaling': 'horizontalPodAutoscaling',
            'http_load_balancing': 'httpLoadBalancing',
            'istio_config': 'istioConfig',
            'kalm_config': 'kalmConfig',
            'kubernetes_dashboard': 'kubernetesDashboard',
            'network_policy_config': 'networkPolicyConfig',
            'stateful_ha_config': 'statefulHaConfig'
        }

        self._cloud_run_config = cloud_run_config
        self._config_connector_config = config_connector_config
        self._dns_cache_config = dns_cache_config
        self._gce_persistent_disk_csi_driver_config = gce_persistent_disk_csi_driver_config
        self._gcp_filestore_csi_driver_config = gcp_filestore_csi_driver_config
        self._gcs_fuse_csi_driver_config = gcs_fuse_csi_driver_config
        self._gke_backup_agent_config = gke_backup_agent_config
        self._horizontal_pod_autoscaling = horizontal_pod_autoscaling
        self._http_load_balancing = http_load_balancing
        self._istio_config = istio_config
        self._kalm_config = kalm_config
        self._kubernetes_dashboard = kubernetes_dashboard
        self._network_policy_config = network_policy_config
        self._stateful_ha_config = stateful_ha_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddonsConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddonsConfig of this AddonsConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cloud_run_config(self):
        """Gets the cloud_run_config of this AddonsConfig.


        :return: The cloud_run_config of this AddonsConfig.
        :rtype: CloudRunConfig
        """
        return self._cloud_run_config

    @cloud_run_config.setter
    def cloud_run_config(self, cloud_run_config):
        """Sets the cloud_run_config of this AddonsConfig.


        :param cloud_run_config: The cloud_run_config of this AddonsConfig.
        :type cloud_run_config: CloudRunConfig
        """

        self._cloud_run_config = cloud_run_config

    @property
    def config_connector_config(self):
        """Gets the config_connector_config of this AddonsConfig.


        :return: The config_connector_config of this AddonsConfig.
        :rtype: ConfigConnectorConfig
        """
        return self._config_connector_config

    @config_connector_config.setter
    def config_connector_config(self, config_connector_config):
        """Sets the config_connector_config of this AddonsConfig.


        :param config_connector_config: The config_connector_config of this AddonsConfig.
        :type config_connector_config: ConfigConnectorConfig
        """

        self._config_connector_config = config_connector_config

    @property
    def dns_cache_config(self):
        """Gets the dns_cache_config of this AddonsConfig.


        :return: The dns_cache_config of this AddonsConfig.
        :rtype: DnsCacheConfig
        """
        return self._dns_cache_config

    @dns_cache_config.setter
    def dns_cache_config(self, dns_cache_config):
        """Sets the dns_cache_config of this AddonsConfig.


        :param dns_cache_config: The dns_cache_config of this AddonsConfig.
        :type dns_cache_config: DnsCacheConfig
        """

        self._dns_cache_config = dns_cache_config

    @property
    def gce_persistent_disk_csi_driver_config(self):
        """Gets the gce_persistent_disk_csi_driver_config of this AddonsConfig.


        :return: The gce_persistent_disk_csi_driver_config of this AddonsConfig.
        :rtype: GcePersistentDiskCsiDriverConfig
        """
        return self._gce_persistent_disk_csi_driver_config

    @gce_persistent_disk_csi_driver_config.setter
    def gce_persistent_disk_csi_driver_config(self, gce_persistent_disk_csi_driver_config):
        """Sets the gce_persistent_disk_csi_driver_config of this AddonsConfig.


        :param gce_persistent_disk_csi_driver_config: The gce_persistent_disk_csi_driver_config of this AddonsConfig.
        :type gce_persistent_disk_csi_driver_config: GcePersistentDiskCsiDriverConfig
        """

        self._gce_persistent_disk_csi_driver_config = gce_persistent_disk_csi_driver_config

    @property
    def gcp_filestore_csi_driver_config(self):
        """Gets the gcp_filestore_csi_driver_config of this AddonsConfig.


        :return: The gcp_filestore_csi_driver_config of this AddonsConfig.
        :rtype: GcpFilestoreCsiDriverConfig
        """
        return self._gcp_filestore_csi_driver_config

    @gcp_filestore_csi_driver_config.setter
    def gcp_filestore_csi_driver_config(self, gcp_filestore_csi_driver_config):
        """Sets the gcp_filestore_csi_driver_config of this AddonsConfig.


        :param gcp_filestore_csi_driver_config: The gcp_filestore_csi_driver_config of this AddonsConfig.
        :type gcp_filestore_csi_driver_config: GcpFilestoreCsiDriverConfig
        """

        self._gcp_filestore_csi_driver_config = gcp_filestore_csi_driver_config

    @property
    def gcs_fuse_csi_driver_config(self):
        """Gets the gcs_fuse_csi_driver_config of this AddonsConfig.


        :return: The gcs_fuse_csi_driver_config of this AddonsConfig.
        :rtype: GcsFuseCsiDriverConfig
        """
        return self._gcs_fuse_csi_driver_config

    @gcs_fuse_csi_driver_config.setter
    def gcs_fuse_csi_driver_config(self, gcs_fuse_csi_driver_config):
        """Sets the gcs_fuse_csi_driver_config of this AddonsConfig.


        :param gcs_fuse_csi_driver_config: The gcs_fuse_csi_driver_config of this AddonsConfig.
        :type gcs_fuse_csi_driver_config: GcsFuseCsiDriverConfig
        """

        self._gcs_fuse_csi_driver_config = gcs_fuse_csi_driver_config

    @property
    def gke_backup_agent_config(self):
        """Gets the gke_backup_agent_config of this AddonsConfig.


        :return: The gke_backup_agent_config of this AddonsConfig.
        :rtype: GkeBackupAgentConfig
        """
        return self._gke_backup_agent_config

    @gke_backup_agent_config.setter
    def gke_backup_agent_config(self, gke_backup_agent_config):
        """Sets the gke_backup_agent_config of this AddonsConfig.


        :param gke_backup_agent_config: The gke_backup_agent_config of this AddonsConfig.
        :type gke_backup_agent_config: GkeBackupAgentConfig
        """

        self._gke_backup_agent_config = gke_backup_agent_config

    @property
    def horizontal_pod_autoscaling(self):
        """Gets the horizontal_pod_autoscaling of this AddonsConfig.


        :return: The horizontal_pod_autoscaling of this AddonsConfig.
        :rtype: HorizontalPodAutoscaling
        """
        return self._horizontal_pod_autoscaling

    @horizontal_pod_autoscaling.setter
    def horizontal_pod_autoscaling(self, horizontal_pod_autoscaling):
        """Sets the horizontal_pod_autoscaling of this AddonsConfig.


        :param horizontal_pod_autoscaling: The horizontal_pod_autoscaling of this AddonsConfig.
        :type horizontal_pod_autoscaling: HorizontalPodAutoscaling
        """

        self._horizontal_pod_autoscaling = horizontal_pod_autoscaling

    @property
    def http_load_balancing(self):
        """Gets the http_load_balancing of this AddonsConfig.


        :return: The http_load_balancing of this AddonsConfig.
        :rtype: HttpLoadBalancing
        """
        return self._http_load_balancing

    @http_load_balancing.setter
    def http_load_balancing(self, http_load_balancing):
        """Sets the http_load_balancing of this AddonsConfig.


        :param http_load_balancing: The http_load_balancing of this AddonsConfig.
        :type http_load_balancing: HttpLoadBalancing
        """

        self._http_load_balancing = http_load_balancing

    @property
    def istio_config(self):
        """Gets the istio_config of this AddonsConfig.


        :return: The istio_config of this AddonsConfig.
        :rtype: IstioConfig
        """
        return self._istio_config

    @istio_config.setter
    def istio_config(self, istio_config):
        """Sets the istio_config of this AddonsConfig.


        :param istio_config: The istio_config of this AddonsConfig.
        :type istio_config: IstioConfig
        """

        self._istio_config = istio_config

    @property
    def kalm_config(self):
        """Gets the kalm_config of this AddonsConfig.


        :return: The kalm_config of this AddonsConfig.
        :rtype: KalmConfig
        """
        return self._kalm_config

    @kalm_config.setter
    def kalm_config(self, kalm_config):
        """Sets the kalm_config of this AddonsConfig.


        :param kalm_config: The kalm_config of this AddonsConfig.
        :type kalm_config: KalmConfig
        """

        self._kalm_config = kalm_config

    @property
    def kubernetes_dashboard(self):
        """Gets the kubernetes_dashboard of this AddonsConfig.


        :return: The kubernetes_dashboard of this AddonsConfig.
        :rtype: KubernetesDashboard
        """
        return self._kubernetes_dashboard

    @kubernetes_dashboard.setter
    def kubernetes_dashboard(self, kubernetes_dashboard):
        """Sets the kubernetes_dashboard of this AddonsConfig.


        :param kubernetes_dashboard: The kubernetes_dashboard of this AddonsConfig.
        :type kubernetes_dashboard: KubernetesDashboard
        """

        self._kubernetes_dashboard = kubernetes_dashboard

    @property
    def network_policy_config(self):
        """Gets the network_policy_config of this AddonsConfig.


        :return: The network_policy_config of this AddonsConfig.
        :rtype: NetworkPolicyConfig
        """
        return self._network_policy_config

    @network_policy_config.setter
    def network_policy_config(self, network_policy_config):
        """Sets the network_policy_config of this AddonsConfig.


        :param network_policy_config: The network_policy_config of this AddonsConfig.
        :type network_policy_config: NetworkPolicyConfig
        """

        self._network_policy_config = network_policy_config

    @property
    def stateful_ha_config(self):
        """Gets the stateful_ha_config of this AddonsConfig.


        :return: The stateful_ha_config of this AddonsConfig.
        :rtype: StatefulHAConfig
        """
        return self._stateful_ha_config

    @stateful_ha_config.setter
    def stateful_ha_config(self, stateful_ha_config):
        """Sets the stateful_ha_config of this AddonsConfig.


        :param stateful_ha_config: The stateful_ha_config of this AddonsConfig.
        :type stateful_ha_config: StatefulHAConfig
        """

        self._stateful_ha_config = stateful_ha_config
