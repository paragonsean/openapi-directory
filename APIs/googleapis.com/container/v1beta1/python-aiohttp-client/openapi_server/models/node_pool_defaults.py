# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.node_config_defaults import NodeConfigDefaults
from openapi_server import util


class NodePoolDefaults(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, node_config_defaults: NodeConfigDefaults=None):
        """NodePoolDefaults - a model defined in OpenAPI

        :param node_config_defaults: The node_config_defaults of this NodePoolDefaults.
        """
        self.openapi_types = {
            'node_config_defaults': NodeConfigDefaults
        }

        self.attribute_map = {
            'node_config_defaults': 'nodeConfigDefaults'
        }

        self._node_config_defaults = node_config_defaults

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NodePoolDefaults':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NodePoolDefaults of this NodePoolDefaults.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def node_config_defaults(self):
        """Gets the node_config_defaults of this NodePoolDefaults.


        :return: The node_config_defaults of this NodePoolDefaults.
        :rtype: NodeConfigDefaults
        """
        return self._node_config_defaults

    @node_config_defaults.setter
    def node_config_defaults(self, node_config_defaults):
        """Sets the node_config_defaults of this NodePoolDefaults.


        :param node_config_defaults: The node_config_defaults of this NodePoolDefaults.
        :type node_config_defaults: NodeConfigDefaults
        """

        self._node_config_defaults = node_config_defaults
