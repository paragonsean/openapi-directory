# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HttpCacheControlResponseHeader(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, age: str=None, directive: str=None, expires: str=None):
        """HttpCacheControlResponseHeader - a model defined in OpenAPI

        :param age: The age of this HttpCacheControlResponseHeader.
        :param directive: The directive of this HttpCacheControlResponseHeader.
        :param expires: The expires of this HttpCacheControlResponseHeader.
        """
        self.openapi_types = {
            'age': str,
            'directive': str,
            'expires': str
        }

        self.attribute_map = {
            'age': 'age',
            'directive': 'directive',
            'expires': 'expires'
        }

        self._age = age
        self._directive = directive
        self._expires = expires

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HttpCacheControlResponseHeader':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HttpCacheControlResponseHeader of this HttpCacheControlResponseHeader.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def age(self):
        """Gets the age of this HttpCacheControlResponseHeader.

        14.6 response cache age, in seconds since the response is generated

        :return: The age of this HttpCacheControlResponseHeader.
        :rtype: str
        """
        return self._age

    @age.setter
    def age(self, age):
        """Sets the age of this HttpCacheControlResponseHeader.

        14.6 response cache age, in seconds since the response is generated

        :param age: The age of this HttpCacheControlResponseHeader.
        :type age: str
        """

        self._age = age

    @property
    def directive(self):
        """Gets the directive of this HttpCacheControlResponseHeader.

        14.9 request and response directives

        :return: The directive of this HttpCacheControlResponseHeader.
        :rtype: str
        """
        return self._directive

    @directive.setter
    def directive(self, directive):
        """Sets the directive of this HttpCacheControlResponseHeader.

        14.9 request and response directives

        :param directive: The directive of this HttpCacheControlResponseHeader.
        :type directive: str
        """

        self._directive = directive

    @property
    def expires(self):
        """Gets the expires of this HttpCacheControlResponseHeader.

        14.21 response cache expires, in RFC 1123 date format

        :return: The expires of this HttpCacheControlResponseHeader.
        :rtype: str
        """
        return self._expires

    @expires.setter
    def expires(self, expires):
        """Sets the expires of this HttpCacheControlResponseHeader.

        14.21 response cache expires, in RFC 1123 date format

        :param expires: The expires of this HttpCacheControlResponseHeader.
        :type expires: str
        """

        self._expires = expires
