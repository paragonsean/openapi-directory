# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.logging_component_config import LoggingComponentConfig
from openapi_server import util


class LoggingConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, component_config: LoggingComponentConfig=None):
        """LoggingConfig - a model defined in OpenAPI

        :param component_config: The component_config of this LoggingConfig.
        """
        self.openapi_types = {
            'component_config': LoggingComponentConfig
        }

        self.attribute_map = {
            'component_config': 'componentConfig'
        }

        self._component_config = component_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LoggingConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LoggingConfig of this LoggingConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def component_config(self):
        """Gets the component_config of this LoggingConfig.


        :return: The component_config of this LoggingConfig.
        :rtype: LoggingComponentConfig
        """
        return self._component_config

    @component_config.setter
    def component_config(self, component_config):
        """Sets the component_config of this LoggingConfig.


        :param component_config: The component_config of this LoggingConfig.
        :type component_config: LoggingComponentConfig
        """

        self._component_config = component_config
