/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdditionalPodRangesConfig from './AdditionalPodRangesConfig';
import AddonsConfig from './AddonsConfig';
import AuthenticatorGroupsConfig from './AuthenticatorGroupsConfig';
import BinaryAuthorization from './BinaryAuthorization';
import ClusterAutoscaling from './ClusterAutoscaling';
import ClusterNetworkPerformanceConfig from './ClusterNetworkPerformanceConfig';
import ClusterTelemetry from './ClusterTelemetry';
import CostManagementConfig from './CostManagementConfig';
import DNSConfig from './DNSConfig';
import DatabaseEncryption from './DatabaseEncryption';
import DefaultSnatStatus from './DefaultSnatStatus';
import Fleet from './Fleet';
import GatewayAPIConfig from './GatewayAPIConfig';
import GcfsConfig from './GcfsConfig';
import HostMaintenancePolicy from './HostMaintenancePolicy';
import ILBSubsettingConfig from './ILBSubsettingConfig';
import IdentityServiceConfig from './IdentityServiceConfig';
import IntraNodeVisibilityConfig from './IntraNodeVisibilityConfig';
import K8sBetaAPIConfig from './K8sBetaAPIConfig';
import LoggingConfig from './LoggingConfig';
import MasterAuthorizedNetworksConfig from './MasterAuthorizedNetworksConfig';
import MeshCertificates from './MeshCertificates';
import MonitoringConfig from './MonitoringConfig';
import NetworkTags from './NetworkTags';
import NodePoolAutoscaling from './NodePoolAutoscaling';
import NodePoolLoggingConfig from './NodePoolLoggingConfig';
import NotificationConfig from './NotificationConfig';
import ParentProductConfig from './ParentProductConfig';
import PodSecurityPolicyConfig from './PodSecurityPolicyConfig';
import PrivateClusterConfig from './PrivateClusterConfig';
import ProtectConfig from './ProtectConfig';
import ReleaseChannel from './ReleaseChannel';
import ResourceManagerTags from './ResourceManagerTags';
import ResourceUsageExportConfig from './ResourceUsageExportConfig';
import SecurityPostureConfig from './SecurityPostureConfig';
import ServiceExternalIPsConfig from './ServiceExternalIPsConfig';
import ShieldedNodes from './ShieldedNodes';
import TpuConfig from './TpuConfig';
import VerticalPodAutoscaling from './VerticalPodAutoscaling';
import WorkloadALTSConfig from './WorkloadALTSConfig';
import WorkloadCertificates from './WorkloadCertificates';
import WorkloadIdentityConfig from './WorkloadIdentityConfig';
import WorkloadPolicyConfig from './WorkloadPolicyConfig';

/**
 * The ClusterUpdate model module.
 * @module model/ClusterUpdate
 * @version v1beta1
 */
class ClusterUpdate {
    /**
     * Constructs a new <code>ClusterUpdate</code>.
     * ClusterUpdate describes an update to the cluster. Exactly one update can be applied to a cluster with each request, so at most one field can be provided.
     * @alias module:model/ClusterUpdate
     */
    constructor() { 
        
        ClusterUpdate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClusterUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClusterUpdate} obj Optional instance to populate.
     * @return {module:model/ClusterUpdate} The populated <code>ClusterUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClusterUpdate();

            if (data.hasOwnProperty('additionalPodRangesConfig')) {
                obj['additionalPodRangesConfig'] = AdditionalPodRangesConfig.constructFromObject(data['additionalPodRangesConfig']);
            }
            if (data.hasOwnProperty('desiredAddonsConfig')) {
                obj['desiredAddonsConfig'] = AddonsConfig.constructFromObject(data['desiredAddonsConfig']);
            }
            if (data.hasOwnProperty('desiredAuthenticatorGroupsConfig')) {
                obj['desiredAuthenticatorGroupsConfig'] = AuthenticatorGroupsConfig.constructFromObject(data['desiredAuthenticatorGroupsConfig']);
            }
            if (data.hasOwnProperty('desiredAutopilotWorkloadPolicyConfig')) {
                obj['desiredAutopilotWorkloadPolicyConfig'] = WorkloadPolicyConfig.constructFromObject(data['desiredAutopilotWorkloadPolicyConfig']);
            }
            if (data.hasOwnProperty('desiredBinaryAuthorization')) {
                obj['desiredBinaryAuthorization'] = BinaryAuthorization.constructFromObject(data['desiredBinaryAuthorization']);
            }
            if (data.hasOwnProperty('desiredClusterAutoscaling')) {
                obj['desiredClusterAutoscaling'] = ClusterAutoscaling.constructFromObject(data['desiredClusterAutoscaling']);
            }
            if (data.hasOwnProperty('desiredClusterTelemetry')) {
                obj['desiredClusterTelemetry'] = ClusterTelemetry.constructFromObject(data['desiredClusterTelemetry']);
            }
            if (data.hasOwnProperty('desiredCostManagementConfig')) {
                obj['desiredCostManagementConfig'] = CostManagementConfig.constructFromObject(data['desiredCostManagementConfig']);
            }
            if (data.hasOwnProperty('desiredDatabaseEncryption')) {
                obj['desiredDatabaseEncryption'] = DatabaseEncryption.constructFromObject(data['desiredDatabaseEncryption']);
            }
            if (data.hasOwnProperty('desiredDatapathProvider')) {
                obj['desiredDatapathProvider'] = ApiClient.convertToType(data['desiredDatapathProvider'], 'String');
            }
            if (data.hasOwnProperty('desiredDefaultSnatStatus')) {
                obj['desiredDefaultSnatStatus'] = DefaultSnatStatus.constructFromObject(data['desiredDefaultSnatStatus']);
            }
            if (data.hasOwnProperty('desiredDnsConfig')) {
                obj['desiredDnsConfig'] = DNSConfig.constructFromObject(data['desiredDnsConfig']);
            }
            if (data.hasOwnProperty('desiredEnableFqdnNetworkPolicy')) {
                obj['desiredEnableFqdnNetworkPolicy'] = ApiClient.convertToType(data['desiredEnableFqdnNetworkPolicy'], 'Boolean');
            }
            if (data.hasOwnProperty('desiredEnablePrivateEndpoint')) {
                obj['desiredEnablePrivateEndpoint'] = ApiClient.convertToType(data['desiredEnablePrivateEndpoint'], 'Boolean');
            }
            if (data.hasOwnProperty('desiredFleet')) {
                obj['desiredFleet'] = Fleet.constructFromObject(data['desiredFleet']);
            }
            if (data.hasOwnProperty('desiredGatewayApiConfig')) {
                obj['desiredGatewayApiConfig'] = GatewayAPIConfig.constructFromObject(data['desiredGatewayApiConfig']);
            }
            if (data.hasOwnProperty('desiredGcfsConfig')) {
                obj['desiredGcfsConfig'] = GcfsConfig.constructFromObject(data['desiredGcfsConfig']);
            }
            if (data.hasOwnProperty('desiredHostMaintenancePolicy')) {
                obj['desiredHostMaintenancePolicy'] = HostMaintenancePolicy.constructFromObject(data['desiredHostMaintenancePolicy']);
            }
            if (data.hasOwnProperty('desiredIdentityServiceConfig')) {
                obj['desiredIdentityServiceConfig'] = IdentityServiceConfig.constructFromObject(data['desiredIdentityServiceConfig']);
            }
            if (data.hasOwnProperty('desiredImageType')) {
                obj['desiredImageType'] = ApiClient.convertToType(data['desiredImageType'], 'String');
            }
            if (data.hasOwnProperty('desiredInTransitEncryptionConfig')) {
                obj['desiredInTransitEncryptionConfig'] = ApiClient.convertToType(data['desiredInTransitEncryptionConfig'], 'String');
            }
            if (data.hasOwnProperty('desiredIntraNodeVisibilityConfig')) {
                obj['desiredIntraNodeVisibilityConfig'] = IntraNodeVisibilityConfig.constructFromObject(data['desiredIntraNodeVisibilityConfig']);
            }
            if (data.hasOwnProperty('desiredK8sBetaApis')) {
                obj['desiredK8sBetaApis'] = K8sBetaAPIConfig.constructFromObject(data['desiredK8sBetaApis']);
            }
            if (data.hasOwnProperty('desiredL4ilbSubsettingConfig')) {
                obj['desiredL4ilbSubsettingConfig'] = ILBSubsettingConfig.constructFromObject(data['desiredL4ilbSubsettingConfig']);
            }
            if (data.hasOwnProperty('desiredLocations')) {
                obj['desiredLocations'] = ApiClient.convertToType(data['desiredLocations'], ['String']);
            }
            if (data.hasOwnProperty('desiredLoggingConfig')) {
                obj['desiredLoggingConfig'] = LoggingConfig.constructFromObject(data['desiredLoggingConfig']);
            }
            if (data.hasOwnProperty('desiredLoggingService')) {
                obj['desiredLoggingService'] = ApiClient.convertToType(data['desiredLoggingService'], 'String');
            }
            if (data.hasOwnProperty('desiredMaster')) {
                obj['desiredMaster'] = ApiClient.convertToType(data['desiredMaster'], Object);
            }
            if (data.hasOwnProperty('desiredMasterAuthorizedNetworksConfig')) {
                obj['desiredMasterAuthorizedNetworksConfig'] = MasterAuthorizedNetworksConfig.constructFromObject(data['desiredMasterAuthorizedNetworksConfig']);
            }
            if (data.hasOwnProperty('desiredMasterVersion')) {
                obj['desiredMasterVersion'] = ApiClient.convertToType(data['desiredMasterVersion'], 'String');
            }
            if (data.hasOwnProperty('desiredMeshCertificates')) {
                obj['desiredMeshCertificates'] = MeshCertificates.constructFromObject(data['desiredMeshCertificates']);
            }
            if (data.hasOwnProperty('desiredMonitoringConfig')) {
                obj['desiredMonitoringConfig'] = MonitoringConfig.constructFromObject(data['desiredMonitoringConfig']);
            }
            if (data.hasOwnProperty('desiredMonitoringService')) {
                obj['desiredMonitoringService'] = ApiClient.convertToType(data['desiredMonitoringService'], 'String');
            }
            if (data.hasOwnProperty('desiredNetworkPerformanceConfig')) {
                obj['desiredNetworkPerformanceConfig'] = ClusterNetworkPerformanceConfig.constructFromObject(data['desiredNetworkPerformanceConfig']);
            }
            if (data.hasOwnProperty('desiredNodePoolAutoConfigNetworkTags')) {
                obj['desiredNodePoolAutoConfigNetworkTags'] = NetworkTags.constructFromObject(data['desiredNodePoolAutoConfigNetworkTags']);
            }
            if (data.hasOwnProperty('desiredNodePoolAutoConfigResourceManagerTags')) {
                obj['desiredNodePoolAutoConfigResourceManagerTags'] = ResourceManagerTags.constructFromObject(data['desiredNodePoolAutoConfigResourceManagerTags']);
            }
            if (data.hasOwnProperty('desiredNodePoolAutoscaling')) {
                obj['desiredNodePoolAutoscaling'] = NodePoolAutoscaling.constructFromObject(data['desiredNodePoolAutoscaling']);
            }
            if (data.hasOwnProperty('desiredNodePoolId')) {
                obj['desiredNodePoolId'] = ApiClient.convertToType(data['desiredNodePoolId'], 'String');
            }
            if (data.hasOwnProperty('desiredNodePoolLoggingConfig')) {
                obj['desiredNodePoolLoggingConfig'] = NodePoolLoggingConfig.constructFromObject(data['desiredNodePoolLoggingConfig']);
            }
            if (data.hasOwnProperty('desiredNodeVersion')) {
                obj['desiredNodeVersion'] = ApiClient.convertToType(data['desiredNodeVersion'], 'String');
            }
            if (data.hasOwnProperty('desiredNotificationConfig')) {
                obj['desiredNotificationConfig'] = NotificationConfig.constructFromObject(data['desiredNotificationConfig']);
            }
            if (data.hasOwnProperty('desiredParentProductConfig')) {
                obj['desiredParentProductConfig'] = ParentProductConfig.constructFromObject(data['desiredParentProductConfig']);
            }
            if (data.hasOwnProperty('desiredPodSecurityPolicyConfig')) {
                obj['desiredPodSecurityPolicyConfig'] = PodSecurityPolicyConfig.constructFromObject(data['desiredPodSecurityPolicyConfig']);
            }
            if (data.hasOwnProperty('desiredPrivateClusterConfig')) {
                obj['desiredPrivateClusterConfig'] = PrivateClusterConfig.constructFromObject(data['desiredPrivateClusterConfig']);
            }
            if (data.hasOwnProperty('desiredPrivateIpv6GoogleAccess')) {
                obj['desiredPrivateIpv6GoogleAccess'] = ApiClient.convertToType(data['desiredPrivateIpv6GoogleAccess'], 'String');
            }
            if (data.hasOwnProperty('desiredProtectConfig')) {
                obj['desiredProtectConfig'] = ProtectConfig.constructFromObject(data['desiredProtectConfig']);
            }
            if (data.hasOwnProperty('desiredReleaseChannel')) {
                obj['desiredReleaseChannel'] = ReleaseChannel.constructFromObject(data['desiredReleaseChannel']);
            }
            if (data.hasOwnProperty('desiredResourceUsageExportConfig')) {
                obj['desiredResourceUsageExportConfig'] = ResourceUsageExportConfig.constructFromObject(data['desiredResourceUsageExportConfig']);
            }
            if (data.hasOwnProperty('desiredSecurityPostureConfig')) {
                obj['desiredSecurityPostureConfig'] = SecurityPostureConfig.constructFromObject(data['desiredSecurityPostureConfig']);
            }
            if (data.hasOwnProperty('desiredServiceExternalIpsConfig')) {
                obj['desiredServiceExternalIpsConfig'] = ServiceExternalIPsConfig.constructFromObject(data['desiredServiceExternalIpsConfig']);
            }
            if (data.hasOwnProperty('desiredShieldedNodes')) {
                obj['desiredShieldedNodes'] = ShieldedNodes.constructFromObject(data['desiredShieldedNodes']);
            }
            if (data.hasOwnProperty('desiredStackType')) {
                obj['desiredStackType'] = ApiClient.convertToType(data['desiredStackType'], 'String');
            }
            if (data.hasOwnProperty('desiredTpuConfig')) {
                obj['desiredTpuConfig'] = TpuConfig.constructFromObject(data['desiredTpuConfig']);
            }
            if (data.hasOwnProperty('desiredVerticalPodAutoscaling')) {
                obj['desiredVerticalPodAutoscaling'] = VerticalPodAutoscaling.constructFromObject(data['desiredVerticalPodAutoscaling']);
            }
            if (data.hasOwnProperty('desiredWorkloadAltsConfig')) {
                obj['desiredWorkloadAltsConfig'] = WorkloadALTSConfig.constructFromObject(data['desiredWorkloadAltsConfig']);
            }
            if (data.hasOwnProperty('desiredWorkloadCertificates')) {
                obj['desiredWorkloadCertificates'] = WorkloadCertificates.constructFromObject(data['desiredWorkloadCertificates']);
            }
            if (data.hasOwnProperty('desiredWorkloadIdentityConfig')) {
                obj['desiredWorkloadIdentityConfig'] = WorkloadIdentityConfig.constructFromObject(data['desiredWorkloadIdentityConfig']);
            }
            if (data.hasOwnProperty('enableK8sBetaApis')) {
                obj['enableK8sBetaApis'] = K8sBetaAPIConfig.constructFromObject(data['enableK8sBetaApis']);
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('removedAdditionalPodRangesConfig')) {
                obj['removedAdditionalPodRangesConfig'] = AdditionalPodRangesConfig.constructFromObject(data['removedAdditionalPodRangesConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClusterUpdate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClusterUpdate</code>.
     */
    static validateJSON(data) {
        // validate the optional field `additionalPodRangesConfig`
        if (data['additionalPodRangesConfig']) { // data not null
          AdditionalPodRangesConfig.validateJSON(data['additionalPodRangesConfig']);
        }
        // validate the optional field `desiredAddonsConfig`
        if (data['desiredAddonsConfig']) { // data not null
          AddonsConfig.validateJSON(data['desiredAddonsConfig']);
        }
        // validate the optional field `desiredAuthenticatorGroupsConfig`
        if (data['desiredAuthenticatorGroupsConfig']) { // data not null
          AuthenticatorGroupsConfig.validateJSON(data['desiredAuthenticatorGroupsConfig']);
        }
        // validate the optional field `desiredAutopilotWorkloadPolicyConfig`
        if (data['desiredAutopilotWorkloadPolicyConfig']) { // data not null
          WorkloadPolicyConfig.validateJSON(data['desiredAutopilotWorkloadPolicyConfig']);
        }
        // validate the optional field `desiredBinaryAuthorization`
        if (data['desiredBinaryAuthorization']) { // data not null
          BinaryAuthorization.validateJSON(data['desiredBinaryAuthorization']);
        }
        // validate the optional field `desiredClusterAutoscaling`
        if (data['desiredClusterAutoscaling']) { // data not null
          ClusterAutoscaling.validateJSON(data['desiredClusterAutoscaling']);
        }
        // validate the optional field `desiredClusterTelemetry`
        if (data['desiredClusterTelemetry']) { // data not null
          ClusterTelemetry.validateJSON(data['desiredClusterTelemetry']);
        }
        // validate the optional field `desiredCostManagementConfig`
        if (data['desiredCostManagementConfig']) { // data not null
          CostManagementConfig.validateJSON(data['desiredCostManagementConfig']);
        }
        // validate the optional field `desiredDatabaseEncryption`
        if (data['desiredDatabaseEncryption']) { // data not null
          DatabaseEncryption.validateJSON(data['desiredDatabaseEncryption']);
        }
        // ensure the json data is a string
        if (data['desiredDatapathProvider'] && !(typeof data['desiredDatapathProvider'] === 'string' || data['desiredDatapathProvider'] instanceof String)) {
            throw new Error("Expected the field `desiredDatapathProvider` to be a primitive type in the JSON string but got " + data['desiredDatapathProvider']);
        }
        // validate the optional field `desiredDefaultSnatStatus`
        if (data['desiredDefaultSnatStatus']) { // data not null
          DefaultSnatStatus.validateJSON(data['desiredDefaultSnatStatus']);
        }
        // validate the optional field `desiredDnsConfig`
        if (data['desiredDnsConfig']) { // data not null
          DNSConfig.validateJSON(data['desiredDnsConfig']);
        }
        // validate the optional field `desiredFleet`
        if (data['desiredFleet']) { // data not null
          Fleet.validateJSON(data['desiredFleet']);
        }
        // validate the optional field `desiredGatewayApiConfig`
        if (data['desiredGatewayApiConfig']) { // data not null
          GatewayAPIConfig.validateJSON(data['desiredGatewayApiConfig']);
        }
        // validate the optional field `desiredGcfsConfig`
        if (data['desiredGcfsConfig']) { // data not null
          GcfsConfig.validateJSON(data['desiredGcfsConfig']);
        }
        // validate the optional field `desiredHostMaintenancePolicy`
        if (data['desiredHostMaintenancePolicy']) { // data not null
          HostMaintenancePolicy.validateJSON(data['desiredHostMaintenancePolicy']);
        }
        // validate the optional field `desiredIdentityServiceConfig`
        if (data['desiredIdentityServiceConfig']) { // data not null
          IdentityServiceConfig.validateJSON(data['desiredIdentityServiceConfig']);
        }
        // ensure the json data is a string
        if (data['desiredImageType'] && !(typeof data['desiredImageType'] === 'string' || data['desiredImageType'] instanceof String)) {
            throw new Error("Expected the field `desiredImageType` to be a primitive type in the JSON string but got " + data['desiredImageType']);
        }
        // ensure the json data is a string
        if (data['desiredInTransitEncryptionConfig'] && !(typeof data['desiredInTransitEncryptionConfig'] === 'string' || data['desiredInTransitEncryptionConfig'] instanceof String)) {
            throw new Error("Expected the field `desiredInTransitEncryptionConfig` to be a primitive type in the JSON string but got " + data['desiredInTransitEncryptionConfig']);
        }
        // validate the optional field `desiredIntraNodeVisibilityConfig`
        if (data['desiredIntraNodeVisibilityConfig']) { // data not null
          IntraNodeVisibilityConfig.validateJSON(data['desiredIntraNodeVisibilityConfig']);
        }
        // validate the optional field `desiredK8sBetaApis`
        if (data['desiredK8sBetaApis']) { // data not null
          K8sBetaAPIConfig.validateJSON(data['desiredK8sBetaApis']);
        }
        // validate the optional field `desiredL4ilbSubsettingConfig`
        if (data['desiredL4ilbSubsettingConfig']) { // data not null
          ILBSubsettingConfig.validateJSON(data['desiredL4ilbSubsettingConfig']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['desiredLocations'])) {
            throw new Error("Expected the field `desiredLocations` to be an array in the JSON data but got " + data['desiredLocations']);
        }
        // validate the optional field `desiredLoggingConfig`
        if (data['desiredLoggingConfig']) { // data not null
          LoggingConfig.validateJSON(data['desiredLoggingConfig']);
        }
        // ensure the json data is a string
        if (data['desiredLoggingService'] && !(typeof data['desiredLoggingService'] === 'string' || data['desiredLoggingService'] instanceof String)) {
            throw new Error("Expected the field `desiredLoggingService` to be a primitive type in the JSON string but got " + data['desiredLoggingService']);
        }
        // validate the optional field `desiredMasterAuthorizedNetworksConfig`
        if (data['desiredMasterAuthorizedNetworksConfig']) { // data not null
          MasterAuthorizedNetworksConfig.validateJSON(data['desiredMasterAuthorizedNetworksConfig']);
        }
        // ensure the json data is a string
        if (data['desiredMasterVersion'] && !(typeof data['desiredMasterVersion'] === 'string' || data['desiredMasterVersion'] instanceof String)) {
            throw new Error("Expected the field `desiredMasterVersion` to be a primitive type in the JSON string but got " + data['desiredMasterVersion']);
        }
        // validate the optional field `desiredMeshCertificates`
        if (data['desiredMeshCertificates']) { // data not null
          MeshCertificates.validateJSON(data['desiredMeshCertificates']);
        }
        // validate the optional field `desiredMonitoringConfig`
        if (data['desiredMonitoringConfig']) { // data not null
          MonitoringConfig.validateJSON(data['desiredMonitoringConfig']);
        }
        // ensure the json data is a string
        if (data['desiredMonitoringService'] && !(typeof data['desiredMonitoringService'] === 'string' || data['desiredMonitoringService'] instanceof String)) {
            throw new Error("Expected the field `desiredMonitoringService` to be a primitive type in the JSON string but got " + data['desiredMonitoringService']);
        }
        // validate the optional field `desiredNetworkPerformanceConfig`
        if (data['desiredNetworkPerformanceConfig']) { // data not null
          ClusterNetworkPerformanceConfig.validateJSON(data['desiredNetworkPerformanceConfig']);
        }
        // validate the optional field `desiredNodePoolAutoConfigNetworkTags`
        if (data['desiredNodePoolAutoConfigNetworkTags']) { // data not null
          NetworkTags.validateJSON(data['desiredNodePoolAutoConfigNetworkTags']);
        }
        // validate the optional field `desiredNodePoolAutoConfigResourceManagerTags`
        if (data['desiredNodePoolAutoConfigResourceManagerTags']) { // data not null
          ResourceManagerTags.validateJSON(data['desiredNodePoolAutoConfigResourceManagerTags']);
        }
        // validate the optional field `desiredNodePoolAutoscaling`
        if (data['desiredNodePoolAutoscaling']) { // data not null
          NodePoolAutoscaling.validateJSON(data['desiredNodePoolAutoscaling']);
        }
        // ensure the json data is a string
        if (data['desiredNodePoolId'] && !(typeof data['desiredNodePoolId'] === 'string' || data['desiredNodePoolId'] instanceof String)) {
            throw new Error("Expected the field `desiredNodePoolId` to be a primitive type in the JSON string but got " + data['desiredNodePoolId']);
        }
        // validate the optional field `desiredNodePoolLoggingConfig`
        if (data['desiredNodePoolLoggingConfig']) { // data not null
          NodePoolLoggingConfig.validateJSON(data['desiredNodePoolLoggingConfig']);
        }
        // ensure the json data is a string
        if (data['desiredNodeVersion'] && !(typeof data['desiredNodeVersion'] === 'string' || data['desiredNodeVersion'] instanceof String)) {
            throw new Error("Expected the field `desiredNodeVersion` to be a primitive type in the JSON string but got " + data['desiredNodeVersion']);
        }
        // validate the optional field `desiredNotificationConfig`
        if (data['desiredNotificationConfig']) { // data not null
          NotificationConfig.validateJSON(data['desiredNotificationConfig']);
        }
        // validate the optional field `desiredParentProductConfig`
        if (data['desiredParentProductConfig']) { // data not null
          ParentProductConfig.validateJSON(data['desiredParentProductConfig']);
        }
        // validate the optional field `desiredPodSecurityPolicyConfig`
        if (data['desiredPodSecurityPolicyConfig']) { // data not null
          PodSecurityPolicyConfig.validateJSON(data['desiredPodSecurityPolicyConfig']);
        }
        // validate the optional field `desiredPrivateClusterConfig`
        if (data['desiredPrivateClusterConfig']) { // data not null
          PrivateClusterConfig.validateJSON(data['desiredPrivateClusterConfig']);
        }
        // ensure the json data is a string
        if (data['desiredPrivateIpv6GoogleAccess'] && !(typeof data['desiredPrivateIpv6GoogleAccess'] === 'string' || data['desiredPrivateIpv6GoogleAccess'] instanceof String)) {
            throw new Error("Expected the field `desiredPrivateIpv6GoogleAccess` to be a primitive type in the JSON string but got " + data['desiredPrivateIpv6GoogleAccess']);
        }
        // validate the optional field `desiredProtectConfig`
        if (data['desiredProtectConfig']) { // data not null
          ProtectConfig.validateJSON(data['desiredProtectConfig']);
        }
        // validate the optional field `desiredReleaseChannel`
        if (data['desiredReleaseChannel']) { // data not null
          ReleaseChannel.validateJSON(data['desiredReleaseChannel']);
        }
        // validate the optional field `desiredResourceUsageExportConfig`
        if (data['desiredResourceUsageExportConfig']) { // data not null
          ResourceUsageExportConfig.validateJSON(data['desiredResourceUsageExportConfig']);
        }
        // validate the optional field `desiredSecurityPostureConfig`
        if (data['desiredSecurityPostureConfig']) { // data not null
          SecurityPostureConfig.validateJSON(data['desiredSecurityPostureConfig']);
        }
        // validate the optional field `desiredServiceExternalIpsConfig`
        if (data['desiredServiceExternalIpsConfig']) { // data not null
          ServiceExternalIPsConfig.validateJSON(data['desiredServiceExternalIpsConfig']);
        }
        // validate the optional field `desiredShieldedNodes`
        if (data['desiredShieldedNodes']) { // data not null
          ShieldedNodes.validateJSON(data['desiredShieldedNodes']);
        }
        // ensure the json data is a string
        if (data['desiredStackType'] && !(typeof data['desiredStackType'] === 'string' || data['desiredStackType'] instanceof String)) {
            throw new Error("Expected the field `desiredStackType` to be a primitive type in the JSON string but got " + data['desiredStackType']);
        }
        // validate the optional field `desiredTpuConfig`
        if (data['desiredTpuConfig']) { // data not null
          TpuConfig.validateJSON(data['desiredTpuConfig']);
        }
        // validate the optional field `desiredVerticalPodAutoscaling`
        if (data['desiredVerticalPodAutoscaling']) { // data not null
          VerticalPodAutoscaling.validateJSON(data['desiredVerticalPodAutoscaling']);
        }
        // validate the optional field `desiredWorkloadAltsConfig`
        if (data['desiredWorkloadAltsConfig']) { // data not null
          WorkloadALTSConfig.validateJSON(data['desiredWorkloadAltsConfig']);
        }
        // validate the optional field `desiredWorkloadCertificates`
        if (data['desiredWorkloadCertificates']) { // data not null
          WorkloadCertificates.validateJSON(data['desiredWorkloadCertificates']);
        }
        // validate the optional field `desiredWorkloadIdentityConfig`
        if (data['desiredWorkloadIdentityConfig']) { // data not null
          WorkloadIdentityConfig.validateJSON(data['desiredWorkloadIdentityConfig']);
        }
        // validate the optional field `enableK8sBetaApis`
        if (data['enableK8sBetaApis']) { // data not null
          K8sBetaAPIConfig.validateJSON(data['enableK8sBetaApis']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // validate the optional field `removedAdditionalPodRangesConfig`
        if (data['removedAdditionalPodRangesConfig']) { // data not null
          AdditionalPodRangesConfig.validateJSON(data['removedAdditionalPodRangesConfig']);
        }

        return true;
    }


}



/**
 * @member {module:model/AdditionalPodRangesConfig} additionalPodRangesConfig
 */
ClusterUpdate.prototype['additionalPodRangesConfig'] = undefined;

/**
 * @member {module:model/AddonsConfig} desiredAddonsConfig
 */
ClusterUpdate.prototype['desiredAddonsConfig'] = undefined;

/**
 * @member {module:model/AuthenticatorGroupsConfig} desiredAuthenticatorGroupsConfig
 */
ClusterUpdate.prototype['desiredAuthenticatorGroupsConfig'] = undefined;

/**
 * @member {module:model/WorkloadPolicyConfig} desiredAutopilotWorkloadPolicyConfig
 */
ClusterUpdate.prototype['desiredAutopilotWorkloadPolicyConfig'] = undefined;

/**
 * @member {module:model/BinaryAuthorization} desiredBinaryAuthorization
 */
ClusterUpdate.prototype['desiredBinaryAuthorization'] = undefined;

/**
 * @member {module:model/ClusterAutoscaling} desiredClusterAutoscaling
 */
ClusterUpdate.prototype['desiredClusterAutoscaling'] = undefined;

/**
 * @member {module:model/ClusterTelemetry} desiredClusterTelemetry
 */
ClusterUpdate.prototype['desiredClusterTelemetry'] = undefined;

/**
 * @member {module:model/CostManagementConfig} desiredCostManagementConfig
 */
ClusterUpdate.prototype['desiredCostManagementConfig'] = undefined;

/**
 * @member {module:model/DatabaseEncryption} desiredDatabaseEncryption
 */
ClusterUpdate.prototype['desiredDatabaseEncryption'] = undefined;

/**
 * The desired datapath provider for the cluster.
 * @member {module:model/ClusterUpdate.DesiredDatapathProviderEnum} desiredDatapathProvider
 */
ClusterUpdate.prototype['desiredDatapathProvider'] = undefined;

/**
 * @member {module:model/DefaultSnatStatus} desiredDefaultSnatStatus
 */
ClusterUpdate.prototype['desiredDefaultSnatStatus'] = undefined;

/**
 * @member {module:model/DNSConfig} desiredDnsConfig
 */
ClusterUpdate.prototype['desiredDnsConfig'] = undefined;

/**
 * Enable/Disable FQDN Network Policy for the cluster.
 * @member {Boolean} desiredEnableFqdnNetworkPolicy
 */
ClusterUpdate.prototype['desiredEnableFqdnNetworkPolicy'] = undefined;

/**
 * Enable/Disable private endpoint for the cluster's master.
 * @member {Boolean} desiredEnablePrivateEndpoint
 */
ClusterUpdate.prototype['desiredEnablePrivateEndpoint'] = undefined;

/**
 * @member {module:model/Fleet} desiredFleet
 */
ClusterUpdate.prototype['desiredFleet'] = undefined;

/**
 * @member {module:model/GatewayAPIConfig} desiredGatewayApiConfig
 */
ClusterUpdate.prototype['desiredGatewayApiConfig'] = undefined;

/**
 * @member {module:model/GcfsConfig} desiredGcfsConfig
 */
ClusterUpdate.prototype['desiredGcfsConfig'] = undefined;

/**
 * @member {module:model/HostMaintenancePolicy} desiredHostMaintenancePolicy
 */
ClusterUpdate.prototype['desiredHostMaintenancePolicy'] = undefined;

/**
 * @member {module:model/IdentityServiceConfig} desiredIdentityServiceConfig
 */
ClusterUpdate.prototype['desiredIdentityServiceConfig'] = undefined;

/**
 * The desired image type for the node pool. NOTE: Set the \"desired_node_pool\" field as well.
 * @member {String} desiredImageType
 */
ClusterUpdate.prototype['desiredImageType'] = undefined;

/**
 * Specify the details of in-transit encryption.
 * @member {module:model/ClusterUpdate.DesiredInTransitEncryptionConfigEnum} desiredInTransitEncryptionConfig
 */
ClusterUpdate.prototype['desiredInTransitEncryptionConfig'] = undefined;

/**
 * @member {module:model/IntraNodeVisibilityConfig} desiredIntraNodeVisibilityConfig
 */
ClusterUpdate.prototype['desiredIntraNodeVisibilityConfig'] = undefined;

/**
 * @member {module:model/K8sBetaAPIConfig} desiredK8sBetaApis
 */
ClusterUpdate.prototype['desiredK8sBetaApis'] = undefined;

/**
 * @member {module:model/ILBSubsettingConfig} desiredL4ilbSubsettingConfig
 */
ClusterUpdate.prototype['desiredL4ilbSubsettingConfig'] = undefined;

/**
 * The desired list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes should be located. This list must always include the cluster's primary zone. Warning: changing cluster locations will update the locations of all node pools and will result in nodes being added and/or removed.
 * @member {Array.<String>} desiredLocations
 */
ClusterUpdate.prototype['desiredLocations'] = undefined;

/**
 * @member {module:model/LoggingConfig} desiredLoggingConfig
 */
ClusterUpdate.prototype['desiredLoggingConfig'] = undefined;

/**
 * The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.
 * @member {String} desiredLoggingService
 */
ClusterUpdate.prototype['desiredLoggingService'] = undefined;

/**
 * Master is the configuration for components on master.
 * @member {Object} desiredMaster
 */
ClusterUpdate.prototype['desiredMaster'] = undefined;

/**
 * @member {module:model/MasterAuthorizedNetworksConfig} desiredMasterAuthorizedNetworksConfig
 */
ClusterUpdate.prototype['desiredMasterAuthorizedNetworksConfig'] = undefined;

/**
 * The Kubernetes version to change the master to. The only valid value is the latest supported version. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - \"latest\": picks the highest valid Kubernetes version - \"1.X\": picks the highest valid patch+gke.N patch in the 1.X version - \"1.X.Y\": picks the highest valid gke.N patch in the 1.X.Y version - \"1.X.Y-gke.N\": picks an explicit Kubernetes version - \"-\": picks the default Kubernetes version
 * @member {String} desiredMasterVersion
 */
ClusterUpdate.prototype['desiredMasterVersion'] = undefined;

/**
 * @member {module:model/MeshCertificates} desiredMeshCertificates
 */
ClusterUpdate.prototype['desiredMeshCertificates'] = undefined;

/**
 * @member {module:model/MonitoringConfig} desiredMonitoringConfig
 */
ClusterUpdate.prototype['desiredMonitoringConfig'] = undefined;

/**
 * The monitoring service the cluster should use to write metrics. Currently available options: * \"monitoring.googleapis.com/kubernetes\" - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.
 * @member {String} desiredMonitoringService
 */
ClusterUpdate.prototype['desiredMonitoringService'] = undefined;

/**
 * @member {module:model/ClusterNetworkPerformanceConfig} desiredNetworkPerformanceConfig
 */
ClusterUpdate.prototype['desiredNetworkPerformanceConfig'] = undefined;

/**
 * @member {module:model/NetworkTags} desiredNodePoolAutoConfigNetworkTags
 */
ClusterUpdate.prototype['desiredNodePoolAutoConfigNetworkTags'] = undefined;

/**
 * @member {module:model/ResourceManagerTags} desiredNodePoolAutoConfigResourceManagerTags
 */
ClusterUpdate.prototype['desiredNodePoolAutoConfigResourceManagerTags'] = undefined;

/**
 * @member {module:model/NodePoolAutoscaling} desiredNodePoolAutoscaling
 */
ClusterUpdate.prototype['desiredNodePoolAutoscaling'] = undefined;

/**
 * The node pool to be upgraded. This field is mandatory if \"desired_node_version\", \"desired_image_family\", \"desired_node_pool_autoscaling\", or \"desired_workload_metadata_config\" is specified and there is more than one node pool on the cluster.
 * @member {String} desiredNodePoolId
 */
ClusterUpdate.prototype['desiredNodePoolId'] = undefined;

/**
 * @member {module:model/NodePoolLoggingConfig} desiredNodePoolLoggingConfig
 */
ClusterUpdate.prototype['desiredNodePoolLoggingConfig'] = undefined;

/**
 * The Kubernetes version to change the nodes to (typically an upgrade). Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - \"latest\": picks the highest valid Kubernetes version - \"1.X\": picks the highest valid patch+gke.N patch in the 1.X version - \"1.X.Y\": picks the highest valid gke.N patch in the 1.X.Y version - \"1.X.Y-gke.N\": picks an explicit Kubernetes version - \"-\": picks the Kubernetes master version
 * @member {String} desiredNodeVersion
 */
ClusterUpdate.prototype['desiredNodeVersion'] = undefined;

/**
 * @member {module:model/NotificationConfig} desiredNotificationConfig
 */
ClusterUpdate.prototype['desiredNotificationConfig'] = undefined;

/**
 * @member {module:model/ParentProductConfig} desiredParentProductConfig
 */
ClusterUpdate.prototype['desiredParentProductConfig'] = undefined;

/**
 * @member {module:model/PodSecurityPolicyConfig} desiredPodSecurityPolicyConfig
 */
ClusterUpdate.prototype['desiredPodSecurityPolicyConfig'] = undefined;

/**
 * @member {module:model/PrivateClusterConfig} desiredPrivateClusterConfig
 */
ClusterUpdate.prototype['desiredPrivateClusterConfig'] = undefined;

/**
 * The desired state of IPv6 connectivity to Google Services.
 * @member {module:model/ClusterUpdate.DesiredPrivateIpv6GoogleAccessEnum} desiredPrivateIpv6GoogleAccess
 */
ClusterUpdate.prototype['desiredPrivateIpv6GoogleAccess'] = undefined;

/**
 * @member {module:model/ProtectConfig} desiredProtectConfig
 */
ClusterUpdate.prototype['desiredProtectConfig'] = undefined;

/**
 * @member {module:model/ReleaseChannel} desiredReleaseChannel
 */
ClusterUpdate.prototype['desiredReleaseChannel'] = undefined;

/**
 * @member {module:model/ResourceUsageExportConfig} desiredResourceUsageExportConfig
 */
ClusterUpdate.prototype['desiredResourceUsageExportConfig'] = undefined;

/**
 * @member {module:model/SecurityPostureConfig} desiredSecurityPostureConfig
 */
ClusterUpdate.prototype['desiredSecurityPostureConfig'] = undefined;

/**
 * @member {module:model/ServiceExternalIPsConfig} desiredServiceExternalIpsConfig
 */
ClusterUpdate.prototype['desiredServiceExternalIpsConfig'] = undefined;

/**
 * @member {module:model/ShieldedNodes} desiredShieldedNodes
 */
ClusterUpdate.prototype['desiredShieldedNodes'] = undefined;

/**
 * The desired stack type of the cluster. If a stack type is provided and does not match the current stack type of the cluster, update will attempt to change the stack type to the new type.
 * @member {module:model/ClusterUpdate.DesiredStackTypeEnum} desiredStackType
 */
ClusterUpdate.prototype['desiredStackType'] = undefined;

/**
 * @member {module:model/TpuConfig} desiredTpuConfig
 */
ClusterUpdate.prototype['desiredTpuConfig'] = undefined;

/**
 * @member {module:model/VerticalPodAutoscaling} desiredVerticalPodAutoscaling
 */
ClusterUpdate.prototype['desiredVerticalPodAutoscaling'] = undefined;

/**
 * @member {module:model/WorkloadALTSConfig} desiredWorkloadAltsConfig
 */
ClusterUpdate.prototype['desiredWorkloadAltsConfig'] = undefined;

/**
 * @member {module:model/WorkloadCertificates} desiredWorkloadCertificates
 */
ClusterUpdate.prototype['desiredWorkloadCertificates'] = undefined;

/**
 * @member {module:model/WorkloadIdentityConfig} desiredWorkloadIdentityConfig
 */
ClusterUpdate.prototype['desiredWorkloadIdentityConfig'] = undefined;

/**
 * @member {module:model/K8sBetaAPIConfig} enableK8sBetaApis
 */
ClusterUpdate.prototype['enableK8sBetaApis'] = undefined;

/**
 * The current etag of the cluster. If an etag is provided and does not match the current etag of the cluster, update will be blocked and an ABORTED error will be returned.
 * @member {String} etag
 */
ClusterUpdate.prototype['etag'] = undefined;

/**
 * @member {module:model/AdditionalPodRangesConfig} removedAdditionalPodRangesConfig
 */
ClusterUpdate.prototype['removedAdditionalPodRangesConfig'] = undefined;





/**
 * Allowed values for the <code>desiredDatapathProvider</code> property.
 * @enum {String}
 * @readonly
 */
ClusterUpdate['DesiredDatapathProviderEnum'] = {

    /**
     * value: "DATAPATH_PROVIDER_UNSPECIFIED"
     * @const
     */
    "DATAPATH_PROVIDER_UNSPECIFIED": "DATAPATH_PROVIDER_UNSPECIFIED",

    /**
     * value: "LEGACY_DATAPATH"
     * @const
     */
    "LEGACY_DATAPATH": "LEGACY_DATAPATH",

    /**
     * value: "ADVANCED_DATAPATH"
     * @const
     */
    "ADVANCED_DATAPATH": "ADVANCED_DATAPATH"
};


/**
 * Allowed values for the <code>desiredInTransitEncryptionConfig</code> property.
 * @enum {String}
 * @readonly
 */
ClusterUpdate['DesiredInTransitEncryptionConfigEnum'] = {

    /**
     * value: "IN_TRANSIT_ENCRYPTION_CONFIG_UNSPECIFIED"
     * @const
     */
    "CONFIG_UNSPECIFIED": "IN_TRANSIT_ENCRYPTION_CONFIG_UNSPECIFIED",

    /**
     * value: "IN_TRANSIT_ENCRYPTION_DISABLED"
     * @const
     */
    "DISABLED": "IN_TRANSIT_ENCRYPTION_DISABLED",

    /**
     * value: "IN_TRANSIT_ENCRYPTION_INTER_NODE_TRANSPARENT"
     * @const
     */
    "INTER_NODE_TRANSPARENT": "IN_TRANSIT_ENCRYPTION_INTER_NODE_TRANSPARENT"
};


/**
 * Allowed values for the <code>desiredPrivateIpv6GoogleAccess</code> property.
 * @enum {String}
 * @readonly
 */
ClusterUpdate['DesiredPrivateIpv6GoogleAccessEnum'] = {

    /**
     * value: "PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED",

    /**
     * value: "PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED"
     * @const
     */
    "DISABLED": "PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED",

    /**
     * value: "PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE"
     * @const
     */
    "TO_GOOGLE": "PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE",

    /**
     * value: "PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL"
     * @const
     */
    "BIDIRECTIONAL": "PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL"
};


/**
 * Allowed values for the <code>desiredStackType</code> property.
 * @enum {String}
 * @readonly
 */
ClusterUpdate['DesiredStackTypeEnum'] = {

    /**
     * value: "STACK_TYPE_UNSPECIFIED"
     * @const
     */
    "STACK_TYPE_UNSPECIFIED": "STACK_TYPE_UNSPECIFIED",

    /**
     * value: "IPV4"
     * @const
     */
    "IPV4": "IPV4",

    /**
     * value: "IPV4_IPV6"
     * @const
     */
    "IPV4_IPV6": "IPV4_IPV6"
};



export default ClusterUpdate;

