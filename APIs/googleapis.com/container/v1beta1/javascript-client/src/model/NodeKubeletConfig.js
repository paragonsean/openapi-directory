/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NodeKubeletConfig model module.
 * @module model/NodeKubeletConfig
 * @version v1beta1
 */
class NodeKubeletConfig {
    /**
     * Constructs a new <code>NodeKubeletConfig</code>.
     * Node kubelet configs.
     * @alias module:model/NodeKubeletConfig
     */
    constructor() { 
        
        NodeKubeletConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NodeKubeletConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NodeKubeletConfig} obj Optional instance to populate.
     * @return {module:model/NodeKubeletConfig} The populated <code>NodeKubeletConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NodeKubeletConfig();

            if (data.hasOwnProperty('cpuCfsQuota')) {
                obj['cpuCfsQuota'] = ApiClient.convertToType(data['cpuCfsQuota'], 'Boolean');
            }
            if (data.hasOwnProperty('cpuCfsQuotaPeriod')) {
                obj['cpuCfsQuotaPeriod'] = ApiClient.convertToType(data['cpuCfsQuotaPeriod'], 'String');
            }
            if (data.hasOwnProperty('cpuManagerPolicy')) {
                obj['cpuManagerPolicy'] = ApiClient.convertToType(data['cpuManagerPolicy'], 'String');
            }
            if (data.hasOwnProperty('insecureKubeletReadonlyPortEnabled')) {
                obj['insecureKubeletReadonlyPortEnabled'] = ApiClient.convertToType(data['insecureKubeletReadonlyPortEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('podPidsLimit')) {
                obj['podPidsLimit'] = ApiClient.convertToType(data['podPidsLimit'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NodeKubeletConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NodeKubeletConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cpuCfsQuotaPeriod'] && !(typeof data['cpuCfsQuotaPeriod'] === 'string' || data['cpuCfsQuotaPeriod'] instanceof String)) {
            throw new Error("Expected the field `cpuCfsQuotaPeriod` to be a primitive type in the JSON string but got " + data['cpuCfsQuotaPeriod']);
        }
        // ensure the json data is a string
        if (data['cpuManagerPolicy'] && !(typeof data['cpuManagerPolicy'] === 'string' || data['cpuManagerPolicy'] instanceof String)) {
            throw new Error("Expected the field `cpuManagerPolicy` to be a primitive type in the JSON string but got " + data['cpuManagerPolicy']);
        }
        // ensure the json data is a string
        if (data['podPidsLimit'] && !(typeof data['podPidsLimit'] === 'string' || data['podPidsLimit'] instanceof String)) {
            throw new Error("Expected the field `podPidsLimit` to be a primitive type in the JSON string but got " + data['podPidsLimit']);
        }

        return true;
    }


}



/**
 * Enable CPU CFS quota enforcement for containers that specify CPU limits. This option is enabled by default which makes kubelet use CFS quota (https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt) to enforce container CPU limits. Otherwise, CPU limits will not be enforced at all. Disable this option to mitigate CPU throttling problems while still having your pods to be in Guaranteed QoS class by specifying the CPU limits. The default value is 'true' if unspecified.
 * @member {Boolean} cpuCfsQuota
 */
NodeKubeletConfig.prototype['cpuCfsQuota'] = undefined;

/**
 * Set the CPU CFS quota period value 'cpu.cfs_period_us'. The string must be a sequence of decimal numbers, each with optional fraction and a unit suffix, such as \"300ms\". Valid time units are \"ns\", \"us\" (or \"Âµs\"), \"ms\", \"s\", \"m\", \"h\". The value must be a positive duration.
 * @member {String} cpuCfsQuotaPeriod
 */
NodeKubeletConfig.prototype['cpuCfsQuotaPeriod'] = undefined;

/**
 * Control the CPU management policy on the node. See https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/ The following values are allowed. * \"none\": the default, which represents the existing scheduling behavior. * \"static\": allows pods with certain resource characteristics to be granted increased CPU affinity and exclusivity on the node. The default value is 'none' if unspecified.
 * @member {String} cpuManagerPolicy
 */
NodeKubeletConfig.prototype['cpuManagerPolicy'] = undefined;

/**
 * Enable or disable Kubelet read only port.
 * @member {Boolean} insecureKubeletReadonlyPortEnabled
 */
NodeKubeletConfig.prototype['insecureKubeletReadonlyPortEnabled'] = undefined;

/**
 * Set the Pod PID limits. See https://kubernetes.io/docs/concepts/policy/pid-limiting/#pod-pid-limits Controls the maximum number of processes allowed to run in a pod. The value must be greater than or equal to 1024 and less than 4194304.
 * @member {String} podPidsLimit
 */
NodeKubeletConfig.prototype['podPidsLimit'] = undefined;






export default NodeKubeletConfig;

