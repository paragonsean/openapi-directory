/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GPUSharingConfig model module.
 * @module model/GPUSharingConfig
 * @version v1beta1
 */
class GPUSharingConfig {
    /**
     * Constructs a new <code>GPUSharingConfig</code>.
     * GPUSharingConfig represents the GPU sharing configuration for Hardware Accelerators.
     * @alias module:model/GPUSharingConfig
     */
    constructor() { 
        
        GPUSharingConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GPUSharingConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GPUSharingConfig} obj Optional instance to populate.
     * @return {module:model/GPUSharingConfig} The populated <code>GPUSharingConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GPUSharingConfig();

            if (data.hasOwnProperty('gpuSharingStrategy')) {
                obj['gpuSharingStrategy'] = ApiClient.convertToType(data['gpuSharingStrategy'], 'String');
            }
            if (data.hasOwnProperty('maxSharedClientsPerGpu')) {
                obj['maxSharedClientsPerGpu'] = ApiClient.convertToType(data['maxSharedClientsPerGpu'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GPUSharingConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GPUSharingConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['gpuSharingStrategy'] && !(typeof data['gpuSharingStrategy'] === 'string' || data['gpuSharingStrategy'] instanceof String)) {
            throw new Error("Expected the field `gpuSharingStrategy` to be a primitive type in the JSON string but got " + data['gpuSharingStrategy']);
        }
        // ensure the json data is a string
        if (data['maxSharedClientsPerGpu'] && !(typeof data['maxSharedClientsPerGpu'] === 'string' || data['maxSharedClientsPerGpu'] instanceof String)) {
            throw new Error("Expected the field `maxSharedClientsPerGpu` to be a primitive type in the JSON string but got " + data['maxSharedClientsPerGpu']);
        }

        return true;
    }


}



/**
 * The type of GPU sharing strategy to enable on the GPU node.
 * @member {module:model/GPUSharingConfig.GpuSharingStrategyEnum} gpuSharingStrategy
 */
GPUSharingConfig.prototype['gpuSharingStrategy'] = undefined;

/**
 * The max number of containers that can share a physical GPU.
 * @member {String} maxSharedClientsPerGpu
 */
GPUSharingConfig.prototype['maxSharedClientsPerGpu'] = undefined;





/**
 * Allowed values for the <code>gpuSharingStrategy</code> property.
 * @enum {String}
 * @readonly
 */
GPUSharingConfig['GpuSharingStrategyEnum'] = {

    /**
     * value: "GPU_SHARING_STRATEGY_UNSPECIFIED"
     * @const
     */
    "GPU_SHARING_STRATEGY_UNSPECIFIED": "GPU_SHARING_STRATEGY_UNSPECIFIED",

    /**
     * value: "TIME_SHARING"
     * @const
     */
    "TIME_SHARING": "TIME_SHARING"
};



export default GPUSharingConfig;

