/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AutoprovisioningNodePoolDefaults from './AutoprovisioningNodePoolDefaults';
import ResourceLimit from './ResourceLimit';

/**
 * The ClusterAutoscaling model module.
 * @module model/ClusterAutoscaling
 * @version v1beta1
 */
class ClusterAutoscaling {
    /**
     * Constructs a new <code>ClusterAutoscaling</code>.
     * ClusterAutoscaling contains global, per-cluster information required by Cluster Autoscaler to automatically adjust the size of the cluster and create/delete node pools based on the current needs.
     * @alias module:model/ClusterAutoscaling
     */
    constructor() { 
        
        ClusterAutoscaling.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClusterAutoscaling</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClusterAutoscaling} obj Optional instance to populate.
     * @return {module:model/ClusterAutoscaling} The populated <code>ClusterAutoscaling</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClusterAutoscaling();

            if (data.hasOwnProperty('autoprovisioningLocations')) {
                obj['autoprovisioningLocations'] = ApiClient.convertToType(data['autoprovisioningLocations'], ['String']);
            }
            if (data.hasOwnProperty('autoprovisioningNodePoolDefaults')) {
                obj['autoprovisioningNodePoolDefaults'] = AutoprovisioningNodePoolDefaults.constructFromObject(data['autoprovisioningNodePoolDefaults']);
            }
            if (data.hasOwnProperty('autoscalingProfile')) {
                obj['autoscalingProfile'] = ApiClient.convertToType(data['autoscalingProfile'], 'String');
            }
            if (data.hasOwnProperty('enableNodeAutoprovisioning')) {
                obj['enableNodeAutoprovisioning'] = ApiClient.convertToType(data['enableNodeAutoprovisioning'], 'Boolean');
            }
            if (data.hasOwnProperty('resourceLimits')) {
                obj['resourceLimits'] = ApiClient.convertToType(data['resourceLimits'], [ResourceLimit]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClusterAutoscaling</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClusterAutoscaling</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['autoprovisioningLocations'])) {
            throw new Error("Expected the field `autoprovisioningLocations` to be an array in the JSON data but got " + data['autoprovisioningLocations']);
        }
        // validate the optional field `autoprovisioningNodePoolDefaults`
        if (data['autoprovisioningNodePoolDefaults']) { // data not null
          AutoprovisioningNodePoolDefaults.validateJSON(data['autoprovisioningNodePoolDefaults']);
        }
        // ensure the json data is a string
        if (data['autoscalingProfile'] && !(typeof data['autoscalingProfile'] === 'string' || data['autoscalingProfile'] instanceof String)) {
            throw new Error("Expected the field `autoscalingProfile` to be a primitive type in the JSON string but got " + data['autoscalingProfile']);
        }
        if (data['resourceLimits']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['resourceLimits'])) {
                throw new Error("Expected the field `resourceLimits` to be an array in the JSON data but got " + data['resourceLimits']);
            }
            // validate the optional field `resourceLimits` (array)
            for (const item of data['resourceLimits']) {
                ResourceLimit.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the NodePool's nodes can be created by NAP.
 * @member {Array.<String>} autoprovisioningLocations
 */
ClusterAutoscaling.prototype['autoprovisioningLocations'] = undefined;

/**
 * @member {module:model/AutoprovisioningNodePoolDefaults} autoprovisioningNodePoolDefaults
 */
ClusterAutoscaling.prototype['autoprovisioningNodePoolDefaults'] = undefined;

/**
 * Defines autoscaling behaviour.
 * @member {module:model/ClusterAutoscaling.AutoscalingProfileEnum} autoscalingProfile
 */
ClusterAutoscaling.prototype['autoscalingProfile'] = undefined;

/**
 * Enables automatic node pool creation and deletion.
 * @member {Boolean} enableNodeAutoprovisioning
 */
ClusterAutoscaling.prototype['enableNodeAutoprovisioning'] = undefined;

/**
 * Contains global constraints regarding minimum and maximum amount of resources in the cluster.
 * @member {Array.<module:model/ResourceLimit>} resourceLimits
 */
ClusterAutoscaling.prototype['resourceLimits'] = undefined;





/**
 * Allowed values for the <code>autoscalingProfile</code> property.
 * @enum {String}
 * @readonly
 */
ClusterAutoscaling['AutoscalingProfileEnum'] = {

    /**
     * value: "PROFILE_UNSPECIFIED"
     * @const
     */
    "PROFILE_UNSPECIFIED": "PROFILE_UNSPECIFIED",

    /**
     * value: "OPTIMIZE_UTILIZATION"
     * @const
     */
    "OPTIMIZE_UTILIZATION": "OPTIMIZE_UTILIZATION",

    /**
     * value: "BALANCED"
     * @const
     */
    "BALANCED": "BALANCED"
};



export default ClusterAutoscaling;

