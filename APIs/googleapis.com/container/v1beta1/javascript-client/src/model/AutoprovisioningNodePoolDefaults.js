/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NodeManagement from './NodeManagement';
import ShieldedInstanceConfig from './ShieldedInstanceConfig';
import UpgradeSettings from './UpgradeSettings';

/**
 * The AutoprovisioningNodePoolDefaults model module.
 * @module model/AutoprovisioningNodePoolDefaults
 * @version v1beta1
 */
class AutoprovisioningNodePoolDefaults {
    /**
     * Constructs a new <code>AutoprovisioningNodePoolDefaults</code>.
     * AutoprovisioningNodePoolDefaults contains defaults for a node pool created by NAP.
     * @alias module:model/AutoprovisioningNodePoolDefaults
     */
    constructor() { 
        
        AutoprovisioningNodePoolDefaults.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AutoprovisioningNodePoolDefaults</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutoprovisioningNodePoolDefaults} obj Optional instance to populate.
     * @return {module:model/AutoprovisioningNodePoolDefaults} The populated <code>AutoprovisioningNodePoolDefaults</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutoprovisioningNodePoolDefaults();

            if (data.hasOwnProperty('bootDiskKmsKey')) {
                obj['bootDiskKmsKey'] = ApiClient.convertToType(data['bootDiskKmsKey'], 'String');
            }
            if (data.hasOwnProperty('diskSizeGb')) {
                obj['diskSizeGb'] = ApiClient.convertToType(data['diskSizeGb'], 'Number');
            }
            if (data.hasOwnProperty('diskType')) {
                obj['diskType'] = ApiClient.convertToType(data['diskType'], 'String');
            }
            if (data.hasOwnProperty('imageType')) {
                obj['imageType'] = ApiClient.convertToType(data['imageType'], 'String');
            }
            if (data.hasOwnProperty('insecureKubeletReadonlyPortEnabled')) {
                obj['insecureKubeletReadonlyPortEnabled'] = ApiClient.convertToType(data['insecureKubeletReadonlyPortEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('management')) {
                obj['management'] = NodeManagement.constructFromObject(data['management']);
            }
            if (data.hasOwnProperty('minCpuPlatform')) {
                obj['minCpuPlatform'] = ApiClient.convertToType(data['minCpuPlatform'], 'String');
            }
            if (data.hasOwnProperty('oauthScopes')) {
                obj['oauthScopes'] = ApiClient.convertToType(data['oauthScopes'], ['String']);
            }
            if (data.hasOwnProperty('serviceAccount')) {
                obj['serviceAccount'] = ApiClient.convertToType(data['serviceAccount'], 'String');
            }
            if (data.hasOwnProperty('shieldedInstanceConfig')) {
                obj['shieldedInstanceConfig'] = ShieldedInstanceConfig.constructFromObject(data['shieldedInstanceConfig']);
            }
            if (data.hasOwnProperty('upgradeSettings')) {
                obj['upgradeSettings'] = UpgradeSettings.constructFromObject(data['upgradeSettings']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AutoprovisioningNodePoolDefaults</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AutoprovisioningNodePoolDefaults</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bootDiskKmsKey'] && !(typeof data['bootDiskKmsKey'] === 'string' || data['bootDiskKmsKey'] instanceof String)) {
            throw new Error("Expected the field `bootDiskKmsKey` to be a primitive type in the JSON string but got " + data['bootDiskKmsKey']);
        }
        // ensure the json data is a string
        if (data['diskType'] && !(typeof data['diskType'] === 'string' || data['diskType'] instanceof String)) {
            throw new Error("Expected the field `diskType` to be a primitive type in the JSON string but got " + data['diskType']);
        }
        // ensure the json data is a string
        if (data['imageType'] && !(typeof data['imageType'] === 'string' || data['imageType'] instanceof String)) {
            throw new Error("Expected the field `imageType` to be a primitive type in the JSON string but got " + data['imageType']);
        }
        // validate the optional field `management`
        if (data['management']) { // data not null
          NodeManagement.validateJSON(data['management']);
        }
        // ensure the json data is a string
        if (data['minCpuPlatform'] && !(typeof data['minCpuPlatform'] === 'string' || data['minCpuPlatform'] instanceof String)) {
            throw new Error("Expected the field `minCpuPlatform` to be a primitive type in the JSON string but got " + data['minCpuPlatform']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['oauthScopes'])) {
            throw new Error("Expected the field `oauthScopes` to be an array in the JSON data but got " + data['oauthScopes']);
        }
        // ensure the json data is a string
        if (data['serviceAccount'] && !(typeof data['serviceAccount'] === 'string' || data['serviceAccount'] instanceof String)) {
            throw new Error("Expected the field `serviceAccount` to be a primitive type in the JSON string but got " + data['serviceAccount']);
        }
        // validate the optional field `shieldedInstanceConfig`
        if (data['shieldedInstanceConfig']) { // data not null
          ShieldedInstanceConfig.validateJSON(data['shieldedInstanceConfig']);
        }
        // validate the optional field `upgradeSettings`
        if (data['upgradeSettings']) { // data not null
          UpgradeSettings.validateJSON(data['upgradeSettings']);
        }

        return true;
    }


}



/**
 *  The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
 * @member {String} bootDiskKmsKey
 */
AutoprovisioningNodePoolDefaults.prototype['bootDiskKmsKey'] = undefined;

/**
 * Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB.
 * @member {Number} diskSizeGb
 */
AutoprovisioningNodePoolDefaults.prototype['diskSizeGb'] = undefined;

/**
 * Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced') If unspecified, the default disk type is 'pd-standard'
 * @member {String} diskType
 */
AutoprovisioningNodePoolDefaults.prototype['diskType'] = undefined;

/**
 * The image type to use for NAP created node. Please see https://cloud.google.com/kubernetes-engine/docs/concepts/node-images for available image types.
 * @member {String} imageType
 */
AutoprovisioningNodePoolDefaults.prototype['imageType'] = undefined;

/**
 * Enable or disable Kubelet read only port.
 * @member {Boolean} insecureKubeletReadonlyPortEnabled
 */
AutoprovisioningNodePoolDefaults.prototype['insecureKubeletReadonlyPortEnabled'] = undefined;

/**
 * @member {module:model/NodeManagement} management
 */
AutoprovisioningNodePoolDefaults.prototype['management'] = undefined;

/**
 * Deprecated. Minimum CPU platform to be used for NAP created node pools. The instance may be scheduled on the specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: Intel Haswell or minCpuPlatform: Intel Sandy Bridge. For more information, read [how to specify min CPU platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform). This field is deprecated, min_cpu_platform should be specified using `cloud.google.com/requested-min-cpu-platform` label selector on the pod. To unset the min cpu platform field pass \"automatic\" as field value.
 * @member {String} minCpuPlatform
 */
AutoprovisioningNodePoolDefaults.prototype['minCpuPlatform'] = undefined;

/**
 * The set of Google API scopes to be made available on all of the node VMs under the \"default\" service account. The following scopes are recommended, but not required, and by default are not included: * `https://www.googleapis.com/auth/compute` is required for mounting persistent storage on your nodes. * `https://www.googleapis.com/auth/devstorage.read_only` is required for communicating with **gcr.io** (the [Google Container Registry](https://cloud.google.com/container-registry/)). If unspecified, no scopes are added, unless Cloud Logging or Cloud Monitoring are enabled, in which case their required scopes will be added.
 * @member {Array.<String>} oauthScopes
 */
AutoprovisioningNodePoolDefaults.prototype['oauthScopes'] = undefined;

/**
 * The Google Cloud Platform Service Account to be used by the node VMs. Specify the email address of the Service Account; otherwise, if no Service Account is specified, the \"default\" service account is used.
 * @member {String} serviceAccount
 */
AutoprovisioningNodePoolDefaults.prototype['serviceAccount'] = undefined;

/**
 * @member {module:model/ShieldedInstanceConfig} shieldedInstanceConfig
 */
AutoprovisioningNodePoolDefaults.prototype['shieldedInstanceConfig'] = undefined;

/**
 * @member {module:model/UpgradeSettings} upgradeSettings
 */
AutoprovisioningNodePoolDefaults.prototype['upgradeSettings'] = undefined;






export default AutoprovisioningNodePoolDefaults;

