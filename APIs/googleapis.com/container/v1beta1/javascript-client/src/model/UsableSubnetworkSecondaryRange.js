/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UsableSubnetworkSecondaryRange model module.
 * @module model/UsableSubnetworkSecondaryRange
 * @version v1beta1
 */
class UsableSubnetworkSecondaryRange {
    /**
     * Constructs a new <code>UsableSubnetworkSecondaryRange</code>.
     * Secondary IP range of a usable subnetwork.
     * @alias module:model/UsableSubnetworkSecondaryRange
     */
    constructor() { 
        
        UsableSubnetworkSecondaryRange.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UsableSubnetworkSecondaryRange</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UsableSubnetworkSecondaryRange} obj Optional instance to populate.
     * @return {module:model/UsableSubnetworkSecondaryRange} The populated <code>UsableSubnetworkSecondaryRange</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UsableSubnetworkSecondaryRange();

            if (data.hasOwnProperty('ipCidrRange')) {
                obj['ipCidrRange'] = ApiClient.convertToType(data['ipCidrRange'], 'String');
            }
            if (data.hasOwnProperty('rangeName')) {
                obj['rangeName'] = ApiClient.convertToType(data['rangeName'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UsableSubnetworkSecondaryRange</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UsableSubnetworkSecondaryRange</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ipCidrRange'] && !(typeof data['ipCidrRange'] === 'string' || data['ipCidrRange'] instanceof String)) {
            throw new Error("Expected the field `ipCidrRange` to be a primitive type in the JSON string but got " + data['ipCidrRange']);
        }
        // ensure the json data is a string
        if (data['rangeName'] && !(typeof data['rangeName'] === 'string' || data['rangeName'] instanceof String)) {
            throw new Error("Expected the field `rangeName` to be a primitive type in the JSON string but got " + data['rangeName']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * The range of IP addresses belonging to this subnetwork secondary range.
 * @member {String} ipCidrRange
 */
UsableSubnetworkSecondaryRange.prototype['ipCidrRange'] = undefined;

/**
 * The name associated with this subnetwork secondary range, used when adding an alias IP range to a VM instance.
 * @member {String} rangeName
 */
UsableSubnetworkSecondaryRange.prototype['rangeName'] = undefined;

/**
 * This field is to determine the status of the secondary range programmably.
 * @member {module:model/UsableSubnetworkSecondaryRange.StatusEnum} status
 */
UsableSubnetworkSecondaryRange.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
UsableSubnetworkSecondaryRange['StatusEnum'] = {

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",

    /**
     * value: "UNUSED"
     * @const
     */
    "UNUSED": "UNUSED",

    /**
     * value: "IN_USE_SERVICE"
     * @const
     */
    "IN_USE_SERVICE": "IN_USE_SERVICE",

    /**
     * value: "IN_USE_SHAREABLE_POD"
     * @const
     */
    "IN_USE_SHAREABLE_POD": "IN_USE_SHAREABLE_POD",

    /**
     * value: "IN_USE_MANAGED_POD"
     * @const
     */
    "IN_USE_MANAGED_POD": "IN_USE_MANAGED_POD"
};



export default UsableSubnetworkSecondaryRange;

