/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MaintenanceWindow from './MaintenanceWindow';

/**
 * The MaintenancePolicy model module.
 * @module model/MaintenancePolicy
 * @version v1beta1
 */
class MaintenancePolicy {
    /**
     * Constructs a new <code>MaintenancePolicy</code>.
     * MaintenancePolicy defines the maintenance policy to be used for the cluster.
     * @alias module:model/MaintenancePolicy
     */
    constructor() { 
        
        MaintenancePolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MaintenancePolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MaintenancePolicy} obj Optional instance to populate.
     * @return {module:model/MaintenancePolicy} The populated <code>MaintenancePolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MaintenancePolicy();

            if (data.hasOwnProperty('resourceVersion')) {
                obj['resourceVersion'] = ApiClient.convertToType(data['resourceVersion'], 'String');
            }
            if (data.hasOwnProperty('window')) {
                obj['window'] = MaintenanceWindow.constructFromObject(data['window']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MaintenancePolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MaintenancePolicy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['resourceVersion'] && !(typeof data['resourceVersion'] === 'string' || data['resourceVersion'] instanceof String)) {
            throw new Error("Expected the field `resourceVersion` to be a primitive type in the JSON string but got " + data['resourceVersion']);
        }
        // validate the optional field `window`
        if (data['window']) { // data not null
          MaintenanceWindow.validateJSON(data['window']);
        }

        return true;
    }


}



/**
 * A hash identifying the version of this policy, so that updates to fields of the policy won't accidentally undo intermediate changes (and so that users of the API unaware of some fields won't accidentally remove other fields). Make a `get()` request to the cluster to get the current resource version and include it with requests to set the policy.
 * @member {String} resourceVersion
 */
MaintenancePolicy.prototype['resourceVersion'] = undefined;

/**
 * @member {module:model/MaintenanceWindow} window
 */
MaintenancePolicy.prototype['window'] = undefined;






export default MaintenancePolicy;

