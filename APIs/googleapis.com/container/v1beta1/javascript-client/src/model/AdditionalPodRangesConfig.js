/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RangeInfo from './RangeInfo';

/**
 * The AdditionalPodRangesConfig model module.
 * @module model/AdditionalPodRangesConfig
 * @version v1beta1
 */
class AdditionalPodRangesConfig {
    /**
     * Constructs a new <code>AdditionalPodRangesConfig</code>.
     * AdditionalPodRangesConfig is the configuration for additional pod secondary ranges supporting the ClusterUpdate message.
     * @alias module:model/AdditionalPodRangesConfig
     */
    constructor() { 
        
        AdditionalPodRangesConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdditionalPodRangesConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdditionalPodRangesConfig} obj Optional instance to populate.
     * @return {module:model/AdditionalPodRangesConfig} The populated <code>AdditionalPodRangesConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdditionalPodRangesConfig();

            if (data.hasOwnProperty('podRangeInfo')) {
                obj['podRangeInfo'] = ApiClient.convertToType(data['podRangeInfo'], [RangeInfo]);
            }
            if (data.hasOwnProperty('podRangeNames')) {
                obj['podRangeNames'] = ApiClient.convertToType(data['podRangeNames'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdditionalPodRangesConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdditionalPodRangesConfig</code>.
     */
    static validateJSON(data) {
        if (data['podRangeInfo']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['podRangeInfo'])) {
                throw new Error("Expected the field `podRangeInfo` to be an array in the JSON data but got " + data['podRangeInfo']);
            }
            // validate the optional field `podRangeInfo` (array)
            for (const item of data['podRangeInfo']) {
                RangeInfo.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['podRangeNames'])) {
            throw new Error("Expected the field `podRangeNames` to be an array in the JSON data but got " + data['podRangeNames']);
        }

        return true;
    }


}



/**
 * Output only. [Output only] Information for additional pod range.
 * @member {Array.<module:model/RangeInfo>} podRangeInfo
 */
AdditionalPodRangesConfig.prototype['podRangeInfo'] = undefined;

/**
 * Name for pod secondary ipv4 range which has the actual range defined ahead.
 * @member {Array.<String>} podRangeNames
 */
AdditionalPodRangesConfig.prototype['podRangeNames'] = undefined;






export default AdditionalPodRangesConfig;

