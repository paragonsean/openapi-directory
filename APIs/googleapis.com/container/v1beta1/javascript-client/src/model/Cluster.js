/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddonsConfig from './AddonsConfig';
import AuthenticatorGroupsConfig from './AuthenticatorGroupsConfig';
import Autopilot from './Autopilot';
import BinaryAuthorization from './BinaryAuthorization';
import ClusterAutoscaling from './ClusterAutoscaling';
import ClusterTelemetry from './ClusterTelemetry';
import ConfidentialNodes from './ConfidentialNodes';
import CostManagementConfig from './CostManagementConfig';
import DatabaseEncryption from './DatabaseEncryption';
import EnterpriseConfig from './EnterpriseConfig';
import Fleet from './Fleet';
import IPAllocationPolicy from './IPAllocationPolicy';
import IdentityServiceConfig from './IdentityServiceConfig';
import K8sBetaAPIConfig from './K8sBetaAPIConfig';
import LegacyAbac from './LegacyAbac';
import LoggingConfig from './LoggingConfig';
import MaintenancePolicy from './MaintenancePolicy';
import MasterAuth from './MasterAuth';
import MasterAuthorizedNetworksConfig from './MasterAuthorizedNetworksConfig';
import MaxPodsConstraint from './MaxPodsConstraint';
import MeshCertificates from './MeshCertificates';
import MonitoringConfig from './MonitoringConfig';
import NetworkConfig from './NetworkConfig';
import NetworkPolicy from './NetworkPolicy';
import NodeConfig from './NodeConfig';
import NodePool from './NodePool';
import NodePoolAutoConfig from './NodePoolAutoConfig';
import NodePoolDefaults from './NodePoolDefaults';
import NotificationConfig from './NotificationConfig';
import ParentProductConfig from './ParentProductConfig';
import PodSecurityPolicyConfig from './PodSecurityPolicyConfig';
import PrivateClusterConfig from './PrivateClusterConfig';
import ProtectConfig from './ProtectConfig';
import ReleaseChannel from './ReleaseChannel';
import ResourceUsageExportConfig from './ResourceUsageExportConfig';
import SecurityPostureConfig from './SecurityPostureConfig';
import ShieldedNodes from './ShieldedNodes';
import StatusCondition from './StatusCondition';
import TpuConfig from './TpuConfig';
import VerticalPodAutoscaling from './VerticalPodAutoscaling';
import WorkloadALTSConfig from './WorkloadALTSConfig';
import WorkloadCertificates from './WorkloadCertificates';
import WorkloadIdentityConfig from './WorkloadIdentityConfig';

/**
 * The Cluster model module.
 * @module model/Cluster
 * @version v1beta1
 */
class Cluster {
    /**
     * Constructs a new <code>Cluster</code>.
     * A Google Kubernetes Engine cluster.
     * @alias module:model/Cluster
     */
    constructor() { 
        
        Cluster.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Cluster</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Cluster} obj Optional instance to populate.
     * @return {module:model/Cluster} The populated <code>Cluster</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Cluster();

            if (data.hasOwnProperty('addonsConfig')) {
                obj['addonsConfig'] = AddonsConfig.constructFromObject(data['addonsConfig']);
            }
            if (data.hasOwnProperty('authenticatorGroupsConfig')) {
                obj['authenticatorGroupsConfig'] = AuthenticatorGroupsConfig.constructFromObject(data['authenticatorGroupsConfig']);
            }
            if (data.hasOwnProperty('autopilot')) {
                obj['autopilot'] = Autopilot.constructFromObject(data['autopilot']);
            }
            if (data.hasOwnProperty('autoscaling')) {
                obj['autoscaling'] = ClusterAutoscaling.constructFromObject(data['autoscaling']);
            }
            if (data.hasOwnProperty('binaryAuthorization')) {
                obj['binaryAuthorization'] = BinaryAuthorization.constructFromObject(data['binaryAuthorization']);
            }
            if (data.hasOwnProperty('clusterIpv4Cidr')) {
                obj['clusterIpv4Cidr'] = ApiClient.convertToType(data['clusterIpv4Cidr'], 'String');
            }
            if (data.hasOwnProperty('clusterTelemetry')) {
                obj['clusterTelemetry'] = ClusterTelemetry.constructFromObject(data['clusterTelemetry']);
            }
            if (data.hasOwnProperty('conditions')) {
                obj['conditions'] = ApiClient.convertToType(data['conditions'], [StatusCondition]);
            }
            if (data.hasOwnProperty('confidentialNodes')) {
                obj['confidentialNodes'] = ConfidentialNodes.constructFromObject(data['confidentialNodes']);
            }
            if (data.hasOwnProperty('costManagementConfig')) {
                obj['costManagementConfig'] = CostManagementConfig.constructFromObject(data['costManagementConfig']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('currentMasterVersion')) {
                obj['currentMasterVersion'] = ApiClient.convertToType(data['currentMasterVersion'], 'String');
            }
            if (data.hasOwnProperty('currentNodeCount')) {
                obj['currentNodeCount'] = ApiClient.convertToType(data['currentNodeCount'], 'Number');
            }
            if (data.hasOwnProperty('currentNodeVersion')) {
                obj['currentNodeVersion'] = ApiClient.convertToType(data['currentNodeVersion'], 'String');
            }
            if (data.hasOwnProperty('databaseEncryption')) {
                obj['databaseEncryption'] = DatabaseEncryption.constructFromObject(data['databaseEncryption']);
            }
            if (data.hasOwnProperty('defaultMaxPodsConstraint')) {
                obj['defaultMaxPodsConstraint'] = MaxPodsConstraint.constructFromObject(data['defaultMaxPodsConstraint']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('enableK8sBetaApis')) {
                obj['enableK8sBetaApis'] = K8sBetaAPIConfig.constructFromObject(data['enableK8sBetaApis']);
            }
            if (data.hasOwnProperty('enableKubernetesAlpha')) {
                obj['enableKubernetesAlpha'] = ApiClient.convertToType(data['enableKubernetesAlpha'], 'Boolean');
            }
            if (data.hasOwnProperty('enableTpu')) {
                obj['enableTpu'] = ApiClient.convertToType(data['enableTpu'], 'Boolean');
            }
            if (data.hasOwnProperty('endpoint')) {
                obj['endpoint'] = ApiClient.convertToType(data['endpoint'], 'String');
            }
            if (data.hasOwnProperty('enterpriseConfig')) {
                obj['enterpriseConfig'] = EnterpriseConfig.constructFromObject(data['enterpriseConfig']);
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('expireTime')) {
                obj['expireTime'] = ApiClient.convertToType(data['expireTime'], 'String');
            }
            if (data.hasOwnProperty('fleet')) {
                obj['fleet'] = Fleet.constructFromObject(data['fleet']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('identityServiceConfig')) {
                obj['identityServiceConfig'] = IdentityServiceConfig.constructFromObject(data['identityServiceConfig']);
            }
            if (data.hasOwnProperty('initialClusterVersion')) {
                obj['initialClusterVersion'] = ApiClient.convertToType(data['initialClusterVersion'], 'String');
            }
            if (data.hasOwnProperty('initialNodeCount')) {
                obj['initialNodeCount'] = ApiClient.convertToType(data['initialNodeCount'], 'Number');
            }
            if (data.hasOwnProperty('instanceGroupUrls')) {
                obj['instanceGroupUrls'] = ApiClient.convertToType(data['instanceGroupUrls'], ['String']);
            }
            if (data.hasOwnProperty('ipAllocationPolicy')) {
                obj['ipAllocationPolicy'] = IPAllocationPolicy.constructFromObject(data['ipAllocationPolicy']);
            }
            if (data.hasOwnProperty('labelFingerprint')) {
                obj['labelFingerprint'] = ApiClient.convertToType(data['labelFingerprint'], 'String');
            }
            if (data.hasOwnProperty('legacyAbac')) {
                obj['legacyAbac'] = LegacyAbac.constructFromObject(data['legacyAbac']);
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('locations')) {
                obj['locations'] = ApiClient.convertToType(data['locations'], ['String']);
            }
            if (data.hasOwnProperty('loggingConfig')) {
                obj['loggingConfig'] = LoggingConfig.constructFromObject(data['loggingConfig']);
            }
            if (data.hasOwnProperty('loggingService')) {
                obj['loggingService'] = ApiClient.convertToType(data['loggingService'], 'String');
            }
            if (data.hasOwnProperty('maintenancePolicy')) {
                obj['maintenancePolicy'] = MaintenancePolicy.constructFromObject(data['maintenancePolicy']);
            }
            if (data.hasOwnProperty('master')) {
                obj['master'] = ApiClient.convertToType(data['master'], Object);
            }
            if (data.hasOwnProperty('masterAuth')) {
                obj['masterAuth'] = MasterAuth.constructFromObject(data['masterAuth']);
            }
            if (data.hasOwnProperty('masterAuthorizedNetworksConfig')) {
                obj['masterAuthorizedNetworksConfig'] = MasterAuthorizedNetworksConfig.constructFromObject(data['masterAuthorizedNetworksConfig']);
            }
            if (data.hasOwnProperty('masterIpv4CidrBlock')) {
                obj['masterIpv4CidrBlock'] = ApiClient.convertToType(data['masterIpv4CidrBlock'], 'String');
            }
            if (data.hasOwnProperty('meshCertificates')) {
                obj['meshCertificates'] = MeshCertificates.constructFromObject(data['meshCertificates']);
            }
            if (data.hasOwnProperty('monitoringConfig')) {
                obj['monitoringConfig'] = MonitoringConfig.constructFromObject(data['monitoringConfig']);
            }
            if (data.hasOwnProperty('monitoringService')) {
                obj['monitoringService'] = ApiClient.convertToType(data['monitoringService'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('network')) {
                obj['network'] = ApiClient.convertToType(data['network'], 'String');
            }
            if (data.hasOwnProperty('networkConfig')) {
                obj['networkConfig'] = NetworkConfig.constructFromObject(data['networkConfig']);
            }
            if (data.hasOwnProperty('networkPolicy')) {
                obj['networkPolicy'] = NetworkPolicy.constructFromObject(data['networkPolicy']);
            }
            if (data.hasOwnProperty('nodeConfig')) {
                obj['nodeConfig'] = NodeConfig.constructFromObject(data['nodeConfig']);
            }
            if (data.hasOwnProperty('nodeIpv4CidrSize')) {
                obj['nodeIpv4CidrSize'] = ApiClient.convertToType(data['nodeIpv4CidrSize'], 'Number');
            }
            if (data.hasOwnProperty('nodePoolAutoConfig')) {
                obj['nodePoolAutoConfig'] = NodePoolAutoConfig.constructFromObject(data['nodePoolAutoConfig']);
            }
            if (data.hasOwnProperty('nodePoolDefaults')) {
                obj['nodePoolDefaults'] = NodePoolDefaults.constructFromObject(data['nodePoolDefaults']);
            }
            if (data.hasOwnProperty('nodePools')) {
                obj['nodePools'] = ApiClient.convertToType(data['nodePools'], [NodePool]);
            }
            if (data.hasOwnProperty('notificationConfig')) {
                obj['notificationConfig'] = NotificationConfig.constructFromObject(data['notificationConfig']);
            }
            if (data.hasOwnProperty('parentProductConfig')) {
                obj['parentProductConfig'] = ParentProductConfig.constructFromObject(data['parentProductConfig']);
            }
            if (data.hasOwnProperty('podSecurityPolicyConfig')) {
                obj['podSecurityPolicyConfig'] = PodSecurityPolicyConfig.constructFromObject(data['podSecurityPolicyConfig']);
            }
            if (data.hasOwnProperty('privateCluster')) {
                obj['privateCluster'] = ApiClient.convertToType(data['privateCluster'], 'Boolean');
            }
            if (data.hasOwnProperty('privateClusterConfig')) {
                obj['privateClusterConfig'] = PrivateClusterConfig.constructFromObject(data['privateClusterConfig']);
            }
            if (data.hasOwnProperty('protectConfig')) {
                obj['protectConfig'] = ProtectConfig.constructFromObject(data['protectConfig']);
            }
            if (data.hasOwnProperty('releaseChannel')) {
                obj['releaseChannel'] = ReleaseChannel.constructFromObject(data['releaseChannel']);
            }
            if (data.hasOwnProperty('resourceLabels')) {
                obj['resourceLabels'] = ApiClient.convertToType(data['resourceLabels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('resourceUsageExportConfig')) {
                obj['resourceUsageExportConfig'] = ResourceUsageExportConfig.constructFromObject(data['resourceUsageExportConfig']);
            }
            if (data.hasOwnProperty('securityPostureConfig')) {
                obj['securityPostureConfig'] = SecurityPostureConfig.constructFromObject(data['securityPostureConfig']);
            }
            if (data.hasOwnProperty('selfLink')) {
                obj['selfLink'] = ApiClient.convertToType(data['selfLink'], 'String');
            }
            if (data.hasOwnProperty('servicesIpv4Cidr')) {
                obj['servicesIpv4Cidr'] = ApiClient.convertToType(data['servicesIpv4Cidr'], 'String');
            }
            if (data.hasOwnProperty('shieldedNodes')) {
                obj['shieldedNodes'] = ShieldedNodes.constructFromObject(data['shieldedNodes']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('statusMessage')) {
                obj['statusMessage'] = ApiClient.convertToType(data['statusMessage'], 'String');
            }
            if (data.hasOwnProperty('subnetwork')) {
                obj['subnetwork'] = ApiClient.convertToType(data['subnetwork'], 'String');
            }
            if (data.hasOwnProperty('tpuConfig')) {
                obj['tpuConfig'] = TpuConfig.constructFromObject(data['tpuConfig']);
            }
            if (data.hasOwnProperty('tpuIpv4CidrBlock')) {
                obj['tpuIpv4CidrBlock'] = ApiClient.convertToType(data['tpuIpv4CidrBlock'], 'String');
            }
            if (data.hasOwnProperty('verticalPodAutoscaling')) {
                obj['verticalPodAutoscaling'] = VerticalPodAutoscaling.constructFromObject(data['verticalPodAutoscaling']);
            }
            if (data.hasOwnProperty('workloadAltsConfig')) {
                obj['workloadAltsConfig'] = WorkloadALTSConfig.constructFromObject(data['workloadAltsConfig']);
            }
            if (data.hasOwnProperty('workloadCertificates')) {
                obj['workloadCertificates'] = WorkloadCertificates.constructFromObject(data['workloadCertificates']);
            }
            if (data.hasOwnProperty('workloadIdentityConfig')) {
                obj['workloadIdentityConfig'] = WorkloadIdentityConfig.constructFromObject(data['workloadIdentityConfig']);
            }
            if (data.hasOwnProperty('zone')) {
                obj['zone'] = ApiClient.convertToType(data['zone'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Cluster</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Cluster</code>.
     */
    static validateJSON(data) {
        // validate the optional field `addonsConfig`
        if (data['addonsConfig']) { // data not null
          AddonsConfig.validateJSON(data['addonsConfig']);
        }
        // validate the optional field `authenticatorGroupsConfig`
        if (data['authenticatorGroupsConfig']) { // data not null
          AuthenticatorGroupsConfig.validateJSON(data['authenticatorGroupsConfig']);
        }
        // validate the optional field `autopilot`
        if (data['autopilot']) { // data not null
          Autopilot.validateJSON(data['autopilot']);
        }
        // validate the optional field `autoscaling`
        if (data['autoscaling']) { // data not null
          ClusterAutoscaling.validateJSON(data['autoscaling']);
        }
        // validate the optional field `binaryAuthorization`
        if (data['binaryAuthorization']) { // data not null
          BinaryAuthorization.validateJSON(data['binaryAuthorization']);
        }
        // ensure the json data is a string
        if (data['clusterIpv4Cidr'] && !(typeof data['clusterIpv4Cidr'] === 'string' || data['clusterIpv4Cidr'] instanceof String)) {
            throw new Error("Expected the field `clusterIpv4Cidr` to be a primitive type in the JSON string but got " + data['clusterIpv4Cidr']);
        }
        // validate the optional field `clusterTelemetry`
        if (data['clusterTelemetry']) { // data not null
          ClusterTelemetry.validateJSON(data['clusterTelemetry']);
        }
        if (data['conditions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['conditions'])) {
                throw new Error("Expected the field `conditions` to be an array in the JSON data but got " + data['conditions']);
            }
            // validate the optional field `conditions` (array)
            for (const item of data['conditions']) {
                StatusCondition.validateJSON(item);
            };
        }
        // validate the optional field `confidentialNodes`
        if (data['confidentialNodes']) { // data not null
          ConfidentialNodes.validateJSON(data['confidentialNodes']);
        }
        // validate the optional field `costManagementConfig`
        if (data['costManagementConfig']) { // data not null
          CostManagementConfig.validateJSON(data['costManagementConfig']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['currentMasterVersion'] && !(typeof data['currentMasterVersion'] === 'string' || data['currentMasterVersion'] instanceof String)) {
            throw new Error("Expected the field `currentMasterVersion` to be a primitive type in the JSON string but got " + data['currentMasterVersion']);
        }
        // ensure the json data is a string
        if (data['currentNodeVersion'] && !(typeof data['currentNodeVersion'] === 'string' || data['currentNodeVersion'] instanceof String)) {
            throw new Error("Expected the field `currentNodeVersion` to be a primitive type in the JSON string but got " + data['currentNodeVersion']);
        }
        // validate the optional field `databaseEncryption`
        if (data['databaseEncryption']) { // data not null
          DatabaseEncryption.validateJSON(data['databaseEncryption']);
        }
        // validate the optional field `defaultMaxPodsConstraint`
        if (data['defaultMaxPodsConstraint']) { // data not null
          MaxPodsConstraint.validateJSON(data['defaultMaxPodsConstraint']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `enableK8sBetaApis`
        if (data['enableK8sBetaApis']) { // data not null
          K8sBetaAPIConfig.validateJSON(data['enableK8sBetaApis']);
        }
        // ensure the json data is a string
        if (data['endpoint'] && !(typeof data['endpoint'] === 'string' || data['endpoint'] instanceof String)) {
            throw new Error("Expected the field `endpoint` to be a primitive type in the JSON string but got " + data['endpoint']);
        }
        // validate the optional field `enterpriseConfig`
        if (data['enterpriseConfig']) { // data not null
          EnterpriseConfig.validateJSON(data['enterpriseConfig']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['expireTime'] && !(typeof data['expireTime'] === 'string' || data['expireTime'] instanceof String)) {
            throw new Error("Expected the field `expireTime` to be a primitive type in the JSON string but got " + data['expireTime']);
        }
        // validate the optional field `fleet`
        if (data['fleet']) { // data not null
          Fleet.validateJSON(data['fleet']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `identityServiceConfig`
        if (data['identityServiceConfig']) { // data not null
          IdentityServiceConfig.validateJSON(data['identityServiceConfig']);
        }
        // ensure the json data is a string
        if (data['initialClusterVersion'] && !(typeof data['initialClusterVersion'] === 'string' || data['initialClusterVersion'] instanceof String)) {
            throw new Error("Expected the field `initialClusterVersion` to be a primitive type in the JSON string but got " + data['initialClusterVersion']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['instanceGroupUrls'])) {
            throw new Error("Expected the field `instanceGroupUrls` to be an array in the JSON data but got " + data['instanceGroupUrls']);
        }
        // validate the optional field `ipAllocationPolicy`
        if (data['ipAllocationPolicy']) { // data not null
          IPAllocationPolicy.validateJSON(data['ipAllocationPolicy']);
        }
        // ensure the json data is a string
        if (data['labelFingerprint'] && !(typeof data['labelFingerprint'] === 'string' || data['labelFingerprint'] instanceof String)) {
            throw new Error("Expected the field `labelFingerprint` to be a primitive type in the JSON string but got " + data['labelFingerprint']);
        }
        // validate the optional field `legacyAbac`
        if (data['legacyAbac']) { // data not null
          LegacyAbac.validateJSON(data['legacyAbac']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['locations'])) {
            throw new Error("Expected the field `locations` to be an array in the JSON data but got " + data['locations']);
        }
        // validate the optional field `loggingConfig`
        if (data['loggingConfig']) { // data not null
          LoggingConfig.validateJSON(data['loggingConfig']);
        }
        // ensure the json data is a string
        if (data['loggingService'] && !(typeof data['loggingService'] === 'string' || data['loggingService'] instanceof String)) {
            throw new Error("Expected the field `loggingService` to be a primitive type in the JSON string but got " + data['loggingService']);
        }
        // validate the optional field `maintenancePolicy`
        if (data['maintenancePolicy']) { // data not null
          MaintenancePolicy.validateJSON(data['maintenancePolicy']);
        }
        // validate the optional field `masterAuth`
        if (data['masterAuth']) { // data not null
          MasterAuth.validateJSON(data['masterAuth']);
        }
        // validate the optional field `masterAuthorizedNetworksConfig`
        if (data['masterAuthorizedNetworksConfig']) { // data not null
          MasterAuthorizedNetworksConfig.validateJSON(data['masterAuthorizedNetworksConfig']);
        }
        // ensure the json data is a string
        if (data['masterIpv4CidrBlock'] && !(typeof data['masterIpv4CidrBlock'] === 'string' || data['masterIpv4CidrBlock'] instanceof String)) {
            throw new Error("Expected the field `masterIpv4CidrBlock` to be a primitive type in the JSON string but got " + data['masterIpv4CidrBlock']);
        }
        // validate the optional field `meshCertificates`
        if (data['meshCertificates']) { // data not null
          MeshCertificates.validateJSON(data['meshCertificates']);
        }
        // validate the optional field `monitoringConfig`
        if (data['monitoringConfig']) { // data not null
          MonitoringConfig.validateJSON(data['monitoringConfig']);
        }
        // ensure the json data is a string
        if (data['monitoringService'] && !(typeof data['monitoringService'] === 'string' || data['monitoringService'] instanceof String)) {
            throw new Error("Expected the field `monitoringService` to be a primitive type in the JSON string but got " + data['monitoringService']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['network'] && !(typeof data['network'] === 'string' || data['network'] instanceof String)) {
            throw new Error("Expected the field `network` to be a primitive type in the JSON string but got " + data['network']);
        }
        // validate the optional field `networkConfig`
        if (data['networkConfig']) { // data not null
          NetworkConfig.validateJSON(data['networkConfig']);
        }
        // validate the optional field `networkPolicy`
        if (data['networkPolicy']) { // data not null
          NetworkPolicy.validateJSON(data['networkPolicy']);
        }
        // validate the optional field `nodeConfig`
        if (data['nodeConfig']) { // data not null
          NodeConfig.validateJSON(data['nodeConfig']);
        }
        // validate the optional field `nodePoolAutoConfig`
        if (data['nodePoolAutoConfig']) { // data not null
          NodePoolAutoConfig.validateJSON(data['nodePoolAutoConfig']);
        }
        // validate the optional field `nodePoolDefaults`
        if (data['nodePoolDefaults']) { // data not null
          NodePoolDefaults.validateJSON(data['nodePoolDefaults']);
        }
        if (data['nodePools']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['nodePools'])) {
                throw new Error("Expected the field `nodePools` to be an array in the JSON data but got " + data['nodePools']);
            }
            // validate the optional field `nodePools` (array)
            for (const item of data['nodePools']) {
                NodePool.validateJSON(item);
            };
        }
        // validate the optional field `notificationConfig`
        if (data['notificationConfig']) { // data not null
          NotificationConfig.validateJSON(data['notificationConfig']);
        }
        // validate the optional field `parentProductConfig`
        if (data['parentProductConfig']) { // data not null
          ParentProductConfig.validateJSON(data['parentProductConfig']);
        }
        // validate the optional field `podSecurityPolicyConfig`
        if (data['podSecurityPolicyConfig']) { // data not null
          PodSecurityPolicyConfig.validateJSON(data['podSecurityPolicyConfig']);
        }
        // validate the optional field `privateClusterConfig`
        if (data['privateClusterConfig']) { // data not null
          PrivateClusterConfig.validateJSON(data['privateClusterConfig']);
        }
        // validate the optional field `protectConfig`
        if (data['protectConfig']) { // data not null
          ProtectConfig.validateJSON(data['protectConfig']);
        }
        // validate the optional field `releaseChannel`
        if (data['releaseChannel']) { // data not null
          ReleaseChannel.validateJSON(data['releaseChannel']);
        }
        // validate the optional field `resourceUsageExportConfig`
        if (data['resourceUsageExportConfig']) { // data not null
          ResourceUsageExportConfig.validateJSON(data['resourceUsageExportConfig']);
        }
        // validate the optional field `securityPostureConfig`
        if (data['securityPostureConfig']) { // data not null
          SecurityPostureConfig.validateJSON(data['securityPostureConfig']);
        }
        // ensure the json data is a string
        if (data['selfLink'] && !(typeof data['selfLink'] === 'string' || data['selfLink'] instanceof String)) {
            throw new Error("Expected the field `selfLink` to be a primitive type in the JSON string but got " + data['selfLink']);
        }
        // ensure the json data is a string
        if (data['servicesIpv4Cidr'] && !(typeof data['servicesIpv4Cidr'] === 'string' || data['servicesIpv4Cidr'] instanceof String)) {
            throw new Error("Expected the field `servicesIpv4Cidr` to be a primitive type in the JSON string but got " + data['servicesIpv4Cidr']);
        }
        // validate the optional field `shieldedNodes`
        if (data['shieldedNodes']) { // data not null
          ShieldedNodes.validateJSON(data['shieldedNodes']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['statusMessage'] && !(typeof data['statusMessage'] === 'string' || data['statusMessage'] instanceof String)) {
            throw new Error("Expected the field `statusMessage` to be a primitive type in the JSON string but got " + data['statusMessage']);
        }
        // ensure the json data is a string
        if (data['subnetwork'] && !(typeof data['subnetwork'] === 'string' || data['subnetwork'] instanceof String)) {
            throw new Error("Expected the field `subnetwork` to be a primitive type in the JSON string but got " + data['subnetwork']);
        }
        // validate the optional field `tpuConfig`
        if (data['tpuConfig']) { // data not null
          TpuConfig.validateJSON(data['tpuConfig']);
        }
        // ensure the json data is a string
        if (data['tpuIpv4CidrBlock'] && !(typeof data['tpuIpv4CidrBlock'] === 'string' || data['tpuIpv4CidrBlock'] instanceof String)) {
            throw new Error("Expected the field `tpuIpv4CidrBlock` to be a primitive type in the JSON string but got " + data['tpuIpv4CidrBlock']);
        }
        // validate the optional field `verticalPodAutoscaling`
        if (data['verticalPodAutoscaling']) { // data not null
          VerticalPodAutoscaling.validateJSON(data['verticalPodAutoscaling']);
        }
        // validate the optional field `workloadAltsConfig`
        if (data['workloadAltsConfig']) { // data not null
          WorkloadALTSConfig.validateJSON(data['workloadAltsConfig']);
        }
        // validate the optional field `workloadCertificates`
        if (data['workloadCertificates']) { // data not null
          WorkloadCertificates.validateJSON(data['workloadCertificates']);
        }
        // validate the optional field `workloadIdentityConfig`
        if (data['workloadIdentityConfig']) { // data not null
          WorkloadIdentityConfig.validateJSON(data['workloadIdentityConfig']);
        }
        // ensure the json data is a string
        if (data['zone'] && !(typeof data['zone'] === 'string' || data['zone'] instanceof String)) {
            throw new Error("Expected the field `zone` to be a primitive type in the JSON string but got " + data['zone']);
        }

        return true;
    }


}



/**
 * @member {module:model/AddonsConfig} addonsConfig
 */
Cluster.prototype['addonsConfig'] = undefined;

/**
 * @member {module:model/AuthenticatorGroupsConfig} authenticatorGroupsConfig
 */
Cluster.prototype['authenticatorGroupsConfig'] = undefined;

/**
 * @member {module:model/Autopilot} autopilot
 */
Cluster.prototype['autopilot'] = undefined;

/**
 * @member {module:model/ClusterAutoscaling} autoscaling
 */
Cluster.prototype['autoscaling'] = undefined;

/**
 * @member {module:model/BinaryAuthorization} binaryAuthorization
 */
Cluster.prototype['binaryAuthorization'] = undefined;

/**
 * The IP address range of the container pods in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`). Leave blank to have one automatically chosen or specify a `/14` block in `10.0.0.0/8`.
 * @member {String} clusterIpv4Cidr
 */
Cluster.prototype['clusterIpv4Cidr'] = undefined;

/**
 * @member {module:model/ClusterTelemetry} clusterTelemetry
 */
Cluster.prototype['clusterTelemetry'] = undefined;

/**
 * Which conditions caused the current cluster state.
 * @member {Array.<module:model/StatusCondition>} conditions
 */
Cluster.prototype['conditions'] = undefined;

/**
 * @member {module:model/ConfidentialNodes} confidentialNodes
 */
Cluster.prototype['confidentialNodes'] = undefined;

/**
 * @member {module:model/CostManagementConfig} costManagementConfig
 */
Cluster.prototype['costManagementConfig'] = undefined;

/**
 * [Output only] The time the cluster was created, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
 * @member {String} createTime
 */
Cluster.prototype['createTime'] = undefined;

/**
 * [Output only] The current software version of the master endpoint.
 * @member {String} currentMasterVersion
 */
Cluster.prototype['currentMasterVersion'] = undefined;

/**
 * [Output only] The number of nodes currently in the cluster. Deprecated. Call Kubernetes API directly to retrieve node information.
 * @member {Number} currentNodeCount
 */
Cluster.prototype['currentNodeCount'] = undefined;

/**
 * [Output only] Deprecated, use [NodePool.version](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters.nodePools) instead. The current version of the node software components. If they are currently at multiple versions because they're in the process of being upgraded, this reflects the minimum version of all nodes.
 * @member {String} currentNodeVersion
 */
Cluster.prototype['currentNodeVersion'] = undefined;

/**
 * @member {module:model/DatabaseEncryption} databaseEncryption
 */
Cluster.prototype['databaseEncryption'] = undefined;

/**
 * @member {module:model/MaxPodsConstraint} defaultMaxPodsConstraint
 */
Cluster.prototype['defaultMaxPodsConstraint'] = undefined;

/**
 * An optional description of this cluster.
 * @member {String} description
 */
Cluster.prototype['description'] = undefined;

/**
 * @member {module:model/K8sBetaAPIConfig} enableK8sBetaApis
 */
Cluster.prototype['enableK8sBetaApis'] = undefined;

/**
 * Kubernetes alpha features are enabled on this cluster. This includes alpha API groups (e.g. v1beta1) and features that may not be production ready in the kubernetes version of the master and nodes. The cluster has no SLA for uptime and master/node upgrades are disabled. Alpha enabled clusters are automatically deleted thirty days after creation.
 * @member {Boolean} enableKubernetesAlpha
 */
Cluster.prototype['enableKubernetesAlpha'] = undefined;

/**
 * Enable the ability to use Cloud TPUs in this cluster. This field is deprecated, use tpu_config.enabled instead.
 * @member {Boolean} enableTpu
 */
Cluster.prototype['enableTpu'] = undefined;

/**
 * [Output only] The IP address of this cluster's master endpoint. The endpoint can be accessed from the internet at `https://username:password@endpoint/`. See the `masterAuth` property of this resource for username and password information.
 * @member {String} endpoint
 */
Cluster.prototype['endpoint'] = undefined;

/**
 * @member {module:model/EnterpriseConfig} enterpriseConfig
 */
Cluster.prototype['enterpriseConfig'] = undefined;

/**
 * This checksum is computed by the server based on the value of cluster fields, and may be sent on update requests to ensure the client has an up-to-date value before proceeding.
 * @member {String} etag
 */
Cluster.prototype['etag'] = undefined;

/**
 * [Output only] The time the cluster will be automatically deleted in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
 * @member {String} expireTime
 */
Cluster.prototype['expireTime'] = undefined;

/**
 * @member {module:model/Fleet} fleet
 */
Cluster.prototype['fleet'] = undefined;

/**
 * Output only. Unique id for the cluster.
 * @member {String} id
 */
Cluster.prototype['id'] = undefined;

/**
 * @member {module:model/IdentityServiceConfig} identityServiceConfig
 */
Cluster.prototype['identityServiceConfig'] = undefined;

/**
 * The initial Kubernetes version for this cluster. Valid versions are those found in validMasterVersions returned by getServerConfig. The version can be upgraded over time; such upgrades are reflected in currentMasterVersion and currentNodeVersion. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - \"latest\": picks the highest valid Kubernetes version - \"1.X\": picks the highest valid patch+gke.N patch in the 1.X version - \"1.X.Y\": picks the highest valid gke.N patch in the 1.X.Y version - \"1.X.Y-gke.N\": picks an explicit Kubernetes version - \"\",\"-\": picks the default Kubernetes version
 * @member {String} initialClusterVersion
 */
Cluster.prototype['initialClusterVersion'] = undefined;

/**
 * The number of nodes to create in this cluster. You must ensure that your Compute Engine [resource quota](https://cloud.google.com/compute/quotas) is sufficient for this number of instances. You must also have available firewall and routes quota. For requests, this field should only be used in lieu of a \"node_pool\" object, since this configuration (along with the \"node_config\") will be used to create a \"NodePool\" object with an auto-generated name. Do not use this and a node_pool at the same time. This field is deprecated, use node_pool.initial_node_count instead.
 * @member {Number} initialNodeCount
 */
Cluster.prototype['initialNodeCount'] = undefined;

/**
 * Deprecated. Use node_pools.instance_group_urls.
 * @member {Array.<String>} instanceGroupUrls
 */
Cluster.prototype['instanceGroupUrls'] = undefined;

/**
 * @member {module:model/IPAllocationPolicy} ipAllocationPolicy
 */
Cluster.prototype['ipAllocationPolicy'] = undefined;

/**
 * The fingerprint of the set of labels for this cluster.
 * @member {String} labelFingerprint
 */
Cluster.prototype['labelFingerprint'] = undefined;

/**
 * @member {module:model/LegacyAbac} legacyAbac
 */
Cluster.prototype['legacyAbac'] = undefined;

/**
 * [Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) or [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) in which the cluster resides.
 * @member {String} location
 */
Cluster.prototype['location'] = undefined;

/**
 * The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes should be located. This field provides a default value if [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) are not specified during node pool creation. Warning: changing cluster locations will update the [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) of all node pools and will result in nodes being added and/or removed.
 * @member {Array.<String>} locations
 */
Cluster.prototype['locations'] = undefined;

/**
 * @member {module:model/LoggingConfig} loggingConfig
 */
Cluster.prototype['loggingConfig'] = undefined;

/**
 * The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.
 * @member {String} loggingService
 */
Cluster.prototype['loggingService'] = undefined;

/**
 * @member {module:model/MaintenancePolicy} maintenancePolicy
 */
Cluster.prototype['maintenancePolicy'] = undefined;

/**
 * Master is the configuration for components on master.
 * @member {Object} master
 */
Cluster.prototype['master'] = undefined;

/**
 * @member {module:model/MasterAuth} masterAuth
 */
Cluster.prototype['masterAuth'] = undefined;

/**
 * @member {module:model/MasterAuthorizedNetworksConfig} masterAuthorizedNetworksConfig
 */
Cluster.prototype['masterAuthorizedNetworksConfig'] = undefined;

/**
 * The IP prefix in CIDR notation to use for the hosted master network. This prefix will be used for assigning private IP addresses to the master or set of masters, as well as the ILB VIP. This field is deprecated, use private_cluster_config.master_ipv4_cidr_block instead.
 * @member {String} masterIpv4CidrBlock
 */
Cluster.prototype['masterIpv4CidrBlock'] = undefined;

/**
 * @member {module:model/MeshCertificates} meshCertificates
 */
Cluster.prototype['meshCertificates'] = undefined;

/**
 * @member {module:model/MonitoringConfig} monitoringConfig
 */
Cluster.prototype['monitoringConfig'] = undefined;

/**
 * The monitoring service the cluster should use to write metrics. Currently available options: * \"monitoring.googleapis.com/kubernetes\" - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.
 * @member {String} monitoringService
 */
Cluster.prototype['monitoringService'] = undefined;

/**
 * The name of this cluster. The name must be unique within this project and location (e.g. zone or region), and can be up to 40 characters with the following restrictions: * Lowercase letters, numbers, and hyphens only. * Must start with a letter. * Must end with a number or a letter.
 * @member {String} name
 */
Cluster.prototype['name'] = undefined;

/**
 * The name of the Google Compute Engine [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. If left unspecified, the `default` network will be used. On output this shows the network ID instead of the name.
 * @member {String} network
 */
Cluster.prototype['network'] = undefined;

/**
 * @member {module:model/NetworkConfig} networkConfig
 */
Cluster.prototype['networkConfig'] = undefined;

/**
 * @member {module:model/NetworkPolicy} networkPolicy
 */
Cluster.prototype['networkPolicy'] = undefined;

/**
 * @member {module:model/NodeConfig} nodeConfig
 */
Cluster.prototype['nodeConfig'] = undefined;

/**
 * [Output only] The size of the address space on each node for hosting containers. This is provisioned from within the `container_ipv4_cidr` range. This field will only be set when cluster is in route-based network mode.
 * @member {Number} nodeIpv4CidrSize
 */
Cluster.prototype['nodeIpv4CidrSize'] = undefined;

/**
 * @member {module:model/NodePoolAutoConfig} nodePoolAutoConfig
 */
Cluster.prototype['nodePoolAutoConfig'] = undefined;

/**
 * @member {module:model/NodePoolDefaults} nodePoolDefaults
 */
Cluster.prototype['nodePoolDefaults'] = undefined;

/**
 * The node pools associated with this cluster. This field should not be set if \"node_config\" or \"initial_node_count\" are specified.
 * @member {Array.<module:model/NodePool>} nodePools
 */
Cluster.prototype['nodePools'] = undefined;

/**
 * @member {module:model/NotificationConfig} notificationConfig
 */
Cluster.prototype['notificationConfig'] = undefined;

/**
 * @member {module:model/ParentProductConfig} parentProductConfig
 */
Cluster.prototype['parentProductConfig'] = undefined;

/**
 * @member {module:model/PodSecurityPolicyConfig} podSecurityPolicyConfig
 */
Cluster.prototype['podSecurityPolicyConfig'] = undefined;

/**
 * If this is a private cluster setup. Private clusters are clusters that, by default have no external IP addresses on the nodes and where nodes and the master communicate over private IP addresses. This field is deprecated, use private_cluster_config.enable_private_nodes instead.
 * @member {Boolean} privateCluster
 */
Cluster.prototype['privateCluster'] = undefined;

/**
 * @member {module:model/PrivateClusterConfig} privateClusterConfig
 */
Cluster.prototype['privateClusterConfig'] = undefined;

/**
 * @member {module:model/ProtectConfig} protectConfig
 */
Cluster.prototype['protectConfig'] = undefined;

/**
 * @member {module:model/ReleaseChannel} releaseChannel
 */
Cluster.prototype['releaseChannel'] = undefined;

/**
 * The resource labels for the cluster to use to annotate any related Google Compute Engine resources.
 * @member {Object.<String, String>} resourceLabels
 */
Cluster.prototype['resourceLabels'] = undefined;

/**
 * @member {module:model/ResourceUsageExportConfig} resourceUsageExportConfig
 */
Cluster.prototype['resourceUsageExportConfig'] = undefined;

/**
 * @member {module:model/SecurityPostureConfig} securityPostureConfig
 */
Cluster.prototype['securityPostureConfig'] = undefined;

/**
 * [Output only] Server-defined URL for the resource.
 * @member {String} selfLink
 */
Cluster.prototype['selfLink'] = undefined;

/**
 * [Output only] The IP address range of the Kubernetes services in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `1.2.3.4/29`). Service addresses are typically put in the last `/16` from the container CIDR.
 * @member {String} servicesIpv4Cidr
 */
Cluster.prototype['servicesIpv4Cidr'] = undefined;

/**
 * @member {module:model/ShieldedNodes} shieldedNodes
 */
Cluster.prototype['shieldedNodes'] = undefined;

/**
 * [Output only] The current status of this cluster.
 * @member {module:model/Cluster.StatusEnum} status
 */
Cluster.prototype['status'] = undefined;

/**
 * [Output only] Deprecated. Use conditions instead. Additional information about the current status of this cluster, if available.
 * @member {String} statusMessage
 */
Cluster.prototype['statusMessage'] = undefined;

/**
 * The name of the Google Compute Engine [subnetwork](https://cloud.google.com/compute/docs/subnetworks) to which the cluster is connected. On output this shows the subnetwork ID instead of the name.
 * @member {String} subnetwork
 */
Cluster.prototype['subnetwork'] = undefined;

/**
 * @member {module:model/TpuConfig} tpuConfig
 */
Cluster.prototype['tpuConfig'] = undefined;

/**
 * [Output only] The IP address range of the Cloud TPUs in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `1.2.3.4/29`).
 * @member {String} tpuIpv4CidrBlock
 */
Cluster.prototype['tpuIpv4CidrBlock'] = undefined;

/**
 * @member {module:model/VerticalPodAutoscaling} verticalPodAutoscaling
 */
Cluster.prototype['verticalPodAutoscaling'] = undefined;

/**
 * @member {module:model/WorkloadALTSConfig} workloadAltsConfig
 */
Cluster.prototype['workloadAltsConfig'] = undefined;

/**
 * @member {module:model/WorkloadCertificates} workloadCertificates
 */
Cluster.prototype['workloadCertificates'] = undefined;

/**
 * @member {module:model/WorkloadIdentityConfig} workloadIdentityConfig
 */
Cluster.prototype['workloadIdentityConfig'] = undefined;

/**
 * [Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field is deprecated, use location instead.
 * @member {String} zone
 */
Cluster.prototype['zone'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
Cluster['StatusEnum'] = {

    /**
     * value: "STATUS_UNSPECIFIED"
     * @const
     */
    "STATUS_UNSPECIFIED": "STATUS_UNSPECIFIED",

    /**
     * value: "PROVISIONING"
     * @const
     */
    "PROVISIONING": "PROVISIONING",

    /**
     * value: "RUNNING"
     * @const
     */
    "RUNNING": "RUNNING",

    /**
     * value: "RECONCILING"
     * @const
     */
    "RECONCILING": "RECONCILING",

    /**
     * value: "STOPPING"
     * @const
     */
    "STOPPING": "STOPPING",

    /**
     * value: "ERROR"
     * @const
     */
    "ERROR": "ERROR",

    /**
     * value: "DEGRADED"
     * @const
     */
    "DEGRADED": "DEGRADED"
};



export default Cluster;

