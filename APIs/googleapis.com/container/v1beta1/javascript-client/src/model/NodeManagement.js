/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AutoUpgradeOptions from './AutoUpgradeOptions';

/**
 * The NodeManagement model module.
 * @module model/NodeManagement
 * @version v1beta1
 */
class NodeManagement {
    /**
     * Constructs a new <code>NodeManagement</code>.
     * NodeManagement defines the set of node management services turned on for the node pool.
     * @alias module:model/NodeManagement
     */
    constructor() { 
        
        NodeManagement.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NodeManagement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NodeManagement} obj Optional instance to populate.
     * @return {module:model/NodeManagement} The populated <code>NodeManagement</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NodeManagement();

            if (data.hasOwnProperty('autoRepair')) {
                obj['autoRepair'] = ApiClient.convertToType(data['autoRepair'], 'Boolean');
            }
            if (data.hasOwnProperty('autoUpgrade')) {
                obj['autoUpgrade'] = ApiClient.convertToType(data['autoUpgrade'], 'Boolean');
            }
            if (data.hasOwnProperty('upgradeOptions')) {
                obj['upgradeOptions'] = AutoUpgradeOptions.constructFromObject(data['upgradeOptions']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NodeManagement</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NodeManagement</code>.
     */
    static validateJSON(data) {
        // validate the optional field `upgradeOptions`
        if (data['upgradeOptions']) { // data not null
          AutoUpgradeOptions.validateJSON(data['upgradeOptions']);
        }

        return true;
    }


}



/**
 * Whether the nodes will be automatically repaired.
 * @member {Boolean} autoRepair
 */
NodeManagement.prototype['autoRepair'] = undefined;

/**
 * Whether the nodes will be automatically upgraded.
 * @member {Boolean} autoUpgrade
 */
NodeManagement.prototype['autoUpgrade'] = undefined;

/**
 * @member {module:model/AutoUpgradeOptions} upgradeOptions
 */
NodeManagement.prototype['upgradeOptions'] = undefined;






export default NodeManagement;

