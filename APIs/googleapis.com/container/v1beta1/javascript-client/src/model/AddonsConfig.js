/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CloudRunConfig from './CloudRunConfig';
import ConfigConnectorConfig from './ConfigConnectorConfig';
import DnsCacheConfig from './DnsCacheConfig';
import GcePersistentDiskCsiDriverConfig from './GcePersistentDiskCsiDriverConfig';
import GcpFilestoreCsiDriverConfig from './GcpFilestoreCsiDriverConfig';
import GcsFuseCsiDriverConfig from './GcsFuseCsiDriverConfig';
import GkeBackupAgentConfig from './GkeBackupAgentConfig';
import HorizontalPodAutoscaling from './HorizontalPodAutoscaling';
import HttpLoadBalancing from './HttpLoadBalancing';
import IstioConfig from './IstioConfig';
import KalmConfig from './KalmConfig';
import KubernetesDashboard from './KubernetesDashboard';
import NetworkPolicyConfig from './NetworkPolicyConfig';
import StatefulHAConfig from './StatefulHAConfig';

/**
 * The AddonsConfig model module.
 * @module model/AddonsConfig
 * @version v1beta1
 */
class AddonsConfig {
    /**
     * Constructs a new <code>AddonsConfig</code>.
     * Configuration for the addons that can be automatically spun up in the cluster, enabling additional functionality.
     * @alias module:model/AddonsConfig
     */
    constructor() { 
        
        AddonsConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AddonsConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddonsConfig} obj Optional instance to populate.
     * @return {module:model/AddonsConfig} The populated <code>AddonsConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddonsConfig();

            if (data.hasOwnProperty('cloudRunConfig')) {
                obj['cloudRunConfig'] = CloudRunConfig.constructFromObject(data['cloudRunConfig']);
            }
            if (data.hasOwnProperty('configConnectorConfig')) {
                obj['configConnectorConfig'] = ConfigConnectorConfig.constructFromObject(data['configConnectorConfig']);
            }
            if (data.hasOwnProperty('dnsCacheConfig')) {
                obj['dnsCacheConfig'] = DnsCacheConfig.constructFromObject(data['dnsCacheConfig']);
            }
            if (data.hasOwnProperty('gcePersistentDiskCsiDriverConfig')) {
                obj['gcePersistentDiskCsiDriverConfig'] = GcePersistentDiskCsiDriverConfig.constructFromObject(data['gcePersistentDiskCsiDriverConfig']);
            }
            if (data.hasOwnProperty('gcpFilestoreCsiDriverConfig')) {
                obj['gcpFilestoreCsiDriverConfig'] = GcpFilestoreCsiDriverConfig.constructFromObject(data['gcpFilestoreCsiDriverConfig']);
            }
            if (data.hasOwnProperty('gcsFuseCsiDriverConfig')) {
                obj['gcsFuseCsiDriverConfig'] = GcsFuseCsiDriverConfig.constructFromObject(data['gcsFuseCsiDriverConfig']);
            }
            if (data.hasOwnProperty('gkeBackupAgentConfig')) {
                obj['gkeBackupAgentConfig'] = GkeBackupAgentConfig.constructFromObject(data['gkeBackupAgentConfig']);
            }
            if (data.hasOwnProperty('horizontalPodAutoscaling')) {
                obj['horizontalPodAutoscaling'] = HorizontalPodAutoscaling.constructFromObject(data['horizontalPodAutoscaling']);
            }
            if (data.hasOwnProperty('httpLoadBalancing')) {
                obj['httpLoadBalancing'] = HttpLoadBalancing.constructFromObject(data['httpLoadBalancing']);
            }
            if (data.hasOwnProperty('istioConfig')) {
                obj['istioConfig'] = IstioConfig.constructFromObject(data['istioConfig']);
            }
            if (data.hasOwnProperty('kalmConfig')) {
                obj['kalmConfig'] = KalmConfig.constructFromObject(data['kalmConfig']);
            }
            if (data.hasOwnProperty('kubernetesDashboard')) {
                obj['kubernetesDashboard'] = KubernetesDashboard.constructFromObject(data['kubernetesDashboard']);
            }
            if (data.hasOwnProperty('networkPolicyConfig')) {
                obj['networkPolicyConfig'] = NetworkPolicyConfig.constructFromObject(data['networkPolicyConfig']);
            }
            if (data.hasOwnProperty('statefulHaConfig')) {
                obj['statefulHaConfig'] = StatefulHAConfig.constructFromObject(data['statefulHaConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddonsConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddonsConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `cloudRunConfig`
        if (data['cloudRunConfig']) { // data not null
          CloudRunConfig.validateJSON(data['cloudRunConfig']);
        }
        // validate the optional field `configConnectorConfig`
        if (data['configConnectorConfig']) { // data not null
          ConfigConnectorConfig.validateJSON(data['configConnectorConfig']);
        }
        // validate the optional field `dnsCacheConfig`
        if (data['dnsCacheConfig']) { // data not null
          DnsCacheConfig.validateJSON(data['dnsCacheConfig']);
        }
        // validate the optional field `gcePersistentDiskCsiDriverConfig`
        if (data['gcePersistentDiskCsiDriverConfig']) { // data not null
          GcePersistentDiskCsiDriverConfig.validateJSON(data['gcePersistentDiskCsiDriverConfig']);
        }
        // validate the optional field `gcpFilestoreCsiDriverConfig`
        if (data['gcpFilestoreCsiDriverConfig']) { // data not null
          GcpFilestoreCsiDriverConfig.validateJSON(data['gcpFilestoreCsiDriverConfig']);
        }
        // validate the optional field `gcsFuseCsiDriverConfig`
        if (data['gcsFuseCsiDriverConfig']) { // data not null
          GcsFuseCsiDriverConfig.validateJSON(data['gcsFuseCsiDriverConfig']);
        }
        // validate the optional field `gkeBackupAgentConfig`
        if (data['gkeBackupAgentConfig']) { // data not null
          GkeBackupAgentConfig.validateJSON(data['gkeBackupAgentConfig']);
        }
        // validate the optional field `horizontalPodAutoscaling`
        if (data['horizontalPodAutoscaling']) { // data not null
          HorizontalPodAutoscaling.validateJSON(data['horizontalPodAutoscaling']);
        }
        // validate the optional field `httpLoadBalancing`
        if (data['httpLoadBalancing']) { // data not null
          HttpLoadBalancing.validateJSON(data['httpLoadBalancing']);
        }
        // validate the optional field `istioConfig`
        if (data['istioConfig']) { // data not null
          IstioConfig.validateJSON(data['istioConfig']);
        }
        // validate the optional field `kalmConfig`
        if (data['kalmConfig']) { // data not null
          KalmConfig.validateJSON(data['kalmConfig']);
        }
        // validate the optional field `kubernetesDashboard`
        if (data['kubernetesDashboard']) { // data not null
          KubernetesDashboard.validateJSON(data['kubernetesDashboard']);
        }
        // validate the optional field `networkPolicyConfig`
        if (data['networkPolicyConfig']) { // data not null
          NetworkPolicyConfig.validateJSON(data['networkPolicyConfig']);
        }
        // validate the optional field `statefulHaConfig`
        if (data['statefulHaConfig']) { // data not null
          StatefulHAConfig.validateJSON(data['statefulHaConfig']);
        }

        return true;
    }


}



/**
 * @member {module:model/CloudRunConfig} cloudRunConfig
 */
AddonsConfig.prototype['cloudRunConfig'] = undefined;

/**
 * @member {module:model/ConfigConnectorConfig} configConnectorConfig
 */
AddonsConfig.prototype['configConnectorConfig'] = undefined;

/**
 * @member {module:model/DnsCacheConfig} dnsCacheConfig
 */
AddonsConfig.prototype['dnsCacheConfig'] = undefined;

/**
 * @member {module:model/GcePersistentDiskCsiDriverConfig} gcePersistentDiskCsiDriverConfig
 */
AddonsConfig.prototype['gcePersistentDiskCsiDriverConfig'] = undefined;

/**
 * @member {module:model/GcpFilestoreCsiDriverConfig} gcpFilestoreCsiDriverConfig
 */
AddonsConfig.prototype['gcpFilestoreCsiDriverConfig'] = undefined;

/**
 * @member {module:model/GcsFuseCsiDriverConfig} gcsFuseCsiDriverConfig
 */
AddonsConfig.prototype['gcsFuseCsiDriverConfig'] = undefined;

/**
 * @member {module:model/GkeBackupAgentConfig} gkeBackupAgentConfig
 */
AddonsConfig.prototype['gkeBackupAgentConfig'] = undefined;

/**
 * @member {module:model/HorizontalPodAutoscaling} horizontalPodAutoscaling
 */
AddonsConfig.prototype['horizontalPodAutoscaling'] = undefined;

/**
 * @member {module:model/HttpLoadBalancing} httpLoadBalancing
 */
AddonsConfig.prototype['httpLoadBalancing'] = undefined;

/**
 * @member {module:model/IstioConfig} istioConfig
 */
AddonsConfig.prototype['istioConfig'] = undefined;

/**
 * @member {module:model/KalmConfig} kalmConfig
 */
AddonsConfig.prototype['kalmConfig'] = undefined;

/**
 * @member {module:model/KubernetesDashboard} kubernetesDashboard
 */
AddonsConfig.prototype['kubernetesDashboard'] = undefined;

/**
 * @member {module:model/NetworkPolicyConfig} networkPolicyConfig
 */
AddonsConfig.prototype['networkPolicyConfig'] = undefined;

/**
 * @member {module:model/StatefulHAConfig} statefulHaConfig
 */
AddonsConfig.prototype['statefulHaConfig'] = undefined;






export default AddonsConfig;

