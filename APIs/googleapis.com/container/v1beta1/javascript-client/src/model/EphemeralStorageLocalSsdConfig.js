/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EphemeralStorageLocalSsdConfig model module.
 * @module model/EphemeralStorageLocalSsdConfig
 * @version v1beta1
 */
class EphemeralStorageLocalSsdConfig {
    /**
     * Constructs a new <code>EphemeralStorageLocalSsdConfig</code>.
     * EphemeralStorageLocalSsdConfig contains configuration for the node ephemeral storage using Local SSDs.
     * @alias module:model/EphemeralStorageLocalSsdConfig
     */
    constructor() { 
        
        EphemeralStorageLocalSsdConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EphemeralStorageLocalSsdConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EphemeralStorageLocalSsdConfig} obj Optional instance to populate.
     * @return {module:model/EphemeralStorageLocalSsdConfig} The populated <code>EphemeralStorageLocalSsdConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EphemeralStorageLocalSsdConfig();

            if (data.hasOwnProperty('localSsdCount')) {
                obj['localSsdCount'] = ApiClient.convertToType(data['localSsdCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EphemeralStorageLocalSsdConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EphemeralStorageLocalSsdConfig</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. A zero (or unset) value has different meanings depending on machine type being used: 1. For pre-Gen3 machines, which support flexible numbers of local ssds, zero (or unset) means to disable using local SSDs as ephemeral storage. The limit for this value is dependent upon the maximum number of disk available on a machine per zone. See: https://cloud.google.com/compute/docs/disks/local-ssd for more information. 2. For Gen3 machines which dictate a specific number of local ssds, zero (or unset) means to use the default number of local ssds that goes with that machine type. For example, for a c3-standard-8-lssd machine, 2 local ssds would be provisioned. For c3-standard-8 (which doesn't support local ssds), 0 will be provisioned. See https://cloud.google.com/compute/docs/disks/local-ssd#choose_number_local_ssds for more info.
 * @member {Number} localSsdCount
 */
EphemeralStorageLocalSsdConfig.prototype['localSsdCount'] = undefined;






export default EphemeralStorageLocalSsdConfig;

