/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdvancedDatapathObservabilityConfig from './AdvancedDatapathObservabilityConfig';
import ManagedPrometheusConfig from './ManagedPrometheusConfig';
import MonitoringComponentConfig from './MonitoringComponentConfig';

/**
 * The MonitoringConfig model module.
 * @module model/MonitoringConfig
 * @version v1beta1
 */
class MonitoringConfig {
    /**
     * Constructs a new <code>MonitoringConfig</code>.
     * MonitoringConfig is cluster monitoring configuration.
     * @alias module:model/MonitoringConfig
     */
    constructor() { 
        
        MonitoringConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MonitoringConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MonitoringConfig} obj Optional instance to populate.
     * @return {module:model/MonitoringConfig} The populated <code>MonitoringConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MonitoringConfig();

            if (data.hasOwnProperty('advancedDatapathObservabilityConfig')) {
                obj['advancedDatapathObservabilityConfig'] = AdvancedDatapathObservabilityConfig.constructFromObject(data['advancedDatapathObservabilityConfig']);
            }
            if (data.hasOwnProperty('componentConfig')) {
                obj['componentConfig'] = MonitoringComponentConfig.constructFromObject(data['componentConfig']);
            }
            if (data.hasOwnProperty('managedPrometheusConfig')) {
                obj['managedPrometheusConfig'] = ManagedPrometheusConfig.constructFromObject(data['managedPrometheusConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MonitoringConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MonitoringConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `advancedDatapathObservabilityConfig`
        if (data['advancedDatapathObservabilityConfig']) { // data not null
          AdvancedDatapathObservabilityConfig.validateJSON(data['advancedDatapathObservabilityConfig']);
        }
        // validate the optional field `componentConfig`
        if (data['componentConfig']) { // data not null
          MonitoringComponentConfig.validateJSON(data['componentConfig']);
        }
        // validate the optional field `managedPrometheusConfig`
        if (data['managedPrometheusConfig']) { // data not null
          ManagedPrometheusConfig.validateJSON(data['managedPrometheusConfig']);
        }

        return true;
    }


}



/**
 * @member {module:model/AdvancedDatapathObservabilityConfig} advancedDatapathObservabilityConfig
 */
MonitoringConfig.prototype['advancedDatapathObservabilityConfig'] = undefined;

/**
 * @member {module:model/MonitoringComponentConfig} componentConfig
 */
MonitoringConfig.prototype['componentConfig'] = undefined;

/**
 * @member {module:model/ManagedPrometheusConfig} managedPrometheusConfig
 */
MonitoringConfig.prototype['managedPrometheusConfig'] = undefined;






export default MonitoringConfig;

