/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HttpCacheControlResponseHeader from './HttpCacheControlResponseHeader';

/**
 * The GetOpenIDConfigResponse model module.
 * @module model/GetOpenIDConfigResponse
 * @version v1beta1
 */
class GetOpenIDConfigResponse {
    /**
     * Constructs a new <code>GetOpenIDConfigResponse</code>.
     * GetOpenIDConfigResponse is an OIDC discovery document for the cluster. See the OpenID Connect Discovery 1.0 specification for details.
     * @alias module:model/GetOpenIDConfigResponse
     */
    constructor() { 
        
        GetOpenIDConfigResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetOpenIDConfigResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetOpenIDConfigResponse} obj Optional instance to populate.
     * @return {module:model/GetOpenIDConfigResponse} The populated <code>GetOpenIDConfigResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetOpenIDConfigResponse();

            if (data.hasOwnProperty('cacheHeader')) {
                obj['cacheHeader'] = HttpCacheControlResponseHeader.constructFromObject(data['cacheHeader']);
            }
            if (data.hasOwnProperty('claims_supported')) {
                obj['claims_supported'] = ApiClient.convertToType(data['claims_supported'], ['String']);
            }
            if (data.hasOwnProperty('grant_types')) {
                obj['grant_types'] = ApiClient.convertToType(data['grant_types'], ['String']);
            }
            if (data.hasOwnProperty('id_token_signing_alg_values_supported')) {
                obj['id_token_signing_alg_values_supported'] = ApiClient.convertToType(data['id_token_signing_alg_values_supported'], ['String']);
            }
            if (data.hasOwnProperty('issuer')) {
                obj['issuer'] = ApiClient.convertToType(data['issuer'], 'String');
            }
            if (data.hasOwnProperty('jwks_uri')) {
                obj['jwks_uri'] = ApiClient.convertToType(data['jwks_uri'], 'String');
            }
            if (data.hasOwnProperty('response_types_supported')) {
                obj['response_types_supported'] = ApiClient.convertToType(data['response_types_supported'], ['String']);
            }
            if (data.hasOwnProperty('subject_types_supported')) {
                obj['subject_types_supported'] = ApiClient.convertToType(data['subject_types_supported'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetOpenIDConfigResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetOpenIDConfigResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `cacheHeader`
        if (data['cacheHeader']) { // data not null
          HttpCacheControlResponseHeader.validateJSON(data['cacheHeader']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['claims_supported'])) {
            throw new Error("Expected the field `claims_supported` to be an array in the JSON data but got " + data['claims_supported']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['grant_types'])) {
            throw new Error("Expected the field `grant_types` to be an array in the JSON data but got " + data['grant_types']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['id_token_signing_alg_values_supported'])) {
            throw new Error("Expected the field `id_token_signing_alg_values_supported` to be an array in the JSON data but got " + data['id_token_signing_alg_values_supported']);
        }
        // ensure the json data is a string
        if (data['issuer'] && !(typeof data['issuer'] === 'string' || data['issuer'] instanceof String)) {
            throw new Error("Expected the field `issuer` to be a primitive type in the JSON string but got " + data['issuer']);
        }
        // ensure the json data is a string
        if (data['jwks_uri'] && !(typeof data['jwks_uri'] === 'string' || data['jwks_uri'] instanceof String)) {
            throw new Error("Expected the field `jwks_uri` to be a primitive type in the JSON string but got " + data['jwks_uri']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['response_types_supported'])) {
            throw new Error("Expected the field `response_types_supported` to be an array in the JSON data but got " + data['response_types_supported']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['subject_types_supported'])) {
            throw new Error("Expected the field `subject_types_supported` to be an array in the JSON data but got " + data['subject_types_supported']);
        }

        return true;
    }


}



/**
 * @member {module:model/HttpCacheControlResponseHeader} cacheHeader
 */
GetOpenIDConfigResponse.prototype['cacheHeader'] = undefined;

/**
 * Supported claims.
 * @member {Array.<String>} claims_supported
 */
GetOpenIDConfigResponse.prototype['claims_supported'] = undefined;

/**
 * Supported grant types.
 * @member {Array.<String>} grant_types
 */
GetOpenIDConfigResponse.prototype['grant_types'] = undefined;

/**
 * supported ID Token signing Algorithms.
 * @member {Array.<String>} id_token_signing_alg_values_supported
 */
GetOpenIDConfigResponse.prototype['id_token_signing_alg_values_supported'] = undefined;

/**
 * OIDC Issuer.
 * @member {String} issuer
 */
GetOpenIDConfigResponse.prototype['issuer'] = undefined;

/**
 * JSON Web Key uri.
 * @member {String} jwks_uri
 */
GetOpenIDConfigResponse.prototype['jwks_uri'] = undefined;

/**
 * Supported response types.
 * @member {Array.<String>} response_types_supported
 */
GetOpenIDConfigResponse.prototype['response_types_supported'] = undefined;

/**
 * Supported subject types.
 * @member {Array.<String>} subject_types_supported
 */
GetOpenIDConfigResponse.prototype['subject_types_supported'] = undefined;






export default GetOpenIDConfigResponse;

