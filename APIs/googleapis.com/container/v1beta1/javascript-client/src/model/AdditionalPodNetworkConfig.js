/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MaxPodsConstraint from './MaxPodsConstraint';

/**
 * The AdditionalPodNetworkConfig model module.
 * @module model/AdditionalPodNetworkConfig
 * @version v1beta1
 */
class AdditionalPodNetworkConfig {
    /**
     * Constructs a new <code>AdditionalPodNetworkConfig</code>.
     * AdditionalPodNetworkConfig is the configuration for additional pod networks within the NodeNetworkConfig message
     * @alias module:model/AdditionalPodNetworkConfig
     */
    constructor() { 
        
        AdditionalPodNetworkConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdditionalPodNetworkConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdditionalPodNetworkConfig} obj Optional instance to populate.
     * @return {module:model/AdditionalPodNetworkConfig} The populated <code>AdditionalPodNetworkConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdditionalPodNetworkConfig();

            if (data.hasOwnProperty('maxPodsPerNode')) {
                obj['maxPodsPerNode'] = MaxPodsConstraint.constructFromObject(data['maxPodsPerNode']);
            }
            if (data.hasOwnProperty('secondaryPodRange')) {
                obj['secondaryPodRange'] = ApiClient.convertToType(data['secondaryPodRange'], 'String');
            }
            if (data.hasOwnProperty('subnetwork')) {
                obj['subnetwork'] = ApiClient.convertToType(data['subnetwork'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdditionalPodNetworkConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdditionalPodNetworkConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `maxPodsPerNode`
        if (data['maxPodsPerNode']) { // data not null
          MaxPodsConstraint.validateJSON(data['maxPodsPerNode']);
        }
        // ensure the json data is a string
        if (data['secondaryPodRange'] && !(typeof data['secondaryPodRange'] === 'string' || data['secondaryPodRange'] instanceof String)) {
            throw new Error("Expected the field `secondaryPodRange` to be a primitive type in the JSON string but got " + data['secondaryPodRange']);
        }
        // ensure the json data is a string
        if (data['subnetwork'] && !(typeof data['subnetwork'] === 'string' || data['subnetwork'] instanceof String)) {
            throw new Error("Expected the field `subnetwork` to be a primitive type in the JSON string but got " + data['subnetwork']);
        }

        return true;
    }


}



/**
 * @member {module:model/MaxPodsConstraint} maxPodsPerNode
 */
AdditionalPodNetworkConfig.prototype['maxPodsPerNode'] = undefined;

/**
 * The name of the secondary range on the subnet which provides IP address for this pod range
 * @member {String} secondaryPodRange
 */
AdditionalPodNetworkConfig.prototype['secondaryPodRange'] = undefined;

/**
 * Name of the subnetwork where the additional pod network belongs
 * @member {String} subnetwork
 */
AdditionalPodNetworkConfig.prototype['subnetwork'] = undefined;






export default AdditionalPodNetworkConfig;

