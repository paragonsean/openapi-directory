/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KubernetesEngineApi);
  }
}(this, function(expect, KubernetesEngineApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KubernetesEngineApi.AddonsConfig();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AddonsConfig', function() {
    it('should create an instance of AddonsConfig', function() {
      // uncomment below and update the code to test AddonsConfig
      //var instance = new KubernetesEngineApi.AddonsConfig();
      //expect(instance).to.be.a(KubernetesEngineApi.AddonsConfig);
    });

    it('should have the property cloudRunConfig (base name: "cloudRunConfig")', function() {
      // uncomment below and update the code to test the property cloudRunConfig
      //var instance = new KubernetesEngineApi.AddonsConfig();
      //expect(instance).to.be();
    });

    it('should have the property configConnectorConfig (base name: "configConnectorConfig")', function() {
      // uncomment below and update the code to test the property configConnectorConfig
      //var instance = new KubernetesEngineApi.AddonsConfig();
      //expect(instance).to.be();
    });

    it('should have the property dnsCacheConfig (base name: "dnsCacheConfig")', function() {
      // uncomment below and update the code to test the property dnsCacheConfig
      //var instance = new KubernetesEngineApi.AddonsConfig();
      //expect(instance).to.be();
    });

    it('should have the property gcePersistentDiskCsiDriverConfig (base name: "gcePersistentDiskCsiDriverConfig")', function() {
      // uncomment below and update the code to test the property gcePersistentDiskCsiDriverConfig
      //var instance = new KubernetesEngineApi.AddonsConfig();
      //expect(instance).to.be();
    });

    it('should have the property gcpFilestoreCsiDriverConfig (base name: "gcpFilestoreCsiDriverConfig")', function() {
      // uncomment below and update the code to test the property gcpFilestoreCsiDriverConfig
      //var instance = new KubernetesEngineApi.AddonsConfig();
      //expect(instance).to.be();
    });

    it('should have the property gcsFuseCsiDriverConfig (base name: "gcsFuseCsiDriverConfig")', function() {
      // uncomment below and update the code to test the property gcsFuseCsiDriverConfig
      //var instance = new KubernetesEngineApi.AddonsConfig();
      //expect(instance).to.be();
    });

    it('should have the property gkeBackupAgentConfig (base name: "gkeBackupAgentConfig")', function() {
      // uncomment below and update the code to test the property gkeBackupAgentConfig
      //var instance = new KubernetesEngineApi.AddonsConfig();
      //expect(instance).to.be();
    });

    it('should have the property horizontalPodAutoscaling (base name: "horizontalPodAutoscaling")', function() {
      // uncomment below and update the code to test the property horizontalPodAutoscaling
      //var instance = new KubernetesEngineApi.AddonsConfig();
      //expect(instance).to.be();
    });

    it('should have the property httpLoadBalancing (base name: "httpLoadBalancing")', function() {
      // uncomment below and update the code to test the property httpLoadBalancing
      //var instance = new KubernetesEngineApi.AddonsConfig();
      //expect(instance).to.be();
    });

    it('should have the property istioConfig (base name: "istioConfig")', function() {
      // uncomment below and update the code to test the property istioConfig
      //var instance = new KubernetesEngineApi.AddonsConfig();
      //expect(instance).to.be();
    });

    it('should have the property kalmConfig (base name: "kalmConfig")', function() {
      // uncomment below and update the code to test the property kalmConfig
      //var instance = new KubernetesEngineApi.AddonsConfig();
      //expect(instance).to.be();
    });

    it('should have the property kubernetesDashboard (base name: "kubernetesDashboard")', function() {
      // uncomment below and update the code to test the property kubernetesDashboard
      //var instance = new KubernetesEngineApi.AddonsConfig();
      //expect(instance).to.be();
    });

    it('should have the property networkPolicyConfig (base name: "networkPolicyConfig")', function() {
      // uncomment below and update the code to test the property networkPolicyConfig
      //var instance = new KubernetesEngineApi.AddonsConfig();
      //expect(instance).to.be();
    });

    it('should have the property statefulHaConfig (base name: "statefulHaConfig")', function() {
      // uncomment below and update the code to test the property statefulHaConfig
      //var instance = new KubernetesEngineApi.AddonsConfig();
      //expect(instance).to.be();
    });

  });

}));
