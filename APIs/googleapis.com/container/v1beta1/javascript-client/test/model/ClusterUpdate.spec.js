/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KubernetesEngineApi);
  }
}(this, function(expect, KubernetesEngineApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KubernetesEngineApi.ClusterUpdate();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ClusterUpdate', function() {
    it('should create an instance of ClusterUpdate', function() {
      // uncomment below and update the code to test ClusterUpdate
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be.a(KubernetesEngineApi.ClusterUpdate);
    });

    it('should have the property additionalPodRangesConfig (base name: "additionalPodRangesConfig")', function() {
      // uncomment below and update the code to test the property additionalPodRangesConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredAddonsConfig (base name: "desiredAddonsConfig")', function() {
      // uncomment below and update the code to test the property desiredAddonsConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredAuthenticatorGroupsConfig (base name: "desiredAuthenticatorGroupsConfig")', function() {
      // uncomment below and update the code to test the property desiredAuthenticatorGroupsConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredAutopilotWorkloadPolicyConfig (base name: "desiredAutopilotWorkloadPolicyConfig")', function() {
      // uncomment below and update the code to test the property desiredAutopilotWorkloadPolicyConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredBinaryAuthorization (base name: "desiredBinaryAuthorization")', function() {
      // uncomment below and update the code to test the property desiredBinaryAuthorization
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredClusterAutoscaling (base name: "desiredClusterAutoscaling")', function() {
      // uncomment below and update the code to test the property desiredClusterAutoscaling
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredClusterTelemetry (base name: "desiredClusterTelemetry")', function() {
      // uncomment below and update the code to test the property desiredClusterTelemetry
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredCostManagementConfig (base name: "desiredCostManagementConfig")', function() {
      // uncomment below and update the code to test the property desiredCostManagementConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredDatabaseEncryption (base name: "desiredDatabaseEncryption")', function() {
      // uncomment below and update the code to test the property desiredDatabaseEncryption
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredDatapathProvider (base name: "desiredDatapathProvider")', function() {
      // uncomment below and update the code to test the property desiredDatapathProvider
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredDefaultSnatStatus (base name: "desiredDefaultSnatStatus")', function() {
      // uncomment below and update the code to test the property desiredDefaultSnatStatus
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredDnsConfig (base name: "desiredDnsConfig")', function() {
      // uncomment below and update the code to test the property desiredDnsConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredEnableFqdnNetworkPolicy (base name: "desiredEnableFqdnNetworkPolicy")', function() {
      // uncomment below and update the code to test the property desiredEnableFqdnNetworkPolicy
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredEnablePrivateEndpoint (base name: "desiredEnablePrivateEndpoint")', function() {
      // uncomment below and update the code to test the property desiredEnablePrivateEndpoint
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredFleet (base name: "desiredFleet")', function() {
      // uncomment below and update the code to test the property desiredFleet
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredGatewayApiConfig (base name: "desiredGatewayApiConfig")', function() {
      // uncomment below and update the code to test the property desiredGatewayApiConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredGcfsConfig (base name: "desiredGcfsConfig")', function() {
      // uncomment below and update the code to test the property desiredGcfsConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredHostMaintenancePolicy (base name: "desiredHostMaintenancePolicy")', function() {
      // uncomment below and update the code to test the property desiredHostMaintenancePolicy
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredIdentityServiceConfig (base name: "desiredIdentityServiceConfig")', function() {
      // uncomment below and update the code to test the property desiredIdentityServiceConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredImageType (base name: "desiredImageType")', function() {
      // uncomment below and update the code to test the property desiredImageType
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredInTransitEncryptionConfig (base name: "desiredInTransitEncryptionConfig")', function() {
      // uncomment below and update the code to test the property desiredInTransitEncryptionConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredIntraNodeVisibilityConfig (base name: "desiredIntraNodeVisibilityConfig")', function() {
      // uncomment below and update the code to test the property desiredIntraNodeVisibilityConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredK8sBetaApis (base name: "desiredK8sBetaApis")', function() {
      // uncomment below and update the code to test the property desiredK8sBetaApis
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredL4ilbSubsettingConfig (base name: "desiredL4ilbSubsettingConfig")', function() {
      // uncomment below and update the code to test the property desiredL4ilbSubsettingConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredLocations (base name: "desiredLocations")', function() {
      // uncomment below and update the code to test the property desiredLocations
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredLoggingConfig (base name: "desiredLoggingConfig")', function() {
      // uncomment below and update the code to test the property desiredLoggingConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredLoggingService (base name: "desiredLoggingService")', function() {
      // uncomment below and update the code to test the property desiredLoggingService
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredMaster (base name: "desiredMaster")', function() {
      // uncomment below and update the code to test the property desiredMaster
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredMasterAuthorizedNetworksConfig (base name: "desiredMasterAuthorizedNetworksConfig")', function() {
      // uncomment below and update the code to test the property desiredMasterAuthorizedNetworksConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredMasterVersion (base name: "desiredMasterVersion")', function() {
      // uncomment below and update the code to test the property desiredMasterVersion
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredMeshCertificates (base name: "desiredMeshCertificates")', function() {
      // uncomment below and update the code to test the property desiredMeshCertificates
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredMonitoringConfig (base name: "desiredMonitoringConfig")', function() {
      // uncomment below and update the code to test the property desiredMonitoringConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredMonitoringService (base name: "desiredMonitoringService")', function() {
      // uncomment below and update the code to test the property desiredMonitoringService
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredNetworkPerformanceConfig (base name: "desiredNetworkPerformanceConfig")', function() {
      // uncomment below and update the code to test the property desiredNetworkPerformanceConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredNodePoolAutoConfigNetworkTags (base name: "desiredNodePoolAutoConfigNetworkTags")', function() {
      // uncomment below and update the code to test the property desiredNodePoolAutoConfigNetworkTags
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredNodePoolAutoConfigResourceManagerTags (base name: "desiredNodePoolAutoConfigResourceManagerTags")', function() {
      // uncomment below and update the code to test the property desiredNodePoolAutoConfigResourceManagerTags
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredNodePoolAutoscaling (base name: "desiredNodePoolAutoscaling")', function() {
      // uncomment below and update the code to test the property desiredNodePoolAutoscaling
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredNodePoolId (base name: "desiredNodePoolId")', function() {
      // uncomment below and update the code to test the property desiredNodePoolId
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredNodePoolLoggingConfig (base name: "desiredNodePoolLoggingConfig")', function() {
      // uncomment below and update the code to test the property desiredNodePoolLoggingConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredNodeVersion (base name: "desiredNodeVersion")', function() {
      // uncomment below and update the code to test the property desiredNodeVersion
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredNotificationConfig (base name: "desiredNotificationConfig")', function() {
      // uncomment below and update the code to test the property desiredNotificationConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredParentProductConfig (base name: "desiredParentProductConfig")', function() {
      // uncomment below and update the code to test the property desiredParentProductConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredPodSecurityPolicyConfig (base name: "desiredPodSecurityPolicyConfig")', function() {
      // uncomment below and update the code to test the property desiredPodSecurityPolicyConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredPrivateClusterConfig (base name: "desiredPrivateClusterConfig")', function() {
      // uncomment below and update the code to test the property desiredPrivateClusterConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredPrivateIpv6GoogleAccess (base name: "desiredPrivateIpv6GoogleAccess")', function() {
      // uncomment below and update the code to test the property desiredPrivateIpv6GoogleAccess
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredProtectConfig (base name: "desiredProtectConfig")', function() {
      // uncomment below and update the code to test the property desiredProtectConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredReleaseChannel (base name: "desiredReleaseChannel")', function() {
      // uncomment below and update the code to test the property desiredReleaseChannel
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredResourceUsageExportConfig (base name: "desiredResourceUsageExportConfig")', function() {
      // uncomment below and update the code to test the property desiredResourceUsageExportConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredSecurityPostureConfig (base name: "desiredSecurityPostureConfig")', function() {
      // uncomment below and update the code to test the property desiredSecurityPostureConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredServiceExternalIpsConfig (base name: "desiredServiceExternalIpsConfig")', function() {
      // uncomment below and update the code to test the property desiredServiceExternalIpsConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredShieldedNodes (base name: "desiredShieldedNodes")', function() {
      // uncomment below and update the code to test the property desiredShieldedNodes
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredStackType (base name: "desiredStackType")', function() {
      // uncomment below and update the code to test the property desiredStackType
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredTpuConfig (base name: "desiredTpuConfig")', function() {
      // uncomment below and update the code to test the property desiredTpuConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredVerticalPodAutoscaling (base name: "desiredVerticalPodAutoscaling")', function() {
      // uncomment below and update the code to test the property desiredVerticalPodAutoscaling
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredWorkloadAltsConfig (base name: "desiredWorkloadAltsConfig")', function() {
      // uncomment below and update the code to test the property desiredWorkloadAltsConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredWorkloadCertificates (base name: "desiredWorkloadCertificates")', function() {
      // uncomment below and update the code to test the property desiredWorkloadCertificates
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property desiredWorkloadIdentityConfig (base name: "desiredWorkloadIdentityConfig")', function() {
      // uncomment below and update the code to test the property desiredWorkloadIdentityConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property enableK8sBetaApis (base name: "enableK8sBetaApis")', function() {
      // uncomment below and update the code to test the property enableK8sBetaApis
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property etag (base name: "etag")', function() {
      // uncomment below and update the code to test the property etag
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property removedAdditionalPodRangesConfig (base name: "removedAdditionalPodRangesConfig")', function() {
      // uncomment below and update the code to test the property removedAdditionalPodRangesConfig
      //var instance = new KubernetesEngineApi.ClusterUpdate();
      //expect(instance).to.be();
    });

  });

}));
