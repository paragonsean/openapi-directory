/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUsableSubnetworkSecondaryRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUsableSubnetworkSecondaryRange::OAIUsableSubnetworkSecondaryRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUsableSubnetworkSecondaryRange::OAIUsableSubnetworkSecondaryRange() {
    this->initializeModel();
}

OAIUsableSubnetworkSecondaryRange::~OAIUsableSubnetworkSecondaryRange() {}

void OAIUsableSubnetworkSecondaryRange::initializeModel() {

    m_ip_cidr_range_isSet = false;
    m_ip_cidr_range_isValid = false;

    m_range_name_isSet = false;
    m_range_name_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIUsableSubnetworkSecondaryRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUsableSubnetworkSecondaryRange::fromJsonObject(QJsonObject json) {

    m_ip_cidr_range_isValid = ::OpenAPI::fromJsonValue(m_ip_cidr_range, json[QString("ipCidrRange")]);
    m_ip_cidr_range_isSet = !json[QString("ipCidrRange")].isNull() && m_ip_cidr_range_isValid;

    m_range_name_isValid = ::OpenAPI::fromJsonValue(m_range_name, json[QString("rangeName")]);
    m_range_name_isSet = !json[QString("rangeName")].isNull() && m_range_name_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIUsableSubnetworkSecondaryRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUsableSubnetworkSecondaryRange::asJsonObject() const {
    QJsonObject obj;
    if (m_ip_cidr_range_isSet) {
        obj.insert(QString("ipCidrRange"), ::OpenAPI::toJsonValue(m_ip_cidr_range));
    }
    if (m_range_name_isSet) {
        obj.insert(QString("rangeName"), ::OpenAPI::toJsonValue(m_range_name));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIUsableSubnetworkSecondaryRange::getIpCidrRange() const {
    return m_ip_cidr_range;
}
void OAIUsableSubnetworkSecondaryRange::setIpCidrRange(const QString &ip_cidr_range) {
    m_ip_cidr_range = ip_cidr_range;
    m_ip_cidr_range_isSet = true;
}

bool OAIUsableSubnetworkSecondaryRange::is_ip_cidr_range_Set() const{
    return m_ip_cidr_range_isSet;
}

bool OAIUsableSubnetworkSecondaryRange::is_ip_cidr_range_Valid() const{
    return m_ip_cidr_range_isValid;
}

QString OAIUsableSubnetworkSecondaryRange::getRangeName() const {
    return m_range_name;
}
void OAIUsableSubnetworkSecondaryRange::setRangeName(const QString &range_name) {
    m_range_name = range_name;
    m_range_name_isSet = true;
}

bool OAIUsableSubnetworkSecondaryRange::is_range_name_Set() const{
    return m_range_name_isSet;
}

bool OAIUsableSubnetworkSecondaryRange::is_range_name_Valid() const{
    return m_range_name_isValid;
}

QString OAIUsableSubnetworkSecondaryRange::getStatus() const {
    return m_status;
}
void OAIUsableSubnetworkSecondaryRange::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIUsableSubnetworkSecondaryRange::is_status_Set() const{
    return m_status_isSet;
}

bool OAIUsableSubnetworkSecondaryRange::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIUsableSubnetworkSecondaryRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ip_cidr_range_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_range_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUsableSubnetworkSecondaryRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
