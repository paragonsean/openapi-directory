/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateInfo::OAIUpdateInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateInfo::OAIUpdateInfo() {
    this->initializeModel();
}

OAIUpdateInfo::~OAIUpdateInfo() {}

void OAIUpdateInfo::initializeModel() {

    m_blue_green_info_isSet = false;
    m_blue_green_info_isValid = false;
}

void OAIUpdateInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateInfo::fromJsonObject(QJsonObject json) {

    m_blue_green_info_isValid = ::OpenAPI::fromJsonValue(m_blue_green_info, json[QString("blueGreenInfo")]);
    m_blue_green_info_isSet = !json[QString("blueGreenInfo")].isNull() && m_blue_green_info_isValid;
}

QString OAIUpdateInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_blue_green_info.isSet()) {
        obj.insert(QString("blueGreenInfo"), ::OpenAPI::toJsonValue(m_blue_green_info));
    }
    return obj;
}

OAIBlueGreenInfo OAIUpdateInfo::getBlueGreenInfo() const {
    return m_blue_green_info;
}
void OAIUpdateInfo::setBlueGreenInfo(const OAIBlueGreenInfo &blue_green_info) {
    m_blue_green_info = blue_green_info;
    m_blue_green_info_isSet = true;
}

bool OAIUpdateInfo::is_blue_green_info_Set() const{
    return m_blue_green_info_isSet;
}

bool OAIUpdateInfo::is_blue_green_info_Valid() const{
    return m_blue_green_info_isValid;
}

bool OAIUpdateInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_blue_green_info.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
