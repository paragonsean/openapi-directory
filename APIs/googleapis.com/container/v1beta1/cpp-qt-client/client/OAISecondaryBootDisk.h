/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISecondaryBootDisk.h
 *
 * SecondaryBootDisk represents a persistent disk attached to a node with special configurations based on its mode.
 */

#ifndef OAISecondaryBootDisk_H
#define OAISecondaryBootDisk_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISecondaryBootDisk : public OAIObject {
public:
    OAISecondaryBootDisk();
    OAISecondaryBootDisk(QString json);
    ~OAISecondaryBootDisk() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDiskImage() const;
    void setDiskImage(const QString &disk_image);
    bool is_disk_image_Set() const;
    bool is_disk_image_Valid() const;

    QString getMode() const;
    void setMode(const QString &mode);
    bool is_mode_Set() const;
    bool is_mode_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_disk_image;
    bool m_disk_image_isSet;
    bool m_disk_image_isValid;

    QString m_mode;
    bool m_mode_isSet;
    bool m_mode_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISecondaryBootDisk)

#endif // OAISecondaryBootDisk_H
