/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINodePoolAutoConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINodePoolAutoConfig::OAINodePoolAutoConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINodePoolAutoConfig::OAINodePoolAutoConfig() {
    this->initializeModel();
}

OAINodePoolAutoConfig::~OAINodePoolAutoConfig() {}

void OAINodePoolAutoConfig::initializeModel() {

    m_network_tags_isSet = false;
    m_network_tags_isValid = false;

    m_resource_manager_tags_isSet = false;
    m_resource_manager_tags_isValid = false;
}

void OAINodePoolAutoConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINodePoolAutoConfig::fromJsonObject(QJsonObject json) {

    m_network_tags_isValid = ::OpenAPI::fromJsonValue(m_network_tags, json[QString("networkTags")]);
    m_network_tags_isSet = !json[QString("networkTags")].isNull() && m_network_tags_isValid;

    m_resource_manager_tags_isValid = ::OpenAPI::fromJsonValue(m_resource_manager_tags, json[QString("resourceManagerTags")]);
    m_resource_manager_tags_isSet = !json[QString("resourceManagerTags")].isNull() && m_resource_manager_tags_isValid;
}

QString OAINodePoolAutoConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINodePoolAutoConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_network_tags.isSet()) {
        obj.insert(QString("networkTags"), ::OpenAPI::toJsonValue(m_network_tags));
    }
    if (m_resource_manager_tags.isSet()) {
        obj.insert(QString("resourceManagerTags"), ::OpenAPI::toJsonValue(m_resource_manager_tags));
    }
    return obj;
}

OAINetworkTags OAINodePoolAutoConfig::getNetworkTags() const {
    return m_network_tags;
}
void OAINodePoolAutoConfig::setNetworkTags(const OAINetworkTags &network_tags) {
    m_network_tags = network_tags;
    m_network_tags_isSet = true;
}

bool OAINodePoolAutoConfig::is_network_tags_Set() const{
    return m_network_tags_isSet;
}

bool OAINodePoolAutoConfig::is_network_tags_Valid() const{
    return m_network_tags_isValid;
}

OAIResourceManagerTags OAINodePoolAutoConfig::getResourceManagerTags() const {
    return m_resource_manager_tags;
}
void OAINodePoolAutoConfig::setResourceManagerTags(const OAIResourceManagerTags &resource_manager_tags) {
    m_resource_manager_tags = resource_manager_tags;
    m_resource_manager_tags_isSet = true;
}

bool OAINodePoolAutoConfig::is_resource_manager_tags_Set() const{
    return m_resource_manager_tags_isSet;
}

bool OAINodePoolAutoConfig::is_resource_manager_tags_Valid() const{
    return m_resource_manager_tags_isValid;
}

bool OAINodePoolAutoConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_network_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_manager_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINodePoolAutoConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
