/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIstioConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIstioConfig::OAIIstioConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIstioConfig::OAIIstioConfig() {
    this->initializeModel();
}

OAIIstioConfig::~OAIIstioConfig() {}

void OAIIstioConfig::initializeModel() {

    m_auth_isSet = false;
    m_auth_isValid = false;

    m_disabled_isSet = false;
    m_disabled_isValid = false;
}

void OAIIstioConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIstioConfig::fromJsonObject(QJsonObject json) {

    m_auth_isValid = ::OpenAPI::fromJsonValue(m_auth, json[QString("auth")]);
    m_auth_isSet = !json[QString("auth")].isNull() && m_auth_isValid;

    m_disabled_isValid = ::OpenAPI::fromJsonValue(m_disabled, json[QString("disabled")]);
    m_disabled_isSet = !json[QString("disabled")].isNull() && m_disabled_isValid;
}

QString OAIIstioConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIstioConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_auth_isSet) {
        obj.insert(QString("auth"), ::OpenAPI::toJsonValue(m_auth));
    }
    if (m_disabled_isSet) {
        obj.insert(QString("disabled"), ::OpenAPI::toJsonValue(m_disabled));
    }
    return obj;
}

QString OAIIstioConfig::getAuth() const {
    return m_auth;
}
void OAIIstioConfig::setAuth(const QString &auth) {
    m_auth = auth;
    m_auth_isSet = true;
}

bool OAIIstioConfig::is_auth_Set() const{
    return m_auth_isSet;
}

bool OAIIstioConfig::is_auth_Valid() const{
    return m_auth_isValid;
}

bool OAIIstioConfig::isDisabled() const {
    return m_disabled;
}
void OAIIstioConfig::setDisabled(const bool &disabled) {
    m_disabled = disabled;
    m_disabled_isSet = true;
}

bool OAIIstioConfig::is_disabled_Set() const{
    return m_disabled_isSet;
}

bool OAIIstioConfig::is_disabled_Valid() const{
    return m_disabled_isValid;
}

bool OAIIstioConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_auth_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_disabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIstioConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
