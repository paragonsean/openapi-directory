/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAutopilotCompatibilityIssue.h
 *
 * AutopilotCompatibilityIssue contains information about a specific compatibility issue with Autopilot mode.
 */

#ifndef OAIAutopilotCompatibilityIssue_H
#define OAIAutopilotCompatibilityIssue_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAutopilotCompatibilityIssue : public OAIObject {
public:
    OAIAutopilotCompatibilityIssue();
    OAIAutopilotCompatibilityIssue(QString json);
    ~OAIAutopilotCompatibilityIssue() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConstraintType() const;
    void setConstraintType(const QString &constraint_type);
    bool is_constraint_type_Set() const;
    bool is_constraint_type_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDocumentationUrl() const;
    void setDocumentationUrl(const QString &documentation_url);
    bool is_documentation_url_Set() const;
    bool is_documentation_url_Valid() const;

    QString getIncompatibilityType() const;
    void setIncompatibilityType(const QString &incompatibility_type);
    bool is_incompatibility_type_Set() const;
    bool is_incompatibility_type_Valid() const;

    QString getLastObservation() const;
    void setLastObservation(const QString &last_observation);
    bool is_last_observation_Set() const;
    bool is_last_observation_Valid() const;

    QList<QString> getSubjects() const;
    void setSubjects(const QList<QString> &subjects);
    bool is_subjects_Set() const;
    bool is_subjects_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_constraint_type;
    bool m_constraint_type_isSet;
    bool m_constraint_type_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_documentation_url;
    bool m_documentation_url_isSet;
    bool m_documentation_url_isValid;

    QString m_incompatibility_type;
    bool m_incompatibility_type_isSet;
    bool m_incompatibility_type_isValid;

    QString m_last_observation;
    bool m_last_observation_isSet;
    bool m_last_observation_isValid;

    QList<QString> m_subjects;
    bool m_subjects_isSet;
    bool m_subjects_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAutopilotCompatibilityIssue)

#endif // OAIAutopilotCompatibilityIssue_H
