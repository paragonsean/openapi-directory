/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILinuxNodeConfig.h
 *
 * Parameters that can be configured on Linux nodes.
 */

#ifndef OAILinuxNodeConfig_H
#define OAILinuxNodeConfig_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILinuxNodeConfig : public OAIObject {
public:
    OAILinuxNodeConfig();
    OAILinuxNodeConfig(QString json);
    ~OAILinuxNodeConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCgroupMode() const;
    void setCgroupMode(const QString &cgroup_mode);
    bool is_cgroup_mode_Set() const;
    bool is_cgroup_mode_Valid() const;

    QMap<QString, QString> getSysctls() const;
    void setSysctls(const QMap<QString, QString> &sysctls);
    bool is_sysctls_Set() const;
    bool is_sysctls_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cgroup_mode;
    bool m_cgroup_mode_isSet;
    bool m_cgroup_mode_isValid;

    QMap<QString, QString> m_sysctls;
    bool m_sysctls_isSet;
    bool m_sysctls_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILinuxNodeConfig)

#endif // OAILinuxNodeConfig_H
