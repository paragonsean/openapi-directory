/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOpportunisticMaintenanceStrategy.h
 *
 * Strategy that will trigger maintenance on behalf of the customer.
 */

#ifndef OAIOpportunisticMaintenanceStrategy_H
#define OAIOpportunisticMaintenanceStrategy_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOpportunisticMaintenanceStrategy : public OAIObject {
public:
    OAIOpportunisticMaintenanceStrategy();
    OAIOpportunisticMaintenanceStrategy(QString json);
    ~OAIOpportunisticMaintenanceStrategy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMaintenanceAvailabilityWindow() const;
    void setMaintenanceAvailabilityWindow(const QString &maintenance_availability_window);
    bool is_maintenance_availability_window_Set() const;
    bool is_maintenance_availability_window_Valid() const;

    QString getMinNodesPerPool() const;
    void setMinNodesPerPool(const QString &min_nodes_per_pool);
    bool is_min_nodes_per_pool_Set() const;
    bool is_min_nodes_per_pool_Valid() const;

    QString getNodeIdleTimeWindow() const;
    void setNodeIdleTimeWindow(const QString &node_idle_time_window);
    bool is_node_idle_time_window_Set() const;
    bool is_node_idle_time_window_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_maintenance_availability_window;
    bool m_maintenance_availability_window_isSet;
    bool m_maintenance_availability_window_isValid;

    QString m_min_nodes_per_pool;
    bool m_min_nodes_per_pool_isSet;
    bool m_min_nodes_per_pool_isValid;

    QString m_node_idle_time_window;
    bool m_node_idle_time_window_isSet;
    bool m_node_idle_time_window_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOpportunisticMaintenanceStrategy)

#endif // OAIOpportunisticMaintenanceStrategy_H
