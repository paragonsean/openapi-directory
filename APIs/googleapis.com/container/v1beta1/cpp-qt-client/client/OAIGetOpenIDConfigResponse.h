/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetOpenIDConfigResponse.h
 *
 * GetOpenIDConfigResponse is an OIDC discovery document for the cluster. See the OpenID Connect Discovery 1.0 specification for details.
 */

#ifndef OAIGetOpenIDConfigResponse_H
#define OAIGetOpenIDConfigResponse_H

#include <QJsonObject>

#include "OAIHttpCacheControlResponseHeader.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHttpCacheControlResponseHeader;

class OAIGetOpenIDConfigResponse : public OAIObject {
public:
    OAIGetOpenIDConfigResponse();
    OAIGetOpenIDConfigResponse(QString json);
    ~OAIGetOpenIDConfigResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIHttpCacheControlResponseHeader getCacheHeader() const;
    void setCacheHeader(const OAIHttpCacheControlResponseHeader &cache_header);
    bool is_cache_header_Set() const;
    bool is_cache_header_Valid() const;

    QList<QString> getClaimsSupported() const;
    void setClaimsSupported(const QList<QString> &claims_supported);
    bool is_claims_supported_Set() const;
    bool is_claims_supported_Valid() const;

    QList<QString> getGrantTypes() const;
    void setGrantTypes(const QList<QString> &grant_types);
    bool is_grant_types_Set() const;
    bool is_grant_types_Valid() const;

    QList<QString> getIdTokenSigningAlgValuesSupported() const;
    void setIdTokenSigningAlgValuesSupported(const QList<QString> &id_token_signing_alg_values_supported);
    bool is_id_token_signing_alg_values_supported_Set() const;
    bool is_id_token_signing_alg_values_supported_Valid() const;

    QString getIssuer() const;
    void setIssuer(const QString &issuer);
    bool is_issuer_Set() const;
    bool is_issuer_Valid() const;

    QString getJwksUri() const;
    void setJwksUri(const QString &jwks_uri);
    bool is_jwks_uri_Set() const;
    bool is_jwks_uri_Valid() const;

    QList<QString> getResponseTypesSupported() const;
    void setResponseTypesSupported(const QList<QString> &response_types_supported);
    bool is_response_types_supported_Set() const;
    bool is_response_types_supported_Valid() const;

    QList<QString> getSubjectTypesSupported() const;
    void setSubjectTypesSupported(const QList<QString> &subject_types_supported);
    bool is_subject_types_supported_Set() const;
    bool is_subject_types_supported_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIHttpCacheControlResponseHeader m_cache_header;
    bool m_cache_header_isSet;
    bool m_cache_header_isValid;

    QList<QString> m_claims_supported;
    bool m_claims_supported_isSet;
    bool m_claims_supported_isValid;

    QList<QString> m_grant_types;
    bool m_grant_types_isSet;
    bool m_grant_types_isValid;

    QList<QString> m_id_token_signing_alg_values_supported;
    bool m_id_token_signing_alg_values_supported_isSet;
    bool m_id_token_signing_alg_values_supported_isValid;

    QString m_issuer;
    bool m_issuer_isSet;
    bool m_issuer_isValid;

    QString m_jwks_uri;
    bool m_jwks_uri_isSet;
    bool m_jwks_uri_isValid;

    QList<QString> m_response_types_supported;
    bool m_response_types_supported_isSet;
    bool m_response_types_supported_isValid;

    QList<QString> m_subject_types_supported;
    bool m_subject_types_supported_isSet;
    bool m_subject_types_supported_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetOpenIDConfigResponse)

#endif // OAIGetOpenIDConfigResponse_H
