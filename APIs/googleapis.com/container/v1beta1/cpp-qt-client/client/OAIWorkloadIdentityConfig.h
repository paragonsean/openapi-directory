/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWorkloadIdentityConfig.h
 *
 * Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.
 */

#ifndef OAIWorkloadIdentityConfig_H
#define OAIWorkloadIdentityConfig_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWorkloadIdentityConfig : public OAIObject {
public:
    OAIWorkloadIdentityConfig();
    OAIWorkloadIdentityConfig(QString json);
    ~OAIWorkloadIdentityConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    Q_DECL_DEPRECATED QString getIdentityNamespace() const;
    Q_DECL_DEPRECATED void setIdentityNamespace(const QString &identity_namespace);
    Q_DECL_DEPRECATED bool is_identity_namespace_Set() const;
    Q_DECL_DEPRECATED bool is_identity_namespace_Valid() const;

    QString getIdentityProvider() const;
    void setIdentityProvider(const QString &identity_provider);
    bool is_identity_provider_Set() const;
    bool is_identity_provider_Valid() const;

    QString getWorkloadPool() const;
    void setWorkloadPool(const QString &workload_pool);
    bool is_workload_pool_Set() const;
    bool is_workload_pool_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_identity_namespace;
    bool m_identity_namespace_isSet;
    bool m_identity_namespace_isValid;

    QString m_identity_provider;
    bool m_identity_provider_isSet;
    bool m_identity_provider_isValid;

    QString m_workload_pool;
    bool m_workload_pool_isSet;
    bool m_workload_pool_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWorkloadIdentityConfig)

#endif // OAIWorkloadIdentityConfig_H
