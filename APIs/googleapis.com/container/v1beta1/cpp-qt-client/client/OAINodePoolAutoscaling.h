/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINodePoolAutoscaling.h
 *
 * NodePoolAutoscaling contains information required by cluster autoscaler to adjust the size of the node pool to the current cluster usage.
 */

#ifndef OAINodePoolAutoscaling_H
#define OAINodePoolAutoscaling_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINodePoolAutoscaling : public OAIObject {
public:
    OAINodePoolAutoscaling();
    OAINodePoolAutoscaling(QString json);
    ~OAINodePoolAutoscaling() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAutoprovisioned() const;
    void setAutoprovisioned(const bool &autoprovisioned);
    bool is_autoprovisioned_Set() const;
    bool is_autoprovisioned_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QString getLocationPolicy() const;
    void setLocationPolicy(const QString &location_policy);
    bool is_location_policy_Set() const;
    bool is_location_policy_Valid() const;

    qint32 getMaxNodeCount() const;
    void setMaxNodeCount(const qint32 &max_node_count);
    bool is_max_node_count_Set() const;
    bool is_max_node_count_Valid() const;

    qint32 getMinNodeCount() const;
    void setMinNodeCount(const qint32 &min_node_count);
    bool is_min_node_count_Set() const;
    bool is_min_node_count_Valid() const;

    qint32 getTotalMaxNodeCount() const;
    void setTotalMaxNodeCount(const qint32 &total_max_node_count);
    bool is_total_max_node_count_Set() const;
    bool is_total_max_node_count_Valid() const;

    qint32 getTotalMinNodeCount() const;
    void setTotalMinNodeCount(const qint32 &total_min_node_count);
    bool is_total_min_node_count_Set() const;
    bool is_total_min_node_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_autoprovisioned;
    bool m_autoprovisioned_isSet;
    bool m_autoprovisioned_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QString m_location_policy;
    bool m_location_policy_isSet;
    bool m_location_policy_isValid;

    qint32 m_max_node_count;
    bool m_max_node_count_isSet;
    bool m_max_node_count_isValid;

    qint32 m_min_node_count;
    bool m_min_node_count_isSet;
    bool m_min_node_count_isValid;

    qint32 m_total_max_node_count;
    bool m_total_max_node_count_isSet;
    bool m_total_max_node_count_isValid;

    qint32 m_total_min_node_count;
    bool m_total_min_node_count_isSet;
    bool m_total_min_node_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINodePoolAutoscaling)

#endif // OAINodePoolAutoscaling_H
