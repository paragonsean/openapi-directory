/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISecurityBulletinEvent.h
 *
 * SecurityBulletinEvent is a notification sent to customers when a security bulletin has been posted that they are vulnerable to.
 */

#ifndef OAISecurityBulletinEvent_H
#define OAISecurityBulletinEvent_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISecurityBulletinEvent : public OAIObject {
public:
    OAISecurityBulletinEvent();
    OAISecurityBulletinEvent(QString json);
    ~OAISecurityBulletinEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAffectedSupportedMinors() const;
    void setAffectedSupportedMinors(const QList<QString> &affected_supported_minors);
    bool is_affected_supported_minors_Set() const;
    bool is_affected_supported_minors_Valid() const;

    QString getBriefDescription() const;
    void setBriefDescription(const QString &brief_description);
    bool is_brief_description_Set() const;
    bool is_brief_description_Valid() const;

    QString getBulletinId() const;
    void setBulletinId(const QString &bulletin_id);
    bool is_bulletin_id_Set() const;
    bool is_bulletin_id_Valid() const;

    QString getBulletinUri() const;
    void setBulletinUri(const QString &bulletin_uri);
    bool is_bulletin_uri_Set() const;
    bool is_bulletin_uri_Valid() const;

    QList<QString> getCveIds() const;
    void setCveIds(const QList<QString> &cve_ids);
    bool is_cve_ids_Set() const;
    bool is_cve_ids_Valid() const;

    bool isManualStepsRequired() const;
    void setManualStepsRequired(const bool &manual_steps_required);
    bool is_manual_steps_required_Set() const;
    bool is_manual_steps_required_Valid() const;

    QList<QString> getPatchedVersions() const;
    void setPatchedVersions(const QList<QString> &patched_versions);
    bool is_patched_versions_Set() const;
    bool is_patched_versions_Valid() const;

    QString getResourceTypeAffected() const;
    void setResourceTypeAffected(const QString &resource_type_affected);
    bool is_resource_type_affected_Set() const;
    bool is_resource_type_affected_Valid() const;

    QString getSeverity() const;
    void setSeverity(const QString &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    QString getSuggestedUpgradeTarget() const;
    void setSuggestedUpgradeTarget(const QString &suggested_upgrade_target);
    bool is_suggested_upgrade_target_Set() const;
    bool is_suggested_upgrade_target_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_affected_supported_minors;
    bool m_affected_supported_minors_isSet;
    bool m_affected_supported_minors_isValid;

    QString m_brief_description;
    bool m_brief_description_isSet;
    bool m_brief_description_isValid;

    QString m_bulletin_id;
    bool m_bulletin_id_isSet;
    bool m_bulletin_id_isValid;

    QString m_bulletin_uri;
    bool m_bulletin_uri_isSet;
    bool m_bulletin_uri_isValid;

    QList<QString> m_cve_ids;
    bool m_cve_ids_isSet;
    bool m_cve_ids_isValid;

    bool m_manual_steps_required;
    bool m_manual_steps_required_isSet;
    bool m_manual_steps_required_isValid;

    QList<QString> m_patched_versions;
    bool m_patched_versions_isSet;
    bool m_patched_versions_isValid;

    QString m_resource_type_affected;
    bool m_resource_type_affected_isSet;
    bool m_resource_type_affected_isValid;

    QString m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    QString m_suggested_upgrade_target;
    bool m_suggested_upgrade_target_isSet;
    bool m_suggested_upgrade_target_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISecurityBulletinEvent)

#endif // OAISecurityBulletinEvent_H
