/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICloudRunConfig.h
 *
 * Configuration options for the Cloud Run feature.
 */

#ifndef OAICloudRunConfig_H
#define OAICloudRunConfig_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICloudRunConfig : public OAIObject {
public:
    OAICloudRunConfig();
    OAICloudRunConfig(QString json);
    ~OAICloudRunConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDisabled() const;
    void setDisabled(const bool &disabled);
    bool is_disabled_Set() const;
    bool is_disabled_Valid() const;

    QString getLoadBalancerType() const;
    void setLoadBalancerType(const QString &load_balancer_type);
    bool is_load_balancer_type_Set() const;
    bool is_load_balancer_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_disabled;
    bool m_disabled_isSet;
    bool m_disabled_isValid;

    QString m_load_balancer_type;
    bool m_load_balancer_type_isSet;
    bool m_load_balancer_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICloudRunConfig)

#endif // OAICloudRunConfig_H
