/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICluster.h
 *
 * A Google Kubernetes Engine cluster.
 */

#ifndef OAICluster_H
#define OAICluster_H

#include <QJsonObject>

#include "OAIAddonsConfig.h"
#include "OAIAuthenticatorGroupsConfig.h"
#include "OAIAutopilot.h"
#include "OAIBinaryAuthorization.h"
#include "OAIClusterAutoscaling.h"
#include "OAIClusterTelemetry.h"
#include "OAIConfidentialNodes.h"
#include "OAICostManagementConfig.h"
#include "OAIDatabaseEncryption.h"
#include "OAIEnterpriseConfig.h"
#include "OAIFleet.h"
#include "OAIIPAllocationPolicy.h"
#include "OAIIdentityServiceConfig.h"
#include "OAIK8sBetaAPIConfig.h"
#include "OAILegacyAbac.h"
#include "OAILoggingConfig.h"
#include "OAIMaintenancePolicy.h"
#include "OAIMasterAuth.h"
#include "OAIMasterAuthorizedNetworksConfig.h"
#include "OAIMaxPodsConstraint.h"
#include "OAIMeshCertificates.h"
#include "OAIMonitoringConfig.h"
#include "OAINetworkConfig.h"
#include "OAINetworkPolicy.h"
#include "OAINodeConfig.h"
#include "OAINodePool.h"
#include "OAINodePoolAutoConfig.h"
#include "OAINodePoolDefaults.h"
#include "OAINotificationConfig.h"
#include "OAIObject.h"
#include "OAIParentProductConfig.h"
#include "OAIPodSecurityPolicyConfig.h"
#include "OAIPrivateClusterConfig.h"
#include "OAIProtectConfig.h"
#include "OAIReleaseChannel.h"
#include "OAIResourceUsageExportConfig.h"
#include "OAISecurityPostureConfig.h"
#include "OAIShieldedNodes.h"
#include "OAIStatusCondition.h"
#include "OAITpuConfig.h"
#include "OAIVerticalPodAutoscaling.h"
#include "OAIWorkloadALTSConfig.h"
#include "OAIWorkloadCertificates.h"
#include "OAIWorkloadIdentityConfig.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAddonsConfig;
class OAIAuthenticatorGroupsConfig;
class OAIAutopilot;
class OAIClusterAutoscaling;
class OAIBinaryAuthorization;
class OAIClusterTelemetry;
class OAIStatusCondition;
class OAIConfidentialNodes;
class OAICostManagementConfig;
class OAIDatabaseEncryption;
class OAIMaxPodsConstraint;
class OAIK8sBetaAPIConfig;
class OAIEnterpriseConfig;
class OAIFleet;
class OAIIdentityServiceConfig;
class OAIIPAllocationPolicy;
class OAILegacyAbac;
class OAILoggingConfig;
class OAIMaintenancePolicy;
class OAIMasterAuth;
class OAIMasterAuthorizedNetworksConfig;
class OAIMeshCertificates;
class OAIMonitoringConfig;
class OAINetworkConfig;
class OAINetworkPolicy;
class OAINodeConfig;
class OAINodePoolAutoConfig;
class OAINodePoolDefaults;
class OAINodePool;
class OAINotificationConfig;
class OAIParentProductConfig;
class OAIPodSecurityPolicyConfig;
class OAIPrivateClusterConfig;
class OAIProtectConfig;
class OAIReleaseChannel;
class OAIResourceUsageExportConfig;
class OAISecurityPostureConfig;
class OAIShieldedNodes;
class OAITpuConfig;
class OAIVerticalPodAutoscaling;
class OAIWorkloadALTSConfig;
class OAIWorkloadCertificates;
class OAIWorkloadIdentityConfig;

class OAICluster : public OAIObject {
public:
    OAICluster();
    OAICluster(QString json);
    ~OAICluster() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAddonsConfig getAddonsConfig() const;
    void setAddonsConfig(const OAIAddonsConfig &addons_config);
    bool is_addons_config_Set() const;
    bool is_addons_config_Valid() const;

    OAIAuthenticatorGroupsConfig getAuthenticatorGroupsConfig() const;
    void setAuthenticatorGroupsConfig(const OAIAuthenticatorGroupsConfig &authenticator_groups_config);
    bool is_authenticator_groups_config_Set() const;
    bool is_authenticator_groups_config_Valid() const;

    OAIAutopilot getAutopilot() const;
    void setAutopilot(const OAIAutopilot &autopilot);
    bool is_autopilot_Set() const;
    bool is_autopilot_Valid() const;

    OAIClusterAutoscaling getAutoscaling() const;
    void setAutoscaling(const OAIClusterAutoscaling &autoscaling);
    bool is_autoscaling_Set() const;
    bool is_autoscaling_Valid() const;

    OAIBinaryAuthorization getBinaryAuthorization() const;
    void setBinaryAuthorization(const OAIBinaryAuthorization &binary_authorization);
    bool is_binary_authorization_Set() const;
    bool is_binary_authorization_Valid() const;

    QString getClusterIpv4Cidr() const;
    void setClusterIpv4Cidr(const QString &cluster_ipv4_cidr);
    bool is_cluster_ipv4_cidr_Set() const;
    bool is_cluster_ipv4_cidr_Valid() const;

    OAIClusterTelemetry getClusterTelemetry() const;
    void setClusterTelemetry(const OAIClusterTelemetry &cluster_telemetry);
    bool is_cluster_telemetry_Set() const;
    bool is_cluster_telemetry_Valid() const;

    QList<OAIStatusCondition> getConditions() const;
    void setConditions(const QList<OAIStatusCondition> &conditions);
    bool is_conditions_Set() const;
    bool is_conditions_Valid() const;

    OAIConfidentialNodes getConfidentialNodes() const;
    void setConfidentialNodes(const OAIConfidentialNodes &confidential_nodes);
    bool is_confidential_nodes_Set() const;
    bool is_confidential_nodes_Valid() const;

    OAICostManagementConfig getCostManagementConfig() const;
    void setCostManagementConfig(const OAICostManagementConfig &cost_management_config);
    bool is_cost_management_config_Set() const;
    bool is_cost_management_config_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getCurrentMasterVersion() const;
    void setCurrentMasterVersion(const QString &current_master_version);
    bool is_current_master_version_Set() const;
    bool is_current_master_version_Valid() const;

    Q_DECL_DEPRECATED qint32 getCurrentNodeCount() const;
    Q_DECL_DEPRECATED void setCurrentNodeCount(const qint32 &current_node_count);
    Q_DECL_DEPRECATED bool is_current_node_count_Set() const;
    Q_DECL_DEPRECATED bool is_current_node_count_Valid() const;

    Q_DECL_DEPRECATED QString getCurrentNodeVersion() const;
    Q_DECL_DEPRECATED void setCurrentNodeVersion(const QString &current_node_version);
    Q_DECL_DEPRECATED bool is_current_node_version_Set() const;
    Q_DECL_DEPRECATED bool is_current_node_version_Valid() const;

    OAIDatabaseEncryption getDatabaseEncryption() const;
    void setDatabaseEncryption(const OAIDatabaseEncryption &database_encryption);
    bool is_database_encryption_Set() const;
    bool is_database_encryption_Valid() const;

    OAIMaxPodsConstraint getDefaultMaxPodsConstraint() const;
    void setDefaultMaxPodsConstraint(const OAIMaxPodsConstraint &default_max_pods_constraint);
    bool is_default_max_pods_constraint_Set() const;
    bool is_default_max_pods_constraint_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIK8sBetaAPIConfig getEnableK8sBetaApis() const;
    void setEnableK8sBetaApis(const OAIK8sBetaAPIConfig &enable_k8s_beta_apis);
    bool is_enable_k8s_beta_apis_Set() const;
    bool is_enable_k8s_beta_apis_Valid() const;

    bool isEnableKubernetesAlpha() const;
    void setEnableKubernetesAlpha(const bool &enable_kubernetes_alpha);
    bool is_enable_kubernetes_alpha_Set() const;
    bool is_enable_kubernetes_alpha_Valid() const;

    bool isEnableTpu() const;
    void setEnableTpu(const bool &enable_tpu);
    bool is_enable_tpu_Set() const;
    bool is_enable_tpu_Valid() const;

    QString getEndpoint() const;
    void setEndpoint(const QString &endpoint);
    bool is_endpoint_Set() const;
    bool is_endpoint_Valid() const;

    OAIEnterpriseConfig getEnterpriseConfig() const;
    void setEnterpriseConfig(const OAIEnterpriseConfig &enterprise_config);
    bool is_enterprise_config_Set() const;
    bool is_enterprise_config_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QString getExpireTime() const;
    void setExpireTime(const QString &expire_time);
    bool is_expire_time_Set() const;
    bool is_expire_time_Valid() const;

    OAIFleet getFleet() const;
    void setFleet(const OAIFleet &fleet);
    bool is_fleet_Set() const;
    bool is_fleet_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIIdentityServiceConfig getIdentityServiceConfig() const;
    void setIdentityServiceConfig(const OAIIdentityServiceConfig &identity_service_config);
    bool is_identity_service_config_Set() const;
    bool is_identity_service_config_Valid() const;

    QString getInitialClusterVersion() const;
    void setInitialClusterVersion(const QString &initial_cluster_version);
    bool is_initial_cluster_version_Set() const;
    bool is_initial_cluster_version_Valid() const;

    Q_DECL_DEPRECATED qint32 getInitialNodeCount() const;
    Q_DECL_DEPRECATED void setInitialNodeCount(const qint32 &initial_node_count);
    Q_DECL_DEPRECATED bool is_initial_node_count_Set() const;
    Q_DECL_DEPRECATED bool is_initial_node_count_Valid() const;

    Q_DECL_DEPRECATED QList<QString> getInstanceGroupUrls() const;
    Q_DECL_DEPRECATED void setInstanceGroupUrls(const QList<QString> &instance_group_urls);
    Q_DECL_DEPRECATED bool is_instance_group_urls_Set() const;
    Q_DECL_DEPRECATED bool is_instance_group_urls_Valid() const;

    OAIIPAllocationPolicy getIpAllocationPolicy() const;
    void setIpAllocationPolicy(const OAIIPAllocationPolicy &ip_allocation_policy);
    bool is_ip_allocation_policy_Set() const;
    bool is_ip_allocation_policy_Valid() const;

    QString getLabelFingerprint() const;
    void setLabelFingerprint(const QString &label_fingerprint);
    bool is_label_fingerprint_Set() const;
    bool is_label_fingerprint_Valid() const;

    OAILegacyAbac getLegacyAbac() const;
    void setLegacyAbac(const OAILegacyAbac &legacy_abac);
    bool is_legacy_abac_Set() const;
    bool is_legacy_abac_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QList<QString> getLocations() const;
    void setLocations(const QList<QString> &locations);
    bool is_locations_Set() const;
    bool is_locations_Valid() const;

    OAILoggingConfig getLoggingConfig() const;
    void setLoggingConfig(const OAILoggingConfig &logging_config);
    bool is_logging_config_Set() const;
    bool is_logging_config_Valid() const;

    QString getLoggingService() const;
    void setLoggingService(const QString &logging_service);
    bool is_logging_service_Set() const;
    bool is_logging_service_Valid() const;

    OAIMaintenancePolicy getMaintenancePolicy() const;
    void setMaintenancePolicy(const OAIMaintenancePolicy &maintenance_policy);
    bool is_maintenance_policy_Set() const;
    bool is_maintenance_policy_Valid() const;

    OAIObject getMaster() const;
    void setMaster(const OAIObject &master);
    bool is_master_Set() const;
    bool is_master_Valid() const;

    OAIMasterAuth getMasterAuth() const;
    void setMasterAuth(const OAIMasterAuth &master_auth);
    bool is_master_auth_Set() const;
    bool is_master_auth_Valid() const;

    OAIMasterAuthorizedNetworksConfig getMasterAuthorizedNetworksConfig() const;
    void setMasterAuthorizedNetworksConfig(const OAIMasterAuthorizedNetworksConfig &master_authorized_networks_config);
    bool is_master_authorized_networks_config_Set() const;
    bool is_master_authorized_networks_config_Valid() const;

    Q_DECL_DEPRECATED QString getMasterIpv4CidrBlock() const;
    Q_DECL_DEPRECATED void setMasterIpv4CidrBlock(const QString &master_ipv4_cidr_block);
    Q_DECL_DEPRECATED bool is_master_ipv4_cidr_block_Set() const;
    Q_DECL_DEPRECATED bool is_master_ipv4_cidr_block_Valid() const;

    OAIMeshCertificates getMeshCertificates() const;
    void setMeshCertificates(const OAIMeshCertificates &mesh_certificates);
    bool is_mesh_certificates_Set() const;
    bool is_mesh_certificates_Valid() const;

    OAIMonitoringConfig getMonitoringConfig() const;
    void setMonitoringConfig(const OAIMonitoringConfig &monitoring_config);
    bool is_monitoring_config_Set() const;
    bool is_monitoring_config_Valid() const;

    QString getMonitoringService() const;
    void setMonitoringService(const QString &monitoring_service);
    bool is_monitoring_service_Set() const;
    bool is_monitoring_service_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNetwork() const;
    void setNetwork(const QString &network);
    bool is_network_Set() const;
    bool is_network_Valid() const;

    OAINetworkConfig getNetworkConfig() const;
    void setNetworkConfig(const OAINetworkConfig &network_config);
    bool is_network_config_Set() const;
    bool is_network_config_Valid() const;

    OAINetworkPolicy getNetworkPolicy() const;
    void setNetworkPolicy(const OAINetworkPolicy &network_policy);
    bool is_network_policy_Set() const;
    bool is_network_policy_Valid() const;

    OAINodeConfig getNodeConfig() const;
    void setNodeConfig(const OAINodeConfig &node_config);
    bool is_node_config_Set() const;
    bool is_node_config_Valid() const;

    qint32 getNodeIpv4CidrSize() const;
    void setNodeIpv4CidrSize(const qint32 &node_ipv4_cidr_size);
    bool is_node_ipv4_cidr_size_Set() const;
    bool is_node_ipv4_cidr_size_Valid() const;

    OAINodePoolAutoConfig getNodePoolAutoConfig() const;
    void setNodePoolAutoConfig(const OAINodePoolAutoConfig &node_pool_auto_config);
    bool is_node_pool_auto_config_Set() const;
    bool is_node_pool_auto_config_Valid() const;

    OAINodePoolDefaults getNodePoolDefaults() const;
    void setNodePoolDefaults(const OAINodePoolDefaults &node_pool_defaults);
    bool is_node_pool_defaults_Set() const;
    bool is_node_pool_defaults_Valid() const;

    QList<OAINodePool> getNodePools() const;
    void setNodePools(const QList<OAINodePool> &node_pools);
    bool is_node_pools_Set() const;
    bool is_node_pools_Valid() const;

    OAINotificationConfig getNotificationConfig() const;
    void setNotificationConfig(const OAINotificationConfig &notification_config);
    bool is_notification_config_Set() const;
    bool is_notification_config_Valid() const;

    OAIParentProductConfig getParentProductConfig() const;
    void setParentProductConfig(const OAIParentProductConfig &parent_product_config);
    bool is_parent_product_config_Set() const;
    bool is_parent_product_config_Valid() const;

    OAIPodSecurityPolicyConfig getPodSecurityPolicyConfig() const;
    void setPodSecurityPolicyConfig(const OAIPodSecurityPolicyConfig &pod_security_policy_config);
    bool is_pod_security_policy_config_Set() const;
    bool is_pod_security_policy_config_Valid() const;

    Q_DECL_DEPRECATED bool isPrivateCluster() const;
    Q_DECL_DEPRECATED void setPrivateCluster(const bool &private_cluster);
    Q_DECL_DEPRECATED bool is_private_cluster_Set() const;
    Q_DECL_DEPRECATED bool is_private_cluster_Valid() const;

    OAIPrivateClusterConfig getPrivateClusterConfig() const;
    void setPrivateClusterConfig(const OAIPrivateClusterConfig &private_cluster_config);
    bool is_private_cluster_config_Set() const;
    bool is_private_cluster_config_Valid() const;

    OAIProtectConfig getProtectConfig() const;
    void setProtectConfig(const OAIProtectConfig &protect_config);
    bool is_protect_config_Set() const;
    bool is_protect_config_Valid() const;

    OAIReleaseChannel getReleaseChannel() const;
    void setReleaseChannel(const OAIReleaseChannel &release_channel);
    bool is_release_channel_Set() const;
    bool is_release_channel_Valid() const;

    QMap<QString, QString> getResourceLabels() const;
    void setResourceLabels(const QMap<QString, QString> &resource_labels);
    bool is_resource_labels_Set() const;
    bool is_resource_labels_Valid() const;

    OAIResourceUsageExportConfig getResourceUsageExportConfig() const;
    void setResourceUsageExportConfig(const OAIResourceUsageExportConfig &resource_usage_export_config);
    bool is_resource_usage_export_config_Set() const;
    bool is_resource_usage_export_config_Valid() const;

    OAISecurityPostureConfig getSecurityPostureConfig() const;
    void setSecurityPostureConfig(const OAISecurityPostureConfig &security_posture_config);
    bool is_security_posture_config_Set() const;
    bool is_security_posture_config_Valid() const;

    QString getSelfLink() const;
    void setSelfLink(const QString &self_link);
    bool is_self_link_Set() const;
    bool is_self_link_Valid() const;

    QString getServicesIpv4Cidr() const;
    void setServicesIpv4Cidr(const QString &services_ipv4_cidr);
    bool is_services_ipv4_cidr_Set() const;
    bool is_services_ipv4_cidr_Valid() const;

    OAIShieldedNodes getShieldedNodes() const;
    void setShieldedNodes(const OAIShieldedNodes &shielded_nodes);
    bool is_shielded_nodes_Set() const;
    bool is_shielded_nodes_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    Q_DECL_DEPRECATED QString getStatusMessage() const;
    Q_DECL_DEPRECATED void setStatusMessage(const QString &status_message);
    Q_DECL_DEPRECATED bool is_status_message_Set() const;
    Q_DECL_DEPRECATED bool is_status_message_Valid() const;

    QString getSubnetwork() const;
    void setSubnetwork(const QString &subnetwork);
    bool is_subnetwork_Set() const;
    bool is_subnetwork_Valid() const;

    OAITpuConfig getTpuConfig() const;
    void setTpuConfig(const OAITpuConfig &tpu_config);
    bool is_tpu_config_Set() const;
    bool is_tpu_config_Valid() const;

    QString getTpuIpv4CidrBlock() const;
    void setTpuIpv4CidrBlock(const QString &tpu_ipv4_cidr_block);
    bool is_tpu_ipv4_cidr_block_Set() const;
    bool is_tpu_ipv4_cidr_block_Valid() const;

    OAIVerticalPodAutoscaling getVerticalPodAutoscaling() const;
    void setVerticalPodAutoscaling(const OAIVerticalPodAutoscaling &vertical_pod_autoscaling);
    bool is_vertical_pod_autoscaling_Set() const;
    bool is_vertical_pod_autoscaling_Valid() const;

    OAIWorkloadALTSConfig getWorkloadAltsConfig() const;
    void setWorkloadAltsConfig(const OAIWorkloadALTSConfig &workload_alts_config);
    bool is_workload_alts_config_Set() const;
    bool is_workload_alts_config_Valid() const;

    OAIWorkloadCertificates getWorkloadCertificates() const;
    void setWorkloadCertificates(const OAIWorkloadCertificates &workload_certificates);
    bool is_workload_certificates_Set() const;
    bool is_workload_certificates_Valid() const;

    OAIWorkloadIdentityConfig getWorkloadIdentityConfig() const;
    void setWorkloadIdentityConfig(const OAIWorkloadIdentityConfig &workload_identity_config);
    bool is_workload_identity_config_Set() const;
    bool is_workload_identity_config_Valid() const;

    Q_DECL_DEPRECATED QString getZone() const;
    Q_DECL_DEPRECATED void setZone(const QString &zone);
    Q_DECL_DEPRECATED bool is_zone_Set() const;
    Q_DECL_DEPRECATED bool is_zone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAddonsConfig m_addons_config;
    bool m_addons_config_isSet;
    bool m_addons_config_isValid;

    OAIAuthenticatorGroupsConfig m_authenticator_groups_config;
    bool m_authenticator_groups_config_isSet;
    bool m_authenticator_groups_config_isValid;

    OAIAutopilot m_autopilot;
    bool m_autopilot_isSet;
    bool m_autopilot_isValid;

    OAIClusterAutoscaling m_autoscaling;
    bool m_autoscaling_isSet;
    bool m_autoscaling_isValid;

    OAIBinaryAuthorization m_binary_authorization;
    bool m_binary_authorization_isSet;
    bool m_binary_authorization_isValid;

    QString m_cluster_ipv4_cidr;
    bool m_cluster_ipv4_cidr_isSet;
    bool m_cluster_ipv4_cidr_isValid;

    OAIClusterTelemetry m_cluster_telemetry;
    bool m_cluster_telemetry_isSet;
    bool m_cluster_telemetry_isValid;

    QList<OAIStatusCondition> m_conditions;
    bool m_conditions_isSet;
    bool m_conditions_isValid;

    OAIConfidentialNodes m_confidential_nodes;
    bool m_confidential_nodes_isSet;
    bool m_confidential_nodes_isValid;

    OAICostManagementConfig m_cost_management_config;
    bool m_cost_management_config_isSet;
    bool m_cost_management_config_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_current_master_version;
    bool m_current_master_version_isSet;
    bool m_current_master_version_isValid;

    qint32 m_current_node_count;
    bool m_current_node_count_isSet;
    bool m_current_node_count_isValid;

    QString m_current_node_version;
    bool m_current_node_version_isSet;
    bool m_current_node_version_isValid;

    OAIDatabaseEncryption m_database_encryption;
    bool m_database_encryption_isSet;
    bool m_database_encryption_isValid;

    OAIMaxPodsConstraint m_default_max_pods_constraint;
    bool m_default_max_pods_constraint_isSet;
    bool m_default_max_pods_constraint_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIK8sBetaAPIConfig m_enable_k8s_beta_apis;
    bool m_enable_k8s_beta_apis_isSet;
    bool m_enable_k8s_beta_apis_isValid;

    bool m_enable_kubernetes_alpha;
    bool m_enable_kubernetes_alpha_isSet;
    bool m_enable_kubernetes_alpha_isValid;

    bool m_enable_tpu;
    bool m_enable_tpu_isSet;
    bool m_enable_tpu_isValid;

    QString m_endpoint;
    bool m_endpoint_isSet;
    bool m_endpoint_isValid;

    OAIEnterpriseConfig m_enterprise_config;
    bool m_enterprise_config_isSet;
    bool m_enterprise_config_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QString m_expire_time;
    bool m_expire_time_isSet;
    bool m_expire_time_isValid;

    OAIFleet m_fleet;
    bool m_fleet_isSet;
    bool m_fleet_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIIdentityServiceConfig m_identity_service_config;
    bool m_identity_service_config_isSet;
    bool m_identity_service_config_isValid;

    QString m_initial_cluster_version;
    bool m_initial_cluster_version_isSet;
    bool m_initial_cluster_version_isValid;

    qint32 m_initial_node_count;
    bool m_initial_node_count_isSet;
    bool m_initial_node_count_isValid;

    QList<QString> m_instance_group_urls;
    bool m_instance_group_urls_isSet;
    bool m_instance_group_urls_isValid;

    OAIIPAllocationPolicy m_ip_allocation_policy;
    bool m_ip_allocation_policy_isSet;
    bool m_ip_allocation_policy_isValid;

    QString m_label_fingerprint;
    bool m_label_fingerprint_isSet;
    bool m_label_fingerprint_isValid;

    OAILegacyAbac m_legacy_abac;
    bool m_legacy_abac_isSet;
    bool m_legacy_abac_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QList<QString> m_locations;
    bool m_locations_isSet;
    bool m_locations_isValid;

    OAILoggingConfig m_logging_config;
    bool m_logging_config_isSet;
    bool m_logging_config_isValid;

    QString m_logging_service;
    bool m_logging_service_isSet;
    bool m_logging_service_isValid;

    OAIMaintenancePolicy m_maintenance_policy;
    bool m_maintenance_policy_isSet;
    bool m_maintenance_policy_isValid;

    OAIObject m_master;
    bool m_master_isSet;
    bool m_master_isValid;

    OAIMasterAuth m_master_auth;
    bool m_master_auth_isSet;
    bool m_master_auth_isValid;

    OAIMasterAuthorizedNetworksConfig m_master_authorized_networks_config;
    bool m_master_authorized_networks_config_isSet;
    bool m_master_authorized_networks_config_isValid;

    QString m_master_ipv4_cidr_block;
    bool m_master_ipv4_cidr_block_isSet;
    bool m_master_ipv4_cidr_block_isValid;

    OAIMeshCertificates m_mesh_certificates;
    bool m_mesh_certificates_isSet;
    bool m_mesh_certificates_isValid;

    OAIMonitoringConfig m_monitoring_config;
    bool m_monitoring_config_isSet;
    bool m_monitoring_config_isValid;

    QString m_monitoring_service;
    bool m_monitoring_service_isSet;
    bool m_monitoring_service_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_network;
    bool m_network_isSet;
    bool m_network_isValid;

    OAINetworkConfig m_network_config;
    bool m_network_config_isSet;
    bool m_network_config_isValid;

    OAINetworkPolicy m_network_policy;
    bool m_network_policy_isSet;
    bool m_network_policy_isValid;

    OAINodeConfig m_node_config;
    bool m_node_config_isSet;
    bool m_node_config_isValid;

    qint32 m_node_ipv4_cidr_size;
    bool m_node_ipv4_cidr_size_isSet;
    bool m_node_ipv4_cidr_size_isValid;

    OAINodePoolAutoConfig m_node_pool_auto_config;
    bool m_node_pool_auto_config_isSet;
    bool m_node_pool_auto_config_isValid;

    OAINodePoolDefaults m_node_pool_defaults;
    bool m_node_pool_defaults_isSet;
    bool m_node_pool_defaults_isValid;

    QList<OAINodePool> m_node_pools;
    bool m_node_pools_isSet;
    bool m_node_pools_isValid;

    OAINotificationConfig m_notification_config;
    bool m_notification_config_isSet;
    bool m_notification_config_isValid;

    OAIParentProductConfig m_parent_product_config;
    bool m_parent_product_config_isSet;
    bool m_parent_product_config_isValid;

    OAIPodSecurityPolicyConfig m_pod_security_policy_config;
    bool m_pod_security_policy_config_isSet;
    bool m_pod_security_policy_config_isValid;

    bool m_private_cluster;
    bool m_private_cluster_isSet;
    bool m_private_cluster_isValid;

    OAIPrivateClusterConfig m_private_cluster_config;
    bool m_private_cluster_config_isSet;
    bool m_private_cluster_config_isValid;

    OAIProtectConfig m_protect_config;
    bool m_protect_config_isSet;
    bool m_protect_config_isValid;

    OAIReleaseChannel m_release_channel;
    bool m_release_channel_isSet;
    bool m_release_channel_isValid;

    QMap<QString, QString> m_resource_labels;
    bool m_resource_labels_isSet;
    bool m_resource_labels_isValid;

    OAIResourceUsageExportConfig m_resource_usage_export_config;
    bool m_resource_usage_export_config_isSet;
    bool m_resource_usage_export_config_isValid;

    OAISecurityPostureConfig m_security_posture_config;
    bool m_security_posture_config_isSet;
    bool m_security_posture_config_isValid;

    QString m_self_link;
    bool m_self_link_isSet;
    bool m_self_link_isValid;

    QString m_services_ipv4_cidr;
    bool m_services_ipv4_cidr_isSet;
    bool m_services_ipv4_cidr_isValid;

    OAIShieldedNodes m_shielded_nodes;
    bool m_shielded_nodes_isSet;
    bool m_shielded_nodes_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_message;
    bool m_status_message_isSet;
    bool m_status_message_isValid;

    QString m_subnetwork;
    bool m_subnetwork_isSet;
    bool m_subnetwork_isValid;

    OAITpuConfig m_tpu_config;
    bool m_tpu_config_isSet;
    bool m_tpu_config_isValid;

    QString m_tpu_ipv4_cidr_block;
    bool m_tpu_ipv4_cidr_block_isSet;
    bool m_tpu_ipv4_cidr_block_isValid;

    OAIVerticalPodAutoscaling m_vertical_pod_autoscaling;
    bool m_vertical_pod_autoscaling_isSet;
    bool m_vertical_pod_autoscaling_isValid;

    OAIWorkloadALTSConfig m_workload_alts_config;
    bool m_workload_alts_config_isSet;
    bool m_workload_alts_config_isValid;

    OAIWorkloadCertificates m_workload_certificates;
    bool m_workload_certificates_isSet;
    bool m_workload_certificates_isValid;

    OAIWorkloadIdentityConfig m_workload_identity_config;
    bool m_workload_identity_config_isSet;
    bool m_workload_identity_config_isValid;

    QString m_zone;
    bool m_zone_isSet;
    bool m_zone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICluster)

#endif // OAICluster_H
