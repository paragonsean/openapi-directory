/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINodePoolLoggingConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINodePoolLoggingConfig::OAINodePoolLoggingConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINodePoolLoggingConfig::OAINodePoolLoggingConfig() {
    this->initializeModel();
}

OAINodePoolLoggingConfig::~OAINodePoolLoggingConfig() {}

void OAINodePoolLoggingConfig::initializeModel() {

    m_variant_config_isSet = false;
    m_variant_config_isValid = false;
}

void OAINodePoolLoggingConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINodePoolLoggingConfig::fromJsonObject(QJsonObject json) {

    m_variant_config_isValid = ::OpenAPI::fromJsonValue(m_variant_config, json[QString("variantConfig")]);
    m_variant_config_isSet = !json[QString("variantConfig")].isNull() && m_variant_config_isValid;
}

QString OAINodePoolLoggingConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINodePoolLoggingConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_variant_config.isSet()) {
        obj.insert(QString("variantConfig"), ::OpenAPI::toJsonValue(m_variant_config));
    }
    return obj;
}

OAILoggingVariantConfig OAINodePoolLoggingConfig::getVariantConfig() const {
    return m_variant_config;
}
void OAINodePoolLoggingConfig::setVariantConfig(const OAILoggingVariantConfig &variant_config) {
    m_variant_config = variant_config;
    m_variant_config_isSet = true;
}

bool OAINodePoolLoggingConfig::is_variant_config_Set() const{
    return m_variant_config_isSet;
}

bool OAINodePoolLoggingConfig::is_variant_config_Valid() const{
    return m_variant_config_isValid;
}

bool OAINodePoolLoggingConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_variant_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINodePoolLoggingConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
