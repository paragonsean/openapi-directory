/**
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateNodePoolRequest.h
 *
 * SetNodePoolVersionRequest updates the version of a node pool.
 */

#ifndef OAIUpdateNodePoolRequest_H
#define OAIUpdateNodePoolRequest_H

#include <QJsonObject>

#include "OAIConfidentialNodes.h"
#include "OAIFastSocket.h"
#include "OAIGcfsConfig.h"
#include "OAILinuxNodeConfig.h"
#include "OAINetworkTags.h"
#include "OAINodeKubeletConfig.h"
#include "OAINodeLabels.h"
#include "OAINodeNetworkConfig.h"
#include "OAINodePoolLoggingConfig.h"
#include "OAINodeTaints.h"
#include "OAIQueuedProvisioning.h"
#include "OAIResourceLabels.h"
#include "OAIResourceManagerTags.h"
#include "OAIUpgradeSettings.h"
#include "OAIVirtualNIC.h"
#include "OAIWindowsNodeConfig.h"
#include "OAIWorkloadMetadataConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConfidentialNodes;
class OAIFastSocket;
class OAIGcfsConfig;
class OAIVirtualNIC;
class OAINodeKubeletConfig;
class OAINodeLabels;
class OAILinuxNodeConfig;
class OAINodePoolLoggingConfig;
class OAINodeNetworkConfig;
class OAIQueuedProvisioning;
class OAIResourceLabels;
class OAIResourceManagerTags;
class OAINetworkTags;
class OAINodeTaints;
class OAIUpgradeSettings;
class OAIWindowsNodeConfig;
class OAIWorkloadMetadataConfig;

class OAIUpdateNodePoolRequest : public OAIObject {
public:
    OAIUpdateNodePoolRequest();
    OAIUpdateNodePoolRequest(QString json);
    ~OAIUpdateNodePoolRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    Q_DECL_DEPRECATED QString getClusterId() const;
    Q_DECL_DEPRECATED void setClusterId(const QString &cluster_id);
    Q_DECL_DEPRECATED bool is_cluster_id_Set() const;
    Q_DECL_DEPRECATED bool is_cluster_id_Valid() const;

    OAIConfidentialNodes getConfidentialNodes() const;
    void setConfidentialNodes(const OAIConfidentialNodes &confidential_nodes);
    bool is_confidential_nodes_Set() const;
    bool is_confidential_nodes_Valid() const;

    QString getDiskSizeGb() const;
    void setDiskSizeGb(const QString &disk_size_gb);
    bool is_disk_size_gb_Set() const;
    bool is_disk_size_gb_Valid() const;

    QString getDiskType() const;
    void setDiskType(const QString &disk_type);
    bool is_disk_type_Set() const;
    bool is_disk_type_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    OAIFastSocket getFastSocket() const;
    void setFastSocket(const OAIFastSocket &fast_socket);
    bool is_fast_socket_Set() const;
    bool is_fast_socket_Valid() const;

    OAIGcfsConfig getGcfsConfig() const;
    void setGcfsConfig(const OAIGcfsConfig &gcfs_config);
    bool is_gcfs_config_Set() const;
    bool is_gcfs_config_Valid() const;

    OAIVirtualNIC getGvnic() const;
    void setGvnic(const OAIVirtualNIC &gvnic);
    bool is_gvnic_Set() const;
    bool is_gvnic_Valid() const;

    QString getImageType() const;
    void setImageType(const QString &image_type);
    bool is_image_type_Set() const;
    bool is_image_type_Valid() const;

    OAINodeKubeletConfig getKubeletConfig() const;
    void setKubeletConfig(const OAINodeKubeletConfig &kubelet_config);
    bool is_kubelet_config_Set() const;
    bool is_kubelet_config_Valid() const;

    OAINodeLabels getLabels() const;
    void setLabels(const OAINodeLabels &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    OAILinuxNodeConfig getLinuxNodeConfig() const;
    void setLinuxNodeConfig(const OAILinuxNodeConfig &linux_node_config);
    bool is_linux_node_config_Set() const;
    bool is_linux_node_config_Valid() const;

    QList<QString> getLocations() const;
    void setLocations(const QList<QString> &locations);
    bool is_locations_Set() const;
    bool is_locations_Valid() const;

    OAINodePoolLoggingConfig getLoggingConfig() const;
    void setLoggingConfig(const OAINodePoolLoggingConfig &logging_config);
    bool is_logging_config_Set() const;
    bool is_logging_config_Valid() const;

    QString getMachineType() const;
    void setMachineType(const QString &machine_type);
    bool is_machine_type_Set() const;
    bool is_machine_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAINodeNetworkConfig getNodeNetworkConfig() const;
    void setNodeNetworkConfig(const OAINodeNetworkConfig &node_network_config);
    bool is_node_network_config_Set() const;
    bool is_node_network_config_Valid() const;

    Q_DECL_DEPRECATED QString getNodePoolId() const;
    Q_DECL_DEPRECATED void setNodePoolId(const QString &node_pool_id);
    Q_DECL_DEPRECATED bool is_node_pool_id_Set() const;
    Q_DECL_DEPRECATED bool is_node_pool_id_Valid() const;

    QString getNodeVersion() const;
    void setNodeVersion(const QString &node_version);
    bool is_node_version_Set() const;
    bool is_node_version_Valid() const;

    Q_DECL_DEPRECATED QString getProjectId() const;
    Q_DECL_DEPRECATED void setProjectId(const QString &project_id);
    Q_DECL_DEPRECATED bool is_project_id_Set() const;
    Q_DECL_DEPRECATED bool is_project_id_Valid() const;

    OAIQueuedProvisioning getQueuedProvisioning() const;
    void setQueuedProvisioning(const OAIQueuedProvisioning &queued_provisioning);
    bool is_queued_provisioning_Set() const;
    bool is_queued_provisioning_Valid() const;

    OAIResourceLabels getResourceLabels() const;
    void setResourceLabels(const OAIResourceLabels &resource_labels);
    bool is_resource_labels_Set() const;
    bool is_resource_labels_Valid() const;

    OAIResourceManagerTags getResourceManagerTags() const;
    void setResourceManagerTags(const OAIResourceManagerTags &resource_manager_tags);
    bool is_resource_manager_tags_Set() const;
    bool is_resource_manager_tags_Valid() const;

    OAINetworkTags getTags() const;
    void setTags(const OAINetworkTags &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAINodeTaints getTaints() const;
    void setTaints(const OAINodeTaints &taints);
    bool is_taints_Set() const;
    bool is_taints_Valid() const;

    OAIUpgradeSettings getUpgradeSettings() const;
    void setUpgradeSettings(const OAIUpgradeSettings &upgrade_settings);
    bool is_upgrade_settings_Set() const;
    bool is_upgrade_settings_Valid() const;

    OAIWindowsNodeConfig getWindowsNodeConfig() const;
    void setWindowsNodeConfig(const OAIWindowsNodeConfig &windows_node_config);
    bool is_windows_node_config_Set() const;
    bool is_windows_node_config_Valid() const;

    OAIWorkloadMetadataConfig getWorkloadMetadataConfig() const;
    void setWorkloadMetadataConfig(const OAIWorkloadMetadataConfig &workload_metadata_config);
    bool is_workload_metadata_config_Set() const;
    bool is_workload_metadata_config_Valid() const;

    Q_DECL_DEPRECATED QString getZone() const;
    Q_DECL_DEPRECATED void setZone(const QString &zone);
    Q_DECL_DEPRECATED bool is_zone_Set() const;
    Q_DECL_DEPRECATED bool is_zone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cluster_id;
    bool m_cluster_id_isSet;
    bool m_cluster_id_isValid;

    OAIConfidentialNodes m_confidential_nodes;
    bool m_confidential_nodes_isSet;
    bool m_confidential_nodes_isValid;

    QString m_disk_size_gb;
    bool m_disk_size_gb_isSet;
    bool m_disk_size_gb_isValid;

    QString m_disk_type;
    bool m_disk_type_isSet;
    bool m_disk_type_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    OAIFastSocket m_fast_socket;
    bool m_fast_socket_isSet;
    bool m_fast_socket_isValid;

    OAIGcfsConfig m_gcfs_config;
    bool m_gcfs_config_isSet;
    bool m_gcfs_config_isValid;

    OAIVirtualNIC m_gvnic;
    bool m_gvnic_isSet;
    bool m_gvnic_isValid;

    QString m_image_type;
    bool m_image_type_isSet;
    bool m_image_type_isValid;

    OAINodeKubeletConfig m_kubelet_config;
    bool m_kubelet_config_isSet;
    bool m_kubelet_config_isValid;

    OAINodeLabels m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    OAILinuxNodeConfig m_linux_node_config;
    bool m_linux_node_config_isSet;
    bool m_linux_node_config_isValid;

    QList<QString> m_locations;
    bool m_locations_isSet;
    bool m_locations_isValid;

    OAINodePoolLoggingConfig m_logging_config;
    bool m_logging_config_isSet;
    bool m_logging_config_isValid;

    QString m_machine_type;
    bool m_machine_type_isSet;
    bool m_machine_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAINodeNetworkConfig m_node_network_config;
    bool m_node_network_config_isSet;
    bool m_node_network_config_isValid;

    QString m_node_pool_id;
    bool m_node_pool_id_isSet;
    bool m_node_pool_id_isValid;

    QString m_node_version;
    bool m_node_version_isSet;
    bool m_node_version_isValid;

    QString m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    OAIQueuedProvisioning m_queued_provisioning;
    bool m_queued_provisioning_isSet;
    bool m_queued_provisioning_isValid;

    OAIResourceLabels m_resource_labels;
    bool m_resource_labels_isSet;
    bool m_resource_labels_isValid;

    OAIResourceManagerTags m_resource_manager_tags;
    bool m_resource_manager_tags_isSet;
    bool m_resource_manager_tags_isValid;

    OAINetworkTags m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAINodeTaints m_taints;
    bool m_taints_isSet;
    bool m_taints_isValid;

    OAIUpgradeSettings m_upgrade_settings;
    bool m_upgrade_settings_isSet;
    bool m_upgrade_settings_isValid;

    OAIWindowsNodeConfig m_windows_node_config;
    bool m_windows_node_config_isSet;
    bool m_windows_node_config_isValid;

    OAIWorkloadMetadataConfig m_workload_metadata_config;
    bool m_workload_metadata_config_isSet;
    bool m_workload_metadata_config_isValid;

    QString m_zone;
    bool m_zone_isSet;
    bool m_zone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateNodePoolRequest)

#endif // OAIUpdateNodePoolRequest_H
