/*
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.ReleaseChannelConfig;
import org.openapitools.client.model.WindowsVersions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ServerConfig
 */
public class ServerConfigTest {
    private final ServerConfig model = new ServerConfig();

    /**
     * Model tests for ServerConfig
     */
    @Test
    public void testServerConfig() {
        // TODO: test ServerConfig
    }

    /**
     * Test the property 'channels'
     */
    @Test
    public void channelsTest() {
        // TODO: test channels
    }

    /**
     * Test the property 'defaultClusterVersion'
     */
    @Test
    public void defaultClusterVersionTest() {
        // TODO: test defaultClusterVersion
    }

    /**
     * Test the property 'defaultImageType'
     */
    @Test
    public void defaultImageTypeTest() {
        // TODO: test defaultImageType
    }

    /**
     * Test the property 'validImageTypes'
     */
    @Test
    public void validImageTypesTest() {
        // TODO: test validImageTypes
    }

    /**
     * Test the property 'validMasterVersions'
     */
    @Test
    public void validMasterVersionsTest() {
        // TODO: test validMasterVersions
    }

    /**
     * Test the property 'validNodeVersions'
     */
    @Test
    public void validNodeVersionsTest() {
        // TODO: test validNodeVersions
    }

    /**
     * Test the property 'windowsVersionMaps'
     */
    @Test
    public void windowsVersionMapsTest() {
        // TODO: test windowsVersionMaps
    }

}
