/*
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AdditionalPodRangesConfig;
import org.openapitools.client.model.PodCIDROverprovisionConfig;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for IPAllocationPolicy
 */
public class IPAllocationPolicyTest {
    private final IPAllocationPolicy model = new IPAllocationPolicy();

    /**
     * Model tests for IPAllocationPolicy
     */
    @Test
    public void testIPAllocationPolicy() {
        // TODO: test IPAllocationPolicy
    }

    /**
     * Test the property 'additionalPodRangesConfig'
     */
    @Test
    public void additionalPodRangesConfigTest() {
        // TODO: test additionalPodRangesConfig
    }

    /**
     * Test the property 'allowRouteOverlap'
     */
    @Test
    public void allowRouteOverlapTest() {
        // TODO: test allowRouteOverlap
    }

    /**
     * Test the property 'clusterIpv4Cidr'
     */
    @Test
    public void clusterIpv4CidrTest() {
        // TODO: test clusterIpv4Cidr
    }

    /**
     * Test the property 'clusterIpv4CidrBlock'
     */
    @Test
    public void clusterIpv4CidrBlockTest() {
        // TODO: test clusterIpv4CidrBlock
    }

    /**
     * Test the property 'clusterSecondaryRangeName'
     */
    @Test
    public void clusterSecondaryRangeNameTest() {
        // TODO: test clusterSecondaryRangeName
    }

    /**
     * Test the property 'createSubnetwork'
     */
    @Test
    public void createSubnetworkTest() {
        // TODO: test createSubnetwork
    }

    /**
     * Test the property 'defaultPodIpv4RangeUtilization'
     */
    @Test
    public void defaultPodIpv4RangeUtilizationTest() {
        // TODO: test defaultPodIpv4RangeUtilization
    }

    /**
     * Test the property 'ipv6AccessType'
     */
    @Test
    public void ipv6AccessTypeTest() {
        // TODO: test ipv6AccessType
    }

    /**
     * Test the property 'nodeIpv4Cidr'
     */
    @Test
    public void nodeIpv4CidrTest() {
        // TODO: test nodeIpv4Cidr
    }

    /**
     * Test the property 'nodeIpv4CidrBlock'
     */
    @Test
    public void nodeIpv4CidrBlockTest() {
        // TODO: test nodeIpv4CidrBlock
    }

    /**
     * Test the property 'podCidrOverprovisionConfig'
     */
    @Test
    public void podCidrOverprovisionConfigTest() {
        // TODO: test podCidrOverprovisionConfig
    }

    /**
     * Test the property 'servicesIpv4Cidr'
     */
    @Test
    public void servicesIpv4CidrTest() {
        // TODO: test servicesIpv4Cidr
    }

    /**
     * Test the property 'servicesIpv4CidrBlock'
     */
    @Test
    public void servicesIpv4CidrBlockTest() {
        // TODO: test servicesIpv4CidrBlock
    }

    /**
     * Test the property 'servicesIpv6CidrBlock'
     */
    @Test
    public void servicesIpv6CidrBlockTest() {
        // TODO: test servicesIpv6CidrBlock
    }

    /**
     * Test the property 'servicesSecondaryRangeName'
     */
    @Test
    public void servicesSecondaryRangeNameTest() {
        // TODO: test servicesSecondaryRangeName
    }

    /**
     * Test the property 'stackType'
     */
    @Test
    public void stackTypeTest() {
        // TODO: test stackType
    }

    /**
     * Test the property 'subnetIpv6CidrBlock'
     */
    @Test
    public void subnetIpv6CidrBlockTest() {
        // TODO: test subnetIpv6CidrBlock
    }

    /**
     * Test the property 'subnetworkName'
     */
    @Test
    public void subnetworkNameTest() {
        // TODO: test subnetworkName
    }

    /**
     * Test the property 'tpuIpv4CidrBlock'
     */
    @Test
    public void tpuIpv4CidrBlockTest() {
        // TODO: test tpuIpv4CidrBlock
    }

    /**
     * Test the property 'useIpAliases'
     */
    @Test
    public void useIpAliasesTest() {
        // TODO: test useIpAliases
    }

    /**
     * Test the property 'useRoutes'
     */
    @Test
    public void useRoutesTest() {
        // TODO: test useRoutes
    }

}
