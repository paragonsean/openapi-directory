/*
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AdditionalPodRangesConfig;
import org.openapitools.client.model.AddonsConfig;
import org.openapitools.client.model.AuthenticatorGroupsConfig;
import org.openapitools.client.model.BinaryAuthorization;
import org.openapitools.client.model.ClusterAutoscaling;
import org.openapitools.client.model.ClusterNetworkPerformanceConfig;
import org.openapitools.client.model.ClusterTelemetry;
import org.openapitools.client.model.CostManagementConfig;
import org.openapitools.client.model.DNSConfig;
import org.openapitools.client.model.DatabaseEncryption;
import org.openapitools.client.model.DefaultSnatStatus;
import org.openapitools.client.model.Fleet;
import org.openapitools.client.model.GatewayAPIConfig;
import org.openapitools.client.model.GcfsConfig;
import org.openapitools.client.model.HostMaintenancePolicy;
import org.openapitools.client.model.ILBSubsettingConfig;
import org.openapitools.client.model.IdentityServiceConfig;
import org.openapitools.client.model.IntraNodeVisibilityConfig;
import org.openapitools.client.model.K8sBetaAPIConfig;
import org.openapitools.client.model.LoggingConfig;
import org.openapitools.client.model.MasterAuthorizedNetworksConfig;
import org.openapitools.client.model.MeshCertificates;
import org.openapitools.client.model.MonitoringConfig;
import org.openapitools.client.model.NetworkTags;
import org.openapitools.client.model.NodePoolAutoscaling;
import org.openapitools.client.model.NodePoolLoggingConfig;
import org.openapitools.client.model.NotificationConfig;
import org.openapitools.client.model.ParentProductConfig;
import org.openapitools.client.model.PodSecurityPolicyConfig;
import org.openapitools.client.model.PrivateClusterConfig;
import org.openapitools.client.model.ProtectConfig;
import org.openapitools.client.model.ReleaseChannel;
import org.openapitools.client.model.ResourceManagerTags;
import org.openapitools.client.model.ResourceUsageExportConfig;
import org.openapitools.client.model.SecurityPostureConfig;
import org.openapitools.client.model.ServiceExternalIPsConfig;
import org.openapitools.client.model.ShieldedNodes;
import org.openapitools.client.model.TpuConfig;
import org.openapitools.client.model.VerticalPodAutoscaling;
import org.openapitools.client.model.WorkloadALTSConfig;
import org.openapitools.client.model.WorkloadCertificates;
import org.openapitools.client.model.WorkloadIdentityConfig;
import org.openapitools.client.model.WorkloadPolicyConfig;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ClusterUpdate
 */
public class ClusterUpdateTest {
    private final ClusterUpdate model = new ClusterUpdate();

    /**
     * Model tests for ClusterUpdate
     */
    @Test
    public void testClusterUpdate() {
        // TODO: test ClusterUpdate
    }

    /**
     * Test the property 'additionalPodRangesConfig'
     */
    @Test
    public void additionalPodRangesConfigTest() {
        // TODO: test additionalPodRangesConfig
    }

    /**
     * Test the property 'desiredAddonsConfig'
     */
    @Test
    public void desiredAddonsConfigTest() {
        // TODO: test desiredAddonsConfig
    }

    /**
     * Test the property 'desiredAuthenticatorGroupsConfig'
     */
    @Test
    public void desiredAuthenticatorGroupsConfigTest() {
        // TODO: test desiredAuthenticatorGroupsConfig
    }

    /**
     * Test the property 'desiredAutopilotWorkloadPolicyConfig'
     */
    @Test
    public void desiredAutopilotWorkloadPolicyConfigTest() {
        // TODO: test desiredAutopilotWorkloadPolicyConfig
    }

    /**
     * Test the property 'desiredBinaryAuthorization'
     */
    @Test
    public void desiredBinaryAuthorizationTest() {
        // TODO: test desiredBinaryAuthorization
    }

    /**
     * Test the property 'desiredClusterAutoscaling'
     */
    @Test
    public void desiredClusterAutoscalingTest() {
        // TODO: test desiredClusterAutoscaling
    }

    /**
     * Test the property 'desiredClusterTelemetry'
     */
    @Test
    public void desiredClusterTelemetryTest() {
        // TODO: test desiredClusterTelemetry
    }

    /**
     * Test the property 'desiredCostManagementConfig'
     */
    @Test
    public void desiredCostManagementConfigTest() {
        // TODO: test desiredCostManagementConfig
    }

    /**
     * Test the property 'desiredDatabaseEncryption'
     */
    @Test
    public void desiredDatabaseEncryptionTest() {
        // TODO: test desiredDatabaseEncryption
    }

    /**
     * Test the property 'desiredDatapathProvider'
     */
    @Test
    public void desiredDatapathProviderTest() {
        // TODO: test desiredDatapathProvider
    }

    /**
     * Test the property 'desiredDefaultSnatStatus'
     */
    @Test
    public void desiredDefaultSnatStatusTest() {
        // TODO: test desiredDefaultSnatStatus
    }

    /**
     * Test the property 'desiredDnsConfig'
     */
    @Test
    public void desiredDnsConfigTest() {
        // TODO: test desiredDnsConfig
    }

    /**
     * Test the property 'desiredEnableFqdnNetworkPolicy'
     */
    @Test
    public void desiredEnableFqdnNetworkPolicyTest() {
        // TODO: test desiredEnableFqdnNetworkPolicy
    }

    /**
     * Test the property 'desiredEnablePrivateEndpoint'
     */
    @Test
    public void desiredEnablePrivateEndpointTest() {
        // TODO: test desiredEnablePrivateEndpoint
    }

    /**
     * Test the property 'desiredFleet'
     */
    @Test
    public void desiredFleetTest() {
        // TODO: test desiredFleet
    }

    /**
     * Test the property 'desiredGatewayApiConfig'
     */
    @Test
    public void desiredGatewayApiConfigTest() {
        // TODO: test desiredGatewayApiConfig
    }

    /**
     * Test the property 'desiredGcfsConfig'
     */
    @Test
    public void desiredGcfsConfigTest() {
        // TODO: test desiredGcfsConfig
    }

    /**
     * Test the property 'desiredHostMaintenancePolicy'
     */
    @Test
    public void desiredHostMaintenancePolicyTest() {
        // TODO: test desiredHostMaintenancePolicy
    }

    /**
     * Test the property 'desiredIdentityServiceConfig'
     */
    @Test
    public void desiredIdentityServiceConfigTest() {
        // TODO: test desiredIdentityServiceConfig
    }

    /**
     * Test the property 'desiredImageType'
     */
    @Test
    public void desiredImageTypeTest() {
        // TODO: test desiredImageType
    }

    /**
     * Test the property 'desiredInTransitEncryptionConfig'
     */
    @Test
    public void desiredInTransitEncryptionConfigTest() {
        // TODO: test desiredInTransitEncryptionConfig
    }

    /**
     * Test the property 'desiredIntraNodeVisibilityConfig'
     */
    @Test
    public void desiredIntraNodeVisibilityConfigTest() {
        // TODO: test desiredIntraNodeVisibilityConfig
    }

    /**
     * Test the property 'desiredK8sBetaApis'
     */
    @Test
    public void desiredK8sBetaApisTest() {
        // TODO: test desiredK8sBetaApis
    }

    /**
     * Test the property 'desiredL4ilbSubsettingConfig'
     */
    @Test
    public void desiredL4ilbSubsettingConfigTest() {
        // TODO: test desiredL4ilbSubsettingConfig
    }

    /**
     * Test the property 'desiredLocations'
     */
    @Test
    public void desiredLocationsTest() {
        // TODO: test desiredLocations
    }

    /**
     * Test the property 'desiredLoggingConfig'
     */
    @Test
    public void desiredLoggingConfigTest() {
        // TODO: test desiredLoggingConfig
    }

    /**
     * Test the property 'desiredLoggingService'
     */
    @Test
    public void desiredLoggingServiceTest() {
        // TODO: test desiredLoggingService
    }

    /**
     * Test the property 'desiredMaster'
     */
    @Test
    public void desiredMasterTest() {
        // TODO: test desiredMaster
    }

    /**
     * Test the property 'desiredMasterAuthorizedNetworksConfig'
     */
    @Test
    public void desiredMasterAuthorizedNetworksConfigTest() {
        // TODO: test desiredMasterAuthorizedNetworksConfig
    }

    /**
     * Test the property 'desiredMasterVersion'
     */
    @Test
    public void desiredMasterVersionTest() {
        // TODO: test desiredMasterVersion
    }

    /**
     * Test the property 'desiredMeshCertificates'
     */
    @Test
    public void desiredMeshCertificatesTest() {
        // TODO: test desiredMeshCertificates
    }

    /**
     * Test the property 'desiredMonitoringConfig'
     */
    @Test
    public void desiredMonitoringConfigTest() {
        // TODO: test desiredMonitoringConfig
    }

    /**
     * Test the property 'desiredMonitoringService'
     */
    @Test
    public void desiredMonitoringServiceTest() {
        // TODO: test desiredMonitoringService
    }

    /**
     * Test the property 'desiredNetworkPerformanceConfig'
     */
    @Test
    public void desiredNetworkPerformanceConfigTest() {
        // TODO: test desiredNetworkPerformanceConfig
    }

    /**
     * Test the property 'desiredNodePoolAutoConfigNetworkTags'
     */
    @Test
    public void desiredNodePoolAutoConfigNetworkTagsTest() {
        // TODO: test desiredNodePoolAutoConfigNetworkTags
    }

    /**
     * Test the property 'desiredNodePoolAutoConfigResourceManagerTags'
     */
    @Test
    public void desiredNodePoolAutoConfigResourceManagerTagsTest() {
        // TODO: test desiredNodePoolAutoConfigResourceManagerTags
    }

    /**
     * Test the property 'desiredNodePoolAutoscaling'
     */
    @Test
    public void desiredNodePoolAutoscalingTest() {
        // TODO: test desiredNodePoolAutoscaling
    }

    /**
     * Test the property 'desiredNodePoolId'
     */
    @Test
    public void desiredNodePoolIdTest() {
        // TODO: test desiredNodePoolId
    }

    /**
     * Test the property 'desiredNodePoolLoggingConfig'
     */
    @Test
    public void desiredNodePoolLoggingConfigTest() {
        // TODO: test desiredNodePoolLoggingConfig
    }

    /**
     * Test the property 'desiredNodeVersion'
     */
    @Test
    public void desiredNodeVersionTest() {
        // TODO: test desiredNodeVersion
    }

    /**
     * Test the property 'desiredNotificationConfig'
     */
    @Test
    public void desiredNotificationConfigTest() {
        // TODO: test desiredNotificationConfig
    }

    /**
     * Test the property 'desiredParentProductConfig'
     */
    @Test
    public void desiredParentProductConfigTest() {
        // TODO: test desiredParentProductConfig
    }

    /**
     * Test the property 'desiredPodSecurityPolicyConfig'
     */
    @Test
    public void desiredPodSecurityPolicyConfigTest() {
        // TODO: test desiredPodSecurityPolicyConfig
    }

    /**
     * Test the property 'desiredPrivateClusterConfig'
     */
    @Test
    public void desiredPrivateClusterConfigTest() {
        // TODO: test desiredPrivateClusterConfig
    }

    /**
     * Test the property 'desiredPrivateIpv6GoogleAccess'
     */
    @Test
    public void desiredPrivateIpv6GoogleAccessTest() {
        // TODO: test desiredPrivateIpv6GoogleAccess
    }

    /**
     * Test the property 'desiredProtectConfig'
     */
    @Test
    public void desiredProtectConfigTest() {
        // TODO: test desiredProtectConfig
    }

    /**
     * Test the property 'desiredReleaseChannel'
     */
    @Test
    public void desiredReleaseChannelTest() {
        // TODO: test desiredReleaseChannel
    }

    /**
     * Test the property 'desiredResourceUsageExportConfig'
     */
    @Test
    public void desiredResourceUsageExportConfigTest() {
        // TODO: test desiredResourceUsageExportConfig
    }

    /**
     * Test the property 'desiredSecurityPostureConfig'
     */
    @Test
    public void desiredSecurityPostureConfigTest() {
        // TODO: test desiredSecurityPostureConfig
    }

    /**
     * Test the property 'desiredServiceExternalIpsConfig'
     */
    @Test
    public void desiredServiceExternalIpsConfigTest() {
        // TODO: test desiredServiceExternalIpsConfig
    }

    /**
     * Test the property 'desiredShieldedNodes'
     */
    @Test
    public void desiredShieldedNodesTest() {
        // TODO: test desiredShieldedNodes
    }

    /**
     * Test the property 'desiredStackType'
     */
    @Test
    public void desiredStackTypeTest() {
        // TODO: test desiredStackType
    }

    /**
     * Test the property 'desiredTpuConfig'
     */
    @Test
    public void desiredTpuConfigTest() {
        // TODO: test desiredTpuConfig
    }

    /**
     * Test the property 'desiredVerticalPodAutoscaling'
     */
    @Test
    public void desiredVerticalPodAutoscalingTest() {
        // TODO: test desiredVerticalPodAutoscaling
    }

    /**
     * Test the property 'desiredWorkloadAltsConfig'
     */
    @Test
    public void desiredWorkloadAltsConfigTest() {
        // TODO: test desiredWorkloadAltsConfig
    }

    /**
     * Test the property 'desiredWorkloadCertificates'
     */
    @Test
    public void desiredWorkloadCertificatesTest() {
        // TODO: test desiredWorkloadCertificates
    }

    /**
     * Test the property 'desiredWorkloadIdentityConfig'
     */
    @Test
    public void desiredWorkloadIdentityConfigTest() {
        // TODO: test desiredWorkloadIdentityConfig
    }

    /**
     * Test the property 'enableK8sBetaApis'
     */
    @Test
    public void enableK8sBetaApisTest() {
        // TODO: test enableK8sBetaApis
    }

    /**
     * Test the property 'etag'
     */
    @Test
    public void etagTest() {
        // TODO: test etag
    }

    /**
     * Test the property 'removedAdditionalPodRangesConfig'
     */
    @Test
    public void removedAdditionalPodRangesConfigTest() {
        // TODO: test removedAdditionalPodRangesConfig
    }

}
