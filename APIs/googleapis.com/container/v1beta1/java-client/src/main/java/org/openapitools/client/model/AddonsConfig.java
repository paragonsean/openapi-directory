/*
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CloudRunConfig;
import org.openapitools.client.model.ConfigConnectorConfig;
import org.openapitools.client.model.DnsCacheConfig;
import org.openapitools.client.model.GcePersistentDiskCsiDriverConfig;
import org.openapitools.client.model.GcpFilestoreCsiDriverConfig;
import org.openapitools.client.model.GcsFuseCsiDriverConfig;
import org.openapitools.client.model.GkeBackupAgentConfig;
import org.openapitools.client.model.HorizontalPodAutoscaling;
import org.openapitools.client.model.HttpLoadBalancing;
import org.openapitools.client.model.IstioConfig;
import org.openapitools.client.model.KalmConfig;
import org.openapitools.client.model.KubernetesDashboard;
import org.openapitools.client.model.NetworkPolicyConfig;
import org.openapitools.client.model.StatefulHAConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Configuration for the addons that can be automatically spun up in the cluster, enabling additional functionality.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:39:27.538902-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AddonsConfig {
  public static final String SERIALIZED_NAME_CLOUD_RUN_CONFIG = "cloudRunConfig";
  @SerializedName(SERIALIZED_NAME_CLOUD_RUN_CONFIG)
  private CloudRunConfig cloudRunConfig;

  public static final String SERIALIZED_NAME_CONFIG_CONNECTOR_CONFIG = "configConnectorConfig";
  @SerializedName(SERIALIZED_NAME_CONFIG_CONNECTOR_CONFIG)
  private ConfigConnectorConfig configConnectorConfig;

  public static final String SERIALIZED_NAME_DNS_CACHE_CONFIG = "dnsCacheConfig";
  @SerializedName(SERIALIZED_NAME_DNS_CACHE_CONFIG)
  private DnsCacheConfig dnsCacheConfig;

  public static final String SERIALIZED_NAME_GCE_PERSISTENT_DISK_CSI_DRIVER_CONFIG = "gcePersistentDiskCsiDriverConfig";
  @SerializedName(SERIALIZED_NAME_GCE_PERSISTENT_DISK_CSI_DRIVER_CONFIG)
  private GcePersistentDiskCsiDriverConfig gcePersistentDiskCsiDriverConfig;

  public static final String SERIALIZED_NAME_GCP_FILESTORE_CSI_DRIVER_CONFIG = "gcpFilestoreCsiDriverConfig";
  @SerializedName(SERIALIZED_NAME_GCP_FILESTORE_CSI_DRIVER_CONFIG)
  private GcpFilestoreCsiDriverConfig gcpFilestoreCsiDriverConfig;

  public static final String SERIALIZED_NAME_GCS_FUSE_CSI_DRIVER_CONFIG = "gcsFuseCsiDriverConfig";
  @SerializedName(SERIALIZED_NAME_GCS_FUSE_CSI_DRIVER_CONFIG)
  private GcsFuseCsiDriverConfig gcsFuseCsiDriverConfig;

  public static final String SERIALIZED_NAME_GKE_BACKUP_AGENT_CONFIG = "gkeBackupAgentConfig";
  @SerializedName(SERIALIZED_NAME_GKE_BACKUP_AGENT_CONFIG)
  private GkeBackupAgentConfig gkeBackupAgentConfig;

  public static final String SERIALIZED_NAME_HORIZONTAL_POD_AUTOSCALING = "horizontalPodAutoscaling";
  @SerializedName(SERIALIZED_NAME_HORIZONTAL_POD_AUTOSCALING)
  private HorizontalPodAutoscaling horizontalPodAutoscaling;

  public static final String SERIALIZED_NAME_HTTP_LOAD_BALANCING = "httpLoadBalancing";
  @SerializedName(SERIALIZED_NAME_HTTP_LOAD_BALANCING)
  private HttpLoadBalancing httpLoadBalancing;

  public static final String SERIALIZED_NAME_ISTIO_CONFIG = "istioConfig";
  @SerializedName(SERIALIZED_NAME_ISTIO_CONFIG)
  private IstioConfig istioConfig;

  public static final String SERIALIZED_NAME_KALM_CONFIG = "kalmConfig";
  @SerializedName(SERIALIZED_NAME_KALM_CONFIG)
  private KalmConfig kalmConfig;

  public static final String SERIALIZED_NAME_KUBERNETES_DASHBOARD = "kubernetesDashboard";
  @SerializedName(SERIALIZED_NAME_KUBERNETES_DASHBOARD)
  private KubernetesDashboard kubernetesDashboard;

  public static final String SERIALIZED_NAME_NETWORK_POLICY_CONFIG = "networkPolicyConfig";
  @SerializedName(SERIALIZED_NAME_NETWORK_POLICY_CONFIG)
  private NetworkPolicyConfig networkPolicyConfig;

  public static final String SERIALIZED_NAME_STATEFUL_HA_CONFIG = "statefulHaConfig";
  @SerializedName(SERIALIZED_NAME_STATEFUL_HA_CONFIG)
  private StatefulHAConfig statefulHaConfig;

  public AddonsConfig() {
  }

  public AddonsConfig cloudRunConfig(CloudRunConfig cloudRunConfig) {
    this.cloudRunConfig = cloudRunConfig;
    return this;
  }

  /**
   * Get cloudRunConfig
   * @return cloudRunConfig
   */
  @javax.annotation.Nullable
  public CloudRunConfig getCloudRunConfig() {
    return cloudRunConfig;
  }

  public void setCloudRunConfig(CloudRunConfig cloudRunConfig) {
    this.cloudRunConfig = cloudRunConfig;
  }


  public AddonsConfig configConnectorConfig(ConfigConnectorConfig configConnectorConfig) {
    this.configConnectorConfig = configConnectorConfig;
    return this;
  }

  /**
   * Get configConnectorConfig
   * @return configConnectorConfig
   */
  @javax.annotation.Nullable
  public ConfigConnectorConfig getConfigConnectorConfig() {
    return configConnectorConfig;
  }

  public void setConfigConnectorConfig(ConfigConnectorConfig configConnectorConfig) {
    this.configConnectorConfig = configConnectorConfig;
  }


  public AddonsConfig dnsCacheConfig(DnsCacheConfig dnsCacheConfig) {
    this.dnsCacheConfig = dnsCacheConfig;
    return this;
  }

  /**
   * Get dnsCacheConfig
   * @return dnsCacheConfig
   */
  @javax.annotation.Nullable
  public DnsCacheConfig getDnsCacheConfig() {
    return dnsCacheConfig;
  }

  public void setDnsCacheConfig(DnsCacheConfig dnsCacheConfig) {
    this.dnsCacheConfig = dnsCacheConfig;
  }


  public AddonsConfig gcePersistentDiskCsiDriverConfig(GcePersistentDiskCsiDriverConfig gcePersistentDiskCsiDriverConfig) {
    this.gcePersistentDiskCsiDriverConfig = gcePersistentDiskCsiDriverConfig;
    return this;
  }

  /**
   * Get gcePersistentDiskCsiDriverConfig
   * @return gcePersistentDiskCsiDriverConfig
   */
  @javax.annotation.Nullable
  public GcePersistentDiskCsiDriverConfig getGcePersistentDiskCsiDriverConfig() {
    return gcePersistentDiskCsiDriverConfig;
  }

  public void setGcePersistentDiskCsiDriverConfig(GcePersistentDiskCsiDriverConfig gcePersistentDiskCsiDriverConfig) {
    this.gcePersistentDiskCsiDriverConfig = gcePersistentDiskCsiDriverConfig;
  }


  public AddonsConfig gcpFilestoreCsiDriverConfig(GcpFilestoreCsiDriverConfig gcpFilestoreCsiDriverConfig) {
    this.gcpFilestoreCsiDriverConfig = gcpFilestoreCsiDriverConfig;
    return this;
  }

  /**
   * Get gcpFilestoreCsiDriverConfig
   * @return gcpFilestoreCsiDriverConfig
   */
  @javax.annotation.Nullable
  public GcpFilestoreCsiDriverConfig getGcpFilestoreCsiDriverConfig() {
    return gcpFilestoreCsiDriverConfig;
  }

  public void setGcpFilestoreCsiDriverConfig(GcpFilestoreCsiDriverConfig gcpFilestoreCsiDriverConfig) {
    this.gcpFilestoreCsiDriverConfig = gcpFilestoreCsiDriverConfig;
  }


  public AddonsConfig gcsFuseCsiDriverConfig(GcsFuseCsiDriverConfig gcsFuseCsiDriverConfig) {
    this.gcsFuseCsiDriverConfig = gcsFuseCsiDriverConfig;
    return this;
  }

  /**
   * Get gcsFuseCsiDriverConfig
   * @return gcsFuseCsiDriverConfig
   */
  @javax.annotation.Nullable
  public GcsFuseCsiDriverConfig getGcsFuseCsiDriverConfig() {
    return gcsFuseCsiDriverConfig;
  }

  public void setGcsFuseCsiDriverConfig(GcsFuseCsiDriverConfig gcsFuseCsiDriverConfig) {
    this.gcsFuseCsiDriverConfig = gcsFuseCsiDriverConfig;
  }


  public AddonsConfig gkeBackupAgentConfig(GkeBackupAgentConfig gkeBackupAgentConfig) {
    this.gkeBackupAgentConfig = gkeBackupAgentConfig;
    return this;
  }

  /**
   * Get gkeBackupAgentConfig
   * @return gkeBackupAgentConfig
   */
  @javax.annotation.Nullable
  public GkeBackupAgentConfig getGkeBackupAgentConfig() {
    return gkeBackupAgentConfig;
  }

  public void setGkeBackupAgentConfig(GkeBackupAgentConfig gkeBackupAgentConfig) {
    this.gkeBackupAgentConfig = gkeBackupAgentConfig;
  }


  public AddonsConfig horizontalPodAutoscaling(HorizontalPodAutoscaling horizontalPodAutoscaling) {
    this.horizontalPodAutoscaling = horizontalPodAutoscaling;
    return this;
  }

  /**
   * Get horizontalPodAutoscaling
   * @return horizontalPodAutoscaling
   */
  @javax.annotation.Nullable
  public HorizontalPodAutoscaling getHorizontalPodAutoscaling() {
    return horizontalPodAutoscaling;
  }

  public void setHorizontalPodAutoscaling(HorizontalPodAutoscaling horizontalPodAutoscaling) {
    this.horizontalPodAutoscaling = horizontalPodAutoscaling;
  }


  public AddonsConfig httpLoadBalancing(HttpLoadBalancing httpLoadBalancing) {
    this.httpLoadBalancing = httpLoadBalancing;
    return this;
  }

  /**
   * Get httpLoadBalancing
   * @return httpLoadBalancing
   */
  @javax.annotation.Nullable
  public HttpLoadBalancing getHttpLoadBalancing() {
    return httpLoadBalancing;
  }

  public void setHttpLoadBalancing(HttpLoadBalancing httpLoadBalancing) {
    this.httpLoadBalancing = httpLoadBalancing;
  }


  public AddonsConfig istioConfig(IstioConfig istioConfig) {
    this.istioConfig = istioConfig;
    return this;
  }

  /**
   * Get istioConfig
   * @return istioConfig
   */
  @javax.annotation.Nullable
  public IstioConfig getIstioConfig() {
    return istioConfig;
  }

  public void setIstioConfig(IstioConfig istioConfig) {
    this.istioConfig = istioConfig;
  }


  public AddonsConfig kalmConfig(KalmConfig kalmConfig) {
    this.kalmConfig = kalmConfig;
    return this;
  }

  /**
   * Get kalmConfig
   * @return kalmConfig
   */
  @javax.annotation.Nullable
  public KalmConfig getKalmConfig() {
    return kalmConfig;
  }

  public void setKalmConfig(KalmConfig kalmConfig) {
    this.kalmConfig = kalmConfig;
  }


  public AddonsConfig kubernetesDashboard(KubernetesDashboard kubernetesDashboard) {
    this.kubernetesDashboard = kubernetesDashboard;
    return this;
  }

  /**
   * Get kubernetesDashboard
   * @return kubernetesDashboard
   */
  @javax.annotation.Nullable
  public KubernetesDashboard getKubernetesDashboard() {
    return kubernetesDashboard;
  }

  public void setKubernetesDashboard(KubernetesDashboard kubernetesDashboard) {
    this.kubernetesDashboard = kubernetesDashboard;
  }


  public AddonsConfig networkPolicyConfig(NetworkPolicyConfig networkPolicyConfig) {
    this.networkPolicyConfig = networkPolicyConfig;
    return this;
  }

  /**
   * Get networkPolicyConfig
   * @return networkPolicyConfig
   */
  @javax.annotation.Nullable
  public NetworkPolicyConfig getNetworkPolicyConfig() {
    return networkPolicyConfig;
  }

  public void setNetworkPolicyConfig(NetworkPolicyConfig networkPolicyConfig) {
    this.networkPolicyConfig = networkPolicyConfig;
  }


  public AddonsConfig statefulHaConfig(StatefulHAConfig statefulHaConfig) {
    this.statefulHaConfig = statefulHaConfig;
    return this;
  }

  /**
   * Get statefulHaConfig
   * @return statefulHaConfig
   */
  @javax.annotation.Nullable
  public StatefulHAConfig getStatefulHaConfig() {
    return statefulHaConfig;
  }

  public void setStatefulHaConfig(StatefulHAConfig statefulHaConfig) {
    this.statefulHaConfig = statefulHaConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddonsConfig addonsConfig = (AddonsConfig) o;
    return Objects.equals(this.cloudRunConfig, addonsConfig.cloudRunConfig) &&
        Objects.equals(this.configConnectorConfig, addonsConfig.configConnectorConfig) &&
        Objects.equals(this.dnsCacheConfig, addonsConfig.dnsCacheConfig) &&
        Objects.equals(this.gcePersistentDiskCsiDriverConfig, addonsConfig.gcePersistentDiskCsiDriverConfig) &&
        Objects.equals(this.gcpFilestoreCsiDriverConfig, addonsConfig.gcpFilestoreCsiDriverConfig) &&
        Objects.equals(this.gcsFuseCsiDriverConfig, addonsConfig.gcsFuseCsiDriverConfig) &&
        Objects.equals(this.gkeBackupAgentConfig, addonsConfig.gkeBackupAgentConfig) &&
        Objects.equals(this.horizontalPodAutoscaling, addonsConfig.horizontalPodAutoscaling) &&
        Objects.equals(this.httpLoadBalancing, addonsConfig.httpLoadBalancing) &&
        Objects.equals(this.istioConfig, addonsConfig.istioConfig) &&
        Objects.equals(this.kalmConfig, addonsConfig.kalmConfig) &&
        Objects.equals(this.kubernetesDashboard, addonsConfig.kubernetesDashboard) &&
        Objects.equals(this.networkPolicyConfig, addonsConfig.networkPolicyConfig) &&
        Objects.equals(this.statefulHaConfig, addonsConfig.statefulHaConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cloudRunConfig, configConnectorConfig, dnsCacheConfig, gcePersistentDiskCsiDriverConfig, gcpFilestoreCsiDriverConfig, gcsFuseCsiDriverConfig, gkeBackupAgentConfig, horizontalPodAutoscaling, httpLoadBalancing, istioConfig, kalmConfig, kubernetesDashboard, networkPolicyConfig, statefulHaConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddonsConfig {\n");
    sb.append("    cloudRunConfig: ").append(toIndentedString(cloudRunConfig)).append("\n");
    sb.append("    configConnectorConfig: ").append(toIndentedString(configConnectorConfig)).append("\n");
    sb.append("    dnsCacheConfig: ").append(toIndentedString(dnsCacheConfig)).append("\n");
    sb.append("    gcePersistentDiskCsiDriverConfig: ").append(toIndentedString(gcePersistentDiskCsiDriverConfig)).append("\n");
    sb.append("    gcpFilestoreCsiDriverConfig: ").append(toIndentedString(gcpFilestoreCsiDriverConfig)).append("\n");
    sb.append("    gcsFuseCsiDriverConfig: ").append(toIndentedString(gcsFuseCsiDriverConfig)).append("\n");
    sb.append("    gkeBackupAgentConfig: ").append(toIndentedString(gkeBackupAgentConfig)).append("\n");
    sb.append("    horizontalPodAutoscaling: ").append(toIndentedString(horizontalPodAutoscaling)).append("\n");
    sb.append("    httpLoadBalancing: ").append(toIndentedString(httpLoadBalancing)).append("\n");
    sb.append("    istioConfig: ").append(toIndentedString(istioConfig)).append("\n");
    sb.append("    kalmConfig: ").append(toIndentedString(kalmConfig)).append("\n");
    sb.append("    kubernetesDashboard: ").append(toIndentedString(kubernetesDashboard)).append("\n");
    sb.append("    networkPolicyConfig: ").append(toIndentedString(networkPolicyConfig)).append("\n");
    sb.append("    statefulHaConfig: ").append(toIndentedString(statefulHaConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cloudRunConfig");
    openapiFields.add("configConnectorConfig");
    openapiFields.add("dnsCacheConfig");
    openapiFields.add("gcePersistentDiskCsiDriverConfig");
    openapiFields.add("gcpFilestoreCsiDriverConfig");
    openapiFields.add("gcsFuseCsiDriverConfig");
    openapiFields.add("gkeBackupAgentConfig");
    openapiFields.add("horizontalPodAutoscaling");
    openapiFields.add("httpLoadBalancing");
    openapiFields.add("istioConfig");
    openapiFields.add("kalmConfig");
    openapiFields.add("kubernetesDashboard");
    openapiFields.add("networkPolicyConfig");
    openapiFields.add("statefulHaConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AddonsConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AddonsConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AddonsConfig is not found in the empty JSON string", AddonsConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AddonsConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AddonsConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `cloudRunConfig`
      if (jsonObj.get("cloudRunConfig") != null && !jsonObj.get("cloudRunConfig").isJsonNull()) {
        CloudRunConfig.validateJsonElement(jsonObj.get("cloudRunConfig"));
      }
      // validate the optional field `configConnectorConfig`
      if (jsonObj.get("configConnectorConfig") != null && !jsonObj.get("configConnectorConfig").isJsonNull()) {
        ConfigConnectorConfig.validateJsonElement(jsonObj.get("configConnectorConfig"));
      }
      // validate the optional field `dnsCacheConfig`
      if (jsonObj.get("dnsCacheConfig") != null && !jsonObj.get("dnsCacheConfig").isJsonNull()) {
        DnsCacheConfig.validateJsonElement(jsonObj.get("dnsCacheConfig"));
      }
      // validate the optional field `gcePersistentDiskCsiDriverConfig`
      if (jsonObj.get("gcePersistentDiskCsiDriverConfig") != null && !jsonObj.get("gcePersistentDiskCsiDriverConfig").isJsonNull()) {
        GcePersistentDiskCsiDriverConfig.validateJsonElement(jsonObj.get("gcePersistentDiskCsiDriverConfig"));
      }
      // validate the optional field `gcpFilestoreCsiDriverConfig`
      if (jsonObj.get("gcpFilestoreCsiDriverConfig") != null && !jsonObj.get("gcpFilestoreCsiDriverConfig").isJsonNull()) {
        GcpFilestoreCsiDriverConfig.validateJsonElement(jsonObj.get("gcpFilestoreCsiDriverConfig"));
      }
      // validate the optional field `gcsFuseCsiDriverConfig`
      if (jsonObj.get("gcsFuseCsiDriverConfig") != null && !jsonObj.get("gcsFuseCsiDriverConfig").isJsonNull()) {
        GcsFuseCsiDriverConfig.validateJsonElement(jsonObj.get("gcsFuseCsiDriverConfig"));
      }
      // validate the optional field `gkeBackupAgentConfig`
      if (jsonObj.get("gkeBackupAgentConfig") != null && !jsonObj.get("gkeBackupAgentConfig").isJsonNull()) {
        GkeBackupAgentConfig.validateJsonElement(jsonObj.get("gkeBackupAgentConfig"));
      }
      // validate the optional field `horizontalPodAutoscaling`
      if (jsonObj.get("horizontalPodAutoscaling") != null && !jsonObj.get("horizontalPodAutoscaling").isJsonNull()) {
        HorizontalPodAutoscaling.validateJsonElement(jsonObj.get("horizontalPodAutoscaling"));
      }
      // validate the optional field `httpLoadBalancing`
      if (jsonObj.get("httpLoadBalancing") != null && !jsonObj.get("httpLoadBalancing").isJsonNull()) {
        HttpLoadBalancing.validateJsonElement(jsonObj.get("httpLoadBalancing"));
      }
      // validate the optional field `istioConfig`
      if (jsonObj.get("istioConfig") != null && !jsonObj.get("istioConfig").isJsonNull()) {
        IstioConfig.validateJsonElement(jsonObj.get("istioConfig"));
      }
      // validate the optional field `kalmConfig`
      if (jsonObj.get("kalmConfig") != null && !jsonObj.get("kalmConfig").isJsonNull()) {
        KalmConfig.validateJsonElement(jsonObj.get("kalmConfig"));
      }
      // validate the optional field `kubernetesDashboard`
      if (jsonObj.get("kubernetesDashboard") != null && !jsonObj.get("kubernetesDashboard").isJsonNull()) {
        KubernetesDashboard.validateJsonElement(jsonObj.get("kubernetesDashboard"));
      }
      // validate the optional field `networkPolicyConfig`
      if (jsonObj.get("networkPolicyConfig") != null && !jsonObj.get("networkPolicyConfig").isJsonNull()) {
        NetworkPolicyConfig.validateJsonElement(jsonObj.get("networkPolicyConfig"));
      }
      // validate the optional field `statefulHaConfig`
      if (jsonObj.get("statefulHaConfig") != null && !jsonObj.get("statefulHaConfig").isJsonNull()) {
        StatefulHAConfig.validateJsonElement(jsonObj.get("statefulHaConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AddonsConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AddonsConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AddonsConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AddonsConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<AddonsConfig>() {
           @Override
           public void write(JsonWriter out, AddonsConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AddonsConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AddonsConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AddonsConfig
   * @throws IOException if the JSON string is invalid with respect to AddonsConfig
   */
  public static AddonsConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AddonsConfig.class);
  }

  /**
   * Convert an instance of AddonsConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

