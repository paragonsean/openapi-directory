/**
 * Organization Policy API
 * The Organization Policy API allows users to configure governance rules on their Google Cloud resources across the resource hierarchy.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudOrgpolicyV2Policy.h
 *
 * Defines an organization policy which is used to specify constraints for configurations of Google Cloud resources.
 */

#ifndef OAIGoogleCloudOrgpolicyV2Policy_H
#define OAIGoogleCloudOrgpolicyV2Policy_H

#include <QJsonObject>

#include "OAIGoogleCloudOrgpolicyV2AlternatePolicySpec.h"
#include "OAIGoogleCloudOrgpolicyV2PolicySpec.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudOrgpolicyV2AlternatePolicySpec;
class OAIGoogleCloudOrgpolicyV2PolicySpec;

class OAIGoogleCloudOrgpolicyV2Policy : public OAIObject {
public:
    OAIGoogleCloudOrgpolicyV2Policy();
    OAIGoogleCloudOrgpolicyV2Policy(QString json);
    ~OAIGoogleCloudOrgpolicyV2Policy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleCloudOrgpolicyV2AlternatePolicySpec getAlternate() const;
    void setAlternate(const OAIGoogleCloudOrgpolicyV2AlternatePolicySpec &alternate);
    bool is_alternate_Set() const;
    bool is_alternate_Valid() const;

    OAIGoogleCloudOrgpolicyV2PolicySpec getDryRunSpec() const;
    void setDryRunSpec(const OAIGoogleCloudOrgpolicyV2PolicySpec &dry_run_spec);
    bool is_dry_run_spec_Set() const;
    bool is_dry_run_spec_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIGoogleCloudOrgpolicyV2PolicySpec getSpec() const;
    void setSpec(const OAIGoogleCloudOrgpolicyV2PolicySpec &spec);
    bool is_spec_Set() const;
    bool is_spec_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleCloudOrgpolicyV2AlternatePolicySpec m_alternate;
    bool m_alternate_isSet;
    bool m_alternate_isValid;

    OAIGoogleCloudOrgpolicyV2PolicySpec m_dry_run_spec;
    bool m_dry_run_spec_isSet;
    bool m_dry_run_spec_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIGoogleCloudOrgpolicyV2PolicySpec m_spec;
    bool m_spec_isSet;
    bool m_spec_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudOrgpolicyV2Policy)

#endif // OAIGoogleCloudOrgpolicyV2Policy_H
