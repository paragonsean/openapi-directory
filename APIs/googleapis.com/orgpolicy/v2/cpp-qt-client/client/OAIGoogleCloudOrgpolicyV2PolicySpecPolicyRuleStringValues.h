/**
 * Organization Policy API
 * The Organization Policy API allows users to configure governance rules on their Google Cloud resources across the resource hierarchy.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues.h
 *
 * A message that holds specific allowed and denied values. This message can define specific values and subtrees of the Resource Manager resource hierarchy (&#x60;Organizations&#x60;, &#x60;Folders&#x60;, &#x60;Projects&#x60;) that are allowed or denied. This is achieved by using the &#x60;under:&#x60; and optional &#x60;is:&#x60; prefixes. The &#x60;under:&#x60; prefix is used to denote resource subtree values. The &#x60;is:&#x60; prefix is used to denote specific values, and is required only if the value contains a \&quot;:\&quot;. Values prefixed with \&quot;is:\&quot; are treated the same as values with no prefix. Ancestry subtrees must be in one of the following formats: - &#x60;projects/&#x60; (for example, &#x60;projects/tokyo-rain-123&#x60;) - &#x60;folders/&#x60; (for example, &#x60;folders/1234&#x60;) - &#x60;organizations/&#x60; (for example, &#x60;organizations/1234&#x60;) The &#x60;supports_under&#x60; field of the associated &#x60;Constraint&#x60; defines whether ancestry prefixes can be used.
 */

#ifndef OAIGoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues_H
#define OAIGoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues : public OAIObject {
public:
    OAIGoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues();
    OAIGoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues(QString json);
    ~OAIGoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAllowedValues() const;
    void setAllowedValues(const QList<QString> &allowed_values);
    bool is_allowed_values_Set() const;
    bool is_allowed_values_Valid() const;

    QList<QString> getDeniedValues() const;
    void setDeniedValues(const QList<QString> &denied_values);
    bool is_denied_values_Set() const;
    bool is_denied_values_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_allowed_values;
    bool m_allowed_values_isSet;
    bool m_allowed_values_isValid;

    QList<QString> m_denied_values;
    bool m_denied_values_isSet;
    bool m_denied_values_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues)

#endif // OAIGoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues_H
