/**
 * Organization Policy API
 * The Organization Policy API allows users to configure governance rules on their Google Cloud resources across the resource hierarchy.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues from './GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues';
import GoogleTypeExpr from './GoogleTypeExpr';

/**
 * The GoogleCloudOrgpolicyV2PolicySpecPolicyRule model module.
 * @module model/GoogleCloudOrgpolicyV2PolicySpecPolicyRule
 * @version v2
 */
class GoogleCloudOrgpolicyV2PolicySpecPolicyRule {
    /**
     * Constructs a new <code>GoogleCloudOrgpolicyV2PolicySpecPolicyRule</code>.
     * A rule used to express this policy.
     * @alias module:model/GoogleCloudOrgpolicyV2PolicySpecPolicyRule
     */
    constructor() { 
        
        GoogleCloudOrgpolicyV2PolicySpecPolicyRule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudOrgpolicyV2PolicySpecPolicyRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudOrgpolicyV2PolicySpecPolicyRule} obj Optional instance to populate.
     * @return {module:model/GoogleCloudOrgpolicyV2PolicySpecPolicyRule} The populated <code>GoogleCloudOrgpolicyV2PolicySpecPolicyRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudOrgpolicyV2PolicySpecPolicyRule();

            if (data.hasOwnProperty('allowAll')) {
                obj['allowAll'] = ApiClient.convertToType(data['allowAll'], 'Boolean');
            }
            if (data.hasOwnProperty('condition')) {
                obj['condition'] = GoogleTypeExpr.constructFromObject(data['condition']);
            }
            if (data.hasOwnProperty('denyAll')) {
                obj['denyAll'] = ApiClient.convertToType(data['denyAll'], 'Boolean');
            }
            if (data.hasOwnProperty('enforce')) {
                obj['enforce'] = ApiClient.convertToType(data['enforce'], 'Boolean');
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues.constructFromObject(data['values']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudOrgpolicyV2PolicySpecPolicyRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudOrgpolicyV2PolicySpecPolicyRule</code>.
     */
    static validateJSON(data) {
        // validate the optional field `condition`
        if (data['condition']) { // data not null
          GoogleTypeExpr.validateJSON(data['condition']);
        }
        // validate the optional field `values`
        if (data['values']) { // data not null
          GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues.validateJSON(data['values']);
        }

        return true;
    }


}



/**
 * Setting this to true means that all values are allowed. This field can be set only in policies for list constraints.
 * @member {Boolean} allowAll
 */
GoogleCloudOrgpolicyV2PolicySpecPolicyRule.prototype['allowAll'] = undefined;

/**
 * @member {module:model/GoogleTypeExpr} condition
 */
GoogleCloudOrgpolicyV2PolicySpecPolicyRule.prototype['condition'] = undefined;

/**
 * Setting this to true means that all values are denied. This field can be set only in policies for list constraints.
 * @member {Boolean} denyAll
 */
GoogleCloudOrgpolicyV2PolicySpecPolicyRule.prototype['denyAll'] = undefined;

/**
 * If `true`, then the policy is enforced. If `false`, then any configuration is acceptable. This field can be set only in policies for boolean constraints.
 * @member {Boolean} enforce
 */
GoogleCloudOrgpolicyV2PolicySpecPolicyRule.prototype['enforce'] = undefined;

/**
 * @member {module:model/GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues} values
 */
GoogleCloudOrgpolicyV2PolicySpecPolicyRule.prototype['values'] = undefined;






export default GoogleCloudOrgpolicyV2PolicySpecPolicyRule;

