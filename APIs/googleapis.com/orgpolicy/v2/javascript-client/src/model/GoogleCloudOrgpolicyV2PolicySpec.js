/**
 * Organization Policy API
 * The Organization Policy API allows users to configure governance rules on their Google Cloud resources across the resource hierarchy.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudOrgpolicyV2PolicySpecPolicyRule from './GoogleCloudOrgpolicyV2PolicySpecPolicyRule';

/**
 * The GoogleCloudOrgpolicyV2PolicySpec model module.
 * @module model/GoogleCloudOrgpolicyV2PolicySpec
 * @version v2
 */
class GoogleCloudOrgpolicyV2PolicySpec {
    /**
     * Constructs a new <code>GoogleCloudOrgpolicyV2PolicySpec</code>.
     * Defines a Google Cloud policy specification which is used to specify constraints for configurations of Google Cloud resources.
     * @alias module:model/GoogleCloudOrgpolicyV2PolicySpec
     */
    constructor() { 
        
        GoogleCloudOrgpolicyV2PolicySpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudOrgpolicyV2PolicySpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudOrgpolicyV2PolicySpec} obj Optional instance to populate.
     * @return {module:model/GoogleCloudOrgpolicyV2PolicySpec} The populated <code>GoogleCloudOrgpolicyV2PolicySpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudOrgpolicyV2PolicySpec();

            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('inheritFromParent')) {
                obj['inheritFromParent'] = ApiClient.convertToType(data['inheritFromParent'], 'Boolean');
            }
            if (data.hasOwnProperty('reset')) {
                obj['reset'] = ApiClient.convertToType(data['reset'], 'Boolean');
            }
            if (data.hasOwnProperty('rules')) {
                obj['rules'] = ApiClient.convertToType(data['rules'], [GoogleCloudOrgpolicyV2PolicySpecPolicyRule]);
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudOrgpolicyV2PolicySpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudOrgpolicyV2PolicySpec</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        if (data['rules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['rules'])) {
                throw new Error("Expected the field `rules` to be an array in the JSON data but got " + data['rules']);
            }
            // validate the optional field `rules` (array)
            for (const item of data['rules']) {
                GoogleCloudOrgpolicyV2PolicySpecPolicyRule.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * An opaque tag indicating the current version of the policySpec, used for concurrency control. This field is ignored if used in a `CreatePolicy` request. When the policy is returned from either a `GetPolicy` or a `ListPolicies` request, this `etag` indicates the version of the current policySpec to use when executing a read-modify-write loop. When the policy is returned from a `GetEffectivePolicy` request, the `etag` will be unset.
 * @member {String} etag
 */
GoogleCloudOrgpolicyV2PolicySpec.prototype['etag'] = undefined;

/**
 * Determines the inheritance behavior for this policy. If `inherit_from_parent` is true, policy rules set higher up in the hierarchy (up to the closest root) are inherited and present in the effective policy. If it is false, then no rules are inherited, and this policy becomes the new root for evaluation. This field can be set only for policies which configure list constraints.
 * @member {Boolean} inheritFromParent
 */
GoogleCloudOrgpolicyV2PolicySpec.prototype['inheritFromParent'] = undefined;

/**
 * Ignores policies set above this resource and restores the `constraint_default` enforcement behavior of the specific constraint at this resource. This field can be set in policies for either list or boolean constraints. If set, `rules` must be empty and `inherit_from_parent` must be set to false.
 * @member {Boolean} reset
 */
GoogleCloudOrgpolicyV2PolicySpec.prototype['reset'] = undefined;

/**
 * In policies for boolean constraints, the following requirements apply: - There must be one and only one policy rule where condition is unset. - Boolean policy rules with conditions must set `enforced` to the opposite of the policy rule without a condition. - During policy evaluation, policy rules with conditions that are true for a target resource take precedence.
 * @member {Array.<module:model/GoogleCloudOrgpolicyV2PolicySpecPolicyRule>} rules
 */
GoogleCloudOrgpolicyV2PolicySpec.prototype['rules'] = undefined;

/**
 * Output only. The time stamp this was previously updated. This represents the last time a call to `CreatePolicy` or `UpdatePolicy` was made for that policy.
 * @member {String} updateTime
 */
GoogleCloudOrgpolicyV2PolicySpec.prototype['updateTime'] = undefined;






export default GoogleCloudOrgpolicyV2PolicySpec;

