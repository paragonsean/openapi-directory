/**
 * Organization Policy API
 * The Organization Policy API allows users to configure governance rules on their Google Cloud resources across the resource hierarchy.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudOrgpolicyV2ConstraintListConstraint from './GoogleCloudOrgpolicyV2ConstraintListConstraint';

/**
 * The GoogleCloudOrgpolicyV2Constraint model module.
 * @module model/GoogleCloudOrgpolicyV2Constraint
 * @version v2
 */
class GoogleCloudOrgpolicyV2Constraint {
    /**
     * Constructs a new <code>GoogleCloudOrgpolicyV2Constraint</code>.
     * A constraint describes a way to restrict resource&#39;s configuration. For example, you could enforce a constraint that controls which Google Cloud services can be activated across an organization, or whether a Compute Engine instance can have serial port connections established. Constraints can be configured by the organization policy administrator to fit the needs of the organization by setting a policy that includes constraints at different locations in the organization&#39;s resource hierarchy. Policies are inherited down the resource hierarchy from higher levels, but can also be overridden. For details about the inheritance rules please read about &#x60;policies&#x60;. Constraints have a default behavior determined by the &#x60;constraint_default&#x60; field, which is the enforcement behavior that is used in the absence of a policy being defined or inherited for the resource in question.
     * @alias module:model/GoogleCloudOrgpolicyV2Constraint
     */
    constructor() { 
        
        GoogleCloudOrgpolicyV2Constraint.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudOrgpolicyV2Constraint</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudOrgpolicyV2Constraint} obj Optional instance to populate.
     * @return {module:model/GoogleCloudOrgpolicyV2Constraint} The populated <code>GoogleCloudOrgpolicyV2Constraint</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudOrgpolicyV2Constraint();

            if (data.hasOwnProperty('booleanConstraint')) {
                obj['booleanConstraint'] = ApiClient.convertToType(data['booleanConstraint'], Object);
            }
            if (data.hasOwnProperty('constraintDefault')) {
                obj['constraintDefault'] = ApiClient.convertToType(data['constraintDefault'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('listConstraint')) {
                obj['listConstraint'] = GoogleCloudOrgpolicyV2ConstraintListConstraint.constructFromObject(data['listConstraint']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('supportsDryRun')) {
                obj['supportsDryRun'] = ApiClient.convertToType(data['supportsDryRun'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudOrgpolicyV2Constraint</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudOrgpolicyV2Constraint</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['constraintDefault'] && !(typeof data['constraintDefault'] === 'string' || data['constraintDefault'] instanceof String)) {
            throw new Error("Expected the field `constraintDefault` to be a primitive type in the JSON string but got " + data['constraintDefault']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `listConstraint`
        if (data['listConstraint']) { // data not null
          GoogleCloudOrgpolicyV2ConstraintListConstraint.validateJSON(data['listConstraint']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * A constraint that is either enforced or not. For example, a constraint `constraints/compute.disableSerialPortAccess`. If it is enforced on a VM instance, serial port connections will not be opened to that instance.
 * @member {Object} booleanConstraint
 */
GoogleCloudOrgpolicyV2Constraint.prototype['booleanConstraint'] = undefined;

/**
 * The evaluation behavior of this constraint in the absence of a policy.
 * @member {module:model/GoogleCloudOrgpolicyV2Constraint.ConstraintDefaultEnum} constraintDefault
 */
GoogleCloudOrgpolicyV2Constraint.prototype['constraintDefault'] = undefined;

/**
 * Detailed description of what this constraint controls as well as how and where it is enforced. Mutable.
 * @member {String} description
 */
GoogleCloudOrgpolicyV2Constraint.prototype['description'] = undefined;

/**
 * The human readable name. Mutable.
 * @member {String} displayName
 */
GoogleCloudOrgpolicyV2Constraint.prototype['displayName'] = undefined;

/**
 * @member {module:model/GoogleCloudOrgpolicyV2ConstraintListConstraint} listConstraint
 */
GoogleCloudOrgpolicyV2Constraint.prototype['listConstraint'] = undefined;

/**
 * Immutable. The resource name of the constraint. Must be in one of the following forms: * `projects/{project_number}/constraints/{constraint_name}` * `folders/{folder_id}/constraints/{constraint_name}` * `organizations/{organization_id}/constraints/{constraint_name}` For example, \"/projects/123/constraints/compute.disableSerialPortAccess\".
 * @member {String} name
 */
GoogleCloudOrgpolicyV2Constraint.prototype['name'] = undefined;

/**
 * Shows if dry run is supported for this constraint or not.
 * @member {Boolean} supportsDryRun
 */
GoogleCloudOrgpolicyV2Constraint.prototype['supportsDryRun'] = undefined;





/**
 * Allowed values for the <code>constraintDefault</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudOrgpolicyV2Constraint['ConstraintDefaultEnum'] = {

    /**
     * value: "CONSTRAINT_DEFAULT_UNSPECIFIED"
     * @const
     */
    "CONSTRAINT_DEFAULT_UNSPECIFIED": "CONSTRAINT_DEFAULT_UNSPECIFIED",

    /**
     * value: "ALLOW"
     * @const
     */
    "ALLOW": "ALLOW",

    /**
     * value: "DENY"
     * @const
     */
    "DENY": "DENY"
};



export default GoogleCloudOrgpolicyV2Constraint;

