/*
 * AI Platform Training & Prediction API
 * An API to enable creating and using machine learning models.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudMlV1EncryptionConfig;
import org.openapitools.client.model.GoogleCloudMlV1HyperparameterSpec;
import org.openapitools.client.model.GoogleCloudMlV1ReplicaConfig;
import org.openapitools.client.model.GoogleCloudMlV1Scheduling;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleCloudMlV1TrainingInput
 */
public class GoogleCloudMlV1TrainingInputTest {
    private final GoogleCloudMlV1TrainingInput model = new GoogleCloudMlV1TrainingInput();

    /**
     * Model tests for GoogleCloudMlV1TrainingInput
     */
    @Test
    public void testGoogleCloudMlV1TrainingInput() {
        // TODO: test GoogleCloudMlV1TrainingInput
    }

    /**
     * Test the property 'args'
     */
    @Test
    public void argsTest() {
        // TODO: test args
    }

    /**
     * Test the property 'enableWebAccess'
     */
    @Test
    public void enableWebAccessTest() {
        // TODO: test enableWebAccess
    }

    /**
     * Test the property 'encryptionConfig'
     */
    @Test
    public void encryptionConfigTest() {
        // TODO: test encryptionConfig
    }

    /**
     * Test the property 'evaluatorConfig'
     */
    @Test
    public void evaluatorConfigTest() {
        // TODO: test evaluatorConfig
    }

    /**
     * Test the property 'evaluatorCount'
     */
    @Test
    public void evaluatorCountTest() {
        // TODO: test evaluatorCount
    }

    /**
     * Test the property 'evaluatorType'
     */
    @Test
    public void evaluatorTypeTest() {
        // TODO: test evaluatorType
    }

    /**
     * Test the property 'hyperparameters'
     */
    @Test
    public void hyperparametersTest() {
        // TODO: test hyperparameters
    }

    /**
     * Test the property 'jobDir'
     */
    @Test
    public void jobDirTest() {
        // TODO: test jobDir
    }

    /**
     * Test the property 'masterConfig'
     */
    @Test
    public void masterConfigTest() {
        // TODO: test masterConfig
    }

    /**
     * Test the property 'masterType'
     */
    @Test
    public void masterTypeTest() {
        // TODO: test masterType
    }

    /**
     * Test the property 'network'
     */
    @Test
    public void networkTest() {
        // TODO: test network
    }

    /**
     * Test the property 'packageUris'
     */
    @Test
    public void packageUrisTest() {
        // TODO: test packageUris
    }

    /**
     * Test the property 'parameterServerConfig'
     */
    @Test
    public void parameterServerConfigTest() {
        // TODO: test parameterServerConfig
    }

    /**
     * Test the property 'parameterServerCount'
     */
    @Test
    public void parameterServerCountTest() {
        // TODO: test parameterServerCount
    }

    /**
     * Test the property 'parameterServerType'
     */
    @Test
    public void parameterServerTypeTest() {
        // TODO: test parameterServerType
    }

    /**
     * Test the property 'pythonModule'
     */
    @Test
    public void pythonModuleTest() {
        // TODO: test pythonModule
    }

    /**
     * Test the property 'pythonVersion'
     */
    @Test
    public void pythonVersionTest() {
        // TODO: test pythonVersion
    }

    /**
     * Test the property 'region'
     */
    @Test
    public void regionTest() {
        // TODO: test region
    }

    /**
     * Test the property 'runtimeVersion'
     */
    @Test
    public void runtimeVersionTest() {
        // TODO: test runtimeVersion
    }

    /**
     * Test the property 'scaleTier'
     */
    @Test
    public void scaleTierTest() {
        // TODO: test scaleTier
    }

    /**
     * Test the property 'scheduling'
     */
    @Test
    public void schedulingTest() {
        // TODO: test scheduling
    }

    /**
     * Test the property 'serviceAccount'
     */
    @Test
    public void serviceAccountTest() {
        // TODO: test serviceAccount
    }

    /**
     * Test the property 'useChiefInTfConfig'
     */
    @Test
    public void useChiefInTfConfigTest() {
        // TODO: test useChiefInTfConfig
    }

    /**
     * Test the property 'workerConfig'
     */
    @Test
    public void workerConfigTest() {
        // TODO: test workerConfig
    }

    /**
     * Test the property 'workerCount'
     */
    @Test
    public void workerCountTest() {
        // TODO: test workerCount
    }

    /**
     * Test the property 'workerType'
     */
    @Test
    public void workerTypeTest() {
        // TODO: test workerType
    }

}
