/*
 * AI Platform Training & Prediction API
 * An API to enable creating and using machine learning models.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudMlV1ContainerPort;
import org.openapitools.client.model.GoogleCloudMlV1EnvVar;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Specification of a custom container for serving predictions. This message is a subset of the [Kubernetes Container v1 core specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#container-v1-core).
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:13.643536-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudMlV1ContainerSpec {
  public static final String SERIALIZED_NAME_ARGS = "args";
  @SerializedName(SERIALIZED_NAME_ARGS)
  private List<String> args = new ArrayList<>();

  public static final String SERIALIZED_NAME_COMMAND = "command";
  @SerializedName(SERIALIZED_NAME_COMMAND)
  private List<String> command = new ArrayList<>();

  public static final String SERIALIZED_NAME_ENV = "env";
  @SerializedName(SERIALIZED_NAME_ENV)
  private List<GoogleCloudMlV1EnvVar> env = new ArrayList<>();

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private String image;

  public static final String SERIALIZED_NAME_PORTS = "ports";
  @SerializedName(SERIALIZED_NAME_PORTS)
  private List<GoogleCloudMlV1ContainerPort> ports = new ArrayList<>();

  public GoogleCloudMlV1ContainerSpec() {
  }

  public GoogleCloudMlV1ContainerSpec args(List<String> args) {
    this.args = args;
    return this;
  }

  public GoogleCloudMlV1ContainerSpec addArgsItem(String argsItem) {
    if (this.args == null) {
      this.args = new ArrayList<>();
    }
    this.args.add(argsItem);
    return this;
  }

  /**
   * Immutable. Specifies arguments for the command that runs when the container starts. This overrides the container&#39;s [&#x60;CMD&#x60;](https://docs.docker.com/engine/reference/builder/#cmd). Specify this field as an array of executable and arguments, similar to a Docker &#x60;CMD&#x60;&#39;s \&quot;default parameters\&quot; form. If you don&#39;t specify this field but do specify the command field, then the command from the &#x60;command&#x60; field runs without any additional arguments. See the [Kubernetes documentation about how the &#x60;command&#x60; and &#x60;args&#x60; fields interact with a container&#39;s &#x60;ENTRYPOINT&#x60; and &#x60;CMD&#x60;](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes). If you don&#39;t specify this field and don&#39;t specify the &#x60;commmand&#x60; field, then the container&#39;s [&#x60;ENTRYPOINT&#x60;](https://docs.docker.com/engine/reference/builder/#cmd) and &#x60;CMD&#x60; determine what runs based on their default behavior. See the [Docker documentation about how &#x60;CMD&#x60; and &#x60;ENTRYPOINT&#x60; interact](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact). In this field, you can reference [environment variables set by AI Platform Prediction](/ai-platform/prediction/docs/custom-container-requirements#aip-variables) and environment variables set in the env field. You cannot reference environment variables set in the Docker image. In order for environment variables to be expanded, reference them by using the following syntax: $( VARIABLE_NAME) Note that this differs from Bash variable expansion, which does not use parentheses. If a variable cannot be resolved, the reference in the input string is used unchanged. To avoid variable expansion, you can escape this syntax with &#x60;$$&#x60;; for example: $$(VARIABLE_NAME) This field corresponds to the &#x60;args&#x60; field of the [Kubernetes Containers v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#container-v1-core).
   * @return args
   */
  @javax.annotation.Nullable
  public List<String> getArgs() {
    return args;
  }

  public void setArgs(List<String> args) {
    this.args = args;
  }


  public GoogleCloudMlV1ContainerSpec command(List<String> command) {
    this.command = command;
    return this;
  }

  public GoogleCloudMlV1ContainerSpec addCommandItem(String commandItem) {
    if (this.command == null) {
      this.command = new ArrayList<>();
    }
    this.command.add(commandItem);
    return this;
  }

  /**
   * Immutable. Specifies the command that runs when the container starts. This overrides the container&#39;s [&#x60;ENTRYPOINT&#x60;](https://docs.docker.com/engine/reference/builder/#entrypoint). Specify this field as an array of executable and arguments, similar to a Docker &#x60;ENTRYPOINT&#x60;&#39;s \&quot;exec\&quot; form, not its \&quot;shell\&quot; form. If you do not specify this field, then the container&#39;s &#x60;ENTRYPOINT&#x60; runs, in conjunction with the args field or the container&#39;s [&#x60;CMD&#x60;](https://docs.docker.com/engine/reference/builder/#cmd), if either exists. If this field is not specified and the container does not have an &#x60;ENTRYPOINT&#x60;, then refer to the [Docker documentation about how &#x60;CMD&#x60; and &#x60;ENTRYPOINT&#x60; interact](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact). If you specify this field, then you can also specify the &#x60;args&#x60; field to provide additional arguments for this command. However, if you specify this field, then the container&#39;s &#x60;CMD&#x60; is ignored. See the [Kubernetes documentation about how the &#x60;command&#x60; and &#x60;args&#x60; fields interact with a container&#39;s &#x60;ENTRYPOINT&#x60; and &#x60;CMD&#x60;](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes). In this field, you can reference [environment variables set by AI Platform Prediction](/ai-platform/prediction/docs/custom-container-requirements#aip-variables) and environment variables set in the env field. You cannot reference environment variables set in the Docker image. In order for environment variables to be expanded, reference them by using the following syntax: $( VARIABLE_NAME) Note that this differs from Bash variable expansion, which does not use parentheses. If a variable cannot be resolved, the reference in the input string is used unchanged. To avoid variable expansion, you can escape this syntax with &#x60;$$&#x60;; for example: $$(VARIABLE_NAME) This field corresponds to the &#x60;command&#x60; field of the [Kubernetes Containers v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#container-v1-core).
   * @return command
   */
  @javax.annotation.Nullable
  public List<String> getCommand() {
    return command;
  }

  public void setCommand(List<String> command) {
    this.command = command;
  }


  public GoogleCloudMlV1ContainerSpec env(List<GoogleCloudMlV1EnvVar> env) {
    this.env = env;
    return this;
  }

  public GoogleCloudMlV1ContainerSpec addEnvItem(GoogleCloudMlV1EnvVar envItem) {
    if (this.env == null) {
      this.env = new ArrayList<>();
    }
    this.env.add(envItem);
    return this;
  }

  /**
   * Immutable. List of environment variables to set in the container. After the container starts running, code running in the container can read these environment variables. Additionally, the command and args fields can reference these variables. Later entries in this list can also reference earlier entries. For example, the following example sets the variable &#x60;VAR_2&#x60; to have the value &#x60;foo bar&#x60;: &#x60;&#x60;&#x60;json [ { \&quot;name\&quot;: \&quot;VAR_1\&quot;, \&quot;value\&quot;: \&quot;foo\&quot; }, { \&quot;name\&quot;: \&quot;VAR_2\&quot;, \&quot;value\&quot;: \&quot;$(VAR_1) bar\&quot; } ] &#x60;&#x60;&#x60; If you switch the order of the variables in the example, then the expansion does not occur. This field corresponds to the &#x60;env&#x60; field of the [Kubernetes Containers v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#container-v1-core).
   * @return env
   */
  @javax.annotation.Nullable
  public List<GoogleCloudMlV1EnvVar> getEnv() {
    return env;
  }

  public void setEnv(List<GoogleCloudMlV1EnvVar> env) {
    this.env = env;
  }


  public GoogleCloudMlV1ContainerSpec image(String image) {
    this.image = image;
    return this;
  }

  /**
   * URI of the Docker image to be used as the custom container for serving predictions. This URI must identify [an image in Artifact Registry](/artifact-registry/docs/overview) and begin with the hostname &#x60;{REGION}-docker.pkg.dev&#x60;, where &#x60;{REGION}&#x60; is replaced by the region that matches AI Platform Prediction [regional endpoint](/ai-platform/prediction/docs/regional-endpoints) that you are using. For example, if you are using the &#x60;us-central1-ml.googleapis.com&#x60; endpoint, then this URI must begin with &#x60;us-central1-docker.pkg.dev&#x60;. To use a custom container, the [AI Platform Google-managed service account](/ai-platform/prediction/docs/custom-service-account#default) must have permission to pull (read) the Docker image at this URI. The AI Platform Google-managed service account has the following format: &#x60;service-{PROJECT_NUMBER}@cloud-ml.google.com.iam.gserviceaccount.com&#x60; {PROJECT_NUMBER} is replaced by your Google Cloud project number. By default, this service account has necessary permissions to pull an Artifact Registry image in the same Google Cloud project where you are using AI Platform Prediction. In this case, no configuration is necessary. If you want to use an image from a different Google Cloud project, learn how to [grant the Artifact Registry Reader (roles/artifactregistry.reader) role for a repository](/artifact-registry/docs/access-control#grant-repo) to your projet&#39;s AI Platform Google-managed service account. To learn about the requirements for the Docker image itself, read [Custom container requirements](/ai-platform/prediction/docs/custom-container-requirements).
   * @return image
   */
  @javax.annotation.Nullable
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }


  public GoogleCloudMlV1ContainerSpec ports(List<GoogleCloudMlV1ContainerPort> ports) {
    this.ports = ports;
    return this;
  }

  public GoogleCloudMlV1ContainerSpec addPortsItem(GoogleCloudMlV1ContainerPort portsItem) {
    if (this.ports == null) {
      this.ports = new ArrayList<>();
    }
    this.ports.add(portsItem);
    return this;
  }

  /**
   * Immutable. List of ports to expose from the container. AI Platform Prediction sends any prediction requests that it receives to the first port on this list. AI Platform Prediction also sends [liveness and health checks](/ai-platform/prediction/docs/custom-container-requirements#health) to this port. If you do not specify this field, it defaults to following value: &#x60;&#x60;&#x60;json [ { \&quot;containerPort\&quot;: 8080 } ] &#x60;&#x60;&#x60; AI Platform Prediction does not use ports other than the first one listed. This field corresponds to the &#x60;ports&#x60; field of the [Kubernetes Containers v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#container-v1-core).
   * @return ports
   */
  @javax.annotation.Nullable
  public List<GoogleCloudMlV1ContainerPort> getPorts() {
    return ports;
  }

  public void setPorts(List<GoogleCloudMlV1ContainerPort> ports) {
    this.ports = ports;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudMlV1ContainerSpec googleCloudMlV1ContainerSpec = (GoogleCloudMlV1ContainerSpec) o;
    return Objects.equals(this.args, googleCloudMlV1ContainerSpec.args) &&
        Objects.equals(this.command, googleCloudMlV1ContainerSpec.command) &&
        Objects.equals(this.env, googleCloudMlV1ContainerSpec.env) &&
        Objects.equals(this.image, googleCloudMlV1ContainerSpec.image) &&
        Objects.equals(this.ports, googleCloudMlV1ContainerSpec.ports);
  }

  @Override
  public int hashCode() {
    return Objects.hash(args, command, env, image, ports);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudMlV1ContainerSpec {\n");
    sb.append("    args: ").append(toIndentedString(args)).append("\n");
    sb.append("    command: ").append(toIndentedString(command)).append("\n");
    sb.append("    env: ").append(toIndentedString(env)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    ports: ").append(toIndentedString(ports)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("args");
    openapiFields.add("command");
    openapiFields.add("env");
    openapiFields.add("image");
    openapiFields.add("ports");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudMlV1ContainerSpec
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudMlV1ContainerSpec.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudMlV1ContainerSpec is not found in the empty JSON string", GoogleCloudMlV1ContainerSpec.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudMlV1ContainerSpec.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudMlV1ContainerSpec` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("args") != null && !jsonObj.get("args").isJsonNull() && !jsonObj.get("args").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `args` to be an array in the JSON string but got `%s`", jsonObj.get("args").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("command") != null && !jsonObj.get("command").isJsonNull() && !jsonObj.get("command").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `command` to be an array in the JSON string but got `%s`", jsonObj.get("command").toString()));
      }
      if (jsonObj.get("env") != null && !jsonObj.get("env").isJsonNull()) {
        JsonArray jsonArrayenv = jsonObj.getAsJsonArray("env");
        if (jsonArrayenv != null) {
          // ensure the json data is an array
          if (!jsonObj.get("env").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `env` to be an array in the JSON string but got `%s`", jsonObj.get("env").toString()));
          }

          // validate the optional field `env` (array)
          for (int i = 0; i < jsonArrayenv.size(); i++) {
            GoogleCloudMlV1EnvVar.validateJsonElement(jsonArrayenv.get(i));
          };
        }
      }
      if ((jsonObj.get("image") != null && !jsonObj.get("image").isJsonNull()) && !jsonObj.get("image").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image").toString()));
      }
      if (jsonObj.get("ports") != null && !jsonObj.get("ports").isJsonNull()) {
        JsonArray jsonArrayports = jsonObj.getAsJsonArray("ports");
        if (jsonArrayports != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ports").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ports` to be an array in the JSON string but got `%s`", jsonObj.get("ports").toString()));
          }

          // validate the optional field `ports` (array)
          for (int i = 0; i < jsonArrayports.size(); i++) {
            GoogleCloudMlV1ContainerPort.validateJsonElement(jsonArrayports.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudMlV1ContainerSpec.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudMlV1ContainerSpec' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudMlV1ContainerSpec> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudMlV1ContainerSpec.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudMlV1ContainerSpec>() {
           @Override
           public void write(JsonWriter out, GoogleCloudMlV1ContainerSpec value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudMlV1ContainerSpec read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudMlV1ContainerSpec given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudMlV1ContainerSpec
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudMlV1ContainerSpec
   */
  public static GoogleCloudMlV1ContainerSpec fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudMlV1ContainerSpec.class);
  }

  /**
   * Convert an instance of GoogleCloudMlV1ContainerSpec to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

