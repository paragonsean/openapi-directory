/*
 * AI Platform Training & Prediction API
 * An API to enable creating and using machine learning models.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudMlV1PredictionInput;
import org.openapitools.client.model.GoogleCloudMlV1PredictionOutput;
import org.openapitools.client.model.GoogleCloudMlV1TrainingInput;
import org.openapitools.client.model.GoogleCloudMlV1TrainingOutput;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a training or prediction job.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:13.643536-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudMlV1Job {
  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private String endTime;

  public static final String SERIALIZED_NAME_ERROR_MESSAGE = "errorMessage";
  @SerializedName(SERIALIZED_NAME_ERROR_MESSAGE)
  private String errorMessage;

  public static final String SERIALIZED_NAME_ETAG = "etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private byte[] etag;

  public static final String SERIALIZED_NAME_JOB_ID = "jobId";
  @SerializedName(SERIALIZED_NAME_JOB_ID)
  private String jobId;

  public static final String SERIALIZED_NAME_JOB_POSITION = "jobPosition";
  @SerializedName(SERIALIZED_NAME_JOB_POSITION)
  private String jobPosition;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_PREDICTION_INPUT = "predictionInput";
  @SerializedName(SERIALIZED_NAME_PREDICTION_INPUT)
  private GoogleCloudMlV1PredictionInput predictionInput;

  public static final String SERIALIZED_NAME_PREDICTION_OUTPUT = "predictionOutput";
  @SerializedName(SERIALIZED_NAME_PREDICTION_OUTPUT)
  private GoogleCloudMlV1PredictionOutput predictionOutput;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  /**
   * Output only. The detailed state of a job.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    STATE_UNSPECIFIED("STATE_UNSPECIFIED"),
    
    QUEUED("QUEUED"),
    
    PREPARING("PREPARING"),
    
    RUNNING("RUNNING"),
    
    SUCCEEDED("SUCCEEDED"),
    
    FAILED("FAILED"),
    
    CANCELLING("CANCELLING"),
    
    CANCELLED("CANCELLED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_TRAINING_INPUT = "trainingInput";
  @SerializedName(SERIALIZED_NAME_TRAINING_INPUT)
  private GoogleCloudMlV1TrainingInput trainingInput;

  public static final String SERIALIZED_NAME_TRAINING_OUTPUT = "trainingOutput";
  @SerializedName(SERIALIZED_NAME_TRAINING_OUTPUT)
  private GoogleCloudMlV1TrainingOutput trainingOutput;

  public GoogleCloudMlV1Job() {
  }

  public GoogleCloudMlV1Job(
     String jobPosition
  ) {
    this();
    this.jobPosition = jobPosition;
  }

  public GoogleCloudMlV1Job createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. When the job was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }


  public GoogleCloudMlV1Job endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Output only. When the job processing was completed.
   * @return endTime
   */
  @javax.annotation.Nullable
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }


  public GoogleCloudMlV1Job errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

  /**
   * Output only. The details of a failure or a cancellation.
   * @return errorMessage
   */
  @javax.annotation.Nullable
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }


  public GoogleCloudMlV1Job etag(byte[] etag) {
    this.etag = etag;
    return this;
  }

  /**
   * &#x60;etag&#x60; is used for optimistic concurrency control as a way to help prevent simultaneous updates of a job from overwriting each other. It is strongly suggested that systems make use of the &#x60;etag&#x60; in the read-modify-write cycle to perform job updates in order to avoid race conditions: An &#x60;etag&#x60; is returned in the response to &#x60;GetJob&#x60;, and systems are expected to put that etag in the request to &#x60;UpdateJob&#x60; to ensure that their change will be applied to the same version of the job.
   * @return etag
   */
  @javax.annotation.Nullable
  public byte[] getEtag() {
    return etag;
  }

  public void setEtag(byte[] etag) {
    this.etag = etag;
  }


  public GoogleCloudMlV1Job jobId(String jobId) {
    this.jobId = jobId;
    return this;
  }

  /**
   * Required. The user-specified id of the job.
   * @return jobId
   */
  @javax.annotation.Nullable
  public String getJobId() {
    return jobId;
  }

  public void setJobId(String jobId) {
    this.jobId = jobId;
  }


  /**
   * Output only. It&#39;s only effect when the job is in QUEUED state. If it&#39;s positive, it indicates the job&#39;s position in the job scheduler. It&#39;s 0 when the job is already scheduled.
   * @return jobPosition
   */
  @javax.annotation.Nullable
  public String getJobPosition() {
    return jobPosition;
  }



  public GoogleCloudMlV1Job labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public GoogleCloudMlV1Job putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * Optional. One or more labels that you can add, to organize your jobs. Each label is a key-value pair, where both the key and the value are arbitrary strings that you supply. For more information, see the documentation on using labels.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  public GoogleCloudMlV1Job predictionInput(GoogleCloudMlV1PredictionInput predictionInput) {
    this.predictionInput = predictionInput;
    return this;
  }

  /**
   * Get predictionInput
   * @return predictionInput
   */
  @javax.annotation.Nullable
  public GoogleCloudMlV1PredictionInput getPredictionInput() {
    return predictionInput;
  }

  public void setPredictionInput(GoogleCloudMlV1PredictionInput predictionInput) {
    this.predictionInput = predictionInput;
  }


  public GoogleCloudMlV1Job predictionOutput(GoogleCloudMlV1PredictionOutput predictionOutput) {
    this.predictionOutput = predictionOutput;
    return this;
  }

  /**
   * Get predictionOutput
   * @return predictionOutput
   */
  @javax.annotation.Nullable
  public GoogleCloudMlV1PredictionOutput getPredictionOutput() {
    return predictionOutput;
  }

  public void setPredictionOutput(GoogleCloudMlV1PredictionOutput predictionOutput) {
    this.predictionOutput = predictionOutput;
  }


  public GoogleCloudMlV1Job startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Output only. When the job processing was started.
   * @return startTime
   */
  @javax.annotation.Nullable
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  public GoogleCloudMlV1Job state(StateEnum state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. The detailed state of a job.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }


  public GoogleCloudMlV1Job trainingInput(GoogleCloudMlV1TrainingInput trainingInput) {
    this.trainingInput = trainingInput;
    return this;
  }

  /**
   * Get trainingInput
   * @return trainingInput
   */
  @javax.annotation.Nullable
  public GoogleCloudMlV1TrainingInput getTrainingInput() {
    return trainingInput;
  }

  public void setTrainingInput(GoogleCloudMlV1TrainingInput trainingInput) {
    this.trainingInput = trainingInput;
  }


  public GoogleCloudMlV1Job trainingOutput(GoogleCloudMlV1TrainingOutput trainingOutput) {
    this.trainingOutput = trainingOutput;
    return this;
  }

  /**
   * Get trainingOutput
   * @return trainingOutput
   */
  @javax.annotation.Nullable
  public GoogleCloudMlV1TrainingOutput getTrainingOutput() {
    return trainingOutput;
  }

  public void setTrainingOutput(GoogleCloudMlV1TrainingOutput trainingOutput) {
    this.trainingOutput = trainingOutput;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudMlV1Job googleCloudMlV1Job = (GoogleCloudMlV1Job) o;
    return Objects.equals(this.createTime, googleCloudMlV1Job.createTime) &&
        Objects.equals(this.endTime, googleCloudMlV1Job.endTime) &&
        Objects.equals(this.errorMessage, googleCloudMlV1Job.errorMessage) &&
        Arrays.equals(this.etag, googleCloudMlV1Job.etag) &&
        Objects.equals(this.jobId, googleCloudMlV1Job.jobId) &&
        Objects.equals(this.jobPosition, googleCloudMlV1Job.jobPosition) &&
        Objects.equals(this.labels, googleCloudMlV1Job.labels) &&
        Objects.equals(this.predictionInput, googleCloudMlV1Job.predictionInput) &&
        Objects.equals(this.predictionOutput, googleCloudMlV1Job.predictionOutput) &&
        Objects.equals(this.startTime, googleCloudMlV1Job.startTime) &&
        Objects.equals(this.state, googleCloudMlV1Job.state) &&
        Objects.equals(this.trainingInput, googleCloudMlV1Job.trainingInput) &&
        Objects.equals(this.trainingOutput, googleCloudMlV1Job.trainingOutput);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, endTime, errorMessage, Arrays.hashCode(etag), jobId, jobPosition, labels, predictionInput, predictionOutput, startTime, state, trainingInput, trainingOutput);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudMlV1Job {\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    jobPosition: ").append(toIndentedString(jobPosition)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    predictionInput: ").append(toIndentedString(predictionInput)).append("\n");
    sb.append("    predictionOutput: ").append(toIndentedString(predictionOutput)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    trainingInput: ").append(toIndentedString(trainingInput)).append("\n");
    sb.append("    trainingOutput: ").append(toIndentedString(trainingOutput)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createTime");
    openapiFields.add("endTime");
    openapiFields.add("errorMessage");
    openapiFields.add("etag");
    openapiFields.add("jobId");
    openapiFields.add("jobPosition");
    openapiFields.add("labels");
    openapiFields.add("predictionInput");
    openapiFields.add("predictionOutput");
    openapiFields.add("startTime");
    openapiFields.add("state");
    openapiFields.add("trainingInput");
    openapiFields.add("trainingOutput");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudMlV1Job
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudMlV1Job.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudMlV1Job is not found in the empty JSON string", GoogleCloudMlV1Job.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudMlV1Job.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudMlV1Job` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("endTime") != null && !jsonObj.get("endTime").isJsonNull()) && !jsonObj.get("endTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endTime").toString()));
      }
      if ((jsonObj.get("errorMessage") != null && !jsonObj.get("errorMessage").isJsonNull()) && !jsonObj.get("errorMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `errorMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("errorMessage").toString()));
      }
      if ((jsonObj.get("jobId") != null && !jsonObj.get("jobId").isJsonNull()) && !jsonObj.get("jobId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobId").toString()));
      }
      if ((jsonObj.get("jobPosition") != null && !jsonObj.get("jobPosition").isJsonNull()) && !jsonObj.get("jobPosition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobPosition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobPosition").toString()));
      }
      // validate the optional field `predictionInput`
      if (jsonObj.get("predictionInput") != null && !jsonObj.get("predictionInput").isJsonNull()) {
        GoogleCloudMlV1PredictionInput.validateJsonElement(jsonObj.get("predictionInput"));
      }
      // validate the optional field `predictionOutput`
      if (jsonObj.get("predictionOutput") != null && !jsonObj.get("predictionOutput").isJsonNull()) {
        GoogleCloudMlV1PredictionOutput.validateJsonElement(jsonObj.get("predictionOutput"));
      }
      if ((jsonObj.get("startTime") != null && !jsonObj.get("startTime").isJsonNull()) && !jsonObj.get("startTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startTime").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
      // validate the optional field `trainingInput`
      if (jsonObj.get("trainingInput") != null && !jsonObj.get("trainingInput").isJsonNull()) {
        GoogleCloudMlV1TrainingInput.validateJsonElement(jsonObj.get("trainingInput"));
      }
      // validate the optional field `trainingOutput`
      if (jsonObj.get("trainingOutput") != null && !jsonObj.get("trainingOutput").isJsonNull()) {
        GoogleCloudMlV1TrainingOutput.validateJsonElement(jsonObj.get("trainingOutput"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudMlV1Job.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudMlV1Job' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudMlV1Job> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudMlV1Job.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudMlV1Job>() {
           @Override
           public void write(JsonWriter out, GoogleCloudMlV1Job value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudMlV1Job read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudMlV1Job given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudMlV1Job
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudMlV1Job
   */
  public static GoogleCloudMlV1Job fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudMlV1Job.class);
  }

  /**
   * Convert an instance of GoogleCloudMlV1Job to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

