/*
 * AI Platform Training & Prediction API
 * An API to enable creating and using machine learning models.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudMlV1StudyConfigParameterSpecCategoricalValueSpec;
import org.openapitools.client.model.GoogleCloudMlV1StudyConfigParameterSpecDiscreteValueSpec;
import org.openapitools.client.model.GoogleCloudMlV1StudyConfigParameterSpecDoubleValueSpec;
import org.openapitools.client.model.GoogleCloudMlV1StudyConfigParameterSpecIntegerValueSpec;
import org.openapitools.client.model.GoogleCloudMlV1StudyConfigParameterSpecMatchingParentCategoricalValueSpec;
import org.openapitools.client.model.GoogleCloudMlV1StudyConfigParameterSpecMatchingParentDiscreteValueSpec;
import org.openapitools.client.model.GoogleCloudMlV1StudyConfigParameterSpecMatchingParentIntValueSpec;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a single parameter to optimize.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:13.643536-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudMlV1StudyConfigParameterSpec {
  public static final String SERIALIZED_NAME_CATEGORICAL_VALUE_SPEC = "categoricalValueSpec";
  @SerializedName(SERIALIZED_NAME_CATEGORICAL_VALUE_SPEC)
  private GoogleCloudMlV1StudyConfigParameterSpecCategoricalValueSpec categoricalValueSpec;

  public static final String SERIALIZED_NAME_CHILD_PARAMETER_SPECS = "childParameterSpecs";
  @SerializedName(SERIALIZED_NAME_CHILD_PARAMETER_SPECS)
  private List<GoogleCloudMlV1StudyConfigParameterSpec> childParameterSpecs = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISCRETE_VALUE_SPEC = "discreteValueSpec";
  @SerializedName(SERIALIZED_NAME_DISCRETE_VALUE_SPEC)
  private GoogleCloudMlV1StudyConfigParameterSpecDiscreteValueSpec discreteValueSpec;

  public static final String SERIALIZED_NAME_DOUBLE_VALUE_SPEC = "doubleValueSpec";
  @SerializedName(SERIALIZED_NAME_DOUBLE_VALUE_SPEC)
  private GoogleCloudMlV1StudyConfigParameterSpecDoubleValueSpec doubleValueSpec;

  public static final String SERIALIZED_NAME_INTEGER_VALUE_SPEC = "integerValueSpec";
  @SerializedName(SERIALIZED_NAME_INTEGER_VALUE_SPEC)
  private GoogleCloudMlV1StudyConfigParameterSpecIntegerValueSpec integerValueSpec;

  public static final String SERIALIZED_NAME_PARAMETER = "parameter";
  @SerializedName(SERIALIZED_NAME_PARAMETER)
  private String parameter;

  public static final String SERIALIZED_NAME_PARENT_CATEGORICAL_VALUES = "parentCategoricalValues";
  @SerializedName(SERIALIZED_NAME_PARENT_CATEGORICAL_VALUES)
  private GoogleCloudMlV1StudyConfigParameterSpecMatchingParentCategoricalValueSpec parentCategoricalValues;

  public static final String SERIALIZED_NAME_PARENT_DISCRETE_VALUES = "parentDiscreteValues";
  @SerializedName(SERIALIZED_NAME_PARENT_DISCRETE_VALUES)
  private GoogleCloudMlV1StudyConfigParameterSpecMatchingParentDiscreteValueSpec parentDiscreteValues;

  public static final String SERIALIZED_NAME_PARENT_INT_VALUES = "parentIntValues";
  @SerializedName(SERIALIZED_NAME_PARENT_INT_VALUES)
  private GoogleCloudMlV1StudyConfigParameterSpecMatchingParentIntValueSpec parentIntValues;

  /**
   * How the parameter should be scaled. Leave unset for categorical parameters.
   */
  @JsonAdapter(ScaleTypeEnum.Adapter.class)
  public enum ScaleTypeEnum {
    SCALE_TYPE_UNSPECIFIED("SCALE_TYPE_UNSPECIFIED"),
    
    UNIT_LINEAR_SCALE("UNIT_LINEAR_SCALE"),
    
    UNIT_LOG_SCALE("UNIT_LOG_SCALE"),
    
    UNIT_REVERSE_LOG_SCALE("UNIT_REVERSE_LOG_SCALE");

    private String value;

    ScaleTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ScaleTypeEnum fromValue(String value) {
      for (ScaleTypeEnum b : ScaleTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ScaleTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ScaleTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ScaleTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ScaleTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ScaleTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SCALE_TYPE = "scaleType";
  @SerializedName(SERIALIZED_NAME_SCALE_TYPE)
  private ScaleTypeEnum scaleType;

  /**
   * Required. The type of the parameter.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    PARAMETER_TYPE_UNSPECIFIED("PARAMETER_TYPE_UNSPECIFIED"),
    
    DOUBLE("DOUBLE"),
    
    INTEGER("INTEGER"),
    
    CATEGORICAL("CATEGORICAL"),
    
    DISCRETE("DISCRETE");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public GoogleCloudMlV1StudyConfigParameterSpec() {
  }

  public GoogleCloudMlV1StudyConfigParameterSpec categoricalValueSpec(GoogleCloudMlV1StudyConfigParameterSpecCategoricalValueSpec categoricalValueSpec) {
    this.categoricalValueSpec = categoricalValueSpec;
    return this;
  }

  /**
   * Get categoricalValueSpec
   * @return categoricalValueSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudMlV1StudyConfigParameterSpecCategoricalValueSpec getCategoricalValueSpec() {
    return categoricalValueSpec;
  }

  public void setCategoricalValueSpec(GoogleCloudMlV1StudyConfigParameterSpecCategoricalValueSpec categoricalValueSpec) {
    this.categoricalValueSpec = categoricalValueSpec;
  }


  public GoogleCloudMlV1StudyConfigParameterSpec childParameterSpecs(List<GoogleCloudMlV1StudyConfigParameterSpec> childParameterSpecs) {
    this.childParameterSpecs = childParameterSpecs;
    return this;
  }

  public GoogleCloudMlV1StudyConfigParameterSpec addChildParameterSpecsItem(GoogleCloudMlV1StudyConfigParameterSpec childParameterSpecsItem) {
    if (this.childParameterSpecs == null) {
      this.childParameterSpecs = new ArrayList<>();
    }
    this.childParameterSpecs.add(childParameterSpecsItem);
    return this;
  }

  /**
   * A child node is active if the parameter&#39;s value matches the child node&#39;s matching_parent_values. If two items in child_parameter_specs have the same name, they must have disjoint matching_parent_values.
   * @return childParameterSpecs
   */
  @javax.annotation.Nullable
  public List<GoogleCloudMlV1StudyConfigParameterSpec> getChildParameterSpecs() {
    return childParameterSpecs;
  }

  public void setChildParameterSpecs(List<GoogleCloudMlV1StudyConfigParameterSpec> childParameterSpecs) {
    this.childParameterSpecs = childParameterSpecs;
  }


  public GoogleCloudMlV1StudyConfigParameterSpec discreteValueSpec(GoogleCloudMlV1StudyConfigParameterSpecDiscreteValueSpec discreteValueSpec) {
    this.discreteValueSpec = discreteValueSpec;
    return this;
  }

  /**
   * Get discreteValueSpec
   * @return discreteValueSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudMlV1StudyConfigParameterSpecDiscreteValueSpec getDiscreteValueSpec() {
    return discreteValueSpec;
  }

  public void setDiscreteValueSpec(GoogleCloudMlV1StudyConfigParameterSpecDiscreteValueSpec discreteValueSpec) {
    this.discreteValueSpec = discreteValueSpec;
  }


  public GoogleCloudMlV1StudyConfigParameterSpec doubleValueSpec(GoogleCloudMlV1StudyConfigParameterSpecDoubleValueSpec doubleValueSpec) {
    this.doubleValueSpec = doubleValueSpec;
    return this;
  }

  /**
   * Get doubleValueSpec
   * @return doubleValueSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudMlV1StudyConfigParameterSpecDoubleValueSpec getDoubleValueSpec() {
    return doubleValueSpec;
  }

  public void setDoubleValueSpec(GoogleCloudMlV1StudyConfigParameterSpecDoubleValueSpec doubleValueSpec) {
    this.doubleValueSpec = doubleValueSpec;
  }


  public GoogleCloudMlV1StudyConfigParameterSpec integerValueSpec(GoogleCloudMlV1StudyConfigParameterSpecIntegerValueSpec integerValueSpec) {
    this.integerValueSpec = integerValueSpec;
    return this;
  }

  /**
   * Get integerValueSpec
   * @return integerValueSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudMlV1StudyConfigParameterSpecIntegerValueSpec getIntegerValueSpec() {
    return integerValueSpec;
  }

  public void setIntegerValueSpec(GoogleCloudMlV1StudyConfigParameterSpecIntegerValueSpec integerValueSpec) {
    this.integerValueSpec = integerValueSpec;
  }


  public GoogleCloudMlV1StudyConfigParameterSpec parameter(String parameter) {
    this.parameter = parameter;
    return this;
  }

  /**
   * Required. The parameter name must be unique amongst all ParameterSpecs.
   * @return parameter
   */
  @javax.annotation.Nullable
  public String getParameter() {
    return parameter;
  }

  public void setParameter(String parameter) {
    this.parameter = parameter;
  }


  public GoogleCloudMlV1StudyConfigParameterSpec parentCategoricalValues(GoogleCloudMlV1StudyConfigParameterSpecMatchingParentCategoricalValueSpec parentCategoricalValues) {
    this.parentCategoricalValues = parentCategoricalValues;
    return this;
  }

  /**
   * Get parentCategoricalValues
   * @return parentCategoricalValues
   */
  @javax.annotation.Nullable
  public GoogleCloudMlV1StudyConfigParameterSpecMatchingParentCategoricalValueSpec getParentCategoricalValues() {
    return parentCategoricalValues;
  }

  public void setParentCategoricalValues(GoogleCloudMlV1StudyConfigParameterSpecMatchingParentCategoricalValueSpec parentCategoricalValues) {
    this.parentCategoricalValues = parentCategoricalValues;
  }


  public GoogleCloudMlV1StudyConfigParameterSpec parentDiscreteValues(GoogleCloudMlV1StudyConfigParameterSpecMatchingParentDiscreteValueSpec parentDiscreteValues) {
    this.parentDiscreteValues = parentDiscreteValues;
    return this;
  }

  /**
   * Get parentDiscreteValues
   * @return parentDiscreteValues
   */
  @javax.annotation.Nullable
  public GoogleCloudMlV1StudyConfigParameterSpecMatchingParentDiscreteValueSpec getParentDiscreteValues() {
    return parentDiscreteValues;
  }

  public void setParentDiscreteValues(GoogleCloudMlV1StudyConfigParameterSpecMatchingParentDiscreteValueSpec parentDiscreteValues) {
    this.parentDiscreteValues = parentDiscreteValues;
  }


  public GoogleCloudMlV1StudyConfigParameterSpec parentIntValues(GoogleCloudMlV1StudyConfigParameterSpecMatchingParentIntValueSpec parentIntValues) {
    this.parentIntValues = parentIntValues;
    return this;
  }

  /**
   * Get parentIntValues
   * @return parentIntValues
   */
  @javax.annotation.Nullable
  public GoogleCloudMlV1StudyConfigParameterSpecMatchingParentIntValueSpec getParentIntValues() {
    return parentIntValues;
  }

  public void setParentIntValues(GoogleCloudMlV1StudyConfigParameterSpecMatchingParentIntValueSpec parentIntValues) {
    this.parentIntValues = parentIntValues;
  }


  public GoogleCloudMlV1StudyConfigParameterSpec scaleType(ScaleTypeEnum scaleType) {
    this.scaleType = scaleType;
    return this;
  }

  /**
   * How the parameter should be scaled. Leave unset for categorical parameters.
   * @return scaleType
   */
  @javax.annotation.Nullable
  public ScaleTypeEnum getScaleType() {
    return scaleType;
  }

  public void setScaleType(ScaleTypeEnum scaleType) {
    this.scaleType = scaleType;
  }


  public GoogleCloudMlV1StudyConfigParameterSpec type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Required. The type of the parameter.
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudMlV1StudyConfigParameterSpec googleCloudMlV1StudyConfigParameterSpec = (GoogleCloudMlV1StudyConfigParameterSpec) o;
    return Objects.equals(this.categoricalValueSpec, googleCloudMlV1StudyConfigParameterSpec.categoricalValueSpec) &&
        Objects.equals(this.childParameterSpecs, googleCloudMlV1StudyConfigParameterSpec.childParameterSpecs) &&
        Objects.equals(this.discreteValueSpec, googleCloudMlV1StudyConfigParameterSpec.discreteValueSpec) &&
        Objects.equals(this.doubleValueSpec, googleCloudMlV1StudyConfigParameterSpec.doubleValueSpec) &&
        Objects.equals(this.integerValueSpec, googleCloudMlV1StudyConfigParameterSpec.integerValueSpec) &&
        Objects.equals(this.parameter, googleCloudMlV1StudyConfigParameterSpec.parameter) &&
        Objects.equals(this.parentCategoricalValues, googleCloudMlV1StudyConfigParameterSpec.parentCategoricalValues) &&
        Objects.equals(this.parentDiscreteValues, googleCloudMlV1StudyConfigParameterSpec.parentDiscreteValues) &&
        Objects.equals(this.parentIntValues, googleCloudMlV1StudyConfigParameterSpec.parentIntValues) &&
        Objects.equals(this.scaleType, googleCloudMlV1StudyConfigParameterSpec.scaleType) &&
        Objects.equals(this.type, googleCloudMlV1StudyConfigParameterSpec.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categoricalValueSpec, childParameterSpecs, discreteValueSpec, doubleValueSpec, integerValueSpec, parameter, parentCategoricalValues, parentDiscreteValues, parentIntValues, scaleType, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudMlV1StudyConfigParameterSpec {\n");
    sb.append("    categoricalValueSpec: ").append(toIndentedString(categoricalValueSpec)).append("\n");
    sb.append("    childParameterSpecs: ").append(toIndentedString(childParameterSpecs)).append("\n");
    sb.append("    discreteValueSpec: ").append(toIndentedString(discreteValueSpec)).append("\n");
    sb.append("    doubleValueSpec: ").append(toIndentedString(doubleValueSpec)).append("\n");
    sb.append("    integerValueSpec: ").append(toIndentedString(integerValueSpec)).append("\n");
    sb.append("    parameter: ").append(toIndentedString(parameter)).append("\n");
    sb.append("    parentCategoricalValues: ").append(toIndentedString(parentCategoricalValues)).append("\n");
    sb.append("    parentDiscreteValues: ").append(toIndentedString(parentDiscreteValues)).append("\n");
    sb.append("    parentIntValues: ").append(toIndentedString(parentIntValues)).append("\n");
    sb.append("    scaleType: ").append(toIndentedString(scaleType)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("categoricalValueSpec");
    openapiFields.add("childParameterSpecs");
    openapiFields.add("discreteValueSpec");
    openapiFields.add("doubleValueSpec");
    openapiFields.add("integerValueSpec");
    openapiFields.add("parameter");
    openapiFields.add("parentCategoricalValues");
    openapiFields.add("parentDiscreteValues");
    openapiFields.add("parentIntValues");
    openapiFields.add("scaleType");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudMlV1StudyConfigParameterSpec
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudMlV1StudyConfigParameterSpec.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudMlV1StudyConfigParameterSpec is not found in the empty JSON string", GoogleCloudMlV1StudyConfigParameterSpec.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudMlV1StudyConfigParameterSpec.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudMlV1StudyConfigParameterSpec` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `categoricalValueSpec`
      if (jsonObj.get("categoricalValueSpec") != null && !jsonObj.get("categoricalValueSpec").isJsonNull()) {
        GoogleCloudMlV1StudyConfigParameterSpecCategoricalValueSpec.validateJsonElement(jsonObj.get("categoricalValueSpec"));
      }
      if (jsonObj.get("childParameterSpecs") != null && !jsonObj.get("childParameterSpecs").isJsonNull()) {
        JsonArray jsonArraychildParameterSpecs = jsonObj.getAsJsonArray("childParameterSpecs");
        if (jsonArraychildParameterSpecs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("childParameterSpecs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `childParameterSpecs` to be an array in the JSON string but got `%s`", jsonObj.get("childParameterSpecs").toString()));
          }

          // validate the optional field `childParameterSpecs` (array)
          for (int i = 0; i < jsonArraychildParameterSpecs.size(); i++) {
            GoogleCloudMlV1StudyConfigParameterSpec.validateJsonElement(jsonArraychildParameterSpecs.get(i));
          };
        }
      }
      // validate the optional field `discreteValueSpec`
      if (jsonObj.get("discreteValueSpec") != null && !jsonObj.get("discreteValueSpec").isJsonNull()) {
        GoogleCloudMlV1StudyConfigParameterSpecDiscreteValueSpec.validateJsonElement(jsonObj.get("discreteValueSpec"));
      }
      // validate the optional field `doubleValueSpec`
      if (jsonObj.get("doubleValueSpec") != null && !jsonObj.get("doubleValueSpec").isJsonNull()) {
        GoogleCloudMlV1StudyConfigParameterSpecDoubleValueSpec.validateJsonElement(jsonObj.get("doubleValueSpec"));
      }
      // validate the optional field `integerValueSpec`
      if (jsonObj.get("integerValueSpec") != null && !jsonObj.get("integerValueSpec").isJsonNull()) {
        GoogleCloudMlV1StudyConfigParameterSpecIntegerValueSpec.validateJsonElement(jsonObj.get("integerValueSpec"));
      }
      if ((jsonObj.get("parameter") != null && !jsonObj.get("parameter").isJsonNull()) && !jsonObj.get("parameter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parameter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parameter").toString()));
      }
      // validate the optional field `parentCategoricalValues`
      if (jsonObj.get("parentCategoricalValues") != null && !jsonObj.get("parentCategoricalValues").isJsonNull()) {
        GoogleCloudMlV1StudyConfigParameterSpecMatchingParentCategoricalValueSpec.validateJsonElement(jsonObj.get("parentCategoricalValues"));
      }
      // validate the optional field `parentDiscreteValues`
      if (jsonObj.get("parentDiscreteValues") != null && !jsonObj.get("parentDiscreteValues").isJsonNull()) {
        GoogleCloudMlV1StudyConfigParameterSpecMatchingParentDiscreteValueSpec.validateJsonElement(jsonObj.get("parentDiscreteValues"));
      }
      // validate the optional field `parentIntValues`
      if (jsonObj.get("parentIntValues") != null && !jsonObj.get("parentIntValues").isJsonNull()) {
        GoogleCloudMlV1StudyConfigParameterSpecMatchingParentIntValueSpec.validateJsonElement(jsonObj.get("parentIntValues"));
      }
      if ((jsonObj.get("scaleType") != null && !jsonObj.get("scaleType").isJsonNull()) && !jsonObj.get("scaleType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scaleType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scaleType").toString()));
      }
      // validate the optional field `scaleType`
      if (jsonObj.get("scaleType") != null && !jsonObj.get("scaleType").isJsonNull()) {
        ScaleTypeEnum.validateJsonElement(jsonObj.get("scaleType"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        TypeEnum.validateJsonElement(jsonObj.get("type"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudMlV1StudyConfigParameterSpec.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudMlV1StudyConfigParameterSpec' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudMlV1StudyConfigParameterSpec> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudMlV1StudyConfigParameterSpec.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudMlV1StudyConfigParameterSpec>() {
           @Override
           public void write(JsonWriter out, GoogleCloudMlV1StudyConfigParameterSpec value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudMlV1StudyConfigParameterSpec read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudMlV1StudyConfigParameterSpec given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudMlV1StudyConfigParameterSpec
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudMlV1StudyConfigParameterSpec
   */
  public static GoogleCloudMlV1StudyConfigParameterSpec fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudMlV1StudyConfigParameterSpec.class);
  }

  /**
   * Convert an instance of GoogleCloudMlV1StudyConfigParameterSpec to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

