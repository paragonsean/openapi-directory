/**
 * AI Platform Training & Prediction API
 * An API to enable creating and using machine learning models.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AiPlatformTrainingPredictionApi);
  }
}(this, function(expect, AiPlatformTrainingPredictionApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AiPlatformTrainingPredictionApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('mlProjectsExplain', function() {
      it('should call mlProjectsExplain successfully', function(done) {
        //uncomment below and update the code to test mlProjectsExplain
        //instance.mlProjectsExplain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsGetConfig', function() {
      it('should call mlProjectsGetConfig successfully', function(done) {
        //uncomment below and update the code to test mlProjectsGetConfig
        //instance.mlProjectsGetConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsJobsCreate', function() {
      it('should call mlProjectsJobsCreate successfully', function(done) {
        //uncomment below and update the code to test mlProjectsJobsCreate
        //instance.mlProjectsJobsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsJobsList', function() {
      it('should call mlProjectsJobsList successfully', function(done) {
        //uncomment below and update the code to test mlProjectsJobsList
        //instance.mlProjectsJobsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsLocationsList', function() {
      it('should call mlProjectsLocationsList successfully', function(done) {
        //uncomment below and update the code to test mlProjectsLocationsList
        //instance.mlProjectsLocationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsLocationsStudiesCreate', function() {
      it('should call mlProjectsLocationsStudiesCreate successfully', function(done) {
        //uncomment below and update the code to test mlProjectsLocationsStudiesCreate
        //instance.mlProjectsLocationsStudiesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsLocationsStudiesList', function() {
      it('should call mlProjectsLocationsStudiesList successfully', function(done) {
        //uncomment below and update the code to test mlProjectsLocationsStudiesList
        //instance.mlProjectsLocationsStudiesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsLocationsStudiesTrialsAddMeasurement', function() {
      it('should call mlProjectsLocationsStudiesTrialsAddMeasurement successfully', function(done) {
        //uncomment below and update the code to test mlProjectsLocationsStudiesTrialsAddMeasurement
        //instance.mlProjectsLocationsStudiesTrialsAddMeasurement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsLocationsStudiesTrialsCheckEarlyStoppingState', function() {
      it('should call mlProjectsLocationsStudiesTrialsCheckEarlyStoppingState successfully', function(done) {
        //uncomment below and update the code to test mlProjectsLocationsStudiesTrialsCheckEarlyStoppingState
        //instance.mlProjectsLocationsStudiesTrialsCheckEarlyStoppingState(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsLocationsStudiesTrialsComplete', function() {
      it('should call mlProjectsLocationsStudiesTrialsComplete successfully', function(done) {
        //uncomment below and update the code to test mlProjectsLocationsStudiesTrialsComplete
        //instance.mlProjectsLocationsStudiesTrialsComplete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsLocationsStudiesTrialsCreate', function() {
      it('should call mlProjectsLocationsStudiesTrialsCreate successfully', function(done) {
        //uncomment below and update the code to test mlProjectsLocationsStudiesTrialsCreate
        //instance.mlProjectsLocationsStudiesTrialsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsLocationsStudiesTrialsList', function() {
      it('should call mlProjectsLocationsStudiesTrialsList successfully', function(done) {
        //uncomment below and update the code to test mlProjectsLocationsStudiesTrialsList
        //instance.mlProjectsLocationsStudiesTrialsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsLocationsStudiesTrialsListOptimalTrials', function() {
      it('should call mlProjectsLocationsStudiesTrialsListOptimalTrials successfully', function(done) {
        //uncomment below and update the code to test mlProjectsLocationsStudiesTrialsListOptimalTrials
        //instance.mlProjectsLocationsStudiesTrialsListOptimalTrials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsLocationsStudiesTrialsStop', function() {
      it('should call mlProjectsLocationsStudiesTrialsStop successfully', function(done) {
        //uncomment below and update the code to test mlProjectsLocationsStudiesTrialsStop
        //instance.mlProjectsLocationsStudiesTrialsStop(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsLocationsStudiesTrialsSuggest', function() {
      it('should call mlProjectsLocationsStudiesTrialsSuggest successfully', function(done) {
        //uncomment below and update the code to test mlProjectsLocationsStudiesTrialsSuggest
        //instance.mlProjectsLocationsStudiesTrialsSuggest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsModelsCreate', function() {
      it('should call mlProjectsModelsCreate successfully', function(done) {
        //uncomment below and update the code to test mlProjectsModelsCreate
        //instance.mlProjectsModelsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsModelsGetIamPolicy', function() {
      it('should call mlProjectsModelsGetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test mlProjectsModelsGetIamPolicy
        //instance.mlProjectsModelsGetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsModelsList', function() {
      it('should call mlProjectsModelsList successfully', function(done) {
        //uncomment below and update the code to test mlProjectsModelsList
        //instance.mlProjectsModelsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsModelsSetIamPolicy', function() {
      it('should call mlProjectsModelsSetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test mlProjectsModelsSetIamPolicy
        //instance.mlProjectsModelsSetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsModelsTestIamPermissions', function() {
      it('should call mlProjectsModelsTestIamPermissions successfully', function(done) {
        //uncomment below and update the code to test mlProjectsModelsTestIamPermissions
        //instance.mlProjectsModelsTestIamPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsModelsVersionsCreate', function() {
      it('should call mlProjectsModelsVersionsCreate successfully', function(done) {
        //uncomment below and update the code to test mlProjectsModelsVersionsCreate
        //instance.mlProjectsModelsVersionsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsModelsVersionsDelete', function() {
      it('should call mlProjectsModelsVersionsDelete successfully', function(done) {
        //uncomment below and update the code to test mlProjectsModelsVersionsDelete
        //instance.mlProjectsModelsVersionsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsModelsVersionsList', function() {
      it('should call mlProjectsModelsVersionsList successfully', function(done) {
        //uncomment below and update the code to test mlProjectsModelsVersionsList
        //instance.mlProjectsModelsVersionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsModelsVersionsPatch', function() {
      it('should call mlProjectsModelsVersionsPatch successfully', function(done) {
        //uncomment below and update the code to test mlProjectsModelsVersionsPatch
        //instance.mlProjectsModelsVersionsPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsModelsVersionsSetDefault', function() {
      it('should call mlProjectsModelsVersionsSetDefault successfully', function(done) {
        //uncomment below and update the code to test mlProjectsModelsVersionsSetDefault
        //instance.mlProjectsModelsVersionsSetDefault(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsOperationsCancel', function() {
      it('should call mlProjectsOperationsCancel successfully', function(done) {
        //uncomment below and update the code to test mlProjectsOperationsCancel
        //instance.mlProjectsOperationsCancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsOperationsGet', function() {
      it('should call mlProjectsOperationsGet successfully', function(done) {
        //uncomment below and update the code to test mlProjectsOperationsGet
        //instance.mlProjectsOperationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsOperationsList', function() {
      it('should call mlProjectsOperationsList successfully', function(done) {
        //uncomment below and update the code to test mlProjectsOperationsList
        //instance.mlProjectsOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mlProjectsPredict', function() {
      it('should call mlProjectsPredict successfully', function(done) {
        //uncomment below and update the code to test mlProjectsPredict
        //instance.mlProjectsPredict(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
