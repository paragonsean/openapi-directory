/**
 * AI Platform Training & Prediction API
 * An API to enable creating and using machine learning models.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudMlV1StudyConfig from './GoogleCloudMlV1StudyConfig';

/**
 * The GoogleCloudMlV1Study model module.
 * @module model/GoogleCloudMlV1Study
 * @version v1
 */
class GoogleCloudMlV1Study {
    /**
     * Constructs a new <code>GoogleCloudMlV1Study</code>.
     * A message representing a Study.
     * @alias module:model/GoogleCloudMlV1Study
     */
    constructor() { 
        
        GoogleCloudMlV1Study.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudMlV1Study</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudMlV1Study} obj Optional instance to populate.
     * @return {module:model/GoogleCloudMlV1Study} The populated <code>GoogleCloudMlV1Study</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudMlV1Study();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('inactiveReason')) {
                obj['inactiveReason'] = ApiClient.convertToType(data['inactiveReason'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('studyConfig')) {
                obj['studyConfig'] = GoogleCloudMlV1StudyConfig.constructFromObject(data['studyConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudMlV1Study</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudMlV1Study</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['inactiveReason'] && !(typeof data['inactiveReason'] === 'string' || data['inactiveReason'] instanceof String)) {
            throw new Error("Expected the field `inactiveReason` to be a primitive type in the JSON string but got " + data['inactiveReason']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // validate the optional field `studyConfig`
        if (data['studyConfig']) { // data not null
          GoogleCloudMlV1StudyConfig.validateJSON(data['studyConfig']);
        }

        return true;
    }


}



/**
 * Output only. Time at which the study was created.
 * @member {String} createTime
 */
GoogleCloudMlV1Study.prototype['createTime'] = undefined;

/**
 * Output only. A human readable reason why the Study is inactive. This should be empty if a study is ACTIVE or COMPLETED.
 * @member {String} inactiveReason
 */
GoogleCloudMlV1Study.prototype['inactiveReason'] = undefined;

/**
 * Output only. The name of a study.
 * @member {String} name
 */
GoogleCloudMlV1Study.prototype['name'] = undefined;

/**
 * Output only. The detailed state of a study.
 * @member {module:model/GoogleCloudMlV1Study.StateEnum} state
 */
GoogleCloudMlV1Study.prototype['state'] = undefined;

/**
 * @member {module:model/GoogleCloudMlV1StudyConfig} studyConfig
 */
GoogleCloudMlV1Study.prototype['studyConfig'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudMlV1Study['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "INACTIVE"
     * @const
     */
    "INACTIVE": "INACTIVE",

    /**
     * value: "COMPLETED"
     * @const
     */
    "COMPLETED": "COMPLETED"
};



export default GoogleCloudMlV1Study;

