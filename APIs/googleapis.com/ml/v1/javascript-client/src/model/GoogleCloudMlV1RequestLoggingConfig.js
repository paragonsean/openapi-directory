/**
 * AI Platform Training & Prediction API
 * An API to enable creating and using machine learning models.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudMlV1RequestLoggingConfig model module.
 * @module model/GoogleCloudMlV1RequestLoggingConfig
 * @version v1
 */
class GoogleCloudMlV1RequestLoggingConfig {
    /**
     * Constructs a new <code>GoogleCloudMlV1RequestLoggingConfig</code>.
     * Configuration for logging request-response pairs to a BigQuery table. Online prediction requests to a model version and the responses to these requests are converted to raw strings and saved to the specified BigQuery table. Logging is constrained by [BigQuery quotas and limits](/bigquery/quotas). If your project exceeds BigQuery quotas or limits, AI Platform Prediction does not log request-response pairs, but it continues to serve predictions. If you are using [continuous evaluation](/ml-engine/docs/continuous-evaluation/), you do not need to specify this configuration manually. Setting up continuous evaluation automatically enables logging of request-response pairs.
     * @alias module:model/GoogleCloudMlV1RequestLoggingConfig
     */
    constructor() { 
        
        GoogleCloudMlV1RequestLoggingConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudMlV1RequestLoggingConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudMlV1RequestLoggingConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudMlV1RequestLoggingConfig} The populated <code>GoogleCloudMlV1RequestLoggingConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudMlV1RequestLoggingConfig();

            if (data.hasOwnProperty('bigqueryTableName')) {
                obj['bigqueryTableName'] = ApiClient.convertToType(data['bigqueryTableName'], 'String');
            }
            if (data.hasOwnProperty('samplingPercentage')) {
                obj['samplingPercentage'] = ApiClient.convertToType(data['samplingPercentage'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudMlV1RequestLoggingConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudMlV1RequestLoggingConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bigqueryTableName'] && !(typeof data['bigqueryTableName'] === 'string' || data['bigqueryTableName'] instanceof String)) {
            throw new Error("Expected the field `bigqueryTableName` to be a primitive type in the JSON string but got " + data['bigqueryTableName']);
        }

        return true;
    }


}



/**
 * Required. Fully qualified BigQuery table name in the following format: \" project_id.dataset_name.table_name\" The specified table must already exist, and the \"Cloud ML Service Agent\" for your project must have permission to write to it. The table must have the following [schema](/bigquery/docs/schemas): Field nameType Mode model STRING REQUIRED model_version STRING REQUIRED time TIMESTAMP REQUIRED raw_data STRING REQUIRED raw_prediction STRING NULLABLE groundtruth STRING NULLABLE 
 * @member {String} bigqueryTableName
 */
GoogleCloudMlV1RequestLoggingConfig.prototype['bigqueryTableName'] = undefined;

/**
 * Percentage of requests to be logged, expressed as a fraction from 0 to 1. For example, if you want to log 10% of requests, enter `0.1`. The sampling window is the lifetime of the model version. Defaults to 0.
 * @member {Number} samplingPercentage
 */
GoogleCloudMlV1RequestLoggingConfig.prototype['samplingPercentage'] = undefined;






export default GoogleCloudMlV1RequestLoggingConfig;

