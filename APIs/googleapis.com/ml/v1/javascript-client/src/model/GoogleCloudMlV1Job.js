/**
 * AI Platform Training & Prediction API
 * An API to enable creating and using machine learning models.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudMlV1PredictionInput from './GoogleCloudMlV1PredictionInput';
import GoogleCloudMlV1PredictionOutput from './GoogleCloudMlV1PredictionOutput';
import GoogleCloudMlV1TrainingInput from './GoogleCloudMlV1TrainingInput';
import GoogleCloudMlV1TrainingOutput from './GoogleCloudMlV1TrainingOutput';

/**
 * The GoogleCloudMlV1Job model module.
 * @module model/GoogleCloudMlV1Job
 * @version v1
 */
class GoogleCloudMlV1Job {
    /**
     * Constructs a new <code>GoogleCloudMlV1Job</code>.
     * Represents a training or prediction job.
     * @alias module:model/GoogleCloudMlV1Job
     */
    constructor() { 
        
        GoogleCloudMlV1Job.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudMlV1Job</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudMlV1Job} obj Optional instance to populate.
     * @return {module:model/GoogleCloudMlV1Job} The populated <code>GoogleCloudMlV1Job</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudMlV1Job();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('errorMessage')) {
                obj['errorMessage'] = ApiClient.convertToType(data['errorMessage'], 'String');
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'Blob');
            }
            if (data.hasOwnProperty('jobId')) {
                obj['jobId'] = ApiClient.convertToType(data['jobId'], 'String');
            }
            if (data.hasOwnProperty('jobPosition')) {
                obj['jobPosition'] = ApiClient.convertToType(data['jobPosition'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('predictionInput')) {
                obj['predictionInput'] = GoogleCloudMlV1PredictionInput.constructFromObject(data['predictionInput']);
            }
            if (data.hasOwnProperty('predictionOutput')) {
                obj['predictionOutput'] = GoogleCloudMlV1PredictionOutput.constructFromObject(data['predictionOutput']);
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('trainingInput')) {
                obj['trainingInput'] = GoogleCloudMlV1TrainingInput.constructFromObject(data['trainingInput']);
            }
            if (data.hasOwnProperty('trainingOutput')) {
                obj['trainingOutput'] = GoogleCloudMlV1TrainingOutput.constructFromObject(data['trainingOutput']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudMlV1Job</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudMlV1Job</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        // ensure the json data is a string
        if (data['errorMessage'] && !(typeof data['errorMessage'] === 'string' || data['errorMessage'] instanceof String)) {
            throw new Error("Expected the field `errorMessage` to be a primitive type in the JSON string but got " + data['errorMessage']);
        }
        // ensure the json data is a string
        if (data['jobId'] && !(typeof data['jobId'] === 'string' || data['jobId'] instanceof String)) {
            throw new Error("Expected the field `jobId` to be a primitive type in the JSON string but got " + data['jobId']);
        }
        // ensure the json data is a string
        if (data['jobPosition'] && !(typeof data['jobPosition'] === 'string' || data['jobPosition'] instanceof String)) {
            throw new Error("Expected the field `jobPosition` to be a primitive type in the JSON string but got " + data['jobPosition']);
        }
        // validate the optional field `predictionInput`
        if (data['predictionInput']) { // data not null
          GoogleCloudMlV1PredictionInput.validateJSON(data['predictionInput']);
        }
        // validate the optional field `predictionOutput`
        if (data['predictionOutput']) { // data not null
          GoogleCloudMlV1PredictionOutput.validateJSON(data['predictionOutput']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // validate the optional field `trainingInput`
        if (data['trainingInput']) { // data not null
          GoogleCloudMlV1TrainingInput.validateJSON(data['trainingInput']);
        }
        // validate the optional field `trainingOutput`
        if (data['trainingOutput']) { // data not null
          GoogleCloudMlV1TrainingOutput.validateJSON(data['trainingOutput']);
        }

        return true;
    }


}



/**
 * Output only. When the job was created.
 * @member {String} createTime
 */
GoogleCloudMlV1Job.prototype['createTime'] = undefined;

/**
 * Output only. When the job processing was completed.
 * @member {String} endTime
 */
GoogleCloudMlV1Job.prototype['endTime'] = undefined;

/**
 * Output only. The details of a failure or a cancellation.
 * @member {String} errorMessage
 */
GoogleCloudMlV1Job.prototype['errorMessage'] = undefined;

/**
 * `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a job from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform job updates in order to avoid race conditions: An `etag` is returned in the response to `GetJob`, and systems are expected to put that etag in the request to `UpdateJob` to ensure that their change will be applied to the same version of the job.
 * @member {Blob} etag
 */
GoogleCloudMlV1Job.prototype['etag'] = undefined;

/**
 * Required. The user-specified id of the job.
 * @member {String} jobId
 */
GoogleCloudMlV1Job.prototype['jobId'] = undefined;

/**
 * Output only. It's only effect when the job is in QUEUED state. If it's positive, it indicates the job's position in the job scheduler. It's 0 when the job is already scheduled.
 * @member {String} jobPosition
 */
GoogleCloudMlV1Job.prototype['jobPosition'] = undefined;

/**
 * Optional. One or more labels that you can add, to organize your jobs. Each label is a key-value pair, where both the key and the value are arbitrary strings that you supply. For more information, see the documentation on using labels.
 * @member {Object.<String, String>} labels
 */
GoogleCloudMlV1Job.prototype['labels'] = undefined;

/**
 * @member {module:model/GoogleCloudMlV1PredictionInput} predictionInput
 */
GoogleCloudMlV1Job.prototype['predictionInput'] = undefined;

/**
 * @member {module:model/GoogleCloudMlV1PredictionOutput} predictionOutput
 */
GoogleCloudMlV1Job.prototype['predictionOutput'] = undefined;

/**
 * Output only. When the job processing was started.
 * @member {String} startTime
 */
GoogleCloudMlV1Job.prototype['startTime'] = undefined;

/**
 * Output only. The detailed state of a job.
 * @member {module:model/GoogleCloudMlV1Job.StateEnum} state
 */
GoogleCloudMlV1Job.prototype['state'] = undefined;

/**
 * @member {module:model/GoogleCloudMlV1TrainingInput} trainingInput
 */
GoogleCloudMlV1Job.prototype['trainingInput'] = undefined;

/**
 * @member {module:model/GoogleCloudMlV1TrainingOutput} trainingOutput
 */
GoogleCloudMlV1Job.prototype['trainingOutput'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudMlV1Job['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "QUEUED"
     * @const
     */
    "QUEUED": "QUEUED",

    /**
     * value: "PREPARING"
     * @const
     */
    "PREPARING": "PREPARING",

    /**
     * value: "RUNNING"
     * @const
     */
    "RUNNING": "RUNNING",

    /**
     * value: "SUCCEEDED"
     * @const
     */
    "SUCCEEDED": "SUCCEEDED",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "CANCELLING"
     * @const
     */
    "CANCELLING": "CANCELLING",

    /**
     * value: "CANCELLED"
     * @const
     */
    "CANCELLED": "CANCELLED"
};



export default GoogleCloudMlV1Job;

