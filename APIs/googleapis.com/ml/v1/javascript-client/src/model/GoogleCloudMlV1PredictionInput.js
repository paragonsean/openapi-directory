/**
 * AI Platform Training & Prediction API
 * An API to enable creating and using machine learning models.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudMlV1PredictionInput model module.
 * @module model/GoogleCloudMlV1PredictionInput
 * @version v1
 */
class GoogleCloudMlV1PredictionInput {
    /**
     * Constructs a new <code>GoogleCloudMlV1PredictionInput</code>.
     * Represents input parameters for a prediction job.
     * @alias module:model/GoogleCloudMlV1PredictionInput
     */
    constructor() { 
        
        GoogleCloudMlV1PredictionInput.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudMlV1PredictionInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudMlV1PredictionInput} obj Optional instance to populate.
     * @return {module:model/GoogleCloudMlV1PredictionInput} The populated <code>GoogleCloudMlV1PredictionInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudMlV1PredictionInput();

            if (data.hasOwnProperty('batchSize')) {
                obj['batchSize'] = ApiClient.convertToType(data['batchSize'], 'String');
            }
            if (data.hasOwnProperty('dataFormat')) {
                obj['dataFormat'] = ApiClient.convertToType(data['dataFormat'], 'String');
            }
            if (data.hasOwnProperty('inputPaths')) {
                obj['inputPaths'] = ApiClient.convertToType(data['inputPaths'], ['String']);
            }
            if (data.hasOwnProperty('maxWorkerCount')) {
                obj['maxWorkerCount'] = ApiClient.convertToType(data['maxWorkerCount'], 'String');
            }
            if (data.hasOwnProperty('modelName')) {
                obj['modelName'] = ApiClient.convertToType(data['modelName'], 'String');
            }
            if (data.hasOwnProperty('outputDataFormat')) {
                obj['outputDataFormat'] = ApiClient.convertToType(data['outputDataFormat'], 'String');
            }
            if (data.hasOwnProperty('outputPath')) {
                obj['outputPath'] = ApiClient.convertToType(data['outputPath'], 'String');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
            if (data.hasOwnProperty('runtimeVersion')) {
                obj['runtimeVersion'] = ApiClient.convertToType(data['runtimeVersion'], 'String');
            }
            if (data.hasOwnProperty('signatureName')) {
                obj['signatureName'] = ApiClient.convertToType(data['signatureName'], 'String');
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
            if (data.hasOwnProperty('versionName')) {
                obj['versionName'] = ApiClient.convertToType(data['versionName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudMlV1PredictionInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudMlV1PredictionInput</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['batchSize'] && !(typeof data['batchSize'] === 'string' || data['batchSize'] instanceof String)) {
            throw new Error("Expected the field `batchSize` to be a primitive type in the JSON string but got " + data['batchSize']);
        }
        // ensure the json data is a string
        if (data['dataFormat'] && !(typeof data['dataFormat'] === 'string' || data['dataFormat'] instanceof String)) {
            throw new Error("Expected the field `dataFormat` to be a primitive type in the JSON string but got " + data['dataFormat']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['inputPaths'])) {
            throw new Error("Expected the field `inputPaths` to be an array in the JSON data but got " + data['inputPaths']);
        }
        // ensure the json data is a string
        if (data['maxWorkerCount'] && !(typeof data['maxWorkerCount'] === 'string' || data['maxWorkerCount'] instanceof String)) {
            throw new Error("Expected the field `maxWorkerCount` to be a primitive type in the JSON string but got " + data['maxWorkerCount']);
        }
        // ensure the json data is a string
        if (data['modelName'] && !(typeof data['modelName'] === 'string' || data['modelName'] instanceof String)) {
            throw new Error("Expected the field `modelName` to be a primitive type in the JSON string but got " + data['modelName']);
        }
        // ensure the json data is a string
        if (data['outputDataFormat'] && !(typeof data['outputDataFormat'] === 'string' || data['outputDataFormat'] instanceof String)) {
            throw new Error("Expected the field `outputDataFormat` to be a primitive type in the JSON string but got " + data['outputDataFormat']);
        }
        // ensure the json data is a string
        if (data['outputPath'] && !(typeof data['outputPath'] === 'string' || data['outputPath'] instanceof String)) {
            throw new Error("Expected the field `outputPath` to be a primitive type in the JSON string but got " + data['outputPath']);
        }
        // ensure the json data is a string
        if (data['region'] && !(typeof data['region'] === 'string' || data['region'] instanceof String)) {
            throw new Error("Expected the field `region` to be a primitive type in the JSON string but got " + data['region']);
        }
        // ensure the json data is a string
        if (data['runtimeVersion'] && !(typeof data['runtimeVersion'] === 'string' || data['runtimeVersion'] instanceof String)) {
            throw new Error("Expected the field `runtimeVersion` to be a primitive type in the JSON string but got " + data['runtimeVersion']);
        }
        // ensure the json data is a string
        if (data['signatureName'] && !(typeof data['signatureName'] === 'string' || data['signatureName'] instanceof String)) {
            throw new Error("Expected the field `signatureName` to be a primitive type in the JSON string but got " + data['signatureName']);
        }
        // ensure the json data is a string
        if (data['uri'] && !(typeof data['uri'] === 'string' || data['uri'] instanceof String)) {
            throw new Error("Expected the field `uri` to be a primitive type in the JSON string but got " + data['uri']);
        }
        // ensure the json data is a string
        if (data['versionName'] && !(typeof data['versionName'] === 'string' || data['versionName'] instanceof String)) {
            throw new Error("Expected the field `versionName` to be a primitive type in the JSON string but got " + data['versionName']);
        }

        return true;
    }


}



/**
 * Optional. Number of records per batch, defaults to 64. The service will buffer batch_size number of records in memory before invoking one Tensorflow prediction call internally. So take the record size and memory available into consideration when setting this parameter.
 * @member {String} batchSize
 */
GoogleCloudMlV1PredictionInput.prototype['batchSize'] = undefined;

/**
 * Required. The format of the input data files.
 * @member {module:model/GoogleCloudMlV1PredictionInput.DataFormatEnum} dataFormat
 */
GoogleCloudMlV1PredictionInput.prototype['dataFormat'] = undefined;

/**
 * Required. The Cloud Storage location of the input data files. May contain wildcards.
 * @member {Array.<String>} inputPaths
 */
GoogleCloudMlV1PredictionInput.prototype['inputPaths'] = undefined;

/**
 * Optional. The maximum number of workers to be used for parallel processing. Defaults to 10 if not specified.
 * @member {String} maxWorkerCount
 */
GoogleCloudMlV1PredictionInput.prototype['maxWorkerCount'] = undefined;

/**
 * Use this field if you want to use the default version for the specified model. The string must use the following format: `\"projects/YOUR_PROJECT/models/YOUR_MODEL\"`
 * @member {String} modelName
 */
GoogleCloudMlV1PredictionInput.prototype['modelName'] = undefined;

/**
 * Optional. Format of the output data files, defaults to JSON.
 * @member {module:model/GoogleCloudMlV1PredictionInput.OutputDataFormatEnum} outputDataFormat
 */
GoogleCloudMlV1PredictionInput.prototype['outputDataFormat'] = undefined;

/**
 * Required. The output Google Cloud Storage location.
 * @member {String} outputPath
 */
GoogleCloudMlV1PredictionInput.prototype['outputPath'] = undefined;

/**
 * Required. The Google Compute Engine region to run the prediction job in. See the available regions for AI Platform services.
 * @member {String} region
 */
GoogleCloudMlV1PredictionInput.prototype['region'] = undefined;

/**
 * Optional. The AI Platform runtime version to use for this batch prediction. If not set, AI Platform will pick the runtime version used during the CreateVersion request for this model version, or choose the latest stable version when model version information is not available such as when the model is specified by uri.
 * @member {String} runtimeVersion
 */
GoogleCloudMlV1PredictionInput.prototype['runtimeVersion'] = undefined;

/**
 * Optional. The name of the signature defined in the SavedModel to use for this job. Please refer to [SavedModel](https://tensorflow.github.io/serving/serving_basic.html) for information about how to use signatures. Defaults to [DEFAULT_SERVING_SIGNATURE_DEF_KEY](https://www.tensorflow.org/api_docs/python/tf/saved_model/signature_constants) , which is \"serving_default\".
 * @member {String} signatureName
 */
GoogleCloudMlV1PredictionInput.prototype['signatureName'] = undefined;

/**
 * Use this field if you want to specify a Google Cloud Storage path for the model to use.
 * @member {String} uri
 */
GoogleCloudMlV1PredictionInput.prototype['uri'] = undefined;

/**
 * Use this field if you want to specify a version of the model to use. The string is formatted the same way as `model_version`, with the addition of the version information: `\"projects/YOUR_PROJECT/models/YOUR_MODEL/versions/YOUR_VERSION\"`
 * @member {String} versionName
 */
GoogleCloudMlV1PredictionInput.prototype['versionName'] = undefined;





/**
 * Allowed values for the <code>dataFormat</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudMlV1PredictionInput['DataFormatEnum'] = {

    /**
     * value: "DATA_FORMAT_UNSPECIFIED"
     * @const
     */
    "DATA_FORMAT_UNSPECIFIED": "DATA_FORMAT_UNSPECIFIED",

    /**
     * value: "JSON"
     * @const
     */
    "JSON": "JSON",

    /**
     * value: "TEXT"
     * @const
     */
    "TEXT": "TEXT",

    /**
     * value: "TF_RECORD"
     * @const
     */
    "TF_RECORD": "TF_RECORD",

    /**
     * value: "TF_RECORD_GZIP"
     * @const
     */
    "TF_RECORD_GZIP": "TF_RECORD_GZIP",

    /**
     * value: "CSV"
     * @const
     */
    "CSV": "CSV"
};


/**
 * Allowed values for the <code>outputDataFormat</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudMlV1PredictionInput['OutputDataFormatEnum'] = {

    /**
     * value: "DATA_FORMAT_UNSPECIFIED"
     * @const
     */
    "DATA_FORMAT_UNSPECIFIED": "DATA_FORMAT_UNSPECIFIED",

    /**
     * value: "JSON"
     * @const
     */
    "JSON": "JSON",

    /**
     * value: "TEXT"
     * @const
     */
    "TEXT": "TEXT",

    /**
     * value: "TF_RECORD"
     * @const
     */
    "TF_RECORD": "TF_RECORD",

    /**
     * value: "TF_RECORD_GZIP"
     * @const
     */
    "TF_RECORD_GZIP": "TF_RECORD_GZIP",

    /**
     * value: "CSV"
     * @const
     */
    "CSV": "CSV"
};



export default GoogleCloudMlV1PredictionInput;

