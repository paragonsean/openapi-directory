/**
 * AI Platform Training & Prediction API
 * An API to enable creating and using machine learning models.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudMlV1EncryptionConfig from './GoogleCloudMlV1EncryptionConfig';
import GoogleCloudMlV1HyperparameterSpec from './GoogleCloudMlV1HyperparameterSpec';
import GoogleCloudMlV1ReplicaConfig from './GoogleCloudMlV1ReplicaConfig';
import GoogleCloudMlV1Scheduling from './GoogleCloudMlV1Scheduling';

/**
 * The GoogleCloudMlV1TrainingInput model module.
 * @module model/GoogleCloudMlV1TrainingInput
 * @version v1
 */
class GoogleCloudMlV1TrainingInput {
    /**
     * Constructs a new <code>GoogleCloudMlV1TrainingInput</code>.
     * Represents input parameters for a training job. When using the gcloud command to submit your training job, you can specify the input parameters as command-line arguments and/or in a YAML configuration file referenced from the --config command-line argument. For details, see the guide to [submitting a training job](/ai-platform/training/docs/training-jobs).
     * @alias module:model/GoogleCloudMlV1TrainingInput
     */
    constructor() { 
        
        GoogleCloudMlV1TrainingInput.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudMlV1TrainingInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudMlV1TrainingInput} obj Optional instance to populate.
     * @return {module:model/GoogleCloudMlV1TrainingInput} The populated <code>GoogleCloudMlV1TrainingInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudMlV1TrainingInput();

            if (data.hasOwnProperty('args')) {
                obj['args'] = ApiClient.convertToType(data['args'], ['String']);
            }
            if (data.hasOwnProperty('enableWebAccess')) {
                obj['enableWebAccess'] = ApiClient.convertToType(data['enableWebAccess'], 'Boolean');
            }
            if (data.hasOwnProperty('encryptionConfig')) {
                obj['encryptionConfig'] = GoogleCloudMlV1EncryptionConfig.constructFromObject(data['encryptionConfig']);
            }
            if (data.hasOwnProperty('evaluatorConfig')) {
                obj['evaluatorConfig'] = GoogleCloudMlV1ReplicaConfig.constructFromObject(data['evaluatorConfig']);
            }
            if (data.hasOwnProperty('evaluatorCount')) {
                obj['evaluatorCount'] = ApiClient.convertToType(data['evaluatorCount'], 'String');
            }
            if (data.hasOwnProperty('evaluatorType')) {
                obj['evaluatorType'] = ApiClient.convertToType(data['evaluatorType'], 'String');
            }
            if (data.hasOwnProperty('hyperparameters')) {
                obj['hyperparameters'] = GoogleCloudMlV1HyperparameterSpec.constructFromObject(data['hyperparameters']);
            }
            if (data.hasOwnProperty('jobDir')) {
                obj['jobDir'] = ApiClient.convertToType(data['jobDir'], 'String');
            }
            if (data.hasOwnProperty('masterConfig')) {
                obj['masterConfig'] = GoogleCloudMlV1ReplicaConfig.constructFromObject(data['masterConfig']);
            }
            if (data.hasOwnProperty('masterType')) {
                obj['masterType'] = ApiClient.convertToType(data['masterType'], 'String');
            }
            if (data.hasOwnProperty('network')) {
                obj['network'] = ApiClient.convertToType(data['network'], 'String');
            }
            if (data.hasOwnProperty('packageUris')) {
                obj['packageUris'] = ApiClient.convertToType(data['packageUris'], ['String']);
            }
            if (data.hasOwnProperty('parameterServerConfig')) {
                obj['parameterServerConfig'] = GoogleCloudMlV1ReplicaConfig.constructFromObject(data['parameterServerConfig']);
            }
            if (data.hasOwnProperty('parameterServerCount')) {
                obj['parameterServerCount'] = ApiClient.convertToType(data['parameterServerCount'], 'String');
            }
            if (data.hasOwnProperty('parameterServerType')) {
                obj['parameterServerType'] = ApiClient.convertToType(data['parameterServerType'], 'String');
            }
            if (data.hasOwnProperty('pythonModule')) {
                obj['pythonModule'] = ApiClient.convertToType(data['pythonModule'], 'String');
            }
            if (data.hasOwnProperty('pythonVersion')) {
                obj['pythonVersion'] = ApiClient.convertToType(data['pythonVersion'], 'String');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
            if (data.hasOwnProperty('runtimeVersion')) {
                obj['runtimeVersion'] = ApiClient.convertToType(data['runtimeVersion'], 'String');
            }
            if (data.hasOwnProperty('scaleTier')) {
                obj['scaleTier'] = ApiClient.convertToType(data['scaleTier'], 'String');
            }
            if (data.hasOwnProperty('scheduling')) {
                obj['scheduling'] = GoogleCloudMlV1Scheduling.constructFromObject(data['scheduling']);
            }
            if (data.hasOwnProperty('serviceAccount')) {
                obj['serviceAccount'] = ApiClient.convertToType(data['serviceAccount'], 'String');
            }
            if (data.hasOwnProperty('useChiefInTfConfig')) {
                obj['useChiefInTfConfig'] = ApiClient.convertToType(data['useChiefInTfConfig'], 'Boolean');
            }
            if (data.hasOwnProperty('workerConfig')) {
                obj['workerConfig'] = GoogleCloudMlV1ReplicaConfig.constructFromObject(data['workerConfig']);
            }
            if (data.hasOwnProperty('workerCount')) {
                obj['workerCount'] = ApiClient.convertToType(data['workerCount'], 'String');
            }
            if (data.hasOwnProperty('workerType')) {
                obj['workerType'] = ApiClient.convertToType(data['workerType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudMlV1TrainingInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudMlV1TrainingInput</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['args'])) {
            throw new Error("Expected the field `args` to be an array in the JSON data but got " + data['args']);
        }
        // validate the optional field `encryptionConfig`
        if (data['encryptionConfig']) { // data not null
          GoogleCloudMlV1EncryptionConfig.validateJSON(data['encryptionConfig']);
        }
        // validate the optional field `evaluatorConfig`
        if (data['evaluatorConfig']) { // data not null
          GoogleCloudMlV1ReplicaConfig.validateJSON(data['evaluatorConfig']);
        }
        // ensure the json data is a string
        if (data['evaluatorCount'] && !(typeof data['evaluatorCount'] === 'string' || data['evaluatorCount'] instanceof String)) {
            throw new Error("Expected the field `evaluatorCount` to be a primitive type in the JSON string but got " + data['evaluatorCount']);
        }
        // ensure the json data is a string
        if (data['evaluatorType'] && !(typeof data['evaluatorType'] === 'string' || data['evaluatorType'] instanceof String)) {
            throw new Error("Expected the field `evaluatorType` to be a primitive type in the JSON string but got " + data['evaluatorType']);
        }
        // validate the optional field `hyperparameters`
        if (data['hyperparameters']) { // data not null
          GoogleCloudMlV1HyperparameterSpec.validateJSON(data['hyperparameters']);
        }
        // ensure the json data is a string
        if (data['jobDir'] && !(typeof data['jobDir'] === 'string' || data['jobDir'] instanceof String)) {
            throw new Error("Expected the field `jobDir` to be a primitive type in the JSON string but got " + data['jobDir']);
        }
        // validate the optional field `masterConfig`
        if (data['masterConfig']) { // data not null
          GoogleCloudMlV1ReplicaConfig.validateJSON(data['masterConfig']);
        }
        // ensure the json data is a string
        if (data['masterType'] && !(typeof data['masterType'] === 'string' || data['masterType'] instanceof String)) {
            throw new Error("Expected the field `masterType` to be a primitive type in the JSON string but got " + data['masterType']);
        }
        // ensure the json data is a string
        if (data['network'] && !(typeof data['network'] === 'string' || data['network'] instanceof String)) {
            throw new Error("Expected the field `network` to be a primitive type in the JSON string but got " + data['network']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['packageUris'])) {
            throw new Error("Expected the field `packageUris` to be an array in the JSON data but got " + data['packageUris']);
        }
        // validate the optional field `parameterServerConfig`
        if (data['parameterServerConfig']) { // data not null
          GoogleCloudMlV1ReplicaConfig.validateJSON(data['parameterServerConfig']);
        }
        // ensure the json data is a string
        if (data['parameterServerCount'] && !(typeof data['parameterServerCount'] === 'string' || data['parameterServerCount'] instanceof String)) {
            throw new Error("Expected the field `parameterServerCount` to be a primitive type in the JSON string but got " + data['parameterServerCount']);
        }
        // ensure the json data is a string
        if (data['parameterServerType'] && !(typeof data['parameterServerType'] === 'string' || data['parameterServerType'] instanceof String)) {
            throw new Error("Expected the field `parameterServerType` to be a primitive type in the JSON string but got " + data['parameterServerType']);
        }
        // ensure the json data is a string
        if (data['pythonModule'] && !(typeof data['pythonModule'] === 'string' || data['pythonModule'] instanceof String)) {
            throw new Error("Expected the field `pythonModule` to be a primitive type in the JSON string but got " + data['pythonModule']);
        }
        // ensure the json data is a string
        if (data['pythonVersion'] && !(typeof data['pythonVersion'] === 'string' || data['pythonVersion'] instanceof String)) {
            throw new Error("Expected the field `pythonVersion` to be a primitive type in the JSON string but got " + data['pythonVersion']);
        }
        // ensure the json data is a string
        if (data['region'] && !(typeof data['region'] === 'string' || data['region'] instanceof String)) {
            throw new Error("Expected the field `region` to be a primitive type in the JSON string but got " + data['region']);
        }
        // ensure the json data is a string
        if (data['runtimeVersion'] && !(typeof data['runtimeVersion'] === 'string' || data['runtimeVersion'] instanceof String)) {
            throw new Error("Expected the field `runtimeVersion` to be a primitive type in the JSON string but got " + data['runtimeVersion']);
        }
        // ensure the json data is a string
        if (data['scaleTier'] && !(typeof data['scaleTier'] === 'string' || data['scaleTier'] instanceof String)) {
            throw new Error("Expected the field `scaleTier` to be a primitive type in the JSON string but got " + data['scaleTier']);
        }
        // validate the optional field `scheduling`
        if (data['scheduling']) { // data not null
          GoogleCloudMlV1Scheduling.validateJSON(data['scheduling']);
        }
        // ensure the json data is a string
        if (data['serviceAccount'] && !(typeof data['serviceAccount'] === 'string' || data['serviceAccount'] instanceof String)) {
            throw new Error("Expected the field `serviceAccount` to be a primitive type in the JSON string but got " + data['serviceAccount']);
        }
        // validate the optional field `workerConfig`
        if (data['workerConfig']) { // data not null
          GoogleCloudMlV1ReplicaConfig.validateJSON(data['workerConfig']);
        }
        // ensure the json data is a string
        if (data['workerCount'] && !(typeof data['workerCount'] === 'string' || data['workerCount'] instanceof String)) {
            throw new Error("Expected the field `workerCount` to be a primitive type in the JSON string but got " + data['workerCount']);
        }
        // ensure the json data is a string
        if (data['workerType'] && !(typeof data['workerType'] === 'string' || data['workerType'] instanceof String)) {
            throw new Error("Expected the field `workerType` to be a primitive type in the JSON string but got " + data['workerType']);
        }

        return true;
    }


}



/**
 * Optional. Command-line arguments passed to the training application when it starts. If your job uses a custom container, then the arguments are passed to the container's `ENTRYPOINT` command.
 * @member {Array.<String>} args
 */
GoogleCloudMlV1TrainingInput.prototype['args'] = undefined;

/**
 * Optional. Whether you want AI Platform Training to enable [interactive shell access](https://cloud.google.com/ai-platform/training/docs/monitor-debug-interactive-shell) to training containers. If set to `true`, you can access interactive shells at the URIs given by TrainingOutput.web_access_uris or HyperparameterOutput.web_access_uris (within TrainingOutput.trials).
 * @member {Boolean} enableWebAccess
 */
GoogleCloudMlV1TrainingInput.prototype['enableWebAccess'] = undefined;

/**
 * @member {module:model/GoogleCloudMlV1EncryptionConfig} encryptionConfig
 */
GoogleCloudMlV1TrainingInput.prototype['encryptionConfig'] = undefined;

/**
 * @member {module:model/GoogleCloudMlV1ReplicaConfig} evaluatorConfig
 */
GoogleCloudMlV1TrainingInput.prototype['evaluatorConfig'] = undefined;

/**
 * Optional. The number of evaluator replicas to use for the training job. Each replica in the cluster will be of the type specified in `evaluator_type`. This value can only be used when `scale_tier` is set to `CUSTOM`. If you set this value, you must also set `evaluator_type`. The default value is zero.
 * @member {String} evaluatorCount
 */
GoogleCloudMlV1TrainingInput.prototype['evaluatorCount'] = undefined;

/**
 * Optional. Specifies the type of virtual machine to use for your training job's evaluator nodes. The supported values are the same as those described in the entry for `masterType`. This value must be consistent with the category of machine type that `masterType` uses. In other words, both must be Compute Engine machine types or both must be legacy machine types. This value must be present when `scaleTier` is set to `CUSTOM` and `evaluatorCount` is greater than zero.
 * @member {String} evaluatorType
 */
GoogleCloudMlV1TrainingInput.prototype['evaluatorType'] = undefined;

/**
 * @member {module:model/GoogleCloudMlV1HyperparameterSpec} hyperparameters
 */
GoogleCloudMlV1TrainingInput.prototype['hyperparameters'] = undefined;

/**
 * Optional. A Google Cloud Storage path in which to store training outputs and other data needed for training. This path is passed to your TensorFlow program as the '--job-dir' command-line argument. The benefit of specifying this field is that Cloud ML validates the path for use in training.
 * @member {String} jobDir
 */
GoogleCloudMlV1TrainingInput.prototype['jobDir'] = undefined;

/**
 * @member {module:model/GoogleCloudMlV1ReplicaConfig} masterConfig
 */
GoogleCloudMlV1TrainingInput.prototype['masterConfig'] = undefined;

/**
 * Optional. Specifies the type of virtual machine to use for your training job's master worker. You must specify this field when `scaleTier` is set to `CUSTOM`. You can use certain Compute Engine machine types directly in this field. See the [list of compatible Compute Engine machine types](/ai-platform/training/docs/machine-types#compute-engine-machine-types). Alternatively, you can use the certain legacy machine types in this field. See the [list of legacy machine types](/ai-platform/training/docs/machine-types#legacy-machine-types). Finally, if you want to use a TPU for training, specify `cloud_tpu` in this field. Learn more about the [special configuration options for training with TPUs](/ai-platform/training/docs/using-tpus#configuring_a_custom_tpu_machine).
 * @member {String} masterType
 */
GoogleCloudMlV1TrainingInput.prototype['masterType'] = undefined;

/**
 * Optional. The full name of the [Compute Engine network](/vpc/docs/vpc) to which the Job is peered. For example, `projects/12345/global/networks/myVPC`. The format of this field is `projects/{project}/global/networks/{network}`, where {project} is a project number (like `12345`) and {network} is network name. Private services access must already be configured for the network. If left unspecified, the Job is not peered with any network. [Learn about using VPC Network Peering.](/ai-platform/training/docs/vpc-peering).
 * @member {String} network
 */
GoogleCloudMlV1TrainingInput.prototype['network'] = undefined;

/**
 * Required. The Google Cloud Storage location of the packages with the training program and any additional dependencies. The maximum number of package URIs is 100.
 * @member {Array.<String>} packageUris
 */
GoogleCloudMlV1TrainingInput.prototype['packageUris'] = undefined;

/**
 * @member {module:model/GoogleCloudMlV1ReplicaConfig} parameterServerConfig
 */
GoogleCloudMlV1TrainingInput.prototype['parameterServerConfig'] = undefined;

/**
 * Optional. The number of parameter server replicas to use for the training job. Each replica in the cluster will be of the type specified in `parameter_server_type`. This value can only be used when `scale_tier` is set to `CUSTOM`. If you set this value, you must also set `parameter_server_type`. The default value is zero.
 * @member {String} parameterServerCount
 */
GoogleCloudMlV1TrainingInput.prototype['parameterServerCount'] = undefined;

/**
 * Optional. Specifies the type of virtual machine to use for your training job's parameter server. The supported values are the same as those described in the entry for `master_type`. This value must be consistent with the category of machine type that `masterType` uses. In other words, both must be Compute Engine machine types or both must be legacy machine types. This value must be present when `scaleTier` is set to `CUSTOM` and `parameter_server_count` is greater than zero.
 * @member {String} parameterServerType
 */
GoogleCloudMlV1TrainingInput.prototype['parameterServerType'] = undefined;

/**
 * Required. The Python module name to run after installing the packages.
 * @member {String} pythonModule
 */
GoogleCloudMlV1TrainingInput.prototype['pythonModule'] = undefined;

/**
 * Optional. The version of Python used in training. You must either specify this field or specify `masterConfig.imageUri`. The following Python versions are available: * Python '3.7' is available when `runtime_version` is set to '1.15' or later. * Python '3.5' is available when `runtime_version` is set to a version from '1.4' to '1.14'. * Python '2.7' is available when `runtime_version` is set to '1.15' or earlier. Read more about the Python versions available for [each runtime version](/ml-engine/docs/runtime-version-list).
 * @member {String} pythonVersion
 */
GoogleCloudMlV1TrainingInput.prototype['pythonVersion'] = undefined;

/**
 * Required. The region to run the training job in. See the [available regions](/ai-platform/training/docs/regions) for AI Platform Training.
 * @member {String} region
 */
GoogleCloudMlV1TrainingInput.prototype['region'] = undefined;

/**
 * Optional. The AI Platform runtime version to use for training. You must either specify this field or specify `masterConfig.imageUri`. For more information, see the [runtime version list](/ai-platform/training/docs/runtime-version-list) and learn [how to manage runtime versions](/ai-platform/training/docs/versioning).
 * @member {String} runtimeVersion
 */
GoogleCloudMlV1TrainingInput.prototype['runtimeVersion'] = undefined;

/**
 * Required. Specifies the machine types, the number of replicas for workers and parameter servers.
 * @member {module:model/GoogleCloudMlV1TrainingInput.ScaleTierEnum} scaleTier
 */
GoogleCloudMlV1TrainingInput.prototype['scaleTier'] = undefined;

/**
 * @member {module:model/GoogleCloudMlV1Scheduling} scheduling
 */
GoogleCloudMlV1TrainingInput.prototype['scheduling'] = undefined;

/**
 * Optional. The email address of a service account to use when running the training appplication. You must have the `iam.serviceAccounts.actAs` permission for the specified service account. In addition, the AI Platform Training Google-managed service account must have the `roles/iam.serviceAccountAdmin` role for the specified service account. [Learn more about configuring a service account.](/ai-platform/training/docs/custom-service-account) If not specified, the AI Platform Training Google-managed service account is used by default.
 * @member {String} serviceAccount
 */
GoogleCloudMlV1TrainingInput.prototype['serviceAccount'] = undefined;

/**
 * Optional. Use `chief` instead of `master` in the `TF_CONFIG` environment variable when training with a custom container. Defaults to `false`. [Learn more about this field.](/ai-platform/training/docs/distributed-training-details#chief-versus-master) This field has no effect for training jobs that don't use a custom container.
 * @member {Boolean} useChiefInTfConfig
 */
GoogleCloudMlV1TrainingInput.prototype['useChiefInTfConfig'] = undefined;

/**
 * @member {module:model/GoogleCloudMlV1ReplicaConfig} workerConfig
 */
GoogleCloudMlV1TrainingInput.prototype['workerConfig'] = undefined;

/**
 * Optional. The number of worker replicas to use for the training job. Each replica in the cluster will be of the type specified in `worker_type`. This value can only be used when `scale_tier` is set to `CUSTOM`. If you set this value, you must also set `worker_type`. The default value is zero.
 * @member {String} workerCount
 */
GoogleCloudMlV1TrainingInput.prototype['workerCount'] = undefined;

/**
 * Optional. Specifies the type of virtual machine to use for your training job's worker nodes. The supported values are the same as those described in the entry for `masterType`. This value must be consistent with the category of machine type that `masterType` uses. In other words, both must be Compute Engine machine types or both must be legacy machine types. If you use `cloud_tpu` for this value, see special instructions for [configuring a custom TPU machine](/ml-engine/docs/tensorflow/using-tpus#configuring_a_custom_tpu_machine). This value must be present when `scaleTier` is set to `CUSTOM` and `workerCount` is greater than zero.
 * @member {String} workerType
 */
GoogleCloudMlV1TrainingInput.prototype['workerType'] = undefined;





/**
 * Allowed values for the <code>scaleTier</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudMlV1TrainingInput['ScaleTierEnum'] = {

    /**
     * value: "BASIC"
     * @const
     */
    "BASIC": "BASIC",

    /**
     * value: "STANDARD_1"
     * @const
     */
    "STANDARD_1": "STANDARD_1",

    /**
     * value: "PREMIUM_1"
     * @const
     */
    "PREMIUM_1": "PREMIUM_1",

    /**
     * value: "BASIC_GPU"
     * @const
     */
    "BASIC_GPU": "BASIC_GPU",

    /**
     * value: "BASIC_TPU"
     * @const
     */
    "BASIC_TPU": "BASIC_TPU",

    /**
     * value: "CUSTOM"
     * @const
     */
    "CUSTOM": "CUSTOM"
};



export default GoogleCloudMlV1TrainingInput;

