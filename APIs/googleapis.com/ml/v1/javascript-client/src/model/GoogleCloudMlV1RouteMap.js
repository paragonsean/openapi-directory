/**
 * AI Platform Training & Prediction API
 * An API to enable creating and using machine learning models.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudMlV1RouteMap model module.
 * @module model/GoogleCloudMlV1RouteMap
 * @version v1
 */
class GoogleCloudMlV1RouteMap {
    /**
     * Constructs a new <code>GoogleCloudMlV1RouteMap</code>.
     * Specifies HTTP paths served by a custom container. AI Platform Prediction sends requests to these paths on the container; the custom container must run an HTTP server that responds to these requests with appropriate responses. Read [Custom container requirements](/ai-platform/prediction/docs/custom-container-requirements) for details on how to create your container image to meet these requirements.
     * @alias module:model/GoogleCloudMlV1RouteMap
     */
    constructor() { 
        
        GoogleCloudMlV1RouteMap.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudMlV1RouteMap</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudMlV1RouteMap} obj Optional instance to populate.
     * @return {module:model/GoogleCloudMlV1RouteMap} The populated <code>GoogleCloudMlV1RouteMap</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudMlV1RouteMap();

            if (data.hasOwnProperty('health')) {
                obj['health'] = ApiClient.convertToType(data['health'], 'String');
            }
            if (data.hasOwnProperty('predict')) {
                obj['predict'] = ApiClient.convertToType(data['predict'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudMlV1RouteMap</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudMlV1RouteMap</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['health'] && !(typeof data['health'] === 'string' || data['health'] instanceof String)) {
            throw new Error("Expected the field `health` to be a primitive type in the JSON string but got " + data['health']);
        }
        // ensure the json data is a string
        if (data['predict'] && !(typeof data['predict'] === 'string' || data['predict'] instanceof String)) {
            throw new Error("Expected the field `predict` to be a primitive type in the JSON string but got " + data['predict']);
        }

        return true;
    }


}



/**
 * HTTP path on the container to send health checkss to. AI Platform Prediction intermittently sends GET requests to this path on the container's IP address and port to check that the container is healthy. Read more about [health checks](/ai-platform/prediction/docs/custom-container-requirements#checks). For example, if you set this field to `/bar`, then AI Platform Prediction intermittently sends a GET request to the `/bar` path on the port of your container specified by the first value of Version.container.ports. If you don't specify this field, it defaults to the following value: /v1/models/ MODEL/versions/VERSION The placeholders in this value are replaced as follows: * MODEL: The name of the parent Model. This does not include the \"projects/PROJECT_ID/models/\" prefix that the API returns in output; it is the bare model name, as provided to projects.models.create. * VERSION: The name of the model version. This does not include the \"projects/PROJECT_ID /models/MODEL/versions/\" prefix that the API returns in output; it is the bare version name, as provided to projects.models.versions.create.
 * @member {String} health
 */
GoogleCloudMlV1RouteMap.prototype['health'] = undefined;

/**
 * HTTP path on the container to send prediction requests to. AI Platform Prediction forwards requests sent using projects.predict to this path on the container's IP address and port. AI Platform Prediction then returns the container's response in the API response. For example, if you set this field to `/foo`, then when AI Platform Prediction receives a prediction request, it forwards the request body in a POST request to the `/foo` path on the port of your container specified by the first value of Version.container.ports. If you don't specify this field, it defaults to the following value: /v1/models/MODEL/versions/VERSION:predict The placeholders in this value are replaced as follows: * MODEL: The name of the parent Model. This does not include the \"projects/PROJECT_ID/models/\" prefix that the API returns in output; it is the bare model name, as provided to projects.models.create. * VERSION: The name of the model version. This does not include the \"projects/PROJECT_ID/models/MODEL/versions/\" prefix that the API returns in output; it is the bare version name, as provided to projects.models.versions.create.
 * @member {String} predict
 */
GoogleCloudMlV1RouteMap.prototype['predict'] = undefined;






export default GoogleCloudMlV1RouteMap;

