# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudMlV1Scheduling(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_running_time: str=None, max_wait_time: str=None, priority: int=None):
        """GoogleCloudMlV1Scheduling - a model defined in OpenAPI

        :param max_running_time: The max_running_time of this GoogleCloudMlV1Scheduling.
        :param max_wait_time: The max_wait_time of this GoogleCloudMlV1Scheduling.
        :param priority: The priority of this GoogleCloudMlV1Scheduling.
        """
        self.openapi_types = {
            'max_running_time': str,
            'max_wait_time': str,
            'priority': int
        }

        self.attribute_map = {
            'max_running_time': 'maxRunningTime',
            'max_wait_time': 'maxWaitTime',
            'priority': 'priority'
        }

        self._max_running_time = max_running_time
        self._max_wait_time = max_wait_time
        self._priority = priority

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudMlV1Scheduling':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudMlV1__Scheduling of this GoogleCloudMlV1Scheduling.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_running_time(self):
        """Gets the max_running_time of this GoogleCloudMlV1Scheduling.

        Optional. The maximum job running time, expressed in seconds. The field can contain up to nine fractional digits, terminated by `s`. If not specified, this field defaults to `604800s` (seven days). If the training job is still running after this duration, AI Platform Training cancels it. The duration is measured from when the job enters the `RUNNING` state; therefore it does not overlap with the duration limited by Scheduling.max_wait_time. For example, if you want to ensure your job runs for no more than 2 hours, set this field to `7200s` (2 hours * 60 minutes / hour * 60 seconds / minute). If you submit your training job using the `gcloud` tool, you can [specify this field in a `config.yaml` file](/ai-platform/training/docs/training-jobs#formatting_your_configuration_parameters). For example: ```yaml trainingInput: scheduling: maxRunningTime: 7200s ```

        :return: The max_running_time of this GoogleCloudMlV1Scheduling.
        :rtype: str
        """
        return self._max_running_time

    @max_running_time.setter
    def max_running_time(self, max_running_time):
        """Sets the max_running_time of this GoogleCloudMlV1Scheduling.

        Optional. The maximum job running time, expressed in seconds. The field can contain up to nine fractional digits, terminated by `s`. If not specified, this field defaults to `604800s` (seven days). If the training job is still running after this duration, AI Platform Training cancels it. The duration is measured from when the job enters the `RUNNING` state; therefore it does not overlap with the duration limited by Scheduling.max_wait_time. For example, if you want to ensure your job runs for no more than 2 hours, set this field to `7200s` (2 hours * 60 minutes / hour * 60 seconds / minute). If you submit your training job using the `gcloud` tool, you can [specify this field in a `config.yaml` file](/ai-platform/training/docs/training-jobs#formatting_your_configuration_parameters). For example: ```yaml trainingInput: scheduling: maxRunningTime: 7200s ```

        :param max_running_time: The max_running_time of this GoogleCloudMlV1Scheduling.
        :type max_running_time: str
        """

        self._max_running_time = max_running_time

    @property
    def max_wait_time(self):
        """Gets the max_wait_time of this GoogleCloudMlV1Scheduling.

        Optional. The maximum job wait time, expressed in seconds. The field can contain up to nine fractional digits, terminated by `s`. If not specified, there is no limit to the wait time. The minimum for this field is `1800s` (30 minutes). If the training job has not entered the `RUNNING` state after this duration, AI Platform Training cancels it. After the job begins running, it can no longer be cancelled due to the maximum wait time. Therefore the duration limited by this field does not overlap with the duration limited by Scheduling.max_running_time. For example, if the job temporarily stops running and retries due to a [VM restart](/ai-platform/training/docs/overview#restarts), this cannot lead to a maximum wait time cancellation. However, independently of this constraint, AI Platform Training might stop a job if there are too many retries due to exhausted resources in a region. The following example describes how you might use this field: To cancel your job if it doesn't start running within 1 hour, set this field to `3600s` (1 hour * 60 minutes / hour * 60 seconds / minute). If the job is still in the `QUEUED` or `PREPARING` state after an hour of waiting, AI Platform Training cancels the job. If you submit your training job using the `gcloud` tool, you can [specify this field in a `config.yaml` file](/ai-platform/training/docs/training-jobs#formatting_your_configuration_parameters). For example: ```yaml trainingInput: scheduling: maxWaitTime: 3600s ```

        :return: The max_wait_time of this GoogleCloudMlV1Scheduling.
        :rtype: str
        """
        return self._max_wait_time

    @max_wait_time.setter
    def max_wait_time(self, max_wait_time):
        """Sets the max_wait_time of this GoogleCloudMlV1Scheduling.

        Optional. The maximum job wait time, expressed in seconds. The field can contain up to nine fractional digits, terminated by `s`. If not specified, there is no limit to the wait time. The minimum for this field is `1800s` (30 minutes). If the training job has not entered the `RUNNING` state after this duration, AI Platform Training cancels it. After the job begins running, it can no longer be cancelled due to the maximum wait time. Therefore the duration limited by this field does not overlap with the duration limited by Scheduling.max_running_time. For example, if the job temporarily stops running and retries due to a [VM restart](/ai-platform/training/docs/overview#restarts), this cannot lead to a maximum wait time cancellation. However, independently of this constraint, AI Platform Training might stop a job if there are too many retries due to exhausted resources in a region. The following example describes how you might use this field: To cancel your job if it doesn't start running within 1 hour, set this field to `3600s` (1 hour * 60 minutes / hour * 60 seconds / minute). If the job is still in the `QUEUED` or `PREPARING` state after an hour of waiting, AI Platform Training cancels the job. If you submit your training job using the `gcloud` tool, you can [specify this field in a `config.yaml` file](/ai-platform/training/docs/training-jobs#formatting_your_configuration_parameters). For example: ```yaml trainingInput: scheduling: maxWaitTime: 3600s ```

        :param max_wait_time: The max_wait_time of this GoogleCloudMlV1Scheduling.
        :type max_wait_time: str
        """

        self._max_wait_time = max_wait_time

    @property
    def priority(self):
        """Gets the priority of this GoogleCloudMlV1Scheduling.

        Optional. Job scheduling will be based on this priority, which in the range [0, 1000]. The bigger the number, the higher the priority. Default to 0 if not set. If there are multiple jobs requesting same type of accelerators, the high priority job will be scheduled prior to ones with low priority.

        :return: The priority of this GoogleCloudMlV1Scheduling.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this GoogleCloudMlV1Scheduling.

        Optional. Job scheduling will be based on this priority, which in the range [0, 1000]. The bigger the number, the higher the priority. Default to 0 if not set. If there are multiple jobs requesting same type of accelerators, the high priority job will be scheduled prior to ones with low priority.

        :param priority: The priority of this GoogleCloudMlV1Scheduling.
        :type priority: int
        """

        self._priority = priority
