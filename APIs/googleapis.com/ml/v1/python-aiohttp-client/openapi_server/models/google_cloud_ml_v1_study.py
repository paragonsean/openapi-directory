# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_ml_v1_study_config import GoogleCloudMlV1StudyConfig
from openapi_server import util


class GoogleCloudMlV1Study(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, inactive_reason: str=None, name: str=None, state: str=None, study_config: GoogleCloudMlV1StudyConfig=None):
        """GoogleCloudMlV1Study - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudMlV1Study.
        :param inactive_reason: The inactive_reason of this GoogleCloudMlV1Study.
        :param name: The name of this GoogleCloudMlV1Study.
        :param state: The state of this GoogleCloudMlV1Study.
        :param study_config: The study_config of this GoogleCloudMlV1Study.
        """
        self.openapi_types = {
            'create_time': str,
            'inactive_reason': str,
            'name': str,
            'state': str,
            'study_config': GoogleCloudMlV1StudyConfig
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'inactive_reason': 'inactiveReason',
            'name': 'name',
            'state': 'state',
            'study_config': 'studyConfig'
        }

        self._create_time = create_time
        self._inactive_reason = inactive_reason
        self._name = name
        self._state = state
        self._study_config = study_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudMlV1Study':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudMlV1__Study of this GoogleCloudMlV1Study.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudMlV1Study.

        Output only. Time at which the study was created.

        :return: The create_time of this GoogleCloudMlV1Study.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudMlV1Study.

        Output only. Time at which the study was created.

        :param create_time: The create_time of this GoogleCloudMlV1Study.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def inactive_reason(self):
        """Gets the inactive_reason of this GoogleCloudMlV1Study.

        Output only. A human readable reason why the Study is inactive. This should be empty if a study is ACTIVE or COMPLETED.

        :return: The inactive_reason of this GoogleCloudMlV1Study.
        :rtype: str
        """
        return self._inactive_reason

    @inactive_reason.setter
    def inactive_reason(self, inactive_reason):
        """Sets the inactive_reason of this GoogleCloudMlV1Study.

        Output only. A human readable reason why the Study is inactive. This should be empty if a study is ACTIVE or COMPLETED.

        :param inactive_reason: The inactive_reason of this GoogleCloudMlV1Study.
        :type inactive_reason: str
        """

        self._inactive_reason = inactive_reason

    @property
    def name(self):
        """Gets the name of this GoogleCloudMlV1Study.

        Output only. The name of a study.

        :return: The name of this GoogleCloudMlV1Study.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudMlV1Study.

        Output only. The name of a study.

        :param name: The name of this GoogleCloudMlV1Study.
        :type name: str
        """

        self._name = name

    @property
    def state(self):
        """Gets the state of this GoogleCloudMlV1Study.

        Output only. The detailed state of a study.

        :return: The state of this GoogleCloudMlV1Study.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudMlV1Study.

        Output only. The detailed state of a study.

        :param state: The state of this GoogleCloudMlV1Study.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "ACTIVE", "INACTIVE", "COMPLETED"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def study_config(self):
        """Gets the study_config of this GoogleCloudMlV1Study.


        :return: The study_config of this GoogleCloudMlV1Study.
        :rtype: GoogleCloudMlV1StudyConfig
        """
        return self._study_config

    @study_config.setter
    def study_config(self, study_config):
        """Sets the study_config of this GoogleCloudMlV1Study.


        :param study_config: The study_config of this GoogleCloudMlV1Study.
        :type study_config: GoogleCloudMlV1StudyConfig
        """

        self._study_config = study_config
