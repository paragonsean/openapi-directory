# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudMlV1MeasurementMetric(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metric: str=None, value: float=None):
        """GoogleCloudMlV1MeasurementMetric - a model defined in OpenAPI

        :param metric: The metric of this GoogleCloudMlV1MeasurementMetric.
        :param value: The value of this GoogleCloudMlV1MeasurementMetric.
        """
        self.openapi_types = {
            'metric': str,
            'value': float
        }

        self.attribute_map = {
            'metric': 'metric',
            'value': 'value'
        }

        self._metric = metric
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudMlV1MeasurementMetric':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudMlV1_Measurement_Metric of this GoogleCloudMlV1MeasurementMetric.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metric(self):
        """Gets the metric of this GoogleCloudMlV1MeasurementMetric.

        Required. Metric name.

        :return: The metric of this GoogleCloudMlV1MeasurementMetric.
        :rtype: str
        """
        return self._metric

    @metric.setter
    def metric(self, metric):
        """Sets the metric of this GoogleCloudMlV1MeasurementMetric.

        Required. Metric name.

        :param metric: The metric of this GoogleCloudMlV1MeasurementMetric.
        :type metric: str
        """

        self._metric = metric

    @property
    def value(self):
        """Gets the value of this GoogleCloudMlV1MeasurementMetric.

        Required. The value for this metric.

        :return: The value of this GoogleCloudMlV1MeasurementMetric.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this GoogleCloudMlV1MeasurementMetric.

        Required. The value for this metric.

        :param value: The value of this GoogleCloudMlV1MeasurementMetric.
        :type value: float
        """

        self._value = value
