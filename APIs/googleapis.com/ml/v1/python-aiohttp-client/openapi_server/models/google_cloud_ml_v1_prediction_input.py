# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudMlV1PredictionInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, batch_size: str=None, data_format: str=None, input_paths: List[str]=None, max_worker_count: str=None, model_name: str=None, output_data_format: str=None, output_path: str=None, region: str=None, runtime_version: str=None, signature_name: str=None, uri: str=None, version_name: str=None):
        """GoogleCloudMlV1PredictionInput - a model defined in OpenAPI

        :param batch_size: The batch_size of this GoogleCloudMlV1PredictionInput.
        :param data_format: The data_format of this GoogleCloudMlV1PredictionInput.
        :param input_paths: The input_paths of this GoogleCloudMlV1PredictionInput.
        :param max_worker_count: The max_worker_count of this GoogleCloudMlV1PredictionInput.
        :param model_name: The model_name of this GoogleCloudMlV1PredictionInput.
        :param output_data_format: The output_data_format of this GoogleCloudMlV1PredictionInput.
        :param output_path: The output_path of this GoogleCloudMlV1PredictionInput.
        :param region: The region of this GoogleCloudMlV1PredictionInput.
        :param runtime_version: The runtime_version of this GoogleCloudMlV1PredictionInput.
        :param signature_name: The signature_name of this GoogleCloudMlV1PredictionInput.
        :param uri: The uri of this GoogleCloudMlV1PredictionInput.
        :param version_name: The version_name of this GoogleCloudMlV1PredictionInput.
        """
        self.openapi_types = {
            'batch_size': str,
            'data_format': str,
            'input_paths': List[str],
            'max_worker_count': str,
            'model_name': str,
            'output_data_format': str,
            'output_path': str,
            'region': str,
            'runtime_version': str,
            'signature_name': str,
            'uri': str,
            'version_name': str
        }

        self.attribute_map = {
            'batch_size': 'batchSize',
            'data_format': 'dataFormat',
            'input_paths': 'inputPaths',
            'max_worker_count': 'maxWorkerCount',
            'model_name': 'modelName',
            'output_data_format': 'outputDataFormat',
            'output_path': 'outputPath',
            'region': 'region',
            'runtime_version': 'runtimeVersion',
            'signature_name': 'signatureName',
            'uri': 'uri',
            'version_name': 'versionName'
        }

        self._batch_size = batch_size
        self._data_format = data_format
        self._input_paths = input_paths
        self._max_worker_count = max_worker_count
        self._model_name = model_name
        self._output_data_format = output_data_format
        self._output_path = output_path
        self._region = region
        self._runtime_version = runtime_version
        self._signature_name = signature_name
        self._uri = uri
        self._version_name = version_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudMlV1PredictionInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudMlV1__PredictionInput of this GoogleCloudMlV1PredictionInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def batch_size(self):
        """Gets the batch_size of this GoogleCloudMlV1PredictionInput.

        Optional. Number of records per batch, defaults to 64. The service will buffer batch_size number of records in memory before invoking one Tensorflow prediction call internally. So take the record size and memory available into consideration when setting this parameter.

        :return: The batch_size of this GoogleCloudMlV1PredictionInput.
        :rtype: str
        """
        return self._batch_size

    @batch_size.setter
    def batch_size(self, batch_size):
        """Sets the batch_size of this GoogleCloudMlV1PredictionInput.

        Optional. Number of records per batch, defaults to 64. The service will buffer batch_size number of records in memory before invoking one Tensorflow prediction call internally. So take the record size and memory available into consideration when setting this parameter.

        :param batch_size: The batch_size of this GoogleCloudMlV1PredictionInput.
        :type batch_size: str
        """

        self._batch_size = batch_size

    @property
    def data_format(self):
        """Gets the data_format of this GoogleCloudMlV1PredictionInput.

        Required. The format of the input data files.

        :return: The data_format of this GoogleCloudMlV1PredictionInput.
        :rtype: str
        """
        return self._data_format

    @data_format.setter
    def data_format(self, data_format):
        """Sets the data_format of this GoogleCloudMlV1PredictionInput.

        Required. The format of the input data files.

        :param data_format: The data_format of this GoogleCloudMlV1PredictionInput.
        :type data_format: str
        """
        allowed_values = ["DATA_FORMAT_UNSPECIFIED", "JSON", "TEXT", "TF_RECORD", "TF_RECORD_GZIP", "CSV"]  # noqa: E501
        if data_format not in allowed_values:
            raise ValueError(
                "Invalid value for `data_format` ({0}), must be one of {1}"
                .format(data_format, allowed_values)
            )

        self._data_format = data_format

    @property
    def input_paths(self):
        """Gets the input_paths of this GoogleCloudMlV1PredictionInput.

        Required. The Cloud Storage location of the input data files. May contain wildcards.

        :return: The input_paths of this GoogleCloudMlV1PredictionInput.
        :rtype: List[str]
        """
        return self._input_paths

    @input_paths.setter
    def input_paths(self, input_paths):
        """Sets the input_paths of this GoogleCloudMlV1PredictionInput.

        Required. The Cloud Storage location of the input data files. May contain wildcards.

        :param input_paths: The input_paths of this GoogleCloudMlV1PredictionInput.
        :type input_paths: List[str]
        """

        self._input_paths = input_paths

    @property
    def max_worker_count(self):
        """Gets the max_worker_count of this GoogleCloudMlV1PredictionInput.

        Optional. The maximum number of workers to be used for parallel processing. Defaults to 10 if not specified.

        :return: The max_worker_count of this GoogleCloudMlV1PredictionInput.
        :rtype: str
        """
        return self._max_worker_count

    @max_worker_count.setter
    def max_worker_count(self, max_worker_count):
        """Sets the max_worker_count of this GoogleCloudMlV1PredictionInput.

        Optional. The maximum number of workers to be used for parallel processing. Defaults to 10 if not specified.

        :param max_worker_count: The max_worker_count of this GoogleCloudMlV1PredictionInput.
        :type max_worker_count: str
        """

        self._max_worker_count = max_worker_count

    @property
    def model_name(self):
        """Gets the model_name of this GoogleCloudMlV1PredictionInput.

        Use this field if you want to use the default version for the specified model. The string must use the following format: `\"projects/YOUR_PROJECT/models/YOUR_MODEL\"`

        :return: The model_name of this GoogleCloudMlV1PredictionInput.
        :rtype: str
        """
        return self._model_name

    @model_name.setter
    def model_name(self, model_name):
        """Sets the model_name of this GoogleCloudMlV1PredictionInput.

        Use this field if you want to use the default version for the specified model. The string must use the following format: `\"projects/YOUR_PROJECT/models/YOUR_MODEL\"`

        :param model_name: The model_name of this GoogleCloudMlV1PredictionInput.
        :type model_name: str
        """

        self._model_name = model_name

    @property
    def output_data_format(self):
        """Gets the output_data_format of this GoogleCloudMlV1PredictionInput.

        Optional. Format of the output data files, defaults to JSON.

        :return: The output_data_format of this GoogleCloudMlV1PredictionInput.
        :rtype: str
        """
        return self._output_data_format

    @output_data_format.setter
    def output_data_format(self, output_data_format):
        """Sets the output_data_format of this GoogleCloudMlV1PredictionInput.

        Optional. Format of the output data files, defaults to JSON.

        :param output_data_format: The output_data_format of this GoogleCloudMlV1PredictionInput.
        :type output_data_format: str
        """
        allowed_values = ["DATA_FORMAT_UNSPECIFIED", "JSON", "TEXT", "TF_RECORD", "TF_RECORD_GZIP", "CSV"]  # noqa: E501
        if output_data_format not in allowed_values:
            raise ValueError(
                "Invalid value for `output_data_format` ({0}), must be one of {1}"
                .format(output_data_format, allowed_values)
            )

        self._output_data_format = output_data_format

    @property
    def output_path(self):
        """Gets the output_path of this GoogleCloudMlV1PredictionInput.

        Required. The output Google Cloud Storage location.

        :return: The output_path of this GoogleCloudMlV1PredictionInput.
        :rtype: str
        """
        return self._output_path

    @output_path.setter
    def output_path(self, output_path):
        """Sets the output_path of this GoogleCloudMlV1PredictionInput.

        Required. The output Google Cloud Storage location.

        :param output_path: The output_path of this GoogleCloudMlV1PredictionInput.
        :type output_path: str
        """

        self._output_path = output_path

    @property
    def region(self):
        """Gets the region of this GoogleCloudMlV1PredictionInput.

        Required. The Google Compute Engine region to run the prediction job in. See the available regions for AI Platform services.

        :return: The region of this GoogleCloudMlV1PredictionInput.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this GoogleCloudMlV1PredictionInput.

        Required. The Google Compute Engine region to run the prediction job in. See the available regions for AI Platform services.

        :param region: The region of this GoogleCloudMlV1PredictionInput.
        :type region: str
        """

        self._region = region

    @property
    def runtime_version(self):
        """Gets the runtime_version of this GoogleCloudMlV1PredictionInput.

        Optional. The AI Platform runtime version to use for this batch prediction. If not set, AI Platform will pick the runtime version used during the CreateVersion request for this model version, or choose the latest stable version when model version information is not available such as when the model is specified by uri.

        :return: The runtime_version of this GoogleCloudMlV1PredictionInput.
        :rtype: str
        """
        return self._runtime_version

    @runtime_version.setter
    def runtime_version(self, runtime_version):
        """Sets the runtime_version of this GoogleCloudMlV1PredictionInput.

        Optional. The AI Platform runtime version to use for this batch prediction. If not set, AI Platform will pick the runtime version used during the CreateVersion request for this model version, or choose the latest stable version when model version information is not available such as when the model is specified by uri.

        :param runtime_version: The runtime_version of this GoogleCloudMlV1PredictionInput.
        :type runtime_version: str
        """

        self._runtime_version = runtime_version

    @property
    def signature_name(self):
        """Gets the signature_name of this GoogleCloudMlV1PredictionInput.

        Optional. The name of the signature defined in the SavedModel to use for this job. Please refer to [SavedModel](https://tensorflow.github.io/serving/serving_basic.html) for information about how to use signatures. Defaults to [DEFAULT_SERVING_SIGNATURE_DEF_KEY](https://www.tensorflow.org/api_docs/python/tf/saved_model/signature_constants) , which is \"serving_default\".

        :return: The signature_name of this GoogleCloudMlV1PredictionInput.
        :rtype: str
        """
        return self._signature_name

    @signature_name.setter
    def signature_name(self, signature_name):
        """Sets the signature_name of this GoogleCloudMlV1PredictionInput.

        Optional. The name of the signature defined in the SavedModel to use for this job. Please refer to [SavedModel](https://tensorflow.github.io/serving/serving_basic.html) for information about how to use signatures. Defaults to [DEFAULT_SERVING_SIGNATURE_DEF_KEY](https://www.tensorflow.org/api_docs/python/tf/saved_model/signature_constants) , which is \"serving_default\".

        :param signature_name: The signature_name of this GoogleCloudMlV1PredictionInput.
        :type signature_name: str
        """

        self._signature_name = signature_name

    @property
    def uri(self):
        """Gets the uri of this GoogleCloudMlV1PredictionInput.

        Use this field if you want to specify a Google Cloud Storage path for the model to use.

        :return: The uri of this GoogleCloudMlV1PredictionInput.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this GoogleCloudMlV1PredictionInput.

        Use this field if you want to specify a Google Cloud Storage path for the model to use.

        :param uri: The uri of this GoogleCloudMlV1PredictionInput.
        :type uri: str
        """

        self._uri = uri

    @property
    def version_name(self):
        """Gets the version_name of this GoogleCloudMlV1PredictionInput.

        Use this field if you want to specify a version of the model to use. The string is formatted the same way as `model_version`, with the addition of the version information: `\"projects/YOUR_PROJECT/models/YOUR_MODEL/versions/YOUR_VERSION\"`

        :return: The version_name of this GoogleCloudMlV1PredictionInput.
        :rtype: str
        """
        return self._version_name

    @version_name.setter
    def version_name(self, version_name):
        """Sets the version_name of this GoogleCloudMlV1PredictionInput.

        Use this field if you want to specify a version of the model to use. The string is formatted the same way as `model_version`, with the addition of the version information: `\"projects/YOUR_PROJECT/models/YOUR_MODEL/versions/YOUR_VERSION\"`

        :param version_name: The version_name of this GoogleCloudMlV1PredictionInput.
        :type version_name: str
        """

        self._version_name = version_name
