# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleTypeExpr(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, expression: str=None, location: str=None, title: str=None):
        """GoogleTypeExpr - a model defined in OpenAPI

        :param description: The description of this GoogleTypeExpr.
        :param expression: The expression of this GoogleTypeExpr.
        :param location: The location of this GoogleTypeExpr.
        :param title: The title of this GoogleTypeExpr.
        """
        self.openapi_types = {
            'description': str,
            'expression': str,
            'location': str,
            'title': str
        }

        self.attribute_map = {
            'description': 'description',
            'expression': 'expression',
            'location': 'location',
            'title': 'title'
        }

        self._description = description
        self._expression = expression
        self._location = location
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleTypeExpr':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleType__Expr of this GoogleTypeExpr.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this GoogleTypeExpr.

        Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.

        :return: The description of this GoogleTypeExpr.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleTypeExpr.

        Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.

        :param description: The description of this GoogleTypeExpr.
        :type description: str
        """

        self._description = description

    @property
    def expression(self):
        """Gets the expression of this GoogleTypeExpr.

        Textual representation of an expression in Common Expression Language syntax.

        :return: The expression of this GoogleTypeExpr.
        :rtype: str
        """
        return self._expression

    @expression.setter
    def expression(self, expression):
        """Sets the expression of this GoogleTypeExpr.

        Textual representation of an expression in Common Expression Language syntax.

        :param expression: The expression of this GoogleTypeExpr.
        :type expression: str
        """

        self._expression = expression

    @property
    def location(self):
        """Gets the location of this GoogleTypeExpr.

        Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.

        :return: The location of this GoogleTypeExpr.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this GoogleTypeExpr.

        Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.

        :param location: The location of this GoogleTypeExpr.
        :type location: str
        """

        self._location = location

    @property
    def title(self):
        """Gets the title of this GoogleTypeExpr.

        Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.

        :return: The title of this GoogleTypeExpr.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this GoogleTypeExpr.

        Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.

        :param title: The title of this GoogleTypeExpr.
        :type title: str
        """

        self._title = title
