# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudMlV1TrialParameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, float_value: float=None, int_value: str=None, parameter: str=None, string_value: str=None):
        """GoogleCloudMlV1TrialParameter - a model defined in OpenAPI

        :param float_value: The float_value of this GoogleCloudMlV1TrialParameter.
        :param int_value: The int_value of this GoogleCloudMlV1TrialParameter.
        :param parameter: The parameter of this GoogleCloudMlV1TrialParameter.
        :param string_value: The string_value of this GoogleCloudMlV1TrialParameter.
        """
        self.openapi_types = {
            'float_value': float,
            'int_value': str,
            'parameter': str,
            'string_value': str
        }

        self.attribute_map = {
            'float_value': 'floatValue',
            'int_value': 'intValue',
            'parameter': 'parameter',
            'string_value': 'stringValue'
        }

        self._float_value = float_value
        self._int_value = int_value
        self._parameter = parameter
        self._string_value = string_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudMlV1TrialParameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudMlV1_Trial_Parameter of this GoogleCloudMlV1TrialParameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def float_value(self):
        """Gets the float_value of this GoogleCloudMlV1TrialParameter.

        Must be set if ParameterType is DOUBLE or DISCRETE.

        :return: The float_value of this GoogleCloudMlV1TrialParameter.
        :rtype: float
        """
        return self._float_value

    @float_value.setter
    def float_value(self, float_value):
        """Sets the float_value of this GoogleCloudMlV1TrialParameter.

        Must be set if ParameterType is DOUBLE or DISCRETE.

        :param float_value: The float_value of this GoogleCloudMlV1TrialParameter.
        :type float_value: float
        """

        self._float_value = float_value

    @property
    def int_value(self):
        """Gets the int_value of this GoogleCloudMlV1TrialParameter.

        Must be set if ParameterType is INTEGER

        :return: The int_value of this GoogleCloudMlV1TrialParameter.
        :rtype: str
        """
        return self._int_value

    @int_value.setter
    def int_value(self, int_value):
        """Sets the int_value of this GoogleCloudMlV1TrialParameter.

        Must be set if ParameterType is INTEGER

        :param int_value: The int_value of this GoogleCloudMlV1TrialParameter.
        :type int_value: str
        """

        self._int_value = int_value

    @property
    def parameter(self):
        """Gets the parameter of this GoogleCloudMlV1TrialParameter.

        The name of the parameter.

        :return: The parameter of this GoogleCloudMlV1TrialParameter.
        :rtype: str
        """
        return self._parameter

    @parameter.setter
    def parameter(self, parameter):
        """Sets the parameter of this GoogleCloudMlV1TrialParameter.

        The name of the parameter.

        :param parameter: The parameter of this GoogleCloudMlV1TrialParameter.
        :type parameter: str
        """

        self._parameter = parameter

    @property
    def string_value(self):
        """Gets the string_value of this GoogleCloudMlV1TrialParameter.

        Must be set if ParameterTypeis CATEGORICAL

        :return: The string_value of this GoogleCloudMlV1TrialParameter.
        :rtype: str
        """
        return self._string_value

    @string_value.setter
    def string_value(self, string_value):
        """Sets the string_value of this GoogleCloudMlV1TrialParameter.

        Must be set if ParameterTypeis CATEGORICAL

        :param string_value: The string_value of this GoogleCloudMlV1TrialParameter.
        :type string_value: str
        """

        self._string_value = string_value
