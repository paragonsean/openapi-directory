# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_ml_v1_accelerator_config import GoogleCloudMlV1AcceleratorConfig
from openapi_server.models.google_cloud_ml_v1_auto_scaling import GoogleCloudMlV1AutoScaling
from openapi_server.models.google_cloud_ml_v1_container_spec import GoogleCloudMlV1ContainerSpec
from openapi_server.models.google_cloud_ml_v1_explanation_config import GoogleCloudMlV1ExplanationConfig
from openapi_server.models.google_cloud_ml_v1_manual_scaling import GoogleCloudMlV1ManualScaling
from openapi_server.models.google_cloud_ml_v1_request_logging_config import GoogleCloudMlV1RequestLoggingConfig
from openapi_server.models.google_cloud_ml_v1_route_map import GoogleCloudMlV1RouteMap
from openapi_server import util


class GoogleCloudMlV1Version(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accelerator_config: GoogleCloudMlV1AcceleratorConfig=None, auto_scaling: GoogleCloudMlV1AutoScaling=None, container: GoogleCloudMlV1ContainerSpec=None, create_time: str=None, deployment_uri: str=None, description: str=None, error_message: str=None, etag: str=None, explanation_config: GoogleCloudMlV1ExplanationConfig=None, framework: str=None, is_default: bool=None, labels: Dict[str, str]=None, last_migration_model_id: str=None, last_migration_time: str=None, last_use_time: str=None, machine_type: str=None, manual_scaling: GoogleCloudMlV1ManualScaling=None, name: str=None, package_uris: List[str]=None, prediction_class: str=None, python_version: str=None, request_logging_config: GoogleCloudMlV1RequestLoggingConfig=None, routes: GoogleCloudMlV1RouteMap=None, runtime_version: str=None, service_account: str=None, state: str=None):
        """GoogleCloudMlV1Version - a model defined in OpenAPI

        :param accelerator_config: The accelerator_config of this GoogleCloudMlV1Version.
        :param auto_scaling: The auto_scaling of this GoogleCloudMlV1Version.
        :param container: The container of this GoogleCloudMlV1Version.
        :param create_time: The create_time of this GoogleCloudMlV1Version.
        :param deployment_uri: The deployment_uri of this GoogleCloudMlV1Version.
        :param description: The description of this GoogleCloudMlV1Version.
        :param error_message: The error_message of this GoogleCloudMlV1Version.
        :param etag: The etag of this GoogleCloudMlV1Version.
        :param explanation_config: The explanation_config of this GoogleCloudMlV1Version.
        :param framework: The framework of this GoogleCloudMlV1Version.
        :param is_default: The is_default of this GoogleCloudMlV1Version.
        :param labels: The labels of this GoogleCloudMlV1Version.
        :param last_migration_model_id: The last_migration_model_id of this GoogleCloudMlV1Version.
        :param last_migration_time: The last_migration_time of this GoogleCloudMlV1Version.
        :param last_use_time: The last_use_time of this GoogleCloudMlV1Version.
        :param machine_type: The machine_type of this GoogleCloudMlV1Version.
        :param manual_scaling: The manual_scaling of this GoogleCloudMlV1Version.
        :param name: The name of this GoogleCloudMlV1Version.
        :param package_uris: The package_uris of this GoogleCloudMlV1Version.
        :param prediction_class: The prediction_class of this GoogleCloudMlV1Version.
        :param python_version: The python_version of this GoogleCloudMlV1Version.
        :param request_logging_config: The request_logging_config of this GoogleCloudMlV1Version.
        :param routes: The routes of this GoogleCloudMlV1Version.
        :param runtime_version: The runtime_version of this GoogleCloudMlV1Version.
        :param service_account: The service_account of this GoogleCloudMlV1Version.
        :param state: The state of this GoogleCloudMlV1Version.
        """
        self.openapi_types = {
            'accelerator_config': GoogleCloudMlV1AcceleratorConfig,
            'auto_scaling': GoogleCloudMlV1AutoScaling,
            'container': GoogleCloudMlV1ContainerSpec,
            'create_time': str,
            'deployment_uri': str,
            'description': str,
            'error_message': str,
            'etag': str,
            'explanation_config': GoogleCloudMlV1ExplanationConfig,
            'framework': str,
            'is_default': bool,
            'labels': Dict[str, str],
            'last_migration_model_id': str,
            'last_migration_time': str,
            'last_use_time': str,
            'machine_type': str,
            'manual_scaling': GoogleCloudMlV1ManualScaling,
            'name': str,
            'package_uris': List[str],
            'prediction_class': str,
            'python_version': str,
            'request_logging_config': GoogleCloudMlV1RequestLoggingConfig,
            'routes': GoogleCloudMlV1RouteMap,
            'runtime_version': str,
            'service_account': str,
            'state': str
        }

        self.attribute_map = {
            'accelerator_config': 'acceleratorConfig',
            'auto_scaling': 'autoScaling',
            'container': 'container',
            'create_time': 'createTime',
            'deployment_uri': 'deploymentUri',
            'description': 'description',
            'error_message': 'errorMessage',
            'etag': 'etag',
            'explanation_config': 'explanationConfig',
            'framework': 'framework',
            'is_default': 'isDefault',
            'labels': 'labels',
            'last_migration_model_id': 'lastMigrationModelId',
            'last_migration_time': 'lastMigrationTime',
            'last_use_time': 'lastUseTime',
            'machine_type': 'machineType',
            'manual_scaling': 'manualScaling',
            'name': 'name',
            'package_uris': 'packageUris',
            'prediction_class': 'predictionClass',
            'python_version': 'pythonVersion',
            'request_logging_config': 'requestLoggingConfig',
            'routes': 'routes',
            'runtime_version': 'runtimeVersion',
            'service_account': 'serviceAccount',
            'state': 'state'
        }

        self._accelerator_config = accelerator_config
        self._auto_scaling = auto_scaling
        self._container = container
        self._create_time = create_time
        self._deployment_uri = deployment_uri
        self._description = description
        self._error_message = error_message
        self._etag = etag
        self._explanation_config = explanation_config
        self._framework = framework
        self._is_default = is_default
        self._labels = labels
        self._last_migration_model_id = last_migration_model_id
        self._last_migration_time = last_migration_time
        self._last_use_time = last_use_time
        self._machine_type = machine_type
        self._manual_scaling = manual_scaling
        self._name = name
        self._package_uris = package_uris
        self._prediction_class = prediction_class
        self._python_version = python_version
        self._request_logging_config = request_logging_config
        self._routes = routes
        self._runtime_version = runtime_version
        self._service_account = service_account
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudMlV1Version':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudMlV1__Version of this GoogleCloudMlV1Version.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accelerator_config(self):
        """Gets the accelerator_config of this GoogleCloudMlV1Version.


        :return: The accelerator_config of this GoogleCloudMlV1Version.
        :rtype: GoogleCloudMlV1AcceleratorConfig
        """
        return self._accelerator_config

    @accelerator_config.setter
    def accelerator_config(self, accelerator_config):
        """Sets the accelerator_config of this GoogleCloudMlV1Version.


        :param accelerator_config: The accelerator_config of this GoogleCloudMlV1Version.
        :type accelerator_config: GoogleCloudMlV1AcceleratorConfig
        """

        self._accelerator_config = accelerator_config

    @property
    def auto_scaling(self):
        """Gets the auto_scaling of this GoogleCloudMlV1Version.


        :return: The auto_scaling of this GoogleCloudMlV1Version.
        :rtype: GoogleCloudMlV1AutoScaling
        """
        return self._auto_scaling

    @auto_scaling.setter
    def auto_scaling(self, auto_scaling):
        """Sets the auto_scaling of this GoogleCloudMlV1Version.


        :param auto_scaling: The auto_scaling of this GoogleCloudMlV1Version.
        :type auto_scaling: GoogleCloudMlV1AutoScaling
        """

        self._auto_scaling = auto_scaling

    @property
    def container(self):
        """Gets the container of this GoogleCloudMlV1Version.


        :return: The container of this GoogleCloudMlV1Version.
        :rtype: GoogleCloudMlV1ContainerSpec
        """
        return self._container

    @container.setter
    def container(self, container):
        """Sets the container of this GoogleCloudMlV1Version.


        :param container: The container of this GoogleCloudMlV1Version.
        :type container: GoogleCloudMlV1ContainerSpec
        """

        self._container = container

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudMlV1Version.

        Output only. The time the version was created.

        :return: The create_time of this GoogleCloudMlV1Version.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudMlV1Version.

        Output only. The time the version was created.

        :param create_time: The create_time of this GoogleCloudMlV1Version.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def deployment_uri(self):
        """Gets the deployment_uri of this GoogleCloudMlV1Version.

        The Cloud Storage URI of a directory containing trained model artifacts to be used to create the model version. See the [guide to deploying models](/ai-platform/prediction/docs/deploying-models) for more information. The total number of files under this directory must not exceed 1000. During projects.models.versions.create, AI Platform Prediction copies all files from the specified directory to a location managed by the service. From then on, AI Platform Prediction uses these copies of the model artifacts to serve predictions, not the original files in Cloud Storage, so this location is useful only as a historical record. If you specify container, then this field is optional. Otherwise, it is required. Learn [how to use this field with a custom container](/ai-platform/prediction/docs/custom-container-requirements#artifacts).

        :return: The deployment_uri of this GoogleCloudMlV1Version.
        :rtype: str
        """
        return self._deployment_uri

    @deployment_uri.setter
    def deployment_uri(self, deployment_uri):
        """Sets the deployment_uri of this GoogleCloudMlV1Version.

        The Cloud Storage URI of a directory containing trained model artifacts to be used to create the model version. See the [guide to deploying models](/ai-platform/prediction/docs/deploying-models) for more information. The total number of files under this directory must not exceed 1000. During projects.models.versions.create, AI Platform Prediction copies all files from the specified directory to a location managed by the service. From then on, AI Platform Prediction uses these copies of the model artifacts to serve predictions, not the original files in Cloud Storage, so this location is useful only as a historical record. If you specify container, then this field is optional. Otherwise, it is required. Learn [how to use this field with a custom container](/ai-platform/prediction/docs/custom-container-requirements#artifacts).

        :param deployment_uri: The deployment_uri of this GoogleCloudMlV1Version.
        :type deployment_uri: str
        """

        self._deployment_uri = deployment_uri

    @property
    def description(self):
        """Gets the description of this GoogleCloudMlV1Version.

        Optional. The description specified for the version when it was created.

        :return: The description of this GoogleCloudMlV1Version.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudMlV1Version.

        Optional. The description specified for the version when it was created.

        :param description: The description of this GoogleCloudMlV1Version.
        :type description: str
        """

        self._description = description

    @property
    def error_message(self):
        """Gets the error_message of this GoogleCloudMlV1Version.

        Output only. The details of a failure or a cancellation.

        :return: The error_message of this GoogleCloudMlV1Version.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this GoogleCloudMlV1Version.

        Output only. The details of a failure or a cancellation.

        :param error_message: The error_message of this GoogleCloudMlV1Version.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def etag(self):
        """Gets the etag of this GoogleCloudMlV1Version.

        `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a model from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform model updates in order to avoid race conditions: An `etag` is returned in the response to `GetVersion`, and systems are expected to put that etag in the request to `UpdateVersion` to ensure that their change will be applied to the model as intended.

        :return: The etag of this GoogleCloudMlV1Version.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this GoogleCloudMlV1Version.

        `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a model from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform model updates in order to avoid race conditions: An `etag` is returned in the response to `GetVersion`, and systems are expected to put that etag in the request to `UpdateVersion` to ensure that their change will be applied to the model as intended.

        :param etag: The etag of this GoogleCloudMlV1Version.
        :type etag: str
        """

        self._etag = etag

    @property
    def explanation_config(self):
        """Gets the explanation_config of this GoogleCloudMlV1Version.


        :return: The explanation_config of this GoogleCloudMlV1Version.
        :rtype: GoogleCloudMlV1ExplanationConfig
        """
        return self._explanation_config

    @explanation_config.setter
    def explanation_config(self, explanation_config):
        """Sets the explanation_config of this GoogleCloudMlV1Version.


        :param explanation_config: The explanation_config of this GoogleCloudMlV1Version.
        :type explanation_config: GoogleCloudMlV1ExplanationConfig
        """

        self._explanation_config = explanation_config

    @property
    def framework(self):
        """Gets the framework of this GoogleCloudMlV1Version.

        Optional. The machine learning framework AI Platform uses to train this version of the model. Valid values are `TENSORFLOW`, `SCIKIT_LEARN`, `XGBOOST`. If you do not specify a framework, AI Platform will analyze files in the deployment_uri to determine a framework. If you choose `SCIKIT_LEARN` or `XGBOOST`, you must also set the runtime version of the model to 1.4 or greater. Do **not** specify a framework if you're deploying a [custom prediction routine](/ai-platform/prediction/docs/custom-prediction-routines) or if you're using a [custom container](/ai-platform/prediction/docs/use-custom-container).

        :return: The framework of this GoogleCloudMlV1Version.
        :rtype: str
        """
        return self._framework

    @framework.setter
    def framework(self, framework):
        """Sets the framework of this GoogleCloudMlV1Version.

        Optional. The machine learning framework AI Platform uses to train this version of the model. Valid values are `TENSORFLOW`, `SCIKIT_LEARN`, `XGBOOST`. If you do not specify a framework, AI Platform will analyze files in the deployment_uri to determine a framework. If you choose `SCIKIT_LEARN` or `XGBOOST`, you must also set the runtime version of the model to 1.4 or greater. Do **not** specify a framework if you're deploying a [custom prediction routine](/ai-platform/prediction/docs/custom-prediction-routines) or if you're using a [custom container](/ai-platform/prediction/docs/use-custom-container).

        :param framework: The framework of this GoogleCloudMlV1Version.
        :type framework: str
        """
        allowed_values = ["FRAMEWORK_UNSPECIFIED", "TENSORFLOW", "SCIKIT_LEARN", "XGBOOST"]  # noqa: E501
        if framework not in allowed_values:
            raise ValueError(
                "Invalid value for `framework` ({0}), must be one of {1}"
                .format(framework, allowed_values)
            )

        self._framework = framework

    @property
    def is_default(self):
        """Gets the is_default of this GoogleCloudMlV1Version.

        Output only. If true, this version will be used to handle prediction requests that do not specify a version. You can change the default version by calling projects.methods.versions.setDefault.

        :return: The is_default of this GoogleCloudMlV1Version.
        :rtype: bool
        """
        return self._is_default

    @is_default.setter
    def is_default(self, is_default):
        """Sets the is_default of this GoogleCloudMlV1Version.

        Output only. If true, this version will be used to handle prediction requests that do not specify a version. You can change the default version by calling projects.methods.versions.setDefault.

        :param is_default: The is_default of this GoogleCloudMlV1Version.
        :type is_default: bool
        """

        self._is_default = is_default

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudMlV1Version.

        Optional. One or more labels that you can add, to organize your model versions. Each label is a key-value pair, where both the key and the value are arbitrary strings that you supply. For more information, see the documentation on using labels. Note that this field is not updatable for mls1* models.

        :return: The labels of this GoogleCloudMlV1Version.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudMlV1Version.

        Optional. One or more labels that you can add, to organize your model versions. Each label is a key-value pair, where both the key and the value are arbitrary strings that you supply. For more information, see the documentation on using labels. Note that this field is not updatable for mls1* models.

        :param labels: The labels of this GoogleCloudMlV1Version.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def last_migration_model_id(self):
        """Gets the last_migration_model_id of this GoogleCloudMlV1Version.

        Output only. The [AI Platform (Unified) `Model`](https://cloud.google.com/ai-platform-unified/docs/reference/rest/v1beta1/projects.locations.models) ID for the last [model migration](https://cloud.google.com/ai-platform-unified/docs/start/migrating-to-ai-platform-unified).

        :return: The last_migration_model_id of this GoogleCloudMlV1Version.
        :rtype: str
        """
        return self._last_migration_model_id

    @last_migration_model_id.setter
    def last_migration_model_id(self, last_migration_model_id):
        """Sets the last_migration_model_id of this GoogleCloudMlV1Version.

        Output only. The [AI Platform (Unified) `Model`](https://cloud.google.com/ai-platform-unified/docs/reference/rest/v1beta1/projects.locations.models) ID for the last [model migration](https://cloud.google.com/ai-platform-unified/docs/start/migrating-to-ai-platform-unified).

        :param last_migration_model_id: The last_migration_model_id of this GoogleCloudMlV1Version.
        :type last_migration_model_id: str
        """

        self._last_migration_model_id = last_migration_model_id

    @property
    def last_migration_time(self):
        """Gets the last_migration_time of this GoogleCloudMlV1Version.

        Output only. The last time this version was successfully [migrated to AI Platform (Unified)](https://cloud.google.com/ai-platform-unified/docs/start/migrating-to-ai-platform-unified).

        :return: The last_migration_time of this GoogleCloudMlV1Version.
        :rtype: str
        """
        return self._last_migration_time

    @last_migration_time.setter
    def last_migration_time(self, last_migration_time):
        """Sets the last_migration_time of this GoogleCloudMlV1Version.

        Output only. The last time this version was successfully [migrated to AI Platform (Unified)](https://cloud.google.com/ai-platform-unified/docs/start/migrating-to-ai-platform-unified).

        :param last_migration_time: The last_migration_time of this GoogleCloudMlV1Version.
        :type last_migration_time: str
        """

        self._last_migration_time = last_migration_time

    @property
    def last_use_time(self):
        """Gets the last_use_time of this GoogleCloudMlV1Version.

        Output only. The time the version was last used for prediction.

        :return: The last_use_time of this GoogleCloudMlV1Version.
        :rtype: str
        """
        return self._last_use_time

    @last_use_time.setter
    def last_use_time(self, last_use_time):
        """Sets the last_use_time of this GoogleCloudMlV1Version.

        Output only. The time the version was last used for prediction.

        :param last_use_time: The last_use_time of this GoogleCloudMlV1Version.
        :type last_use_time: str
        """

        self._last_use_time = last_use_time

    @property
    def machine_type(self):
        """Gets the machine_type of this GoogleCloudMlV1Version.

        Optional. The type of machine on which to serve the model. Currently only applies to online prediction service. To learn about valid values for this field, read [Choosing a machine type for online prediction](/ai-platform/prediction/docs/machine-types-online-prediction). If this field is not specified and you are using a [regional endpoint](/ai-platform/prediction/docs/regional-endpoints), then the machine type defaults to `n1-standard-2`. If this field is not specified and you are using the global endpoint (`ml.googleapis.com`), then the machine type defaults to `mls1-c1-m2`.

        :return: The machine_type of this GoogleCloudMlV1Version.
        :rtype: str
        """
        return self._machine_type

    @machine_type.setter
    def machine_type(self, machine_type):
        """Sets the machine_type of this GoogleCloudMlV1Version.

        Optional. The type of machine on which to serve the model. Currently only applies to online prediction service. To learn about valid values for this field, read [Choosing a machine type for online prediction](/ai-platform/prediction/docs/machine-types-online-prediction). If this field is not specified and you are using a [regional endpoint](/ai-platform/prediction/docs/regional-endpoints), then the machine type defaults to `n1-standard-2`. If this field is not specified and you are using the global endpoint (`ml.googleapis.com`), then the machine type defaults to `mls1-c1-m2`.

        :param machine_type: The machine_type of this GoogleCloudMlV1Version.
        :type machine_type: str
        """

        self._machine_type = machine_type

    @property
    def manual_scaling(self):
        """Gets the manual_scaling of this GoogleCloudMlV1Version.


        :return: The manual_scaling of this GoogleCloudMlV1Version.
        :rtype: GoogleCloudMlV1ManualScaling
        """
        return self._manual_scaling

    @manual_scaling.setter
    def manual_scaling(self, manual_scaling):
        """Sets the manual_scaling of this GoogleCloudMlV1Version.


        :param manual_scaling: The manual_scaling of this GoogleCloudMlV1Version.
        :type manual_scaling: GoogleCloudMlV1ManualScaling
        """

        self._manual_scaling = manual_scaling

    @property
    def name(self):
        """Gets the name of this GoogleCloudMlV1Version.

        Required. The name specified for the version when it was created. The version name must be unique within the model it is created in.

        :return: The name of this GoogleCloudMlV1Version.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudMlV1Version.

        Required. The name specified for the version when it was created. The version name must be unique within the model it is created in.

        :param name: The name of this GoogleCloudMlV1Version.
        :type name: str
        """

        self._name = name

    @property
    def package_uris(self):
        """Gets the package_uris of this GoogleCloudMlV1Version.

        Optional. Cloud Storage paths (`gs://…`) of packages for [custom prediction routines](/ml-engine/docs/tensorflow/custom-prediction-routines) or [scikit-learn pipelines with custom code](/ml-engine/docs/scikit/exporting-for-prediction#custom-pipeline-code). For a custom prediction routine, one of these packages must contain your Predictor class (see [`predictionClass`](#Version.FIELDS.prediction_class)). Additionally, include any dependencies used by your Predictor or scikit-learn pipeline uses that are not already included in your selected [runtime version](/ml-engine/docs/tensorflow/runtime-version-list). If you specify this field, you must also set [`runtimeVersion`](#Version.FIELDS.runtime_version) to 1.4 or greater.

        :return: The package_uris of this GoogleCloudMlV1Version.
        :rtype: List[str]
        """
        return self._package_uris

    @package_uris.setter
    def package_uris(self, package_uris):
        """Sets the package_uris of this GoogleCloudMlV1Version.

        Optional. Cloud Storage paths (`gs://…`) of packages for [custom prediction routines](/ml-engine/docs/tensorflow/custom-prediction-routines) or [scikit-learn pipelines with custom code](/ml-engine/docs/scikit/exporting-for-prediction#custom-pipeline-code). For a custom prediction routine, one of these packages must contain your Predictor class (see [`predictionClass`](#Version.FIELDS.prediction_class)). Additionally, include any dependencies used by your Predictor or scikit-learn pipeline uses that are not already included in your selected [runtime version](/ml-engine/docs/tensorflow/runtime-version-list). If you specify this field, you must also set [`runtimeVersion`](#Version.FIELDS.runtime_version) to 1.4 or greater.

        :param package_uris: The package_uris of this GoogleCloudMlV1Version.
        :type package_uris: List[str]
        """

        self._package_uris = package_uris

    @property
    def prediction_class(self):
        """Gets the prediction_class of this GoogleCloudMlV1Version.

        Optional. The fully qualified name (module_name.class_name) of a class that implements the Predictor interface described in this reference field. The module containing this class should be included in a package provided to the [`packageUris` field](#Version.FIELDS.package_uris). Specify this field if and only if you are deploying a [custom prediction routine (beta)](/ml-engine/docs/tensorflow/custom-prediction-routines). If you specify this field, you must set [`runtimeVersion`](#Version.FIELDS.runtime_version) to 1.4 or greater and you must set `machineType` to a [legacy (MLS1) machine type](/ml-engine/docs/machine-types-online-prediction). The following code sample provides the Predictor interface: class Predictor(object): \"\"\"Interface for constructing custom predictors.\"\"\" def predict(self, instances, **kwargs): \"\"\"Performs custom prediction. Instances are the decoded values from the request. They have already been deserialized from JSON. Args: instances: A list of prediction input instances. **kwargs: A dictionary of keyword args provided as additional fields on the predict request body. Returns: A list of outputs containing the prediction results. This list must be JSON serializable. \"\"\" raise NotImplementedError() @classmethod def from_path(cls, model_dir): \"\"\"Creates an instance of Predictor using the given path. Loading of the predictor should be done in this method. Args: model_dir: The local directory that contains the exported model file along with any additional files uploaded when creating the version resource. Returns: An instance implementing this Predictor class. \"\"\" raise NotImplementedError() Learn more about [the Predictor interface and custom prediction routines](/ml-engine/docs/tensorflow/custom-prediction-routines).

        :return: The prediction_class of this GoogleCloudMlV1Version.
        :rtype: str
        """
        return self._prediction_class

    @prediction_class.setter
    def prediction_class(self, prediction_class):
        """Sets the prediction_class of this GoogleCloudMlV1Version.

        Optional. The fully qualified name (module_name.class_name) of a class that implements the Predictor interface described in this reference field. The module containing this class should be included in a package provided to the [`packageUris` field](#Version.FIELDS.package_uris). Specify this field if and only if you are deploying a [custom prediction routine (beta)](/ml-engine/docs/tensorflow/custom-prediction-routines). If you specify this field, you must set [`runtimeVersion`](#Version.FIELDS.runtime_version) to 1.4 or greater and you must set `machineType` to a [legacy (MLS1) machine type](/ml-engine/docs/machine-types-online-prediction). The following code sample provides the Predictor interface: class Predictor(object): \"\"\"Interface for constructing custom predictors.\"\"\" def predict(self, instances, **kwargs): \"\"\"Performs custom prediction. Instances are the decoded values from the request. They have already been deserialized from JSON. Args: instances: A list of prediction input instances. **kwargs: A dictionary of keyword args provided as additional fields on the predict request body. Returns: A list of outputs containing the prediction results. This list must be JSON serializable. \"\"\" raise NotImplementedError() @classmethod def from_path(cls, model_dir): \"\"\"Creates an instance of Predictor using the given path. Loading of the predictor should be done in this method. Args: model_dir: The local directory that contains the exported model file along with any additional files uploaded when creating the version resource. Returns: An instance implementing this Predictor class. \"\"\" raise NotImplementedError() Learn more about [the Predictor interface and custom prediction routines](/ml-engine/docs/tensorflow/custom-prediction-routines).

        :param prediction_class: The prediction_class of this GoogleCloudMlV1Version.
        :type prediction_class: str
        """

        self._prediction_class = prediction_class

    @property
    def python_version(self):
        """Gets the python_version of this GoogleCloudMlV1Version.

        Required. The version of Python used in prediction. The following Python versions are available: * Python '3.7' is available when `runtime_version` is set to '1.15' or later. * Python '3.5' is available when `runtime_version` is set to a version from '1.4' to '1.14'. * Python '2.7' is available when `runtime_version` is set to '1.15' or earlier. Read more about the Python versions available for [each runtime version](/ml-engine/docs/runtime-version-list).

        :return: The python_version of this GoogleCloudMlV1Version.
        :rtype: str
        """
        return self._python_version

    @python_version.setter
    def python_version(self, python_version):
        """Sets the python_version of this GoogleCloudMlV1Version.

        Required. The version of Python used in prediction. The following Python versions are available: * Python '3.7' is available when `runtime_version` is set to '1.15' or later. * Python '3.5' is available when `runtime_version` is set to a version from '1.4' to '1.14'. * Python '2.7' is available when `runtime_version` is set to '1.15' or earlier. Read more about the Python versions available for [each runtime version](/ml-engine/docs/runtime-version-list).

        :param python_version: The python_version of this GoogleCloudMlV1Version.
        :type python_version: str
        """

        self._python_version = python_version

    @property
    def request_logging_config(self):
        """Gets the request_logging_config of this GoogleCloudMlV1Version.


        :return: The request_logging_config of this GoogleCloudMlV1Version.
        :rtype: GoogleCloudMlV1RequestLoggingConfig
        """
        return self._request_logging_config

    @request_logging_config.setter
    def request_logging_config(self, request_logging_config):
        """Sets the request_logging_config of this GoogleCloudMlV1Version.


        :param request_logging_config: The request_logging_config of this GoogleCloudMlV1Version.
        :type request_logging_config: GoogleCloudMlV1RequestLoggingConfig
        """

        self._request_logging_config = request_logging_config

    @property
    def routes(self):
        """Gets the routes of this GoogleCloudMlV1Version.


        :return: The routes of this GoogleCloudMlV1Version.
        :rtype: GoogleCloudMlV1RouteMap
        """
        return self._routes

    @routes.setter
    def routes(self, routes):
        """Sets the routes of this GoogleCloudMlV1Version.


        :param routes: The routes of this GoogleCloudMlV1Version.
        :type routes: GoogleCloudMlV1RouteMap
        """

        self._routes = routes

    @property
    def runtime_version(self):
        """Gets the runtime_version of this GoogleCloudMlV1Version.

        Required. The AI Platform runtime version to use for this deployment. For more information, see the [runtime version list](/ml-engine/docs/runtime-version-list) and [how to manage runtime versions](/ml-engine/docs/versioning).

        :return: The runtime_version of this GoogleCloudMlV1Version.
        :rtype: str
        """
        return self._runtime_version

    @runtime_version.setter
    def runtime_version(self, runtime_version):
        """Sets the runtime_version of this GoogleCloudMlV1Version.

        Required. The AI Platform runtime version to use for this deployment. For more information, see the [runtime version list](/ml-engine/docs/runtime-version-list) and [how to manage runtime versions](/ml-engine/docs/versioning).

        :param runtime_version: The runtime_version of this GoogleCloudMlV1Version.
        :type runtime_version: str
        """

        self._runtime_version = runtime_version

    @property
    def service_account(self):
        """Gets the service_account of this GoogleCloudMlV1Version.

        Optional. Specifies the service account for resource access control. If you specify this field, then you must also specify either the `containerSpec` or the `predictionClass` field. Learn more about [using a custom service account](/ai-platform/prediction/docs/custom-service-account).

        :return: The service_account of this GoogleCloudMlV1Version.
        :rtype: str
        """
        return self._service_account

    @service_account.setter
    def service_account(self, service_account):
        """Sets the service_account of this GoogleCloudMlV1Version.

        Optional. Specifies the service account for resource access control. If you specify this field, then you must also specify either the `containerSpec` or the `predictionClass` field. Learn more about [using a custom service account](/ai-platform/prediction/docs/custom-service-account).

        :param service_account: The service_account of this GoogleCloudMlV1Version.
        :type service_account: str
        """

        self._service_account = service_account

    @property
    def state(self):
        """Gets the state of this GoogleCloudMlV1Version.

        Output only. The state of a version.

        :return: The state of this GoogleCloudMlV1Version.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudMlV1Version.

        Output only. The state of a version.

        :param state: The state of this GoogleCloudMlV1Version.
        :type state: str
        """
        allowed_values = ["UNKNOWN", "READY", "CREATING", "FAILED", "DELETING", "UPDATING"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state
