# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_ml_v1_measurement import GoogleCloudMlV1Measurement
from openapi_server.models.google_cloud_ml_v1_trial_parameter import GoogleCloudMlV1TrialParameter
from openapi_server import util


class GoogleCloudMlV1Trial(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_id: str=None, end_time: str=None, final_measurement: GoogleCloudMlV1Measurement=None, infeasible_reason: str=None, measurements: List[GoogleCloudMlV1Measurement]=None, name: str=None, parameters: List[GoogleCloudMlV1TrialParameter]=None, start_time: str=None, state: str=None, trial_infeasible: bool=None):
        """GoogleCloudMlV1Trial - a model defined in OpenAPI

        :param client_id: The client_id of this GoogleCloudMlV1Trial.
        :param end_time: The end_time of this GoogleCloudMlV1Trial.
        :param final_measurement: The final_measurement of this GoogleCloudMlV1Trial.
        :param infeasible_reason: The infeasible_reason of this GoogleCloudMlV1Trial.
        :param measurements: The measurements of this GoogleCloudMlV1Trial.
        :param name: The name of this GoogleCloudMlV1Trial.
        :param parameters: The parameters of this GoogleCloudMlV1Trial.
        :param start_time: The start_time of this GoogleCloudMlV1Trial.
        :param state: The state of this GoogleCloudMlV1Trial.
        :param trial_infeasible: The trial_infeasible of this GoogleCloudMlV1Trial.
        """
        self.openapi_types = {
            'client_id': str,
            'end_time': str,
            'final_measurement': GoogleCloudMlV1Measurement,
            'infeasible_reason': str,
            'measurements': List[GoogleCloudMlV1Measurement],
            'name': str,
            'parameters': List[GoogleCloudMlV1TrialParameter],
            'start_time': str,
            'state': str,
            'trial_infeasible': bool
        }

        self.attribute_map = {
            'client_id': 'clientId',
            'end_time': 'endTime',
            'final_measurement': 'finalMeasurement',
            'infeasible_reason': 'infeasibleReason',
            'measurements': 'measurements',
            'name': 'name',
            'parameters': 'parameters',
            'start_time': 'startTime',
            'state': 'state',
            'trial_infeasible': 'trialInfeasible'
        }

        self._client_id = client_id
        self._end_time = end_time
        self._final_measurement = final_measurement
        self._infeasible_reason = infeasible_reason
        self._measurements = measurements
        self._name = name
        self._parameters = parameters
        self._start_time = start_time
        self._state = state
        self._trial_infeasible = trial_infeasible

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudMlV1Trial':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudMlV1__Trial of this GoogleCloudMlV1Trial.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_id(self):
        """Gets the client_id of this GoogleCloudMlV1Trial.

        Output only. The identifier of the client that originally requested this trial.

        :return: The client_id of this GoogleCloudMlV1Trial.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this GoogleCloudMlV1Trial.

        Output only. The identifier of the client that originally requested this trial.

        :param client_id: The client_id of this GoogleCloudMlV1Trial.
        :type client_id: str
        """

        self._client_id = client_id

    @property
    def end_time(self):
        """Gets the end_time of this GoogleCloudMlV1Trial.

        Output only. Time at which the trial's status changed to COMPLETED.

        :return: The end_time of this GoogleCloudMlV1Trial.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this GoogleCloudMlV1Trial.

        Output only. Time at which the trial's status changed to COMPLETED.

        :param end_time: The end_time of this GoogleCloudMlV1Trial.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def final_measurement(self):
        """Gets the final_measurement of this GoogleCloudMlV1Trial.


        :return: The final_measurement of this GoogleCloudMlV1Trial.
        :rtype: GoogleCloudMlV1Measurement
        """
        return self._final_measurement

    @final_measurement.setter
    def final_measurement(self, final_measurement):
        """Sets the final_measurement of this GoogleCloudMlV1Trial.


        :param final_measurement: The final_measurement of this GoogleCloudMlV1Trial.
        :type final_measurement: GoogleCloudMlV1Measurement
        """

        self._final_measurement = final_measurement

    @property
    def infeasible_reason(self):
        """Gets the infeasible_reason of this GoogleCloudMlV1Trial.

        Output only. A human readable string describing why the trial is infeasible. This should only be set if trial_infeasible is true.

        :return: The infeasible_reason of this GoogleCloudMlV1Trial.
        :rtype: str
        """
        return self._infeasible_reason

    @infeasible_reason.setter
    def infeasible_reason(self, infeasible_reason):
        """Sets the infeasible_reason of this GoogleCloudMlV1Trial.

        Output only. A human readable string describing why the trial is infeasible. This should only be set if trial_infeasible is true.

        :param infeasible_reason: The infeasible_reason of this GoogleCloudMlV1Trial.
        :type infeasible_reason: str
        """

        self._infeasible_reason = infeasible_reason

    @property
    def measurements(self):
        """Gets the measurements of this GoogleCloudMlV1Trial.

        A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_time). These are used for early stopping computations.

        :return: The measurements of this GoogleCloudMlV1Trial.
        :rtype: List[GoogleCloudMlV1Measurement]
        """
        return self._measurements

    @measurements.setter
    def measurements(self, measurements):
        """Sets the measurements of this GoogleCloudMlV1Trial.

        A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_time). These are used for early stopping computations.

        :param measurements: The measurements of this GoogleCloudMlV1Trial.
        :type measurements: List[GoogleCloudMlV1Measurement]
        """

        self._measurements = measurements

    @property
    def name(self):
        """Gets the name of this GoogleCloudMlV1Trial.

        Output only. Name of the trial assigned by the service.

        :return: The name of this GoogleCloudMlV1Trial.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudMlV1Trial.

        Output only. Name of the trial assigned by the service.

        :param name: The name of this GoogleCloudMlV1Trial.
        :type name: str
        """

        self._name = name

    @property
    def parameters(self):
        """Gets the parameters of this GoogleCloudMlV1Trial.

        The parameters of the trial.

        :return: The parameters of this GoogleCloudMlV1Trial.
        :rtype: List[GoogleCloudMlV1TrialParameter]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this GoogleCloudMlV1Trial.

        The parameters of the trial.

        :param parameters: The parameters of this GoogleCloudMlV1Trial.
        :type parameters: List[GoogleCloudMlV1TrialParameter]
        """

        self._parameters = parameters

    @property
    def start_time(self):
        """Gets the start_time of this GoogleCloudMlV1Trial.

        Output only. Time at which the trial was started.

        :return: The start_time of this GoogleCloudMlV1Trial.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this GoogleCloudMlV1Trial.

        Output only. Time at which the trial was started.

        :param start_time: The start_time of this GoogleCloudMlV1Trial.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def state(self):
        """Gets the state of this GoogleCloudMlV1Trial.

        The detailed state of a trial.

        :return: The state of this GoogleCloudMlV1Trial.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudMlV1Trial.

        The detailed state of a trial.

        :param state: The state of this GoogleCloudMlV1Trial.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "REQUESTED", "ACTIVE", "COMPLETED", "STOPPING"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def trial_infeasible(self):
        """Gets the trial_infeasible of this GoogleCloudMlV1Trial.

        Output only. If true, the parameters in this trial are not attempted again.

        :return: The trial_infeasible of this GoogleCloudMlV1Trial.
        :rtype: bool
        """
        return self._trial_infeasible

    @trial_infeasible.setter
    def trial_infeasible(self, trial_infeasible):
        """Sets the trial_infeasible of this GoogleCloudMlV1Trial.

        Output only. If true, the parameters in this trial are not attempted again.

        :param trial_infeasible: The trial_infeasible of this GoogleCloudMlV1Trial.
        :type trial_infeasible: bool
        """

        self._trial_infeasible = trial_infeasible
