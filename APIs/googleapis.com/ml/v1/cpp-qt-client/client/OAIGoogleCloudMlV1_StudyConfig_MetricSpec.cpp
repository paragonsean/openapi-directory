/**
 * AI Platform Training & Prediction API
 * An API to enable creating and using machine learning models.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudMlV1_StudyConfig_MetricSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudMlV1_StudyConfig_MetricSpec::OAIGoogleCloudMlV1_StudyConfig_MetricSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudMlV1_StudyConfig_MetricSpec::OAIGoogleCloudMlV1_StudyConfig_MetricSpec() {
    this->initializeModel();
}

OAIGoogleCloudMlV1_StudyConfig_MetricSpec::~OAIGoogleCloudMlV1_StudyConfig_MetricSpec() {}

void OAIGoogleCloudMlV1_StudyConfig_MetricSpec::initializeModel() {

    m_goal_isSet = false;
    m_goal_isValid = false;

    m_metric_isSet = false;
    m_metric_isValid = false;
}

void OAIGoogleCloudMlV1_StudyConfig_MetricSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudMlV1_StudyConfig_MetricSpec::fromJsonObject(QJsonObject json) {

    m_goal_isValid = ::OpenAPI::fromJsonValue(m_goal, json[QString("goal")]);
    m_goal_isSet = !json[QString("goal")].isNull() && m_goal_isValid;

    m_metric_isValid = ::OpenAPI::fromJsonValue(m_metric, json[QString("metric")]);
    m_metric_isSet = !json[QString("metric")].isNull() && m_metric_isValid;
}

QString OAIGoogleCloudMlV1_StudyConfig_MetricSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudMlV1_StudyConfig_MetricSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_goal_isSet) {
        obj.insert(QString("goal"), ::OpenAPI::toJsonValue(m_goal));
    }
    if (m_metric_isSet) {
        obj.insert(QString("metric"), ::OpenAPI::toJsonValue(m_metric));
    }
    return obj;
}

QString OAIGoogleCloudMlV1_StudyConfig_MetricSpec::getGoal() const {
    return m_goal;
}
void OAIGoogleCloudMlV1_StudyConfig_MetricSpec::setGoal(const QString &goal) {
    m_goal = goal;
    m_goal_isSet = true;
}

bool OAIGoogleCloudMlV1_StudyConfig_MetricSpec::is_goal_Set() const{
    return m_goal_isSet;
}

bool OAIGoogleCloudMlV1_StudyConfig_MetricSpec::is_goal_Valid() const{
    return m_goal_isValid;
}

QString OAIGoogleCloudMlV1_StudyConfig_MetricSpec::getMetric() const {
    return m_metric;
}
void OAIGoogleCloudMlV1_StudyConfig_MetricSpec::setMetric(const QString &metric) {
    m_metric = metric;
    m_metric_isSet = true;
}

bool OAIGoogleCloudMlV1_StudyConfig_MetricSpec::is_metric_Set() const{
    return m_metric_isSet;
}

bool OAIGoogleCloudMlV1_StudyConfig_MetricSpec::is_metric_Valid() const{
    return m_metric_isValid;
}

bool OAIGoogleCloudMlV1_StudyConfig_MetricSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_goal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metric_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudMlV1_StudyConfig_MetricSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
