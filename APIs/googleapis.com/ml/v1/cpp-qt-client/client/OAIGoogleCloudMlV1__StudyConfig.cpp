/**
 * AI Platform Training & Prediction API
 * An API to enable creating and using machine learning models.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudMlV1__StudyConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudMlV1__StudyConfig::OAIGoogleCloudMlV1__StudyConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudMlV1__StudyConfig::OAIGoogleCloudMlV1__StudyConfig() {
    this->initializeModel();
}

OAIGoogleCloudMlV1__StudyConfig::~OAIGoogleCloudMlV1__StudyConfig() {}

void OAIGoogleCloudMlV1__StudyConfig::initializeModel() {

    m_algorithm_isSet = false;
    m_algorithm_isValid = false;

    m_automated_stopping_config_isSet = false;
    m_automated_stopping_config_isValid = false;

    m_metrics_isSet = false;
    m_metrics_isValid = false;

    m_parameters_isSet = false;
    m_parameters_isValid = false;
}

void OAIGoogleCloudMlV1__StudyConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudMlV1__StudyConfig::fromJsonObject(QJsonObject json) {

    m_algorithm_isValid = ::OpenAPI::fromJsonValue(m_algorithm, json[QString("algorithm")]);
    m_algorithm_isSet = !json[QString("algorithm")].isNull() && m_algorithm_isValid;

    m_automated_stopping_config_isValid = ::OpenAPI::fromJsonValue(m_automated_stopping_config, json[QString("automatedStoppingConfig")]);
    m_automated_stopping_config_isSet = !json[QString("automatedStoppingConfig")].isNull() && m_automated_stopping_config_isValid;

    m_metrics_isValid = ::OpenAPI::fromJsonValue(m_metrics, json[QString("metrics")]);
    m_metrics_isSet = !json[QString("metrics")].isNull() && m_metrics_isValid;

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("parameters")]);
    m_parameters_isSet = !json[QString("parameters")].isNull() && m_parameters_isValid;
}

QString OAIGoogleCloudMlV1__StudyConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudMlV1__StudyConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_algorithm_isSet) {
        obj.insert(QString("algorithm"), ::OpenAPI::toJsonValue(m_algorithm));
    }
    if (m_automated_stopping_config.isSet()) {
        obj.insert(QString("automatedStoppingConfig"), ::OpenAPI::toJsonValue(m_automated_stopping_config));
    }
    if (m_metrics.size() > 0) {
        obj.insert(QString("metrics"), ::OpenAPI::toJsonValue(m_metrics));
    }
    if (m_parameters.size() > 0) {
        obj.insert(QString("parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    return obj;
}

QString OAIGoogleCloudMlV1__StudyConfig::getAlgorithm() const {
    return m_algorithm;
}
void OAIGoogleCloudMlV1__StudyConfig::setAlgorithm(const QString &algorithm) {
    m_algorithm = algorithm;
    m_algorithm_isSet = true;
}

bool OAIGoogleCloudMlV1__StudyConfig::is_algorithm_Set() const{
    return m_algorithm_isSet;
}

bool OAIGoogleCloudMlV1__StudyConfig::is_algorithm_Valid() const{
    return m_algorithm_isValid;
}

OAIGoogleCloudMlV1__AutomatedStoppingConfig OAIGoogleCloudMlV1__StudyConfig::getAutomatedStoppingConfig() const {
    return m_automated_stopping_config;
}
void OAIGoogleCloudMlV1__StudyConfig::setAutomatedStoppingConfig(const OAIGoogleCloudMlV1__AutomatedStoppingConfig &automated_stopping_config) {
    m_automated_stopping_config = automated_stopping_config;
    m_automated_stopping_config_isSet = true;
}

bool OAIGoogleCloudMlV1__StudyConfig::is_automated_stopping_config_Set() const{
    return m_automated_stopping_config_isSet;
}

bool OAIGoogleCloudMlV1__StudyConfig::is_automated_stopping_config_Valid() const{
    return m_automated_stopping_config_isValid;
}

QList<OAIGoogleCloudMlV1_StudyConfig_MetricSpec> OAIGoogleCloudMlV1__StudyConfig::getMetrics() const {
    return m_metrics;
}
void OAIGoogleCloudMlV1__StudyConfig::setMetrics(const QList<OAIGoogleCloudMlV1_StudyConfig_MetricSpec> &metrics) {
    m_metrics = metrics;
    m_metrics_isSet = true;
}

bool OAIGoogleCloudMlV1__StudyConfig::is_metrics_Set() const{
    return m_metrics_isSet;
}

bool OAIGoogleCloudMlV1__StudyConfig::is_metrics_Valid() const{
    return m_metrics_isValid;
}

QList<OAIGoogleCloudMlV1_StudyConfig_ParameterSpec> OAIGoogleCloudMlV1__StudyConfig::getParameters() const {
    return m_parameters;
}
void OAIGoogleCloudMlV1__StudyConfig::setParameters(const QList<OAIGoogleCloudMlV1_StudyConfig_ParameterSpec> &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAIGoogleCloudMlV1__StudyConfig::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAIGoogleCloudMlV1__StudyConfig::is_parameters_Valid() const{
    return m_parameters_isValid;
}

bool OAIGoogleCloudMlV1__StudyConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_algorithm_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_automated_stopping_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_metrics.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudMlV1__StudyConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
