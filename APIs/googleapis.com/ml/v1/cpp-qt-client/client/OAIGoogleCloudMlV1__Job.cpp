/**
 * AI Platform Training & Prediction API
 * An API to enable creating and using machine learning models.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudMlV1__Job.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudMlV1__Job::OAIGoogleCloudMlV1__Job(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudMlV1__Job::OAIGoogleCloudMlV1__Job() {
    this->initializeModel();
}

OAIGoogleCloudMlV1__Job::~OAIGoogleCloudMlV1__Job() {}

void OAIGoogleCloudMlV1__Job::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_error_message_isSet = false;
    m_error_message_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_job_id_isSet = false;
    m_job_id_isValid = false;

    m_job_position_isSet = false;
    m_job_position_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_prediction_input_isSet = false;
    m_prediction_input_isValid = false;

    m_prediction_output_isSet = false;
    m_prediction_output_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_training_input_isSet = false;
    m_training_input_isValid = false;

    m_training_output_isSet = false;
    m_training_output_isValid = false;
}

void OAIGoogleCloudMlV1__Job::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudMlV1__Job::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_error_message_isValid = ::OpenAPI::fromJsonValue(m_error_message, json[QString("errorMessage")]);
    m_error_message_isSet = !json[QString("errorMessage")].isNull() && m_error_message_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_job_id_isValid = ::OpenAPI::fromJsonValue(m_job_id, json[QString("jobId")]);
    m_job_id_isSet = !json[QString("jobId")].isNull() && m_job_id_isValid;

    m_job_position_isValid = ::OpenAPI::fromJsonValue(m_job_position, json[QString("jobPosition")]);
    m_job_position_isSet = !json[QString("jobPosition")].isNull() && m_job_position_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_prediction_input_isValid = ::OpenAPI::fromJsonValue(m_prediction_input, json[QString("predictionInput")]);
    m_prediction_input_isSet = !json[QString("predictionInput")].isNull() && m_prediction_input_isValid;

    m_prediction_output_isValid = ::OpenAPI::fromJsonValue(m_prediction_output, json[QString("predictionOutput")]);
    m_prediction_output_isSet = !json[QString("predictionOutput")].isNull() && m_prediction_output_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_training_input_isValid = ::OpenAPI::fromJsonValue(m_training_input, json[QString("trainingInput")]);
    m_training_input_isSet = !json[QString("trainingInput")].isNull() && m_training_input_isValid;

    m_training_output_isValid = ::OpenAPI::fromJsonValue(m_training_output, json[QString("trainingOutput")]);
    m_training_output_isSet = !json[QString("trainingOutput")].isNull() && m_training_output_isValid;
}

QString OAIGoogleCloudMlV1__Job::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudMlV1__Job::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_error_message_isSet) {
        obj.insert(QString("errorMessage"), ::OpenAPI::toJsonValue(m_error_message));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_job_id_isSet) {
        obj.insert(QString("jobId"), ::OpenAPI::toJsonValue(m_job_id));
    }
    if (m_job_position_isSet) {
        obj.insert(QString("jobPosition"), ::OpenAPI::toJsonValue(m_job_position));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_prediction_input.isSet()) {
        obj.insert(QString("predictionInput"), ::OpenAPI::toJsonValue(m_prediction_input));
    }
    if (m_prediction_output.isSet()) {
        obj.insert(QString("predictionOutput"), ::OpenAPI::toJsonValue(m_prediction_output));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_training_input.isSet()) {
        obj.insert(QString("trainingInput"), ::OpenAPI::toJsonValue(m_training_input));
    }
    if (m_training_output.isSet()) {
        obj.insert(QString("trainingOutput"), ::OpenAPI::toJsonValue(m_training_output));
    }
    return obj;
}

QString OAIGoogleCloudMlV1__Job::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudMlV1__Job::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudMlV1__Job::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudMlV1__Job::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudMlV1__Job::getEndTime() const {
    return m_end_time;
}
void OAIGoogleCloudMlV1__Job::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleCloudMlV1__Job::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleCloudMlV1__Job::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIGoogleCloudMlV1__Job::getErrorMessage() const {
    return m_error_message;
}
void OAIGoogleCloudMlV1__Job::setErrorMessage(const QString &error_message) {
    m_error_message = error_message;
    m_error_message_isSet = true;
}

bool OAIGoogleCloudMlV1__Job::is_error_message_Set() const{
    return m_error_message_isSet;
}

bool OAIGoogleCloudMlV1__Job::is_error_message_Valid() const{
    return m_error_message_isValid;
}

QByteArray OAIGoogleCloudMlV1__Job::getEtag() const {
    return m_etag;
}
void OAIGoogleCloudMlV1__Job::setEtag(const QByteArray &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIGoogleCloudMlV1__Job::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIGoogleCloudMlV1__Job::is_etag_Valid() const{
    return m_etag_isValid;
}

QString OAIGoogleCloudMlV1__Job::getJobId() const {
    return m_job_id;
}
void OAIGoogleCloudMlV1__Job::setJobId(const QString &job_id) {
    m_job_id = job_id;
    m_job_id_isSet = true;
}

bool OAIGoogleCloudMlV1__Job::is_job_id_Set() const{
    return m_job_id_isSet;
}

bool OAIGoogleCloudMlV1__Job::is_job_id_Valid() const{
    return m_job_id_isValid;
}

QString OAIGoogleCloudMlV1__Job::getJobPosition() const {
    return m_job_position;
}
void OAIGoogleCloudMlV1__Job::setJobPosition(const QString &job_position) {
    m_job_position = job_position;
    m_job_position_isSet = true;
}

bool OAIGoogleCloudMlV1__Job::is_job_position_Set() const{
    return m_job_position_isSet;
}

bool OAIGoogleCloudMlV1__Job::is_job_position_Valid() const{
    return m_job_position_isValid;
}

QMap<QString, QString> OAIGoogleCloudMlV1__Job::getLabels() const {
    return m_labels;
}
void OAIGoogleCloudMlV1__Job::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGoogleCloudMlV1__Job::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGoogleCloudMlV1__Job::is_labels_Valid() const{
    return m_labels_isValid;
}

OAIGoogleCloudMlV1__PredictionInput OAIGoogleCloudMlV1__Job::getPredictionInput() const {
    return m_prediction_input;
}
void OAIGoogleCloudMlV1__Job::setPredictionInput(const OAIGoogleCloudMlV1__PredictionInput &prediction_input) {
    m_prediction_input = prediction_input;
    m_prediction_input_isSet = true;
}

bool OAIGoogleCloudMlV1__Job::is_prediction_input_Set() const{
    return m_prediction_input_isSet;
}

bool OAIGoogleCloudMlV1__Job::is_prediction_input_Valid() const{
    return m_prediction_input_isValid;
}

OAIGoogleCloudMlV1__PredictionOutput OAIGoogleCloudMlV1__Job::getPredictionOutput() const {
    return m_prediction_output;
}
void OAIGoogleCloudMlV1__Job::setPredictionOutput(const OAIGoogleCloudMlV1__PredictionOutput &prediction_output) {
    m_prediction_output = prediction_output;
    m_prediction_output_isSet = true;
}

bool OAIGoogleCloudMlV1__Job::is_prediction_output_Set() const{
    return m_prediction_output_isSet;
}

bool OAIGoogleCloudMlV1__Job::is_prediction_output_Valid() const{
    return m_prediction_output_isValid;
}

QString OAIGoogleCloudMlV1__Job::getStartTime() const {
    return m_start_time;
}
void OAIGoogleCloudMlV1__Job::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleCloudMlV1__Job::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleCloudMlV1__Job::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIGoogleCloudMlV1__Job::getState() const {
    return m_state;
}
void OAIGoogleCloudMlV1__Job::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudMlV1__Job::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudMlV1__Job::is_state_Valid() const{
    return m_state_isValid;
}

OAIGoogleCloudMlV1__TrainingInput OAIGoogleCloudMlV1__Job::getTrainingInput() const {
    return m_training_input;
}
void OAIGoogleCloudMlV1__Job::setTrainingInput(const OAIGoogleCloudMlV1__TrainingInput &training_input) {
    m_training_input = training_input;
    m_training_input_isSet = true;
}

bool OAIGoogleCloudMlV1__Job::is_training_input_Set() const{
    return m_training_input_isSet;
}

bool OAIGoogleCloudMlV1__Job::is_training_input_Valid() const{
    return m_training_input_isValid;
}

OAIGoogleCloudMlV1__TrainingOutput OAIGoogleCloudMlV1__Job::getTrainingOutput() const {
    return m_training_output;
}
void OAIGoogleCloudMlV1__Job::setTrainingOutput(const OAIGoogleCloudMlV1__TrainingOutput &training_output) {
    m_training_output = training_output;
    m_training_output_isSet = true;
}

bool OAIGoogleCloudMlV1__Job::is_training_output_Set() const{
    return m_training_output_isSet;
}

bool OAIGoogleCloudMlV1__Job::is_training_output_Valid() const{
    return m_training_output_isValid;
}

bool OAIGoogleCloudMlV1__Job::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_position_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_prediction_input.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_prediction_output.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_training_input.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_training_output.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudMlV1__Job::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
