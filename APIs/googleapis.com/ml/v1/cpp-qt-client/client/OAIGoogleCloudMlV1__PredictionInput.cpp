/**
 * AI Platform Training & Prediction API
 * An API to enable creating and using machine learning models.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudMlV1__PredictionInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudMlV1__PredictionInput::OAIGoogleCloudMlV1__PredictionInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudMlV1__PredictionInput::OAIGoogleCloudMlV1__PredictionInput() {
    this->initializeModel();
}

OAIGoogleCloudMlV1__PredictionInput::~OAIGoogleCloudMlV1__PredictionInput() {}

void OAIGoogleCloudMlV1__PredictionInput::initializeModel() {

    m_batch_size_isSet = false;
    m_batch_size_isValid = false;

    m_data_format_isSet = false;
    m_data_format_isValid = false;

    m_input_paths_isSet = false;
    m_input_paths_isValid = false;

    m_max_worker_count_isSet = false;
    m_max_worker_count_isValid = false;

    m_model_name_isSet = false;
    m_model_name_isValid = false;

    m_output_data_format_isSet = false;
    m_output_data_format_isValid = false;

    m_output_path_isSet = false;
    m_output_path_isValid = false;

    m_region_isSet = false;
    m_region_isValid = false;

    m_runtime_version_isSet = false;
    m_runtime_version_isValid = false;

    m_signature_name_isSet = false;
    m_signature_name_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;

    m_version_name_isSet = false;
    m_version_name_isValid = false;
}

void OAIGoogleCloudMlV1__PredictionInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudMlV1__PredictionInput::fromJsonObject(QJsonObject json) {

    m_batch_size_isValid = ::OpenAPI::fromJsonValue(m_batch_size, json[QString("batchSize")]);
    m_batch_size_isSet = !json[QString("batchSize")].isNull() && m_batch_size_isValid;

    m_data_format_isValid = ::OpenAPI::fromJsonValue(m_data_format, json[QString("dataFormat")]);
    m_data_format_isSet = !json[QString("dataFormat")].isNull() && m_data_format_isValid;

    m_input_paths_isValid = ::OpenAPI::fromJsonValue(m_input_paths, json[QString("inputPaths")]);
    m_input_paths_isSet = !json[QString("inputPaths")].isNull() && m_input_paths_isValid;

    m_max_worker_count_isValid = ::OpenAPI::fromJsonValue(m_max_worker_count, json[QString("maxWorkerCount")]);
    m_max_worker_count_isSet = !json[QString("maxWorkerCount")].isNull() && m_max_worker_count_isValid;

    m_model_name_isValid = ::OpenAPI::fromJsonValue(m_model_name, json[QString("modelName")]);
    m_model_name_isSet = !json[QString("modelName")].isNull() && m_model_name_isValid;

    m_output_data_format_isValid = ::OpenAPI::fromJsonValue(m_output_data_format, json[QString("outputDataFormat")]);
    m_output_data_format_isSet = !json[QString("outputDataFormat")].isNull() && m_output_data_format_isValid;

    m_output_path_isValid = ::OpenAPI::fromJsonValue(m_output_path, json[QString("outputPath")]);
    m_output_path_isSet = !json[QString("outputPath")].isNull() && m_output_path_isValid;

    m_region_isValid = ::OpenAPI::fromJsonValue(m_region, json[QString("region")]);
    m_region_isSet = !json[QString("region")].isNull() && m_region_isValid;

    m_runtime_version_isValid = ::OpenAPI::fromJsonValue(m_runtime_version, json[QString("runtimeVersion")]);
    m_runtime_version_isSet = !json[QString("runtimeVersion")].isNull() && m_runtime_version_isValid;

    m_signature_name_isValid = ::OpenAPI::fromJsonValue(m_signature_name, json[QString("signatureName")]);
    m_signature_name_isSet = !json[QString("signatureName")].isNull() && m_signature_name_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;

    m_version_name_isValid = ::OpenAPI::fromJsonValue(m_version_name, json[QString("versionName")]);
    m_version_name_isSet = !json[QString("versionName")].isNull() && m_version_name_isValid;
}

QString OAIGoogleCloudMlV1__PredictionInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudMlV1__PredictionInput::asJsonObject() const {
    QJsonObject obj;
    if (m_batch_size_isSet) {
        obj.insert(QString("batchSize"), ::OpenAPI::toJsonValue(m_batch_size));
    }
    if (m_data_format_isSet) {
        obj.insert(QString("dataFormat"), ::OpenAPI::toJsonValue(m_data_format));
    }
    if (m_input_paths.size() > 0) {
        obj.insert(QString("inputPaths"), ::OpenAPI::toJsonValue(m_input_paths));
    }
    if (m_max_worker_count_isSet) {
        obj.insert(QString("maxWorkerCount"), ::OpenAPI::toJsonValue(m_max_worker_count));
    }
    if (m_model_name_isSet) {
        obj.insert(QString("modelName"), ::OpenAPI::toJsonValue(m_model_name));
    }
    if (m_output_data_format_isSet) {
        obj.insert(QString("outputDataFormat"), ::OpenAPI::toJsonValue(m_output_data_format));
    }
    if (m_output_path_isSet) {
        obj.insert(QString("outputPath"), ::OpenAPI::toJsonValue(m_output_path));
    }
    if (m_region_isSet) {
        obj.insert(QString("region"), ::OpenAPI::toJsonValue(m_region));
    }
    if (m_runtime_version_isSet) {
        obj.insert(QString("runtimeVersion"), ::OpenAPI::toJsonValue(m_runtime_version));
    }
    if (m_signature_name_isSet) {
        obj.insert(QString("signatureName"), ::OpenAPI::toJsonValue(m_signature_name));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    if (m_version_name_isSet) {
        obj.insert(QString("versionName"), ::OpenAPI::toJsonValue(m_version_name));
    }
    return obj;
}

QString OAIGoogleCloudMlV1__PredictionInput::getBatchSize() const {
    return m_batch_size;
}
void OAIGoogleCloudMlV1__PredictionInput::setBatchSize(const QString &batch_size) {
    m_batch_size = batch_size;
    m_batch_size_isSet = true;
}

bool OAIGoogleCloudMlV1__PredictionInput::is_batch_size_Set() const{
    return m_batch_size_isSet;
}

bool OAIGoogleCloudMlV1__PredictionInput::is_batch_size_Valid() const{
    return m_batch_size_isValid;
}

QString OAIGoogleCloudMlV1__PredictionInput::getDataFormat() const {
    return m_data_format;
}
void OAIGoogleCloudMlV1__PredictionInput::setDataFormat(const QString &data_format) {
    m_data_format = data_format;
    m_data_format_isSet = true;
}

bool OAIGoogleCloudMlV1__PredictionInput::is_data_format_Set() const{
    return m_data_format_isSet;
}

bool OAIGoogleCloudMlV1__PredictionInput::is_data_format_Valid() const{
    return m_data_format_isValid;
}

QList<QString> OAIGoogleCloudMlV1__PredictionInput::getInputPaths() const {
    return m_input_paths;
}
void OAIGoogleCloudMlV1__PredictionInput::setInputPaths(const QList<QString> &input_paths) {
    m_input_paths = input_paths;
    m_input_paths_isSet = true;
}

bool OAIGoogleCloudMlV1__PredictionInput::is_input_paths_Set() const{
    return m_input_paths_isSet;
}

bool OAIGoogleCloudMlV1__PredictionInput::is_input_paths_Valid() const{
    return m_input_paths_isValid;
}

QString OAIGoogleCloudMlV1__PredictionInput::getMaxWorkerCount() const {
    return m_max_worker_count;
}
void OAIGoogleCloudMlV1__PredictionInput::setMaxWorkerCount(const QString &max_worker_count) {
    m_max_worker_count = max_worker_count;
    m_max_worker_count_isSet = true;
}

bool OAIGoogleCloudMlV1__PredictionInput::is_max_worker_count_Set() const{
    return m_max_worker_count_isSet;
}

bool OAIGoogleCloudMlV1__PredictionInput::is_max_worker_count_Valid() const{
    return m_max_worker_count_isValid;
}

QString OAIGoogleCloudMlV1__PredictionInput::getModelName() const {
    return m_model_name;
}
void OAIGoogleCloudMlV1__PredictionInput::setModelName(const QString &model_name) {
    m_model_name = model_name;
    m_model_name_isSet = true;
}

bool OAIGoogleCloudMlV1__PredictionInput::is_model_name_Set() const{
    return m_model_name_isSet;
}

bool OAIGoogleCloudMlV1__PredictionInput::is_model_name_Valid() const{
    return m_model_name_isValid;
}

QString OAIGoogleCloudMlV1__PredictionInput::getOutputDataFormat() const {
    return m_output_data_format;
}
void OAIGoogleCloudMlV1__PredictionInput::setOutputDataFormat(const QString &output_data_format) {
    m_output_data_format = output_data_format;
    m_output_data_format_isSet = true;
}

bool OAIGoogleCloudMlV1__PredictionInput::is_output_data_format_Set() const{
    return m_output_data_format_isSet;
}

bool OAIGoogleCloudMlV1__PredictionInput::is_output_data_format_Valid() const{
    return m_output_data_format_isValid;
}

QString OAIGoogleCloudMlV1__PredictionInput::getOutputPath() const {
    return m_output_path;
}
void OAIGoogleCloudMlV1__PredictionInput::setOutputPath(const QString &output_path) {
    m_output_path = output_path;
    m_output_path_isSet = true;
}

bool OAIGoogleCloudMlV1__PredictionInput::is_output_path_Set() const{
    return m_output_path_isSet;
}

bool OAIGoogleCloudMlV1__PredictionInput::is_output_path_Valid() const{
    return m_output_path_isValid;
}

QString OAIGoogleCloudMlV1__PredictionInput::getRegion() const {
    return m_region;
}
void OAIGoogleCloudMlV1__PredictionInput::setRegion(const QString &region) {
    m_region = region;
    m_region_isSet = true;
}

bool OAIGoogleCloudMlV1__PredictionInput::is_region_Set() const{
    return m_region_isSet;
}

bool OAIGoogleCloudMlV1__PredictionInput::is_region_Valid() const{
    return m_region_isValid;
}

QString OAIGoogleCloudMlV1__PredictionInput::getRuntimeVersion() const {
    return m_runtime_version;
}
void OAIGoogleCloudMlV1__PredictionInput::setRuntimeVersion(const QString &runtime_version) {
    m_runtime_version = runtime_version;
    m_runtime_version_isSet = true;
}

bool OAIGoogleCloudMlV1__PredictionInput::is_runtime_version_Set() const{
    return m_runtime_version_isSet;
}

bool OAIGoogleCloudMlV1__PredictionInput::is_runtime_version_Valid() const{
    return m_runtime_version_isValid;
}

QString OAIGoogleCloudMlV1__PredictionInput::getSignatureName() const {
    return m_signature_name;
}
void OAIGoogleCloudMlV1__PredictionInput::setSignatureName(const QString &signature_name) {
    m_signature_name = signature_name;
    m_signature_name_isSet = true;
}

bool OAIGoogleCloudMlV1__PredictionInput::is_signature_name_Set() const{
    return m_signature_name_isSet;
}

bool OAIGoogleCloudMlV1__PredictionInput::is_signature_name_Valid() const{
    return m_signature_name_isValid;
}

QString OAIGoogleCloudMlV1__PredictionInput::getUri() const {
    return m_uri;
}
void OAIGoogleCloudMlV1__PredictionInput::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIGoogleCloudMlV1__PredictionInput::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIGoogleCloudMlV1__PredictionInput::is_uri_Valid() const{
    return m_uri_isValid;
}

QString OAIGoogleCloudMlV1__PredictionInput::getVersionName() const {
    return m_version_name;
}
void OAIGoogleCloudMlV1__PredictionInput::setVersionName(const QString &version_name) {
    m_version_name = version_name;
    m_version_name_isSet = true;
}

bool OAIGoogleCloudMlV1__PredictionInput::is_version_name_Set() const{
    return m_version_name_isSet;
}

bool OAIGoogleCloudMlV1__PredictionInput::is_version_name_Valid() const{
    return m_version_name_isValid;
}

bool OAIGoogleCloudMlV1__PredictionInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_batch_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_format_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_paths.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_worker_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_data_format_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_runtime_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_signature_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudMlV1__PredictionInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
