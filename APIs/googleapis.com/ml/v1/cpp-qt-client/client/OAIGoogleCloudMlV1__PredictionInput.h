/**
 * AI Platform Training & Prediction API
 * An API to enable creating and using machine learning models.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudMlV1__PredictionInput.h
 *
 * Represents input parameters for a prediction job.
 */

#ifndef OAIGoogleCloudMlV1__PredictionInput_H
#define OAIGoogleCloudMlV1__PredictionInput_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudMlV1__PredictionInput : public OAIObject {
public:
    OAIGoogleCloudMlV1__PredictionInput();
    OAIGoogleCloudMlV1__PredictionInput(QString json);
    ~OAIGoogleCloudMlV1__PredictionInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBatchSize() const;
    void setBatchSize(const QString &batch_size);
    bool is_batch_size_Set() const;
    bool is_batch_size_Valid() const;

    QString getDataFormat() const;
    void setDataFormat(const QString &data_format);
    bool is_data_format_Set() const;
    bool is_data_format_Valid() const;

    QList<QString> getInputPaths() const;
    void setInputPaths(const QList<QString> &input_paths);
    bool is_input_paths_Set() const;
    bool is_input_paths_Valid() const;

    QString getMaxWorkerCount() const;
    void setMaxWorkerCount(const QString &max_worker_count);
    bool is_max_worker_count_Set() const;
    bool is_max_worker_count_Valid() const;

    QString getModelName() const;
    void setModelName(const QString &model_name);
    bool is_model_name_Set() const;
    bool is_model_name_Valid() const;

    QString getOutputDataFormat() const;
    void setOutputDataFormat(const QString &output_data_format);
    bool is_output_data_format_Set() const;
    bool is_output_data_format_Valid() const;

    QString getOutputPath() const;
    void setOutputPath(const QString &output_path);
    bool is_output_path_Set() const;
    bool is_output_path_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    QString getRuntimeVersion() const;
    void setRuntimeVersion(const QString &runtime_version);
    bool is_runtime_version_Set() const;
    bool is_runtime_version_Valid() const;

    QString getSignatureName() const;
    void setSignatureName(const QString &signature_name);
    bool is_signature_name_Set() const;
    bool is_signature_name_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    QString getVersionName() const;
    void setVersionName(const QString &version_name);
    bool is_version_name_Set() const;
    bool is_version_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_batch_size;
    bool m_batch_size_isSet;
    bool m_batch_size_isValid;

    QString m_data_format;
    bool m_data_format_isSet;
    bool m_data_format_isValid;

    QList<QString> m_input_paths;
    bool m_input_paths_isSet;
    bool m_input_paths_isValid;

    QString m_max_worker_count;
    bool m_max_worker_count_isSet;
    bool m_max_worker_count_isValid;

    QString m_model_name;
    bool m_model_name_isSet;
    bool m_model_name_isValid;

    QString m_output_data_format;
    bool m_output_data_format_isSet;
    bool m_output_data_format_isValid;

    QString m_output_path;
    bool m_output_path_isSet;
    bool m_output_path_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    QString m_runtime_version;
    bool m_runtime_version_isSet;
    bool m_runtime_version_isValid;

    QString m_signature_name;
    bool m_signature_name_isSet;
    bool m_signature_name_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;

    QString m_version_name;
    bool m_version_name_isSet;
    bool m_version_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudMlV1__PredictionInput)

#endif // OAIGoogleCloudMlV1__PredictionInput_H
