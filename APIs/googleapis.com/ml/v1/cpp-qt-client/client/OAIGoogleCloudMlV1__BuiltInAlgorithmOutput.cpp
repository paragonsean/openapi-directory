/**
 * AI Platform Training & Prediction API
 * An API to enable creating and using machine learning models.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudMlV1__BuiltInAlgorithmOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::OAIGoogleCloudMlV1__BuiltInAlgorithmOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::OAIGoogleCloudMlV1__BuiltInAlgorithmOutput() {
    this->initializeModel();
}

OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::~OAIGoogleCloudMlV1__BuiltInAlgorithmOutput() {}

void OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::initializeModel() {

    m_framework_isSet = false;
    m_framework_isValid = false;

    m_model_path_isSet = false;
    m_model_path_isValid = false;

    m_python_version_isSet = false;
    m_python_version_isValid = false;

    m_runtime_version_isSet = false;
    m_runtime_version_isValid = false;
}

void OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::fromJsonObject(QJsonObject json) {

    m_framework_isValid = ::OpenAPI::fromJsonValue(m_framework, json[QString("framework")]);
    m_framework_isSet = !json[QString("framework")].isNull() && m_framework_isValid;

    m_model_path_isValid = ::OpenAPI::fromJsonValue(m_model_path, json[QString("modelPath")]);
    m_model_path_isSet = !json[QString("modelPath")].isNull() && m_model_path_isValid;

    m_python_version_isValid = ::OpenAPI::fromJsonValue(m_python_version, json[QString("pythonVersion")]);
    m_python_version_isSet = !json[QString("pythonVersion")].isNull() && m_python_version_isValid;

    m_runtime_version_isValid = ::OpenAPI::fromJsonValue(m_runtime_version, json[QString("runtimeVersion")]);
    m_runtime_version_isSet = !json[QString("runtimeVersion")].isNull() && m_runtime_version_isValid;
}

QString OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_framework_isSet) {
        obj.insert(QString("framework"), ::OpenAPI::toJsonValue(m_framework));
    }
    if (m_model_path_isSet) {
        obj.insert(QString("modelPath"), ::OpenAPI::toJsonValue(m_model_path));
    }
    if (m_python_version_isSet) {
        obj.insert(QString("pythonVersion"), ::OpenAPI::toJsonValue(m_python_version));
    }
    if (m_runtime_version_isSet) {
        obj.insert(QString("runtimeVersion"), ::OpenAPI::toJsonValue(m_runtime_version));
    }
    return obj;
}

QString OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::getFramework() const {
    return m_framework;
}
void OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::setFramework(const QString &framework) {
    m_framework = framework;
    m_framework_isSet = true;
}

bool OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::is_framework_Set() const{
    return m_framework_isSet;
}

bool OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::is_framework_Valid() const{
    return m_framework_isValid;
}

QString OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::getModelPath() const {
    return m_model_path;
}
void OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::setModelPath(const QString &model_path) {
    m_model_path = model_path;
    m_model_path_isSet = true;
}

bool OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::is_model_path_Set() const{
    return m_model_path_isSet;
}

bool OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::is_model_path_Valid() const{
    return m_model_path_isValid;
}

QString OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::getPythonVersion() const {
    return m_python_version;
}
void OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::setPythonVersion(const QString &python_version) {
    m_python_version = python_version;
    m_python_version_isSet = true;
}

bool OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::is_python_version_Set() const{
    return m_python_version_isSet;
}

bool OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::is_python_version_Valid() const{
    return m_python_version_isValid;
}

QString OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::getRuntimeVersion() const {
    return m_runtime_version;
}
void OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::setRuntimeVersion(const QString &runtime_version) {
    m_runtime_version = runtime_version;
    m_runtime_version_isSet = true;
}

bool OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::is_runtime_version_Set() const{
    return m_runtime_version_isSet;
}

bool OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::is_runtime_version_Valid() const{
    return m_runtime_version_isValid;
}

bool OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_framework_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_python_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_runtime_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudMlV1__BuiltInAlgorithmOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
