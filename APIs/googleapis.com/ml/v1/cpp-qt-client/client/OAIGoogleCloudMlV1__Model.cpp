/**
 * AI Platform Training & Prediction API
 * An API to enable creating and using machine learning models.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudMlV1__Model.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudMlV1__Model::OAIGoogleCloudMlV1__Model(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudMlV1__Model::OAIGoogleCloudMlV1__Model() {
    this->initializeModel();
}

OAIGoogleCloudMlV1__Model::~OAIGoogleCloudMlV1__Model() {}

void OAIGoogleCloudMlV1__Model::initializeModel() {

    m_default_version_isSet = false;
    m_default_version_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_online_prediction_console_logging_isSet = false;
    m_online_prediction_console_logging_isValid = false;

    m_online_prediction_logging_isSet = false;
    m_online_prediction_logging_isValid = false;

    m_regions_isSet = false;
    m_regions_isValid = false;
}

void OAIGoogleCloudMlV1__Model::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudMlV1__Model::fromJsonObject(QJsonObject json) {

    m_default_version_isValid = ::OpenAPI::fromJsonValue(m_default_version, json[QString("defaultVersion")]);
    m_default_version_isSet = !json[QString("defaultVersion")].isNull() && m_default_version_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_online_prediction_console_logging_isValid = ::OpenAPI::fromJsonValue(m_online_prediction_console_logging, json[QString("onlinePredictionConsoleLogging")]);
    m_online_prediction_console_logging_isSet = !json[QString("onlinePredictionConsoleLogging")].isNull() && m_online_prediction_console_logging_isValid;

    m_online_prediction_logging_isValid = ::OpenAPI::fromJsonValue(m_online_prediction_logging, json[QString("onlinePredictionLogging")]);
    m_online_prediction_logging_isSet = !json[QString("onlinePredictionLogging")].isNull() && m_online_prediction_logging_isValid;

    m_regions_isValid = ::OpenAPI::fromJsonValue(m_regions, json[QString("regions")]);
    m_regions_isSet = !json[QString("regions")].isNull() && m_regions_isValid;
}

QString OAIGoogleCloudMlV1__Model::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudMlV1__Model::asJsonObject() const {
    QJsonObject obj;
    if (m_default_version.isSet()) {
        obj.insert(QString("defaultVersion"), ::OpenAPI::toJsonValue(m_default_version));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_online_prediction_console_logging_isSet) {
        obj.insert(QString("onlinePredictionConsoleLogging"), ::OpenAPI::toJsonValue(m_online_prediction_console_logging));
    }
    if (m_online_prediction_logging_isSet) {
        obj.insert(QString("onlinePredictionLogging"), ::OpenAPI::toJsonValue(m_online_prediction_logging));
    }
    if (m_regions.size() > 0) {
        obj.insert(QString("regions"), ::OpenAPI::toJsonValue(m_regions));
    }
    return obj;
}

OAIGoogleCloudMlV1__Version OAIGoogleCloudMlV1__Model::getDefaultVersion() const {
    return m_default_version;
}
void OAIGoogleCloudMlV1__Model::setDefaultVersion(const OAIGoogleCloudMlV1__Version &default_version) {
    m_default_version = default_version;
    m_default_version_isSet = true;
}

bool OAIGoogleCloudMlV1__Model::is_default_version_Set() const{
    return m_default_version_isSet;
}

bool OAIGoogleCloudMlV1__Model::is_default_version_Valid() const{
    return m_default_version_isValid;
}

QString OAIGoogleCloudMlV1__Model::getDescription() const {
    return m_description;
}
void OAIGoogleCloudMlV1__Model::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudMlV1__Model::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudMlV1__Model::is_description_Valid() const{
    return m_description_isValid;
}

QByteArray OAIGoogleCloudMlV1__Model::getEtag() const {
    return m_etag;
}
void OAIGoogleCloudMlV1__Model::setEtag(const QByteArray &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIGoogleCloudMlV1__Model::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIGoogleCloudMlV1__Model::is_etag_Valid() const{
    return m_etag_isValid;
}

QMap<QString, QString> OAIGoogleCloudMlV1__Model::getLabels() const {
    return m_labels;
}
void OAIGoogleCloudMlV1__Model::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGoogleCloudMlV1__Model::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGoogleCloudMlV1__Model::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAIGoogleCloudMlV1__Model::getName() const {
    return m_name;
}
void OAIGoogleCloudMlV1__Model::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudMlV1__Model::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudMlV1__Model::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGoogleCloudMlV1__Model::isOnlinePredictionConsoleLogging() const {
    return m_online_prediction_console_logging;
}
void OAIGoogleCloudMlV1__Model::setOnlinePredictionConsoleLogging(const bool &online_prediction_console_logging) {
    m_online_prediction_console_logging = online_prediction_console_logging;
    m_online_prediction_console_logging_isSet = true;
}

bool OAIGoogleCloudMlV1__Model::is_online_prediction_console_logging_Set() const{
    return m_online_prediction_console_logging_isSet;
}

bool OAIGoogleCloudMlV1__Model::is_online_prediction_console_logging_Valid() const{
    return m_online_prediction_console_logging_isValid;
}

bool OAIGoogleCloudMlV1__Model::isOnlinePredictionLogging() const {
    return m_online_prediction_logging;
}
void OAIGoogleCloudMlV1__Model::setOnlinePredictionLogging(const bool &online_prediction_logging) {
    m_online_prediction_logging = online_prediction_logging;
    m_online_prediction_logging_isSet = true;
}

bool OAIGoogleCloudMlV1__Model::is_online_prediction_logging_Set() const{
    return m_online_prediction_logging_isSet;
}

bool OAIGoogleCloudMlV1__Model::is_online_prediction_logging_Valid() const{
    return m_online_prediction_logging_isValid;
}

QList<QString> OAIGoogleCloudMlV1__Model::getRegions() const {
    return m_regions;
}
void OAIGoogleCloudMlV1__Model::setRegions(const QList<QString> &regions) {
    m_regions = regions;
    m_regions_isSet = true;
}

bool OAIGoogleCloudMlV1__Model::is_regions_Set() const{
    return m_regions_isSet;
}

bool OAIGoogleCloudMlV1__Model::is_regions_Valid() const{
    return m_regions_isValid;
}

bool OAIGoogleCloudMlV1__Model::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_default_version.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_online_prediction_console_logging_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_online_prediction_logging_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_regions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudMlV1__Model::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
