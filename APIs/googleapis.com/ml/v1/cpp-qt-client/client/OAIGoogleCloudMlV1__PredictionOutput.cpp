/**
 * AI Platform Training & Prediction API
 * An API to enable creating and using machine learning models.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudMlV1__PredictionOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudMlV1__PredictionOutput::OAIGoogleCloudMlV1__PredictionOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudMlV1__PredictionOutput::OAIGoogleCloudMlV1__PredictionOutput() {
    this->initializeModel();
}

OAIGoogleCloudMlV1__PredictionOutput::~OAIGoogleCloudMlV1__PredictionOutput() {}

void OAIGoogleCloudMlV1__PredictionOutput::initializeModel() {

    m_error_count_isSet = false;
    m_error_count_isValid = false;

    m_node_hours_isSet = false;
    m_node_hours_isValid = false;

    m_output_path_isSet = false;
    m_output_path_isValid = false;

    m_prediction_count_isSet = false;
    m_prediction_count_isValid = false;
}

void OAIGoogleCloudMlV1__PredictionOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudMlV1__PredictionOutput::fromJsonObject(QJsonObject json) {

    m_error_count_isValid = ::OpenAPI::fromJsonValue(m_error_count, json[QString("errorCount")]);
    m_error_count_isSet = !json[QString("errorCount")].isNull() && m_error_count_isValid;

    m_node_hours_isValid = ::OpenAPI::fromJsonValue(m_node_hours, json[QString("nodeHours")]);
    m_node_hours_isSet = !json[QString("nodeHours")].isNull() && m_node_hours_isValid;

    m_output_path_isValid = ::OpenAPI::fromJsonValue(m_output_path, json[QString("outputPath")]);
    m_output_path_isSet = !json[QString("outputPath")].isNull() && m_output_path_isValid;

    m_prediction_count_isValid = ::OpenAPI::fromJsonValue(m_prediction_count, json[QString("predictionCount")]);
    m_prediction_count_isSet = !json[QString("predictionCount")].isNull() && m_prediction_count_isValid;
}

QString OAIGoogleCloudMlV1__PredictionOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudMlV1__PredictionOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_error_count_isSet) {
        obj.insert(QString("errorCount"), ::OpenAPI::toJsonValue(m_error_count));
    }
    if (m_node_hours_isSet) {
        obj.insert(QString("nodeHours"), ::OpenAPI::toJsonValue(m_node_hours));
    }
    if (m_output_path_isSet) {
        obj.insert(QString("outputPath"), ::OpenAPI::toJsonValue(m_output_path));
    }
    if (m_prediction_count_isSet) {
        obj.insert(QString("predictionCount"), ::OpenAPI::toJsonValue(m_prediction_count));
    }
    return obj;
}

QString OAIGoogleCloudMlV1__PredictionOutput::getErrorCount() const {
    return m_error_count;
}
void OAIGoogleCloudMlV1__PredictionOutput::setErrorCount(const QString &error_count) {
    m_error_count = error_count;
    m_error_count_isSet = true;
}

bool OAIGoogleCloudMlV1__PredictionOutput::is_error_count_Set() const{
    return m_error_count_isSet;
}

bool OAIGoogleCloudMlV1__PredictionOutput::is_error_count_Valid() const{
    return m_error_count_isValid;
}

double OAIGoogleCloudMlV1__PredictionOutput::getNodeHours() const {
    return m_node_hours;
}
void OAIGoogleCloudMlV1__PredictionOutput::setNodeHours(const double &node_hours) {
    m_node_hours = node_hours;
    m_node_hours_isSet = true;
}

bool OAIGoogleCloudMlV1__PredictionOutput::is_node_hours_Set() const{
    return m_node_hours_isSet;
}

bool OAIGoogleCloudMlV1__PredictionOutput::is_node_hours_Valid() const{
    return m_node_hours_isValid;
}

QString OAIGoogleCloudMlV1__PredictionOutput::getOutputPath() const {
    return m_output_path;
}
void OAIGoogleCloudMlV1__PredictionOutput::setOutputPath(const QString &output_path) {
    m_output_path = output_path;
    m_output_path_isSet = true;
}

bool OAIGoogleCloudMlV1__PredictionOutput::is_output_path_Set() const{
    return m_output_path_isSet;
}

bool OAIGoogleCloudMlV1__PredictionOutput::is_output_path_Valid() const{
    return m_output_path_isValid;
}

QString OAIGoogleCloudMlV1__PredictionOutput::getPredictionCount() const {
    return m_prediction_count;
}
void OAIGoogleCloudMlV1__PredictionOutput::setPredictionCount(const QString &prediction_count) {
    m_prediction_count = prediction_count;
    m_prediction_count_isSet = true;
}

bool OAIGoogleCloudMlV1__PredictionOutput::is_prediction_count_Set() const{
    return m_prediction_count_isSet;
}

bool OAIGoogleCloudMlV1__PredictionOutput::is_prediction_count_Valid() const{
    return m_prediction_count_isValid;
}

bool OAIGoogleCloudMlV1__PredictionOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_node_hours_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_prediction_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudMlV1__PredictionOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
