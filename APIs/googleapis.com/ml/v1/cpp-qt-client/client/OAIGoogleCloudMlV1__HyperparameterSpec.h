/**
 * AI Platform Training & Prediction API
 * An API to enable creating and using machine learning models.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudMlV1__HyperparameterSpec.h
 *
 * Represents a set of hyperparameters to optimize.
 */

#ifndef OAIGoogleCloudMlV1__HyperparameterSpec_H
#define OAIGoogleCloudMlV1__HyperparameterSpec_H

#include <QJsonObject>

#include "OAIGoogleCloudMlV1__ParameterSpec.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudMlV1__ParameterSpec;

class OAIGoogleCloudMlV1__HyperparameterSpec : public OAIObject {
public:
    OAIGoogleCloudMlV1__HyperparameterSpec();
    OAIGoogleCloudMlV1__HyperparameterSpec(QString json);
    ~OAIGoogleCloudMlV1__HyperparameterSpec() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlgorithm() const;
    void setAlgorithm(const QString &algorithm);
    bool is_algorithm_Set() const;
    bool is_algorithm_Valid() const;

    bool isEnableTrialEarlyStopping() const;
    void setEnableTrialEarlyStopping(const bool &enable_trial_early_stopping);
    bool is_enable_trial_early_stopping_Set() const;
    bool is_enable_trial_early_stopping_Valid() const;

    QString getGoal() const;
    void setGoal(const QString &goal);
    bool is_goal_Set() const;
    bool is_goal_Valid() const;

    QString getHyperparameterMetricTag() const;
    void setHyperparameterMetricTag(const QString &hyperparameter_metric_tag);
    bool is_hyperparameter_metric_tag_Set() const;
    bool is_hyperparameter_metric_tag_Valid() const;

    qint32 getMaxFailedTrials() const;
    void setMaxFailedTrials(const qint32 &max_failed_trials);
    bool is_max_failed_trials_Set() const;
    bool is_max_failed_trials_Valid() const;

    qint32 getMaxParallelTrials() const;
    void setMaxParallelTrials(const qint32 &max_parallel_trials);
    bool is_max_parallel_trials_Set() const;
    bool is_max_parallel_trials_Valid() const;

    qint32 getMaxTrials() const;
    void setMaxTrials(const qint32 &max_trials);
    bool is_max_trials_Set() const;
    bool is_max_trials_Valid() const;

    QList<OAIGoogleCloudMlV1__ParameterSpec> getParams() const;
    void setParams(const QList<OAIGoogleCloudMlV1__ParameterSpec> &params);
    bool is_params_Set() const;
    bool is_params_Valid() const;

    QString getResumePreviousJobId() const;
    void setResumePreviousJobId(const QString &resume_previous_job_id);
    bool is_resume_previous_job_id_Set() const;
    bool is_resume_previous_job_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_algorithm;
    bool m_algorithm_isSet;
    bool m_algorithm_isValid;

    bool m_enable_trial_early_stopping;
    bool m_enable_trial_early_stopping_isSet;
    bool m_enable_trial_early_stopping_isValid;

    QString m_goal;
    bool m_goal_isSet;
    bool m_goal_isValid;

    QString m_hyperparameter_metric_tag;
    bool m_hyperparameter_metric_tag_isSet;
    bool m_hyperparameter_metric_tag_isValid;

    qint32 m_max_failed_trials;
    bool m_max_failed_trials_isSet;
    bool m_max_failed_trials_isValid;

    qint32 m_max_parallel_trials;
    bool m_max_parallel_trials_isSet;
    bool m_max_parallel_trials_isValid;

    qint32 m_max_trials;
    bool m_max_trials_isSet;
    bool m_max_trials_isValid;

    QList<OAIGoogleCloudMlV1__ParameterSpec> m_params;
    bool m_params_isSet;
    bool m_params_isValid;

    QString m_resume_previous_job_id;
    bool m_resume_previous_job_id_isSet;
    bool m_resume_previous_job_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudMlV1__HyperparameterSpec)

#endif // OAIGoogleCloudMlV1__HyperparameterSpec_H
