/**
 * AI Platform Training & Prediction API
 * An API to enable creating and using machine learning models.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudMlV1__OperationMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudMlV1__OperationMetadata::OAIGoogleCloudMlV1__OperationMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudMlV1__OperationMetadata::OAIGoogleCloudMlV1__OperationMetadata() {
    this->initializeModel();
}

OAIGoogleCloudMlV1__OperationMetadata::~OAIGoogleCloudMlV1__OperationMetadata() {}

void OAIGoogleCloudMlV1__OperationMetadata::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_is_cancellation_requested_isSet = false;
    m_is_cancellation_requested_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_model_name_isSet = false;
    m_model_name_isValid = false;

    m_operation_type_isSet = false;
    m_operation_type_isValid = false;

    m_project_number_isSet = false;
    m_project_number_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAIGoogleCloudMlV1__OperationMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudMlV1__OperationMetadata::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_is_cancellation_requested_isValid = ::OpenAPI::fromJsonValue(m_is_cancellation_requested, json[QString("isCancellationRequested")]);
    m_is_cancellation_requested_isSet = !json[QString("isCancellationRequested")].isNull() && m_is_cancellation_requested_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_model_name_isValid = ::OpenAPI::fromJsonValue(m_model_name, json[QString("modelName")]);
    m_model_name_isSet = !json[QString("modelName")].isNull() && m_model_name_isValid;

    m_operation_type_isValid = ::OpenAPI::fromJsonValue(m_operation_type, json[QString("operationType")]);
    m_operation_type_isSet = !json[QString("operationType")].isNull() && m_operation_type_isValid;

    m_project_number_isValid = ::OpenAPI::fromJsonValue(m_project_number, json[QString("projectNumber")]);
    m_project_number_isSet = !json[QString("projectNumber")].isNull() && m_project_number_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;
}

QString OAIGoogleCloudMlV1__OperationMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudMlV1__OperationMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_is_cancellation_requested_isSet) {
        obj.insert(QString("isCancellationRequested"), ::OpenAPI::toJsonValue(m_is_cancellation_requested));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_model_name_isSet) {
        obj.insert(QString("modelName"), ::OpenAPI::toJsonValue(m_model_name));
    }
    if (m_operation_type_isSet) {
        obj.insert(QString("operationType"), ::OpenAPI::toJsonValue(m_operation_type));
    }
    if (m_project_number_isSet) {
        obj.insert(QString("projectNumber"), ::OpenAPI::toJsonValue(m_project_number));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_version.isSet()) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

QString OAIGoogleCloudMlV1__OperationMetadata::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudMlV1__OperationMetadata::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudMlV1__OperationMetadata::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudMlV1__OperationMetadata::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudMlV1__OperationMetadata::getEndTime() const {
    return m_end_time;
}
void OAIGoogleCloudMlV1__OperationMetadata::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleCloudMlV1__OperationMetadata::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleCloudMlV1__OperationMetadata::is_end_time_Valid() const{
    return m_end_time_isValid;
}

bool OAIGoogleCloudMlV1__OperationMetadata::isIsCancellationRequested() const {
    return m_is_cancellation_requested;
}
void OAIGoogleCloudMlV1__OperationMetadata::setIsCancellationRequested(const bool &is_cancellation_requested) {
    m_is_cancellation_requested = is_cancellation_requested;
    m_is_cancellation_requested_isSet = true;
}

bool OAIGoogleCloudMlV1__OperationMetadata::is_is_cancellation_requested_Set() const{
    return m_is_cancellation_requested_isSet;
}

bool OAIGoogleCloudMlV1__OperationMetadata::is_is_cancellation_requested_Valid() const{
    return m_is_cancellation_requested_isValid;
}

QMap<QString, QString> OAIGoogleCloudMlV1__OperationMetadata::getLabels() const {
    return m_labels;
}
void OAIGoogleCloudMlV1__OperationMetadata::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGoogleCloudMlV1__OperationMetadata::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGoogleCloudMlV1__OperationMetadata::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAIGoogleCloudMlV1__OperationMetadata::getModelName() const {
    return m_model_name;
}
void OAIGoogleCloudMlV1__OperationMetadata::setModelName(const QString &model_name) {
    m_model_name = model_name;
    m_model_name_isSet = true;
}

bool OAIGoogleCloudMlV1__OperationMetadata::is_model_name_Set() const{
    return m_model_name_isSet;
}

bool OAIGoogleCloudMlV1__OperationMetadata::is_model_name_Valid() const{
    return m_model_name_isValid;
}

QString OAIGoogleCloudMlV1__OperationMetadata::getOperationType() const {
    return m_operation_type;
}
void OAIGoogleCloudMlV1__OperationMetadata::setOperationType(const QString &operation_type) {
    m_operation_type = operation_type;
    m_operation_type_isSet = true;
}

bool OAIGoogleCloudMlV1__OperationMetadata::is_operation_type_Set() const{
    return m_operation_type_isSet;
}

bool OAIGoogleCloudMlV1__OperationMetadata::is_operation_type_Valid() const{
    return m_operation_type_isValid;
}

QString OAIGoogleCloudMlV1__OperationMetadata::getProjectNumber() const {
    return m_project_number;
}
void OAIGoogleCloudMlV1__OperationMetadata::setProjectNumber(const QString &project_number) {
    m_project_number = project_number;
    m_project_number_isSet = true;
}

bool OAIGoogleCloudMlV1__OperationMetadata::is_project_number_Set() const{
    return m_project_number_isSet;
}

bool OAIGoogleCloudMlV1__OperationMetadata::is_project_number_Valid() const{
    return m_project_number_isValid;
}

QString OAIGoogleCloudMlV1__OperationMetadata::getStartTime() const {
    return m_start_time;
}
void OAIGoogleCloudMlV1__OperationMetadata::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleCloudMlV1__OperationMetadata::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleCloudMlV1__OperationMetadata::is_start_time_Valid() const{
    return m_start_time_isValid;
}

OAIGoogleCloudMlV1__Version OAIGoogleCloudMlV1__OperationMetadata::getVersion() const {
    return m_version;
}
void OAIGoogleCloudMlV1__OperationMetadata::setVersion(const OAIGoogleCloudMlV1__Version &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIGoogleCloudMlV1__OperationMetadata::is_version_Set() const{
    return m_version_isSet;
}

bool OAIGoogleCloudMlV1__OperationMetadata::is_version_Valid() const{
    return m_version_isValid;
}

bool OAIGoogleCloudMlV1__OperationMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_cancellation_requested_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudMlV1__OperationMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
