/**
 * AI Platform Training & Prediction API
 * An API to enable creating and using machine learning models.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudMlV1__ReplicaConfig.h
 *
 * Represents the configuration for a replica in a cluster.
 */

#ifndef OAIGoogleCloudMlV1__ReplicaConfig_H
#define OAIGoogleCloudMlV1__ReplicaConfig_H

#include <QJsonObject>

#include "OAIGoogleCloudMlV1__AcceleratorConfig.h"
#include "OAIGoogleCloudMlV1__DiskConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudMlV1__AcceleratorConfig;
class OAIGoogleCloudMlV1__DiskConfig;

class OAIGoogleCloudMlV1__ReplicaConfig : public OAIObject {
public:
    OAIGoogleCloudMlV1__ReplicaConfig();
    OAIGoogleCloudMlV1__ReplicaConfig(QString json);
    ~OAIGoogleCloudMlV1__ReplicaConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleCloudMlV1__AcceleratorConfig getAcceleratorConfig() const;
    void setAcceleratorConfig(const OAIGoogleCloudMlV1__AcceleratorConfig &accelerator_config);
    bool is_accelerator_config_Set() const;
    bool is_accelerator_config_Valid() const;

    QList<QString> getContainerArgs() const;
    void setContainerArgs(const QList<QString> &container_args);
    bool is_container_args_Set() const;
    bool is_container_args_Valid() const;

    QList<QString> getContainerCommand() const;
    void setContainerCommand(const QList<QString> &container_command);
    bool is_container_command_Set() const;
    bool is_container_command_Valid() const;

    OAIGoogleCloudMlV1__DiskConfig getDiskConfig() const;
    void setDiskConfig(const OAIGoogleCloudMlV1__DiskConfig &disk_config);
    bool is_disk_config_Set() const;
    bool is_disk_config_Valid() const;

    QString getImageUri() const;
    void setImageUri(const QString &image_uri);
    bool is_image_uri_Set() const;
    bool is_image_uri_Valid() const;

    QString getTpuTfVersion() const;
    void setTpuTfVersion(const QString &tpu_tf_version);
    bool is_tpu_tf_version_Set() const;
    bool is_tpu_tf_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleCloudMlV1__AcceleratorConfig m_accelerator_config;
    bool m_accelerator_config_isSet;
    bool m_accelerator_config_isValid;

    QList<QString> m_container_args;
    bool m_container_args_isSet;
    bool m_container_args_isValid;

    QList<QString> m_container_command;
    bool m_container_command_isSet;
    bool m_container_command_isValid;

    OAIGoogleCloudMlV1__DiskConfig m_disk_config;
    bool m_disk_config_isSet;
    bool m_disk_config_isValid;

    QString m_image_uri;
    bool m_image_uri_isSet;
    bool m_image_uri_isValid;

    QString m_tpu_tf_version;
    bool m_tpu_tf_version_isSet;
    bool m_tpu_tf_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudMlV1__ReplicaConfig)

#endif // OAIGoogleCloudMlV1__ReplicaConfig_H
