/**
 * AI Platform Training & Prediction API
 * An API to enable creating and using machine learning models.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudMlV1__Version.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudMlV1__Version::OAIGoogleCloudMlV1__Version(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudMlV1__Version::OAIGoogleCloudMlV1__Version() {
    this->initializeModel();
}

OAIGoogleCloudMlV1__Version::~OAIGoogleCloudMlV1__Version() {}

void OAIGoogleCloudMlV1__Version::initializeModel() {

    m_accelerator_config_isSet = false;
    m_accelerator_config_isValid = false;

    m_auto_scaling_isSet = false;
    m_auto_scaling_isValid = false;

    m_container_isSet = false;
    m_container_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_deployment_uri_isSet = false;
    m_deployment_uri_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_error_message_isSet = false;
    m_error_message_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_explanation_config_isSet = false;
    m_explanation_config_isValid = false;

    m_framework_isSet = false;
    m_framework_isValid = false;

    m_is_default_isSet = false;
    m_is_default_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_last_migration_model_id_isSet = false;
    m_last_migration_model_id_isValid = false;

    m_last_migration_time_isSet = false;
    m_last_migration_time_isValid = false;

    m_last_use_time_isSet = false;
    m_last_use_time_isValid = false;

    m_machine_type_isSet = false;
    m_machine_type_isValid = false;

    m_manual_scaling_isSet = false;
    m_manual_scaling_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_package_uris_isSet = false;
    m_package_uris_isValid = false;

    m_prediction_class_isSet = false;
    m_prediction_class_isValid = false;

    m_python_version_isSet = false;
    m_python_version_isValid = false;

    m_request_logging_config_isSet = false;
    m_request_logging_config_isValid = false;

    m_routes_isSet = false;
    m_routes_isValid = false;

    m_runtime_version_isSet = false;
    m_runtime_version_isValid = false;

    m_service_account_isSet = false;
    m_service_account_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIGoogleCloudMlV1__Version::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudMlV1__Version::fromJsonObject(QJsonObject json) {

    m_accelerator_config_isValid = ::OpenAPI::fromJsonValue(m_accelerator_config, json[QString("acceleratorConfig")]);
    m_accelerator_config_isSet = !json[QString("acceleratorConfig")].isNull() && m_accelerator_config_isValid;

    m_auto_scaling_isValid = ::OpenAPI::fromJsonValue(m_auto_scaling, json[QString("autoScaling")]);
    m_auto_scaling_isSet = !json[QString("autoScaling")].isNull() && m_auto_scaling_isValid;

    m_container_isValid = ::OpenAPI::fromJsonValue(m_container, json[QString("container")]);
    m_container_isSet = !json[QString("container")].isNull() && m_container_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_deployment_uri_isValid = ::OpenAPI::fromJsonValue(m_deployment_uri, json[QString("deploymentUri")]);
    m_deployment_uri_isSet = !json[QString("deploymentUri")].isNull() && m_deployment_uri_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_error_message_isValid = ::OpenAPI::fromJsonValue(m_error_message, json[QString("errorMessage")]);
    m_error_message_isSet = !json[QString("errorMessage")].isNull() && m_error_message_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_explanation_config_isValid = ::OpenAPI::fromJsonValue(m_explanation_config, json[QString("explanationConfig")]);
    m_explanation_config_isSet = !json[QString("explanationConfig")].isNull() && m_explanation_config_isValid;

    m_framework_isValid = ::OpenAPI::fromJsonValue(m_framework, json[QString("framework")]);
    m_framework_isSet = !json[QString("framework")].isNull() && m_framework_isValid;

    m_is_default_isValid = ::OpenAPI::fromJsonValue(m_is_default, json[QString("isDefault")]);
    m_is_default_isSet = !json[QString("isDefault")].isNull() && m_is_default_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_last_migration_model_id_isValid = ::OpenAPI::fromJsonValue(m_last_migration_model_id, json[QString("lastMigrationModelId")]);
    m_last_migration_model_id_isSet = !json[QString("lastMigrationModelId")].isNull() && m_last_migration_model_id_isValid;

    m_last_migration_time_isValid = ::OpenAPI::fromJsonValue(m_last_migration_time, json[QString("lastMigrationTime")]);
    m_last_migration_time_isSet = !json[QString("lastMigrationTime")].isNull() && m_last_migration_time_isValid;

    m_last_use_time_isValid = ::OpenAPI::fromJsonValue(m_last_use_time, json[QString("lastUseTime")]);
    m_last_use_time_isSet = !json[QString("lastUseTime")].isNull() && m_last_use_time_isValid;

    m_machine_type_isValid = ::OpenAPI::fromJsonValue(m_machine_type, json[QString("machineType")]);
    m_machine_type_isSet = !json[QString("machineType")].isNull() && m_machine_type_isValid;

    m_manual_scaling_isValid = ::OpenAPI::fromJsonValue(m_manual_scaling, json[QString("manualScaling")]);
    m_manual_scaling_isSet = !json[QString("manualScaling")].isNull() && m_manual_scaling_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_package_uris_isValid = ::OpenAPI::fromJsonValue(m_package_uris, json[QString("packageUris")]);
    m_package_uris_isSet = !json[QString("packageUris")].isNull() && m_package_uris_isValid;

    m_prediction_class_isValid = ::OpenAPI::fromJsonValue(m_prediction_class, json[QString("predictionClass")]);
    m_prediction_class_isSet = !json[QString("predictionClass")].isNull() && m_prediction_class_isValid;

    m_python_version_isValid = ::OpenAPI::fromJsonValue(m_python_version, json[QString("pythonVersion")]);
    m_python_version_isSet = !json[QString("pythonVersion")].isNull() && m_python_version_isValid;

    m_request_logging_config_isValid = ::OpenAPI::fromJsonValue(m_request_logging_config, json[QString("requestLoggingConfig")]);
    m_request_logging_config_isSet = !json[QString("requestLoggingConfig")].isNull() && m_request_logging_config_isValid;

    m_routes_isValid = ::OpenAPI::fromJsonValue(m_routes, json[QString("routes")]);
    m_routes_isSet = !json[QString("routes")].isNull() && m_routes_isValid;

    m_runtime_version_isValid = ::OpenAPI::fromJsonValue(m_runtime_version, json[QString("runtimeVersion")]);
    m_runtime_version_isSet = !json[QString("runtimeVersion")].isNull() && m_runtime_version_isValid;

    m_service_account_isValid = ::OpenAPI::fromJsonValue(m_service_account, json[QString("serviceAccount")]);
    m_service_account_isSet = !json[QString("serviceAccount")].isNull() && m_service_account_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIGoogleCloudMlV1__Version::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudMlV1__Version::asJsonObject() const {
    QJsonObject obj;
    if (m_accelerator_config.isSet()) {
        obj.insert(QString("acceleratorConfig"), ::OpenAPI::toJsonValue(m_accelerator_config));
    }
    if (m_auto_scaling.isSet()) {
        obj.insert(QString("autoScaling"), ::OpenAPI::toJsonValue(m_auto_scaling));
    }
    if (m_container.isSet()) {
        obj.insert(QString("container"), ::OpenAPI::toJsonValue(m_container));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_deployment_uri_isSet) {
        obj.insert(QString("deploymentUri"), ::OpenAPI::toJsonValue(m_deployment_uri));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_error_message_isSet) {
        obj.insert(QString("errorMessage"), ::OpenAPI::toJsonValue(m_error_message));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_explanation_config.isSet()) {
        obj.insert(QString("explanationConfig"), ::OpenAPI::toJsonValue(m_explanation_config));
    }
    if (m_framework_isSet) {
        obj.insert(QString("framework"), ::OpenAPI::toJsonValue(m_framework));
    }
    if (m_is_default_isSet) {
        obj.insert(QString("isDefault"), ::OpenAPI::toJsonValue(m_is_default));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_last_migration_model_id_isSet) {
        obj.insert(QString("lastMigrationModelId"), ::OpenAPI::toJsonValue(m_last_migration_model_id));
    }
    if (m_last_migration_time_isSet) {
        obj.insert(QString("lastMigrationTime"), ::OpenAPI::toJsonValue(m_last_migration_time));
    }
    if (m_last_use_time_isSet) {
        obj.insert(QString("lastUseTime"), ::OpenAPI::toJsonValue(m_last_use_time));
    }
    if (m_machine_type_isSet) {
        obj.insert(QString("machineType"), ::OpenAPI::toJsonValue(m_machine_type));
    }
    if (m_manual_scaling.isSet()) {
        obj.insert(QString("manualScaling"), ::OpenAPI::toJsonValue(m_manual_scaling));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_package_uris.size() > 0) {
        obj.insert(QString("packageUris"), ::OpenAPI::toJsonValue(m_package_uris));
    }
    if (m_prediction_class_isSet) {
        obj.insert(QString("predictionClass"), ::OpenAPI::toJsonValue(m_prediction_class));
    }
    if (m_python_version_isSet) {
        obj.insert(QString("pythonVersion"), ::OpenAPI::toJsonValue(m_python_version));
    }
    if (m_request_logging_config.isSet()) {
        obj.insert(QString("requestLoggingConfig"), ::OpenAPI::toJsonValue(m_request_logging_config));
    }
    if (m_routes.isSet()) {
        obj.insert(QString("routes"), ::OpenAPI::toJsonValue(m_routes));
    }
    if (m_runtime_version_isSet) {
        obj.insert(QString("runtimeVersion"), ::OpenAPI::toJsonValue(m_runtime_version));
    }
    if (m_service_account_isSet) {
        obj.insert(QString("serviceAccount"), ::OpenAPI::toJsonValue(m_service_account));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

OAIGoogleCloudMlV1__AcceleratorConfig OAIGoogleCloudMlV1__Version::getAcceleratorConfig() const {
    return m_accelerator_config;
}
void OAIGoogleCloudMlV1__Version::setAcceleratorConfig(const OAIGoogleCloudMlV1__AcceleratorConfig &accelerator_config) {
    m_accelerator_config = accelerator_config;
    m_accelerator_config_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_accelerator_config_Set() const{
    return m_accelerator_config_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_accelerator_config_Valid() const{
    return m_accelerator_config_isValid;
}

OAIGoogleCloudMlV1__AutoScaling OAIGoogleCloudMlV1__Version::getAutoScaling() const {
    return m_auto_scaling;
}
void OAIGoogleCloudMlV1__Version::setAutoScaling(const OAIGoogleCloudMlV1__AutoScaling &auto_scaling) {
    m_auto_scaling = auto_scaling;
    m_auto_scaling_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_auto_scaling_Set() const{
    return m_auto_scaling_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_auto_scaling_Valid() const{
    return m_auto_scaling_isValid;
}

OAIGoogleCloudMlV1__ContainerSpec OAIGoogleCloudMlV1__Version::getContainer() const {
    return m_container;
}
void OAIGoogleCloudMlV1__Version::setContainer(const OAIGoogleCloudMlV1__ContainerSpec &container) {
    m_container = container;
    m_container_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_container_Set() const{
    return m_container_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_container_Valid() const{
    return m_container_isValid;
}

QString OAIGoogleCloudMlV1__Version::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudMlV1__Version::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudMlV1__Version::getDeploymentUri() const {
    return m_deployment_uri;
}
void OAIGoogleCloudMlV1__Version::setDeploymentUri(const QString &deployment_uri) {
    m_deployment_uri = deployment_uri;
    m_deployment_uri_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_deployment_uri_Set() const{
    return m_deployment_uri_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_deployment_uri_Valid() const{
    return m_deployment_uri_isValid;
}

QString OAIGoogleCloudMlV1__Version::getDescription() const {
    return m_description;
}
void OAIGoogleCloudMlV1__Version::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudMlV1__Version::getErrorMessage() const {
    return m_error_message;
}
void OAIGoogleCloudMlV1__Version::setErrorMessage(const QString &error_message) {
    m_error_message = error_message;
    m_error_message_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_error_message_Set() const{
    return m_error_message_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_error_message_Valid() const{
    return m_error_message_isValid;
}

QByteArray OAIGoogleCloudMlV1__Version::getEtag() const {
    return m_etag;
}
void OAIGoogleCloudMlV1__Version::setEtag(const QByteArray &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_etag_Valid() const{
    return m_etag_isValid;
}

OAIGoogleCloudMlV1__ExplanationConfig OAIGoogleCloudMlV1__Version::getExplanationConfig() const {
    return m_explanation_config;
}
void OAIGoogleCloudMlV1__Version::setExplanationConfig(const OAIGoogleCloudMlV1__ExplanationConfig &explanation_config) {
    m_explanation_config = explanation_config;
    m_explanation_config_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_explanation_config_Set() const{
    return m_explanation_config_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_explanation_config_Valid() const{
    return m_explanation_config_isValid;
}

QString OAIGoogleCloudMlV1__Version::getFramework() const {
    return m_framework;
}
void OAIGoogleCloudMlV1__Version::setFramework(const QString &framework) {
    m_framework = framework;
    m_framework_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_framework_Set() const{
    return m_framework_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_framework_Valid() const{
    return m_framework_isValid;
}

bool OAIGoogleCloudMlV1__Version::isIsDefault() const {
    return m_is_default;
}
void OAIGoogleCloudMlV1__Version::setIsDefault(const bool &is_default) {
    m_is_default = is_default;
    m_is_default_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_is_default_Set() const{
    return m_is_default_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_is_default_Valid() const{
    return m_is_default_isValid;
}

QMap<QString, QString> OAIGoogleCloudMlV1__Version::getLabels() const {
    return m_labels;
}
void OAIGoogleCloudMlV1__Version::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAIGoogleCloudMlV1__Version::getLastMigrationModelId() const {
    return m_last_migration_model_id;
}
void OAIGoogleCloudMlV1__Version::setLastMigrationModelId(const QString &last_migration_model_id) {
    m_last_migration_model_id = last_migration_model_id;
    m_last_migration_model_id_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_last_migration_model_id_Set() const{
    return m_last_migration_model_id_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_last_migration_model_id_Valid() const{
    return m_last_migration_model_id_isValid;
}

QString OAIGoogleCloudMlV1__Version::getLastMigrationTime() const {
    return m_last_migration_time;
}
void OAIGoogleCloudMlV1__Version::setLastMigrationTime(const QString &last_migration_time) {
    m_last_migration_time = last_migration_time;
    m_last_migration_time_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_last_migration_time_Set() const{
    return m_last_migration_time_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_last_migration_time_Valid() const{
    return m_last_migration_time_isValid;
}

QString OAIGoogleCloudMlV1__Version::getLastUseTime() const {
    return m_last_use_time;
}
void OAIGoogleCloudMlV1__Version::setLastUseTime(const QString &last_use_time) {
    m_last_use_time = last_use_time;
    m_last_use_time_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_last_use_time_Set() const{
    return m_last_use_time_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_last_use_time_Valid() const{
    return m_last_use_time_isValid;
}

QString OAIGoogleCloudMlV1__Version::getMachineType() const {
    return m_machine_type;
}
void OAIGoogleCloudMlV1__Version::setMachineType(const QString &machine_type) {
    m_machine_type = machine_type;
    m_machine_type_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_machine_type_Set() const{
    return m_machine_type_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_machine_type_Valid() const{
    return m_machine_type_isValid;
}

OAIGoogleCloudMlV1__ManualScaling OAIGoogleCloudMlV1__Version::getManualScaling() const {
    return m_manual_scaling;
}
void OAIGoogleCloudMlV1__Version::setManualScaling(const OAIGoogleCloudMlV1__ManualScaling &manual_scaling) {
    m_manual_scaling = manual_scaling;
    m_manual_scaling_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_manual_scaling_Set() const{
    return m_manual_scaling_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_manual_scaling_Valid() const{
    return m_manual_scaling_isValid;
}

QString OAIGoogleCloudMlV1__Version::getName() const {
    return m_name;
}
void OAIGoogleCloudMlV1__Version::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_name_Valid() const{
    return m_name_isValid;
}

QList<QString> OAIGoogleCloudMlV1__Version::getPackageUris() const {
    return m_package_uris;
}
void OAIGoogleCloudMlV1__Version::setPackageUris(const QList<QString> &package_uris) {
    m_package_uris = package_uris;
    m_package_uris_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_package_uris_Set() const{
    return m_package_uris_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_package_uris_Valid() const{
    return m_package_uris_isValid;
}

QString OAIGoogleCloudMlV1__Version::getPredictionClass() const {
    return m_prediction_class;
}
void OAIGoogleCloudMlV1__Version::setPredictionClass(const QString &prediction_class) {
    m_prediction_class = prediction_class;
    m_prediction_class_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_prediction_class_Set() const{
    return m_prediction_class_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_prediction_class_Valid() const{
    return m_prediction_class_isValid;
}

QString OAIGoogleCloudMlV1__Version::getPythonVersion() const {
    return m_python_version;
}
void OAIGoogleCloudMlV1__Version::setPythonVersion(const QString &python_version) {
    m_python_version = python_version;
    m_python_version_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_python_version_Set() const{
    return m_python_version_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_python_version_Valid() const{
    return m_python_version_isValid;
}

OAIGoogleCloudMlV1__RequestLoggingConfig OAIGoogleCloudMlV1__Version::getRequestLoggingConfig() const {
    return m_request_logging_config;
}
void OAIGoogleCloudMlV1__Version::setRequestLoggingConfig(const OAIGoogleCloudMlV1__RequestLoggingConfig &request_logging_config) {
    m_request_logging_config = request_logging_config;
    m_request_logging_config_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_request_logging_config_Set() const{
    return m_request_logging_config_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_request_logging_config_Valid() const{
    return m_request_logging_config_isValid;
}

OAIGoogleCloudMlV1__RouteMap OAIGoogleCloudMlV1__Version::getRoutes() const {
    return m_routes;
}
void OAIGoogleCloudMlV1__Version::setRoutes(const OAIGoogleCloudMlV1__RouteMap &routes) {
    m_routes = routes;
    m_routes_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_routes_Set() const{
    return m_routes_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_routes_Valid() const{
    return m_routes_isValid;
}

QString OAIGoogleCloudMlV1__Version::getRuntimeVersion() const {
    return m_runtime_version;
}
void OAIGoogleCloudMlV1__Version::setRuntimeVersion(const QString &runtime_version) {
    m_runtime_version = runtime_version;
    m_runtime_version_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_runtime_version_Set() const{
    return m_runtime_version_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_runtime_version_Valid() const{
    return m_runtime_version_isValid;
}

QString OAIGoogleCloudMlV1__Version::getServiceAccount() const {
    return m_service_account;
}
void OAIGoogleCloudMlV1__Version::setServiceAccount(const QString &service_account) {
    m_service_account = service_account;
    m_service_account_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_service_account_Set() const{
    return m_service_account_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_service_account_Valid() const{
    return m_service_account_isValid;
}

QString OAIGoogleCloudMlV1__Version::getState() const {
    return m_state;
}
void OAIGoogleCloudMlV1__Version::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudMlV1__Version::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudMlV1__Version::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIGoogleCloudMlV1__Version::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_accelerator_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_auto_scaling.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_container.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployment_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_explanation_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_framework_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_default_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_migration_model_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_migration_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_use_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_machine_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_manual_scaling.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_package_uris.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_prediction_class_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_python_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_logging_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_routes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_runtime_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudMlV1__Version::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
