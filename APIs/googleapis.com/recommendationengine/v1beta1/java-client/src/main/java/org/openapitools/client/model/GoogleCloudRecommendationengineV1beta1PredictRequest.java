/*
 * Recommendations AI (Beta)
 * Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudRecommendationengineV1beta1UserEvent;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for Predict method. Full resource name of the format: &#x60;{name&#x3D;projects/_*_/locations/global/catalogs/default_catalog/eventStores/default_event_store/placements/_*}&#x60; The id of the recommendation engine placement. This id is used to identify the set of models that will be used to make the prediction. We currently support three placements with the following IDs by default: // * &#x60;shopping_cart&#x60;: Predicts items frequently bought together with one or more catalog items in the same shopping session. Commonly displayed after &#x60;add-to-cart&#x60; event, on product detail pages, or on the shopping cart page. * &#x60;home_page&#x60;: Predicts the next product that a user will most likely engage with or purchase based on the shopping or viewing history of the specified &#x60;userId&#x60; or &#x60;visitorId&#x60;. For example - Recommendations for you. * &#x60;product_detail&#x60;: Predicts the next product that a user will most likely engage with or purchase. The prediction is based on the shopping or viewing history of the specified &#x60;userId&#x60; or &#x60;visitorId&#x60; and its relevance to a specified &#x60;CatalogItem&#x60;. Typically used on product detail pages. For example - More items like this. * &#x60;recently_viewed_default&#x60;: Returns up to 75 items recently viewed by the specified &#x60;userId&#x60; or &#x60;visitorId&#x60;, most recent ones first. Returns nothing if neither of them has viewed any items yet. For example - Recently viewed. The full list of available placements can be seen at https://console.cloud.google.com/recommendation/catalogs/default_catalog/placements
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:25.887548-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRecommendationengineV1beta1PredictRequest {
  public static final String SERIALIZED_NAME_DRY_RUN = "dryRun";
  @SerializedName(SERIALIZED_NAME_DRY_RUN)
  private Boolean dryRun;

  public static final String SERIALIZED_NAME_FILTER = "filter";
  @SerializedName(SERIALIZED_NAME_FILTER)
  private String filter;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_PAGE_SIZE = "pageSize";
  @SerializedName(SERIALIZED_NAME_PAGE_SIZE)
  private Integer pageSize;

  public static final String SERIALIZED_NAME_PAGE_TOKEN = "pageToken";
  @SerializedName(SERIALIZED_NAME_PAGE_TOKEN)
  private String pageToken;

  public static final String SERIALIZED_NAME_PARAMS = "params";
  @SerializedName(SERIALIZED_NAME_PARAMS)
  private Map<String, Object> params = new HashMap<>();

  public static final String SERIALIZED_NAME_USER_EVENT = "userEvent";
  @SerializedName(SERIALIZED_NAME_USER_EVENT)
  private GoogleCloudRecommendationengineV1beta1UserEvent userEvent;

  public GoogleCloudRecommendationengineV1beta1PredictRequest() {
  }

  public GoogleCloudRecommendationengineV1beta1PredictRequest dryRun(Boolean dryRun) {
    this.dryRun = dryRun;
    return this;
  }

  /**
   * Optional. Use dryRun mode for this prediction query. If set to true, a fake model will be used that returns arbitrary catalog items. Note that the dryRun mode should only be used for testing the API, or if the model is not ready.
   * @return dryRun
   */
  @javax.annotation.Nullable
  public Boolean getDryRun() {
    return dryRun;
  }

  public void setDryRun(Boolean dryRun) {
    this.dryRun = dryRun;
  }


  public GoogleCloudRecommendationengineV1beta1PredictRequest filter(String filter) {
    this.filter = filter;
    return this;
  }

  /**
   * Optional. Filter for restricting prediction results. Accepts values for tags and the &#x60;filterOutOfStockItems&#x60; flag. * Tag expressions. Restricts predictions to items that match all of the specified tags. Boolean operators &#x60;OR&#x60; and &#x60;NOT&#x60; are supported if the expression is enclosed in parentheses, and must be separated from the tag values by a space. &#x60;-\&quot;tagA\&quot;&#x60; is also supported and is equivalent to &#x60;NOT \&quot;tagA\&quot;&#x60;. Tag values must be double quoted UTF-8 encoded strings with a size limit of 1 KiB. * filterOutOfStockItems. Restricts predictions to items that do not have a stockState value of OUT_OF_STOCK. Examples: * tag&#x3D;(\&quot;Red\&quot; OR \&quot;Blue\&quot;) tag&#x3D;\&quot;New-Arrival\&quot; tag&#x3D;(NOT \&quot;promotional\&quot;) * filterOutOfStockItems tag&#x3D;(-\&quot;promotional\&quot;) * filterOutOfStockItems If your filter blocks all prediction results, nothing will be returned. If you want generic (unfiltered) popular items to be returned instead, set &#x60;strictFiltering&#x60; to false in &#x60;PredictRequest.params&#x60;.
   * @return filter
   */
  @javax.annotation.Nullable
  public String getFilter() {
    return filter;
  }

  public void setFilter(String filter) {
    this.filter = filter;
  }


  public GoogleCloudRecommendationengineV1beta1PredictRequest labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public GoogleCloudRecommendationengineV1beta1PredictRequest putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * Optional. The labels for the predict request. * Label keys can contain lowercase letters, digits and hyphens, must start with a letter, and must end with a letter or digit. * Non-zero label values can contain lowercase letters, digits and hyphens, must start with a letter, and must end with a letter or digit. * No more than 64 labels can be associated with a given request. See https://goo.gl/xmQnxf for more information on and examples of labels.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  public GoogleCloudRecommendationengineV1beta1PredictRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

  /**
   * Optional. Maximum number of results to return per page. Set this property to the number of prediction results required. If zero, the service will choose a reasonable default.
   * @return pageSize
   */
  @javax.annotation.Nullable
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }


  public GoogleCloudRecommendationengineV1beta1PredictRequest pageToken(String pageToken) {
    this.pageToken = pageToken;
    return this;
  }

  /**
   * Optional. The previous PredictResponse.next_page_token.
   * @return pageToken
   */
  @javax.annotation.Nullable
  public String getPageToken() {
    return pageToken;
  }

  public void setPageToken(String pageToken) {
    this.pageToken = pageToken;
  }


  public GoogleCloudRecommendationengineV1beta1PredictRequest params(Map<String, Object> params) {
    this.params = params;
    return this;
  }

  public GoogleCloudRecommendationengineV1beta1PredictRequest putParamsItem(String key, Object paramsItem) {
    if (this.params == null) {
      this.params = new HashMap<>();
    }
    this.params.put(key, paramsItem);
    return this;
  }

  /**
   * Optional. Additional domain specific parameters for the predictions. Allowed values: * &#x60;returnCatalogItem&#x60;: Boolean. If set to true, the associated catalogItem object will be returned in the &#x60;PredictResponse.PredictionResult.itemMetadata&#x60; object in the method response. * &#x60;returnItemScore&#x60;: Boolean. If set to true, the prediction &#39;score&#39; corresponding to each returned item will be set in the &#x60;metadata&#x60; field in the prediction response. The given &#39;score&#39; indicates the probability of an item being clicked/purchased given the user&#39;s context and history. * &#x60;strictFiltering&#x60;: Boolean. True by default. If set to false, the service will return generic (unfiltered) popular items instead of empty if your filter blocks all prediction results. * &#x60;priceRerankLevel&#x60;: String. Default empty. If set to be non-empty, then it needs to be one of {&#39;no-price-reranking&#39;, &#39;low-price-reranking&#39;, &#39;medium-price-reranking&#39;, &#39;high-price-reranking&#39;}. This gives request level control and adjust prediction results based on product price. * &#x60;diversityLevel&#x60;: String. Default empty. If set to be non-empty, then it needs to be one of {&#39;no-diversity&#39;, &#39;low-diversity&#39;, &#39;medium-diversity&#39;, &#39;high-diversity&#39;, &#39;auto-diversity&#39;}. This gives request level control and adjust prediction results based on product category.
   * @return params
   */
  @javax.annotation.Nullable
  public Map<String, Object> getParams() {
    return params;
  }

  public void setParams(Map<String, Object> params) {
    this.params = params;
  }


  public GoogleCloudRecommendationengineV1beta1PredictRequest userEvent(GoogleCloudRecommendationengineV1beta1UserEvent userEvent) {
    this.userEvent = userEvent;
    return this;
  }

  /**
   * Get userEvent
   * @return userEvent
   */
  @javax.annotation.Nullable
  public GoogleCloudRecommendationengineV1beta1UserEvent getUserEvent() {
    return userEvent;
  }

  public void setUserEvent(GoogleCloudRecommendationengineV1beta1UserEvent userEvent) {
    this.userEvent = userEvent;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRecommendationengineV1beta1PredictRequest googleCloudRecommendationengineV1beta1PredictRequest = (GoogleCloudRecommendationengineV1beta1PredictRequest) o;
    return Objects.equals(this.dryRun, googleCloudRecommendationengineV1beta1PredictRequest.dryRun) &&
        Objects.equals(this.filter, googleCloudRecommendationengineV1beta1PredictRequest.filter) &&
        Objects.equals(this.labels, googleCloudRecommendationengineV1beta1PredictRequest.labels) &&
        Objects.equals(this.pageSize, googleCloudRecommendationengineV1beta1PredictRequest.pageSize) &&
        Objects.equals(this.pageToken, googleCloudRecommendationengineV1beta1PredictRequest.pageToken) &&
        Objects.equals(this.params, googleCloudRecommendationengineV1beta1PredictRequest.params) &&
        Objects.equals(this.userEvent, googleCloudRecommendationengineV1beta1PredictRequest.userEvent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dryRun, filter, labels, pageSize, pageToken, params, userEvent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRecommendationengineV1beta1PredictRequest {\n");
    sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    pageToken: ").append(toIndentedString(pageToken)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("    userEvent: ").append(toIndentedString(userEvent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dryRun");
    openapiFields.add("filter");
    openapiFields.add("labels");
    openapiFields.add("pageSize");
    openapiFields.add("pageToken");
    openapiFields.add("params");
    openapiFields.add("userEvent");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRecommendationengineV1beta1PredictRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRecommendationengineV1beta1PredictRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRecommendationengineV1beta1PredictRequest is not found in the empty JSON string", GoogleCloudRecommendationengineV1beta1PredictRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRecommendationengineV1beta1PredictRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRecommendationengineV1beta1PredictRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("filter") != null && !jsonObj.get("filter").isJsonNull()) && !jsonObj.get("filter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filter").toString()));
      }
      if ((jsonObj.get("pageToken") != null && !jsonObj.get("pageToken").isJsonNull()) && !jsonObj.get("pageToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pageToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pageToken").toString()));
      }
      // validate the optional field `userEvent`
      if (jsonObj.get("userEvent") != null && !jsonObj.get("userEvent").isJsonNull()) {
        GoogleCloudRecommendationengineV1beta1UserEvent.validateJsonElement(jsonObj.get("userEvent"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRecommendationengineV1beta1PredictRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRecommendationengineV1beta1PredictRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRecommendationengineV1beta1PredictRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRecommendationengineV1beta1PredictRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRecommendationengineV1beta1PredictRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRecommendationengineV1beta1PredictRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRecommendationengineV1beta1PredictRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRecommendationengineV1beta1PredictRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRecommendationengineV1beta1PredictRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRecommendationengineV1beta1PredictRequest
   */
  public static GoogleCloudRecommendationengineV1beta1PredictRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRecommendationengineV1beta1PredictRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudRecommendationengineV1beta1PredictRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

