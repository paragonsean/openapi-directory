/*
 * Recommendations AI (Beta)
 * Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Google Cloud Storage location for input content. format.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:25.887548-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRecommendationengineV1beta1GcsSource {
  public static final String SERIALIZED_NAME_INPUT_URIS = "inputUris";
  @SerializedName(SERIALIZED_NAME_INPUT_URIS)
  private List<String> inputUris = new ArrayList<>();

  public static final String SERIALIZED_NAME_JSON_SCHEMA = "jsonSchema";
  @SerializedName(SERIALIZED_NAME_JSON_SCHEMA)
  private String jsonSchema;

  public GoogleCloudRecommendationengineV1beta1GcsSource() {
  }

  public GoogleCloudRecommendationengineV1beta1GcsSource inputUris(List<String> inputUris) {
    this.inputUris = inputUris;
    return this;
  }

  public GoogleCloudRecommendationengineV1beta1GcsSource addInputUrisItem(String inputUrisItem) {
    if (this.inputUris == null) {
      this.inputUris = new ArrayList<>();
    }
    this.inputUris.add(inputUrisItem);
    return this;
  }

  /**
   * Required. Google Cloud Storage URIs to input files. URI can be up to 2000 characters long. URIs can match the full object path (for example, &#x60;gs://bucket/directory/object.json&#x60;) or a pattern matching one or more files, such as &#x60;gs://bucket/directory/_*.json&#x60;. A request can contain at most 100 files, and each file can be up to 2 GB. See [Importing catalog information](/recommendations-ai/docs/upload-catalog) for the expected file format and setup instructions.
   * @return inputUris
   */
  @javax.annotation.Nullable
  public List<String> getInputUris() {
    return inputUris;
  }

  public void setInputUris(List<String> inputUris) {
    this.inputUris = inputUris;
  }


  public GoogleCloudRecommendationengineV1beta1GcsSource jsonSchema(String jsonSchema) {
    this.jsonSchema = jsonSchema;
    return this;
  }

  /**
   * Optional. The schema to use when parsing the data from the source. Supported values for catalog imports: 1: \&quot;catalog_recommendations_ai\&quot; using https://cloud.google.com/recommendations-ai/docs/upload-catalog#json (Default for catalogItems.import) 2: \&quot;catalog_merchant_center\&quot; using https://cloud.google.com/recommendations-ai/docs/upload-catalog#mc Supported values for user events imports: 1: \&quot;user_events_recommendations_ai\&quot; using https://cloud.google.com/recommendations-ai/docs/manage-user-events#import (Default for userEvents.import) 2. \&quot;user_events_ga360\&quot; using https://support.google.com/analytics/answer/3437719?hl&#x3D;en
   * @return jsonSchema
   */
  @javax.annotation.Nullable
  public String getJsonSchema() {
    return jsonSchema;
  }

  public void setJsonSchema(String jsonSchema) {
    this.jsonSchema = jsonSchema;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRecommendationengineV1beta1GcsSource googleCloudRecommendationengineV1beta1GcsSource = (GoogleCloudRecommendationengineV1beta1GcsSource) o;
    return Objects.equals(this.inputUris, googleCloudRecommendationengineV1beta1GcsSource.inputUris) &&
        Objects.equals(this.jsonSchema, googleCloudRecommendationengineV1beta1GcsSource.jsonSchema);
  }

  @Override
  public int hashCode() {
    return Objects.hash(inputUris, jsonSchema);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRecommendationengineV1beta1GcsSource {\n");
    sb.append("    inputUris: ").append(toIndentedString(inputUris)).append("\n");
    sb.append("    jsonSchema: ").append(toIndentedString(jsonSchema)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("inputUris");
    openapiFields.add("jsonSchema");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRecommendationengineV1beta1GcsSource
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRecommendationengineV1beta1GcsSource.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRecommendationengineV1beta1GcsSource is not found in the empty JSON string", GoogleCloudRecommendationengineV1beta1GcsSource.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRecommendationengineV1beta1GcsSource.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRecommendationengineV1beta1GcsSource` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("inputUris") != null && !jsonObj.get("inputUris").isJsonNull() && !jsonObj.get("inputUris").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `inputUris` to be an array in the JSON string but got `%s`", jsonObj.get("inputUris").toString()));
      }
      if ((jsonObj.get("jsonSchema") != null && !jsonObj.get("jsonSchema").isJsonNull()) && !jsonObj.get("jsonSchema").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jsonSchema` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jsonSchema").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRecommendationengineV1beta1GcsSource.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRecommendationengineV1beta1GcsSource' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRecommendationengineV1beta1GcsSource> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRecommendationengineV1beta1GcsSource.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRecommendationengineV1beta1GcsSource>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRecommendationengineV1beta1GcsSource value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRecommendationengineV1beta1GcsSource read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRecommendationengineV1beta1GcsSource given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRecommendationengineV1beta1GcsSource
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRecommendationengineV1beta1GcsSource
   */
  public static GoogleCloudRecommendationengineV1beta1GcsSource fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRecommendationengineV1beta1GcsSource.class);
  }

  /**
   * Convert an instance of GoogleCloudRecommendationengineV1beta1GcsSource to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

