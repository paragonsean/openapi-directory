/*
 * Recommendations AI (Beta)
 * Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy;
import org.openapitools.client.model.GoogleCloudRecommendationengineV1beta1FeatureMap;
import org.openapitools.client.model.GoogleCloudRecommendationengineV1beta1ProductCatalogItem;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CatalogItem captures all metadata information of items to be recommended.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:25.887548-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRecommendationengineV1beta1CatalogItem {
  public static final String SERIALIZED_NAME_CATEGORY_HIERARCHIES = "categoryHierarchies";
  @SerializedName(SERIALIZED_NAME_CATEGORY_HIERARCHIES)
  private List<GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy> categoryHierarchies = new ArrayList<>();

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ITEM_ATTRIBUTES = "itemAttributes";
  @SerializedName(SERIALIZED_NAME_ITEM_ATTRIBUTES)
  private GoogleCloudRecommendationengineV1beta1FeatureMap itemAttributes;

  public static final String SERIALIZED_NAME_ITEM_GROUP_ID = "itemGroupId";
  @SerializedName(SERIALIZED_NAME_ITEM_GROUP_ID)
  private String itemGroupId;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "languageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_PRODUCT_METADATA = "productMetadata";
  @SerializedName(SERIALIZED_NAME_PRODUCT_METADATA)
  private GoogleCloudRecommendationengineV1beta1ProductCatalogItem productMetadata;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public GoogleCloudRecommendationengineV1beta1CatalogItem() {
  }

  public GoogleCloudRecommendationengineV1beta1CatalogItem categoryHierarchies(List<GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy> categoryHierarchies) {
    this.categoryHierarchies = categoryHierarchies;
    return this;
  }

  public GoogleCloudRecommendationengineV1beta1CatalogItem addCategoryHierarchiesItem(GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy categoryHierarchiesItem) {
    if (this.categoryHierarchies == null) {
      this.categoryHierarchies = new ArrayList<>();
    }
    this.categoryHierarchies.add(categoryHierarchiesItem);
    return this;
  }

  /**
   * Required. Catalog item categories. This field is repeated for supporting one catalog item belonging to several parallel category hierarchies. For example, if a shoes product belongs to both [\&quot;Shoes &amp; Accessories\&quot; -&gt; \&quot;Shoes\&quot;] and [\&quot;Sports &amp; Fitness\&quot; -&gt; \&quot;Athletic Clothing\&quot; -&gt; \&quot;Shoes\&quot;], it could be represented as: \&quot;categoryHierarchies\&quot;: [ { \&quot;categories\&quot;: [\&quot;Shoes &amp; Accessories\&quot;, \&quot;Shoes\&quot;]}, { \&quot;categories\&quot;: [\&quot;Sports &amp; Fitness\&quot;, \&quot;Athletic Clothing\&quot;, \&quot;Shoes\&quot;] } ]
   * @return categoryHierarchies
   */
  @javax.annotation.Nullable
  public List<GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy> getCategoryHierarchies() {
    return categoryHierarchies;
  }

  public void setCategoryHierarchies(List<GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy> categoryHierarchies) {
    this.categoryHierarchies = categoryHierarchies;
  }


  public GoogleCloudRecommendationengineV1beta1CatalogItem description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Optional. Catalog item description. UTF-8 encoded string with a length limit of 5 KiB.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GoogleCloudRecommendationengineV1beta1CatalogItem id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Required. Catalog item identifier. UTF-8 encoded string with a length limit of 128 bytes. This id must be unique among all catalog items within the same catalog. It should also be used when logging user events in order for the user events to be joined with the Catalog.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public GoogleCloudRecommendationengineV1beta1CatalogItem itemAttributes(GoogleCloudRecommendationengineV1beta1FeatureMap itemAttributes) {
    this.itemAttributes = itemAttributes;
    return this;
  }

  /**
   * Get itemAttributes
   * @return itemAttributes
   */
  @javax.annotation.Nullable
  public GoogleCloudRecommendationengineV1beta1FeatureMap getItemAttributes() {
    return itemAttributes;
  }

  public void setItemAttributes(GoogleCloudRecommendationengineV1beta1FeatureMap itemAttributes) {
    this.itemAttributes = itemAttributes;
  }


  public GoogleCloudRecommendationengineV1beta1CatalogItem itemGroupId(String itemGroupId) {
    this.itemGroupId = itemGroupId;
    return this;
  }

  /**
   * Optional. Variant group identifier for prediction results. UTF-8 encoded string with a length limit of 128 bytes. This field must be enabled before it can be used. [Learn more](/recommendations-ai/docs/catalog#item-group-id).
   * @return itemGroupId
   */
  @javax.annotation.Nullable
  public String getItemGroupId() {
    return itemGroupId;
  }

  public void setItemGroupId(String itemGroupId) {
    this.itemGroupId = itemGroupId;
  }


  public GoogleCloudRecommendationengineV1beta1CatalogItem languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * Optional. Deprecated. The model automatically detects the text language. Your catalog can include text in different languages, but duplicating catalog items to provide text in multiple languages can result in degraded model performance.
   * @return languageCode
   */
  @javax.annotation.Nullable
  public String getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public GoogleCloudRecommendationengineV1beta1CatalogItem productMetadata(GoogleCloudRecommendationengineV1beta1ProductCatalogItem productMetadata) {
    this.productMetadata = productMetadata;
    return this;
  }

  /**
   * Get productMetadata
   * @return productMetadata
   */
  @javax.annotation.Nullable
  public GoogleCloudRecommendationengineV1beta1ProductCatalogItem getProductMetadata() {
    return productMetadata;
  }

  public void setProductMetadata(GoogleCloudRecommendationengineV1beta1ProductCatalogItem productMetadata) {
    this.productMetadata = productMetadata;
  }


  public GoogleCloudRecommendationengineV1beta1CatalogItem tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public GoogleCloudRecommendationengineV1beta1CatalogItem addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * Optional. Filtering tags associated with the catalog item. Each tag should be a UTF-8 encoded string with a length limit of 1 KiB. This tag can be used for filtering recommendation results by passing the tag as part of the predict request filter.
   * @return tags
   */
  @javax.annotation.Nullable
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public GoogleCloudRecommendationengineV1beta1CatalogItem title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Required. Catalog item title. UTF-8 encoded string with a length limit of 1 KiB.
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRecommendationengineV1beta1CatalogItem googleCloudRecommendationengineV1beta1CatalogItem = (GoogleCloudRecommendationengineV1beta1CatalogItem) o;
    return Objects.equals(this.categoryHierarchies, googleCloudRecommendationengineV1beta1CatalogItem.categoryHierarchies) &&
        Objects.equals(this.description, googleCloudRecommendationengineV1beta1CatalogItem.description) &&
        Objects.equals(this.id, googleCloudRecommendationengineV1beta1CatalogItem.id) &&
        Objects.equals(this.itemAttributes, googleCloudRecommendationengineV1beta1CatalogItem.itemAttributes) &&
        Objects.equals(this.itemGroupId, googleCloudRecommendationengineV1beta1CatalogItem.itemGroupId) &&
        Objects.equals(this.languageCode, googleCloudRecommendationengineV1beta1CatalogItem.languageCode) &&
        Objects.equals(this.productMetadata, googleCloudRecommendationengineV1beta1CatalogItem.productMetadata) &&
        Objects.equals(this.tags, googleCloudRecommendationengineV1beta1CatalogItem.tags) &&
        Objects.equals(this.title, googleCloudRecommendationengineV1beta1CatalogItem.title);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categoryHierarchies, description, id, itemAttributes, itemGroupId, languageCode, productMetadata, tags, title);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRecommendationengineV1beta1CatalogItem {\n");
    sb.append("    categoryHierarchies: ").append(toIndentedString(categoryHierarchies)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    itemAttributes: ").append(toIndentedString(itemAttributes)).append("\n");
    sb.append("    itemGroupId: ").append(toIndentedString(itemGroupId)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    productMetadata: ").append(toIndentedString(productMetadata)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("categoryHierarchies");
    openapiFields.add("description");
    openapiFields.add("id");
    openapiFields.add("itemAttributes");
    openapiFields.add("itemGroupId");
    openapiFields.add("languageCode");
    openapiFields.add("productMetadata");
    openapiFields.add("tags");
    openapiFields.add("title");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRecommendationengineV1beta1CatalogItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRecommendationengineV1beta1CatalogItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRecommendationengineV1beta1CatalogItem is not found in the empty JSON string", GoogleCloudRecommendationengineV1beta1CatalogItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRecommendationengineV1beta1CatalogItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRecommendationengineV1beta1CatalogItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("categoryHierarchies") != null && !jsonObj.get("categoryHierarchies").isJsonNull()) {
        JsonArray jsonArraycategoryHierarchies = jsonObj.getAsJsonArray("categoryHierarchies");
        if (jsonArraycategoryHierarchies != null) {
          // ensure the json data is an array
          if (!jsonObj.get("categoryHierarchies").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `categoryHierarchies` to be an array in the JSON string but got `%s`", jsonObj.get("categoryHierarchies").toString()));
          }

          // validate the optional field `categoryHierarchies` (array)
          for (int i = 0; i < jsonArraycategoryHierarchies.size(); i++) {
            GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy.validateJsonElement(jsonArraycategoryHierarchies.get(i));
          };
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `itemAttributes`
      if (jsonObj.get("itemAttributes") != null && !jsonObj.get("itemAttributes").isJsonNull()) {
        GoogleCloudRecommendationengineV1beta1FeatureMap.validateJsonElement(jsonObj.get("itemAttributes"));
      }
      if ((jsonObj.get("itemGroupId") != null && !jsonObj.get("itemGroupId").isJsonNull()) && !jsonObj.get("itemGroupId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `itemGroupId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("itemGroupId").toString()));
      }
      if ((jsonObj.get("languageCode") != null && !jsonObj.get("languageCode").isJsonNull()) && !jsonObj.get("languageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `languageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("languageCode").toString()));
      }
      // validate the optional field `productMetadata`
      if (jsonObj.get("productMetadata") != null && !jsonObj.get("productMetadata").isJsonNull()) {
        GoogleCloudRecommendationengineV1beta1ProductCatalogItem.validateJsonElement(jsonObj.get("productMetadata"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull() && !jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRecommendationengineV1beta1CatalogItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRecommendationengineV1beta1CatalogItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRecommendationengineV1beta1CatalogItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRecommendationengineV1beta1CatalogItem.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRecommendationengineV1beta1CatalogItem>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRecommendationengineV1beta1CatalogItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRecommendationengineV1beta1CatalogItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRecommendationengineV1beta1CatalogItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRecommendationengineV1beta1CatalogItem
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRecommendationengineV1beta1CatalogItem
   */
  public static GoogleCloudRecommendationengineV1beta1CatalogItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRecommendationengineV1beta1CatalogItem.class);
  }

  /**
   * Convert an instance of GoogleCloudRecommendationengineV1beta1CatalogItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

