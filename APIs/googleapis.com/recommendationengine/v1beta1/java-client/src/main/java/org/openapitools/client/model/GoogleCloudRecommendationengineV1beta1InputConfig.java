/*
 * Recommendations AI (Beta)
 * Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudRecommendationengineV1beta1BigQuerySource;
import org.openapitools.client.model.GoogleCloudRecommendationengineV1beta1CatalogInlineSource;
import org.openapitools.client.model.GoogleCloudRecommendationengineV1beta1GcsSource;
import org.openapitools.client.model.GoogleCloudRecommendationengineV1beta1UserEventInlineSource;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The input config source.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:25.887548-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRecommendationengineV1beta1InputConfig {
  public static final String SERIALIZED_NAME_BIG_QUERY_SOURCE = "bigQuerySource";
  @SerializedName(SERIALIZED_NAME_BIG_QUERY_SOURCE)
  private GoogleCloudRecommendationengineV1beta1BigQuerySource bigQuerySource;

  public static final String SERIALIZED_NAME_CATALOG_INLINE_SOURCE = "catalogInlineSource";
  @SerializedName(SERIALIZED_NAME_CATALOG_INLINE_SOURCE)
  private GoogleCloudRecommendationengineV1beta1CatalogInlineSource catalogInlineSource;

  public static final String SERIALIZED_NAME_GCS_SOURCE = "gcsSource";
  @SerializedName(SERIALIZED_NAME_GCS_SOURCE)
  private GoogleCloudRecommendationengineV1beta1GcsSource gcsSource;

  public static final String SERIALIZED_NAME_USER_EVENT_INLINE_SOURCE = "userEventInlineSource";
  @SerializedName(SERIALIZED_NAME_USER_EVENT_INLINE_SOURCE)
  private GoogleCloudRecommendationengineV1beta1UserEventInlineSource userEventInlineSource;

  public GoogleCloudRecommendationengineV1beta1InputConfig() {
  }

  public GoogleCloudRecommendationengineV1beta1InputConfig bigQuerySource(GoogleCloudRecommendationengineV1beta1BigQuerySource bigQuerySource) {
    this.bigQuerySource = bigQuerySource;
    return this;
  }

  /**
   * Get bigQuerySource
   * @return bigQuerySource
   */
  @javax.annotation.Nullable
  public GoogleCloudRecommendationengineV1beta1BigQuerySource getBigQuerySource() {
    return bigQuerySource;
  }

  public void setBigQuerySource(GoogleCloudRecommendationengineV1beta1BigQuerySource bigQuerySource) {
    this.bigQuerySource = bigQuerySource;
  }


  public GoogleCloudRecommendationengineV1beta1InputConfig catalogInlineSource(GoogleCloudRecommendationengineV1beta1CatalogInlineSource catalogInlineSource) {
    this.catalogInlineSource = catalogInlineSource;
    return this;
  }

  /**
   * Get catalogInlineSource
   * @return catalogInlineSource
   */
  @javax.annotation.Nullable
  public GoogleCloudRecommendationengineV1beta1CatalogInlineSource getCatalogInlineSource() {
    return catalogInlineSource;
  }

  public void setCatalogInlineSource(GoogleCloudRecommendationengineV1beta1CatalogInlineSource catalogInlineSource) {
    this.catalogInlineSource = catalogInlineSource;
  }


  public GoogleCloudRecommendationengineV1beta1InputConfig gcsSource(GoogleCloudRecommendationengineV1beta1GcsSource gcsSource) {
    this.gcsSource = gcsSource;
    return this;
  }

  /**
   * Get gcsSource
   * @return gcsSource
   */
  @javax.annotation.Nullable
  public GoogleCloudRecommendationengineV1beta1GcsSource getGcsSource() {
    return gcsSource;
  }

  public void setGcsSource(GoogleCloudRecommendationengineV1beta1GcsSource gcsSource) {
    this.gcsSource = gcsSource;
  }


  public GoogleCloudRecommendationengineV1beta1InputConfig userEventInlineSource(GoogleCloudRecommendationengineV1beta1UserEventInlineSource userEventInlineSource) {
    this.userEventInlineSource = userEventInlineSource;
    return this;
  }

  /**
   * Get userEventInlineSource
   * @return userEventInlineSource
   */
  @javax.annotation.Nullable
  public GoogleCloudRecommendationengineV1beta1UserEventInlineSource getUserEventInlineSource() {
    return userEventInlineSource;
  }

  public void setUserEventInlineSource(GoogleCloudRecommendationengineV1beta1UserEventInlineSource userEventInlineSource) {
    this.userEventInlineSource = userEventInlineSource;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRecommendationengineV1beta1InputConfig googleCloudRecommendationengineV1beta1InputConfig = (GoogleCloudRecommendationengineV1beta1InputConfig) o;
    return Objects.equals(this.bigQuerySource, googleCloudRecommendationengineV1beta1InputConfig.bigQuerySource) &&
        Objects.equals(this.catalogInlineSource, googleCloudRecommendationengineV1beta1InputConfig.catalogInlineSource) &&
        Objects.equals(this.gcsSource, googleCloudRecommendationengineV1beta1InputConfig.gcsSource) &&
        Objects.equals(this.userEventInlineSource, googleCloudRecommendationengineV1beta1InputConfig.userEventInlineSource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bigQuerySource, catalogInlineSource, gcsSource, userEventInlineSource);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRecommendationengineV1beta1InputConfig {\n");
    sb.append("    bigQuerySource: ").append(toIndentedString(bigQuerySource)).append("\n");
    sb.append("    catalogInlineSource: ").append(toIndentedString(catalogInlineSource)).append("\n");
    sb.append("    gcsSource: ").append(toIndentedString(gcsSource)).append("\n");
    sb.append("    userEventInlineSource: ").append(toIndentedString(userEventInlineSource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bigQuerySource");
    openapiFields.add("catalogInlineSource");
    openapiFields.add("gcsSource");
    openapiFields.add("userEventInlineSource");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRecommendationengineV1beta1InputConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRecommendationengineV1beta1InputConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRecommendationengineV1beta1InputConfig is not found in the empty JSON string", GoogleCloudRecommendationengineV1beta1InputConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRecommendationengineV1beta1InputConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRecommendationengineV1beta1InputConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `bigQuerySource`
      if (jsonObj.get("bigQuerySource") != null && !jsonObj.get("bigQuerySource").isJsonNull()) {
        GoogleCloudRecommendationengineV1beta1BigQuerySource.validateJsonElement(jsonObj.get("bigQuerySource"));
      }
      // validate the optional field `catalogInlineSource`
      if (jsonObj.get("catalogInlineSource") != null && !jsonObj.get("catalogInlineSource").isJsonNull()) {
        GoogleCloudRecommendationengineV1beta1CatalogInlineSource.validateJsonElement(jsonObj.get("catalogInlineSource"));
      }
      // validate the optional field `gcsSource`
      if (jsonObj.get("gcsSource") != null && !jsonObj.get("gcsSource").isJsonNull()) {
        GoogleCloudRecommendationengineV1beta1GcsSource.validateJsonElement(jsonObj.get("gcsSource"));
      }
      // validate the optional field `userEventInlineSource`
      if (jsonObj.get("userEventInlineSource") != null && !jsonObj.get("userEventInlineSource").isJsonNull()) {
        GoogleCloudRecommendationengineV1beta1UserEventInlineSource.validateJsonElement(jsonObj.get("userEventInlineSource"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRecommendationengineV1beta1InputConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRecommendationengineV1beta1InputConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRecommendationengineV1beta1InputConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRecommendationengineV1beta1InputConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRecommendationengineV1beta1InputConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRecommendationengineV1beta1InputConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRecommendationengineV1beta1InputConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRecommendationengineV1beta1InputConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRecommendationengineV1beta1InputConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRecommendationengineV1beta1InputConfig
   */
  public static GoogleCloudRecommendationengineV1beta1InputConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRecommendationengineV1beta1InputConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudRecommendationengineV1beta1InputConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

