/*
 * Recommendations AI (Beta)
 * Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Response message for predict method.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:25.887548-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRecommendationengineV1beta1PredictResponse {
  public static final String SERIALIZED_NAME_DRY_RUN = "dryRun";
  @SerializedName(SERIALIZED_NAME_DRY_RUN)
  private Boolean dryRun;

  public static final String SERIALIZED_NAME_ITEMS_MISSING_IN_CATALOG = "itemsMissingInCatalog";
  @SerializedName(SERIALIZED_NAME_ITEMS_MISSING_IN_CATALOG)
  private List<String> itemsMissingInCatalog = new ArrayList<>();

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Map<String, Object> metadata = new HashMap<>();

  public static final String SERIALIZED_NAME_NEXT_PAGE_TOKEN = "nextPageToken";
  @SerializedName(SERIALIZED_NAME_NEXT_PAGE_TOKEN)
  private String nextPageToken;

  public static final String SERIALIZED_NAME_RECOMMENDATION_TOKEN = "recommendationToken";
  @SerializedName(SERIALIZED_NAME_RECOMMENDATION_TOKEN)
  private String recommendationToken;

  public static final String SERIALIZED_NAME_RESULTS = "results";
  @SerializedName(SERIALIZED_NAME_RESULTS)
  private List<GoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult> results = new ArrayList<>();

  public GoogleCloudRecommendationengineV1beta1PredictResponse() {
  }

  public GoogleCloudRecommendationengineV1beta1PredictResponse dryRun(Boolean dryRun) {
    this.dryRun = dryRun;
    return this;
  }

  /**
   * True if the dryRun property was set in the request.
   * @return dryRun
   */
  @javax.annotation.Nullable
  public Boolean getDryRun() {
    return dryRun;
  }

  public void setDryRun(Boolean dryRun) {
    this.dryRun = dryRun;
  }


  public GoogleCloudRecommendationengineV1beta1PredictResponse itemsMissingInCatalog(List<String> itemsMissingInCatalog) {
    this.itemsMissingInCatalog = itemsMissingInCatalog;
    return this;
  }

  public GoogleCloudRecommendationengineV1beta1PredictResponse addItemsMissingInCatalogItem(String itemsMissingInCatalogItem) {
    if (this.itemsMissingInCatalog == null) {
      this.itemsMissingInCatalog = new ArrayList<>();
    }
    this.itemsMissingInCatalog.add(itemsMissingInCatalogItem);
    return this;
  }

  /**
   * IDs of items in the request that were missing from the catalog.
   * @return itemsMissingInCatalog
   */
  @javax.annotation.Nullable
  public List<String> getItemsMissingInCatalog() {
    return itemsMissingInCatalog;
  }

  public void setItemsMissingInCatalog(List<String> itemsMissingInCatalog) {
    this.itemsMissingInCatalog = itemsMissingInCatalog;
  }


  public GoogleCloudRecommendationengineV1beta1PredictResponse metadata(Map<String, Object> metadata) {
    this.metadata = metadata;
    return this;
  }

  public GoogleCloudRecommendationengineV1beta1PredictResponse putMetadataItem(String key, Object metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

  /**
   * Additional domain specific prediction response metadata.
   * @return metadata
   */
  @javax.annotation.Nullable
  public Map<String, Object> getMetadata() {
    return metadata;
  }

  public void setMetadata(Map<String, Object> metadata) {
    this.metadata = metadata;
  }


  public GoogleCloudRecommendationengineV1beta1PredictResponse nextPageToken(String nextPageToken) {
    this.nextPageToken = nextPageToken;
    return this;
  }

  /**
   * If empty, the list is complete. If nonempty, the token to pass to the next request&#39;s PredictRequest.page_token.
   * @return nextPageToken
   */
  @javax.annotation.Nullable
  public String getNextPageToken() {
    return nextPageToken;
  }

  public void setNextPageToken(String nextPageToken) {
    this.nextPageToken = nextPageToken;
  }


  public GoogleCloudRecommendationengineV1beta1PredictResponse recommendationToken(String recommendationToken) {
    this.recommendationToken = recommendationToken;
    return this;
  }

  /**
   * A unique recommendation token. This should be included in the user event logs resulting from this recommendation, which enables accurate attribution of recommendation model performance.
   * @return recommendationToken
   */
  @javax.annotation.Nullable
  public String getRecommendationToken() {
    return recommendationToken;
  }

  public void setRecommendationToken(String recommendationToken) {
    this.recommendationToken = recommendationToken;
  }


  public GoogleCloudRecommendationengineV1beta1PredictResponse results(List<GoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult> results) {
    this.results = results;
    return this;
  }

  public GoogleCloudRecommendationengineV1beta1PredictResponse addResultsItem(GoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult resultsItem) {
    if (this.results == null) {
      this.results = new ArrayList<>();
    }
    this.results.add(resultsItem);
    return this;
  }

  /**
   * A list of recommended items. The order represents the ranking (from the most relevant item to the least).
   * @return results
   */
  @javax.annotation.Nullable
  public List<GoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult> getResults() {
    return results;
  }

  public void setResults(List<GoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult> results) {
    this.results = results;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRecommendationengineV1beta1PredictResponse googleCloudRecommendationengineV1beta1PredictResponse = (GoogleCloudRecommendationengineV1beta1PredictResponse) o;
    return Objects.equals(this.dryRun, googleCloudRecommendationengineV1beta1PredictResponse.dryRun) &&
        Objects.equals(this.itemsMissingInCatalog, googleCloudRecommendationengineV1beta1PredictResponse.itemsMissingInCatalog) &&
        Objects.equals(this.metadata, googleCloudRecommendationengineV1beta1PredictResponse.metadata) &&
        Objects.equals(this.nextPageToken, googleCloudRecommendationengineV1beta1PredictResponse.nextPageToken) &&
        Objects.equals(this.recommendationToken, googleCloudRecommendationengineV1beta1PredictResponse.recommendationToken) &&
        Objects.equals(this.results, googleCloudRecommendationengineV1beta1PredictResponse.results);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dryRun, itemsMissingInCatalog, metadata, nextPageToken, recommendationToken, results);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRecommendationengineV1beta1PredictResponse {\n");
    sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
    sb.append("    itemsMissingInCatalog: ").append(toIndentedString(itemsMissingInCatalog)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    nextPageToken: ").append(toIndentedString(nextPageToken)).append("\n");
    sb.append("    recommendationToken: ").append(toIndentedString(recommendationToken)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dryRun");
    openapiFields.add("itemsMissingInCatalog");
    openapiFields.add("metadata");
    openapiFields.add("nextPageToken");
    openapiFields.add("recommendationToken");
    openapiFields.add("results");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRecommendationengineV1beta1PredictResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRecommendationengineV1beta1PredictResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRecommendationengineV1beta1PredictResponse is not found in the empty JSON string", GoogleCloudRecommendationengineV1beta1PredictResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRecommendationengineV1beta1PredictResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRecommendationengineV1beta1PredictResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("itemsMissingInCatalog") != null && !jsonObj.get("itemsMissingInCatalog").isJsonNull() && !jsonObj.get("itemsMissingInCatalog").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `itemsMissingInCatalog` to be an array in the JSON string but got `%s`", jsonObj.get("itemsMissingInCatalog").toString()));
      }
      if ((jsonObj.get("nextPageToken") != null && !jsonObj.get("nextPageToken").isJsonNull()) && !jsonObj.get("nextPageToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nextPageToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nextPageToken").toString()));
      }
      if ((jsonObj.get("recommendationToken") != null && !jsonObj.get("recommendationToken").isJsonNull()) && !jsonObj.get("recommendationToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recommendationToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recommendationToken").toString()));
      }
      if (jsonObj.get("results") != null && !jsonObj.get("results").isJsonNull()) {
        JsonArray jsonArrayresults = jsonObj.getAsJsonArray("results");
        if (jsonArrayresults != null) {
          // ensure the json data is an array
          if (!jsonObj.get("results").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `results` to be an array in the JSON string but got `%s`", jsonObj.get("results").toString()));
          }

          // validate the optional field `results` (array)
          for (int i = 0; i < jsonArrayresults.size(); i++) {
            GoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult.validateJsonElement(jsonArrayresults.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRecommendationengineV1beta1PredictResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRecommendationengineV1beta1PredictResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRecommendationengineV1beta1PredictResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRecommendationengineV1beta1PredictResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRecommendationengineV1beta1PredictResponse>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRecommendationengineV1beta1PredictResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRecommendationengineV1beta1PredictResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRecommendationengineV1beta1PredictResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRecommendationengineV1beta1PredictResponse
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRecommendationengineV1beta1PredictResponse
   */
  public static GoogleCloudRecommendationengineV1beta1PredictResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRecommendationengineV1beta1PredictResponse.class);
  }

  /**
   * Convert an instance of GoogleCloudRecommendationengineV1beta1PredictResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

