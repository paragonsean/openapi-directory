/*
 * Recommendations AI (Beta)
 * Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Metadata related to the progress of the Import operation. This will be returned by the google.longrunning.Operation.metadata field.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:25.887548-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRecommendationengineV1beta1ImportMetadata {
  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_FAILURE_COUNT = "failureCount";
  @SerializedName(SERIALIZED_NAME_FAILURE_COUNT)
  private String failureCount;

  public static final String SERIALIZED_NAME_OPERATION_NAME = "operationName";
  @SerializedName(SERIALIZED_NAME_OPERATION_NAME)
  private String operationName;

  public static final String SERIALIZED_NAME_REQUEST_ID = "requestId";
  @SerializedName(SERIALIZED_NAME_REQUEST_ID)
  private String requestId;

  public static final String SERIALIZED_NAME_SUCCESS_COUNT = "successCount";
  @SerializedName(SERIALIZED_NAME_SUCCESS_COUNT)
  private String successCount;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public GoogleCloudRecommendationengineV1beta1ImportMetadata() {
  }

  public GoogleCloudRecommendationengineV1beta1ImportMetadata createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Operation create time.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }


  public GoogleCloudRecommendationengineV1beta1ImportMetadata failureCount(String failureCount) {
    this.failureCount = failureCount;
    return this;
  }

  /**
   * Count of entries that encountered errors while processing.
   * @return failureCount
   */
  @javax.annotation.Nullable
  public String getFailureCount() {
    return failureCount;
  }

  public void setFailureCount(String failureCount) {
    this.failureCount = failureCount;
  }


  public GoogleCloudRecommendationengineV1beta1ImportMetadata operationName(String operationName) {
    this.operationName = operationName;
    return this;
  }

  /**
   * Name of the operation.
   * @return operationName
   */
  @javax.annotation.Nullable
  public String getOperationName() {
    return operationName;
  }

  public void setOperationName(String operationName) {
    this.operationName = operationName;
  }


  public GoogleCloudRecommendationengineV1beta1ImportMetadata requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

  /**
   * Id of the request / operation. This is parroting back the requestId that was passed in the request.
   * @return requestId
   */
  @javax.annotation.Nullable
  public String getRequestId() {
    return requestId;
  }

  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  public GoogleCloudRecommendationengineV1beta1ImportMetadata successCount(String successCount) {
    this.successCount = successCount;
    return this;
  }

  /**
   * Count of entries that were processed successfully.
   * @return successCount
   */
  @javax.annotation.Nullable
  public String getSuccessCount() {
    return successCount;
  }

  public void setSuccessCount(String successCount) {
    this.successCount = successCount;
  }


  public GoogleCloudRecommendationengineV1beta1ImportMetadata updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Operation last update time. If the operation is done, this is also the finish time.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRecommendationengineV1beta1ImportMetadata googleCloudRecommendationengineV1beta1ImportMetadata = (GoogleCloudRecommendationengineV1beta1ImportMetadata) o;
    return Objects.equals(this.createTime, googleCloudRecommendationengineV1beta1ImportMetadata.createTime) &&
        Objects.equals(this.failureCount, googleCloudRecommendationengineV1beta1ImportMetadata.failureCount) &&
        Objects.equals(this.operationName, googleCloudRecommendationengineV1beta1ImportMetadata.operationName) &&
        Objects.equals(this.requestId, googleCloudRecommendationengineV1beta1ImportMetadata.requestId) &&
        Objects.equals(this.successCount, googleCloudRecommendationengineV1beta1ImportMetadata.successCount) &&
        Objects.equals(this.updateTime, googleCloudRecommendationengineV1beta1ImportMetadata.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, failureCount, operationName, requestId, successCount, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRecommendationengineV1beta1ImportMetadata {\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    failureCount: ").append(toIndentedString(failureCount)).append("\n");
    sb.append("    operationName: ").append(toIndentedString(operationName)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    successCount: ").append(toIndentedString(successCount)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createTime");
    openapiFields.add("failureCount");
    openapiFields.add("operationName");
    openapiFields.add("requestId");
    openapiFields.add("successCount");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRecommendationengineV1beta1ImportMetadata
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRecommendationengineV1beta1ImportMetadata.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRecommendationengineV1beta1ImportMetadata is not found in the empty JSON string", GoogleCloudRecommendationengineV1beta1ImportMetadata.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRecommendationengineV1beta1ImportMetadata.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRecommendationengineV1beta1ImportMetadata` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("failureCount") != null && !jsonObj.get("failureCount").isJsonNull()) && !jsonObj.get("failureCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `failureCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("failureCount").toString()));
      }
      if ((jsonObj.get("operationName") != null && !jsonObj.get("operationName").isJsonNull()) && !jsonObj.get("operationName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `operationName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("operationName").toString()));
      }
      if ((jsonObj.get("requestId") != null && !jsonObj.get("requestId").isJsonNull()) && !jsonObj.get("requestId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `requestId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("requestId").toString()));
      }
      if ((jsonObj.get("successCount") != null && !jsonObj.get("successCount").isJsonNull()) && !jsonObj.get("successCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `successCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("successCount").toString()));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRecommendationengineV1beta1ImportMetadata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRecommendationengineV1beta1ImportMetadata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRecommendationengineV1beta1ImportMetadata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRecommendationengineV1beta1ImportMetadata.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRecommendationengineV1beta1ImportMetadata>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRecommendationengineV1beta1ImportMetadata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRecommendationengineV1beta1ImportMetadata read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRecommendationengineV1beta1ImportMetadata given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRecommendationengineV1beta1ImportMetadata
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRecommendationengineV1beta1ImportMetadata
   */
  public static GoogleCloudRecommendationengineV1beta1ImportMetadata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRecommendationengineV1beta1ImportMetadata.class);
  }

  /**
   * Convert an instance of GoogleCloudRecommendationengineV1beta1ImportMetadata to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

