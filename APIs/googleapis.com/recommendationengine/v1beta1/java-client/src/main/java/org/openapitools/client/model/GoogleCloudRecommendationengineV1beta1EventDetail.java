/*
 * Recommendations AI (Beta)
 * Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudRecommendationengineV1beta1FeatureMap;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * User event details shared by all recommendation types.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:25.887548-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRecommendationengineV1beta1EventDetail {
  public static final String SERIALIZED_NAME_EVENT_ATTRIBUTES = "eventAttributes";
  @SerializedName(SERIALIZED_NAME_EVENT_ATTRIBUTES)
  private GoogleCloudRecommendationengineV1beta1FeatureMap eventAttributes;

  public static final String SERIALIZED_NAME_EXPERIMENT_IDS = "experimentIds";
  @SerializedName(SERIALIZED_NAME_EXPERIMENT_IDS)
  private List<String> experimentIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_PAGE_VIEW_ID = "pageViewId";
  @SerializedName(SERIALIZED_NAME_PAGE_VIEW_ID)
  private String pageViewId;

  public static final String SERIALIZED_NAME_RECOMMENDATION_TOKEN = "recommendationToken";
  @SerializedName(SERIALIZED_NAME_RECOMMENDATION_TOKEN)
  private String recommendationToken;

  public static final String SERIALIZED_NAME_REFERRER_URI = "referrerUri";
  @SerializedName(SERIALIZED_NAME_REFERRER_URI)
  private String referrerUri;

  public static final String SERIALIZED_NAME_URI = "uri";
  @SerializedName(SERIALIZED_NAME_URI)
  private String uri;

  public GoogleCloudRecommendationengineV1beta1EventDetail() {
  }

  public GoogleCloudRecommendationengineV1beta1EventDetail eventAttributes(GoogleCloudRecommendationengineV1beta1FeatureMap eventAttributes) {
    this.eventAttributes = eventAttributes;
    return this;
  }

  /**
   * Get eventAttributes
   * @return eventAttributes
   */
  @javax.annotation.Nullable
  public GoogleCloudRecommendationengineV1beta1FeatureMap getEventAttributes() {
    return eventAttributes;
  }

  public void setEventAttributes(GoogleCloudRecommendationengineV1beta1FeatureMap eventAttributes) {
    this.eventAttributes = eventAttributes;
  }


  public GoogleCloudRecommendationengineV1beta1EventDetail experimentIds(List<String> experimentIds) {
    this.experimentIds = experimentIds;
    return this;
  }

  public GoogleCloudRecommendationengineV1beta1EventDetail addExperimentIdsItem(String experimentIdsItem) {
    if (this.experimentIds == null) {
      this.experimentIds = new ArrayList<>();
    }
    this.experimentIds.add(experimentIdsItem);
    return this;
  }

  /**
   * Optional. A list of identifiers for the independent experiment groups this user event belongs to. This is used to distinguish between user events associated with different experiment setups (e.g. using Recommendation Engine system, using different recommendation models).
   * @return experimentIds
   */
  @javax.annotation.Nullable
  public List<String> getExperimentIds() {
    return experimentIds;
  }

  public void setExperimentIds(List<String> experimentIds) {
    this.experimentIds = experimentIds;
  }


  public GoogleCloudRecommendationengineV1beta1EventDetail pageViewId(String pageViewId) {
    this.pageViewId = pageViewId;
    return this;
  }

  /**
   * Optional. A unique id of a web page view. This should be kept the same for all user events triggered from the same pageview. For example, an item detail page view could trigger multiple events as the user is browsing the page. The &#x60;pageViewId&#x60; property should be kept the same for all these events so that they can be grouped together properly. This &#x60;pageViewId&#x60; will be automatically generated if using the JavaScript pixel.
   * @return pageViewId
   */
  @javax.annotation.Nullable
  public String getPageViewId() {
    return pageViewId;
  }

  public void setPageViewId(String pageViewId) {
    this.pageViewId = pageViewId;
  }


  public GoogleCloudRecommendationengineV1beta1EventDetail recommendationToken(String recommendationToken) {
    this.recommendationToken = recommendationToken;
    return this;
  }

  /**
   * Optional. Recommendation token included in the recommendation prediction response. This field enables accurate attribution of recommendation model performance. This token enables us to accurately attribute page view or purchase back to the event and the particular predict response containing this clicked/purchased item. If user clicks on product K in the recommendation results, pass the &#x60;PredictResponse.recommendationToken&#x60; property as a url parameter to product K&#39;s page. When recording events on product K&#39;s page, log the PredictResponse.recommendation_token to this field. Optional, but highly encouraged for user events that are the result of a recommendation prediction query.
   * @return recommendationToken
   */
  @javax.annotation.Nullable
  public String getRecommendationToken() {
    return recommendationToken;
  }

  public void setRecommendationToken(String recommendationToken) {
    this.recommendationToken = recommendationToken;
  }


  public GoogleCloudRecommendationengineV1beta1EventDetail referrerUri(String referrerUri) {
    this.referrerUri = referrerUri;
    return this;
  }

  /**
   * Optional. The referrer url of the current page. When using the JavaScript pixel, this value is filled in automatically.
   * @return referrerUri
   */
  @javax.annotation.Nullable
  public String getReferrerUri() {
    return referrerUri;
  }

  public void setReferrerUri(String referrerUri) {
    this.referrerUri = referrerUri;
  }


  public GoogleCloudRecommendationengineV1beta1EventDetail uri(String uri) {
    this.uri = uri;
    return this;
  }

  /**
   * Optional. Complete url (window.location.href) of the user&#39;s current page. When using the JavaScript pixel, this value is filled in automatically. Maximum length 5KB.
   * @return uri
   */
  @javax.annotation.Nullable
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRecommendationengineV1beta1EventDetail googleCloudRecommendationengineV1beta1EventDetail = (GoogleCloudRecommendationengineV1beta1EventDetail) o;
    return Objects.equals(this.eventAttributes, googleCloudRecommendationengineV1beta1EventDetail.eventAttributes) &&
        Objects.equals(this.experimentIds, googleCloudRecommendationengineV1beta1EventDetail.experimentIds) &&
        Objects.equals(this.pageViewId, googleCloudRecommendationengineV1beta1EventDetail.pageViewId) &&
        Objects.equals(this.recommendationToken, googleCloudRecommendationengineV1beta1EventDetail.recommendationToken) &&
        Objects.equals(this.referrerUri, googleCloudRecommendationengineV1beta1EventDetail.referrerUri) &&
        Objects.equals(this.uri, googleCloudRecommendationengineV1beta1EventDetail.uri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventAttributes, experimentIds, pageViewId, recommendationToken, referrerUri, uri);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRecommendationengineV1beta1EventDetail {\n");
    sb.append("    eventAttributes: ").append(toIndentedString(eventAttributes)).append("\n");
    sb.append("    experimentIds: ").append(toIndentedString(experimentIds)).append("\n");
    sb.append("    pageViewId: ").append(toIndentedString(pageViewId)).append("\n");
    sb.append("    recommendationToken: ").append(toIndentedString(recommendationToken)).append("\n");
    sb.append("    referrerUri: ").append(toIndentedString(referrerUri)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("eventAttributes");
    openapiFields.add("experimentIds");
    openapiFields.add("pageViewId");
    openapiFields.add("recommendationToken");
    openapiFields.add("referrerUri");
    openapiFields.add("uri");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRecommendationengineV1beta1EventDetail
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRecommendationengineV1beta1EventDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRecommendationengineV1beta1EventDetail is not found in the empty JSON string", GoogleCloudRecommendationengineV1beta1EventDetail.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRecommendationengineV1beta1EventDetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRecommendationengineV1beta1EventDetail` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `eventAttributes`
      if (jsonObj.get("eventAttributes") != null && !jsonObj.get("eventAttributes").isJsonNull()) {
        GoogleCloudRecommendationengineV1beta1FeatureMap.validateJsonElement(jsonObj.get("eventAttributes"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("experimentIds") != null && !jsonObj.get("experimentIds").isJsonNull() && !jsonObj.get("experimentIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `experimentIds` to be an array in the JSON string but got `%s`", jsonObj.get("experimentIds").toString()));
      }
      if ((jsonObj.get("pageViewId") != null && !jsonObj.get("pageViewId").isJsonNull()) && !jsonObj.get("pageViewId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pageViewId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pageViewId").toString()));
      }
      if ((jsonObj.get("recommendationToken") != null && !jsonObj.get("recommendationToken").isJsonNull()) && !jsonObj.get("recommendationToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recommendationToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recommendationToken").toString()));
      }
      if ((jsonObj.get("referrerUri") != null && !jsonObj.get("referrerUri").isJsonNull()) && !jsonObj.get("referrerUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `referrerUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("referrerUri").toString()));
      }
      if ((jsonObj.get("uri") != null && !jsonObj.get("uri").isJsonNull()) && !jsonObj.get("uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uri").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRecommendationengineV1beta1EventDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRecommendationengineV1beta1EventDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRecommendationengineV1beta1EventDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRecommendationengineV1beta1EventDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRecommendationengineV1beta1EventDetail>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRecommendationengineV1beta1EventDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRecommendationengineV1beta1EventDetail read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRecommendationengineV1beta1EventDetail given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRecommendationengineV1beta1EventDetail
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRecommendationengineV1beta1EventDetail
   */
  public static GoogleCloudRecommendationengineV1beta1EventDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRecommendationengineV1beta1EventDetail.class);
  }

  /**
   * Convert an instance of GoogleCloudRecommendationengineV1beta1EventDetail to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

