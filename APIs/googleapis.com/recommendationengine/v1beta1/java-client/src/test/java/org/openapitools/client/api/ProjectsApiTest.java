/*
 * Recommendations AI (Beta)
 * Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GoogleApiHttpBody;
import org.openapitools.client.model.GoogleCloudRecommendationengineV1beta1CatalogItem;
import org.openapitools.client.model.GoogleCloudRecommendationengineV1beta1CreatePredictionApiKeyRegistrationRequest;
import org.openapitools.client.model.GoogleCloudRecommendationengineV1beta1ImportCatalogItemsRequest;
import org.openapitools.client.model.GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest;
import org.openapitools.client.model.GoogleCloudRecommendationengineV1beta1ListCatalogItemsResponse;
import org.openapitools.client.model.GoogleCloudRecommendationengineV1beta1ListCatalogsResponse;
import org.openapitools.client.model.GoogleCloudRecommendationengineV1beta1ListPredictionApiKeyRegistrationsResponse;
import org.openapitools.client.model.GoogleCloudRecommendationengineV1beta1ListUserEventsResponse;
import org.openapitools.client.model.GoogleCloudRecommendationengineV1beta1PredictRequest;
import org.openapitools.client.model.GoogleCloudRecommendationengineV1beta1PredictResponse;
import org.openapitools.client.model.GoogleCloudRecommendationengineV1beta1PredictionApiKeyRegistration;
import org.openapitools.client.model.GoogleCloudRecommendationengineV1beta1PurgeUserEventsRequest;
import org.openapitools.client.model.GoogleCloudRecommendationengineV1beta1RejoinUserEventsRequest;
import org.openapitools.client.model.GoogleCloudRecommendationengineV1beta1UserEvent;
import org.openapitools.client.model.GoogleLongrunningListOperationsResponse;
import org.openapitools.client.model.GoogleLongrunningOperation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectsApi
 */
@Disabled
public class ProjectsApiTest {

    private final ProjectsApi api = new ProjectsApi();

    /**
     * Creates a catalog item.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recommendationengineProjectsLocationsCatalogsCatalogItemsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudRecommendationengineV1beta1CatalogItem googleCloudRecommendationengineV1beta1CatalogItem = null;
        GoogleCloudRecommendationengineV1beta1CatalogItem response = api.recommendationengineProjectsLocationsCatalogsCatalogItemsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudRecommendationengineV1beta1CatalogItem);
        // TODO: test validations
    }

    /**
     * Bulk import of multiple catalog items. Request processing may be synchronous. No partial updating supported. Non-existing items will be created. Operation.response is of type ImportResponse. Note that it is possible for a subset of the items to be successfully updated.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recommendationengineProjectsLocationsCatalogsCatalogItemsImportTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudRecommendationengineV1beta1ImportCatalogItemsRequest googleCloudRecommendationengineV1beta1ImportCatalogItemsRequest = null;
        GoogleLongrunningOperation response = api.recommendationengineProjectsLocationsCatalogsCatalogItemsImport(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudRecommendationengineV1beta1ImportCatalogItemsRequest);
        // TODO: test validations
    }

    /**
     * Gets a list of catalog items.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recommendationengineProjectsLocationsCatalogsCatalogItemsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudRecommendationengineV1beta1ListCatalogItemsResponse response = api.recommendationengineProjectsLocationsCatalogsCatalogItemsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Updates a catalog item. Partial updating is supported. Non-existing items will be created.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recommendationengineProjectsLocationsCatalogsCatalogItemsPatchTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String updateMask = null;
        GoogleCloudRecommendationengineV1beta1CatalogItem googleCloudRecommendationengineV1beta1CatalogItem = null;
        GoogleCloudRecommendationengineV1beta1CatalogItem response = api.recommendationengineProjectsLocationsCatalogsCatalogItemsPatch(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, updateMask, googleCloudRecommendationengineV1beta1CatalogItem);
        // TODO: test validations
    }

    /**
     * Makes a recommendation prediction. If using API Key based authentication, the API Key must be registered using the PredictionApiKeyRegistry service. [Learn more](https://cloud.google.com/recommendations-ai/docs/setting-up#register-key).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recommendationengineProjectsLocationsCatalogsEventStoresPlacementsPredictTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudRecommendationengineV1beta1PredictRequest googleCloudRecommendationengineV1beta1PredictRequest = null;
        GoogleCloudRecommendationengineV1beta1PredictResponse response = api.recommendationengineProjectsLocationsCatalogsEventStoresPlacementsPredict(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudRecommendationengineV1beta1PredictRequest);
        // TODO: test validations
    }

    /**
     * Register an API key for use with predict method.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recommendationengineProjectsLocationsCatalogsEventStoresPredictionApiKeyRegistrationsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudRecommendationengineV1beta1CreatePredictionApiKeyRegistrationRequest googleCloudRecommendationengineV1beta1CreatePredictionApiKeyRegistrationRequest = null;
        GoogleCloudRecommendationengineV1beta1PredictionApiKeyRegistration response = api.recommendationengineProjectsLocationsCatalogsEventStoresPredictionApiKeyRegistrationsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudRecommendationengineV1beta1CreatePredictionApiKeyRegistrationRequest);
        // TODO: test validations
    }

    /**
     * Unregister an apiKey from using for predict method.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recommendationengineProjectsLocationsCatalogsEventStoresPredictionApiKeyRegistrationsDeleteTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object response = api.recommendationengineProjectsLocationsCatalogsEventStoresPredictionApiKeyRegistrationsDelete(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * List the registered apiKeys for use with predict method.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recommendationengineProjectsLocationsCatalogsEventStoresPredictionApiKeyRegistrationsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudRecommendationengineV1beta1ListPredictionApiKeyRegistrationsResponse response = api.recommendationengineProjectsLocationsCatalogsEventStoresPredictionApiKeyRegistrationsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Writes a single user event from the browser. This uses a GET request to due to browser restriction of POST-ing to a 3rd party domain. This method is used only by the Recommendations AI JavaScript pixel. Users should not call this method directly.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recommendationengineProjectsLocationsCatalogsEventStoresUserEventsCollectTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String ets = null;
        String uri = null;
        String userEvent = null;
        GoogleApiHttpBody response = api.recommendationengineProjectsLocationsCatalogsEventStoresUserEventsCollect(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, ets, uri, userEvent);
        // TODO: test validations
    }

    /**
     * Bulk import of User events. Request processing might be synchronous. Events that already exist are skipped. Use this method for backfilling historical user events. Operation.response is of type ImportResponse. Note that it is possible for a subset of the items to be successfully inserted. Operation.metadata is of type ImportMetadata.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recommendationengineProjectsLocationsCatalogsEventStoresUserEventsImportTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest googleCloudRecommendationengineV1beta1ImportUserEventsRequest = null;
        GoogleLongrunningOperation response = api.recommendationengineProjectsLocationsCatalogsEventStoresUserEventsImport(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudRecommendationengineV1beta1ImportUserEventsRequest);
        // TODO: test validations
    }

    /**
     * Gets a list of user events within a time range, with potential filtering. The method does not list unjoined user events. Unjoined user event definition: when a user event is ingested from Recommendations AI User Event APIs, the catalog item included in the user event is connected with the current catalog. If a catalog item of the ingested event is not in the current catalog, it could lead to degraded model quality. This is called an unjoined event.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recommendationengineProjectsLocationsCatalogsEventStoresUserEventsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudRecommendationengineV1beta1ListUserEventsResponse response = api.recommendationengineProjectsLocationsCatalogsEventStoresUserEventsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Deletes permanently all user events specified by the filter provided. Depending on the number of events specified by the filter, this operation could take hours or days to complete. To test a filter, use the list command first.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recommendationengineProjectsLocationsCatalogsEventStoresUserEventsPurgeTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudRecommendationengineV1beta1PurgeUserEventsRequest googleCloudRecommendationengineV1beta1PurgeUserEventsRequest = null;
        GoogleLongrunningOperation response = api.recommendationengineProjectsLocationsCatalogsEventStoresUserEventsPurge(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudRecommendationengineV1beta1PurgeUserEventsRequest);
        // TODO: test validations
    }

    /**
     * Triggers a user event rejoin operation with latest catalog data. Events will not be annotated with detailed catalog information if catalog item is missing at the time the user event is ingested, and these events are stored as unjoined events with a limited usage on training and serving. This API can be used to trigger a &#39;join&#39; operation on specified events with latest version of catalog items. It can also be used to correct events joined with wrong catalog items.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recommendationengineProjectsLocationsCatalogsEventStoresUserEventsRejoinTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudRecommendationengineV1beta1RejoinUserEventsRequest googleCloudRecommendationengineV1beta1RejoinUserEventsRequest = null;
        GoogleLongrunningOperation response = api.recommendationengineProjectsLocationsCatalogsEventStoresUserEventsRejoin(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudRecommendationengineV1beta1RejoinUserEventsRequest);
        // TODO: test validations
    }

    /**
     * Writes a single user event.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recommendationengineProjectsLocationsCatalogsEventStoresUserEventsWriteTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudRecommendationengineV1beta1UserEvent googleCloudRecommendationengineV1beta1UserEvent = null;
        GoogleCloudRecommendationengineV1beta1UserEvent response = api.recommendationengineProjectsLocationsCatalogsEventStoresUserEventsWrite(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudRecommendationengineV1beta1UserEvent);
        // TODO: test validations
    }

    /**
     * Lists all the catalog configurations associated with the project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recommendationengineProjectsLocationsCatalogsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudRecommendationengineV1beta1ListCatalogsResponse response = api.recommendationengineProjectsLocationsCatalogsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recommendationengineProjectsLocationsCatalogsOperationsGetTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleLongrunningOperation response = api.recommendationengineProjectsLocationsCatalogsOperationsGet(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Lists operations that match the specified filter in the request. If the server doesn&#39;t support this method, it returns &#x60;UNIMPLEMENTED&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recommendationengineProjectsLocationsCatalogsOperationsListTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleLongrunningListOperationsResponse response = api.recommendationengineProjectsLocationsCatalogsOperationsList(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

}
