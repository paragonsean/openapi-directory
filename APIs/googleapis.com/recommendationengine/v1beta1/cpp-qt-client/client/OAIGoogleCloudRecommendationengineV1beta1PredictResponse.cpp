/**
 * Recommendations AI (Beta)
 * Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRecommendationengineV1beta1PredictResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRecommendationengineV1beta1PredictResponse::OAIGoogleCloudRecommendationengineV1beta1PredictResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRecommendationengineV1beta1PredictResponse::OAIGoogleCloudRecommendationengineV1beta1PredictResponse() {
    this->initializeModel();
}

OAIGoogleCloudRecommendationengineV1beta1PredictResponse::~OAIGoogleCloudRecommendationengineV1beta1PredictResponse() {}

void OAIGoogleCloudRecommendationengineV1beta1PredictResponse::initializeModel() {

    m_dry_run_isSet = false;
    m_dry_run_isValid = false;

    m_items_missing_in_catalog_isSet = false;
    m_items_missing_in_catalog_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;

    m_recommendation_token_isSet = false;
    m_recommendation_token_isValid = false;

    m_results_isSet = false;
    m_results_isValid = false;
}

void OAIGoogleCloudRecommendationengineV1beta1PredictResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRecommendationengineV1beta1PredictResponse::fromJsonObject(QJsonObject json) {

    m_dry_run_isValid = ::OpenAPI::fromJsonValue(m_dry_run, json[QString("dryRun")]);
    m_dry_run_isSet = !json[QString("dryRun")].isNull() && m_dry_run_isValid;

    m_items_missing_in_catalog_isValid = ::OpenAPI::fromJsonValue(m_items_missing_in_catalog, json[QString("itemsMissingInCatalog")]);
    m_items_missing_in_catalog_isSet = !json[QString("itemsMissingInCatalog")].isNull() && m_items_missing_in_catalog_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;

    m_recommendation_token_isValid = ::OpenAPI::fromJsonValue(m_recommendation_token, json[QString("recommendationToken")]);
    m_recommendation_token_isSet = !json[QString("recommendationToken")].isNull() && m_recommendation_token_isValid;

    m_results_isValid = ::OpenAPI::fromJsonValue(m_results, json[QString("results")]);
    m_results_isSet = !json[QString("results")].isNull() && m_results_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1PredictResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRecommendationengineV1beta1PredictResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_dry_run_isSet) {
        obj.insert(QString("dryRun"), ::OpenAPI::toJsonValue(m_dry_run));
    }
    if (m_items_missing_in_catalog.size() > 0) {
        obj.insert(QString("itemsMissingInCatalog"), ::OpenAPI::toJsonValue(m_items_missing_in_catalog));
    }
    if (m_metadata.size() > 0) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    if (m_recommendation_token_isSet) {
        obj.insert(QString("recommendationToken"), ::OpenAPI::toJsonValue(m_recommendation_token));
    }
    if (m_results.size() > 0) {
        obj.insert(QString("results"), ::OpenAPI::toJsonValue(m_results));
    }
    return obj;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictResponse::isDryRun() const {
    return m_dry_run;
}
void OAIGoogleCloudRecommendationengineV1beta1PredictResponse::setDryRun(const bool &dry_run) {
    m_dry_run = dry_run;
    m_dry_run_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictResponse::is_dry_run_Set() const{
    return m_dry_run_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictResponse::is_dry_run_Valid() const{
    return m_dry_run_isValid;
}

QList<QString> OAIGoogleCloudRecommendationengineV1beta1PredictResponse::getItemsMissingInCatalog() const {
    return m_items_missing_in_catalog;
}
void OAIGoogleCloudRecommendationengineV1beta1PredictResponse::setItemsMissingInCatalog(const QList<QString> &items_missing_in_catalog) {
    m_items_missing_in_catalog = items_missing_in_catalog;
    m_items_missing_in_catalog_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictResponse::is_items_missing_in_catalog_Set() const{
    return m_items_missing_in_catalog_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictResponse::is_items_missing_in_catalog_Valid() const{
    return m_items_missing_in_catalog_isValid;
}

QMap<QString, QJsonValue> OAIGoogleCloudRecommendationengineV1beta1PredictResponse::getMetadata() const {
    return m_metadata;
}
void OAIGoogleCloudRecommendationengineV1beta1PredictResponse::setMetadata(const QMap<QString, QJsonValue> &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictResponse::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictResponse::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1PredictResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIGoogleCloudRecommendationengineV1beta1PredictResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1PredictResponse::getRecommendationToken() const {
    return m_recommendation_token;
}
void OAIGoogleCloudRecommendationengineV1beta1PredictResponse::setRecommendationToken(const QString &recommendation_token) {
    m_recommendation_token = recommendation_token;
    m_recommendation_token_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictResponse::is_recommendation_token_Set() const{
    return m_recommendation_token_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictResponse::is_recommendation_token_Valid() const{
    return m_recommendation_token_isValid;
}

QList<OAIGoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult> OAIGoogleCloudRecommendationengineV1beta1PredictResponse::getResults() const {
    return m_results;
}
void OAIGoogleCloudRecommendationengineV1beta1PredictResponse::setResults(const QList<OAIGoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult> &results) {
    m_results = results;
    m_results_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictResponse::is_results_Set() const{
    return m_results_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictResponse::is_results_Valid() const{
    return m_results_isValid;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dry_run_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_items_missing_in_catalog.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommendation_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_results.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
