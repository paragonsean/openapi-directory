/**
 * Recommendations AI (Beta)
 * Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRecommendationengineV1beta1ImportMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::OAIGoogleCloudRecommendationengineV1beta1ImportMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::OAIGoogleCloudRecommendationengineV1beta1ImportMetadata() {
    this->initializeModel();
}

OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::~OAIGoogleCloudRecommendationengineV1beta1ImportMetadata() {}

void OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_failure_count_isSet = false;
    m_failure_count_isValid = false;

    m_operation_name_isSet = false;
    m_operation_name_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;

    m_success_count_isSet = false;
    m_success_count_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_failure_count_isValid = ::OpenAPI::fromJsonValue(m_failure_count, json[QString("failureCount")]);
    m_failure_count_isSet = !json[QString("failureCount")].isNull() && m_failure_count_isValid;

    m_operation_name_isValid = ::OpenAPI::fromJsonValue(m_operation_name, json[QString("operationName")]);
    m_operation_name_isSet = !json[QString("operationName")].isNull() && m_operation_name_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("requestId")]);
    m_request_id_isSet = !json[QString("requestId")].isNull() && m_request_id_isValid;

    m_success_count_isValid = ::OpenAPI::fromJsonValue(m_success_count, json[QString("successCount")]);
    m_success_count_isSet = !json[QString("successCount")].isNull() && m_success_count_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_failure_count_isSet) {
        obj.insert(QString("failureCount"), ::OpenAPI::toJsonValue(m_failure_count));
    }
    if (m_operation_name_isSet) {
        obj.insert(QString("operationName"), ::OpenAPI::toJsonValue(m_operation_name));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("requestId"), ::OpenAPI::toJsonValue(m_request_id));
    }
    if (m_success_count_isSet) {
        obj.insert(QString("successCount"), ::OpenAPI::toJsonValue(m_success_count));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::getFailureCount() const {
    return m_failure_count;
}
void OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::setFailureCount(const QString &failure_count) {
    m_failure_count = failure_count;
    m_failure_count_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::is_failure_count_Set() const{
    return m_failure_count_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::is_failure_count_Valid() const{
    return m_failure_count_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::getOperationName() const {
    return m_operation_name;
}
void OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::setOperationName(const QString &operation_name) {
    m_operation_name = operation_name;
    m_operation_name_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::is_operation_name_Set() const{
    return m_operation_name_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::is_operation_name_Valid() const{
    return m_operation_name_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::getRequestId() const {
    return m_request_id;
}
void OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::is_request_id_Valid() const{
    return m_request_id_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::getSuccessCount() const {
    return m_success_count;
}
void OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::setSuccessCount(const QString &success_count) {
    m_success_count = success_count;
    m_success_count_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::is_success_count_Set() const{
    return m_success_count_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::is_success_count_Valid() const{
    return m_success_count_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_success_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRecommendationengineV1beta1ImportMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
