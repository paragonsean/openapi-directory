/**
 * Recommendations AI (Beta)
 * Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRecommendationengineV1beta1EventDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRecommendationengineV1beta1EventDetail::OAIGoogleCloudRecommendationengineV1beta1EventDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRecommendationengineV1beta1EventDetail::OAIGoogleCloudRecommendationengineV1beta1EventDetail() {
    this->initializeModel();
}

OAIGoogleCloudRecommendationengineV1beta1EventDetail::~OAIGoogleCloudRecommendationengineV1beta1EventDetail() {}

void OAIGoogleCloudRecommendationengineV1beta1EventDetail::initializeModel() {

    m_event_attributes_isSet = false;
    m_event_attributes_isValid = false;

    m_experiment_ids_isSet = false;
    m_experiment_ids_isValid = false;

    m_page_view_id_isSet = false;
    m_page_view_id_isValid = false;

    m_recommendation_token_isSet = false;
    m_recommendation_token_isValid = false;

    m_referrer_uri_isSet = false;
    m_referrer_uri_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;
}

void OAIGoogleCloudRecommendationengineV1beta1EventDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRecommendationengineV1beta1EventDetail::fromJsonObject(QJsonObject json) {

    m_event_attributes_isValid = ::OpenAPI::fromJsonValue(m_event_attributes, json[QString("eventAttributes")]);
    m_event_attributes_isSet = !json[QString("eventAttributes")].isNull() && m_event_attributes_isValid;

    m_experiment_ids_isValid = ::OpenAPI::fromJsonValue(m_experiment_ids, json[QString("experimentIds")]);
    m_experiment_ids_isSet = !json[QString("experimentIds")].isNull() && m_experiment_ids_isValid;

    m_page_view_id_isValid = ::OpenAPI::fromJsonValue(m_page_view_id, json[QString("pageViewId")]);
    m_page_view_id_isSet = !json[QString("pageViewId")].isNull() && m_page_view_id_isValid;

    m_recommendation_token_isValid = ::OpenAPI::fromJsonValue(m_recommendation_token, json[QString("recommendationToken")]);
    m_recommendation_token_isSet = !json[QString("recommendationToken")].isNull() && m_recommendation_token_isValid;

    m_referrer_uri_isValid = ::OpenAPI::fromJsonValue(m_referrer_uri, json[QString("referrerUri")]);
    m_referrer_uri_isSet = !json[QString("referrerUri")].isNull() && m_referrer_uri_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1EventDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRecommendationengineV1beta1EventDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_event_attributes.isSet()) {
        obj.insert(QString("eventAttributes"), ::OpenAPI::toJsonValue(m_event_attributes));
    }
    if (m_experiment_ids.size() > 0) {
        obj.insert(QString("experimentIds"), ::OpenAPI::toJsonValue(m_experiment_ids));
    }
    if (m_page_view_id_isSet) {
        obj.insert(QString("pageViewId"), ::OpenAPI::toJsonValue(m_page_view_id));
    }
    if (m_recommendation_token_isSet) {
        obj.insert(QString("recommendationToken"), ::OpenAPI::toJsonValue(m_recommendation_token));
    }
    if (m_referrer_uri_isSet) {
        obj.insert(QString("referrerUri"), ::OpenAPI::toJsonValue(m_referrer_uri));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    return obj;
}

OAIGoogleCloudRecommendationengineV1beta1FeatureMap OAIGoogleCloudRecommendationengineV1beta1EventDetail::getEventAttributes() const {
    return m_event_attributes;
}
void OAIGoogleCloudRecommendationengineV1beta1EventDetail::setEventAttributes(const OAIGoogleCloudRecommendationengineV1beta1FeatureMap &event_attributes) {
    m_event_attributes = event_attributes;
    m_event_attributes_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1EventDetail::is_event_attributes_Set() const{
    return m_event_attributes_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1EventDetail::is_event_attributes_Valid() const{
    return m_event_attributes_isValid;
}

QList<QString> OAIGoogleCloudRecommendationengineV1beta1EventDetail::getExperimentIds() const {
    return m_experiment_ids;
}
void OAIGoogleCloudRecommendationengineV1beta1EventDetail::setExperimentIds(const QList<QString> &experiment_ids) {
    m_experiment_ids = experiment_ids;
    m_experiment_ids_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1EventDetail::is_experiment_ids_Set() const{
    return m_experiment_ids_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1EventDetail::is_experiment_ids_Valid() const{
    return m_experiment_ids_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1EventDetail::getPageViewId() const {
    return m_page_view_id;
}
void OAIGoogleCloudRecommendationengineV1beta1EventDetail::setPageViewId(const QString &page_view_id) {
    m_page_view_id = page_view_id;
    m_page_view_id_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1EventDetail::is_page_view_id_Set() const{
    return m_page_view_id_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1EventDetail::is_page_view_id_Valid() const{
    return m_page_view_id_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1EventDetail::getRecommendationToken() const {
    return m_recommendation_token;
}
void OAIGoogleCloudRecommendationengineV1beta1EventDetail::setRecommendationToken(const QString &recommendation_token) {
    m_recommendation_token = recommendation_token;
    m_recommendation_token_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1EventDetail::is_recommendation_token_Set() const{
    return m_recommendation_token_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1EventDetail::is_recommendation_token_Valid() const{
    return m_recommendation_token_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1EventDetail::getReferrerUri() const {
    return m_referrer_uri;
}
void OAIGoogleCloudRecommendationengineV1beta1EventDetail::setReferrerUri(const QString &referrer_uri) {
    m_referrer_uri = referrer_uri;
    m_referrer_uri_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1EventDetail::is_referrer_uri_Set() const{
    return m_referrer_uri_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1EventDetail::is_referrer_uri_Valid() const{
    return m_referrer_uri_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1EventDetail::getUri() const {
    return m_uri;
}
void OAIGoogleCloudRecommendationengineV1beta1EventDetail::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1EventDetail::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1EventDetail::is_uri_Valid() const{
    return m_uri_isValid;
}

bool OAIGoogleCloudRecommendationengineV1beta1EventDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_event_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_experiment_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_view_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommendation_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_referrer_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRecommendationengineV1beta1EventDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
