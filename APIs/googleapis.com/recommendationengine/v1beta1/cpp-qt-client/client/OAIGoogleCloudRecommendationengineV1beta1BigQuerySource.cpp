/**
 * Recommendations AI (Beta)
 * Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRecommendationengineV1beta1BigQuerySource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::OAIGoogleCloudRecommendationengineV1beta1BigQuerySource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::OAIGoogleCloudRecommendationengineV1beta1BigQuerySource() {
    this->initializeModel();
}

OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::~OAIGoogleCloudRecommendationengineV1beta1BigQuerySource() {}

void OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::initializeModel() {

    m_data_schema_isSet = false;
    m_data_schema_isValid = false;

    m_dataset_id_isSet = false;
    m_dataset_id_isValid = false;

    m_gcs_staging_dir_isSet = false;
    m_gcs_staging_dir_isValid = false;

    m_project_id_isSet = false;
    m_project_id_isValid = false;

    m_table_id_isSet = false;
    m_table_id_isValid = false;
}

void OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::fromJsonObject(QJsonObject json) {

    m_data_schema_isValid = ::OpenAPI::fromJsonValue(m_data_schema, json[QString("dataSchema")]);
    m_data_schema_isSet = !json[QString("dataSchema")].isNull() && m_data_schema_isValid;

    m_dataset_id_isValid = ::OpenAPI::fromJsonValue(m_dataset_id, json[QString("datasetId")]);
    m_dataset_id_isSet = !json[QString("datasetId")].isNull() && m_dataset_id_isValid;

    m_gcs_staging_dir_isValid = ::OpenAPI::fromJsonValue(m_gcs_staging_dir, json[QString("gcsStagingDir")]);
    m_gcs_staging_dir_isSet = !json[QString("gcsStagingDir")].isNull() && m_gcs_staging_dir_isValid;

    m_project_id_isValid = ::OpenAPI::fromJsonValue(m_project_id, json[QString("projectId")]);
    m_project_id_isSet = !json[QString("projectId")].isNull() && m_project_id_isValid;

    m_table_id_isValid = ::OpenAPI::fromJsonValue(m_table_id, json[QString("tableId")]);
    m_table_id_isSet = !json[QString("tableId")].isNull() && m_table_id_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::asJsonObject() const {
    QJsonObject obj;
    if (m_data_schema_isSet) {
        obj.insert(QString("dataSchema"), ::OpenAPI::toJsonValue(m_data_schema));
    }
    if (m_dataset_id_isSet) {
        obj.insert(QString("datasetId"), ::OpenAPI::toJsonValue(m_dataset_id));
    }
    if (m_gcs_staging_dir_isSet) {
        obj.insert(QString("gcsStagingDir"), ::OpenAPI::toJsonValue(m_gcs_staging_dir));
    }
    if (m_project_id_isSet) {
        obj.insert(QString("projectId"), ::OpenAPI::toJsonValue(m_project_id));
    }
    if (m_table_id_isSet) {
        obj.insert(QString("tableId"), ::OpenAPI::toJsonValue(m_table_id));
    }
    return obj;
}

QString OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::getDataSchema() const {
    return m_data_schema;
}
void OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::setDataSchema(const QString &data_schema) {
    m_data_schema = data_schema;
    m_data_schema_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::is_data_schema_Set() const{
    return m_data_schema_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::is_data_schema_Valid() const{
    return m_data_schema_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::getDatasetId() const {
    return m_dataset_id;
}
void OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::setDatasetId(const QString &dataset_id) {
    m_dataset_id = dataset_id;
    m_dataset_id_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::is_dataset_id_Set() const{
    return m_dataset_id_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::is_dataset_id_Valid() const{
    return m_dataset_id_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::getGcsStagingDir() const {
    return m_gcs_staging_dir;
}
void OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::setGcsStagingDir(const QString &gcs_staging_dir) {
    m_gcs_staging_dir = gcs_staging_dir;
    m_gcs_staging_dir_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::is_gcs_staging_dir_Set() const{
    return m_gcs_staging_dir_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::is_gcs_staging_dir_Valid() const{
    return m_gcs_staging_dir_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::getProjectId() const {
    return m_project_id;
}
void OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::setProjectId(const QString &project_id) {
    m_project_id = project_id;
    m_project_id_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::is_project_id_Set() const{
    return m_project_id_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::is_project_id_Valid() const{
    return m_project_id_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::getTableId() const {
    return m_table_id;
}
void OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::setTableId(const QString &table_id) {
    m_table_id = table_id;
    m_table_id_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::is_table_id_Set() const{
    return m_table_id_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::is_table_id_Valid() const{
    return m_table_id_isValid;
}

bool OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_schema_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dataset_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gcs_staging_dir_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_table_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRecommendationengineV1beta1BigQuerySource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
