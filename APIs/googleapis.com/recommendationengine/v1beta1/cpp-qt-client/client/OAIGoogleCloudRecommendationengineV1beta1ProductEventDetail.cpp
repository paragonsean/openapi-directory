/**
 * Recommendations AI (Beta)
 * Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail() {
    this->initializeModel();
}

OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::~OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail() {}

void OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::initializeModel() {

    m_cart_id_isSet = false;
    m_cart_id_isValid = false;

    m_list_id_isSet = false;
    m_list_id_isValid = false;

    m_page_categories_isSet = false;
    m_page_categories_isValid = false;

    m_product_details_isSet = false;
    m_product_details_isValid = false;

    m_purchase_transaction_isSet = false;
    m_purchase_transaction_isValid = false;

    m_search_query_isSet = false;
    m_search_query_isValid = false;
}

void OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::fromJsonObject(QJsonObject json) {

    m_cart_id_isValid = ::OpenAPI::fromJsonValue(m_cart_id, json[QString("cartId")]);
    m_cart_id_isSet = !json[QString("cartId")].isNull() && m_cart_id_isValid;

    m_list_id_isValid = ::OpenAPI::fromJsonValue(m_list_id, json[QString("listId")]);
    m_list_id_isSet = !json[QString("listId")].isNull() && m_list_id_isValid;

    m_page_categories_isValid = ::OpenAPI::fromJsonValue(m_page_categories, json[QString("pageCategories")]);
    m_page_categories_isSet = !json[QString("pageCategories")].isNull() && m_page_categories_isValid;

    m_product_details_isValid = ::OpenAPI::fromJsonValue(m_product_details, json[QString("productDetails")]);
    m_product_details_isSet = !json[QString("productDetails")].isNull() && m_product_details_isValid;

    m_purchase_transaction_isValid = ::OpenAPI::fromJsonValue(m_purchase_transaction, json[QString("purchaseTransaction")]);
    m_purchase_transaction_isSet = !json[QString("purchaseTransaction")].isNull() && m_purchase_transaction_isValid;

    m_search_query_isValid = ::OpenAPI::fromJsonValue(m_search_query, json[QString("searchQuery")]);
    m_search_query_isSet = !json[QString("searchQuery")].isNull() && m_search_query_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_cart_id_isSet) {
        obj.insert(QString("cartId"), ::OpenAPI::toJsonValue(m_cart_id));
    }
    if (m_list_id_isSet) {
        obj.insert(QString("listId"), ::OpenAPI::toJsonValue(m_list_id));
    }
    if (m_page_categories.size() > 0) {
        obj.insert(QString("pageCategories"), ::OpenAPI::toJsonValue(m_page_categories));
    }
    if (m_product_details.size() > 0) {
        obj.insert(QString("productDetails"), ::OpenAPI::toJsonValue(m_product_details));
    }
    if (m_purchase_transaction.isSet()) {
        obj.insert(QString("purchaseTransaction"), ::OpenAPI::toJsonValue(m_purchase_transaction));
    }
    if (m_search_query_isSet) {
        obj.insert(QString("searchQuery"), ::OpenAPI::toJsonValue(m_search_query));
    }
    return obj;
}

QString OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::getCartId() const {
    return m_cart_id;
}
void OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::setCartId(const QString &cart_id) {
    m_cart_id = cart_id;
    m_cart_id_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::is_cart_id_Set() const{
    return m_cart_id_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::is_cart_id_Valid() const{
    return m_cart_id_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::getListId() const {
    return m_list_id;
}
void OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::setListId(const QString &list_id) {
    m_list_id = list_id;
    m_list_id_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::is_list_id_Set() const{
    return m_list_id_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::is_list_id_Valid() const{
    return m_list_id_isValid;
}

QList<OAIGoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy> OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::getPageCategories() const {
    return m_page_categories;
}
void OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::setPageCategories(const QList<OAIGoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy> &page_categories) {
    m_page_categories = page_categories;
    m_page_categories_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::is_page_categories_Set() const{
    return m_page_categories_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::is_page_categories_Valid() const{
    return m_page_categories_isValid;
}

QList<OAIGoogleCloudRecommendationengineV1beta1ProductDetail> OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::getProductDetails() const {
    return m_product_details;
}
void OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::setProductDetails(const QList<OAIGoogleCloudRecommendationengineV1beta1ProductDetail> &product_details) {
    m_product_details = product_details;
    m_product_details_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::is_product_details_Set() const{
    return m_product_details_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::is_product_details_Valid() const{
    return m_product_details_isValid;
}

OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::getPurchaseTransaction() const {
    return m_purchase_transaction;
}
void OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::setPurchaseTransaction(const OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction &purchase_transaction) {
    m_purchase_transaction = purchase_transaction;
    m_purchase_transaction_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::is_purchase_transaction_Set() const{
    return m_purchase_transaction_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::is_purchase_transaction_Valid() const{
    return m_purchase_transaction_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::getSearchQuery() const {
    return m_search_query;
}
void OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::setSearchQuery(const QString &search_query) {
    m_search_query = search_query;
    m_search_query_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::is_search_query_Set() const{
    return m_search_query_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::is_search_query_Valid() const{
    return m_search_query_isValid;
}

bool OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cart_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_categories.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_details.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_purchase_transaction.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_query_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRecommendationengineV1beta1ProductEventDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
