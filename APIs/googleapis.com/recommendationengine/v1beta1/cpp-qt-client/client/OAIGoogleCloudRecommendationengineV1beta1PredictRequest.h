/**
 * Recommendations AI (Beta)
 * Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudRecommendationengineV1beta1PredictRequest.h
 *
 * Request message for Predict method. Full resource name of the format: &#x60;{name&#x3D;projects/_*_/locations/global/catalogs/default_catalog/eventStores/default_event_store/placements/_*}&#x60; The id of the recommendation engine placement. This id is used to identify the set of models that will be used to make the prediction. We currently support three placements with the following IDs by default: // * &#x60;shopping_cart&#x60;: Predicts items frequently bought together with one or more catalog items in the same shopping session. Commonly displayed after &#x60;add-to-cart&#x60; event, on product detail pages, or on the shopping cart page. * &#x60;home_page&#x60;: Predicts the next product that a user will most likely engage with or purchase based on the shopping or viewing history of the specified &#x60;userId&#x60; or &#x60;visitorId&#x60;. For example - Recommendations for you. * &#x60;product_detail&#x60;: Predicts the next product that a user will most likely engage with or purchase. The prediction is based on the shopping or viewing history of the specified &#x60;userId&#x60; or &#x60;visitorId&#x60; and its relevance to a specified &#x60;CatalogItem&#x60;. Typically used on product detail pages. For example - More items like this. * &#x60;recently_viewed_default&#x60;: Returns up to 75 items recently viewed by the specified &#x60;userId&#x60; or &#x60;visitorId&#x60;, most recent ones first. Returns nothing if neither of them has viewed any items yet. For example - Recently viewed. The full list of available placements can be seen at https://console.cloud.google.com/recommendation/catalogs/default_catalog/placements
 */

#ifndef OAIGoogleCloudRecommendationengineV1beta1PredictRequest_H
#define OAIGoogleCloudRecommendationengineV1beta1PredictRequest_H

#include <QJsonObject>

#include "OAIGoogleCloudRecommendationengineV1beta1UserEvent.h"
#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudRecommendationengineV1beta1UserEvent;

class OAIGoogleCloudRecommendationengineV1beta1PredictRequest : public OAIObject {
public:
    OAIGoogleCloudRecommendationengineV1beta1PredictRequest();
    OAIGoogleCloudRecommendationengineV1beta1PredictRequest(QString json);
    ~OAIGoogleCloudRecommendationengineV1beta1PredictRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDryRun() const;
    void setDryRun(const bool &dry_run);
    bool is_dry_run_Set() const;
    bool is_dry_run_Valid() const;

    QString getFilter() const;
    void setFilter(const QString &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    qint32 getPageSize() const;
    void setPageSize(const qint32 &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    QString getPageToken() const;
    void setPageToken(const QString &page_token);
    bool is_page_token_Set() const;
    bool is_page_token_Valid() const;

    QMap<QString, QJsonValue> getParams() const;
    void setParams(const QMap<QString, QJsonValue> &params);
    bool is_params_Set() const;
    bool is_params_Valid() const;

    OAIGoogleCloudRecommendationengineV1beta1UserEvent getUserEvent() const;
    void setUserEvent(const OAIGoogleCloudRecommendationengineV1beta1UserEvent &user_event);
    bool is_user_event_Set() const;
    bool is_user_event_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_dry_run;
    bool m_dry_run_isSet;
    bool m_dry_run_isValid;

    QString m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    qint32 m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;

    QString m_page_token;
    bool m_page_token_isSet;
    bool m_page_token_isValid;

    QMap<QString, QJsonValue> m_params;
    bool m_params_isSet;
    bool m_params_isValid;

    OAIGoogleCloudRecommendationengineV1beta1UserEvent m_user_event;
    bool m_user_event_isSet;
    bool m_user_event_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudRecommendationengineV1beta1PredictRequest)

#endif // OAIGoogleCloudRecommendationengineV1beta1PredictRequest_H
