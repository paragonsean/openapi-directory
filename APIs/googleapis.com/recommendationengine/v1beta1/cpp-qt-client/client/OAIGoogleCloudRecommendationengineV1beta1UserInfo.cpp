/**
 * Recommendations AI (Beta)
 * Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRecommendationengineV1beta1UserInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRecommendationengineV1beta1UserInfo::OAIGoogleCloudRecommendationengineV1beta1UserInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRecommendationengineV1beta1UserInfo::OAIGoogleCloudRecommendationengineV1beta1UserInfo() {
    this->initializeModel();
}

OAIGoogleCloudRecommendationengineV1beta1UserInfo::~OAIGoogleCloudRecommendationengineV1beta1UserInfo() {}

void OAIGoogleCloudRecommendationengineV1beta1UserInfo::initializeModel() {

    m_direct_user_request_isSet = false;
    m_direct_user_request_isValid = false;

    m_ip_address_isSet = false;
    m_ip_address_isValid = false;

    m_user_agent_isSet = false;
    m_user_agent_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;

    m_visitor_id_isSet = false;
    m_visitor_id_isValid = false;
}

void OAIGoogleCloudRecommendationengineV1beta1UserInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRecommendationengineV1beta1UserInfo::fromJsonObject(QJsonObject json) {

    m_direct_user_request_isValid = ::OpenAPI::fromJsonValue(m_direct_user_request, json[QString("directUserRequest")]);
    m_direct_user_request_isSet = !json[QString("directUserRequest")].isNull() && m_direct_user_request_isValid;

    m_ip_address_isValid = ::OpenAPI::fromJsonValue(m_ip_address, json[QString("ipAddress")]);
    m_ip_address_isSet = !json[QString("ipAddress")].isNull() && m_ip_address_isValid;

    m_user_agent_isValid = ::OpenAPI::fromJsonValue(m_user_agent, json[QString("userAgent")]);
    m_user_agent_isSet = !json[QString("userAgent")].isNull() && m_user_agent_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("userId")]);
    m_user_id_isSet = !json[QString("userId")].isNull() && m_user_id_isValid;

    m_visitor_id_isValid = ::OpenAPI::fromJsonValue(m_visitor_id, json[QString("visitorId")]);
    m_visitor_id_isSet = !json[QString("visitorId")].isNull() && m_visitor_id_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1UserInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRecommendationengineV1beta1UserInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_direct_user_request_isSet) {
        obj.insert(QString("directUserRequest"), ::OpenAPI::toJsonValue(m_direct_user_request));
    }
    if (m_ip_address_isSet) {
        obj.insert(QString("ipAddress"), ::OpenAPI::toJsonValue(m_ip_address));
    }
    if (m_user_agent_isSet) {
        obj.insert(QString("userAgent"), ::OpenAPI::toJsonValue(m_user_agent));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("userId"), ::OpenAPI::toJsonValue(m_user_id));
    }
    if (m_visitor_id_isSet) {
        obj.insert(QString("visitorId"), ::OpenAPI::toJsonValue(m_visitor_id));
    }
    return obj;
}

bool OAIGoogleCloudRecommendationengineV1beta1UserInfo::isDirectUserRequest() const {
    return m_direct_user_request;
}
void OAIGoogleCloudRecommendationengineV1beta1UserInfo::setDirectUserRequest(const bool &direct_user_request) {
    m_direct_user_request = direct_user_request;
    m_direct_user_request_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1UserInfo::is_direct_user_request_Set() const{
    return m_direct_user_request_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1UserInfo::is_direct_user_request_Valid() const{
    return m_direct_user_request_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1UserInfo::getIpAddress() const {
    return m_ip_address;
}
void OAIGoogleCloudRecommendationengineV1beta1UserInfo::setIpAddress(const QString &ip_address) {
    m_ip_address = ip_address;
    m_ip_address_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1UserInfo::is_ip_address_Set() const{
    return m_ip_address_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1UserInfo::is_ip_address_Valid() const{
    return m_ip_address_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1UserInfo::getUserAgent() const {
    return m_user_agent;
}
void OAIGoogleCloudRecommendationengineV1beta1UserInfo::setUserAgent(const QString &user_agent) {
    m_user_agent = user_agent;
    m_user_agent_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1UserInfo::is_user_agent_Set() const{
    return m_user_agent_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1UserInfo::is_user_agent_Valid() const{
    return m_user_agent_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1UserInfo::getUserId() const {
    return m_user_id;
}
void OAIGoogleCloudRecommendationengineV1beta1UserInfo::setUserId(const QString &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1UserInfo::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1UserInfo::is_user_id_Valid() const{
    return m_user_id_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1UserInfo::getVisitorId() const {
    return m_visitor_id;
}
void OAIGoogleCloudRecommendationengineV1beta1UserInfo::setVisitorId(const QString &visitor_id) {
    m_visitor_id = visitor_id;
    m_visitor_id_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1UserInfo::is_visitor_id_Set() const{
    return m_visitor_id_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1UserInfo::is_visitor_id_Valid() const{
    return m_visitor_id_isValid;
}

bool OAIGoogleCloudRecommendationengineV1beta1UserInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_direct_user_request_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ip_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_agent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_visitor_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRecommendationengineV1beta1UserInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
