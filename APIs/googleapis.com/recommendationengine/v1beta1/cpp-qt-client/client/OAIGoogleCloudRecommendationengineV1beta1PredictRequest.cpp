/**
 * Recommendations AI (Beta)
 * Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRecommendationengineV1beta1PredictRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRecommendationengineV1beta1PredictRequest::OAIGoogleCloudRecommendationengineV1beta1PredictRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRecommendationengineV1beta1PredictRequest::OAIGoogleCloudRecommendationengineV1beta1PredictRequest() {
    this->initializeModel();
}

OAIGoogleCloudRecommendationengineV1beta1PredictRequest::~OAIGoogleCloudRecommendationengineV1beta1PredictRequest() {}

void OAIGoogleCloudRecommendationengineV1beta1PredictRequest::initializeModel() {

    m_dry_run_isSet = false;
    m_dry_run_isValid = false;

    m_filter_isSet = false;
    m_filter_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_page_size_isSet = false;
    m_page_size_isValid = false;

    m_page_token_isSet = false;
    m_page_token_isValid = false;

    m_params_isSet = false;
    m_params_isValid = false;

    m_user_event_isSet = false;
    m_user_event_isValid = false;
}

void OAIGoogleCloudRecommendationengineV1beta1PredictRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRecommendationengineV1beta1PredictRequest::fromJsonObject(QJsonObject json) {

    m_dry_run_isValid = ::OpenAPI::fromJsonValue(m_dry_run, json[QString("dryRun")]);
    m_dry_run_isSet = !json[QString("dryRun")].isNull() && m_dry_run_isValid;

    m_filter_isValid = ::OpenAPI::fromJsonValue(m_filter, json[QString("filter")]);
    m_filter_isSet = !json[QString("filter")].isNull() && m_filter_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_page_size_isValid = ::OpenAPI::fromJsonValue(m_page_size, json[QString("pageSize")]);
    m_page_size_isSet = !json[QString("pageSize")].isNull() && m_page_size_isValid;

    m_page_token_isValid = ::OpenAPI::fromJsonValue(m_page_token, json[QString("pageToken")]);
    m_page_token_isSet = !json[QString("pageToken")].isNull() && m_page_token_isValid;

    m_params_isValid = ::OpenAPI::fromJsonValue(m_params, json[QString("params")]);
    m_params_isSet = !json[QString("params")].isNull() && m_params_isValid;

    m_user_event_isValid = ::OpenAPI::fromJsonValue(m_user_event, json[QString("userEvent")]);
    m_user_event_isSet = !json[QString("userEvent")].isNull() && m_user_event_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1PredictRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRecommendationengineV1beta1PredictRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_dry_run_isSet) {
        obj.insert(QString("dryRun"), ::OpenAPI::toJsonValue(m_dry_run));
    }
    if (m_filter_isSet) {
        obj.insert(QString("filter"), ::OpenAPI::toJsonValue(m_filter));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_page_size_isSet) {
        obj.insert(QString("pageSize"), ::OpenAPI::toJsonValue(m_page_size));
    }
    if (m_page_token_isSet) {
        obj.insert(QString("pageToken"), ::OpenAPI::toJsonValue(m_page_token));
    }
    if (m_params.size() > 0) {
        obj.insert(QString("params"), ::OpenAPI::toJsonValue(m_params));
    }
    if (m_user_event.isSet()) {
        obj.insert(QString("userEvent"), ::OpenAPI::toJsonValue(m_user_event));
    }
    return obj;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictRequest::isDryRun() const {
    return m_dry_run;
}
void OAIGoogleCloudRecommendationengineV1beta1PredictRequest::setDryRun(const bool &dry_run) {
    m_dry_run = dry_run;
    m_dry_run_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictRequest::is_dry_run_Set() const{
    return m_dry_run_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictRequest::is_dry_run_Valid() const{
    return m_dry_run_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1PredictRequest::getFilter() const {
    return m_filter;
}
void OAIGoogleCloudRecommendationengineV1beta1PredictRequest::setFilter(const QString &filter) {
    m_filter = filter;
    m_filter_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictRequest::is_filter_Set() const{
    return m_filter_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictRequest::is_filter_Valid() const{
    return m_filter_isValid;
}

QMap<QString, QString> OAIGoogleCloudRecommendationengineV1beta1PredictRequest::getLabels() const {
    return m_labels;
}
void OAIGoogleCloudRecommendationengineV1beta1PredictRequest::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictRequest::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictRequest::is_labels_Valid() const{
    return m_labels_isValid;
}

qint32 OAIGoogleCloudRecommendationengineV1beta1PredictRequest::getPageSize() const {
    return m_page_size;
}
void OAIGoogleCloudRecommendationengineV1beta1PredictRequest::setPageSize(const qint32 &page_size) {
    m_page_size = page_size;
    m_page_size_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictRequest::is_page_size_Set() const{
    return m_page_size_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictRequest::is_page_size_Valid() const{
    return m_page_size_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1PredictRequest::getPageToken() const {
    return m_page_token;
}
void OAIGoogleCloudRecommendationengineV1beta1PredictRequest::setPageToken(const QString &page_token) {
    m_page_token = page_token;
    m_page_token_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictRequest::is_page_token_Set() const{
    return m_page_token_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictRequest::is_page_token_Valid() const{
    return m_page_token_isValid;
}

QMap<QString, QJsonValue> OAIGoogleCloudRecommendationengineV1beta1PredictRequest::getParams() const {
    return m_params;
}
void OAIGoogleCloudRecommendationengineV1beta1PredictRequest::setParams(const QMap<QString, QJsonValue> &params) {
    m_params = params;
    m_params_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictRequest::is_params_Set() const{
    return m_params_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictRequest::is_params_Valid() const{
    return m_params_isValid;
}

OAIGoogleCloudRecommendationengineV1beta1UserEvent OAIGoogleCloudRecommendationengineV1beta1PredictRequest::getUserEvent() const {
    return m_user_event;
}
void OAIGoogleCloudRecommendationengineV1beta1PredictRequest::setUserEvent(const OAIGoogleCloudRecommendationengineV1beta1UserEvent &user_event) {
    m_user_event = user_event;
    m_user_event_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictRequest::is_user_event_Set() const{
    return m_user_event_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictRequest::is_user_event_Valid() const{
    return m_user_event_isValid;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dry_run_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_filter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_params.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_event.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRecommendationengineV1beta1PredictRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
