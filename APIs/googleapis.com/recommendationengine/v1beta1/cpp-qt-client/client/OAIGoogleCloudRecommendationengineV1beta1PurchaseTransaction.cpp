/**
 * Recommendations AI (Beta)
 * Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction() {
    this->initializeModel();
}

OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::~OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction() {}

void OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::initializeModel() {

    m_costs_isSet = false;
    m_costs_isValid = false;

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_revenue_isSet = false;
    m_revenue_isValid = false;

    m_taxes_isSet = false;
    m_taxes_isValid = false;
}

void OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::fromJsonObject(QJsonObject json) {

    m_costs_isValid = ::OpenAPI::fromJsonValue(m_costs, json[QString("costs")]);
    m_costs_isSet = !json[QString("costs")].isNull() && m_costs_isValid;

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("currencyCode")]);
    m_currency_code_isSet = !json[QString("currencyCode")].isNull() && m_currency_code_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_revenue_isValid = ::OpenAPI::fromJsonValue(m_revenue, json[QString("revenue")]);
    m_revenue_isSet = !json[QString("revenue")].isNull() && m_revenue_isValid;

    m_taxes_isValid = ::OpenAPI::fromJsonValue(m_taxes, json[QString("taxes")]);
    m_taxes_isSet = !json[QString("taxes")].isNull() && m_taxes_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::asJsonObject() const {
    QJsonObject obj;
    if (m_costs.size() > 0) {
        obj.insert(QString("costs"), ::OpenAPI::toJsonValue(m_costs));
    }
    if (m_currency_code_isSet) {
        obj.insert(QString("currencyCode"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_revenue_isSet) {
        obj.insert(QString("revenue"), ::OpenAPI::toJsonValue(m_revenue));
    }
    if (m_taxes.size() > 0) {
        obj.insert(QString("taxes"), ::OpenAPI::toJsonValue(m_taxes));
    }
    return obj;
}

QMap<QString, float> OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::getCosts() const {
    return m_costs;
}
void OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::setCosts(const QMap<QString, float> &costs) {
    m_costs = costs;
    m_costs_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::is_costs_Set() const{
    return m_costs_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::is_costs_Valid() const{
    return m_costs_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::getCurrencyCode() const {
    return m_currency_code;
}
void OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::setCurrencyCode(const QString &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::getId() const {
    return m_id;
}
void OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::is_id_Valid() const{
    return m_id_isValid;
}

float OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::getRevenue() const {
    return m_revenue;
}
void OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::setRevenue(const float &revenue) {
    m_revenue = revenue;
    m_revenue_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::is_revenue_Set() const{
    return m_revenue_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::is_revenue_Valid() const{
    return m_revenue_isValid;
}

QMap<QString, float> OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::getTaxes() const {
    return m_taxes;
}
void OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::setTaxes(const QMap<QString, float> &taxes) {
    m_taxes = taxes;
    m_taxes_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::is_taxes_Set() const{
    return m_taxes_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::is_taxes_Valid() const{
    return m_taxes_isValid;
}

bool OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_costs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_revenue_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_taxes.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRecommendationengineV1beta1PurchaseTransaction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
