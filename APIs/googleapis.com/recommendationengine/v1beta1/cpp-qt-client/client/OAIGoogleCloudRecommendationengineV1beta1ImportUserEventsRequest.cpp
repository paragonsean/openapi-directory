/**
 * Recommendations AI (Beta)
 * Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest::OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest::OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest() {
    this->initializeModel();
}

OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest::~OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest() {}

void OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest::initializeModel() {

    m_errors_config_isSet = false;
    m_errors_config_isValid = false;

    m_input_config_isSet = false;
    m_input_config_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;
}

void OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest::fromJsonObject(QJsonObject json) {

    m_errors_config_isValid = ::OpenAPI::fromJsonValue(m_errors_config, json[QString("errorsConfig")]);
    m_errors_config_isSet = !json[QString("errorsConfig")].isNull() && m_errors_config_isValid;

    m_input_config_isValid = ::OpenAPI::fromJsonValue(m_input_config, json[QString("inputConfig")]);
    m_input_config_isSet = !json[QString("inputConfig")].isNull() && m_input_config_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("requestId")]);
    m_request_id_isSet = !json[QString("requestId")].isNull() && m_request_id_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_errors_config.isSet()) {
        obj.insert(QString("errorsConfig"), ::OpenAPI::toJsonValue(m_errors_config));
    }
    if (m_input_config.isSet()) {
        obj.insert(QString("inputConfig"), ::OpenAPI::toJsonValue(m_input_config));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("requestId"), ::OpenAPI::toJsonValue(m_request_id));
    }
    return obj;
}

OAIGoogleCloudRecommendationengineV1beta1ImportErrorsConfig OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest::getErrorsConfig() const {
    return m_errors_config;
}
void OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest::setErrorsConfig(const OAIGoogleCloudRecommendationengineV1beta1ImportErrorsConfig &errors_config) {
    m_errors_config = errors_config;
    m_errors_config_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest::is_errors_config_Set() const{
    return m_errors_config_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest::is_errors_config_Valid() const{
    return m_errors_config_isValid;
}

OAIGoogleCloudRecommendationengineV1beta1InputConfig OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest::getInputConfig() const {
    return m_input_config;
}
void OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest::setInputConfig(const OAIGoogleCloudRecommendationengineV1beta1InputConfig &input_config) {
    m_input_config = input_config;
    m_input_config_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest::is_input_config_Set() const{
    return m_input_config_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest::is_input_config_Valid() const{
    return m_input_config_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest::getRequestId() const {
    return m_request_id;
}
void OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest::is_request_id_Valid() const{
    return m_request_id_isValid;
}

bool OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_errors_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRecommendationengineV1beta1ImportUserEventsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
