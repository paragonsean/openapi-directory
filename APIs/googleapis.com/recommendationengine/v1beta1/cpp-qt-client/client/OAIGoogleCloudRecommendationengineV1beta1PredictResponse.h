/**
 * Recommendations AI (Beta)
 * Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudRecommendationengineV1beta1PredictResponse.h
 *
 * Response message for predict method.
 */

#ifndef OAIGoogleCloudRecommendationengineV1beta1PredictResponse_H
#define OAIGoogleCloudRecommendationengineV1beta1PredictResponse_H

#include <QJsonObject>

#include "OAIGoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult.h"
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult;

class OAIGoogleCloudRecommendationengineV1beta1PredictResponse : public OAIObject {
public:
    OAIGoogleCloudRecommendationengineV1beta1PredictResponse();
    OAIGoogleCloudRecommendationengineV1beta1PredictResponse(QString json);
    ~OAIGoogleCloudRecommendationengineV1beta1PredictResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDryRun() const;
    void setDryRun(const bool &dry_run);
    bool is_dry_run_Set() const;
    bool is_dry_run_Valid() const;

    QList<QString> getItemsMissingInCatalog() const;
    void setItemsMissingInCatalog(const QList<QString> &items_missing_in_catalog);
    bool is_items_missing_in_catalog_Set() const;
    bool is_items_missing_in_catalog_Valid() const;

    QMap<QString, QJsonValue> getMetadata() const;
    void setMetadata(const QMap<QString, QJsonValue> &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    QString getRecommendationToken() const;
    void setRecommendationToken(const QString &recommendation_token);
    bool is_recommendation_token_Set() const;
    bool is_recommendation_token_Valid() const;

    QList<OAIGoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult> getResults() const;
    void setResults(const QList<OAIGoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult> &results);
    bool is_results_Set() const;
    bool is_results_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_dry_run;
    bool m_dry_run_isSet;
    bool m_dry_run_isValid;

    QList<QString> m_items_missing_in_catalog;
    bool m_items_missing_in_catalog_isSet;
    bool m_items_missing_in_catalog_isValid;

    QMap<QString, QJsonValue> m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;

    QString m_recommendation_token;
    bool m_recommendation_token_isSet;
    bool m_recommendation_token_isValid;

    QList<OAIGoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult> m_results;
    bool m_results_isSet;
    bool m_results_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudRecommendationengineV1beta1PredictResponse)

#endif // OAIGoogleCloudRecommendationengineV1beta1PredictResponse_H
