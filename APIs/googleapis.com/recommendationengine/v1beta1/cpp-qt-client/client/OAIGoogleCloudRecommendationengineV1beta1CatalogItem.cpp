/**
 * Recommendations AI (Beta)
 * Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRecommendationengineV1beta1CatalogItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRecommendationengineV1beta1CatalogItem::OAIGoogleCloudRecommendationengineV1beta1CatalogItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRecommendationengineV1beta1CatalogItem::OAIGoogleCloudRecommendationengineV1beta1CatalogItem() {
    this->initializeModel();
}

OAIGoogleCloudRecommendationengineV1beta1CatalogItem::~OAIGoogleCloudRecommendationengineV1beta1CatalogItem() {}

void OAIGoogleCloudRecommendationengineV1beta1CatalogItem::initializeModel() {

    m_category_hierarchies_isSet = false;
    m_category_hierarchies_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_item_attributes_isSet = false;
    m_item_attributes_isValid = false;

    m_item_group_id_isSet = false;
    m_item_group_id_isValid = false;

    m_language_code_isSet = false;
    m_language_code_isValid = false;

    m_product_metadata_isSet = false;
    m_product_metadata_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIGoogleCloudRecommendationengineV1beta1CatalogItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRecommendationengineV1beta1CatalogItem::fromJsonObject(QJsonObject json) {

    m_category_hierarchies_isValid = ::OpenAPI::fromJsonValue(m_category_hierarchies, json[QString("categoryHierarchies")]);
    m_category_hierarchies_isSet = !json[QString("categoryHierarchies")].isNull() && m_category_hierarchies_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_item_attributes_isValid = ::OpenAPI::fromJsonValue(m_item_attributes, json[QString("itemAttributes")]);
    m_item_attributes_isSet = !json[QString("itemAttributes")].isNull() && m_item_attributes_isValid;

    m_item_group_id_isValid = ::OpenAPI::fromJsonValue(m_item_group_id, json[QString("itemGroupId")]);
    m_item_group_id_isSet = !json[QString("itemGroupId")].isNull() && m_item_group_id_isValid;

    m_language_code_isValid = ::OpenAPI::fromJsonValue(m_language_code, json[QString("languageCode")]);
    m_language_code_isSet = !json[QString("languageCode")].isNull() && m_language_code_isValid;

    m_product_metadata_isValid = ::OpenAPI::fromJsonValue(m_product_metadata, json[QString("productMetadata")]);
    m_product_metadata_isSet = !json[QString("productMetadata")].isNull() && m_product_metadata_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1CatalogItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRecommendationengineV1beta1CatalogItem::asJsonObject() const {
    QJsonObject obj;
    if (m_category_hierarchies.size() > 0) {
        obj.insert(QString("categoryHierarchies"), ::OpenAPI::toJsonValue(m_category_hierarchies));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_item_attributes.isSet()) {
        obj.insert(QString("itemAttributes"), ::OpenAPI::toJsonValue(m_item_attributes));
    }
    if (m_item_group_id_isSet) {
        obj.insert(QString("itemGroupId"), ::OpenAPI::toJsonValue(m_item_group_id));
    }
    if (m_language_code_isSet) {
        obj.insert(QString("languageCode"), ::OpenAPI::toJsonValue(m_language_code));
    }
    if (m_product_metadata.isSet()) {
        obj.insert(QString("productMetadata"), ::OpenAPI::toJsonValue(m_product_metadata));
    }
    if (m_tags.size() > 0) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QList<OAIGoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy> OAIGoogleCloudRecommendationengineV1beta1CatalogItem::getCategoryHierarchies() const {
    return m_category_hierarchies;
}
void OAIGoogleCloudRecommendationengineV1beta1CatalogItem::setCategoryHierarchies(const QList<OAIGoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy> &category_hierarchies) {
    m_category_hierarchies = category_hierarchies;
    m_category_hierarchies_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1CatalogItem::is_category_hierarchies_Set() const{
    return m_category_hierarchies_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1CatalogItem::is_category_hierarchies_Valid() const{
    return m_category_hierarchies_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1CatalogItem::getDescription() const {
    return m_description;
}
void OAIGoogleCloudRecommendationengineV1beta1CatalogItem::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1CatalogItem::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1CatalogItem::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1CatalogItem::getId() const {
    return m_id;
}
void OAIGoogleCloudRecommendationengineV1beta1CatalogItem::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1CatalogItem::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1CatalogItem::is_id_Valid() const{
    return m_id_isValid;
}

OAIGoogleCloudRecommendationengineV1beta1FeatureMap OAIGoogleCloudRecommendationengineV1beta1CatalogItem::getItemAttributes() const {
    return m_item_attributes;
}
void OAIGoogleCloudRecommendationengineV1beta1CatalogItem::setItemAttributes(const OAIGoogleCloudRecommendationengineV1beta1FeatureMap &item_attributes) {
    m_item_attributes = item_attributes;
    m_item_attributes_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1CatalogItem::is_item_attributes_Set() const{
    return m_item_attributes_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1CatalogItem::is_item_attributes_Valid() const{
    return m_item_attributes_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1CatalogItem::getItemGroupId() const {
    return m_item_group_id;
}
void OAIGoogleCloudRecommendationengineV1beta1CatalogItem::setItemGroupId(const QString &item_group_id) {
    m_item_group_id = item_group_id;
    m_item_group_id_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1CatalogItem::is_item_group_id_Set() const{
    return m_item_group_id_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1CatalogItem::is_item_group_id_Valid() const{
    return m_item_group_id_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1CatalogItem::getLanguageCode() const {
    return m_language_code;
}
void OAIGoogleCloudRecommendationengineV1beta1CatalogItem::setLanguageCode(const QString &language_code) {
    m_language_code = language_code;
    m_language_code_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1CatalogItem::is_language_code_Set() const{
    return m_language_code_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1CatalogItem::is_language_code_Valid() const{
    return m_language_code_isValid;
}

OAIGoogleCloudRecommendationengineV1beta1ProductCatalogItem OAIGoogleCloudRecommendationengineV1beta1CatalogItem::getProductMetadata() const {
    return m_product_metadata;
}
void OAIGoogleCloudRecommendationengineV1beta1CatalogItem::setProductMetadata(const OAIGoogleCloudRecommendationengineV1beta1ProductCatalogItem &product_metadata) {
    m_product_metadata = product_metadata;
    m_product_metadata_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1CatalogItem::is_product_metadata_Set() const{
    return m_product_metadata_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1CatalogItem::is_product_metadata_Valid() const{
    return m_product_metadata_isValid;
}

QList<QString> OAIGoogleCloudRecommendationengineV1beta1CatalogItem::getTags() const {
    return m_tags;
}
void OAIGoogleCloudRecommendationengineV1beta1CatalogItem::setTags(const QList<QString> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1CatalogItem::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1CatalogItem::is_tags_Valid() const{
    return m_tags_isValid;
}

QString OAIGoogleCloudRecommendationengineV1beta1CatalogItem::getTitle() const {
    return m_title;
}
void OAIGoogleCloudRecommendationengineV1beta1CatalogItem::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIGoogleCloudRecommendationengineV1beta1CatalogItem::is_title_Set() const{
    return m_title_isSet;
}

bool OAIGoogleCloudRecommendationengineV1beta1CatalogItem::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIGoogleCloudRecommendationengineV1beta1CatalogItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_category_hierarchies.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRecommendationengineV1beta1CatalogItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
