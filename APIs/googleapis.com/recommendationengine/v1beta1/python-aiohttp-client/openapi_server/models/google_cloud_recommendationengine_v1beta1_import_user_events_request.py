# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_recommendationengine_v1beta1_import_errors_config import GoogleCloudRecommendationengineV1beta1ImportErrorsConfig
from openapi_server.models.google_cloud_recommendationengine_v1beta1_input_config import GoogleCloudRecommendationengineV1beta1InputConfig
from openapi_server import util


class GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, errors_config: GoogleCloudRecommendationengineV1beta1ImportErrorsConfig=None, input_config: GoogleCloudRecommendationengineV1beta1InputConfig=None, request_id: str=None):
        """GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest - a model defined in OpenAPI

        :param errors_config: The errors_config of this GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest.
        :param input_config: The input_config of this GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest.
        :param request_id: The request_id of this GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest.
        """
        self.openapi_types = {
            'errors_config': GoogleCloudRecommendationengineV1beta1ImportErrorsConfig,
            'input_config': GoogleCloudRecommendationengineV1beta1InputConfig,
            'request_id': str
        }

        self.attribute_map = {
            'errors_config': 'errorsConfig',
            'input_config': 'inputConfig',
            'request_id': 'requestId'
        }

        self._errors_config = errors_config
        self._input_config = input_config
        self._request_id = request_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest of this GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def errors_config(self):
        """Gets the errors_config of this GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest.


        :return: The errors_config of this GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest.
        :rtype: GoogleCloudRecommendationengineV1beta1ImportErrorsConfig
        """
        return self._errors_config

    @errors_config.setter
    def errors_config(self, errors_config):
        """Sets the errors_config of this GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest.


        :param errors_config: The errors_config of this GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest.
        :type errors_config: GoogleCloudRecommendationengineV1beta1ImportErrorsConfig
        """

        self._errors_config = errors_config

    @property
    def input_config(self):
        """Gets the input_config of this GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest.


        :return: The input_config of this GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest.
        :rtype: GoogleCloudRecommendationengineV1beta1InputConfig
        """
        return self._input_config

    @input_config.setter
    def input_config(self, input_config):
        """Sets the input_config of this GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest.


        :param input_config: The input_config of this GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest.
        :type input_config: GoogleCloudRecommendationengineV1beta1InputConfig
        """

        self._input_config = input_config

    @property
    def request_id(self):
        """Gets the request_id of this GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest.

        Optional. Unique identifier provided by client, within the ancestor dataset scope. Ensures idempotency for expensive long running operations. Server-generated if unspecified. Up to 128 characters long. This is returned as google.longrunning.Operation.name in the response. Note that this field must not be set if the desired input config is catalog_inline_source.

        :return: The request_id of this GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest.

        Optional. Unique identifier provided by client, within the ancestor dataset scope. Ensures idempotency for expensive long running operations. Server-generated if unspecified. Up to 128 characters long. This is returned as google.longrunning.Operation.name in the response. Note that this field must not be set if the desired input config is catalog_inline_source.

        :param request_id: The request_id of this GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest.
        :type request_id: str
        """

        self._request_id = request_id
