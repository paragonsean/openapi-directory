# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudRecommendationengineV1beta1ImportMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, failure_count: str=None, operation_name: str=None, request_id: str=None, success_count: str=None, update_time: str=None):
        """GoogleCloudRecommendationengineV1beta1ImportMetadata - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudRecommendationengineV1beta1ImportMetadata.
        :param failure_count: The failure_count of this GoogleCloudRecommendationengineV1beta1ImportMetadata.
        :param operation_name: The operation_name of this GoogleCloudRecommendationengineV1beta1ImportMetadata.
        :param request_id: The request_id of this GoogleCloudRecommendationengineV1beta1ImportMetadata.
        :param success_count: The success_count of this GoogleCloudRecommendationengineV1beta1ImportMetadata.
        :param update_time: The update_time of this GoogleCloudRecommendationengineV1beta1ImportMetadata.
        """
        self.openapi_types = {
            'create_time': str,
            'failure_count': str,
            'operation_name': str,
            'request_id': str,
            'success_count': str,
            'update_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'failure_count': 'failureCount',
            'operation_name': 'operationName',
            'request_id': 'requestId',
            'success_count': 'successCount',
            'update_time': 'updateTime'
        }

        self._create_time = create_time
        self._failure_count = failure_count
        self._operation_name = operation_name
        self._request_id = request_id
        self._success_count = success_count
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRecommendationengineV1beta1ImportMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRecommendationengineV1beta1ImportMetadata of this GoogleCloudRecommendationengineV1beta1ImportMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudRecommendationengineV1beta1ImportMetadata.

        Operation create time.

        :return: The create_time of this GoogleCloudRecommendationengineV1beta1ImportMetadata.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudRecommendationengineV1beta1ImportMetadata.

        Operation create time.

        :param create_time: The create_time of this GoogleCloudRecommendationengineV1beta1ImportMetadata.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def failure_count(self):
        """Gets the failure_count of this GoogleCloudRecommendationengineV1beta1ImportMetadata.

        Count of entries that encountered errors while processing.

        :return: The failure_count of this GoogleCloudRecommendationengineV1beta1ImportMetadata.
        :rtype: str
        """
        return self._failure_count

    @failure_count.setter
    def failure_count(self, failure_count):
        """Sets the failure_count of this GoogleCloudRecommendationengineV1beta1ImportMetadata.

        Count of entries that encountered errors while processing.

        :param failure_count: The failure_count of this GoogleCloudRecommendationengineV1beta1ImportMetadata.
        :type failure_count: str
        """

        self._failure_count = failure_count

    @property
    def operation_name(self):
        """Gets the operation_name of this GoogleCloudRecommendationengineV1beta1ImportMetadata.

        Name of the operation.

        :return: The operation_name of this GoogleCloudRecommendationengineV1beta1ImportMetadata.
        :rtype: str
        """
        return self._operation_name

    @operation_name.setter
    def operation_name(self, operation_name):
        """Sets the operation_name of this GoogleCloudRecommendationengineV1beta1ImportMetadata.

        Name of the operation.

        :param operation_name: The operation_name of this GoogleCloudRecommendationengineV1beta1ImportMetadata.
        :type operation_name: str
        """

        self._operation_name = operation_name

    @property
    def request_id(self):
        """Gets the request_id of this GoogleCloudRecommendationengineV1beta1ImportMetadata.

        Id of the request / operation. This is parroting back the requestId that was passed in the request.

        :return: The request_id of this GoogleCloudRecommendationengineV1beta1ImportMetadata.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this GoogleCloudRecommendationengineV1beta1ImportMetadata.

        Id of the request / operation. This is parroting back the requestId that was passed in the request.

        :param request_id: The request_id of this GoogleCloudRecommendationengineV1beta1ImportMetadata.
        :type request_id: str
        """

        self._request_id = request_id

    @property
    def success_count(self):
        """Gets the success_count of this GoogleCloudRecommendationengineV1beta1ImportMetadata.

        Count of entries that were processed successfully.

        :return: The success_count of this GoogleCloudRecommendationengineV1beta1ImportMetadata.
        :rtype: str
        """
        return self._success_count

    @success_count.setter
    def success_count(self, success_count):
        """Sets the success_count of this GoogleCloudRecommendationengineV1beta1ImportMetadata.

        Count of entries that were processed successfully.

        :param success_count: The success_count of this GoogleCloudRecommendationengineV1beta1ImportMetadata.
        :type success_count: str
        """

        self._success_count = success_count

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudRecommendationengineV1beta1ImportMetadata.

        Operation last update time. If the operation is done, this is also the finish time.

        :return: The update_time of this GoogleCloudRecommendationengineV1beta1ImportMetadata.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudRecommendationengineV1beta1ImportMetadata.

        Operation last update time. If the operation is done, this is also the finish time.

        :param update_time: The update_time of this GoogleCloudRecommendationengineV1beta1ImportMetadata.
        :type update_time: str
        """

        self._update_time = update_time
