# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_recommendationengine_v1beta1_feature_map import GoogleCloudRecommendationengineV1beta1FeatureMap
from openapi_server import util


class GoogleCloudRecommendationengineV1beta1EventDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_attributes: GoogleCloudRecommendationengineV1beta1FeatureMap=None, experiment_ids: List[str]=None, page_view_id: str=None, recommendation_token: str=None, referrer_uri: str=None, uri: str=None):
        """GoogleCloudRecommendationengineV1beta1EventDetail - a model defined in OpenAPI

        :param event_attributes: The event_attributes of this GoogleCloudRecommendationengineV1beta1EventDetail.
        :param experiment_ids: The experiment_ids of this GoogleCloudRecommendationengineV1beta1EventDetail.
        :param page_view_id: The page_view_id of this GoogleCloudRecommendationengineV1beta1EventDetail.
        :param recommendation_token: The recommendation_token of this GoogleCloudRecommendationengineV1beta1EventDetail.
        :param referrer_uri: The referrer_uri of this GoogleCloudRecommendationengineV1beta1EventDetail.
        :param uri: The uri of this GoogleCloudRecommendationengineV1beta1EventDetail.
        """
        self.openapi_types = {
            'event_attributes': GoogleCloudRecommendationengineV1beta1FeatureMap,
            'experiment_ids': List[str],
            'page_view_id': str,
            'recommendation_token': str,
            'referrer_uri': str,
            'uri': str
        }

        self.attribute_map = {
            'event_attributes': 'eventAttributes',
            'experiment_ids': 'experimentIds',
            'page_view_id': 'pageViewId',
            'recommendation_token': 'recommendationToken',
            'referrer_uri': 'referrerUri',
            'uri': 'uri'
        }

        self._event_attributes = event_attributes
        self._experiment_ids = experiment_ids
        self._page_view_id = page_view_id
        self._recommendation_token = recommendation_token
        self._referrer_uri = referrer_uri
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRecommendationengineV1beta1EventDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRecommendationengineV1beta1EventDetail of this GoogleCloudRecommendationengineV1beta1EventDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_attributes(self):
        """Gets the event_attributes of this GoogleCloudRecommendationengineV1beta1EventDetail.


        :return: The event_attributes of this GoogleCloudRecommendationengineV1beta1EventDetail.
        :rtype: GoogleCloudRecommendationengineV1beta1FeatureMap
        """
        return self._event_attributes

    @event_attributes.setter
    def event_attributes(self, event_attributes):
        """Sets the event_attributes of this GoogleCloudRecommendationengineV1beta1EventDetail.


        :param event_attributes: The event_attributes of this GoogleCloudRecommendationengineV1beta1EventDetail.
        :type event_attributes: GoogleCloudRecommendationengineV1beta1FeatureMap
        """

        self._event_attributes = event_attributes

    @property
    def experiment_ids(self):
        """Gets the experiment_ids of this GoogleCloudRecommendationengineV1beta1EventDetail.

        Optional. A list of identifiers for the independent experiment groups this user event belongs to. This is used to distinguish between user events associated with different experiment setups (e.g. using Recommendation Engine system, using different recommendation models).

        :return: The experiment_ids of this GoogleCloudRecommendationengineV1beta1EventDetail.
        :rtype: List[str]
        """
        return self._experiment_ids

    @experiment_ids.setter
    def experiment_ids(self, experiment_ids):
        """Sets the experiment_ids of this GoogleCloudRecommendationengineV1beta1EventDetail.

        Optional. A list of identifiers for the independent experiment groups this user event belongs to. This is used to distinguish between user events associated with different experiment setups (e.g. using Recommendation Engine system, using different recommendation models).

        :param experiment_ids: The experiment_ids of this GoogleCloudRecommendationengineV1beta1EventDetail.
        :type experiment_ids: List[str]
        """

        self._experiment_ids = experiment_ids

    @property
    def page_view_id(self):
        """Gets the page_view_id of this GoogleCloudRecommendationengineV1beta1EventDetail.

        Optional. A unique id of a web page view. This should be kept the same for all user events triggered from the same pageview. For example, an item detail page view could trigger multiple events as the user is browsing the page. The `pageViewId` property should be kept the same for all these events so that they can be grouped together properly. This `pageViewId` will be automatically generated if using the JavaScript pixel.

        :return: The page_view_id of this GoogleCloudRecommendationengineV1beta1EventDetail.
        :rtype: str
        """
        return self._page_view_id

    @page_view_id.setter
    def page_view_id(self, page_view_id):
        """Sets the page_view_id of this GoogleCloudRecommendationengineV1beta1EventDetail.

        Optional. A unique id of a web page view. This should be kept the same for all user events triggered from the same pageview. For example, an item detail page view could trigger multiple events as the user is browsing the page. The `pageViewId` property should be kept the same for all these events so that they can be grouped together properly. This `pageViewId` will be automatically generated if using the JavaScript pixel.

        :param page_view_id: The page_view_id of this GoogleCloudRecommendationengineV1beta1EventDetail.
        :type page_view_id: str
        """

        self._page_view_id = page_view_id

    @property
    def recommendation_token(self):
        """Gets the recommendation_token of this GoogleCloudRecommendationengineV1beta1EventDetail.

        Optional. Recommendation token included in the recommendation prediction response. This field enables accurate attribution of recommendation model performance. This token enables us to accurately attribute page view or purchase back to the event and the particular predict response containing this clicked/purchased item. If user clicks on product K in the recommendation results, pass the `PredictResponse.recommendationToken` property as a url parameter to product K's page. When recording events on product K's page, log the PredictResponse.recommendation_token to this field. Optional, but highly encouraged for user events that are the result of a recommendation prediction query.

        :return: The recommendation_token of this GoogleCloudRecommendationengineV1beta1EventDetail.
        :rtype: str
        """
        return self._recommendation_token

    @recommendation_token.setter
    def recommendation_token(self, recommendation_token):
        """Sets the recommendation_token of this GoogleCloudRecommendationengineV1beta1EventDetail.

        Optional. Recommendation token included in the recommendation prediction response. This field enables accurate attribution of recommendation model performance. This token enables us to accurately attribute page view or purchase back to the event and the particular predict response containing this clicked/purchased item. If user clicks on product K in the recommendation results, pass the `PredictResponse.recommendationToken` property as a url parameter to product K's page. When recording events on product K's page, log the PredictResponse.recommendation_token to this field. Optional, but highly encouraged for user events that are the result of a recommendation prediction query.

        :param recommendation_token: The recommendation_token of this GoogleCloudRecommendationengineV1beta1EventDetail.
        :type recommendation_token: str
        """

        self._recommendation_token = recommendation_token

    @property
    def referrer_uri(self):
        """Gets the referrer_uri of this GoogleCloudRecommendationengineV1beta1EventDetail.

        Optional. The referrer url of the current page. When using the JavaScript pixel, this value is filled in automatically.

        :return: The referrer_uri of this GoogleCloudRecommendationengineV1beta1EventDetail.
        :rtype: str
        """
        return self._referrer_uri

    @referrer_uri.setter
    def referrer_uri(self, referrer_uri):
        """Sets the referrer_uri of this GoogleCloudRecommendationengineV1beta1EventDetail.

        Optional. The referrer url of the current page. When using the JavaScript pixel, this value is filled in automatically.

        :param referrer_uri: The referrer_uri of this GoogleCloudRecommendationengineV1beta1EventDetail.
        :type referrer_uri: str
        """

        self._referrer_uri = referrer_uri

    @property
    def uri(self):
        """Gets the uri of this GoogleCloudRecommendationengineV1beta1EventDetail.

        Optional. Complete url (window.location.href) of the user's current page. When using the JavaScript pixel, this value is filled in automatically. Maximum length 5KB.

        :return: The uri of this GoogleCloudRecommendationengineV1beta1EventDetail.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this GoogleCloudRecommendationengineV1beta1EventDetail.

        Optional. Complete url (window.location.href) of the user's current page. When using the JavaScript pixel, this value is filled in automatically. Maximum length 5KB.

        :param uri: The uri of this GoogleCloudRecommendationengineV1beta1EventDetail.
        :type uri: str
        """

        self._uri = uri
