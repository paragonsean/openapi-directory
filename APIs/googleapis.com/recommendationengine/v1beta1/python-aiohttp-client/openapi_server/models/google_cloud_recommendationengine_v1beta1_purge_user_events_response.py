# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_recommendationengine_v1beta1_user_event import GoogleCloudRecommendationengineV1beta1UserEvent
from openapi_server import util


class GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, purged_events_count: str=None, user_events_sample: List[GoogleCloudRecommendationengineV1beta1UserEvent]=None):
        """GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse - a model defined in OpenAPI

        :param purged_events_count: The purged_events_count of this GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse.
        :param user_events_sample: The user_events_sample of this GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse.
        """
        self.openapi_types = {
            'purged_events_count': str,
            'user_events_sample': List[GoogleCloudRecommendationengineV1beta1UserEvent]
        }

        self.attribute_map = {
            'purged_events_count': 'purgedEventsCount',
            'user_events_sample': 'userEventsSample'
        }

        self._purged_events_count = purged_events_count
        self._user_events_sample = user_events_sample

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse of this GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def purged_events_count(self):
        """Gets the purged_events_count of this GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse.

        The total count of events purged as a result of the operation.

        :return: The purged_events_count of this GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse.
        :rtype: str
        """
        return self._purged_events_count

    @purged_events_count.setter
    def purged_events_count(self, purged_events_count):
        """Sets the purged_events_count of this GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse.

        The total count of events purged as a result of the operation.

        :param purged_events_count: The purged_events_count of this GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse.
        :type purged_events_count: str
        """

        self._purged_events_count = purged_events_count

    @property
    def user_events_sample(self):
        """Gets the user_events_sample of this GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse.

        A sampling of events deleted (or will be deleted) depending on the `force` property in the request. Max of 500 items will be returned.

        :return: The user_events_sample of this GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse.
        :rtype: List[GoogleCloudRecommendationengineV1beta1UserEvent]
        """
        return self._user_events_sample

    @user_events_sample.setter
    def user_events_sample(self, user_events_sample):
        """Sets the user_events_sample of this GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse.

        A sampling of events deleted (or will be deleted) depending on the `force` property in the request. Max of 500 items will be returned.

        :param user_events_sample: The user_events_sample of this GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse.
        :type user_events_sample: List[GoogleCloudRecommendationengineV1beta1UserEvent]
        """

        self._user_events_sample = user_events_sample
