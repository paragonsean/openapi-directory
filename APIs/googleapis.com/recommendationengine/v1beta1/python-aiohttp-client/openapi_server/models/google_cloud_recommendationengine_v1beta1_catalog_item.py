# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_recommendationengine_v1beta1_catalog_item_category_hierarchy import GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy
from openapi_server.models.google_cloud_recommendationengine_v1beta1_feature_map import GoogleCloudRecommendationengineV1beta1FeatureMap
from openapi_server.models.google_cloud_recommendationengine_v1beta1_product_catalog_item import GoogleCloudRecommendationengineV1beta1ProductCatalogItem
from openapi_server import util


class GoogleCloudRecommendationengineV1beta1CatalogItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category_hierarchies: List[GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy]=None, description: str=None, id: str=None, item_attributes: GoogleCloudRecommendationengineV1beta1FeatureMap=None, item_group_id: str=None, language_code: str=None, product_metadata: GoogleCloudRecommendationengineV1beta1ProductCatalogItem=None, tags: List[str]=None, title: str=None):
        """GoogleCloudRecommendationengineV1beta1CatalogItem - a model defined in OpenAPI

        :param category_hierarchies: The category_hierarchies of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :param description: The description of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :param id: The id of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :param item_attributes: The item_attributes of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :param item_group_id: The item_group_id of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :param language_code: The language_code of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :param product_metadata: The product_metadata of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :param tags: The tags of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :param title: The title of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        """
        self.openapi_types = {
            'category_hierarchies': List[GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy],
            'description': str,
            'id': str,
            'item_attributes': GoogleCloudRecommendationengineV1beta1FeatureMap,
            'item_group_id': str,
            'language_code': str,
            'product_metadata': GoogleCloudRecommendationengineV1beta1ProductCatalogItem,
            'tags': List[str],
            'title': str
        }

        self.attribute_map = {
            'category_hierarchies': 'categoryHierarchies',
            'description': 'description',
            'id': 'id',
            'item_attributes': 'itemAttributes',
            'item_group_id': 'itemGroupId',
            'language_code': 'languageCode',
            'product_metadata': 'productMetadata',
            'tags': 'tags',
            'title': 'title'
        }

        self._category_hierarchies = category_hierarchies
        self._description = description
        self._id = id
        self._item_attributes = item_attributes
        self._item_group_id = item_group_id
        self._language_code = language_code
        self._product_metadata = product_metadata
        self._tags = tags
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRecommendationengineV1beta1CatalogItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRecommendationengineV1beta1CatalogItem of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category_hierarchies(self):
        """Gets the category_hierarchies of this GoogleCloudRecommendationengineV1beta1CatalogItem.

        Required. Catalog item categories. This field is repeated for supporting one catalog item belonging to several parallel category hierarchies. For example, if a shoes product belongs to both [\"Shoes & Accessories\" -> \"Shoes\"] and [\"Sports & Fitness\" -> \"Athletic Clothing\" -> \"Shoes\"], it could be represented as: \"categoryHierarchies\": [ { \"categories\": [\"Shoes & Accessories\", \"Shoes\"]}, { \"categories\": [\"Sports & Fitness\", \"Athletic Clothing\", \"Shoes\"] } ]

        :return: The category_hierarchies of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :rtype: List[GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy]
        """
        return self._category_hierarchies

    @category_hierarchies.setter
    def category_hierarchies(self, category_hierarchies):
        """Sets the category_hierarchies of this GoogleCloudRecommendationengineV1beta1CatalogItem.

        Required. Catalog item categories. This field is repeated for supporting one catalog item belonging to several parallel category hierarchies. For example, if a shoes product belongs to both [\"Shoes & Accessories\" -> \"Shoes\"] and [\"Sports & Fitness\" -> \"Athletic Clothing\" -> \"Shoes\"], it could be represented as: \"categoryHierarchies\": [ { \"categories\": [\"Shoes & Accessories\", \"Shoes\"]}, { \"categories\": [\"Sports & Fitness\", \"Athletic Clothing\", \"Shoes\"] } ]

        :param category_hierarchies: The category_hierarchies of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :type category_hierarchies: List[GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy]
        """

        self._category_hierarchies = category_hierarchies

    @property
    def description(self):
        """Gets the description of this GoogleCloudRecommendationengineV1beta1CatalogItem.

        Optional. Catalog item description. UTF-8 encoded string with a length limit of 5 KiB.

        :return: The description of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudRecommendationengineV1beta1CatalogItem.

        Optional. Catalog item description. UTF-8 encoded string with a length limit of 5 KiB.

        :param description: The description of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this GoogleCloudRecommendationengineV1beta1CatalogItem.

        Required. Catalog item identifier. UTF-8 encoded string with a length limit of 128 bytes. This id must be unique among all catalog items within the same catalog. It should also be used when logging user events in order for the user events to be joined with the Catalog.

        :return: The id of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GoogleCloudRecommendationengineV1beta1CatalogItem.

        Required. Catalog item identifier. UTF-8 encoded string with a length limit of 128 bytes. This id must be unique among all catalog items within the same catalog. It should also be used when logging user events in order for the user events to be joined with the Catalog.

        :param id: The id of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :type id: str
        """

        self._id = id

    @property
    def item_attributes(self):
        """Gets the item_attributes of this GoogleCloudRecommendationengineV1beta1CatalogItem.


        :return: The item_attributes of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :rtype: GoogleCloudRecommendationengineV1beta1FeatureMap
        """
        return self._item_attributes

    @item_attributes.setter
    def item_attributes(self, item_attributes):
        """Sets the item_attributes of this GoogleCloudRecommendationengineV1beta1CatalogItem.


        :param item_attributes: The item_attributes of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :type item_attributes: GoogleCloudRecommendationengineV1beta1FeatureMap
        """

        self._item_attributes = item_attributes

    @property
    def item_group_id(self):
        """Gets the item_group_id of this GoogleCloudRecommendationengineV1beta1CatalogItem.

        Optional. Variant group identifier for prediction results. UTF-8 encoded string with a length limit of 128 bytes. This field must be enabled before it can be used. [Learn more](/recommendations-ai/docs/catalog#item-group-id).

        :return: The item_group_id of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :rtype: str
        """
        return self._item_group_id

    @item_group_id.setter
    def item_group_id(self, item_group_id):
        """Sets the item_group_id of this GoogleCloudRecommendationengineV1beta1CatalogItem.

        Optional. Variant group identifier for prediction results. UTF-8 encoded string with a length limit of 128 bytes. This field must be enabled before it can be used. [Learn more](/recommendations-ai/docs/catalog#item-group-id).

        :param item_group_id: The item_group_id of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :type item_group_id: str
        """

        self._item_group_id = item_group_id

    @property
    def language_code(self):
        """Gets the language_code of this GoogleCloudRecommendationengineV1beta1CatalogItem.

        Optional. Deprecated. The model automatically detects the text language. Your catalog can include text in different languages, but duplicating catalog items to provide text in multiple languages can result in degraded model performance.

        :return: The language_code of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this GoogleCloudRecommendationengineV1beta1CatalogItem.

        Optional. Deprecated. The model automatically detects the text language. Your catalog can include text in different languages, but duplicating catalog items to provide text in multiple languages can result in degraded model performance.

        :param language_code: The language_code of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :type language_code: str
        """

        self._language_code = language_code

    @property
    def product_metadata(self):
        """Gets the product_metadata of this GoogleCloudRecommendationengineV1beta1CatalogItem.


        :return: The product_metadata of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :rtype: GoogleCloudRecommendationengineV1beta1ProductCatalogItem
        """
        return self._product_metadata

    @product_metadata.setter
    def product_metadata(self, product_metadata):
        """Sets the product_metadata of this GoogleCloudRecommendationengineV1beta1CatalogItem.


        :param product_metadata: The product_metadata of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :type product_metadata: GoogleCloudRecommendationengineV1beta1ProductCatalogItem
        """

        self._product_metadata = product_metadata

    @property
    def tags(self):
        """Gets the tags of this GoogleCloudRecommendationengineV1beta1CatalogItem.

        Optional. Filtering tags associated with the catalog item. Each tag should be a UTF-8 encoded string with a length limit of 1 KiB. This tag can be used for filtering recommendation results by passing the tag as part of the predict request filter.

        :return: The tags of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this GoogleCloudRecommendationengineV1beta1CatalogItem.

        Optional. Filtering tags associated with the catalog item. Each tag should be a UTF-8 encoded string with a length limit of 1 KiB. This tag can be used for filtering recommendation results by passing the tag as part of the predict request filter.

        :param tags: The tags of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :type tags: List[str]
        """

        self._tags = tags

    @property
    def title(self):
        """Gets the title of this GoogleCloudRecommendationengineV1beta1CatalogItem.

        Required. Catalog item title. UTF-8 encoded string with a length limit of 1 KiB.

        :return: The title of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this GoogleCloudRecommendationengineV1beta1CatalogItem.

        Required. Catalog item title. UTF-8 encoded string with a length limit of 1 KiB.

        :param title: The title of this GoogleCloudRecommendationengineV1beta1CatalogItem.
        :type title: str
        """

        self._title = title
