# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_recommendationengine_v1beta1_user_event import GoogleCloudRecommendationengineV1beta1UserEvent
from openapi_server import util


class GoogleCloudRecommendationengineV1beta1ListUserEventsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_page_token: str=None, user_events: List[GoogleCloudRecommendationengineV1beta1UserEvent]=None):
        """GoogleCloudRecommendationengineV1beta1ListUserEventsResponse - a model defined in OpenAPI

        :param next_page_token: The next_page_token of this GoogleCloudRecommendationengineV1beta1ListUserEventsResponse.
        :param user_events: The user_events of this GoogleCloudRecommendationengineV1beta1ListUserEventsResponse.
        """
        self.openapi_types = {
            'next_page_token': str,
            'user_events': List[GoogleCloudRecommendationengineV1beta1UserEvent]
        }

        self.attribute_map = {
            'next_page_token': 'nextPageToken',
            'user_events': 'userEvents'
        }

        self._next_page_token = next_page_token
        self._user_events = user_events

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRecommendationengineV1beta1ListUserEventsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRecommendationengineV1beta1ListUserEventsResponse of this GoogleCloudRecommendationengineV1beta1ListUserEventsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_page_token(self):
        """Gets the next_page_token of this GoogleCloudRecommendationengineV1beta1ListUserEventsResponse.

        If empty, the list is complete. If nonempty, the token to pass to the next request's ListUserEvents.page_token.

        :return: The next_page_token of this GoogleCloudRecommendationengineV1beta1ListUserEventsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this GoogleCloudRecommendationengineV1beta1ListUserEventsResponse.

        If empty, the list is complete. If nonempty, the token to pass to the next request's ListUserEvents.page_token.

        :param next_page_token: The next_page_token of this GoogleCloudRecommendationengineV1beta1ListUserEventsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def user_events(self):
        """Gets the user_events of this GoogleCloudRecommendationengineV1beta1ListUserEventsResponse.

        The user events.

        :return: The user_events of this GoogleCloudRecommendationengineV1beta1ListUserEventsResponse.
        :rtype: List[GoogleCloudRecommendationengineV1beta1UserEvent]
        """
        return self._user_events

    @user_events.setter
    def user_events(self, user_events):
        """Sets the user_events of this GoogleCloudRecommendationengineV1beta1ListUserEventsResponse.

        The user events.

        :param user_events: The user_events of this GoogleCloudRecommendationengineV1beta1ListUserEventsResponse.
        :type user_events: List[GoogleCloudRecommendationengineV1beta1UserEvent]
        """

        self._user_events = user_events
