# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_recommendationengine_v1beta1_feature_map_float_list import GoogleCloudRecommendationengineV1beta1FeatureMapFloatList
from openapi_server.models.google_cloud_recommendationengine_v1beta1_feature_map_string_list import GoogleCloudRecommendationengineV1beta1FeatureMapStringList
from openapi_server import util


class GoogleCloudRecommendationengineV1beta1FeatureMap(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, categorical_features: Dict[str, GoogleCloudRecommendationengineV1beta1FeatureMapStringList]=None, numerical_features: Dict[str, GoogleCloudRecommendationengineV1beta1FeatureMapFloatList]=None):
        """GoogleCloudRecommendationengineV1beta1FeatureMap - a model defined in OpenAPI

        :param categorical_features: The categorical_features of this GoogleCloudRecommendationengineV1beta1FeatureMap.
        :param numerical_features: The numerical_features of this GoogleCloudRecommendationengineV1beta1FeatureMap.
        """
        self.openapi_types = {
            'categorical_features': Dict[str, GoogleCloudRecommendationengineV1beta1FeatureMapStringList],
            'numerical_features': Dict[str, GoogleCloudRecommendationengineV1beta1FeatureMapFloatList]
        }

        self.attribute_map = {
            'categorical_features': 'categoricalFeatures',
            'numerical_features': 'numericalFeatures'
        }

        self._categorical_features = categorical_features
        self._numerical_features = numerical_features

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRecommendationengineV1beta1FeatureMap':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRecommendationengineV1beta1FeatureMap of this GoogleCloudRecommendationengineV1beta1FeatureMap.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def categorical_features(self):
        """Gets the categorical_features of this GoogleCloudRecommendationengineV1beta1FeatureMap.

        Categorical features that can take on one of a limited number of possible values. Some examples would be the brand/maker of a product, or country of a customer. Feature names and values must be UTF-8 encoded strings. For example: `{ \"colors\": {\"value\": [\"yellow\", \"green\"]}, \"sizes\": {\"value\":[\"S\", \"M\"]}`

        :return: The categorical_features of this GoogleCloudRecommendationengineV1beta1FeatureMap.
        :rtype: Dict[str, GoogleCloudRecommendationengineV1beta1FeatureMapStringList]
        """
        return self._categorical_features

    @categorical_features.setter
    def categorical_features(self, categorical_features):
        """Sets the categorical_features of this GoogleCloudRecommendationengineV1beta1FeatureMap.

        Categorical features that can take on one of a limited number of possible values. Some examples would be the brand/maker of a product, or country of a customer. Feature names and values must be UTF-8 encoded strings. For example: `{ \"colors\": {\"value\": [\"yellow\", \"green\"]}, \"sizes\": {\"value\":[\"S\", \"M\"]}`

        :param categorical_features: The categorical_features of this GoogleCloudRecommendationengineV1beta1FeatureMap.
        :type categorical_features: Dict[str, GoogleCloudRecommendationengineV1beta1FeatureMapStringList]
        """

        self._categorical_features = categorical_features

    @property
    def numerical_features(self):
        """Gets the numerical_features of this GoogleCloudRecommendationengineV1beta1FeatureMap.

        Numerical features. Some examples would be the height/weight of a product, or age of a customer. Feature names must be UTF-8 encoded strings. For example: `{ \"lengths_cm\": {\"value\":[2.3, 15.4]}, \"heights_cm\": {\"value\":[8.1, 6.4]} }`

        :return: The numerical_features of this GoogleCloudRecommendationengineV1beta1FeatureMap.
        :rtype: Dict[str, GoogleCloudRecommendationengineV1beta1FeatureMapFloatList]
        """
        return self._numerical_features

    @numerical_features.setter
    def numerical_features(self, numerical_features):
        """Sets the numerical_features of this GoogleCloudRecommendationengineV1beta1FeatureMap.

        Numerical features. Some examples would be the height/weight of a product, or age of a customer. Feature names must be UTF-8 encoded strings. For example: `{ \"lengths_cm\": {\"value\":[2.3, 15.4]}, \"heights_cm\": {\"value\":[8.1, 6.4]} }`

        :param numerical_features: The numerical_features of this GoogleCloudRecommendationengineV1beta1FeatureMap.
        :type numerical_features: Dict[str, GoogleCloudRecommendationengineV1beta1FeatureMapFloatList]
        """

        self._numerical_features = numerical_features
