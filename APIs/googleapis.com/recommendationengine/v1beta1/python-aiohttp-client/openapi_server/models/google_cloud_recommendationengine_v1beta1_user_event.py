# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_recommendationengine_v1beta1_event_detail import GoogleCloudRecommendationengineV1beta1EventDetail
from openapi_server.models.google_cloud_recommendationengine_v1beta1_product_event_detail import GoogleCloudRecommendationengineV1beta1ProductEventDetail
from openapi_server.models.google_cloud_recommendationengine_v1beta1_user_info import GoogleCloudRecommendationengineV1beta1UserInfo
from openapi_server import util


class GoogleCloudRecommendationengineV1beta1UserEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_detail: GoogleCloudRecommendationengineV1beta1EventDetail=None, event_source: str=None, event_time: str=None, event_type: str=None, product_event_detail: GoogleCloudRecommendationengineV1beta1ProductEventDetail=None, user_info: GoogleCloudRecommendationengineV1beta1UserInfo=None):
        """GoogleCloudRecommendationengineV1beta1UserEvent - a model defined in OpenAPI

        :param event_detail: The event_detail of this GoogleCloudRecommendationengineV1beta1UserEvent.
        :param event_source: The event_source of this GoogleCloudRecommendationengineV1beta1UserEvent.
        :param event_time: The event_time of this GoogleCloudRecommendationengineV1beta1UserEvent.
        :param event_type: The event_type of this GoogleCloudRecommendationengineV1beta1UserEvent.
        :param product_event_detail: The product_event_detail of this GoogleCloudRecommendationengineV1beta1UserEvent.
        :param user_info: The user_info of this GoogleCloudRecommendationengineV1beta1UserEvent.
        """
        self.openapi_types = {
            'event_detail': GoogleCloudRecommendationengineV1beta1EventDetail,
            'event_source': str,
            'event_time': str,
            'event_type': str,
            'product_event_detail': GoogleCloudRecommendationengineV1beta1ProductEventDetail,
            'user_info': GoogleCloudRecommendationengineV1beta1UserInfo
        }

        self.attribute_map = {
            'event_detail': 'eventDetail',
            'event_source': 'eventSource',
            'event_time': 'eventTime',
            'event_type': 'eventType',
            'product_event_detail': 'productEventDetail',
            'user_info': 'userInfo'
        }

        self._event_detail = event_detail
        self._event_source = event_source
        self._event_time = event_time
        self._event_type = event_type
        self._product_event_detail = product_event_detail
        self._user_info = user_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRecommendationengineV1beta1UserEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRecommendationengineV1beta1UserEvent of this GoogleCloudRecommendationengineV1beta1UserEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_detail(self):
        """Gets the event_detail of this GoogleCloudRecommendationengineV1beta1UserEvent.


        :return: The event_detail of this GoogleCloudRecommendationengineV1beta1UserEvent.
        :rtype: GoogleCloudRecommendationengineV1beta1EventDetail
        """
        return self._event_detail

    @event_detail.setter
    def event_detail(self, event_detail):
        """Sets the event_detail of this GoogleCloudRecommendationengineV1beta1UserEvent.


        :param event_detail: The event_detail of this GoogleCloudRecommendationengineV1beta1UserEvent.
        :type event_detail: GoogleCloudRecommendationengineV1beta1EventDetail
        """

        self._event_detail = event_detail

    @property
    def event_source(self):
        """Gets the event_source of this GoogleCloudRecommendationengineV1beta1UserEvent.

        Optional. This field should *not* be set when using JavaScript pixel or the Recommendations AI Tag. Defaults to `EVENT_SOURCE_UNSPECIFIED`.

        :return: The event_source of this GoogleCloudRecommendationengineV1beta1UserEvent.
        :rtype: str
        """
        return self._event_source

    @event_source.setter
    def event_source(self, event_source):
        """Sets the event_source of this GoogleCloudRecommendationengineV1beta1UserEvent.

        Optional. This field should *not* be set when using JavaScript pixel or the Recommendations AI Tag. Defaults to `EVENT_SOURCE_UNSPECIFIED`.

        :param event_source: The event_source of this GoogleCloudRecommendationengineV1beta1UserEvent.
        :type event_source: str
        """
        allowed_values = ["EVENT_SOURCE_UNSPECIFIED", "AUTOML", "ECOMMERCE", "BATCH_UPLOAD"]  # noqa: E501
        if event_source not in allowed_values:
            raise ValueError(
                "Invalid value for `event_source` ({0}), must be one of {1}"
                .format(event_source, allowed_values)
            )

        self._event_source = event_source

    @property
    def event_time(self):
        """Gets the event_time of this GoogleCloudRecommendationengineV1beta1UserEvent.

        Optional. Only required for ImportUserEvents method. Timestamp of user event created.

        :return: The event_time of this GoogleCloudRecommendationengineV1beta1UserEvent.
        :rtype: str
        """
        return self._event_time

    @event_time.setter
    def event_time(self, event_time):
        """Sets the event_time of this GoogleCloudRecommendationengineV1beta1UserEvent.

        Optional. Only required for ImportUserEvents method. Timestamp of user event created.

        :param event_time: The event_time of this GoogleCloudRecommendationengineV1beta1UserEvent.
        :type event_time: str
        """

        self._event_time = event_time

    @property
    def event_type(self):
        """Gets the event_type of this GoogleCloudRecommendationengineV1beta1UserEvent.

        Required. User event type. Allowed values are: * `add-to-cart` Products being added to cart. * `add-to-list` Items being added to a list (shopping list, favorites etc). * `category-page-view` Special pages such as sale or promotion pages viewed. * `checkout-start` User starting a checkout process. * `detail-page-view` Products detail page viewed. * `home-page-view` Homepage viewed. * `page-visit` Generic page visits not included in the event types above. * `purchase-complete` User finishing a purchase. * `refund` Purchased items being refunded or returned. * `remove-from-cart` Products being removed from cart. * `remove-from-list` Items being removed from a list. * `search` Product search. * `shopping-cart-page-view` User viewing a shopping cart. * `impression` List of items displayed. Used by Google Tag Manager.

        :return: The event_type of this GoogleCloudRecommendationengineV1beta1UserEvent.
        :rtype: str
        """
        return self._event_type

    @event_type.setter
    def event_type(self, event_type):
        """Sets the event_type of this GoogleCloudRecommendationengineV1beta1UserEvent.

        Required. User event type. Allowed values are: * `add-to-cart` Products being added to cart. * `add-to-list` Items being added to a list (shopping list, favorites etc). * `category-page-view` Special pages such as sale or promotion pages viewed. * `checkout-start` User starting a checkout process. * `detail-page-view` Products detail page viewed. * `home-page-view` Homepage viewed. * `page-visit` Generic page visits not included in the event types above. * `purchase-complete` User finishing a purchase. * `refund` Purchased items being refunded or returned. * `remove-from-cart` Products being removed from cart. * `remove-from-list` Items being removed from a list. * `search` Product search. * `shopping-cart-page-view` User viewing a shopping cart. * `impression` List of items displayed. Used by Google Tag Manager.

        :param event_type: The event_type of this GoogleCloudRecommendationengineV1beta1UserEvent.
        :type event_type: str
        """

        self._event_type = event_type

    @property
    def product_event_detail(self):
        """Gets the product_event_detail of this GoogleCloudRecommendationengineV1beta1UserEvent.


        :return: The product_event_detail of this GoogleCloudRecommendationengineV1beta1UserEvent.
        :rtype: GoogleCloudRecommendationengineV1beta1ProductEventDetail
        """
        return self._product_event_detail

    @product_event_detail.setter
    def product_event_detail(self, product_event_detail):
        """Sets the product_event_detail of this GoogleCloudRecommendationengineV1beta1UserEvent.


        :param product_event_detail: The product_event_detail of this GoogleCloudRecommendationengineV1beta1UserEvent.
        :type product_event_detail: GoogleCloudRecommendationengineV1beta1ProductEventDetail
        """

        self._product_event_detail = product_event_detail

    @property
    def user_info(self):
        """Gets the user_info of this GoogleCloudRecommendationengineV1beta1UserEvent.


        :return: The user_info of this GoogleCloudRecommendationengineV1beta1UserEvent.
        :rtype: GoogleCloudRecommendationengineV1beta1UserInfo
        """
        return self._user_info

    @user_info.setter
    def user_info(self, user_info):
        """Sets the user_info of this GoogleCloudRecommendationengineV1beta1UserEvent.


        :param user_info: The user_info of this GoogleCloudRecommendationengineV1beta1UserEvent.
        :type user_info: GoogleCloudRecommendationengineV1beta1UserInfo
        """

        self._user_info = user_info
