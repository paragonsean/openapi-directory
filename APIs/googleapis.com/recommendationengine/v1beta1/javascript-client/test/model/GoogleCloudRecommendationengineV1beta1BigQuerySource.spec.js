/**
 * Recommendations AI (Beta)
 * Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RecommendationsAiBeta);
  }
}(this, function(expect, RecommendationsAiBeta) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RecommendationsAiBeta.GoogleCloudRecommendationengineV1beta1BigQuerySource();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GoogleCloudRecommendationengineV1beta1BigQuerySource', function() {
    it('should create an instance of GoogleCloudRecommendationengineV1beta1BigQuerySource', function() {
      // uncomment below and update the code to test GoogleCloudRecommendationengineV1beta1BigQuerySource
      //var instance = new RecommendationsAiBeta.GoogleCloudRecommendationengineV1beta1BigQuerySource();
      //expect(instance).to.be.a(RecommendationsAiBeta.GoogleCloudRecommendationengineV1beta1BigQuerySource);
    });

    it('should have the property dataSchema (base name: "dataSchema")', function() {
      // uncomment below and update the code to test the property dataSchema
      //var instance = new RecommendationsAiBeta.GoogleCloudRecommendationengineV1beta1BigQuerySource();
      //expect(instance).to.be();
    });

    it('should have the property datasetId (base name: "datasetId")', function() {
      // uncomment below and update the code to test the property datasetId
      //var instance = new RecommendationsAiBeta.GoogleCloudRecommendationengineV1beta1BigQuerySource();
      //expect(instance).to.be();
    });

    it('should have the property gcsStagingDir (base name: "gcsStagingDir")', function() {
      // uncomment below and update the code to test the property gcsStagingDir
      //var instance = new RecommendationsAiBeta.GoogleCloudRecommendationengineV1beta1BigQuerySource();
      //expect(instance).to.be();
    });

    it('should have the property projectId (base name: "projectId")', function() {
      // uncomment below and update the code to test the property projectId
      //var instance = new RecommendationsAiBeta.GoogleCloudRecommendationengineV1beta1BigQuerySource();
      //expect(instance).to.be();
    });

    it('should have the property tableId (base name: "tableId")', function() {
      // uncomment below and update the code to test the property tableId
      //var instance = new RecommendationsAiBeta.GoogleCloudRecommendationengineV1beta1BigQuerySource();
      //expect(instance).to.be();
    });

  });

}));
