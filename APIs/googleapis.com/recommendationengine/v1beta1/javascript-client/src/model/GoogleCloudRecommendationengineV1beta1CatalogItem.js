/**
 * Recommendations AI (Beta)
 * Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy from './GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy';
import GoogleCloudRecommendationengineV1beta1FeatureMap from './GoogleCloudRecommendationengineV1beta1FeatureMap';
import GoogleCloudRecommendationengineV1beta1ProductCatalogItem from './GoogleCloudRecommendationengineV1beta1ProductCatalogItem';

/**
 * The GoogleCloudRecommendationengineV1beta1CatalogItem model module.
 * @module model/GoogleCloudRecommendationengineV1beta1CatalogItem
 * @version v1beta1
 */
class GoogleCloudRecommendationengineV1beta1CatalogItem {
    /**
     * Constructs a new <code>GoogleCloudRecommendationengineV1beta1CatalogItem</code>.
     * CatalogItem captures all metadata information of items to be recommended.
     * @alias module:model/GoogleCloudRecommendationengineV1beta1CatalogItem
     */
    constructor() { 
        
        GoogleCloudRecommendationengineV1beta1CatalogItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRecommendationengineV1beta1CatalogItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRecommendationengineV1beta1CatalogItem} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRecommendationengineV1beta1CatalogItem} The populated <code>GoogleCloudRecommendationengineV1beta1CatalogItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRecommendationengineV1beta1CatalogItem();

            if (data.hasOwnProperty('categoryHierarchies')) {
                obj['categoryHierarchies'] = ApiClient.convertToType(data['categoryHierarchies'], [GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy]);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('itemAttributes')) {
                obj['itemAttributes'] = GoogleCloudRecommendationengineV1beta1FeatureMap.constructFromObject(data['itemAttributes']);
            }
            if (data.hasOwnProperty('itemGroupId')) {
                obj['itemGroupId'] = ApiClient.convertToType(data['itemGroupId'], 'String');
            }
            if (data.hasOwnProperty('languageCode')) {
                obj['languageCode'] = ApiClient.convertToType(data['languageCode'], 'String');
            }
            if (data.hasOwnProperty('productMetadata')) {
                obj['productMetadata'] = GoogleCloudRecommendationengineV1beta1ProductCatalogItem.constructFromObject(data['productMetadata']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRecommendationengineV1beta1CatalogItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRecommendationengineV1beta1CatalogItem</code>.
     */
    static validateJSON(data) {
        if (data['categoryHierarchies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['categoryHierarchies'])) {
                throw new Error("Expected the field `categoryHierarchies` to be an array in the JSON data but got " + data['categoryHierarchies']);
            }
            // validate the optional field `categoryHierarchies` (array)
            for (const item of data['categoryHierarchies']) {
                GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `itemAttributes`
        if (data['itemAttributes']) { // data not null
          GoogleCloudRecommendationengineV1beta1FeatureMap.validateJSON(data['itemAttributes']);
        }
        // ensure the json data is a string
        if (data['itemGroupId'] && !(typeof data['itemGroupId'] === 'string' || data['itemGroupId'] instanceof String)) {
            throw new Error("Expected the field `itemGroupId` to be a primitive type in the JSON string but got " + data['itemGroupId']);
        }
        // ensure the json data is a string
        if (data['languageCode'] && !(typeof data['languageCode'] === 'string' || data['languageCode'] instanceof String)) {
            throw new Error("Expected the field `languageCode` to be a primitive type in the JSON string but got " + data['languageCode']);
        }
        // validate the optional field `productMetadata`
        if (data['productMetadata']) { // data not null
          GoogleCloudRecommendationengineV1beta1ProductCatalogItem.validateJSON(data['productMetadata']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * Required. Catalog item categories. This field is repeated for supporting one catalog item belonging to several parallel category hierarchies. For example, if a shoes product belongs to both [\"Shoes & Accessories\" -> \"Shoes\"] and [\"Sports & Fitness\" -> \"Athletic Clothing\" -> \"Shoes\"], it could be represented as: \"categoryHierarchies\": [ { \"categories\": [\"Shoes & Accessories\", \"Shoes\"]}, { \"categories\": [\"Sports & Fitness\", \"Athletic Clothing\", \"Shoes\"] } ]
 * @member {Array.<module:model/GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy>} categoryHierarchies
 */
GoogleCloudRecommendationengineV1beta1CatalogItem.prototype['categoryHierarchies'] = undefined;

/**
 * Optional. Catalog item description. UTF-8 encoded string with a length limit of 5 KiB.
 * @member {String} description
 */
GoogleCloudRecommendationengineV1beta1CatalogItem.prototype['description'] = undefined;

/**
 * Required. Catalog item identifier. UTF-8 encoded string with a length limit of 128 bytes. This id must be unique among all catalog items within the same catalog. It should also be used when logging user events in order for the user events to be joined with the Catalog.
 * @member {String} id
 */
GoogleCloudRecommendationengineV1beta1CatalogItem.prototype['id'] = undefined;

/**
 * @member {module:model/GoogleCloudRecommendationengineV1beta1FeatureMap} itemAttributes
 */
GoogleCloudRecommendationengineV1beta1CatalogItem.prototype['itemAttributes'] = undefined;

/**
 * Optional. Variant group identifier for prediction results. UTF-8 encoded string with a length limit of 128 bytes. This field must be enabled before it can be used. [Learn more](/recommendations-ai/docs/catalog#item-group-id).
 * @member {String} itemGroupId
 */
GoogleCloudRecommendationengineV1beta1CatalogItem.prototype['itemGroupId'] = undefined;

/**
 * Optional. Deprecated. The model automatically detects the text language. Your catalog can include text in different languages, but duplicating catalog items to provide text in multiple languages can result in degraded model performance.
 * @member {String} languageCode
 */
GoogleCloudRecommendationengineV1beta1CatalogItem.prototype['languageCode'] = undefined;

/**
 * @member {module:model/GoogleCloudRecommendationengineV1beta1ProductCatalogItem} productMetadata
 */
GoogleCloudRecommendationengineV1beta1CatalogItem.prototype['productMetadata'] = undefined;

/**
 * Optional. Filtering tags associated with the catalog item. Each tag should be a UTF-8 encoded string with a length limit of 1 KiB. This tag can be used for filtering recommendation results by passing the tag as part of the predict request filter.
 * @member {Array.<String>} tags
 */
GoogleCloudRecommendationengineV1beta1CatalogItem.prototype['tags'] = undefined;

/**
 * Required. Catalog item title. UTF-8 encoded string with a length limit of 1 KiB.
 * @member {String} title
 */
GoogleCloudRecommendationengineV1beta1CatalogItem.prototype['title'] = undefined;






export default GoogleCloudRecommendationengineV1beta1CatalogItem;

