/**
 * Recommendations AI (Beta)
 * Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudRecommendationengineV1beta1Image from './GoogleCloudRecommendationengineV1beta1Image';
import GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPrice from './GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPrice';
import GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRange from './GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRange';

/**
 * The GoogleCloudRecommendationengineV1beta1ProductCatalogItem model module.
 * @module model/GoogleCloudRecommendationengineV1beta1ProductCatalogItem
 * @version v1beta1
 */
class GoogleCloudRecommendationengineV1beta1ProductCatalogItem {
    /**
     * Constructs a new <code>GoogleCloudRecommendationengineV1beta1ProductCatalogItem</code>.
     * ProductCatalogItem captures item metadata specific to retail products.
     * @alias module:model/GoogleCloudRecommendationengineV1beta1ProductCatalogItem
     */
    constructor() { 
        
        GoogleCloudRecommendationengineV1beta1ProductCatalogItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRecommendationengineV1beta1ProductCatalogItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRecommendationengineV1beta1ProductCatalogItem} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRecommendationengineV1beta1ProductCatalogItem} The populated <code>GoogleCloudRecommendationengineV1beta1ProductCatalogItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRecommendationengineV1beta1ProductCatalogItem();

            if (data.hasOwnProperty('availableQuantity')) {
                obj['availableQuantity'] = ApiClient.convertToType(data['availableQuantity'], 'String');
            }
            if (data.hasOwnProperty('canonicalProductUri')) {
                obj['canonicalProductUri'] = ApiClient.convertToType(data['canonicalProductUri'], 'String');
            }
            if (data.hasOwnProperty('costs')) {
                obj['costs'] = ApiClient.convertToType(data['costs'], {'String': 'Number'});
            }
            if (data.hasOwnProperty('currencyCode')) {
                obj['currencyCode'] = ApiClient.convertToType(data['currencyCode'], 'String');
            }
            if (data.hasOwnProperty('exactPrice')) {
                obj['exactPrice'] = GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPrice.constructFromObject(data['exactPrice']);
            }
            if (data.hasOwnProperty('images')) {
                obj['images'] = ApiClient.convertToType(data['images'], [GoogleCloudRecommendationengineV1beta1Image]);
            }
            if (data.hasOwnProperty('priceRange')) {
                obj['priceRange'] = GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRange.constructFromObject(data['priceRange']);
            }
            if (data.hasOwnProperty('stockState')) {
                obj['stockState'] = ApiClient.convertToType(data['stockState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRecommendationengineV1beta1ProductCatalogItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRecommendationengineV1beta1ProductCatalogItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['availableQuantity'] && !(typeof data['availableQuantity'] === 'string' || data['availableQuantity'] instanceof String)) {
            throw new Error("Expected the field `availableQuantity` to be a primitive type in the JSON string but got " + data['availableQuantity']);
        }
        // ensure the json data is a string
        if (data['canonicalProductUri'] && !(typeof data['canonicalProductUri'] === 'string' || data['canonicalProductUri'] instanceof String)) {
            throw new Error("Expected the field `canonicalProductUri` to be a primitive type in the JSON string but got " + data['canonicalProductUri']);
        }
        // ensure the json data is a string
        if (data['currencyCode'] && !(typeof data['currencyCode'] === 'string' || data['currencyCode'] instanceof String)) {
            throw new Error("Expected the field `currencyCode` to be a primitive type in the JSON string but got " + data['currencyCode']);
        }
        // validate the optional field `exactPrice`
        if (data['exactPrice']) { // data not null
          GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPrice.validateJSON(data['exactPrice']);
        }
        if (data['images']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['images'])) {
                throw new Error("Expected the field `images` to be an array in the JSON data but got " + data['images']);
            }
            // validate the optional field `images` (array)
            for (const item of data['images']) {
                GoogleCloudRecommendationengineV1beta1Image.validateJSON(item);
            };
        }
        // validate the optional field `priceRange`
        if (data['priceRange']) { // data not null
          GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRange.validateJSON(data['priceRange']);
        }
        // ensure the json data is a string
        if (data['stockState'] && !(typeof data['stockState'] === 'string' || data['stockState'] instanceof String)) {
            throw new Error("Expected the field `stockState` to be a primitive type in the JSON string but got " + data['stockState']);
        }

        return true;
    }


}



/**
 * Optional. The available quantity of the item.
 * @member {String} availableQuantity
 */
GoogleCloudRecommendationengineV1beta1ProductCatalogItem.prototype['availableQuantity'] = undefined;

/**
 * Optional. Canonical URL directly linking to the item detail page with a length limit of 5 KiB..
 * @member {String} canonicalProductUri
 */
GoogleCloudRecommendationengineV1beta1ProductCatalogItem.prototype['canonicalProductUri'] = undefined;

/**
 * Optional. A map to pass the costs associated with the product. For example: {\"manufacturing\": 45.5} The profit of selling this item is computed like so: * If 'exactPrice' is provided, profit = displayPrice - sum(costs) * If 'priceRange' is provided, profit = minPrice - sum(costs)
 * @member {Object.<String, Number>} costs
 */
GoogleCloudRecommendationengineV1beta1ProductCatalogItem.prototype['costs'] = undefined;

/**
 * Optional. Only required if the price is set. Currency code for price/costs. Use three-character ISO-4217 code.
 * @member {String} currencyCode
 */
GoogleCloudRecommendationengineV1beta1ProductCatalogItem.prototype['currencyCode'] = undefined;

/**
 * @member {module:model/GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPrice} exactPrice
 */
GoogleCloudRecommendationengineV1beta1ProductCatalogItem.prototype['exactPrice'] = undefined;

/**
 * Optional. Product images for the catalog item.
 * @member {Array.<module:model/GoogleCloudRecommendationengineV1beta1Image>} images
 */
GoogleCloudRecommendationengineV1beta1ProductCatalogItem.prototype['images'] = undefined;

/**
 * @member {module:model/GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRange} priceRange
 */
GoogleCloudRecommendationengineV1beta1ProductCatalogItem.prototype['priceRange'] = undefined;

/**
 * Optional. Online stock state of the catalog item. Default is `IN_STOCK`.
 * @member {module:model/GoogleCloudRecommendationengineV1beta1ProductCatalogItem.StockStateEnum} stockState
 */
GoogleCloudRecommendationengineV1beta1ProductCatalogItem.prototype['stockState'] = undefined;





/**
 * Allowed values for the <code>stockState</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudRecommendationengineV1beta1ProductCatalogItem['StockStateEnum'] = {

    /**
     * value: "STOCK_STATE_UNSPECIFIED"
     * @const
     */
    "STOCK_STATE_UNSPECIFIED": "STOCK_STATE_UNSPECIFIED",

    /**
     * value: "IN_STOCK"
     * @const
     */
    "IN_STOCK": "IN_STOCK",

    /**
     * value: "OUT_OF_STOCK"
     * @const
     */
    "OUT_OF_STOCK": "OUT_OF_STOCK",

    /**
     * value: "PREORDER"
     * @const
     */
    "PREORDER": "PREORDER",

    /**
     * value: "BACKORDER"
     * @const
     */
    "BACKORDER": "BACKORDER"
};



export default GoogleCloudRecommendationengineV1beta1ProductCatalogItem;

