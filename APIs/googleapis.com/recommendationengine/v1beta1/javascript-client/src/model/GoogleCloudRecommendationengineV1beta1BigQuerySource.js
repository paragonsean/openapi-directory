/**
 * Recommendations AI (Beta)
 * Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudRecommendationengineV1beta1BigQuerySource model module.
 * @module model/GoogleCloudRecommendationengineV1beta1BigQuerySource
 * @version v1beta1
 */
class GoogleCloudRecommendationengineV1beta1BigQuerySource {
    /**
     * Constructs a new <code>GoogleCloudRecommendationengineV1beta1BigQuerySource</code>.
     * BigQuery source import data from.
     * @alias module:model/GoogleCloudRecommendationengineV1beta1BigQuerySource
     */
    constructor() { 
        
        GoogleCloudRecommendationengineV1beta1BigQuerySource.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRecommendationengineV1beta1BigQuerySource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRecommendationengineV1beta1BigQuerySource} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRecommendationengineV1beta1BigQuerySource} The populated <code>GoogleCloudRecommendationengineV1beta1BigQuerySource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRecommendationengineV1beta1BigQuerySource();

            if (data.hasOwnProperty('dataSchema')) {
                obj['dataSchema'] = ApiClient.convertToType(data['dataSchema'], 'String');
            }
            if (data.hasOwnProperty('datasetId')) {
                obj['datasetId'] = ApiClient.convertToType(data['datasetId'], 'String');
            }
            if (data.hasOwnProperty('gcsStagingDir')) {
                obj['gcsStagingDir'] = ApiClient.convertToType(data['gcsStagingDir'], 'String');
            }
            if (data.hasOwnProperty('projectId')) {
                obj['projectId'] = ApiClient.convertToType(data['projectId'], 'String');
            }
            if (data.hasOwnProperty('tableId')) {
                obj['tableId'] = ApiClient.convertToType(data['tableId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRecommendationengineV1beta1BigQuerySource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRecommendationengineV1beta1BigQuerySource</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dataSchema'] && !(typeof data['dataSchema'] === 'string' || data['dataSchema'] instanceof String)) {
            throw new Error("Expected the field `dataSchema` to be a primitive type in the JSON string but got " + data['dataSchema']);
        }
        // ensure the json data is a string
        if (data['datasetId'] && !(typeof data['datasetId'] === 'string' || data['datasetId'] instanceof String)) {
            throw new Error("Expected the field `datasetId` to be a primitive type in the JSON string but got " + data['datasetId']);
        }
        // ensure the json data is a string
        if (data['gcsStagingDir'] && !(typeof data['gcsStagingDir'] === 'string' || data['gcsStagingDir'] instanceof String)) {
            throw new Error("Expected the field `gcsStagingDir` to be a primitive type in the JSON string but got " + data['gcsStagingDir']);
        }
        // ensure the json data is a string
        if (data['projectId'] && !(typeof data['projectId'] === 'string' || data['projectId'] instanceof String)) {
            throw new Error("Expected the field `projectId` to be a primitive type in the JSON string but got " + data['projectId']);
        }
        // ensure the json data is a string
        if (data['tableId'] && !(typeof data['tableId'] === 'string' || data['tableId'] instanceof String)) {
            throw new Error("Expected the field `tableId` to be a primitive type in the JSON string but got " + data['tableId']);
        }

        return true;
    }


}



/**
 * Optional. The schema to use when parsing the data from the source. Supported values for catalog imports: 1: \"catalog_recommendations_ai\" using https://cloud.google.com/recommendations-ai/docs/upload-catalog#json (Default for catalogItems.import) 2: \"catalog_merchant_center\" using https://cloud.google.com/recommendations-ai/docs/upload-catalog#mc Supported values for user event imports: 1: \"user_events_recommendations_ai\" using https://cloud.google.com/recommendations-ai/docs/manage-user-events#import (Default for userEvents.import) 2. \"user_events_ga360\" using https://support.google.com/analytics/answer/3437719?hl=en
 * @member {String} dataSchema
 */
GoogleCloudRecommendationengineV1beta1BigQuerySource.prototype['dataSchema'] = undefined;

/**
 * Required. The BigQuery data set to copy the data from.
 * @member {String} datasetId
 */
GoogleCloudRecommendationengineV1beta1BigQuerySource.prototype['datasetId'] = undefined;

/**
 * Optional. Intermediate Cloud Storage directory used for the import. Can be specified if one wants to have the BigQuery export to a specific Cloud Storage directory.
 * @member {String} gcsStagingDir
 */
GoogleCloudRecommendationengineV1beta1BigQuerySource.prototype['gcsStagingDir'] = undefined;

/**
 * Optional. The project id (can be project # or id) that the BigQuery source is in. If not specified, inherits the project id from the parent request.
 * @member {String} projectId
 */
GoogleCloudRecommendationengineV1beta1BigQuerySource.prototype['projectId'] = undefined;

/**
 * Required. The BigQuery table to copy the data from.
 * @member {String} tableId
 */
GoogleCloudRecommendationengineV1beta1BigQuerySource.prototype['tableId'] = undefined;






export default GoogleCloudRecommendationengineV1beta1BigQuerySource;

