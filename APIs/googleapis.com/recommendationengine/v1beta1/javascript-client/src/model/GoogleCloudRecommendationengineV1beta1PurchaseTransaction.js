/**
 * Recommendations AI (Beta)
 * Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudRecommendationengineV1beta1PurchaseTransaction model module.
 * @module model/GoogleCloudRecommendationengineV1beta1PurchaseTransaction
 * @version v1beta1
 */
class GoogleCloudRecommendationengineV1beta1PurchaseTransaction {
    /**
     * Constructs a new <code>GoogleCloudRecommendationengineV1beta1PurchaseTransaction</code>.
     * A transaction represents the entire purchase transaction.
     * @alias module:model/GoogleCloudRecommendationengineV1beta1PurchaseTransaction
     */
    constructor() { 
        
        GoogleCloudRecommendationengineV1beta1PurchaseTransaction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRecommendationengineV1beta1PurchaseTransaction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRecommendationengineV1beta1PurchaseTransaction} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRecommendationengineV1beta1PurchaseTransaction} The populated <code>GoogleCloudRecommendationengineV1beta1PurchaseTransaction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRecommendationengineV1beta1PurchaseTransaction();

            if (data.hasOwnProperty('costs')) {
                obj['costs'] = ApiClient.convertToType(data['costs'], {'String': 'Number'});
            }
            if (data.hasOwnProperty('currencyCode')) {
                obj['currencyCode'] = ApiClient.convertToType(data['currencyCode'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('revenue')) {
                obj['revenue'] = ApiClient.convertToType(data['revenue'], 'Number');
            }
            if (data.hasOwnProperty('taxes')) {
                obj['taxes'] = ApiClient.convertToType(data['taxes'], {'String': 'Number'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRecommendationengineV1beta1PurchaseTransaction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRecommendationengineV1beta1PurchaseTransaction</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['currencyCode'] && !(typeof data['currencyCode'] === 'string' || data['currencyCode'] instanceof String)) {
            throw new Error("Expected the field `currencyCode` to be a primitive type in the JSON string but got " + data['currencyCode']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }

        return true;
    }


}



/**
 * Optional. All the costs associated with the product. These can be manufacturing costs, shipping expenses not borne by the end user, or any other costs. Total product cost such that profit = revenue - (sum(taxes) + sum(costs)) If product_cost is not set, then profit = revenue - tax - shipping - sum(CatalogItem.costs). If CatalogItem.cost is not specified for one of the items, CatalogItem.cost based profit *cannot* be calculated for this Transaction.
 * @member {Object.<String, Number>} costs
 */
GoogleCloudRecommendationengineV1beta1PurchaseTransaction.prototype['costs'] = undefined;

/**
 * Required. Currency code. Use three-character ISO-4217 code. This field is not required if the event type is `refund`.
 * @member {String} currencyCode
 */
GoogleCloudRecommendationengineV1beta1PurchaseTransaction.prototype['currencyCode'] = undefined;

/**
 * Optional. The transaction ID with a length limit of 128 bytes.
 * @member {String} id
 */
GoogleCloudRecommendationengineV1beta1PurchaseTransaction.prototype['id'] = undefined;

/**
 * Required. Total revenue or grand total associated with the transaction. This value include shipping, tax, or other adjustments to total revenue that you want to include as part of your revenue calculations. This field is not required if the event type is `refund`.
 * @member {Number} revenue
 */
GoogleCloudRecommendationengineV1beta1PurchaseTransaction.prototype['revenue'] = undefined;

/**
 * Optional. All the taxes associated with the transaction.
 * @member {Object.<String, Number>} taxes
 */
GoogleCloudRecommendationengineV1beta1PurchaseTransaction.prototype['taxes'] = undefined;






export default GoogleCloudRecommendationengineV1beta1PurchaseTransaction;

