/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClearValuesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClearValuesResponse::OAIClearValuesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClearValuesResponse::OAIClearValuesResponse() {
    this->initializeModel();
}

OAIClearValuesResponse::~OAIClearValuesResponse() {}

void OAIClearValuesResponse::initializeModel() {

    m_cleared_range_isSet = false;
    m_cleared_range_isValid = false;

    m_spreadsheet_id_isSet = false;
    m_spreadsheet_id_isValid = false;
}

void OAIClearValuesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClearValuesResponse::fromJsonObject(QJsonObject json) {

    m_cleared_range_isValid = ::OpenAPI::fromJsonValue(m_cleared_range, json[QString("clearedRange")]);
    m_cleared_range_isSet = !json[QString("clearedRange")].isNull() && m_cleared_range_isValid;

    m_spreadsheet_id_isValid = ::OpenAPI::fromJsonValue(m_spreadsheet_id, json[QString("spreadsheetId")]);
    m_spreadsheet_id_isSet = !json[QString("spreadsheetId")].isNull() && m_spreadsheet_id_isValid;
}

QString OAIClearValuesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClearValuesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_cleared_range_isSet) {
        obj.insert(QString("clearedRange"), ::OpenAPI::toJsonValue(m_cleared_range));
    }
    if (m_spreadsheet_id_isSet) {
        obj.insert(QString("spreadsheetId"), ::OpenAPI::toJsonValue(m_spreadsheet_id));
    }
    return obj;
}

QString OAIClearValuesResponse::getClearedRange() const {
    return m_cleared_range;
}
void OAIClearValuesResponse::setClearedRange(const QString &cleared_range) {
    m_cleared_range = cleared_range;
    m_cleared_range_isSet = true;
}

bool OAIClearValuesResponse::is_cleared_range_Set() const{
    return m_cleared_range_isSet;
}

bool OAIClearValuesResponse::is_cleared_range_Valid() const{
    return m_cleared_range_isValid;
}

QString OAIClearValuesResponse::getSpreadsheetId() const {
    return m_spreadsheet_id;
}
void OAIClearValuesResponse::setSpreadsheetId(const QString &spreadsheet_id) {
    m_spreadsheet_id = spreadsheet_id;
    m_spreadsheet_id_isSet = true;
}

bool OAIClearValuesResponse::is_spreadsheet_id_Set() const{
    return m_spreadsheet_id_isSet;
}

bool OAIClearValuesResponse::is_spreadsheet_id_Valid() const{
    return m_spreadsheet_id_isValid;
}

bool OAIClearValuesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cleared_range_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spreadsheet_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClearValuesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
