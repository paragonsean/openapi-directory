/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBasicChartSeries.h
 *
 * A single series of data in a chart. For example, if charting stock prices over time, multiple series may exist, one for the \&quot;Open Price\&quot;, \&quot;High Price\&quot;, \&quot;Low Price\&quot; and \&quot;Close Price\&quot;.
 */

#ifndef OAIBasicChartSeries_H
#define OAIBasicChartSeries_H

#include <QJsonObject>

#include "OAIBasicSeriesDataPointStyleOverride.h"
#include "OAIChartData.h"
#include "OAIColor.h"
#include "OAIColorStyle.h"
#include "OAIDataLabel.h"
#include "OAILineStyle.h"
#include "OAIPointStyle.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIColor;
class OAIColorStyle;
class OAIDataLabel;
class OAILineStyle;
class OAIPointStyle;
class OAIChartData;
class OAIBasicSeriesDataPointStyleOverride;

class OAIBasicChartSeries : public OAIObject {
public:
    OAIBasicChartSeries();
    OAIBasicChartSeries(QString json);
    ~OAIBasicChartSeries() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIColor getColor() const;
    void setColor(const OAIColor &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    OAIColorStyle getColorStyle() const;
    void setColorStyle(const OAIColorStyle &color_style);
    bool is_color_style_Set() const;
    bool is_color_style_Valid() const;

    OAIDataLabel getDataLabel() const;
    void setDataLabel(const OAIDataLabel &data_label);
    bool is_data_label_Set() const;
    bool is_data_label_Valid() const;

    OAILineStyle getLineStyle() const;
    void setLineStyle(const OAILineStyle &line_style);
    bool is_line_style_Set() const;
    bool is_line_style_Valid() const;

    OAIPointStyle getPointStyle() const;
    void setPointStyle(const OAIPointStyle &point_style);
    bool is_point_style_Set() const;
    bool is_point_style_Valid() const;

    OAIChartData getSeries() const;
    void setSeries(const OAIChartData &series);
    bool is_series_Set() const;
    bool is_series_Valid() const;

    QList<OAIBasicSeriesDataPointStyleOverride> getStyleOverrides() const;
    void setStyleOverrides(const QList<OAIBasicSeriesDataPointStyleOverride> &style_overrides);
    bool is_style_overrides_Set() const;
    bool is_style_overrides_Valid() const;

    QString getTargetAxis() const;
    void setTargetAxis(const QString &target_axis);
    bool is_target_axis_Set() const;
    bool is_target_axis_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIColor m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    OAIColorStyle m_color_style;
    bool m_color_style_isSet;
    bool m_color_style_isValid;

    OAIDataLabel m_data_label;
    bool m_data_label_isSet;
    bool m_data_label_isValid;

    OAILineStyle m_line_style;
    bool m_line_style_isSet;
    bool m_line_style_isValid;

    OAIPointStyle m_point_style;
    bool m_point_style_isSet;
    bool m_point_style_isValid;

    OAIChartData m_series;
    bool m_series_isSet;
    bool m_series_isValid;

    QList<OAIBasicSeriesDataPointStyleOverride> m_style_overrides;
    bool m_style_overrides_isSet;
    bool m_style_overrides_isValid;

    QString m_target_axis;
    bool m_target_axis_isSet;
    bool m_target_axis_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBasicChartSeries)

#endif // OAIBasicChartSeries_H
