/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBigQueryQuerySpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBigQueryQuerySpec::OAIBigQueryQuerySpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBigQueryQuerySpec::OAIBigQueryQuerySpec() {
    this->initializeModel();
}

OAIBigQueryQuerySpec::~OAIBigQueryQuerySpec() {}

void OAIBigQueryQuerySpec::initializeModel() {

    m_raw_query_isSet = false;
    m_raw_query_isValid = false;
}

void OAIBigQueryQuerySpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBigQueryQuerySpec::fromJsonObject(QJsonObject json) {

    m_raw_query_isValid = ::OpenAPI::fromJsonValue(m_raw_query, json[QString("rawQuery")]);
    m_raw_query_isSet = !json[QString("rawQuery")].isNull() && m_raw_query_isValid;
}

QString OAIBigQueryQuerySpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBigQueryQuerySpec::asJsonObject() const {
    QJsonObject obj;
    if (m_raw_query_isSet) {
        obj.insert(QString("rawQuery"), ::OpenAPI::toJsonValue(m_raw_query));
    }
    return obj;
}

QString OAIBigQueryQuerySpec::getRawQuery() const {
    return m_raw_query;
}
void OAIBigQueryQuerySpec::setRawQuery(const QString &raw_query) {
    m_raw_query = raw_query;
    m_raw_query_isSet = true;
}

bool OAIBigQueryQuerySpec::is_raw_query_Set() const{
    return m_raw_query_isSet;
}

bool OAIBigQueryQuerySpec::is_raw_query_Valid() const{
    return m_raw_query_isValid;
}

bool OAIBigQueryQuerySpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_raw_query_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBigQueryQuerySpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
