/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISheetProperties.h
 *
 * Properties of a sheet.
 */

#ifndef OAISheetProperties_H
#define OAISheetProperties_H

#include <QJsonObject>

#include "OAIColor.h"
#include "OAIColorStyle.h"
#include "OAIDataSourceSheetProperties.h"
#include "OAIGridProperties.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDataSourceSheetProperties;
class OAIGridProperties;
class OAIColor;
class OAIColorStyle;

class OAISheetProperties : public OAIObject {
public:
    OAISheetProperties();
    OAISheetProperties(QString json);
    ~OAISheetProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDataSourceSheetProperties getDataSourceSheetProperties() const;
    void setDataSourceSheetProperties(const OAIDataSourceSheetProperties &data_source_sheet_properties);
    bool is_data_source_sheet_properties_Set() const;
    bool is_data_source_sheet_properties_Valid() const;

    OAIGridProperties getGridProperties() const;
    void setGridProperties(const OAIGridProperties &grid_properties);
    bool is_grid_properties_Set() const;
    bool is_grid_properties_Valid() const;

    bool isHidden() const;
    void setHidden(const bool &hidden);
    bool is_hidden_Set() const;
    bool is_hidden_Valid() const;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    bool isRightToLeft() const;
    void setRightToLeft(const bool &right_to_left);
    bool is_right_to_left_Set() const;
    bool is_right_to_left_Valid() const;

    qint32 getSheetId() const;
    void setSheetId(const qint32 &sheet_id);
    bool is_sheet_id_Set() const;
    bool is_sheet_id_Valid() const;

    QString getSheetType() const;
    void setSheetType(const QString &sheet_type);
    bool is_sheet_type_Set() const;
    bool is_sheet_type_Valid() const;

    OAIColor getTabColor() const;
    void setTabColor(const OAIColor &tab_color);
    bool is_tab_color_Set() const;
    bool is_tab_color_Valid() const;

    OAIColorStyle getTabColorStyle() const;
    void setTabColorStyle(const OAIColorStyle &tab_color_style);
    bool is_tab_color_style_Set() const;
    bool is_tab_color_style_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDataSourceSheetProperties m_data_source_sheet_properties;
    bool m_data_source_sheet_properties_isSet;
    bool m_data_source_sheet_properties_isValid;

    OAIGridProperties m_grid_properties;
    bool m_grid_properties_isSet;
    bool m_grid_properties_isValid;

    bool m_hidden;
    bool m_hidden_isSet;
    bool m_hidden_isValid;

    qint32 m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    bool m_right_to_left;
    bool m_right_to_left_isSet;
    bool m_right_to_left_isValid;

    qint32 m_sheet_id;
    bool m_sheet_id_isSet;
    bool m_sheet_id_isValid;

    QString m_sheet_type;
    bool m_sheet_type_isSet;
    bool m_sheet_type_isValid;

    OAIColor m_tab_color;
    bool m_tab_color_isSet;
    bool m_tab_color_isValid;

    OAIColorStyle m_tab_color_style;
    bool m_tab_color_style_isSet;
    bool m_tab_color_style_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISheetProperties)

#endif // OAISheetProperties_H
