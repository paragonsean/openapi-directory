/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataSourceSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataSourceSpec::OAIDataSourceSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataSourceSpec::OAIDataSourceSpec() {
    this->initializeModel();
}

OAIDataSourceSpec::~OAIDataSourceSpec() {}

void OAIDataSourceSpec::initializeModel() {

    m_big_query_isSet = false;
    m_big_query_isValid = false;

    m_parameters_isSet = false;
    m_parameters_isValid = false;
}

void OAIDataSourceSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataSourceSpec::fromJsonObject(QJsonObject json) {

    m_big_query_isValid = ::OpenAPI::fromJsonValue(m_big_query, json[QString("bigQuery")]);
    m_big_query_isSet = !json[QString("bigQuery")].isNull() && m_big_query_isValid;

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("parameters")]);
    m_parameters_isSet = !json[QString("parameters")].isNull() && m_parameters_isValid;
}

QString OAIDataSourceSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataSourceSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_big_query.isSet()) {
        obj.insert(QString("bigQuery"), ::OpenAPI::toJsonValue(m_big_query));
    }
    if (m_parameters.size() > 0) {
        obj.insert(QString("parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    return obj;
}

OAIBigQueryDataSourceSpec OAIDataSourceSpec::getBigQuery() const {
    return m_big_query;
}
void OAIDataSourceSpec::setBigQuery(const OAIBigQueryDataSourceSpec &big_query) {
    m_big_query = big_query;
    m_big_query_isSet = true;
}

bool OAIDataSourceSpec::is_big_query_Set() const{
    return m_big_query_isSet;
}

bool OAIDataSourceSpec::is_big_query_Valid() const{
    return m_big_query_isValid;
}

QList<OAIDataSourceParameter> OAIDataSourceSpec::getParameters() const {
    return m_parameters;
}
void OAIDataSourceSpec::setParameters(const QList<OAIDataSourceParameter> &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAIDataSourceSpec::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAIDataSourceSpec::is_parameters_Valid() const{
    return m_parameters_isValid;
}

bool OAIDataSourceSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_big_query.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataSourceSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
