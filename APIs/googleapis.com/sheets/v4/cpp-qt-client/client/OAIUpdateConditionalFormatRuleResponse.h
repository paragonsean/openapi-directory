/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateConditionalFormatRuleResponse.h
 *
 * The result of updating a conditional format rule.
 */

#ifndef OAIUpdateConditionalFormatRuleResponse_H
#define OAIUpdateConditionalFormatRuleResponse_H

#include <QJsonObject>

#include "OAIConditionalFormatRule.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConditionalFormatRule;

class OAIUpdateConditionalFormatRuleResponse : public OAIObject {
public:
    OAIUpdateConditionalFormatRuleResponse();
    OAIUpdateConditionalFormatRuleResponse(QString json);
    ~OAIUpdateConditionalFormatRuleResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getNewIndex() const;
    void setNewIndex(const qint32 &new_index);
    bool is_new_index_Set() const;
    bool is_new_index_Valid() const;

    OAIConditionalFormatRule getNewRule() const;
    void setNewRule(const OAIConditionalFormatRule &new_rule);
    bool is_new_rule_Set() const;
    bool is_new_rule_Valid() const;

    qint32 getOldIndex() const;
    void setOldIndex(const qint32 &old_index);
    bool is_old_index_Set() const;
    bool is_old_index_Valid() const;

    OAIConditionalFormatRule getOldRule() const;
    void setOldRule(const OAIConditionalFormatRule &old_rule);
    bool is_old_rule_Set() const;
    bool is_old_rule_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_new_index;
    bool m_new_index_isSet;
    bool m_new_index_isValid;

    OAIConditionalFormatRule m_new_rule;
    bool m_new_rule_isSet;
    bool m_new_rule_isValid;

    qint32 m_old_index;
    bool m_old_index_isSet;
    bool m_old_index_isValid;

    OAIConditionalFormatRule m_old_rule;
    bool m_old_rule_isSet;
    bool m_old_rule_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateConditionalFormatRuleResponse)

#endif // OAIUpdateConditionalFormatRuleResponse_H
