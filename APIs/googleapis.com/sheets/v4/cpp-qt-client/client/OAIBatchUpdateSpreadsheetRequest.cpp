/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchUpdateSpreadsheetRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchUpdateSpreadsheetRequest::OAIBatchUpdateSpreadsheetRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchUpdateSpreadsheetRequest::OAIBatchUpdateSpreadsheetRequest() {
    this->initializeModel();
}

OAIBatchUpdateSpreadsheetRequest::~OAIBatchUpdateSpreadsheetRequest() {}

void OAIBatchUpdateSpreadsheetRequest::initializeModel() {

    m_include_spreadsheet_in_response_isSet = false;
    m_include_spreadsheet_in_response_isValid = false;

    m_requests_isSet = false;
    m_requests_isValid = false;

    m_response_include_grid_data_isSet = false;
    m_response_include_grid_data_isValid = false;

    m_response_ranges_isSet = false;
    m_response_ranges_isValid = false;
}

void OAIBatchUpdateSpreadsheetRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchUpdateSpreadsheetRequest::fromJsonObject(QJsonObject json) {

    m_include_spreadsheet_in_response_isValid = ::OpenAPI::fromJsonValue(m_include_spreadsheet_in_response, json[QString("includeSpreadsheetInResponse")]);
    m_include_spreadsheet_in_response_isSet = !json[QString("includeSpreadsheetInResponse")].isNull() && m_include_spreadsheet_in_response_isValid;

    m_requests_isValid = ::OpenAPI::fromJsonValue(m_requests, json[QString("requests")]);
    m_requests_isSet = !json[QString("requests")].isNull() && m_requests_isValid;

    m_response_include_grid_data_isValid = ::OpenAPI::fromJsonValue(m_response_include_grid_data, json[QString("responseIncludeGridData")]);
    m_response_include_grid_data_isSet = !json[QString("responseIncludeGridData")].isNull() && m_response_include_grid_data_isValid;

    m_response_ranges_isValid = ::OpenAPI::fromJsonValue(m_response_ranges, json[QString("responseRanges")]);
    m_response_ranges_isSet = !json[QString("responseRanges")].isNull() && m_response_ranges_isValid;
}

QString OAIBatchUpdateSpreadsheetRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchUpdateSpreadsheetRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_include_spreadsheet_in_response_isSet) {
        obj.insert(QString("includeSpreadsheetInResponse"), ::OpenAPI::toJsonValue(m_include_spreadsheet_in_response));
    }
    if (m_requests.size() > 0) {
        obj.insert(QString("requests"), ::OpenAPI::toJsonValue(m_requests));
    }
    if (m_response_include_grid_data_isSet) {
        obj.insert(QString("responseIncludeGridData"), ::OpenAPI::toJsonValue(m_response_include_grid_data));
    }
    if (m_response_ranges.size() > 0) {
        obj.insert(QString("responseRanges"), ::OpenAPI::toJsonValue(m_response_ranges));
    }
    return obj;
}

bool OAIBatchUpdateSpreadsheetRequest::isIncludeSpreadsheetInResponse() const {
    return m_include_spreadsheet_in_response;
}
void OAIBatchUpdateSpreadsheetRequest::setIncludeSpreadsheetInResponse(const bool &include_spreadsheet_in_response) {
    m_include_spreadsheet_in_response = include_spreadsheet_in_response;
    m_include_spreadsheet_in_response_isSet = true;
}

bool OAIBatchUpdateSpreadsheetRequest::is_include_spreadsheet_in_response_Set() const{
    return m_include_spreadsheet_in_response_isSet;
}

bool OAIBatchUpdateSpreadsheetRequest::is_include_spreadsheet_in_response_Valid() const{
    return m_include_spreadsheet_in_response_isValid;
}

QList<OAIRequest> OAIBatchUpdateSpreadsheetRequest::getRequests() const {
    return m_requests;
}
void OAIBatchUpdateSpreadsheetRequest::setRequests(const QList<OAIRequest> &requests) {
    m_requests = requests;
    m_requests_isSet = true;
}

bool OAIBatchUpdateSpreadsheetRequest::is_requests_Set() const{
    return m_requests_isSet;
}

bool OAIBatchUpdateSpreadsheetRequest::is_requests_Valid() const{
    return m_requests_isValid;
}

bool OAIBatchUpdateSpreadsheetRequest::isResponseIncludeGridData() const {
    return m_response_include_grid_data;
}
void OAIBatchUpdateSpreadsheetRequest::setResponseIncludeGridData(const bool &response_include_grid_data) {
    m_response_include_grid_data = response_include_grid_data;
    m_response_include_grid_data_isSet = true;
}

bool OAIBatchUpdateSpreadsheetRequest::is_response_include_grid_data_Set() const{
    return m_response_include_grid_data_isSet;
}

bool OAIBatchUpdateSpreadsheetRequest::is_response_include_grid_data_Valid() const{
    return m_response_include_grid_data_isValid;
}

QList<QString> OAIBatchUpdateSpreadsheetRequest::getResponseRanges() const {
    return m_response_ranges;
}
void OAIBatchUpdateSpreadsheetRequest::setResponseRanges(const QList<QString> &response_ranges) {
    m_response_ranges = response_ranges;
    m_response_ranges_isSet = true;
}

bool OAIBatchUpdateSpreadsheetRequest::is_response_ranges_Set() const{
    return m_response_ranges_isSet;
}

bool OAIBatchUpdateSpreadsheetRequest::is_response_ranges_Valid() const{
    return m_response_ranges_isValid;
}

bool OAIBatchUpdateSpreadsheetRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_include_spreadsheet_in_response_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_requests.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_include_grid_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_ranges.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchUpdateSpreadsheetRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
