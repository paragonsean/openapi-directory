/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPivotTable.h
 *
 * A pivot table.
 */

#ifndef OAIPivotTable_H
#define OAIPivotTable_H

#include <QJsonObject>

#include "OAIDataExecutionStatus.h"
#include "OAIGridRange.h"
#include "OAIPivotFilterCriteria.h"
#include "OAIPivotFilterSpec.h"
#include "OAIPivotGroup.h"
#include "OAIPivotValue.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPivotGroup;
class OAIPivotFilterCriteria;
class OAIDataExecutionStatus;
class OAIPivotFilterSpec;
class OAIGridRange;
class OAIPivotValue;

class OAIPivotTable : public OAIObject {
public:
    OAIPivotTable();
    OAIPivotTable(QString json);
    ~OAIPivotTable() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIPivotGroup> getColumns() const;
    void setColumns(const QList<OAIPivotGroup> &columns);
    bool is_columns_Set() const;
    bool is_columns_Valid() const;

    Q_DECL_DEPRECATED QMap<QString, OAIPivotFilterCriteria> getCriteria() const;
    Q_DECL_DEPRECATED void setCriteria(const QMap<QString, OAIPivotFilterCriteria> &criteria);
    Q_DECL_DEPRECATED bool is_criteria_Set() const;
    Q_DECL_DEPRECATED bool is_criteria_Valid() const;

    OAIDataExecutionStatus getDataExecutionStatus() const;
    void setDataExecutionStatus(const OAIDataExecutionStatus &data_execution_status);
    bool is_data_execution_status_Set() const;
    bool is_data_execution_status_Valid() const;

    QString getDataSourceId() const;
    void setDataSourceId(const QString &data_source_id);
    bool is_data_source_id_Set() const;
    bool is_data_source_id_Valid() const;

    QList<OAIPivotFilterSpec> getFilterSpecs() const;
    void setFilterSpecs(const QList<OAIPivotFilterSpec> &filter_specs);
    bool is_filter_specs_Set() const;
    bool is_filter_specs_Valid() const;

    QList<OAIPivotGroup> getRows() const;
    void setRows(const QList<OAIPivotGroup> &rows);
    bool is_rows_Set() const;
    bool is_rows_Valid() const;

    OAIGridRange getSource() const;
    void setSource(const OAIGridRange &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getValueLayout() const;
    void setValueLayout(const QString &value_layout);
    bool is_value_layout_Set() const;
    bool is_value_layout_Valid() const;

    QList<OAIPivotValue> getValues() const;
    void setValues(const QList<OAIPivotValue> &values);
    bool is_values_Set() const;
    bool is_values_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIPivotGroup> m_columns;
    bool m_columns_isSet;
    bool m_columns_isValid;

    QMap<QString, OAIPivotFilterCriteria> m_criteria;
    bool m_criteria_isSet;
    bool m_criteria_isValid;

    OAIDataExecutionStatus m_data_execution_status;
    bool m_data_execution_status_isSet;
    bool m_data_execution_status_isValid;

    QString m_data_source_id;
    bool m_data_source_id_isSet;
    bool m_data_source_id_isValid;

    QList<OAIPivotFilterSpec> m_filter_specs;
    bool m_filter_specs_isSet;
    bool m_filter_specs_isValid;

    QList<OAIPivotGroup> m_rows;
    bool m_rows_isSet;
    bool m_rows_isValid;

    OAIGridRange m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_value_layout;
    bool m_value_layout_isSet;
    bool m_value_layout_isValid;

    QList<OAIPivotValue> m_values;
    bool m_values_isSet;
    bool m_values_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPivotTable)

#endif // OAIPivotTable_H
