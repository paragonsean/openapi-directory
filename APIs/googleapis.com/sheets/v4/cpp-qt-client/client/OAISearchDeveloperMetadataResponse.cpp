/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISearchDeveloperMetadataResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISearchDeveloperMetadataResponse::OAISearchDeveloperMetadataResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISearchDeveloperMetadataResponse::OAISearchDeveloperMetadataResponse() {
    this->initializeModel();
}

OAISearchDeveloperMetadataResponse::~OAISearchDeveloperMetadataResponse() {}

void OAISearchDeveloperMetadataResponse::initializeModel() {

    m_matched_developer_metadata_isSet = false;
    m_matched_developer_metadata_isValid = false;
}

void OAISearchDeveloperMetadataResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISearchDeveloperMetadataResponse::fromJsonObject(QJsonObject json) {

    m_matched_developer_metadata_isValid = ::OpenAPI::fromJsonValue(m_matched_developer_metadata, json[QString("matchedDeveloperMetadata")]);
    m_matched_developer_metadata_isSet = !json[QString("matchedDeveloperMetadata")].isNull() && m_matched_developer_metadata_isValid;
}

QString OAISearchDeveloperMetadataResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISearchDeveloperMetadataResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_matched_developer_metadata.size() > 0) {
        obj.insert(QString("matchedDeveloperMetadata"), ::OpenAPI::toJsonValue(m_matched_developer_metadata));
    }
    return obj;
}

QList<OAIMatchedDeveloperMetadata> OAISearchDeveloperMetadataResponse::getMatchedDeveloperMetadata() const {
    return m_matched_developer_metadata;
}
void OAISearchDeveloperMetadataResponse::setMatchedDeveloperMetadata(const QList<OAIMatchedDeveloperMetadata> &matched_developer_metadata) {
    m_matched_developer_metadata = matched_developer_metadata;
    m_matched_developer_metadata_isSet = true;
}

bool OAISearchDeveloperMetadataResponse::is_matched_developer_metadata_Set() const{
    return m_matched_developer_metadata_isSet;
}

bool OAISearchDeveloperMetadataResponse::is_matched_developer_metadata_Valid() const{
    return m_matched_developer_metadata_isValid;
}

bool OAISearchDeveloperMetadataResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_matched_developer_metadata.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISearchDeveloperMetadataResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
