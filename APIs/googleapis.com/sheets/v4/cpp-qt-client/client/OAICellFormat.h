/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICellFormat.h
 *
 * The format of a cell.
 */

#ifndef OAICellFormat_H
#define OAICellFormat_H

#include <QJsonObject>

#include "OAIBorders.h"
#include "OAIColor.h"
#include "OAIColorStyle.h"
#include "OAINumberFormat.h"
#include "OAIPadding.h"
#include "OAITextFormat.h"
#include "OAITextRotation.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIColor;
class OAIColorStyle;
class OAIBorders;
class OAINumberFormat;
class OAIPadding;
class OAITextFormat;
class OAITextRotation;

class OAICellFormat : public OAIObject {
public:
    OAICellFormat();
    OAICellFormat(QString json);
    ~OAICellFormat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIColor getBackgroundColor() const;
    void setBackgroundColor(const OAIColor &background_color);
    bool is_background_color_Set() const;
    bool is_background_color_Valid() const;

    OAIColorStyle getBackgroundColorStyle() const;
    void setBackgroundColorStyle(const OAIColorStyle &background_color_style);
    bool is_background_color_style_Set() const;
    bool is_background_color_style_Valid() const;

    OAIBorders getBorders() const;
    void setBorders(const OAIBorders &borders);
    bool is_borders_Set() const;
    bool is_borders_Valid() const;

    QString getHorizontalAlignment() const;
    void setHorizontalAlignment(const QString &horizontal_alignment);
    bool is_horizontal_alignment_Set() const;
    bool is_horizontal_alignment_Valid() const;

    QString getHyperlinkDisplayType() const;
    void setHyperlinkDisplayType(const QString &hyperlink_display_type);
    bool is_hyperlink_display_type_Set() const;
    bool is_hyperlink_display_type_Valid() const;

    OAINumberFormat getNumberFormat() const;
    void setNumberFormat(const OAINumberFormat &number_format);
    bool is_number_format_Set() const;
    bool is_number_format_Valid() const;

    OAIPadding getPadding() const;
    void setPadding(const OAIPadding &padding);
    bool is_padding_Set() const;
    bool is_padding_Valid() const;

    QString getTextDirection() const;
    void setTextDirection(const QString &text_direction);
    bool is_text_direction_Set() const;
    bool is_text_direction_Valid() const;

    OAITextFormat getTextFormat() const;
    void setTextFormat(const OAITextFormat &text_format);
    bool is_text_format_Set() const;
    bool is_text_format_Valid() const;

    OAITextRotation getTextRotation() const;
    void setTextRotation(const OAITextRotation &text_rotation);
    bool is_text_rotation_Set() const;
    bool is_text_rotation_Valid() const;

    QString getVerticalAlignment() const;
    void setVerticalAlignment(const QString &vertical_alignment);
    bool is_vertical_alignment_Set() const;
    bool is_vertical_alignment_Valid() const;

    QString getWrapStrategy() const;
    void setWrapStrategy(const QString &wrap_strategy);
    bool is_wrap_strategy_Set() const;
    bool is_wrap_strategy_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIColor m_background_color;
    bool m_background_color_isSet;
    bool m_background_color_isValid;

    OAIColorStyle m_background_color_style;
    bool m_background_color_style_isSet;
    bool m_background_color_style_isValid;

    OAIBorders m_borders;
    bool m_borders_isSet;
    bool m_borders_isValid;

    QString m_horizontal_alignment;
    bool m_horizontal_alignment_isSet;
    bool m_horizontal_alignment_isValid;

    QString m_hyperlink_display_type;
    bool m_hyperlink_display_type_isSet;
    bool m_hyperlink_display_type_isValid;

    OAINumberFormat m_number_format;
    bool m_number_format_isSet;
    bool m_number_format_isValid;

    OAIPadding m_padding;
    bool m_padding_isSet;
    bool m_padding_isValid;

    QString m_text_direction;
    bool m_text_direction_isSet;
    bool m_text_direction_isValid;

    OAITextFormat m_text_format;
    bool m_text_format_isSet;
    bool m_text_format_isValid;

    OAITextRotation m_text_rotation;
    bool m_text_rotation_isSet;
    bool m_text_rotation_isValid;

    QString m_vertical_alignment;
    bool m_vertical_alignment_isSet;
    bool m_vertical_alignment_isValid;

    QString m_wrap_strategy;
    bool m_wrap_strategy_isSet;
    bool m_wrap_strategy_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICellFormat)

#endif // OAICellFormat_H
