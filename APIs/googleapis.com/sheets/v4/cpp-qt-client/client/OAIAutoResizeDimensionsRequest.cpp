/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAutoResizeDimensionsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAutoResizeDimensionsRequest::OAIAutoResizeDimensionsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAutoResizeDimensionsRequest::OAIAutoResizeDimensionsRequest() {
    this->initializeModel();
}

OAIAutoResizeDimensionsRequest::~OAIAutoResizeDimensionsRequest() {}

void OAIAutoResizeDimensionsRequest::initializeModel() {

    m_data_source_sheet_dimensions_isSet = false;
    m_data_source_sheet_dimensions_isValid = false;

    m_dimensions_isSet = false;
    m_dimensions_isValid = false;
}

void OAIAutoResizeDimensionsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAutoResizeDimensionsRequest::fromJsonObject(QJsonObject json) {

    m_data_source_sheet_dimensions_isValid = ::OpenAPI::fromJsonValue(m_data_source_sheet_dimensions, json[QString("dataSourceSheetDimensions")]);
    m_data_source_sheet_dimensions_isSet = !json[QString("dataSourceSheetDimensions")].isNull() && m_data_source_sheet_dimensions_isValid;

    m_dimensions_isValid = ::OpenAPI::fromJsonValue(m_dimensions, json[QString("dimensions")]);
    m_dimensions_isSet = !json[QString("dimensions")].isNull() && m_dimensions_isValid;
}

QString OAIAutoResizeDimensionsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAutoResizeDimensionsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_data_source_sheet_dimensions.isSet()) {
        obj.insert(QString("dataSourceSheetDimensions"), ::OpenAPI::toJsonValue(m_data_source_sheet_dimensions));
    }
    if (m_dimensions.isSet()) {
        obj.insert(QString("dimensions"), ::OpenAPI::toJsonValue(m_dimensions));
    }
    return obj;
}

OAIDataSourceSheetDimensionRange OAIAutoResizeDimensionsRequest::getDataSourceSheetDimensions() const {
    return m_data_source_sheet_dimensions;
}
void OAIAutoResizeDimensionsRequest::setDataSourceSheetDimensions(const OAIDataSourceSheetDimensionRange &data_source_sheet_dimensions) {
    m_data_source_sheet_dimensions = data_source_sheet_dimensions;
    m_data_source_sheet_dimensions_isSet = true;
}

bool OAIAutoResizeDimensionsRequest::is_data_source_sheet_dimensions_Set() const{
    return m_data_source_sheet_dimensions_isSet;
}

bool OAIAutoResizeDimensionsRequest::is_data_source_sheet_dimensions_Valid() const{
    return m_data_source_sheet_dimensions_isValid;
}

OAIDimensionRange OAIAutoResizeDimensionsRequest::getDimensions() const {
    return m_dimensions;
}
void OAIAutoResizeDimensionsRequest::setDimensions(const OAIDimensionRange &dimensions) {
    m_dimensions = dimensions;
    m_dimensions_isSet = true;
}

bool OAIAutoResizeDimensionsRequest::is_dimensions_Set() const{
    return m_dimensions_isSet;
}

bool OAIAutoResizeDimensionsRequest::is_dimensions_Valid() const{
    return m_dimensions_isValid;
}

bool OAIAutoResizeDimensionsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_source_sheet_dimensions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dimensions.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAutoResizeDimensionsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
