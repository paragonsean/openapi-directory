/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICellData.h
 *
 * Data about a specific cell.
 */

#ifndef OAICellData_H
#define OAICellData_H

#include <QJsonObject>

#include "OAICellFormat.h"
#include "OAIDataSourceFormula.h"
#include "OAIDataSourceTable.h"
#include "OAIDataValidationRule.h"
#include "OAIExtendedValue.h"
#include "OAIPivotTable.h"
#include "OAITextFormatRun.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDataSourceFormula;
class OAIDataSourceTable;
class OAIDataValidationRule;
class OAICellFormat;
class OAIExtendedValue;
class OAIPivotTable;
class OAITextFormatRun;

class OAICellData : public OAIObject {
public:
    OAICellData();
    OAICellData(QString json);
    ~OAICellData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDataSourceFormula getDataSourceFormula() const;
    void setDataSourceFormula(const OAIDataSourceFormula &data_source_formula);
    bool is_data_source_formula_Set() const;
    bool is_data_source_formula_Valid() const;

    OAIDataSourceTable getDataSourceTable() const;
    void setDataSourceTable(const OAIDataSourceTable &data_source_table);
    bool is_data_source_table_Set() const;
    bool is_data_source_table_Valid() const;

    OAIDataValidationRule getDataValidation() const;
    void setDataValidation(const OAIDataValidationRule &data_validation);
    bool is_data_validation_Set() const;
    bool is_data_validation_Valid() const;

    OAICellFormat getEffectiveFormat() const;
    void setEffectiveFormat(const OAICellFormat &effective_format);
    bool is_effective_format_Set() const;
    bool is_effective_format_Valid() const;

    OAIExtendedValue getEffectiveValue() const;
    void setEffectiveValue(const OAIExtendedValue &effective_value);
    bool is_effective_value_Set() const;
    bool is_effective_value_Valid() const;

    QString getFormattedValue() const;
    void setFormattedValue(const QString &formatted_value);
    bool is_formatted_value_Set() const;
    bool is_formatted_value_Valid() const;

    QString getHyperlink() const;
    void setHyperlink(const QString &hyperlink);
    bool is_hyperlink_Set() const;
    bool is_hyperlink_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    OAIPivotTable getPivotTable() const;
    void setPivotTable(const OAIPivotTable &pivot_table);
    bool is_pivot_table_Set() const;
    bool is_pivot_table_Valid() const;

    QList<OAITextFormatRun> getTextFormatRuns() const;
    void setTextFormatRuns(const QList<OAITextFormatRun> &text_format_runs);
    bool is_text_format_runs_Set() const;
    bool is_text_format_runs_Valid() const;

    OAICellFormat getUserEnteredFormat() const;
    void setUserEnteredFormat(const OAICellFormat &user_entered_format);
    bool is_user_entered_format_Set() const;
    bool is_user_entered_format_Valid() const;

    OAIExtendedValue getUserEnteredValue() const;
    void setUserEnteredValue(const OAIExtendedValue &user_entered_value);
    bool is_user_entered_value_Set() const;
    bool is_user_entered_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDataSourceFormula m_data_source_formula;
    bool m_data_source_formula_isSet;
    bool m_data_source_formula_isValid;

    OAIDataSourceTable m_data_source_table;
    bool m_data_source_table_isSet;
    bool m_data_source_table_isValid;

    OAIDataValidationRule m_data_validation;
    bool m_data_validation_isSet;
    bool m_data_validation_isValid;

    OAICellFormat m_effective_format;
    bool m_effective_format_isSet;
    bool m_effective_format_isValid;

    OAIExtendedValue m_effective_value;
    bool m_effective_value_isSet;
    bool m_effective_value_isValid;

    QString m_formatted_value;
    bool m_formatted_value_isSet;
    bool m_formatted_value_isValid;

    QString m_hyperlink;
    bool m_hyperlink_isSet;
    bool m_hyperlink_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    OAIPivotTable m_pivot_table;
    bool m_pivot_table_isSet;
    bool m_pivot_table_isValid;

    QList<OAITextFormatRun> m_text_format_runs;
    bool m_text_format_runs_isSet;
    bool m_text_format_runs_isValid;

    OAICellFormat m_user_entered_format;
    bool m_user_entered_format_isSet;
    bool m_user_entered_format_isValid;

    OAIExtendedValue m_user_entered_value;
    bool m_user_entered_value_isSet;
    bool m_user_entered_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICellData)

#endif // OAICellData_H
