/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataExecutionStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataExecutionStatus::OAIDataExecutionStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataExecutionStatus::OAIDataExecutionStatus() {
    this->initializeModel();
}

OAIDataExecutionStatus::~OAIDataExecutionStatus() {}

void OAIDataExecutionStatus::initializeModel() {

    m_error_code_isSet = false;
    m_error_code_isValid = false;

    m_error_message_isSet = false;
    m_error_message_isValid = false;

    m_last_refresh_time_isSet = false;
    m_last_refresh_time_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIDataExecutionStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataExecutionStatus::fromJsonObject(QJsonObject json) {

    m_error_code_isValid = ::OpenAPI::fromJsonValue(m_error_code, json[QString("errorCode")]);
    m_error_code_isSet = !json[QString("errorCode")].isNull() && m_error_code_isValid;

    m_error_message_isValid = ::OpenAPI::fromJsonValue(m_error_message, json[QString("errorMessage")]);
    m_error_message_isSet = !json[QString("errorMessage")].isNull() && m_error_message_isValid;

    m_last_refresh_time_isValid = ::OpenAPI::fromJsonValue(m_last_refresh_time, json[QString("lastRefreshTime")]);
    m_last_refresh_time_isSet = !json[QString("lastRefreshTime")].isNull() && m_last_refresh_time_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIDataExecutionStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataExecutionStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_error_code_isSet) {
        obj.insert(QString("errorCode"), ::OpenAPI::toJsonValue(m_error_code));
    }
    if (m_error_message_isSet) {
        obj.insert(QString("errorMessage"), ::OpenAPI::toJsonValue(m_error_message));
    }
    if (m_last_refresh_time_isSet) {
        obj.insert(QString("lastRefreshTime"), ::OpenAPI::toJsonValue(m_last_refresh_time));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QString OAIDataExecutionStatus::getErrorCode() const {
    return m_error_code;
}
void OAIDataExecutionStatus::setErrorCode(const QString &error_code) {
    m_error_code = error_code;
    m_error_code_isSet = true;
}

bool OAIDataExecutionStatus::is_error_code_Set() const{
    return m_error_code_isSet;
}

bool OAIDataExecutionStatus::is_error_code_Valid() const{
    return m_error_code_isValid;
}

QString OAIDataExecutionStatus::getErrorMessage() const {
    return m_error_message;
}
void OAIDataExecutionStatus::setErrorMessage(const QString &error_message) {
    m_error_message = error_message;
    m_error_message_isSet = true;
}

bool OAIDataExecutionStatus::is_error_message_Set() const{
    return m_error_message_isSet;
}

bool OAIDataExecutionStatus::is_error_message_Valid() const{
    return m_error_message_isValid;
}

QString OAIDataExecutionStatus::getLastRefreshTime() const {
    return m_last_refresh_time;
}
void OAIDataExecutionStatus::setLastRefreshTime(const QString &last_refresh_time) {
    m_last_refresh_time = last_refresh_time;
    m_last_refresh_time_isSet = true;
}

bool OAIDataExecutionStatus::is_last_refresh_time_Set() const{
    return m_last_refresh_time_isSet;
}

bool OAIDataExecutionStatus::is_last_refresh_time_Valid() const{
    return m_last_refresh_time_isValid;
}

QString OAIDataExecutionStatus::getState() const {
    return m_state;
}
void OAIDataExecutionStatus::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIDataExecutionStatus::is_state_Set() const{
    return m_state_isSet;
}

bool OAIDataExecutionStatus::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIDataExecutionStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_refresh_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataExecutionStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
