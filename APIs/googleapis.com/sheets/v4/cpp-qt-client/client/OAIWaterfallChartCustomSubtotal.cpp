/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWaterfallChartCustomSubtotal.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWaterfallChartCustomSubtotal::OAIWaterfallChartCustomSubtotal(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWaterfallChartCustomSubtotal::OAIWaterfallChartCustomSubtotal() {
    this->initializeModel();
}

OAIWaterfallChartCustomSubtotal::~OAIWaterfallChartCustomSubtotal() {}

void OAIWaterfallChartCustomSubtotal::initializeModel() {

    m_data_is_subtotal_isSet = false;
    m_data_is_subtotal_isValid = false;

    m_label_isSet = false;
    m_label_isValid = false;

    m_subtotal_index_isSet = false;
    m_subtotal_index_isValid = false;
}

void OAIWaterfallChartCustomSubtotal::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWaterfallChartCustomSubtotal::fromJsonObject(QJsonObject json) {

    m_data_is_subtotal_isValid = ::OpenAPI::fromJsonValue(m_data_is_subtotal, json[QString("dataIsSubtotal")]);
    m_data_is_subtotal_isSet = !json[QString("dataIsSubtotal")].isNull() && m_data_is_subtotal_isValid;

    m_label_isValid = ::OpenAPI::fromJsonValue(m_label, json[QString("label")]);
    m_label_isSet = !json[QString("label")].isNull() && m_label_isValid;

    m_subtotal_index_isValid = ::OpenAPI::fromJsonValue(m_subtotal_index, json[QString("subtotalIndex")]);
    m_subtotal_index_isSet = !json[QString("subtotalIndex")].isNull() && m_subtotal_index_isValid;
}

QString OAIWaterfallChartCustomSubtotal::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWaterfallChartCustomSubtotal::asJsonObject() const {
    QJsonObject obj;
    if (m_data_is_subtotal_isSet) {
        obj.insert(QString("dataIsSubtotal"), ::OpenAPI::toJsonValue(m_data_is_subtotal));
    }
    if (m_label_isSet) {
        obj.insert(QString("label"), ::OpenAPI::toJsonValue(m_label));
    }
    if (m_subtotal_index_isSet) {
        obj.insert(QString("subtotalIndex"), ::OpenAPI::toJsonValue(m_subtotal_index));
    }
    return obj;
}

bool OAIWaterfallChartCustomSubtotal::isDataIsSubtotal() const {
    return m_data_is_subtotal;
}
void OAIWaterfallChartCustomSubtotal::setDataIsSubtotal(const bool &data_is_subtotal) {
    m_data_is_subtotal = data_is_subtotal;
    m_data_is_subtotal_isSet = true;
}

bool OAIWaterfallChartCustomSubtotal::is_data_is_subtotal_Set() const{
    return m_data_is_subtotal_isSet;
}

bool OAIWaterfallChartCustomSubtotal::is_data_is_subtotal_Valid() const{
    return m_data_is_subtotal_isValid;
}

QString OAIWaterfallChartCustomSubtotal::getLabel() const {
    return m_label;
}
void OAIWaterfallChartCustomSubtotal::setLabel(const QString &label) {
    m_label = label;
    m_label_isSet = true;
}

bool OAIWaterfallChartCustomSubtotal::is_label_Set() const{
    return m_label_isSet;
}

bool OAIWaterfallChartCustomSubtotal::is_label_Valid() const{
    return m_label_isValid;
}

qint32 OAIWaterfallChartCustomSubtotal::getSubtotalIndex() const {
    return m_subtotal_index;
}
void OAIWaterfallChartCustomSubtotal::setSubtotalIndex(const qint32 &subtotal_index) {
    m_subtotal_index = subtotal_index;
    m_subtotal_index_isSet = true;
}

bool OAIWaterfallChartCustomSubtotal::is_subtotal_index_Set() const{
    return m_subtotal_index_isSet;
}

bool OAIWaterfallChartCustomSubtotal::is_subtotal_index_Valid() const{
    return m_subtotal_index_isValid;
}

bool OAIWaterfallChartCustomSubtotal::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_is_subtotal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subtotal_index_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWaterfallChartCustomSubtotal::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
