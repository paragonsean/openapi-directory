/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICandlestickData.h
 *
 * The Candlestick chart data, each containing the low, open, close, and high values for a series.
 */

#ifndef OAICandlestickData_H
#define OAICandlestickData_H

#include <QJsonObject>

#include "OAICandlestickSeries.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICandlestickSeries;

class OAICandlestickData : public OAIObject {
public:
    OAICandlestickData();
    OAICandlestickData(QString json);
    ~OAICandlestickData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICandlestickSeries getCloseSeries() const;
    void setCloseSeries(const OAICandlestickSeries &close_series);
    bool is_close_series_Set() const;
    bool is_close_series_Valid() const;

    OAICandlestickSeries getHighSeries() const;
    void setHighSeries(const OAICandlestickSeries &high_series);
    bool is_high_series_Set() const;
    bool is_high_series_Valid() const;

    OAICandlestickSeries getLowSeries() const;
    void setLowSeries(const OAICandlestickSeries &low_series);
    bool is_low_series_Set() const;
    bool is_low_series_Valid() const;

    OAICandlestickSeries getOpenSeries() const;
    void setOpenSeries(const OAICandlestickSeries &open_series);
    bool is_open_series_Set() const;
    bool is_open_series_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICandlestickSeries m_close_series;
    bool m_close_series_isSet;
    bool m_close_series_isValid;

    OAICandlestickSeries m_high_series;
    bool m_high_series_isSet;
    bool m_high_series_isValid;

    OAICandlestickSeries m_low_series;
    bool m_low_series_isSet;
    bool m_low_series_isValid;

    OAICandlestickSeries m_open_series;
    bool m_open_series_isSet;
    bool m_open_series_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICandlestickData)

#endif // OAICandlestickData_H
