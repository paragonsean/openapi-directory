/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBubbleChartSpec.h
 *
 * A bubble chart.
 */

#ifndef OAIBubbleChartSpec_H
#define OAIBubbleChartSpec_H

#include <QJsonObject>

#include "OAIChartData.h"
#include "OAIColor.h"
#include "OAIColorStyle.h"
#include "OAITextFormat.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIColor;
class OAIColorStyle;
class OAIChartData;
class OAITextFormat;

class OAIBubbleChartSpec : public OAIObject {
public:
    OAIBubbleChartSpec();
    OAIBubbleChartSpec(QString json);
    ~OAIBubbleChartSpec() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIColor getBubbleBorderColor() const;
    void setBubbleBorderColor(const OAIColor &bubble_border_color);
    bool is_bubble_border_color_Set() const;
    bool is_bubble_border_color_Valid() const;

    OAIColorStyle getBubbleBorderColorStyle() const;
    void setBubbleBorderColorStyle(const OAIColorStyle &bubble_border_color_style);
    bool is_bubble_border_color_style_Set() const;
    bool is_bubble_border_color_style_Valid() const;

    OAIChartData getBubbleLabels() const;
    void setBubbleLabels(const OAIChartData &bubble_labels);
    bool is_bubble_labels_Set() const;
    bool is_bubble_labels_Valid() const;

    qint32 getBubbleMaxRadiusSize() const;
    void setBubbleMaxRadiusSize(const qint32 &bubble_max_radius_size);
    bool is_bubble_max_radius_size_Set() const;
    bool is_bubble_max_radius_size_Valid() const;

    qint32 getBubbleMinRadiusSize() const;
    void setBubbleMinRadiusSize(const qint32 &bubble_min_radius_size);
    bool is_bubble_min_radius_size_Set() const;
    bool is_bubble_min_radius_size_Valid() const;

    float getBubbleOpacity() const;
    void setBubbleOpacity(const float &bubble_opacity);
    bool is_bubble_opacity_Set() const;
    bool is_bubble_opacity_Valid() const;

    OAIChartData getBubbleSizes() const;
    void setBubbleSizes(const OAIChartData &bubble_sizes);
    bool is_bubble_sizes_Set() const;
    bool is_bubble_sizes_Valid() const;

    OAITextFormat getBubbleTextStyle() const;
    void setBubbleTextStyle(const OAITextFormat &bubble_text_style);
    bool is_bubble_text_style_Set() const;
    bool is_bubble_text_style_Valid() const;

    OAIChartData getDomain() const;
    void setDomain(const OAIChartData &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    OAIChartData getGroupIds() const;
    void setGroupIds(const OAIChartData &group_ids);
    bool is_group_ids_Set() const;
    bool is_group_ids_Valid() const;

    QString getLegendPosition() const;
    void setLegendPosition(const QString &legend_position);
    bool is_legend_position_Set() const;
    bool is_legend_position_Valid() const;

    OAIChartData getSeries() const;
    void setSeries(const OAIChartData &series);
    bool is_series_Set() const;
    bool is_series_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIColor m_bubble_border_color;
    bool m_bubble_border_color_isSet;
    bool m_bubble_border_color_isValid;

    OAIColorStyle m_bubble_border_color_style;
    bool m_bubble_border_color_style_isSet;
    bool m_bubble_border_color_style_isValid;

    OAIChartData m_bubble_labels;
    bool m_bubble_labels_isSet;
    bool m_bubble_labels_isValid;

    qint32 m_bubble_max_radius_size;
    bool m_bubble_max_radius_size_isSet;
    bool m_bubble_max_radius_size_isValid;

    qint32 m_bubble_min_radius_size;
    bool m_bubble_min_radius_size_isSet;
    bool m_bubble_min_radius_size_isValid;

    float m_bubble_opacity;
    bool m_bubble_opacity_isSet;
    bool m_bubble_opacity_isValid;

    OAIChartData m_bubble_sizes;
    bool m_bubble_sizes_isSet;
    bool m_bubble_sizes_isValid;

    OAITextFormat m_bubble_text_style;
    bool m_bubble_text_style_isSet;
    bool m_bubble_text_style_isValid;

    OAIChartData m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    OAIChartData m_group_ids;
    bool m_group_ids_isSet;
    bool m_group_ids_isValid;

    QString m_legend_position;
    bool m_legend_position_isSet;
    bool m_legend_position_isValid;

    OAIChartData m_series;
    bool m_series_isSet;
    bool m_series_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBubbleChartSpec)

#endif // OAIBubbleChartSpec_H
