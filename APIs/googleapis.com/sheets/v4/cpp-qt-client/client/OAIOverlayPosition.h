/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOverlayPosition.h
 *
 * The location an object is overlaid on top of a grid.
 */

#ifndef OAIOverlayPosition_H
#define OAIOverlayPosition_H

#include <QJsonObject>

#include "OAIGridCoordinate.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGridCoordinate;

class OAIOverlayPosition : public OAIObject {
public:
    OAIOverlayPosition();
    OAIOverlayPosition(QString json);
    ~OAIOverlayPosition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGridCoordinate getAnchorCell() const;
    void setAnchorCell(const OAIGridCoordinate &anchor_cell);
    bool is_anchor_cell_Set() const;
    bool is_anchor_cell_Valid() const;

    qint32 getHeightPixels() const;
    void setHeightPixels(const qint32 &height_pixels);
    bool is_height_pixels_Set() const;
    bool is_height_pixels_Valid() const;

    qint32 getOffsetXPixels() const;
    void setOffsetXPixels(const qint32 &offset_x_pixels);
    bool is_offset_x_pixels_Set() const;
    bool is_offset_x_pixels_Valid() const;

    qint32 getOffsetYPixels() const;
    void setOffsetYPixels(const qint32 &offset_y_pixels);
    bool is_offset_y_pixels_Set() const;
    bool is_offset_y_pixels_Valid() const;

    qint32 getWidthPixels() const;
    void setWidthPixels(const qint32 &width_pixels);
    bool is_width_pixels_Set() const;
    bool is_width_pixels_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGridCoordinate m_anchor_cell;
    bool m_anchor_cell_isSet;
    bool m_anchor_cell_isValid;

    qint32 m_height_pixels;
    bool m_height_pixels_isSet;
    bool m_height_pixels_isValid;

    qint32 m_offset_x_pixels;
    bool m_offset_x_pixels_isSet;
    bool m_offset_x_pixels_isValid;

    qint32 m_offset_y_pixels;
    bool m_offset_y_pixels_isSet;
    bool m_offset_y_pixels_isValid;

    qint32 m_width_pixels;
    bool m_width_pixels_isSet;
    bool m_width_pixels_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOverlayPosition)

#endif // OAIOverlayPosition_H
