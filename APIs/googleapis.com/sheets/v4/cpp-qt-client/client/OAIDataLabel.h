/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataLabel.h
 *
 * Settings for one set of data labels. Data labels are annotations that appear next to a set of data, such as the points on a line chart, and provide additional information about what the data represents, such as a text representation of the value behind that point on the graph.
 */

#ifndef OAIDataLabel_H
#define OAIDataLabel_H

#include <QJsonObject>

#include "OAIChartData.h"
#include "OAITextFormat.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChartData;
class OAITextFormat;

class OAIDataLabel : public OAIObject {
public:
    OAIDataLabel();
    OAIDataLabel(QString json);
    ~OAIDataLabel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIChartData getCustomLabelData() const;
    void setCustomLabelData(const OAIChartData &custom_label_data);
    bool is_custom_label_data_Set() const;
    bool is_custom_label_data_Valid() const;

    QString getPlacement() const;
    void setPlacement(const QString &placement);
    bool is_placement_Set() const;
    bool is_placement_Valid() const;

    OAITextFormat getTextFormat() const;
    void setTextFormat(const OAITextFormat &text_format);
    bool is_text_format_Set() const;
    bool is_text_format_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIChartData m_custom_label_data;
    bool m_custom_label_data_isSet;
    bool m_custom_label_data_isValid;

    QString m_placement;
    bool m_placement_isSet;
    bool m_placement_isValid;

    OAITextFormat m_text_format;
    bool m_text_format_isSet;
    bool m_text_format_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataLabel)

#endif // OAIDataLabel_H
