/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBandingProperties.h
 *
 * Properties referring a single dimension (either row or column). If both BandedRange.row_properties and BandedRange.column_properties are set, the fill colors are applied to cells according to the following rules: * header_color and footer_color take priority over band colors. * first_band_color takes priority over second_band_color. * row_properties takes priority over column_properties. For example, the first row color takes priority over the first column color, but the first column color takes priority over the second row color. Similarly, the row header takes priority over the column header in the top left cell, but the column header takes priority over the first row color if the row header is not set.
 */

#ifndef OAIBandingProperties_H
#define OAIBandingProperties_H

#include <QJsonObject>

#include "OAIColor.h"
#include "OAIColorStyle.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIColor;
class OAIColorStyle;

class OAIBandingProperties : public OAIObject {
public:
    OAIBandingProperties();
    OAIBandingProperties(QString json);
    ~OAIBandingProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIColor getFirstBandColor() const;
    void setFirstBandColor(const OAIColor &first_band_color);
    bool is_first_band_color_Set() const;
    bool is_first_band_color_Valid() const;

    OAIColorStyle getFirstBandColorStyle() const;
    void setFirstBandColorStyle(const OAIColorStyle &first_band_color_style);
    bool is_first_band_color_style_Set() const;
    bool is_first_band_color_style_Valid() const;

    OAIColor getFooterColor() const;
    void setFooterColor(const OAIColor &footer_color);
    bool is_footer_color_Set() const;
    bool is_footer_color_Valid() const;

    OAIColorStyle getFooterColorStyle() const;
    void setFooterColorStyle(const OAIColorStyle &footer_color_style);
    bool is_footer_color_style_Set() const;
    bool is_footer_color_style_Valid() const;

    OAIColor getHeaderColor() const;
    void setHeaderColor(const OAIColor &header_color);
    bool is_header_color_Set() const;
    bool is_header_color_Valid() const;

    OAIColorStyle getHeaderColorStyle() const;
    void setHeaderColorStyle(const OAIColorStyle &header_color_style);
    bool is_header_color_style_Set() const;
    bool is_header_color_style_Valid() const;

    OAIColor getSecondBandColor() const;
    void setSecondBandColor(const OAIColor &second_band_color);
    bool is_second_band_color_Set() const;
    bool is_second_band_color_Valid() const;

    OAIColorStyle getSecondBandColorStyle() const;
    void setSecondBandColorStyle(const OAIColorStyle &second_band_color_style);
    bool is_second_band_color_style_Set() const;
    bool is_second_band_color_style_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIColor m_first_band_color;
    bool m_first_band_color_isSet;
    bool m_first_band_color_isValid;

    OAIColorStyle m_first_band_color_style;
    bool m_first_band_color_style_isSet;
    bool m_first_band_color_style_isValid;

    OAIColor m_footer_color;
    bool m_footer_color_isSet;
    bool m_footer_color_isValid;

    OAIColorStyle m_footer_color_style;
    bool m_footer_color_style_isSet;
    bool m_footer_color_style_isValid;

    OAIColor m_header_color;
    bool m_header_color_isSet;
    bool m_header_color_isValid;

    OAIColorStyle m_header_color_style;
    bool m_header_color_style_isSet;
    bool m_header_color_style_isValid;

    OAIColor m_second_band_color;
    bool m_second_band_color_isSet;
    bool m_second_band_color_isValid;

    OAIColorStyle m_second_band_color_style;
    bool m_second_band_color_style_isSet;
    bool m_second_band_color_style_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBandingProperties)

#endif // OAIBandingProperties_H
