/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIterativeCalculationSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIterativeCalculationSettings::OAIIterativeCalculationSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIterativeCalculationSettings::OAIIterativeCalculationSettings() {
    this->initializeModel();
}

OAIIterativeCalculationSettings::~OAIIterativeCalculationSettings() {}

void OAIIterativeCalculationSettings::initializeModel() {

    m_convergence_threshold_isSet = false;
    m_convergence_threshold_isValid = false;

    m_max_iterations_isSet = false;
    m_max_iterations_isValid = false;
}

void OAIIterativeCalculationSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIterativeCalculationSettings::fromJsonObject(QJsonObject json) {

    m_convergence_threshold_isValid = ::OpenAPI::fromJsonValue(m_convergence_threshold, json[QString("convergenceThreshold")]);
    m_convergence_threshold_isSet = !json[QString("convergenceThreshold")].isNull() && m_convergence_threshold_isValid;

    m_max_iterations_isValid = ::OpenAPI::fromJsonValue(m_max_iterations, json[QString("maxIterations")]);
    m_max_iterations_isSet = !json[QString("maxIterations")].isNull() && m_max_iterations_isValid;
}

QString OAIIterativeCalculationSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIterativeCalculationSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_convergence_threshold_isSet) {
        obj.insert(QString("convergenceThreshold"), ::OpenAPI::toJsonValue(m_convergence_threshold));
    }
    if (m_max_iterations_isSet) {
        obj.insert(QString("maxIterations"), ::OpenAPI::toJsonValue(m_max_iterations));
    }
    return obj;
}

double OAIIterativeCalculationSettings::getConvergenceThreshold() const {
    return m_convergence_threshold;
}
void OAIIterativeCalculationSettings::setConvergenceThreshold(const double &convergence_threshold) {
    m_convergence_threshold = convergence_threshold;
    m_convergence_threshold_isSet = true;
}

bool OAIIterativeCalculationSettings::is_convergence_threshold_Set() const{
    return m_convergence_threshold_isSet;
}

bool OAIIterativeCalculationSettings::is_convergence_threshold_Valid() const{
    return m_convergence_threshold_isValid;
}

qint32 OAIIterativeCalculationSettings::getMaxIterations() const {
    return m_max_iterations;
}
void OAIIterativeCalculationSettings::setMaxIterations(const qint32 &max_iterations) {
    m_max_iterations = max_iterations;
    m_max_iterations_isSet = true;
}

bool OAIIterativeCalculationSettings::is_max_iterations_Set() const{
    return m_max_iterations_isSet;
}

bool OAIIterativeCalculationSettings::is_max_iterations_Valid() const{
    return m_max_iterations_isValid;
}

bool OAIIterativeCalculationSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_convergence_threshold_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_iterations_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIterativeCalculationSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
