/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHistogramSeries.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHistogramSeries::OAIHistogramSeries(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHistogramSeries::OAIHistogramSeries() {
    this->initializeModel();
}

OAIHistogramSeries::~OAIHistogramSeries() {}

void OAIHistogramSeries::initializeModel() {

    m_bar_color_isSet = false;
    m_bar_color_isValid = false;

    m_bar_color_style_isSet = false;
    m_bar_color_style_isValid = false;

    m_data_isSet = false;
    m_data_isValid = false;
}

void OAIHistogramSeries::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHistogramSeries::fromJsonObject(QJsonObject json) {

    m_bar_color_isValid = ::OpenAPI::fromJsonValue(m_bar_color, json[QString("barColor")]);
    m_bar_color_isSet = !json[QString("barColor")].isNull() && m_bar_color_isValid;

    m_bar_color_style_isValid = ::OpenAPI::fromJsonValue(m_bar_color_style, json[QString("barColorStyle")]);
    m_bar_color_style_isSet = !json[QString("barColorStyle")].isNull() && m_bar_color_style_isValid;

    m_data_isValid = ::OpenAPI::fromJsonValue(m_data, json[QString("data")]);
    m_data_isSet = !json[QString("data")].isNull() && m_data_isValid;
}

QString OAIHistogramSeries::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHistogramSeries::asJsonObject() const {
    QJsonObject obj;
    if (m_bar_color.isSet()) {
        obj.insert(QString("barColor"), ::OpenAPI::toJsonValue(m_bar_color));
    }
    if (m_bar_color_style.isSet()) {
        obj.insert(QString("barColorStyle"), ::OpenAPI::toJsonValue(m_bar_color_style));
    }
    if (m_data.isSet()) {
        obj.insert(QString("data"), ::OpenAPI::toJsonValue(m_data));
    }
    return obj;
}

OAIColor OAIHistogramSeries::getBarColor() const {
    return m_bar_color;
}
void OAIHistogramSeries::setBarColor(const OAIColor &bar_color) {
    m_bar_color = bar_color;
    m_bar_color_isSet = true;
}

bool OAIHistogramSeries::is_bar_color_Set() const{
    return m_bar_color_isSet;
}

bool OAIHistogramSeries::is_bar_color_Valid() const{
    return m_bar_color_isValid;
}

OAIColorStyle OAIHistogramSeries::getBarColorStyle() const {
    return m_bar_color_style;
}
void OAIHistogramSeries::setBarColorStyle(const OAIColorStyle &bar_color_style) {
    m_bar_color_style = bar_color_style;
    m_bar_color_style_isSet = true;
}

bool OAIHistogramSeries::is_bar_color_style_Set() const{
    return m_bar_color_style_isSet;
}

bool OAIHistogramSeries::is_bar_color_style_Valid() const{
    return m_bar_color_style_isValid;
}

OAIChartData OAIHistogramSeries::getData() const {
    return m_data;
}
void OAIHistogramSeries::setData(const OAIChartData &data) {
    m_data = data;
    m_data_isSet = true;
}

bool OAIHistogramSeries::is_data_Set() const{
    return m_data_isSet;
}

bool OAIHistogramSeries::is_data_Valid() const{
    return m_data_isValid;
}

bool OAIHistogramSeries::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bar_color.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_bar_color_style.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHistogramSeries::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
