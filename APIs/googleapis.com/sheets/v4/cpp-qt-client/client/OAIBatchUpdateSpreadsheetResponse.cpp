/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchUpdateSpreadsheetResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchUpdateSpreadsheetResponse::OAIBatchUpdateSpreadsheetResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchUpdateSpreadsheetResponse::OAIBatchUpdateSpreadsheetResponse() {
    this->initializeModel();
}

OAIBatchUpdateSpreadsheetResponse::~OAIBatchUpdateSpreadsheetResponse() {}

void OAIBatchUpdateSpreadsheetResponse::initializeModel() {

    m_replies_isSet = false;
    m_replies_isValid = false;

    m_spreadsheet_id_isSet = false;
    m_spreadsheet_id_isValid = false;

    m_updated_spreadsheet_isSet = false;
    m_updated_spreadsheet_isValid = false;
}

void OAIBatchUpdateSpreadsheetResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchUpdateSpreadsheetResponse::fromJsonObject(QJsonObject json) {

    m_replies_isValid = ::OpenAPI::fromJsonValue(m_replies, json[QString("replies")]);
    m_replies_isSet = !json[QString("replies")].isNull() && m_replies_isValid;

    m_spreadsheet_id_isValid = ::OpenAPI::fromJsonValue(m_spreadsheet_id, json[QString("spreadsheetId")]);
    m_spreadsheet_id_isSet = !json[QString("spreadsheetId")].isNull() && m_spreadsheet_id_isValid;

    m_updated_spreadsheet_isValid = ::OpenAPI::fromJsonValue(m_updated_spreadsheet, json[QString("updatedSpreadsheet")]);
    m_updated_spreadsheet_isSet = !json[QString("updatedSpreadsheet")].isNull() && m_updated_spreadsheet_isValid;
}

QString OAIBatchUpdateSpreadsheetResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchUpdateSpreadsheetResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_replies.size() > 0) {
        obj.insert(QString("replies"), ::OpenAPI::toJsonValue(m_replies));
    }
    if (m_spreadsheet_id_isSet) {
        obj.insert(QString("spreadsheetId"), ::OpenAPI::toJsonValue(m_spreadsheet_id));
    }
    if (m_updated_spreadsheet.isSet()) {
        obj.insert(QString("updatedSpreadsheet"), ::OpenAPI::toJsonValue(m_updated_spreadsheet));
    }
    return obj;
}

QList<OAIResponse> OAIBatchUpdateSpreadsheetResponse::getReplies() const {
    return m_replies;
}
void OAIBatchUpdateSpreadsheetResponse::setReplies(const QList<OAIResponse> &replies) {
    m_replies = replies;
    m_replies_isSet = true;
}

bool OAIBatchUpdateSpreadsheetResponse::is_replies_Set() const{
    return m_replies_isSet;
}

bool OAIBatchUpdateSpreadsheetResponse::is_replies_Valid() const{
    return m_replies_isValid;
}

QString OAIBatchUpdateSpreadsheetResponse::getSpreadsheetId() const {
    return m_spreadsheet_id;
}
void OAIBatchUpdateSpreadsheetResponse::setSpreadsheetId(const QString &spreadsheet_id) {
    m_spreadsheet_id = spreadsheet_id;
    m_spreadsheet_id_isSet = true;
}

bool OAIBatchUpdateSpreadsheetResponse::is_spreadsheet_id_Set() const{
    return m_spreadsheet_id_isSet;
}

bool OAIBatchUpdateSpreadsheetResponse::is_spreadsheet_id_Valid() const{
    return m_spreadsheet_id_isValid;
}

OAISpreadsheet OAIBatchUpdateSpreadsheetResponse::getUpdatedSpreadsheet() const {
    return m_updated_spreadsheet;
}
void OAIBatchUpdateSpreadsheetResponse::setUpdatedSpreadsheet(const OAISpreadsheet &updated_spreadsheet) {
    m_updated_spreadsheet = updated_spreadsheet;
    m_updated_spreadsheet_isSet = true;
}

bool OAIBatchUpdateSpreadsheetResponse::is_updated_spreadsheet_Set() const{
    return m_updated_spreadsheet_isSet;
}

bool OAIBatchUpdateSpreadsheetResponse::is_updated_spreadsheet_Valid() const{
    return m_updated_spreadsheet_isValid;
}

bool OAIBatchUpdateSpreadsheetResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_replies.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_spreadsheet_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_spreadsheet.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchUpdateSpreadsheetResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
