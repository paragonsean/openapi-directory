/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataFilter::OAIDataFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataFilter::OAIDataFilter() {
    this->initializeModel();
}

OAIDataFilter::~OAIDataFilter() {}

void OAIDataFilter::initializeModel() {

    m_a1_range_isSet = false;
    m_a1_range_isValid = false;

    m_developer_metadata_lookup_isSet = false;
    m_developer_metadata_lookup_isValid = false;

    m_grid_range_isSet = false;
    m_grid_range_isValid = false;
}

void OAIDataFilter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataFilter::fromJsonObject(QJsonObject json) {

    m_a1_range_isValid = ::OpenAPI::fromJsonValue(m_a1_range, json[QString("a1Range")]);
    m_a1_range_isSet = !json[QString("a1Range")].isNull() && m_a1_range_isValid;

    m_developer_metadata_lookup_isValid = ::OpenAPI::fromJsonValue(m_developer_metadata_lookup, json[QString("developerMetadataLookup")]);
    m_developer_metadata_lookup_isSet = !json[QString("developerMetadataLookup")].isNull() && m_developer_metadata_lookup_isValid;

    m_grid_range_isValid = ::OpenAPI::fromJsonValue(m_grid_range, json[QString("gridRange")]);
    m_grid_range_isSet = !json[QString("gridRange")].isNull() && m_grid_range_isValid;
}

QString OAIDataFilter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataFilter::asJsonObject() const {
    QJsonObject obj;
    if (m_a1_range_isSet) {
        obj.insert(QString("a1Range"), ::OpenAPI::toJsonValue(m_a1_range));
    }
    if (m_developer_metadata_lookup.isSet()) {
        obj.insert(QString("developerMetadataLookup"), ::OpenAPI::toJsonValue(m_developer_metadata_lookup));
    }
    if (m_grid_range.isSet()) {
        obj.insert(QString("gridRange"), ::OpenAPI::toJsonValue(m_grid_range));
    }
    return obj;
}

QString OAIDataFilter::getA1Range() const {
    return m_a1_range;
}
void OAIDataFilter::setA1Range(const QString &a1_range) {
    m_a1_range = a1_range;
    m_a1_range_isSet = true;
}

bool OAIDataFilter::is_a1_range_Set() const{
    return m_a1_range_isSet;
}

bool OAIDataFilter::is_a1_range_Valid() const{
    return m_a1_range_isValid;
}

OAIDeveloperMetadataLookup OAIDataFilter::getDeveloperMetadataLookup() const {
    return m_developer_metadata_lookup;
}
void OAIDataFilter::setDeveloperMetadataLookup(const OAIDeveloperMetadataLookup &developer_metadata_lookup) {
    m_developer_metadata_lookup = developer_metadata_lookup;
    m_developer_metadata_lookup_isSet = true;
}

bool OAIDataFilter::is_developer_metadata_lookup_Set() const{
    return m_developer_metadata_lookup_isSet;
}

bool OAIDataFilter::is_developer_metadata_lookup_Valid() const{
    return m_developer_metadata_lookup_isValid;
}

OAIGridRange OAIDataFilter::getGridRange() const {
    return m_grid_range;
}
void OAIDataFilter::setGridRange(const OAIGridRange &grid_range) {
    m_grid_range = grid_range;
    m_grid_range_isSet = true;
}

bool OAIDataFilter::is_grid_range_Set() const{
    return m_grid_range_isSet;
}

bool OAIDataFilter::is_grid_range_Valid() const{
    return m_grid_range_isValid;
}

bool OAIDataFilter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_a1_range_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_developer_metadata_lookup.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_grid_range.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
