/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPieChartSpec.h
 *
 * A pie chart.
 */

#ifndef OAIPieChartSpec_H
#define OAIPieChartSpec_H

#include <QJsonObject>

#include "OAIChartData.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChartData;

class OAIPieChartSpec : public OAIObject {
public:
    OAIPieChartSpec();
    OAIPieChartSpec(QString json);
    ~OAIPieChartSpec() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIChartData getDomain() const;
    void setDomain(const OAIChartData &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    QString getLegendPosition() const;
    void setLegendPosition(const QString &legend_position);
    bool is_legend_position_Set() const;
    bool is_legend_position_Valid() const;

    double getPieHole() const;
    void setPieHole(const double &pie_hole);
    bool is_pie_hole_Set() const;
    bool is_pie_hole_Valid() const;

    OAIChartData getSeries() const;
    void setSeries(const OAIChartData &series);
    bool is_series_Set() const;
    bool is_series_Valid() const;

    bool isThreeDimensional() const;
    void setThreeDimensional(const bool &three_dimensional);
    bool is_three_dimensional_Set() const;
    bool is_three_dimensional_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIChartData m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    QString m_legend_position;
    bool m_legend_position_isSet;
    bool m_legend_position_isValid;

    double m_pie_hole;
    bool m_pie_hole_isSet;
    bool m_pie_hole_isValid;

    OAIChartData m_series;
    bool m_series_isSet;
    bool m_series_isValid;

    bool m_three_dimensional;
    bool m_three_dimensional_isSet;
    bool m_three_dimensional_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPieChartSpec)

#endif // OAIPieChartSpec_H
