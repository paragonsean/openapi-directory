/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataSourceRefreshMonthlySchedule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataSourceRefreshMonthlySchedule::OAIDataSourceRefreshMonthlySchedule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataSourceRefreshMonthlySchedule::OAIDataSourceRefreshMonthlySchedule() {
    this->initializeModel();
}

OAIDataSourceRefreshMonthlySchedule::~OAIDataSourceRefreshMonthlySchedule() {}

void OAIDataSourceRefreshMonthlySchedule::initializeModel() {

    m_days_of_month_isSet = false;
    m_days_of_month_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;
}

void OAIDataSourceRefreshMonthlySchedule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataSourceRefreshMonthlySchedule::fromJsonObject(QJsonObject json) {

    m_days_of_month_isValid = ::OpenAPI::fromJsonValue(m_days_of_month, json[QString("daysOfMonth")]);
    m_days_of_month_isSet = !json[QString("daysOfMonth")].isNull() && m_days_of_month_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;
}

QString OAIDataSourceRefreshMonthlySchedule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataSourceRefreshMonthlySchedule::asJsonObject() const {
    QJsonObject obj;
    if (m_days_of_month.size() > 0) {
        obj.insert(QString("daysOfMonth"), ::OpenAPI::toJsonValue(m_days_of_month));
    }
    if (m_start_time.isSet()) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    return obj;
}

QList<qint32> OAIDataSourceRefreshMonthlySchedule::getDaysOfMonth() const {
    return m_days_of_month;
}
void OAIDataSourceRefreshMonthlySchedule::setDaysOfMonth(const QList<qint32> &days_of_month) {
    m_days_of_month = days_of_month;
    m_days_of_month_isSet = true;
}

bool OAIDataSourceRefreshMonthlySchedule::is_days_of_month_Set() const{
    return m_days_of_month_isSet;
}

bool OAIDataSourceRefreshMonthlySchedule::is_days_of_month_Valid() const{
    return m_days_of_month_isValid;
}

OAITimeOfDay OAIDataSourceRefreshMonthlySchedule::getStartTime() const {
    return m_start_time;
}
void OAIDataSourceRefreshMonthlySchedule::setStartTime(const OAITimeOfDay &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIDataSourceRefreshMonthlySchedule::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIDataSourceRefreshMonthlySchedule::is_start_time_Valid() const{
    return m_start_time_isValid;
}

bool OAIDataSourceRefreshMonthlySchedule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_days_of_month.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataSourceRefreshMonthlySchedule::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
