/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBasicChartSpec.h
 *
 * The specification for a basic chart. See BasicChartType for the list of charts this supports.
 */

#ifndef OAIBasicChartSpec_H
#define OAIBasicChartSpec_H

#include <QJsonObject>

#include "OAIBasicChartAxis.h"
#include "OAIBasicChartDomain.h"
#include "OAIBasicChartSeries.h"
#include "OAIDataLabel.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBasicChartAxis;
class OAIBasicChartDomain;
class OAIBasicChartSeries;
class OAIDataLabel;

class OAIBasicChartSpec : public OAIObject {
public:
    OAIBasicChartSpec();
    OAIBasicChartSpec(QString json);
    ~OAIBasicChartSpec() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIBasicChartAxis> getAxis() const;
    void setAxis(const QList<OAIBasicChartAxis> &axis);
    bool is_axis_Set() const;
    bool is_axis_Valid() const;

    QString getChartType() const;
    void setChartType(const QString &chart_type);
    bool is_chart_type_Set() const;
    bool is_chart_type_Valid() const;

    QString getCompareMode() const;
    void setCompareMode(const QString &compare_mode);
    bool is_compare_mode_Set() const;
    bool is_compare_mode_Valid() const;

    QList<OAIBasicChartDomain> getDomains() const;
    void setDomains(const QList<OAIBasicChartDomain> &domains);
    bool is_domains_Set() const;
    bool is_domains_Valid() const;

    qint32 getHeaderCount() const;
    void setHeaderCount(const qint32 &header_count);
    bool is_header_count_Set() const;
    bool is_header_count_Valid() const;

    bool isInterpolateNulls() const;
    void setInterpolateNulls(const bool &interpolate_nulls);
    bool is_interpolate_nulls_Set() const;
    bool is_interpolate_nulls_Valid() const;

    QString getLegendPosition() const;
    void setLegendPosition(const QString &legend_position);
    bool is_legend_position_Set() const;
    bool is_legend_position_Valid() const;

    bool isLineSmoothing() const;
    void setLineSmoothing(const bool &line_smoothing);
    bool is_line_smoothing_Set() const;
    bool is_line_smoothing_Valid() const;

    QList<OAIBasicChartSeries> getSeries() const;
    void setSeries(const QList<OAIBasicChartSeries> &series);
    bool is_series_Set() const;
    bool is_series_Valid() const;

    QString getStackedType() const;
    void setStackedType(const QString &stacked_type);
    bool is_stacked_type_Set() const;
    bool is_stacked_type_Valid() const;

    bool isThreeDimensional() const;
    void setThreeDimensional(const bool &three_dimensional);
    bool is_three_dimensional_Set() const;
    bool is_three_dimensional_Valid() const;

    OAIDataLabel getTotalDataLabel() const;
    void setTotalDataLabel(const OAIDataLabel &total_data_label);
    bool is_total_data_label_Set() const;
    bool is_total_data_label_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIBasicChartAxis> m_axis;
    bool m_axis_isSet;
    bool m_axis_isValid;

    QString m_chart_type;
    bool m_chart_type_isSet;
    bool m_chart_type_isValid;

    QString m_compare_mode;
    bool m_compare_mode_isSet;
    bool m_compare_mode_isValid;

    QList<OAIBasicChartDomain> m_domains;
    bool m_domains_isSet;
    bool m_domains_isValid;

    qint32 m_header_count;
    bool m_header_count_isSet;
    bool m_header_count_isValid;

    bool m_interpolate_nulls;
    bool m_interpolate_nulls_isSet;
    bool m_interpolate_nulls_isValid;

    QString m_legend_position;
    bool m_legend_position_isSet;
    bool m_legend_position_isValid;

    bool m_line_smoothing;
    bool m_line_smoothing_isSet;
    bool m_line_smoothing_isValid;

    QList<OAIBasicChartSeries> m_series;
    bool m_series_isSet;
    bool m_series_isValid;

    QString m_stacked_type;
    bool m_stacked_type_isSet;
    bool m_stacked_type_isValid;

    bool m_three_dimensional;
    bool m_three_dimensional_isSet;
    bool m_three_dimensional_isValid;

    OAIDataLabel m_total_data_label;
    bool m_total_data_label_isSet;
    bool m_total_data_label_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBasicChartSpec)

#endif // OAIBasicChartSpec_H
