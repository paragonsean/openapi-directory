/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAddConditionalFormatRuleRequest.h
 *
 * Adds a new conditional format rule at the given index. All subsequent rules&#39; indexes are incremented.
 */

#ifndef OAIAddConditionalFormatRuleRequest_H
#define OAIAddConditionalFormatRuleRequest_H

#include <QJsonObject>

#include "OAIConditionalFormatRule.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConditionalFormatRule;

class OAIAddConditionalFormatRuleRequest : public OAIObject {
public:
    OAIAddConditionalFormatRuleRequest();
    OAIAddConditionalFormatRuleRequest(QString json);
    ~OAIAddConditionalFormatRuleRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    OAIConditionalFormatRule getRule() const;
    void setRule(const OAIConditionalFormatRule &rule);
    bool is_rule_Set() const;
    bool is_rule_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    OAIConditionalFormatRule m_rule;
    bool m_rule_isSet;
    bool m_rule_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAddConditionalFormatRuleRequest)

#endif // OAIAddConditionalFormatRuleRequest_H
