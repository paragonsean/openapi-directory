/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPasteDataRequest.h
 *
 * Inserts data into the spreadsheet starting at the specified coordinate.
 */

#ifndef OAIPasteDataRequest_H
#define OAIPasteDataRequest_H

#include <QJsonObject>

#include "OAIGridCoordinate.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGridCoordinate;

class OAIPasteDataRequest : public OAIObject {
public:
    OAIPasteDataRequest();
    OAIPasteDataRequest(QString json);
    ~OAIPasteDataRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGridCoordinate getCoordinate() const;
    void setCoordinate(const OAIGridCoordinate &coordinate);
    bool is_coordinate_Set() const;
    bool is_coordinate_Valid() const;

    QString getData() const;
    void setData(const QString &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    QString getDelimiter() const;
    void setDelimiter(const QString &delimiter);
    bool is_delimiter_Set() const;
    bool is_delimiter_Valid() const;

    bool isHtml() const;
    void setHtml(const bool &html);
    bool is_html_Set() const;
    bool is_html_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGridCoordinate m_coordinate;
    bool m_coordinate_isSet;
    bool m_coordinate_isValid;

    QString m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    QString m_delimiter;
    bool m_delimiter_isSet;
    bool m_delimiter_isValid;

    bool m_html;
    bool m_html_isSet;
    bool m_html_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPasteDataRequest)

#endif // OAIPasteDataRequest_H
