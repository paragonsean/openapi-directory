/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPivotGroup.h
 *
 * A single grouping (either row or column) in a pivot table.
 */

#ifndef OAIPivotGroup_H
#define OAIPivotGroup_H

#include <QJsonObject>

#include "OAIDataSourceColumnReference.h"
#include "OAIPivotGroupLimit.h"
#include "OAIPivotGroupRule.h"
#include "OAIPivotGroupSortValueBucket.h"
#include "OAIPivotGroupValueMetadata.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDataSourceColumnReference;
class OAIPivotGroupLimit;
class OAIPivotGroupRule;
class OAIPivotGroupSortValueBucket;
class OAIPivotGroupValueMetadata;

class OAIPivotGroup : public OAIObject {
public:
    OAIPivotGroup();
    OAIPivotGroup(QString json);
    ~OAIPivotGroup() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDataSourceColumnReference getDataSourceColumnReference() const;
    void setDataSourceColumnReference(const OAIDataSourceColumnReference &data_source_column_reference);
    bool is_data_source_column_reference_Set() const;
    bool is_data_source_column_reference_Valid() const;

    OAIPivotGroupLimit getGroupLimit() const;
    void setGroupLimit(const OAIPivotGroupLimit &group_limit);
    bool is_group_limit_Set() const;
    bool is_group_limit_Valid() const;

    OAIPivotGroupRule getGroupRule() const;
    void setGroupRule(const OAIPivotGroupRule &group_rule);
    bool is_group_rule_Set() const;
    bool is_group_rule_Valid() const;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    bool isRepeatHeadings() const;
    void setRepeatHeadings(const bool &repeat_headings);
    bool is_repeat_headings_Set() const;
    bool is_repeat_headings_Valid() const;

    bool isShowTotals() const;
    void setShowTotals(const bool &show_totals);
    bool is_show_totals_Set() const;
    bool is_show_totals_Valid() const;

    QString getSortOrder() const;
    void setSortOrder(const QString &sort_order);
    bool is_sort_order_Set() const;
    bool is_sort_order_Valid() const;

    qint32 getSourceColumnOffset() const;
    void setSourceColumnOffset(const qint32 &source_column_offset);
    bool is_source_column_offset_Set() const;
    bool is_source_column_offset_Valid() const;

    OAIPivotGroupSortValueBucket getValueBucket() const;
    void setValueBucket(const OAIPivotGroupSortValueBucket &value_bucket);
    bool is_value_bucket_Set() const;
    bool is_value_bucket_Valid() const;

    QList<OAIPivotGroupValueMetadata> getValueMetadata() const;
    void setValueMetadata(const QList<OAIPivotGroupValueMetadata> &value_metadata);
    bool is_value_metadata_Set() const;
    bool is_value_metadata_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDataSourceColumnReference m_data_source_column_reference;
    bool m_data_source_column_reference_isSet;
    bool m_data_source_column_reference_isValid;

    OAIPivotGroupLimit m_group_limit;
    bool m_group_limit_isSet;
    bool m_group_limit_isValid;

    OAIPivotGroupRule m_group_rule;
    bool m_group_rule_isSet;
    bool m_group_rule_isValid;

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    bool m_repeat_headings;
    bool m_repeat_headings_isSet;
    bool m_repeat_headings_isValid;

    bool m_show_totals;
    bool m_show_totals_isSet;
    bool m_show_totals_isValid;

    QString m_sort_order;
    bool m_sort_order_isSet;
    bool m_sort_order_isValid;

    qint32 m_source_column_offset;
    bool m_source_column_offset_isSet;
    bool m_source_column_offset_isValid;

    OAIPivotGroupSortValueBucket m_value_bucket;
    bool m_value_bucket_isSet;
    bool m_value_bucket_isValid;

    QList<OAIPivotGroupValueMetadata> m_value_metadata;
    bool m_value_metadata_isSet;
    bool m_value_metadata_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPivotGroup)

#endif // OAIPivotGroup_H
