/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAppendValuesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAppendValuesResponse::OAIAppendValuesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAppendValuesResponse::OAIAppendValuesResponse() {
    this->initializeModel();
}

OAIAppendValuesResponse::~OAIAppendValuesResponse() {}

void OAIAppendValuesResponse::initializeModel() {

    m_spreadsheet_id_isSet = false;
    m_spreadsheet_id_isValid = false;

    m_table_range_isSet = false;
    m_table_range_isValid = false;

    m_updates_isSet = false;
    m_updates_isValid = false;
}

void OAIAppendValuesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAppendValuesResponse::fromJsonObject(QJsonObject json) {

    m_spreadsheet_id_isValid = ::OpenAPI::fromJsonValue(m_spreadsheet_id, json[QString("spreadsheetId")]);
    m_spreadsheet_id_isSet = !json[QString("spreadsheetId")].isNull() && m_spreadsheet_id_isValid;

    m_table_range_isValid = ::OpenAPI::fromJsonValue(m_table_range, json[QString("tableRange")]);
    m_table_range_isSet = !json[QString("tableRange")].isNull() && m_table_range_isValid;

    m_updates_isValid = ::OpenAPI::fromJsonValue(m_updates, json[QString("updates")]);
    m_updates_isSet = !json[QString("updates")].isNull() && m_updates_isValid;
}

QString OAIAppendValuesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAppendValuesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_spreadsheet_id_isSet) {
        obj.insert(QString("spreadsheetId"), ::OpenAPI::toJsonValue(m_spreadsheet_id));
    }
    if (m_table_range_isSet) {
        obj.insert(QString("tableRange"), ::OpenAPI::toJsonValue(m_table_range));
    }
    if (m_updates.isSet()) {
        obj.insert(QString("updates"), ::OpenAPI::toJsonValue(m_updates));
    }
    return obj;
}

QString OAIAppendValuesResponse::getSpreadsheetId() const {
    return m_spreadsheet_id;
}
void OAIAppendValuesResponse::setSpreadsheetId(const QString &spreadsheet_id) {
    m_spreadsheet_id = spreadsheet_id;
    m_spreadsheet_id_isSet = true;
}

bool OAIAppendValuesResponse::is_spreadsheet_id_Set() const{
    return m_spreadsheet_id_isSet;
}

bool OAIAppendValuesResponse::is_spreadsheet_id_Valid() const{
    return m_spreadsheet_id_isValid;
}

QString OAIAppendValuesResponse::getTableRange() const {
    return m_table_range;
}
void OAIAppendValuesResponse::setTableRange(const QString &table_range) {
    m_table_range = table_range;
    m_table_range_isSet = true;
}

bool OAIAppendValuesResponse::is_table_range_Set() const{
    return m_table_range_isSet;
}

bool OAIAppendValuesResponse::is_table_range_Valid() const{
    return m_table_range_isValid;
}

OAIUpdateValuesResponse OAIAppendValuesResponse::getUpdates() const {
    return m_updates;
}
void OAIAppendValuesResponse::setUpdates(const OAIUpdateValuesResponse &updates) {
    m_updates = updates;
    m_updates_isSet = true;
}

bool OAIAppendValuesResponse::is_updates_Set() const{
    return m_updates_isSet;
}

bool OAIAppendValuesResponse::is_updates_Valid() const{
    return m_updates_isValid;
}

bool OAIAppendValuesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_spreadsheet_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_table_range_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updates.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAppendValuesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
