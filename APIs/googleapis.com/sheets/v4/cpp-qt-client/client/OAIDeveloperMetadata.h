/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeveloperMetadata.h
 *
 * Developer metadata associated with a location or object in a spreadsheet. Developer metadata may be used to associate arbitrary data with various parts of a spreadsheet and will remain associated at those locations as they move around and the spreadsheet is edited. For example, if developer metadata is associated with row 5 and another row is then subsequently inserted above row 5, that original metadata will still be associated with the row it was first associated with (what is now row 6). If the associated object is deleted its metadata is deleted too.
 */

#ifndef OAIDeveloperMetadata_H
#define OAIDeveloperMetadata_H

#include <QJsonObject>

#include "OAIDeveloperMetadataLocation.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDeveloperMetadataLocation;

class OAIDeveloperMetadata : public OAIObject {
public:
    OAIDeveloperMetadata();
    OAIDeveloperMetadata(QString json);
    ~OAIDeveloperMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDeveloperMetadataLocation getLocation() const;
    void setLocation(const OAIDeveloperMetadataLocation &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    qint32 getMetadataId() const;
    void setMetadataId(const qint32 &metadata_id);
    bool is_metadata_id_Set() const;
    bool is_metadata_id_Valid() const;

    QString getMetadataKey() const;
    void setMetadataKey(const QString &metadata_key);
    bool is_metadata_key_Set() const;
    bool is_metadata_key_Valid() const;

    QString getMetadataValue() const;
    void setMetadataValue(const QString &metadata_value);
    bool is_metadata_value_Set() const;
    bool is_metadata_value_Valid() const;

    QString getVisibility() const;
    void setVisibility(const QString &visibility);
    bool is_visibility_Set() const;
    bool is_visibility_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDeveloperMetadataLocation m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    qint32 m_metadata_id;
    bool m_metadata_id_isSet;
    bool m_metadata_id_isValid;

    QString m_metadata_key;
    bool m_metadata_key_isSet;
    bool m_metadata_key_isValid;

    QString m_metadata_value;
    bool m_metadata_value_isSet;
    bool m_metadata_value_isValid;

    QString m_visibility;
    bool m_visibility_isSet;
    bool m_visibility_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeveloperMetadata)

#endif // OAIDeveloperMetadata_H
