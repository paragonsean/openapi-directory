/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataSourceColumn.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataSourceColumn::OAIDataSourceColumn(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataSourceColumn::OAIDataSourceColumn() {
    this->initializeModel();
}

OAIDataSourceColumn::~OAIDataSourceColumn() {}

void OAIDataSourceColumn::initializeModel() {

    m_formula_isSet = false;
    m_formula_isValid = false;

    m_reference_isSet = false;
    m_reference_isValid = false;
}

void OAIDataSourceColumn::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataSourceColumn::fromJsonObject(QJsonObject json) {

    m_formula_isValid = ::OpenAPI::fromJsonValue(m_formula, json[QString("formula")]);
    m_formula_isSet = !json[QString("formula")].isNull() && m_formula_isValid;

    m_reference_isValid = ::OpenAPI::fromJsonValue(m_reference, json[QString("reference")]);
    m_reference_isSet = !json[QString("reference")].isNull() && m_reference_isValid;
}

QString OAIDataSourceColumn::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataSourceColumn::asJsonObject() const {
    QJsonObject obj;
    if (m_formula_isSet) {
        obj.insert(QString("formula"), ::OpenAPI::toJsonValue(m_formula));
    }
    if (m_reference.isSet()) {
        obj.insert(QString("reference"), ::OpenAPI::toJsonValue(m_reference));
    }
    return obj;
}

QString OAIDataSourceColumn::getFormula() const {
    return m_formula;
}
void OAIDataSourceColumn::setFormula(const QString &formula) {
    m_formula = formula;
    m_formula_isSet = true;
}

bool OAIDataSourceColumn::is_formula_Set() const{
    return m_formula_isSet;
}

bool OAIDataSourceColumn::is_formula_Valid() const{
    return m_formula_isValid;
}

OAIDataSourceColumnReference OAIDataSourceColumn::getReference() const {
    return m_reference;
}
void OAIDataSourceColumn::setReference(const OAIDataSourceColumnReference &reference) {
    m_reference = reference;
    m_reference_isSet = true;
}

bool OAIDataSourceColumn::is_reference_Set() const{
    return m_reference_isSet;
}

bool OAIDataSourceColumn::is_reference_Valid() const{
    return m_reference_isValid;
}

bool OAIDataSourceColumn::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_formula_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataSourceColumn::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
