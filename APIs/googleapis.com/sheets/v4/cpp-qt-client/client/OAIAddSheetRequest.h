/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAddSheetRequest.h
 *
 * Adds a new sheet. When a sheet is added at a given index, all subsequent sheets&#39; indexes are incremented. To add an object sheet, use AddChartRequest instead and specify EmbeddedObjectPosition.sheetId or EmbeddedObjectPosition.newSheet.
 */

#ifndef OAIAddSheetRequest_H
#define OAIAddSheetRequest_H

#include <QJsonObject>

#include "OAISheetProperties.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISheetProperties;

class OAIAddSheetRequest : public OAIObject {
public:
    OAIAddSheetRequest();
    OAIAddSheetRequest(QString json);
    ~OAIAddSheetRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISheetProperties getProperties() const;
    void setProperties(const OAISheetProperties &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISheetProperties m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAddSheetRequest)

#endif // OAIAddSheetRequest_H
