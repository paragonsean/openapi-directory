/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRepeatCellRequest.h
 *
 * Updates all cells in the range to the values in the given Cell object. Only the fields listed in the fields field are updated; others are unchanged. If writing a cell with a formula, the formula&#39;s ranges will automatically increment for each field in the range. For example, if writing a cell with formula &#x60;&#x3D;A1&#x60; into range B2:C4, B2 would be &#x60;&#x3D;A1&#x60;, B3 would be &#x60;&#x3D;A2&#x60;, B4 would be &#x60;&#x3D;A3&#x60;, C2 would be &#x60;&#x3D;B1&#x60;, C3 would be &#x60;&#x3D;B2&#x60;, C4 would be &#x60;&#x3D;B3&#x60;. To keep the formula&#39;s ranges static, use the &#x60;$&#x60; indicator. For example, use the formula &#x60;&#x3D;$A$1&#x60; to prevent both the row and the column from incrementing.
 */

#ifndef OAIRepeatCellRequest_H
#define OAIRepeatCellRequest_H

#include <QJsonObject>

#include "OAICellData.h"
#include "OAIGridRange.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICellData;
class OAIGridRange;

class OAIRepeatCellRequest : public OAIObject {
public:
    OAIRepeatCellRequest();
    OAIRepeatCellRequest(QString json);
    ~OAIRepeatCellRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICellData getCell() const;
    void setCell(const OAICellData &cell);
    bool is_cell_Set() const;
    bool is_cell_Valid() const;

    QString getFields() const;
    void setFields(const QString &fields);
    bool is_fields_Set() const;
    bool is_fields_Valid() const;

    OAIGridRange getRange() const;
    void setRange(const OAIGridRange &range);
    bool is_range_Set() const;
    bool is_range_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICellData m_cell;
    bool m_cell_isSet;
    bool m_cell_isValid;

    QString m_fields;
    bool m_fields_isSet;
    bool m_fields_isValid;

    OAIGridRange m_range;
    bool m_range_isSet;
    bool m_range_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRepeatCellRequest)

#endif // OAIRepeatCellRequest_H
