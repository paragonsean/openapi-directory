/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDimensionRange.h
 *
 * A range along a single dimension on a sheet. All indexes are zero-based. Indexes are half open: the start index is inclusive and the end index is exclusive. Missing indexes indicate the range is unbounded on that side.
 */

#ifndef OAIDimensionRange_H
#define OAIDimensionRange_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDimensionRange : public OAIObject {
public:
    OAIDimensionRange();
    OAIDimensionRange(QString json);
    ~OAIDimensionRange() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDimension() const;
    void setDimension(const QString &dimension);
    bool is_dimension_Set() const;
    bool is_dimension_Valid() const;

    qint32 getEndIndex() const;
    void setEndIndex(const qint32 &end_index);
    bool is_end_index_Set() const;
    bool is_end_index_Valid() const;

    qint32 getSheetId() const;
    void setSheetId(const qint32 &sheet_id);
    bool is_sheet_id_Set() const;
    bool is_sheet_id_Valid() const;

    qint32 getStartIndex() const;
    void setStartIndex(const qint32 &start_index);
    bool is_start_index_Set() const;
    bool is_start_index_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_dimension;
    bool m_dimension_isSet;
    bool m_dimension_isValid;

    qint32 m_end_index;
    bool m_end_index_isSet;
    bool m_end_index_isValid;

    qint32 m_sheet_id;
    bool m_sheet_id_isSet;
    bool m_sheet_id_isValid;

    qint32 m_start_index;
    bool m_start_index_isSet;
    bool m_start_index_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDimensionRange)

#endif // OAIDimensionRange_H
