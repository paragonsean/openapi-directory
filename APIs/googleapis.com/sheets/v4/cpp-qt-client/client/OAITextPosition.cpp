/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITextPosition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITextPosition::OAITextPosition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITextPosition::OAITextPosition() {
    this->initializeModel();
}

OAITextPosition::~OAITextPosition() {}

void OAITextPosition::initializeModel() {

    m_horizontal_alignment_isSet = false;
    m_horizontal_alignment_isValid = false;
}

void OAITextPosition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITextPosition::fromJsonObject(QJsonObject json) {

    m_horizontal_alignment_isValid = ::OpenAPI::fromJsonValue(m_horizontal_alignment, json[QString("horizontalAlignment")]);
    m_horizontal_alignment_isSet = !json[QString("horizontalAlignment")].isNull() && m_horizontal_alignment_isValid;
}

QString OAITextPosition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITextPosition::asJsonObject() const {
    QJsonObject obj;
    if (m_horizontal_alignment_isSet) {
        obj.insert(QString("horizontalAlignment"), ::OpenAPI::toJsonValue(m_horizontal_alignment));
    }
    return obj;
}

QString OAITextPosition::getHorizontalAlignment() const {
    return m_horizontal_alignment;
}
void OAITextPosition::setHorizontalAlignment(const QString &horizontal_alignment) {
    m_horizontal_alignment = horizontal_alignment;
    m_horizontal_alignment_isSet = true;
}

bool OAITextPosition::is_horizontal_alignment_Set() const{
    return m_horizontal_alignment_isSet;
}

bool OAITextPosition::is_horizontal_alignment_Valid() const{
    return m_horizontal_alignment_isValid;
}

bool OAITextPosition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_horizontal_alignment_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITextPosition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
