/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateSlicerSpecRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateSlicerSpecRequest::OAIUpdateSlicerSpecRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateSlicerSpecRequest::OAIUpdateSlicerSpecRequest() {
    this->initializeModel();
}

OAIUpdateSlicerSpecRequest::~OAIUpdateSlicerSpecRequest() {}

void OAIUpdateSlicerSpecRequest::initializeModel() {

    m_fields_isSet = false;
    m_fields_isValid = false;

    m_slicer_id_isSet = false;
    m_slicer_id_isValid = false;

    m_spec_isSet = false;
    m_spec_isValid = false;
}

void OAIUpdateSlicerSpecRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateSlicerSpecRequest::fromJsonObject(QJsonObject json) {

    m_fields_isValid = ::OpenAPI::fromJsonValue(m_fields, json[QString("fields")]);
    m_fields_isSet = !json[QString("fields")].isNull() && m_fields_isValid;

    m_slicer_id_isValid = ::OpenAPI::fromJsonValue(m_slicer_id, json[QString("slicerId")]);
    m_slicer_id_isSet = !json[QString("slicerId")].isNull() && m_slicer_id_isValid;

    m_spec_isValid = ::OpenAPI::fromJsonValue(m_spec, json[QString("spec")]);
    m_spec_isSet = !json[QString("spec")].isNull() && m_spec_isValid;
}

QString OAIUpdateSlicerSpecRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateSlicerSpecRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_fields_isSet) {
        obj.insert(QString("fields"), ::OpenAPI::toJsonValue(m_fields));
    }
    if (m_slicer_id_isSet) {
        obj.insert(QString("slicerId"), ::OpenAPI::toJsonValue(m_slicer_id));
    }
    if (m_spec.isSet()) {
        obj.insert(QString("spec"), ::OpenAPI::toJsonValue(m_spec));
    }
    return obj;
}

QString OAIUpdateSlicerSpecRequest::getFields() const {
    return m_fields;
}
void OAIUpdateSlicerSpecRequest::setFields(const QString &fields) {
    m_fields = fields;
    m_fields_isSet = true;
}

bool OAIUpdateSlicerSpecRequest::is_fields_Set() const{
    return m_fields_isSet;
}

bool OAIUpdateSlicerSpecRequest::is_fields_Valid() const{
    return m_fields_isValid;
}

qint32 OAIUpdateSlicerSpecRequest::getSlicerId() const {
    return m_slicer_id;
}
void OAIUpdateSlicerSpecRequest::setSlicerId(const qint32 &slicer_id) {
    m_slicer_id = slicer_id;
    m_slicer_id_isSet = true;
}

bool OAIUpdateSlicerSpecRequest::is_slicer_id_Set() const{
    return m_slicer_id_isSet;
}

bool OAIUpdateSlicerSpecRequest::is_slicer_id_Valid() const{
    return m_slicer_id_isValid;
}

OAISlicerSpec OAIUpdateSlicerSpecRequest::getSpec() const {
    return m_spec;
}
void OAIUpdateSlicerSpecRequest::setSpec(const OAISlicerSpec &spec) {
    m_spec = spec;
    m_spec_isSet = true;
}

bool OAIUpdateSlicerSpecRequest::is_spec_Set() const{
    return m_spec_isSet;
}

bool OAIUpdateSlicerSpecRequest::is_spec_Valid() const{
    return m_spec_isValid;
}

bool OAIUpdateSlicerSpecRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_slicer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateSlicerSpecRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
