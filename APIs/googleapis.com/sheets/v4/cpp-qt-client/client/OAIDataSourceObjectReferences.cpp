/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataSourceObjectReferences.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataSourceObjectReferences::OAIDataSourceObjectReferences(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataSourceObjectReferences::OAIDataSourceObjectReferences() {
    this->initializeModel();
}

OAIDataSourceObjectReferences::~OAIDataSourceObjectReferences() {}

void OAIDataSourceObjectReferences::initializeModel() {

    m_references_isSet = false;
    m_references_isValid = false;
}

void OAIDataSourceObjectReferences::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataSourceObjectReferences::fromJsonObject(QJsonObject json) {

    m_references_isValid = ::OpenAPI::fromJsonValue(m_references, json[QString("references")]);
    m_references_isSet = !json[QString("references")].isNull() && m_references_isValid;
}

QString OAIDataSourceObjectReferences::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataSourceObjectReferences::asJsonObject() const {
    QJsonObject obj;
    if (m_references.size() > 0) {
        obj.insert(QString("references"), ::OpenAPI::toJsonValue(m_references));
    }
    return obj;
}

QList<OAIDataSourceObjectReference> OAIDataSourceObjectReferences::getReferences() const {
    return m_references;
}
void OAIDataSourceObjectReferences::setReferences(const QList<OAIDataSourceObjectReference> &references) {
    m_references = references;
    m_references_isSet = true;
}

bool OAIDataSourceObjectReferences::is_references_Set() const{
    return m_references_isSet;
}

bool OAIDataSourceObjectReferences::is_references_Valid() const{
    return m_references_isValid;
}

bool OAIDataSourceObjectReferences::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_references.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataSourceObjectReferences::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
