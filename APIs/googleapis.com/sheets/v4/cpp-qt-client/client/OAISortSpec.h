/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISortSpec.h
 *
 * A sort order associated with a specific column or row.
 */

#ifndef OAISortSpec_H
#define OAISortSpec_H

#include <QJsonObject>

#include "OAIColor.h"
#include "OAIColorStyle.h"
#include "OAIDataSourceColumnReference.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIColor;
class OAIColorStyle;
class OAIDataSourceColumnReference;

class OAISortSpec : public OAIObject {
public:
    OAISortSpec();
    OAISortSpec(QString json);
    ~OAISortSpec() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIColor getBackgroundColor() const;
    void setBackgroundColor(const OAIColor &background_color);
    bool is_background_color_Set() const;
    bool is_background_color_Valid() const;

    OAIColorStyle getBackgroundColorStyle() const;
    void setBackgroundColorStyle(const OAIColorStyle &background_color_style);
    bool is_background_color_style_Set() const;
    bool is_background_color_style_Valid() const;

    OAIDataSourceColumnReference getDataSourceColumnReference() const;
    void setDataSourceColumnReference(const OAIDataSourceColumnReference &data_source_column_reference);
    bool is_data_source_column_reference_Set() const;
    bool is_data_source_column_reference_Valid() const;

    qint32 getDimensionIndex() const;
    void setDimensionIndex(const qint32 &dimension_index);
    bool is_dimension_index_Set() const;
    bool is_dimension_index_Valid() const;

    OAIColor getForegroundColor() const;
    void setForegroundColor(const OAIColor &foreground_color);
    bool is_foreground_color_Set() const;
    bool is_foreground_color_Valid() const;

    OAIColorStyle getForegroundColorStyle() const;
    void setForegroundColorStyle(const OAIColorStyle &foreground_color_style);
    bool is_foreground_color_style_Set() const;
    bool is_foreground_color_style_Valid() const;

    QString getSortOrder() const;
    void setSortOrder(const QString &sort_order);
    bool is_sort_order_Set() const;
    bool is_sort_order_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIColor m_background_color;
    bool m_background_color_isSet;
    bool m_background_color_isValid;

    OAIColorStyle m_background_color_style;
    bool m_background_color_style_isSet;
    bool m_background_color_style_isValid;

    OAIDataSourceColumnReference m_data_source_column_reference;
    bool m_data_source_column_reference_isSet;
    bool m_data_source_column_reference_isValid;

    qint32 m_dimension_index;
    bool m_dimension_index_isSet;
    bool m_dimension_index_isValid;

    OAIColor m_foreground_color;
    bool m_foreground_color_isSet;
    bool m_foreground_color_isValid;

    OAIColorStyle m_foreground_color_style;
    bool m_foreground_color_style_isSet;
    bool m_foreground_color_style_isValid;

    QString m_sort_order;
    bool m_sort_order_isSet;
    bool m_sort_order_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISortSpec)

#endif // OAISortSpec_H
