/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBasicChartDomain.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBasicChartDomain::OAIBasicChartDomain(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBasicChartDomain::OAIBasicChartDomain() {
    this->initializeModel();
}

OAIBasicChartDomain::~OAIBasicChartDomain() {}

void OAIBasicChartDomain::initializeModel() {

    m_domain_isSet = false;
    m_domain_isValid = false;

    m_reversed_isSet = false;
    m_reversed_isValid = false;
}

void OAIBasicChartDomain::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBasicChartDomain::fromJsonObject(QJsonObject json) {

    m_domain_isValid = ::OpenAPI::fromJsonValue(m_domain, json[QString("domain")]);
    m_domain_isSet = !json[QString("domain")].isNull() && m_domain_isValid;

    m_reversed_isValid = ::OpenAPI::fromJsonValue(m_reversed, json[QString("reversed")]);
    m_reversed_isSet = !json[QString("reversed")].isNull() && m_reversed_isValid;
}

QString OAIBasicChartDomain::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBasicChartDomain::asJsonObject() const {
    QJsonObject obj;
    if (m_domain.isSet()) {
        obj.insert(QString("domain"), ::OpenAPI::toJsonValue(m_domain));
    }
    if (m_reversed_isSet) {
        obj.insert(QString("reversed"), ::OpenAPI::toJsonValue(m_reversed));
    }
    return obj;
}

OAIChartData OAIBasicChartDomain::getDomain() const {
    return m_domain;
}
void OAIBasicChartDomain::setDomain(const OAIChartData &domain) {
    m_domain = domain;
    m_domain_isSet = true;
}

bool OAIBasicChartDomain::is_domain_Set() const{
    return m_domain_isSet;
}

bool OAIBasicChartDomain::is_domain_Valid() const{
    return m_domain_isValid;
}

bool OAIBasicChartDomain::isReversed() const {
    return m_reversed;
}
void OAIBasicChartDomain::setReversed(const bool &reversed) {
    m_reversed = reversed;
    m_reversed_isSet = true;
}

bool OAIBasicChartDomain::is_reversed_Set() const{
    return m_reversed_isSet;
}

bool OAIBasicChartDomain::is_reversed_Valid() const{
    return m_reversed_isValid;
}

bool OAIBasicChartDomain::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_domain.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reversed_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBasicChartDomain::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
