/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISheet.h
 *
 * A sheet in a spreadsheet.
 */

#ifndef OAISheet_H
#define OAISheet_H

#include <QJsonObject>

#include "OAIBandedRange.h"
#include "OAIBasicFilter.h"
#include "OAIConditionalFormatRule.h"
#include "OAIDeveloperMetadata.h"
#include "OAIDimensionGroup.h"
#include "OAIEmbeddedChart.h"
#include "OAIFilterView.h"
#include "OAIGridData.h"
#include "OAIGridRange.h"
#include "OAIProtectedRange.h"
#include "OAISheetProperties.h"
#include "OAISlicer.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBandedRange;
class OAIBasicFilter;
class OAIEmbeddedChart;
class OAIDimensionGroup;
class OAIConditionalFormatRule;
class OAIGridData;
class OAIDeveloperMetadata;
class OAIFilterView;
class OAIGridRange;
class OAISheetProperties;
class OAIProtectedRange;
class OAISlicer;

class OAISheet : public OAIObject {
public:
    OAISheet();
    OAISheet(QString json);
    ~OAISheet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIBandedRange> getBandedRanges() const;
    void setBandedRanges(const QList<OAIBandedRange> &banded_ranges);
    bool is_banded_ranges_Set() const;
    bool is_banded_ranges_Valid() const;

    OAIBasicFilter getBasicFilter() const;
    void setBasicFilter(const OAIBasicFilter &basic_filter);
    bool is_basic_filter_Set() const;
    bool is_basic_filter_Valid() const;

    QList<OAIEmbeddedChart> getCharts() const;
    void setCharts(const QList<OAIEmbeddedChart> &charts);
    bool is_charts_Set() const;
    bool is_charts_Valid() const;

    QList<OAIDimensionGroup> getColumnGroups() const;
    void setColumnGroups(const QList<OAIDimensionGroup> &column_groups);
    bool is_column_groups_Set() const;
    bool is_column_groups_Valid() const;

    QList<OAIConditionalFormatRule> getConditionalFormats() const;
    void setConditionalFormats(const QList<OAIConditionalFormatRule> &conditional_formats);
    bool is_conditional_formats_Set() const;
    bool is_conditional_formats_Valid() const;

    QList<OAIGridData> getData() const;
    void setData(const QList<OAIGridData> &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    QList<OAIDeveloperMetadata> getDeveloperMetadata() const;
    void setDeveloperMetadata(const QList<OAIDeveloperMetadata> &developer_metadata);
    bool is_developer_metadata_Set() const;
    bool is_developer_metadata_Valid() const;

    QList<OAIFilterView> getFilterViews() const;
    void setFilterViews(const QList<OAIFilterView> &filter_views);
    bool is_filter_views_Set() const;
    bool is_filter_views_Valid() const;

    QList<OAIGridRange> getMerges() const;
    void setMerges(const QList<OAIGridRange> &merges);
    bool is_merges_Set() const;
    bool is_merges_Valid() const;

    OAISheetProperties getProperties() const;
    void setProperties(const OAISheetProperties &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    QList<OAIProtectedRange> getProtectedRanges() const;
    void setProtectedRanges(const QList<OAIProtectedRange> &protected_ranges);
    bool is_protected_ranges_Set() const;
    bool is_protected_ranges_Valid() const;

    QList<OAIDimensionGroup> getRowGroups() const;
    void setRowGroups(const QList<OAIDimensionGroup> &row_groups);
    bool is_row_groups_Set() const;
    bool is_row_groups_Valid() const;

    QList<OAISlicer> getSlicers() const;
    void setSlicers(const QList<OAISlicer> &slicers);
    bool is_slicers_Set() const;
    bool is_slicers_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIBandedRange> m_banded_ranges;
    bool m_banded_ranges_isSet;
    bool m_banded_ranges_isValid;

    OAIBasicFilter m_basic_filter;
    bool m_basic_filter_isSet;
    bool m_basic_filter_isValid;

    QList<OAIEmbeddedChart> m_charts;
    bool m_charts_isSet;
    bool m_charts_isValid;

    QList<OAIDimensionGroup> m_column_groups;
    bool m_column_groups_isSet;
    bool m_column_groups_isValid;

    QList<OAIConditionalFormatRule> m_conditional_formats;
    bool m_conditional_formats_isSet;
    bool m_conditional_formats_isValid;

    QList<OAIGridData> m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    QList<OAIDeveloperMetadata> m_developer_metadata;
    bool m_developer_metadata_isSet;
    bool m_developer_metadata_isValid;

    QList<OAIFilterView> m_filter_views;
    bool m_filter_views_isSet;
    bool m_filter_views_isValid;

    QList<OAIGridRange> m_merges;
    bool m_merges_isSet;
    bool m_merges_isValid;

    OAISheetProperties m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;

    QList<OAIProtectedRange> m_protected_ranges;
    bool m_protected_ranges_isSet;
    bool m_protected_ranges_isValid;

    QList<OAIDimensionGroup> m_row_groups;
    bool m_row_groups_isSet;
    bool m_row_groups_isValid;

    QList<OAISlicer> m_slicers;
    bool m_slicers_isSet;
    bool m_slicers_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISheet)

#endif // OAISheet_H
