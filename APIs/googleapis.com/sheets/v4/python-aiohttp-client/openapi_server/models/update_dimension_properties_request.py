# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_source_sheet_dimension_range import DataSourceSheetDimensionRange
from openapi_server.models.dimension_properties import DimensionProperties
from openapi_server.models.dimension_range import DimensionRange
from openapi_server import util


class UpdateDimensionPropertiesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_source_sheet_range: DataSourceSheetDimensionRange=None, fields: str=None, properties: DimensionProperties=None, range: DimensionRange=None):
        """UpdateDimensionPropertiesRequest - a model defined in OpenAPI

        :param data_source_sheet_range: The data_source_sheet_range of this UpdateDimensionPropertiesRequest.
        :param fields: The fields of this UpdateDimensionPropertiesRequest.
        :param properties: The properties of this UpdateDimensionPropertiesRequest.
        :param range: The range of this UpdateDimensionPropertiesRequest.
        """
        self.openapi_types = {
            'data_source_sheet_range': DataSourceSheetDimensionRange,
            'fields': str,
            'properties': DimensionProperties,
            'range': DimensionRange
        }

        self.attribute_map = {
            'data_source_sheet_range': 'dataSourceSheetRange',
            'fields': 'fields',
            'properties': 'properties',
            'range': 'range'
        }

        self._data_source_sheet_range = data_source_sheet_range
        self._fields = fields
        self._properties = properties
        self._range = range

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateDimensionPropertiesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateDimensionPropertiesRequest of this UpdateDimensionPropertiesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_source_sheet_range(self):
        """Gets the data_source_sheet_range of this UpdateDimensionPropertiesRequest.


        :return: The data_source_sheet_range of this UpdateDimensionPropertiesRequest.
        :rtype: DataSourceSheetDimensionRange
        """
        return self._data_source_sheet_range

    @data_source_sheet_range.setter
    def data_source_sheet_range(self, data_source_sheet_range):
        """Sets the data_source_sheet_range of this UpdateDimensionPropertiesRequest.


        :param data_source_sheet_range: The data_source_sheet_range of this UpdateDimensionPropertiesRequest.
        :type data_source_sheet_range: DataSourceSheetDimensionRange
        """

        self._data_source_sheet_range = data_source_sheet_range

    @property
    def fields(self):
        """Gets the fields of this UpdateDimensionPropertiesRequest.

        The fields that should be updated. At least one field must be specified. The root `properties` is implied and should not be specified. A single `\"*\"` can be used as short-hand for listing every field.

        :return: The fields of this UpdateDimensionPropertiesRequest.
        :rtype: str
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this UpdateDimensionPropertiesRequest.

        The fields that should be updated. At least one field must be specified. The root `properties` is implied and should not be specified. A single `\"*\"` can be used as short-hand for listing every field.

        :param fields: The fields of this UpdateDimensionPropertiesRequest.
        :type fields: str
        """

        self._fields = fields

    @property
    def properties(self):
        """Gets the properties of this UpdateDimensionPropertiesRequest.


        :return: The properties of this UpdateDimensionPropertiesRequest.
        :rtype: DimensionProperties
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this UpdateDimensionPropertiesRequest.


        :param properties: The properties of this UpdateDimensionPropertiesRequest.
        :type properties: DimensionProperties
        """

        self._properties = properties

    @property
    def range(self):
        """Gets the range of this UpdateDimensionPropertiesRequest.


        :return: The range of this UpdateDimensionPropertiesRequest.
        :rtype: DimensionRange
        """
        return self._range

    @range.setter
    def range(self, range):
        """Sets the range of this UpdateDimensionPropertiesRequest.


        :param range: The range of this UpdateDimensionPropertiesRequest.
        :type range: DimensionRange
        """

        self._range = range
