# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TextPosition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, horizontal_alignment: str=None):
        """TextPosition - a model defined in OpenAPI

        :param horizontal_alignment: The horizontal_alignment of this TextPosition.
        """
        self.openapi_types = {
            'horizontal_alignment': str
        }

        self.attribute_map = {
            'horizontal_alignment': 'horizontalAlignment'
        }

        self._horizontal_alignment = horizontal_alignment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TextPosition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TextPosition of this TextPosition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def horizontal_alignment(self):
        """Gets the horizontal_alignment of this TextPosition.

        Horizontal alignment setting for the piece of text.

        :return: The horizontal_alignment of this TextPosition.
        :rtype: str
        """
        return self._horizontal_alignment

    @horizontal_alignment.setter
    def horizontal_alignment(self, horizontal_alignment):
        """Sets the horizontal_alignment of this TextPosition.

        Horizontal alignment setting for the piece of text.

        :param horizontal_alignment: The horizontal_alignment of this TextPosition.
        :type horizontal_alignment: str
        """
        allowed_values = ["HORIZONTAL_ALIGN_UNSPECIFIED", "LEFT", "CENTER", "RIGHT"]  # noqa: E501
        if horizontal_alignment not in allowed_values:
            raise ValueError(
                "Invalid value for `horizontal_alignment` ({0}), must be one of {1}"
                .format(horizontal_alignment, allowed_values)
            )

        self._horizontal_alignment = horizontal_alignment
