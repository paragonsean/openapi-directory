# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.extended_value import ExtendedValue
from openapi_server import util


class PivotGroupSortValueBucket(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, buckets: List[ExtendedValue]=None, values_index: int=None):
        """PivotGroupSortValueBucket - a model defined in OpenAPI

        :param buckets: The buckets of this PivotGroupSortValueBucket.
        :param values_index: The values_index of this PivotGroupSortValueBucket.
        """
        self.openapi_types = {
            'buckets': List[ExtendedValue],
            'values_index': int
        }

        self.attribute_map = {
            'buckets': 'buckets',
            'values_index': 'valuesIndex'
        }

        self._buckets = buckets
        self._values_index = values_index

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PivotGroupSortValueBucket':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PivotGroupSortValueBucket of this PivotGroupSortValueBucket.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def buckets(self):
        """Gets the buckets of this PivotGroupSortValueBucket.

        Determines the bucket from which values are chosen to sort. For example, in a pivot table with one row group & two column groups, the row group can list up to two values. The first value corresponds to a value within the first column group, and the second value corresponds to a value in the second column group. If no values are listed, this would indicate that the row should be sorted according to the \"Grand Total\" over the column groups. If a single value is listed, this would correspond to using the \"Total\" of that bucket.

        :return: The buckets of this PivotGroupSortValueBucket.
        :rtype: List[ExtendedValue]
        """
        return self._buckets

    @buckets.setter
    def buckets(self, buckets):
        """Sets the buckets of this PivotGroupSortValueBucket.

        Determines the bucket from which values are chosen to sort. For example, in a pivot table with one row group & two column groups, the row group can list up to two values. The first value corresponds to a value within the first column group, and the second value corresponds to a value in the second column group. If no values are listed, this would indicate that the row should be sorted according to the \"Grand Total\" over the column groups. If a single value is listed, this would correspond to using the \"Total\" of that bucket.

        :param buckets: The buckets of this PivotGroupSortValueBucket.
        :type buckets: List[ExtendedValue]
        """

        self._buckets = buckets

    @property
    def values_index(self):
        """Gets the values_index of this PivotGroupSortValueBucket.

        The offset in the PivotTable.values list which the values in this grouping should be sorted by.

        :return: The values_index of this PivotGroupSortValueBucket.
        :rtype: int
        """
        return self._values_index

    @values_index.setter
    def values_index(self, values_index):
        """Sets the values_index of this PivotGroupSortValueBucket.

        The offset in the PivotTable.values list which the values in this grouping should be sorted by.

        :param values_index: The values_index of this PivotGroupSortValueBucket.
        :type values_index: int
        """

        self._values_index = values_index
