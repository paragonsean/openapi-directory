# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteSheetRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sheet_id: int=None):
        """DeleteSheetRequest - a model defined in OpenAPI

        :param sheet_id: The sheet_id of this DeleteSheetRequest.
        """
        self.openapi_types = {
            'sheet_id': int
        }

        self.attribute_map = {
            'sheet_id': 'sheetId'
        }

        self._sheet_id = sheet_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteSheetRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteSheetRequest of this DeleteSheetRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sheet_id(self):
        """Gets the sheet_id of this DeleteSheetRequest.

        The ID of the sheet to delete. If the sheet is of DATA_SOURCE type, the associated DataSource is also deleted.

        :return: The sheet_id of this DeleteSheetRequest.
        :rtype: int
        """
        return self._sheet_id

    @sheet_id.setter
    def sheet_id(self, sheet_id):
        """Sets the sheet_id of this DeleteSheetRequest.

        The ID of the sheet to delete. If the sheet is of DATA_SOURCE type, the associated DataSource is also deleted.

        :param sheet_id: The sheet_id of this DeleteSheetRequest.
        :type sheet_id: int
        """

        self._sheet_id = sheet_id
