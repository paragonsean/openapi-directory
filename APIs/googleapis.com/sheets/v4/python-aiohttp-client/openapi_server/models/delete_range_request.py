# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.grid_range import GridRange
from openapi_server import util


class DeleteRangeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, range: GridRange=None, shift_dimension: str=None):
        """DeleteRangeRequest - a model defined in OpenAPI

        :param range: The range of this DeleteRangeRequest.
        :param shift_dimension: The shift_dimension of this DeleteRangeRequest.
        """
        self.openapi_types = {
            'range': GridRange,
            'shift_dimension': str
        }

        self.attribute_map = {
            'range': 'range',
            'shift_dimension': 'shiftDimension'
        }

        self._range = range
        self._shift_dimension = shift_dimension

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteRangeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteRangeRequest of this DeleteRangeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def range(self):
        """Gets the range of this DeleteRangeRequest.


        :return: The range of this DeleteRangeRequest.
        :rtype: GridRange
        """
        return self._range

    @range.setter
    def range(self, range):
        """Sets the range of this DeleteRangeRequest.


        :param range: The range of this DeleteRangeRequest.
        :type range: GridRange
        """

        self._range = range

    @property
    def shift_dimension(self):
        """Gets the shift_dimension of this DeleteRangeRequest.

        The dimension from which deleted cells will be replaced with. If ROWS, existing cells will be shifted upward to replace the deleted cells. If COLUMNS, existing cells will be shifted left to replace the deleted cells.

        :return: The shift_dimension of this DeleteRangeRequest.
        :rtype: str
        """
        return self._shift_dimension

    @shift_dimension.setter
    def shift_dimension(self, shift_dimension):
        """Sets the shift_dimension of this DeleteRangeRequest.

        The dimension from which deleted cells will be replaced with. If ROWS, existing cells will be shifted upward to replace the deleted cells. If COLUMNS, existing cells will be shifted left to replace the deleted cells.

        :param shift_dimension: The shift_dimension of this DeleteRangeRequest.
        :type shift_dimension: str
        """
        allowed_values = ["DIMENSION_UNSPECIFIED", "ROWS", "COLUMNS"]  # noqa: E501
        if shift_dimension not in allowed_values:
            raise ValueError(
                "Invalid value for `shift_dimension` ({0}), must be one of {1}"
                .format(shift_dimension, allowed_values)
            )

        self._shift_dimension = shift_dimension
