# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_filter import DataFilter
from openapi_server.models.value_range import ValueRange
from openapi_server import util


class MatchedValueRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_filters: List[DataFilter]=None, value_range: ValueRange=None):
        """MatchedValueRange - a model defined in OpenAPI

        :param data_filters: The data_filters of this MatchedValueRange.
        :param value_range: The value_range of this MatchedValueRange.
        """
        self.openapi_types = {
            'data_filters': List[DataFilter],
            'value_range': ValueRange
        }

        self.attribute_map = {
            'data_filters': 'dataFilters',
            'value_range': 'valueRange'
        }

        self._data_filters = data_filters
        self._value_range = value_range

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MatchedValueRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MatchedValueRange of this MatchedValueRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_filters(self):
        """Gets the data_filters of this MatchedValueRange.

        The DataFilters from the request that matched the range of values.

        :return: The data_filters of this MatchedValueRange.
        :rtype: List[DataFilter]
        """
        return self._data_filters

    @data_filters.setter
    def data_filters(self, data_filters):
        """Sets the data_filters of this MatchedValueRange.

        The DataFilters from the request that matched the range of values.

        :param data_filters: The data_filters of this MatchedValueRange.
        :type data_filters: List[DataFilter]
        """

        self._data_filters = data_filters

    @property
    def value_range(self):
        """Gets the value_range of this MatchedValueRange.


        :return: The value_range of this MatchedValueRange.
        :rtype: ValueRange
        """
        return self._value_range

    @value_range.setter
    def value_range(self, value_range):
        """Sets the value_range of this MatchedValueRange.


        :param value_range: The value_range of this MatchedValueRange.
        :type value_range: ValueRange
        """

        self._value_range = value_range
