# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_filter_value_range import DataFilterValueRange
from openapi_server import util


class BatchUpdateValuesByDataFilterRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data: List[DataFilterValueRange]=None, include_values_in_response: bool=None, response_date_time_render_option: str=None, response_value_render_option: str=None, value_input_option: str=None):
        """BatchUpdateValuesByDataFilterRequest - a model defined in OpenAPI

        :param data: The data of this BatchUpdateValuesByDataFilterRequest.
        :param include_values_in_response: The include_values_in_response of this BatchUpdateValuesByDataFilterRequest.
        :param response_date_time_render_option: The response_date_time_render_option of this BatchUpdateValuesByDataFilterRequest.
        :param response_value_render_option: The response_value_render_option of this BatchUpdateValuesByDataFilterRequest.
        :param value_input_option: The value_input_option of this BatchUpdateValuesByDataFilterRequest.
        """
        self.openapi_types = {
            'data': List[DataFilterValueRange],
            'include_values_in_response': bool,
            'response_date_time_render_option': str,
            'response_value_render_option': str,
            'value_input_option': str
        }

        self.attribute_map = {
            'data': 'data',
            'include_values_in_response': 'includeValuesInResponse',
            'response_date_time_render_option': 'responseDateTimeRenderOption',
            'response_value_render_option': 'responseValueRenderOption',
            'value_input_option': 'valueInputOption'
        }

        self._data = data
        self._include_values_in_response = include_values_in_response
        self._response_date_time_render_option = response_date_time_render_option
        self._response_value_render_option = response_value_render_option
        self._value_input_option = value_input_option

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchUpdateValuesByDataFilterRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchUpdateValuesByDataFilterRequest of this BatchUpdateValuesByDataFilterRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self):
        """Gets the data of this BatchUpdateValuesByDataFilterRequest.

        The new values to apply to the spreadsheet. If more than one range is matched by the specified DataFilter the specified values are applied to all of those ranges.

        :return: The data of this BatchUpdateValuesByDataFilterRequest.
        :rtype: List[DataFilterValueRange]
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this BatchUpdateValuesByDataFilterRequest.

        The new values to apply to the spreadsheet. If more than one range is matched by the specified DataFilter the specified values are applied to all of those ranges.

        :param data: The data of this BatchUpdateValuesByDataFilterRequest.
        :type data: List[DataFilterValueRange]
        """

        self._data = data

    @property
    def include_values_in_response(self):
        """Gets the include_values_in_response of this BatchUpdateValuesByDataFilterRequest.

        Determines if the update response should include the values of the cells that were updated. By default, responses do not include the updated values. The `updatedData` field within each of the BatchUpdateValuesResponse.responses contains the updated values. If the range to write was larger than the range actually written, the response includes all values in the requested range (excluding trailing empty rows and columns).

        :return: The include_values_in_response of this BatchUpdateValuesByDataFilterRequest.
        :rtype: bool
        """
        return self._include_values_in_response

    @include_values_in_response.setter
    def include_values_in_response(self, include_values_in_response):
        """Sets the include_values_in_response of this BatchUpdateValuesByDataFilterRequest.

        Determines if the update response should include the values of the cells that were updated. By default, responses do not include the updated values. The `updatedData` field within each of the BatchUpdateValuesResponse.responses contains the updated values. If the range to write was larger than the range actually written, the response includes all values in the requested range (excluding trailing empty rows and columns).

        :param include_values_in_response: The include_values_in_response of this BatchUpdateValuesByDataFilterRequest.
        :type include_values_in_response: bool
        """

        self._include_values_in_response = include_values_in_response

    @property
    def response_date_time_render_option(self):
        """Gets the response_date_time_render_option of this BatchUpdateValuesByDataFilterRequest.

        Determines how dates, times, and durations in the response should be rendered. This is ignored if response_value_render_option is FORMATTED_VALUE. The default dateTime render option is SERIAL_NUMBER.

        :return: The response_date_time_render_option of this BatchUpdateValuesByDataFilterRequest.
        :rtype: str
        """
        return self._response_date_time_render_option

    @response_date_time_render_option.setter
    def response_date_time_render_option(self, response_date_time_render_option):
        """Sets the response_date_time_render_option of this BatchUpdateValuesByDataFilterRequest.

        Determines how dates, times, and durations in the response should be rendered. This is ignored if response_value_render_option is FORMATTED_VALUE. The default dateTime render option is SERIAL_NUMBER.

        :param response_date_time_render_option: The response_date_time_render_option of this BatchUpdateValuesByDataFilterRequest.
        :type response_date_time_render_option: str
        """
        allowed_values = ["SERIAL_NUMBER", "FORMATTED_STRING"]  # noqa: E501
        if response_date_time_render_option not in allowed_values:
            raise ValueError(
                "Invalid value for `response_date_time_render_option` ({0}), must be one of {1}"
                .format(response_date_time_render_option, allowed_values)
            )

        self._response_date_time_render_option = response_date_time_render_option

    @property
    def response_value_render_option(self):
        """Gets the response_value_render_option of this BatchUpdateValuesByDataFilterRequest.

        Determines how values in the response should be rendered. The default render option is FORMATTED_VALUE.

        :return: The response_value_render_option of this BatchUpdateValuesByDataFilterRequest.
        :rtype: str
        """
        return self._response_value_render_option

    @response_value_render_option.setter
    def response_value_render_option(self, response_value_render_option):
        """Sets the response_value_render_option of this BatchUpdateValuesByDataFilterRequest.

        Determines how values in the response should be rendered. The default render option is FORMATTED_VALUE.

        :param response_value_render_option: The response_value_render_option of this BatchUpdateValuesByDataFilterRequest.
        :type response_value_render_option: str
        """
        allowed_values = ["FORMATTED_VALUE", "UNFORMATTED_VALUE", "FORMULA"]  # noqa: E501
        if response_value_render_option not in allowed_values:
            raise ValueError(
                "Invalid value for `response_value_render_option` ({0}), must be one of {1}"
                .format(response_value_render_option, allowed_values)
            )

        self._response_value_render_option = response_value_render_option

    @property
    def value_input_option(self):
        """Gets the value_input_option of this BatchUpdateValuesByDataFilterRequest.

        How the input data should be interpreted.

        :return: The value_input_option of this BatchUpdateValuesByDataFilterRequest.
        :rtype: str
        """
        return self._value_input_option

    @value_input_option.setter
    def value_input_option(self, value_input_option):
        """Sets the value_input_option of this BatchUpdateValuesByDataFilterRequest.

        How the input data should be interpreted.

        :param value_input_option: The value_input_option of this BatchUpdateValuesByDataFilterRequest.
        :type value_input_option: str
        """
        allowed_values = ["INPUT_VALUE_OPTION_UNSPECIFIED", "RAW", "USER_ENTERED"]  # noqa: E501
        if value_input_option not in allowed_values:
            raise ValueError(
                "Invalid value for `value_input_option` ({0}), must be one of {1}"
                .format(value_input_option, allowed_values)
            )

        self._value_input_option = value_input_option
