# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_source_object_reference import DataSourceObjectReference
from openapi_server import util


class DataSourceObjectReferences(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, references: List[DataSourceObjectReference]=None):
        """DataSourceObjectReferences - a model defined in OpenAPI

        :param references: The references of this DataSourceObjectReferences.
        """
        self.openapi_types = {
            'references': List[DataSourceObjectReference]
        }

        self.attribute_map = {
            'references': 'references'
        }

        self._references = references

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataSourceObjectReferences':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataSourceObjectReferences of this DataSourceObjectReferences.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def references(self):
        """Gets the references of this DataSourceObjectReferences.

        The references.

        :return: The references of this DataSourceObjectReferences.
        :rtype: List[DataSourceObjectReference]
        """
        return self._references

    @references.setter
    def references(self, references):
        """Sets the references of this DataSourceObjectReferences.

        The references.

        :param references: The references of this DataSourceObjectReferences.
        :type references: List[DataSourceObjectReference]
        """

        self._references = references
