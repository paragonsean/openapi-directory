# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FindReplaceResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, formulas_changed: int=None, occurrences_changed: int=None, rows_changed: int=None, sheets_changed: int=None, values_changed: int=None):
        """FindReplaceResponse - a model defined in OpenAPI

        :param formulas_changed: The formulas_changed of this FindReplaceResponse.
        :param occurrences_changed: The occurrences_changed of this FindReplaceResponse.
        :param rows_changed: The rows_changed of this FindReplaceResponse.
        :param sheets_changed: The sheets_changed of this FindReplaceResponse.
        :param values_changed: The values_changed of this FindReplaceResponse.
        """
        self.openapi_types = {
            'formulas_changed': int,
            'occurrences_changed': int,
            'rows_changed': int,
            'sheets_changed': int,
            'values_changed': int
        }

        self.attribute_map = {
            'formulas_changed': 'formulasChanged',
            'occurrences_changed': 'occurrencesChanged',
            'rows_changed': 'rowsChanged',
            'sheets_changed': 'sheetsChanged',
            'values_changed': 'valuesChanged'
        }

        self._formulas_changed = formulas_changed
        self._occurrences_changed = occurrences_changed
        self._rows_changed = rows_changed
        self._sheets_changed = sheets_changed
        self._values_changed = values_changed

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FindReplaceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FindReplaceResponse of this FindReplaceResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def formulas_changed(self):
        """Gets the formulas_changed of this FindReplaceResponse.

        The number of formula cells changed.

        :return: The formulas_changed of this FindReplaceResponse.
        :rtype: int
        """
        return self._formulas_changed

    @formulas_changed.setter
    def formulas_changed(self, formulas_changed):
        """Sets the formulas_changed of this FindReplaceResponse.

        The number of formula cells changed.

        :param formulas_changed: The formulas_changed of this FindReplaceResponse.
        :type formulas_changed: int
        """

        self._formulas_changed = formulas_changed

    @property
    def occurrences_changed(self):
        """Gets the occurrences_changed of this FindReplaceResponse.

        The number of occurrences (possibly multiple within a cell) changed. For example, if replacing `\"e\"` with `\"o\"` in `\"Google Sheets\"`, this would be `\"3\"` because `\"Google Sheets\"` -> `\"Googlo Shoots\"`.

        :return: The occurrences_changed of this FindReplaceResponse.
        :rtype: int
        """
        return self._occurrences_changed

    @occurrences_changed.setter
    def occurrences_changed(self, occurrences_changed):
        """Sets the occurrences_changed of this FindReplaceResponse.

        The number of occurrences (possibly multiple within a cell) changed. For example, if replacing `\"e\"` with `\"o\"` in `\"Google Sheets\"`, this would be `\"3\"` because `\"Google Sheets\"` -> `\"Googlo Shoots\"`.

        :param occurrences_changed: The occurrences_changed of this FindReplaceResponse.
        :type occurrences_changed: int
        """

        self._occurrences_changed = occurrences_changed

    @property
    def rows_changed(self):
        """Gets the rows_changed of this FindReplaceResponse.

        The number of rows changed.

        :return: The rows_changed of this FindReplaceResponse.
        :rtype: int
        """
        return self._rows_changed

    @rows_changed.setter
    def rows_changed(self, rows_changed):
        """Sets the rows_changed of this FindReplaceResponse.

        The number of rows changed.

        :param rows_changed: The rows_changed of this FindReplaceResponse.
        :type rows_changed: int
        """

        self._rows_changed = rows_changed

    @property
    def sheets_changed(self):
        """Gets the sheets_changed of this FindReplaceResponse.

        The number of sheets changed.

        :return: The sheets_changed of this FindReplaceResponse.
        :rtype: int
        """
        return self._sheets_changed

    @sheets_changed.setter
    def sheets_changed(self, sheets_changed):
        """Sets the sheets_changed of this FindReplaceResponse.

        The number of sheets changed.

        :param sheets_changed: The sheets_changed of this FindReplaceResponse.
        :type sheets_changed: int
        """

        self._sheets_changed = sheets_changed

    @property
    def values_changed(self):
        """Gets the values_changed of this FindReplaceResponse.

        The number of non-formula cells changed.

        :return: The values_changed of this FindReplaceResponse.
        :rtype: int
        """
        return self._values_changed

    @values_changed.setter
    def values_changed(self, values_changed):
        """Sets the values_changed of this FindReplaceResponse.

        The number of non-formula cells changed.

        :param values_changed: The values_changed of this FindReplaceResponse.
        :type values_changed: int
        """

        self._values_changed = values_changed
