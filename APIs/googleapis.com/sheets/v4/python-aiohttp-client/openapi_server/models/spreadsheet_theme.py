# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.theme_color_pair import ThemeColorPair
from openapi_server import util


class SpreadsheetTheme(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, primary_font_family: str=None, theme_colors: List[ThemeColorPair]=None):
        """SpreadsheetTheme - a model defined in OpenAPI

        :param primary_font_family: The primary_font_family of this SpreadsheetTheme.
        :param theme_colors: The theme_colors of this SpreadsheetTheme.
        """
        self.openapi_types = {
            'primary_font_family': str,
            'theme_colors': List[ThemeColorPair]
        }

        self.attribute_map = {
            'primary_font_family': 'primaryFontFamily',
            'theme_colors': 'themeColors'
        }

        self._primary_font_family = primary_font_family
        self._theme_colors = theme_colors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SpreadsheetTheme':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SpreadsheetTheme of this SpreadsheetTheme.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def primary_font_family(self):
        """Gets the primary_font_family of this SpreadsheetTheme.

        Name of the primary font family.

        :return: The primary_font_family of this SpreadsheetTheme.
        :rtype: str
        """
        return self._primary_font_family

    @primary_font_family.setter
    def primary_font_family(self, primary_font_family):
        """Sets the primary_font_family of this SpreadsheetTheme.

        Name of the primary font family.

        :param primary_font_family: The primary_font_family of this SpreadsheetTheme.
        :type primary_font_family: str
        """

        self._primary_font_family = primary_font_family

    @property
    def theme_colors(self):
        """Gets the theme_colors of this SpreadsheetTheme.

        The spreadsheet theme color pairs. To update you must provide all theme color pairs.

        :return: The theme_colors of this SpreadsheetTheme.
        :rtype: List[ThemeColorPair]
        """
        return self._theme_colors

    @theme_colors.setter
    def theme_colors(self, theme_colors):
        """Sets the theme_colors of this SpreadsheetTheme.

        The spreadsheet theme color pairs. To update you must provide all theme color pairs.

        :param theme_colors: The theme_colors of this SpreadsheetTheme.
        :type theme_colors: List[ThemeColorPair]
        """

        self._theme_colors = theme_colors
