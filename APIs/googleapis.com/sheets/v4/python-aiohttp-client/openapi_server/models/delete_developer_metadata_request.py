# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_filter import DataFilter
from openapi_server import util


class DeleteDeveloperMetadataRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_filter: DataFilter=None):
        """DeleteDeveloperMetadataRequest - a model defined in OpenAPI

        :param data_filter: The data_filter of this DeleteDeveloperMetadataRequest.
        """
        self.openapi_types = {
            'data_filter': DataFilter
        }

        self.attribute_map = {
            'data_filter': 'dataFilter'
        }

        self._data_filter = data_filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteDeveloperMetadataRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteDeveloperMetadataRequest of this DeleteDeveloperMetadataRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_filter(self):
        """Gets the data_filter of this DeleteDeveloperMetadataRequest.


        :return: The data_filter of this DeleteDeveloperMetadataRequest.
        :rtype: DataFilter
        """
        return self._data_filter

    @data_filter.setter
    def data_filter(self, data_filter):
        """Sets the data_filter of this DeleteDeveloperMetadataRequest.


        :param data_filter: The data_filter of this DeleteDeveloperMetadataRequest.
        :type data_filter: DataFilter
        """

        self._data_filter = data_filter
