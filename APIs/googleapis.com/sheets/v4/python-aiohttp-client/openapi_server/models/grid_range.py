# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GridRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_column_index: int=None, end_row_index: int=None, sheet_id: int=None, start_column_index: int=None, start_row_index: int=None):
        """GridRange - a model defined in OpenAPI

        :param end_column_index: The end_column_index of this GridRange.
        :param end_row_index: The end_row_index of this GridRange.
        :param sheet_id: The sheet_id of this GridRange.
        :param start_column_index: The start_column_index of this GridRange.
        :param start_row_index: The start_row_index of this GridRange.
        """
        self.openapi_types = {
            'end_column_index': int,
            'end_row_index': int,
            'sheet_id': int,
            'start_column_index': int,
            'start_row_index': int
        }

        self.attribute_map = {
            'end_column_index': 'endColumnIndex',
            'end_row_index': 'endRowIndex',
            'sheet_id': 'sheetId',
            'start_column_index': 'startColumnIndex',
            'start_row_index': 'startRowIndex'
        }

        self._end_column_index = end_column_index
        self._end_row_index = end_row_index
        self._sheet_id = sheet_id
        self._start_column_index = start_column_index
        self._start_row_index = start_row_index

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GridRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GridRange of this GridRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_column_index(self):
        """Gets the end_column_index of this GridRange.

        The end column (exclusive) of the range, or not set if unbounded.

        :return: The end_column_index of this GridRange.
        :rtype: int
        """
        return self._end_column_index

    @end_column_index.setter
    def end_column_index(self, end_column_index):
        """Sets the end_column_index of this GridRange.

        The end column (exclusive) of the range, or not set if unbounded.

        :param end_column_index: The end_column_index of this GridRange.
        :type end_column_index: int
        """

        self._end_column_index = end_column_index

    @property
    def end_row_index(self):
        """Gets the end_row_index of this GridRange.

        The end row (exclusive) of the range, or not set if unbounded.

        :return: The end_row_index of this GridRange.
        :rtype: int
        """
        return self._end_row_index

    @end_row_index.setter
    def end_row_index(self, end_row_index):
        """Sets the end_row_index of this GridRange.

        The end row (exclusive) of the range, or not set if unbounded.

        :param end_row_index: The end_row_index of this GridRange.
        :type end_row_index: int
        """

        self._end_row_index = end_row_index

    @property
    def sheet_id(self):
        """Gets the sheet_id of this GridRange.

        The sheet this range is on.

        :return: The sheet_id of this GridRange.
        :rtype: int
        """
        return self._sheet_id

    @sheet_id.setter
    def sheet_id(self, sheet_id):
        """Sets the sheet_id of this GridRange.

        The sheet this range is on.

        :param sheet_id: The sheet_id of this GridRange.
        :type sheet_id: int
        """

        self._sheet_id = sheet_id

    @property
    def start_column_index(self):
        """Gets the start_column_index of this GridRange.

        The start column (inclusive) of the range, or not set if unbounded.

        :return: The start_column_index of this GridRange.
        :rtype: int
        """
        return self._start_column_index

    @start_column_index.setter
    def start_column_index(self, start_column_index):
        """Sets the start_column_index of this GridRange.

        The start column (inclusive) of the range, or not set if unbounded.

        :param start_column_index: The start_column_index of this GridRange.
        :type start_column_index: int
        """

        self._start_column_index = start_column_index

    @property
    def start_row_index(self):
        """Gets the start_row_index of this GridRange.

        The start row (inclusive) of the range, or not set if unbounded.

        :return: The start_row_index of this GridRange.
        :rtype: int
        """
        return self._start_row_index

    @start_row_index.setter
    def start_row_index(self, start_row_index):
        """Sets the start_row_index of this GridRange.

        The start row (inclusive) of the range, or not set if unbounded.

        :param start_row_index: The start_row_index of this GridRange.
        :type start_row_index: int
        """

        self._start_row_index = start_row_index
