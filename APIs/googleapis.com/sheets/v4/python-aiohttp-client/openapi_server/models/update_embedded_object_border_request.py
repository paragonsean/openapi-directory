# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.embedded_object_border import EmbeddedObjectBorder
from openapi_server import util


class UpdateEmbeddedObjectBorderRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, border: EmbeddedObjectBorder=None, fields: str=None, object_id: int=None):
        """UpdateEmbeddedObjectBorderRequest - a model defined in OpenAPI

        :param border: The border of this UpdateEmbeddedObjectBorderRequest.
        :param fields: The fields of this UpdateEmbeddedObjectBorderRequest.
        :param object_id: The object_id of this UpdateEmbeddedObjectBorderRequest.
        """
        self.openapi_types = {
            'border': EmbeddedObjectBorder,
            'fields': str,
            'object_id': int
        }

        self.attribute_map = {
            'border': 'border',
            'fields': 'fields',
            'object_id': 'objectId'
        }

        self._border = border
        self._fields = fields
        self._object_id = object_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateEmbeddedObjectBorderRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateEmbeddedObjectBorderRequest of this UpdateEmbeddedObjectBorderRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def border(self):
        """Gets the border of this UpdateEmbeddedObjectBorderRequest.


        :return: The border of this UpdateEmbeddedObjectBorderRequest.
        :rtype: EmbeddedObjectBorder
        """
        return self._border

    @border.setter
    def border(self, border):
        """Sets the border of this UpdateEmbeddedObjectBorderRequest.


        :param border: The border of this UpdateEmbeddedObjectBorderRequest.
        :type border: EmbeddedObjectBorder
        """

        self._border = border

    @property
    def fields(self):
        """Gets the fields of this UpdateEmbeddedObjectBorderRequest.

        The fields that should be updated. At least one field must be specified. The root `border` is implied and should not be specified. A single `\"*\"` can be used as short-hand for listing every field.

        :return: The fields of this UpdateEmbeddedObjectBorderRequest.
        :rtype: str
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this UpdateEmbeddedObjectBorderRequest.

        The fields that should be updated. At least one field must be specified. The root `border` is implied and should not be specified. A single `\"*\"` can be used as short-hand for listing every field.

        :param fields: The fields of this UpdateEmbeddedObjectBorderRequest.
        :type fields: str
        """

        self._fields = fields

    @property
    def object_id(self):
        """Gets the object_id of this UpdateEmbeddedObjectBorderRequest.

        The ID of the embedded object to update.

        :return: The object_id of this UpdateEmbeddedObjectBorderRequest.
        :rtype: int
        """
        return self._object_id

    @object_id.setter
    def object_id(self, object_id):
        """Sets the object_id of this UpdateEmbeddedObjectBorderRequest.

        The ID of the embedded object to update.

        :param object_id: The object_id of this UpdateEmbeddedObjectBorderRequest.
        :type object_id: int
        """

        self._object_id = object_id
