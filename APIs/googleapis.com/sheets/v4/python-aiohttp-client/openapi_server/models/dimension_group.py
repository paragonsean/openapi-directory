# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dimension_range import DimensionRange
from openapi_server import util


class DimensionGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, collapsed: bool=None, depth: int=None, range: DimensionRange=None):
        """DimensionGroup - a model defined in OpenAPI

        :param collapsed: The collapsed of this DimensionGroup.
        :param depth: The depth of this DimensionGroup.
        :param range: The range of this DimensionGroup.
        """
        self.openapi_types = {
            'collapsed': bool,
            'depth': int,
            'range': DimensionRange
        }

        self.attribute_map = {
            'collapsed': 'collapsed',
            'depth': 'depth',
            'range': 'range'
        }

        self._collapsed = collapsed
        self._depth = depth
        self._range = range

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DimensionGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DimensionGroup of this DimensionGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def collapsed(self):
        """Gets the collapsed of this DimensionGroup.

        This field is true if this group is collapsed. A collapsed group remains collapsed if an overlapping group at a shallower depth is expanded. A true value does not imply that all dimensions within the group are hidden, since a dimension's visibility can change independently from this group property. However, when this property is updated, all dimensions within it are set to hidden if this field is true, or set to visible if this field is false.

        :return: The collapsed of this DimensionGroup.
        :rtype: bool
        """
        return self._collapsed

    @collapsed.setter
    def collapsed(self, collapsed):
        """Sets the collapsed of this DimensionGroup.

        This field is true if this group is collapsed. A collapsed group remains collapsed if an overlapping group at a shallower depth is expanded. A true value does not imply that all dimensions within the group are hidden, since a dimension's visibility can change independently from this group property. However, when this property is updated, all dimensions within it are set to hidden if this field is true, or set to visible if this field is false.

        :param collapsed: The collapsed of this DimensionGroup.
        :type collapsed: bool
        """

        self._collapsed = collapsed

    @property
    def depth(self):
        """Gets the depth of this DimensionGroup.

        The depth of the group, representing how many groups have a range that wholly contains the range of this group.

        :return: The depth of this DimensionGroup.
        :rtype: int
        """
        return self._depth

    @depth.setter
    def depth(self, depth):
        """Sets the depth of this DimensionGroup.

        The depth of the group, representing how many groups have a range that wholly contains the range of this group.

        :param depth: The depth of this DimensionGroup.
        :type depth: int
        """

        self._depth = depth

    @property
    def range(self):
        """Gets the range of this DimensionGroup.


        :return: The range of this DimensionGroup.
        :rtype: DimensionRange
        """
        return self._range

    @range.setter
    def range(self, range):
        """Sets the range of this DimensionGroup.


        :param range: The range of this DimensionGroup.
        :type range: DimensionRange
        """

        self._range = range
