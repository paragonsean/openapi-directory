# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.candlestick_data import CandlestickData
from openapi_server.models.candlestick_domain import CandlestickDomain
from openapi_server import util


class CandlestickChartSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data: List[CandlestickData]=None, domain: CandlestickDomain=None):
        """CandlestickChartSpec - a model defined in OpenAPI

        :param data: The data of this CandlestickChartSpec.
        :param domain: The domain of this CandlestickChartSpec.
        """
        self.openapi_types = {
            'data': List[CandlestickData],
            'domain': CandlestickDomain
        }

        self.attribute_map = {
            'data': 'data',
            'domain': 'domain'
        }

        self._data = data
        self._domain = domain

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CandlestickChartSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CandlestickChartSpec of this CandlestickChartSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self):
        """Gets the data of this CandlestickChartSpec.

        The Candlestick chart data. Only one CandlestickData is supported.

        :return: The data of this CandlestickChartSpec.
        :rtype: List[CandlestickData]
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this CandlestickChartSpec.

        The Candlestick chart data. Only one CandlestickData is supported.

        :param data: The data of this CandlestickChartSpec.
        :type data: List[CandlestickData]
        """

        self._data = data

    @property
    def domain(self):
        """Gets the domain of this CandlestickChartSpec.


        :return: The domain of this CandlestickChartSpec.
        :rtype: CandlestickDomain
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this CandlestickChartSpec.


        :param domain: The domain of this CandlestickChartSpec.
        :type domain: CandlestickDomain
        """

        self._domain = domain
