# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.response import Response
from openapi_server.models.spreadsheet import Spreadsheet
from openapi_server import util


class BatchUpdateSpreadsheetResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, replies: List[Response]=None, spreadsheet_id: str=None, updated_spreadsheet: Spreadsheet=None):
        """BatchUpdateSpreadsheetResponse - a model defined in OpenAPI

        :param replies: The replies of this BatchUpdateSpreadsheetResponse.
        :param spreadsheet_id: The spreadsheet_id of this BatchUpdateSpreadsheetResponse.
        :param updated_spreadsheet: The updated_spreadsheet of this BatchUpdateSpreadsheetResponse.
        """
        self.openapi_types = {
            'replies': List[Response],
            'spreadsheet_id': str,
            'updated_spreadsheet': Spreadsheet
        }

        self.attribute_map = {
            'replies': 'replies',
            'spreadsheet_id': 'spreadsheetId',
            'updated_spreadsheet': 'updatedSpreadsheet'
        }

        self._replies = replies
        self._spreadsheet_id = spreadsheet_id
        self._updated_spreadsheet = updated_spreadsheet

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchUpdateSpreadsheetResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchUpdateSpreadsheetResponse of this BatchUpdateSpreadsheetResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def replies(self):
        """Gets the replies of this BatchUpdateSpreadsheetResponse.

        The reply of the updates. This maps 1:1 with the updates, although replies to some requests may be empty.

        :return: The replies of this BatchUpdateSpreadsheetResponse.
        :rtype: List[Response]
        """
        return self._replies

    @replies.setter
    def replies(self, replies):
        """Sets the replies of this BatchUpdateSpreadsheetResponse.

        The reply of the updates. This maps 1:1 with the updates, although replies to some requests may be empty.

        :param replies: The replies of this BatchUpdateSpreadsheetResponse.
        :type replies: List[Response]
        """

        self._replies = replies

    @property
    def spreadsheet_id(self):
        """Gets the spreadsheet_id of this BatchUpdateSpreadsheetResponse.

        The spreadsheet the updates were applied to.

        :return: The spreadsheet_id of this BatchUpdateSpreadsheetResponse.
        :rtype: str
        """
        return self._spreadsheet_id

    @spreadsheet_id.setter
    def spreadsheet_id(self, spreadsheet_id):
        """Sets the spreadsheet_id of this BatchUpdateSpreadsheetResponse.

        The spreadsheet the updates were applied to.

        :param spreadsheet_id: The spreadsheet_id of this BatchUpdateSpreadsheetResponse.
        :type spreadsheet_id: str
        """

        self._spreadsheet_id = spreadsheet_id

    @property
    def updated_spreadsheet(self):
        """Gets the updated_spreadsheet of this BatchUpdateSpreadsheetResponse.


        :return: The updated_spreadsheet of this BatchUpdateSpreadsheetResponse.
        :rtype: Spreadsheet
        """
        return self._updated_spreadsheet

    @updated_spreadsheet.setter
    def updated_spreadsheet(self, updated_spreadsheet):
        """Sets the updated_spreadsheet of this BatchUpdateSpreadsheetResponse.


        :param updated_spreadsheet: The updated_spreadsheet of this BatchUpdateSpreadsheetResponse.
        :type updated_spreadsheet: Spreadsheet
        """

        self._updated_spreadsheet = updated_spreadsheet
