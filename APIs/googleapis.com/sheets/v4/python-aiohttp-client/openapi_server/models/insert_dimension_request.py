# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dimension_range import DimensionRange
from openapi_server import util


class InsertDimensionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, inherit_from_before: bool=None, range: DimensionRange=None):
        """InsertDimensionRequest - a model defined in OpenAPI

        :param inherit_from_before: The inherit_from_before of this InsertDimensionRequest.
        :param range: The range of this InsertDimensionRequest.
        """
        self.openapi_types = {
            'inherit_from_before': bool,
            'range': DimensionRange
        }

        self.attribute_map = {
            'inherit_from_before': 'inheritFromBefore',
            'range': 'range'
        }

        self._inherit_from_before = inherit_from_before
        self._range = range

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InsertDimensionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InsertDimensionRequest of this InsertDimensionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inherit_from_before(self):
        """Gets the inherit_from_before of this InsertDimensionRequest.

        Whether dimension properties should be extended from the dimensions before or after the newly inserted dimensions. True to inherit from the dimensions before (in which case the start index must be greater than 0), and false to inherit from the dimensions after. For example, if row index 0 has red background and row index 1 has a green background, then inserting 2 rows at index 1 can inherit either the green or red background. If `inheritFromBefore` is true, the two new rows will be red (because the row before the insertion point was red), whereas if `inheritFromBefore` is false, the two new rows will be green (because the row after the insertion point was green).

        :return: The inherit_from_before of this InsertDimensionRequest.
        :rtype: bool
        """
        return self._inherit_from_before

    @inherit_from_before.setter
    def inherit_from_before(self, inherit_from_before):
        """Sets the inherit_from_before of this InsertDimensionRequest.

        Whether dimension properties should be extended from the dimensions before or after the newly inserted dimensions. True to inherit from the dimensions before (in which case the start index must be greater than 0), and false to inherit from the dimensions after. For example, if row index 0 has red background and row index 1 has a green background, then inserting 2 rows at index 1 can inherit either the green or red background. If `inheritFromBefore` is true, the two new rows will be red (because the row before the insertion point was red), whereas if `inheritFromBefore` is false, the two new rows will be green (because the row after the insertion point was green).

        :param inherit_from_before: The inherit_from_before of this InsertDimensionRequest.
        :type inherit_from_before: bool
        """

        self._inherit_from_before = inherit_from_before

    @property
    def range(self):
        """Gets the range of this InsertDimensionRequest.


        :return: The range of this InsertDimensionRequest.
        :rtype: DimensionRange
        """
        return self._range

    @range.setter
    def range(self, range):
        """Sets the range of this InsertDimensionRequest.


        :param range: The range of this InsertDimensionRequest.
        :type range: DimensionRange
        """

        self._range = range
