# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.color import Color
from openapi_server.models.color_style import ColorStyle
from openapi_server.models.point_style import PointStyle
from openapi_server import util


class BasicSeriesDataPointStyleOverride(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, color: Color=None, color_style: ColorStyle=None, index: int=None, point_style: PointStyle=None):
        """BasicSeriesDataPointStyleOverride - a model defined in OpenAPI

        :param color: The color of this BasicSeriesDataPointStyleOverride.
        :param color_style: The color_style of this BasicSeriesDataPointStyleOverride.
        :param index: The index of this BasicSeriesDataPointStyleOverride.
        :param point_style: The point_style of this BasicSeriesDataPointStyleOverride.
        """
        self.openapi_types = {
            'color': Color,
            'color_style': ColorStyle,
            'index': int,
            'point_style': PointStyle
        }

        self.attribute_map = {
            'color': 'color',
            'color_style': 'colorStyle',
            'index': 'index',
            'point_style': 'pointStyle'
        }

        self._color = color
        self._color_style = color_style
        self._index = index
        self._point_style = point_style

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BasicSeriesDataPointStyleOverride':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BasicSeriesDataPointStyleOverride of this BasicSeriesDataPointStyleOverride.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def color(self):
        """Gets the color of this BasicSeriesDataPointStyleOverride.


        :return: The color of this BasicSeriesDataPointStyleOverride.
        :rtype: Color
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this BasicSeriesDataPointStyleOverride.


        :param color: The color of this BasicSeriesDataPointStyleOverride.
        :type color: Color
        """

        self._color = color

    @property
    def color_style(self):
        """Gets the color_style of this BasicSeriesDataPointStyleOverride.


        :return: The color_style of this BasicSeriesDataPointStyleOverride.
        :rtype: ColorStyle
        """
        return self._color_style

    @color_style.setter
    def color_style(self, color_style):
        """Sets the color_style of this BasicSeriesDataPointStyleOverride.


        :param color_style: The color_style of this BasicSeriesDataPointStyleOverride.
        :type color_style: ColorStyle
        """

        self._color_style = color_style

    @property
    def index(self):
        """Gets the index of this BasicSeriesDataPointStyleOverride.

        The zero-based index of the series data point.

        :return: The index of this BasicSeriesDataPointStyleOverride.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this BasicSeriesDataPointStyleOverride.

        The zero-based index of the series data point.

        :param index: The index of this BasicSeriesDataPointStyleOverride.
        :type index: int
        """

        self._index = index

    @property
    def point_style(self):
        """Gets the point_style of this BasicSeriesDataPointStyleOverride.


        :return: The point_style of this BasicSeriesDataPointStyleOverride.
        :rtype: PointStyle
        """
        return self._point_style

    @point_style.setter
    def point_style(self, point_style):
        """Sets the point_style of this BasicSeriesDataPointStyleOverride.


        :param point_style: The point_style of this BasicSeriesDataPointStyleOverride.
        :type point_style: PointStyle
        """

        self._point_style = point_style
