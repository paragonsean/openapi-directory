# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_source import DataSource
from openapi_server import util


class UpdateDataSourceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_source: DataSource=None, fields: str=None):
        """UpdateDataSourceRequest - a model defined in OpenAPI

        :param data_source: The data_source of this UpdateDataSourceRequest.
        :param fields: The fields of this UpdateDataSourceRequest.
        """
        self.openapi_types = {
            'data_source': DataSource,
            'fields': str
        }

        self.attribute_map = {
            'data_source': 'dataSource',
            'fields': 'fields'
        }

        self._data_source = data_source
        self._fields = fields

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateDataSourceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateDataSourceRequest of this UpdateDataSourceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_source(self):
        """Gets the data_source of this UpdateDataSourceRequest.


        :return: The data_source of this UpdateDataSourceRequest.
        :rtype: DataSource
        """
        return self._data_source

    @data_source.setter
    def data_source(self, data_source):
        """Sets the data_source of this UpdateDataSourceRequest.


        :param data_source: The data_source of this UpdateDataSourceRequest.
        :type data_source: DataSource
        """

        self._data_source = data_source

    @property
    def fields(self):
        """Gets the fields of this UpdateDataSourceRequest.

        The fields that should be updated. At least one field must be specified. The root `dataSource` is implied and should not be specified. A single `\"*\"` can be used as short-hand for listing every field.

        :return: The fields of this UpdateDataSourceRequest.
        :rtype: str
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this UpdateDataSourceRequest.

        The fields that should be updated. At least one field must be specified. The root `dataSource` is implied and should not be specified. A single `\"*\"` can be used as short-hand for listing every field.

        :param fields: The fields of this UpdateDataSourceRequest.
        :type fields: str
        """

        self._fields = fields
