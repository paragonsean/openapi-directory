# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_source import DataSource
from openapi_server.models.data_source_refresh_schedule import DataSourceRefreshSchedule
from openapi_server.models.developer_metadata import DeveloperMetadata
from openapi_server.models.named_range import NamedRange
from openapi_server.models.sheet import Sheet
from openapi_server.models.spreadsheet_properties import SpreadsheetProperties
from openapi_server import util


class Spreadsheet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_source_schedules: List[DataSourceRefreshSchedule]=None, data_sources: List[DataSource]=None, developer_metadata: List[DeveloperMetadata]=None, named_ranges: List[NamedRange]=None, properties: SpreadsheetProperties=None, sheets: List[Sheet]=None, spreadsheet_id: str=None, spreadsheet_url: str=None):
        """Spreadsheet - a model defined in OpenAPI

        :param data_source_schedules: The data_source_schedules of this Spreadsheet.
        :param data_sources: The data_sources of this Spreadsheet.
        :param developer_metadata: The developer_metadata of this Spreadsheet.
        :param named_ranges: The named_ranges of this Spreadsheet.
        :param properties: The properties of this Spreadsheet.
        :param sheets: The sheets of this Spreadsheet.
        :param spreadsheet_id: The spreadsheet_id of this Spreadsheet.
        :param spreadsheet_url: The spreadsheet_url of this Spreadsheet.
        """
        self.openapi_types = {
            'data_source_schedules': List[DataSourceRefreshSchedule],
            'data_sources': List[DataSource],
            'developer_metadata': List[DeveloperMetadata],
            'named_ranges': List[NamedRange],
            'properties': SpreadsheetProperties,
            'sheets': List[Sheet],
            'spreadsheet_id': str,
            'spreadsheet_url': str
        }

        self.attribute_map = {
            'data_source_schedules': 'dataSourceSchedules',
            'data_sources': 'dataSources',
            'developer_metadata': 'developerMetadata',
            'named_ranges': 'namedRanges',
            'properties': 'properties',
            'sheets': 'sheets',
            'spreadsheet_id': 'spreadsheetId',
            'spreadsheet_url': 'spreadsheetUrl'
        }

        self._data_source_schedules = data_source_schedules
        self._data_sources = data_sources
        self._developer_metadata = developer_metadata
        self._named_ranges = named_ranges
        self._properties = properties
        self._sheets = sheets
        self._spreadsheet_id = spreadsheet_id
        self._spreadsheet_url = spreadsheet_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Spreadsheet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Spreadsheet of this Spreadsheet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_source_schedules(self):
        """Gets the data_source_schedules of this Spreadsheet.

        Output only. A list of data source refresh schedules.

        :return: The data_source_schedules of this Spreadsheet.
        :rtype: List[DataSourceRefreshSchedule]
        """
        return self._data_source_schedules

    @data_source_schedules.setter
    def data_source_schedules(self, data_source_schedules):
        """Sets the data_source_schedules of this Spreadsheet.

        Output only. A list of data source refresh schedules.

        :param data_source_schedules: The data_source_schedules of this Spreadsheet.
        :type data_source_schedules: List[DataSourceRefreshSchedule]
        """

        self._data_source_schedules = data_source_schedules

    @property
    def data_sources(self):
        """Gets the data_sources of this Spreadsheet.

        A list of external data sources connected with the spreadsheet.

        :return: The data_sources of this Spreadsheet.
        :rtype: List[DataSource]
        """
        return self._data_sources

    @data_sources.setter
    def data_sources(self, data_sources):
        """Sets the data_sources of this Spreadsheet.

        A list of external data sources connected with the spreadsheet.

        :param data_sources: The data_sources of this Spreadsheet.
        :type data_sources: List[DataSource]
        """

        self._data_sources = data_sources

    @property
    def developer_metadata(self):
        """Gets the developer_metadata of this Spreadsheet.

        The developer metadata associated with a spreadsheet.

        :return: The developer_metadata of this Spreadsheet.
        :rtype: List[DeveloperMetadata]
        """
        return self._developer_metadata

    @developer_metadata.setter
    def developer_metadata(self, developer_metadata):
        """Sets the developer_metadata of this Spreadsheet.

        The developer metadata associated with a spreadsheet.

        :param developer_metadata: The developer_metadata of this Spreadsheet.
        :type developer_metadata: List[DeveloperMetadata]
        """

        self._developer_metadata = developer_metadata

    @property
    def named_ranges(self):
        """Gets the named_ranges of this Spreadsheet.

        The named ranges defined in a spreadsheet.

        :return: The named_ranges of this Spreadsheet.
        :rtype: List[NamedRange]
        """
        return self._named_ranges

    @named_ranges.setter
    def named_ranges(self, named_ranges):
        """Sets the named_ranges of this Spreadsheet.

        The named ranges defined in a spreadsheet.

        :param named_ranges: The named_ranges of this Spreadsheet.
        :type named_ranges: List[NamedRange]
        """

        self._named_ranges = named_ranges

    @property
    def properties(self):
        """Gets the properties of this Spreadsheet.


        :return: The properties of this Spreadsheet.
        :rtype: SpreadsheetProperties
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this Spreadsheet.


        :param properties: The properties of this Spreadsheet.
        :type properties: SpreadsheetProperties
        """

        self._properties = properties

    @property
    def sheets(self):
        """Gets the sheets of this Spreadsheet.

        The sheets that are part of a spreadsheet.

        :return: The sheets of this Spreadsheet.
        :rtype: List[Sheet]
        """
        return self._sheets

    @sheets.setter
    def sheets(self, sheets):
        """Sets the sheets of this Spreadsheet.

        The sheets that are part of a spreadsheet.

        :param sheets: The sheets of this Spreadsheet.
        :type sheets: List[Sheet]
        """

        self._sheets = sheets

    @property
    def spreadsheet_id(self):
        """Gets the spreadsheet_id of this Spreadsheet.

        The ID of the spreadsheet. This field is read-only.

        :return: The spreadsheet_id of this Spreadsheet.
        :rtype: str
        """
        return self._spreadsheet_id

    @spreadsheet_id.setter
    def spreadsheet_id(self, spreadsheet_id):
        """Sets the spreadsheet_id of this Spreadsheet.

        The ID of the spreadsheet. This field is read-only.

        :param spreadsheet_id: The spreadsheet_id of this Spreadsheet.
        :type spreadsheet_id: str
        """

        self._spreadsheet_id = spreadsheet_id

    @property
    def spreadsheet_url(self):
        """Gets the spreadsheet_url of this Spreadsheet.

        The url of the spreadsheet. This field is read-only.

        :return: The spreadsheet_url of this Spreadsheet.
        :rtype: str
        """
        return self._spreadsheet_url

    @spreadsheet_url.setter
    def spreadsheet_url(self, spreadsheet_url):
        """Sets the spreadsheet_url of this Spreadsheet.

        The url of the spreadsheet. This field is read-only.

        :param spreadsheet_url: The spreadsheet_url of this Spreadsheet.
        :type spreadsheet_url: str
        """

        self._spreadsheet_url = spreadsheet_url
