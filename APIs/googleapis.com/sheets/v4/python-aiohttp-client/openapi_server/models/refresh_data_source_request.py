# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_source_object_references import DataSourceObjectReferences
from openapi_server import util


class RefreshDataSourceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_source_id: str=None, force: bool=None, is_all: bool=None, references: DataSourceObjectReferences=None):
        """RefreshDataSourceRequest - a model defined in OpenAPI

        :param data_source_id: The data_source_id of this RefreshDataSourceRequest.
        :param force: The force of this RefreshDataSourceRequest.
        :param is_all: The is_all of this RefreshDataSourceRequest.
        :param references: The references of this RefreshDataSourceRequest.
        """
        self.openapi_types = {
            'data_source_id': str,
            'force': bool,
            'is_all': bool,
            'references': DataSourceObjectReferences
        }

        self.attribute_map = {
            'data_source_id': 'dataSourceId',
            'force': 'force',
            'is_all': 'isAll',
            'references': 'references'
        }

        self._data_source_id = data_source_id
        self._force = force
        self._is_all = is_all
        self._references = references

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RefreshDataSourceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RefreshDataSourceRequest of this RefreshDataSourceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_source_id(self):
        """Gets the data_source_id of this RefreshDataSourceRequest.

        Reference to a DataSource. If specified, refreshes all associated data source objects for the data source.

        :return: The data_source_id of this RefreshDataSourceRequest.
        :rtype: str
        """
        return self._data_source_id

    @data_source_id.setter
    def data_source_id(self, data_source_id):
        """Sets the data_source_id of this RefreshDataSourceRequest.

        Reference to a DataSource. If specified, refreshes all associated data source objects for the data source.

        :param data_source_id: The data_source_id of this RefreshDataSourceRequest.
        :type data_source_id: str
        """

        self._data_source_id = data_source_id

    @property
    def force(self):
        """Gets the force of this RefreshDataSourceRequest.

        Refreshes the data source objects regardless of the current state. If not set and a referenced data source object was in error state, the refresh will fail immediately.

        :return: The force of this RefreshDataSourceRequest.
        :rtype: bool
        """
        return self._force

    @force.setter
    def force(self, force):
        """Sets the force of this RefreshDataSourceRequest.

        Refreshes the data source objects regardless of the current state. If not set and a referenced data source object was in error state, the refresh will fail immediately.

        :param force: The force of this RefreshDataSourceRequest.
        :type force: bool
        """

        self._force = force

    @property
    def is_all(self):
        """Gets the is_all of this RefreshDataSourceRequest.

        Refreshes all existing data source objects in the spreadsheet.

        :return: The is_all of this RefreshDataSourceRequest.
        :rtype: bool
        """
        return self._is_all

    @is_all.setter
    def is_all(self, is_all):
        """Sets the is_all of this RefreshDataSourceRequest.

        Refreshes all existing data source objects in the spreadsheet.

        :param is_all: The is_all of this RefreshDataSourceRequest.
        :type is_all: bool
        """

        self._is_all = is_all

    @property
    def references(self):
        """Gets the references of this RefreshDataSourceRequest.


        :return: The references of this RefreshDataSourceRequest.
        :rtype: DataSourceObjectReferences
        """
        return self._references

    @references.setter
    def references(self, references):
        """Sets the references of this RefreshDataSourceRequest.


        :param references: The references of this RefreshDataSourceRequest.
        :type references: DataSourceObjectReferences
        """

        self._references = references
