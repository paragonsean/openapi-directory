# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TextRotation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, angle: int=None, vertical: bool=None):
        """TextRotation - a model defined in OpenAPI

        :param angle: The angle of this TextRotation.
        :param vertical: The vertical of this TextRotation.
        """
        self.openapi_types = {
            'angle': int,
            'vertical': bool
        }

        self.attribute_map = {
            'angle': 'angle',
            'vertical': 'vertical'
        }

        self._angle = angle
        self._vertical = vertical

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TextRotation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TextRotation of this TextRotation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def angle(self):
        """Gets the angle of this TextRotation.

        The angle between the standard orientation and the desired orientation. Measured in degrees. Valid values are between -90 and 90. Positive angles are angled upwards, negative are angled downwards. Note: For LTR text direction positive angles are in the counterclockwise direction, whereas for RTL they are in the clockwise direction

        :return: The angle of this TextRotation.
        :rtype: int
        """
        return self._angle

    @angle.setter
    def angle(self, angle):
        """Sets the angle of this TextRotation.

        The angle between the standard orientation and the desired orientation. Measured in degrees. Valid values are between -90 and 90. Positive angles are angled upwards, negative are angled downwards. Note: For LTR text direction positive angles are in the counterclockwise direction, whereas for RTL they are in the clockwise direction

        :param angle: The angle of this TextRotation.
        :type angle: int
        """

        self._angle = angle

    @property
    def vertical(self):
        """Gets the vertical of this TextRotation.

        If true, text reads top to bottom, but the orientation of individual characters is unchanged. For example: | V | | e | | r | | t | | i | | c | | a | | l |

        :return: The vertical of this TextRotation.
        :rtype: bool
        """
        return self._vertical

    @vertical.setter
    def vertical(self, vertical):
        """Sets the vertical of this TextRotation.

        If true, text reads top to bottom, but the orientation of individual characters is unchanged. For example: | V | | e | | r | | t | | i | | c | | a | | l |

        :param vertical: The vertical of this TextRotation.
        :type vertical: bool
        """

        self._vertical = vertical
