# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_filter import DataFilter
from openapi_server import util


class GetSpreadsheetByDataFilterRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_filters: List[DataFilter]=None, include_grid_data: bool=None):
        """GetSpreadsheetByDataFilterRequest - a model defined in OpenAPI

        :param data_filters: The data_filters of this GetSpreadsheetByDataFilterRequest.
        :param include_grid_data: The include_grid_data of this GetSpreadsheetByDataFilterRequest.
        """
        self.openapi_types = {
            'data_filters': List[DataFilter],
            'include_grid_data': bool
        }

        self.attribute_map = {
            'data_filters': 'dataFilters',
            'include_grid_data': 'includeGridData'
        }

        self._data_filters = data_filters
        self._include_grid_data = include_grid_data

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSpreadsheetByDataFilterRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetSpreadsheetByDataFilterRequest of this GetSpreadsheetByDataFilterRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_filters(self):
        """Gets the data_filters of this GetSpreadsheetByDataFilterRequest.

        The DataFilters used to select which ranges to retrieve from the spreadsheet.

        :return: The data_filters of this GetSpreadsheetByDataFilterRequest.
        :rtype: List[DataFilter]
        """
        return self._data_filters

    @data_filters.setter
    def data_filters(self, data_filters):
        """Sets the data_filters of this GetSpreadsheetByDataFilterRequest.

        The DataFilters used to select which ranges to retrieve from the spreadsheet.

        :param data_filters: The data_filters of this GetSpreadsheetByDataFilterRequest.
        :type data_filters: List[DataFilter]
        """

        self._data_filters = data_filters

    @property
    def include_grid_data(self):
        """Gets the include_grid_data of this GetSpreadsheetByDataFilterRequest.

        True if grid data should be returned. This parameter is ignored if a field mask was set in the request.

        :return: The include_grid_data of this GetSpreadsheetByDataFilterRequest.
        :rtype: bool
        """
        return self._include_grid_data

    @include_grid_data.setter
    def include_grid_data(self, include_grid_data):
        """Sets the include_grid_data of this GetSpreadsheetByDataFilterRequest.

        True if grid data should be returned. This parameter is ignored if a field mask was set in the request.

        :param include_grid_data: The include_grid_data of this GetSpreadsheetByDataFilterRequest.
        :type include_grid_data: bool
        """

        self._include_grid_data = include_grid_data
