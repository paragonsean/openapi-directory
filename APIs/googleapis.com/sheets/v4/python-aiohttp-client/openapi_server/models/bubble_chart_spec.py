# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.chart_data import ChartData
from openapi_server.models.color import Color
from openapi_server.models.color_style import ColorStyle
from openapi_server.models.text_format import TextFormat
from openapi_server import util


class BubbleChartSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bubble_border_color: Color=None, bubble_border_color_style: ColorStyle=None, bubble_labels: ChartData=None, bubble_max_radius_size: int=None, bubble_min_radius_size: int=None, bubble_opacity: float=None, bubble_sizes: ChartData=None, bubble_text_style: TextFormat=None, domain: ChartData=None, group_ids: ChartData=None, legend_position: str=None, series: ChartData=None):
        """BubbleChartSpec - a model defined in OpenAPI

        :param bubble_border_color: The bubble_border_color of this BubbleChartSpec.
        :param bubble_border_color_style: The bubble_border_color_style of this BubbleChartSpec.
        :param bubble_labels: The bubble_labels of this BubbleChartSpec.
        :param bubble_max_radius_size: The bubble_max_radius_size of this BubbleChartSpec.
        :param bubble_min_radius_size: The bubble_min_radius_size of this BubbleChartSpec.
        :param bubble_opacity: The bubble_opacity of this BubbleChartSpec.
        :param bubble_sizes: The bubble_sizes of this BubbleChartSpec.
        :param bubble_text_style: The bubble_text_style of this BubbleChartSpec.
        :param domain: The domain of this BubbleChartSpec.
        :param group_ids: The group_ids of this BubbleChartSpec.
        :param legend_position: The legend_position of this BubbleChartSpec.
        :param series: The series of this BubbleChartSpec.
        """
        self.openapi_types = {
            'bubble_border_color': Color,
            'bubble_border_color_style': ColorStyle,
            'bubble_labels': ChartData,
            'bubble_max_radius_size': int,
            'bubble_min_radius_size': int,
            'bubble_opacity': float,
            'bubble_sizes': ChartData,
            'bubble_text_style': TextFormat,
            'domain': ChartData,
            'group_ids': ChartData,
            'legend_position': str,
            'series': ChartData
        }

        self.attribute_map = {
            'bubble_border_color': 'bubbleBorderColor',
            'bubble_border_color_style': 'bubbleBorderColorStyle',
            'bubble_labels': 'bubbleLabels',
            'bubble_max_radius_size': 'bubbleMaxRadiusSize',
            'bubble_min_radius_size': 'bubbleMinRadiusSize',
            'bubble_opacity': 'bubbleOpacity',
            'bubble_sizes': 'bubbleSizes',
            'bubble_text_style': 'bubbleTextStyle',
            'domain': 'domain',
            'group_ids': 'groupIds',
            'legend_position': 'legendPosition',
            'series': 'series'
        }

        self._bubble_border_color = bubble_border_color
        self._bubble_border_color_style = bubble_border_color_style
        self._bubble_labels = bubble_labels
        self._bubble_max_radius_size = bubble_max_radius_size
        self._bubble_min_radius_size = bubble_min_radius_size
        self._bubble_opacity = bubble_opacity
        self._bubble_sizes = bubble_sizes
        self._bubble_text_style = bubble_text_style
        self._domain = domain
        self._group_ids = group_ids
        self._legend_position = legend_position
        self._series = series

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BubbleChartSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BubbleChartSpec of this BubbleChartSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bubble_border_color(self):
        """Gets the bubble_border_color of this BubbleChartSpec.


        :return: The bubble_border_color of this BubbleChartSpec.
        :rtype: Color
        """
        return self._bubble_border_color

    @bubble_border_color.setter
    def bubble_border_color(self, bubble_border_color):
        """Sets the bubble_border_color of this BubbleChartSpec.


        :param bubble_border_color: The bubble_border_color of this BubbleChartSpec.
        :type bubble_border_color: Color
        """

        self._bubble_border_color = bubble_border_color

    @property
    def bubble_border_color_style(self):
        """Gets the bubble_border_color_style of this BubbleChartSpec.


        :return: The bubble_border_color_style of this BubbleChartSpec.
        :rtype: ColorStyle
        """
        return self._bubble_border_color_style

    @bubble_border_color_style.setter
    def bubble_border_color_style(self, bubble_border_color_style):
        """Sets the bubble_border_color_style of this BubbleChartSpec.


        :param bubble_border_color_style: The bubble_border_color_style of this BubbleChartSpec.
        :type bubble_border_color_style: ColorStyle
        """

        self._bubble_border_color_style = bubble_border_color_style

    @property
    def bubble_labels(self):
        """Gets the bubble_labels of this BubbleChartSpec.


        :return: The bubble_labels of this BubbleChartSpec.
        :rtype: ChartData
        """
        return self._bubble_labels

    @bubble_labels.setter
    def bubble_labels(self, bubble_labels):
        """Sets the bubble_labels of this BubbleChartSpec.


        :param bubble_labels: The bubble_labels of this BubbleChartSpec.
        :type bubble_labels: ChartData
        """

        self._bubble_labels = bubble_labels

    @property
    def bubble_max_radius_size(self):
        """Gets the bubble_max_radius_size of this BubbleChartSpec.

        The max radius size of the bubbles, in pixels. If specified, the field must be a positive value.

        :return: The bubble_max_radius_size of this BubbleChartSpec.
        :rtype: int
        """
        return self._bubble_max_radius_size

    @bubble_max_radius_size.setter
    def bubble_max_radius_size(self, bubble_max_radius_size):
        """Sets the bubble_max_radius_size of this BubbleChartSpec.

        The max radius size of the bubbles, in pixels. If specified, the field must be a positive value.

        :param bubble_max_radius_size: The bubble_max_radius_size of this BubbleChartSpec.
        :type bubble_max_radius_size: int
        """

        self._bubble_max_radius_size = bubble_max_radius_size

    @property
    def bubble_min_radius_size(self):
        """Gets the bubble_min_radius_size of this BubbleChartSpec.

        The minimum radius size of the bubbles, in pixels. If specific, the field must be a positive value.

        :return: The bubble_min_radius_size of this BubbleChartSpec.
        :rtype: int
        """
        return self._bubble_min_radius_size

    @bubble_min_radius_size.setter
    def bubble_min_radius_size(self, bubble_min_radius_size):
        """Sets the bubble_min_radius_size of this BubbleChartSpec.

        The minimum radius size of the bubbles, in pixels. If specific, the field must be a positive value.

        :param bubble_min_radius_size: The bubble_min_radius_size of this BubbleChartSpec.
        :type bubble_min_radius_size: int
        """

        self._bubble_min_radius_size = bubble_min_radius_size

    @property
    def bubble_opacity(self):
        """Gets the bubble_opacity of this BubbleChartSpec.

        The opacity of the bubbles between 0 and 1.0. 0 is fully transparent and 1 is fully opaque.

        :return: The bubble_opacity of this BubbleChartSpec.
        :rtype: float
        """
        return self._bubble_opacity

    @bubble_opacity.setter
    def bubble_opacity(self, bubble_opacity):
        """Sets the bubble_opacity of this BubbleChartSpec.

        The opacity of the bubbles between 0 and 1.0. 0 is fully transparent and 1 is fully opaque.

        :param bubble_opacity: The bubble_opacity of this BubbleChartSpec.
        :type bubble_opacity: float
        """

        self._bubble_opacity = bubble_opacity

    @property
    def bubble_sizes(self):
        """Gets the bubble_sizes of this BubbleChartSpec.


        :return: The bubble_sizes of this BubbleChartSpec.
        :rtype: ChartData
        """
        return self._bubble_sizes

    @bubble_sizes.setter
    def bubble_sizes(self, bubble_sizes):
        """Sets the bubble_sizes of this BubbleChartSpec.


        :param bubble_sizes: The bubble_sizes of this BubbleChartSpec.
        :type bubble_sizes: ChartData
        """

        self._bubble_sizes = bubble_sizes

    @property
    def bubble_text_style(self):
        """Gets the bubble_text_style of this BubbleChartSpec.


        :return: The bubble_text_style of this BubbleChartSpec.
        :rtype: TextFormat
        """
        return self._bubble_text_style

    @bubble_text_style.setter
    def bubble_text_style(self, bubble_text_style):
        """Sets the bubble_text_style of this BubbleChartSpec.


        :param bubble_text_style: The bubble_text_style of this BubbleChartSpec.
        :type bubble_text_style: TextFormat
        """

        self._bubble_text_style = bubble_text_style

    @property
    def domain(self):
        """Gets the domain of this BubbleChartSpec.


        :return: The domain of this BubbleChartSpec.
        :rtype: ChartData
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this BubbleChartSpec.


        :param domain: The domain of this BubbleChartSpec.
        :type domain: ChartData
        """

        self._domain = domain

    @property
    def group_ids(self):
        """Gets the group_ids of this BubbleChartSpec.


        :return: The group_ids of this BubbleChartSpec.
        :rtype: ChartData
        """
        return self._group_ids

    @group_ids.setter
    def group_ids(self, group_ids):
        """Sets the group_ids of this BubbleChartSpec.


        :param group_ids: The group_ids of this BubbleChartSpec.
        :type group_ids: ChartData
        """

        self._group_ids = group_ids

    @property
    def legend_position(self):
        """Gets the legend_position of this BubbleChartSpec.

        Where the legend of the chart should be drawn.

        :return: The legend_position of this BubbleChartSpec.
        :rtype: str
        """
        return self._legend_position

    @legend_position.setter
    def legend_position(self, legend_position):
        """Sets the legend_position of this BubbleChartSpec.

        Where the legend of the chart should be drawn.

        :param legend_position: The legend_position of this BubbleChartSpec.
        :type legend_position: str
        """
        allowed_values = ["BUBBLE_CHART_LEGEND_POSITION_UNSPECIFIED", "BOTTOM_LEGEND", "LEFT_LEGEND", "RIGHT_LEGEND", "TOP_LEGEND", "NO_LEGEND", "INSIDE_LEGEND"]  # noqa: E501
        if legend_position not in allowed_values:
            raise ValueError(
                "Invalid value for `legend_position` ({0}), must be one of {1}"
                .format(legend_position, allowed_values)
            )

        self._legend_position = legend_position

    @property
    def series(self):
        """Gets the series of this BubbleChartSpec.


        :return: The series of this BubbleChartSpec.
        :rtype: ChartData
        """
        return self._series

    @series.setter
    def series(self, series):
        """Sets the series of this BubbleChartSpec.


        :param series: The series of this BubbleChartSpec.
        :type series: ChartData
        """

        self._series = series
