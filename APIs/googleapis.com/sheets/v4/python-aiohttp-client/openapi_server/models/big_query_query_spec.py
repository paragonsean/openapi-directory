# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BigQueryQuerySpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, raw_query: str=None):
        """BigQueryQuerySpec - a model defined in OpenAPI

        :param raw_query: The raw_query of this BigQueryQuerySpec.
        """
        self.openapi_types = {
            'raw_query': str
        }

        self.attribute_map = {
            'raw_query': 'rawQuery'
        }

        self._raw_query = raw_query

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BigQueryQuerySpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BigQueryQuerySpec of this BigQueryQuerySpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def raw_query(self):
        """Gets the raw_query of this BigQueryQuerySpec.

        The raw query string.

        :return: The raw_query of this BigQueryQuerySpec.
        :rtype: str
        """
        return self._raw_query

    @raw_query.setter
    def raw_query(self, raw_query):
        """Sets the raw_query of this BigQueryQuerySpec.

        The raw query string.

        :param raw_query: The raw_query of this BigQueryQuerySpec.
        :type raw_query: str
        """

        self._raw_query = raw_query
