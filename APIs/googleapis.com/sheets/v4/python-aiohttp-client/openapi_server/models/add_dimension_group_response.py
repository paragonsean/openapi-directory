# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dimension_group import DimensionGroup
from openapi_server import util


class AddDimensionGroupResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dimension_groups: List[DimensionGroup]=None):
        """AddDimensionGroupResponse - a model defined in OpenAPI

        :param dimension_groups: The dimension_groups of this AddDimensionGroupResponse.
        """
        self.openapi_types = {
            'dimension_groups': List[DimensionGroup]
        }

        self.attribute_map = {
            'dimension_groups': 'dimensionGroups'
        }

        self._dimension_groups = dimension_groups

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddDimensionGroupResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddDimensionGroupResponse of this AddDimensionGroupResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dimension_groups(self):
        """Gets the dimension_groups of this AddDimensionGroupResponse.

        All groups of a dimension after adding a group to that dimension.

        :return: The dimension_groups of this AddDimensionGroupResponse.
        :rtype: List[DimensionGroup]
        """
        return self._dimension_groups

    @dimension_groups.setter
    def dimension_groups(self, dimension_groups):
        """Sets the dimension_groups of this AddDimensionGroupResponse.

        All groups of a dimension after adding a group to that dimension.

        :param dimension_groups: The dimension_groups of this AddDimensionGroupResponse.
        :type dimension_groups: List[DimensionGroup]
        """

        self._dimension_groups = dimension_groups
