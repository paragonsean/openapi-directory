# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchClearValuesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ranges: List[str]=None):
        """BatchClearValuesRequest - a model defined in OpenAPI

        :param ranges: The ranges of this BatchClearValuesRequest.
        """
        self.openapi_types = {
            'ranges': List[str]
        }

        self.attribute_map = {
            'ranges': 'ranges'
        }

        self._ranges = ranges

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchClearValuesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchClearValuesRequest of this BatchClearValuesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ranges(self):
        """Gets the ranges of this BatchClearValuesRequest.

        The ranges to clear, in [A1 notation or R1C1 notation](/sheets/api/guides/concepts#cell).

        :return: The ranges of this BatchClearValuesRequest.
        :rtype: List[str]
        """
        return self._ranges

    @ranges.setter
    def ranges(self, ranges):
        """Sets the ranges of this BatchClearValuesRequest.

        The ranges to clear, in [A1 notation or R1C1 notation](/sheets/api/guides/concepts#cell).

        :param ranges: The ranges of this BatchClearValuesRequest.
        :type ranges: List[str]
        """

        self._ranges = ranges
