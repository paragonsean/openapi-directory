# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.conditional_format_rule import ConditionalFormatRule
from openapi_server import util


class UpdateConditionalFormatRuleResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, new_index: int=None, new_rule: ConditionalFormatRule=None, old_index: int=None, old_rule: ConditionalFormatRule=None):
        """UpdateConditionalFormatRuleResponse - a model defined in OpenAPI

        :param new_index: The new_index of this UpdateConditionalFormatRuleResponse.
        :param new_rule: The new_rule of this UpdateConditionalFormatRuleResponse.
        :param old_index: The old_index of this UpdateConditionalFormatRuleResponse.
        :param old_rule: The old_rule of this UpdateConditionalFormatRuleResponse.
        """
        self.openapi_types = {
            'new_index': int,
            'new_rule': ConditionalFormatRule,
            'old_index': int,
            'old_rule': ConditionalFormatRule
        }

        self.attribute_map = {
            'new_index': 'newIndex',
            'new_rule': 'newRule',
            'old_index': 'oldIndex',
            'old_rule': 'oldRule'
        }

        self._new_index = new_index
        self._new_rule = new_rule
        self._old_index = old_index
        self._old_rule = old_rule

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateConditionalFormatRuleResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateConditionalFormatRuleResponse of this UpdateConditionalFormatRuleResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def new_index(self):
        """Gets the new_index of this UpdateConditionalFormatRuleResponse.

        The index of the new rule.

        :return: The new_index of this UpdateConditionalFormatRuleResponse.
        :rtype: int
        """
        return self._new_index

    @new_index.setter
    def new_index(self, new_index):
        """Sets the new_index of this UpdateConditionalFormatRuleResponse.

        The index of the new rule.

        :param new_index: The new_index of this UpdateConditionalFormatRuleResponse.
        :type new_index: int
        """

        self._new_index = new_index

    @property
    def new_rule(self):
        """Gets the new_rule of this UpdateConditionalFormatRuleResponse.


        :return: The new_rule of this UpdateConditionalFormatRuleResponse.
        :rtype: ConditionalFormatRule
        """
        return self._new_rule

    @new_rule.setter
    def new_rule(self, new_rule):
        """Sets the new_rule of this UpdateConditionalFormatRuleResponse.


        :param new_rule: The new_rule of this UpdateConditionalFormatRuleResponse.
        :type new_rule: ConditionalFormatRule
        """

        self._new_rule = new_rule

    @property
    def old_index(self):
        """Gets the old_index of this UpdateConditionalFormatRuleResponse.

        The old index of the rule. Not set if a rule was replaced (because it is the same as new_index).

        :return: The old_index of this UpdateConditionalFormatRuleResponse.
        :rtype: int
        """
        return self._old_index

    @old_index.setter
    def old_index(self, old_index):
        """Sets the old_index of this UpdateConditionalFormatRuleResponse.

        The old index of the rule. Not set if a rule was replaced (because it is the same as new_index).

        :param old_index: The old_index of this UpdateConditionalFormatRuleResponse.
        :type old_index: int
        """

        self._old_index = old_index

    @property
    def old_rule(self):
        """Gets the old_rule of this UpdateConditionalFormatRuleResponse.


        :return: The old_rule of this UpdateConditionalFormatRuleResponse.
        :rtype: ConditionalFormatRule
        """
        return self._old_rule

    @old_rule.setter
    def old_rule(self, old_rule):
        """Sets the old_rule of this UpdateConditionalFormatRuleResponse.


        :param old_rule: The old_rule of this UpdateConditionalFormatRuleResponse.
        :type old_rule: ConditionalFormatRule
        """

        self._old_rule = old_rule
