# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Editors(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain_users_can_edit: bool=None, groups: List[str]=None, users: List[str]=None):
        """Editors - a model defined in OpenAPI

        :param domain_users_can_edit: The domain_users_can_edit of this Editors.
        :param groups: The groups of this Editors.
        :param users: The users of this Editors.
        """
        self.openapi_types = {
            'domain_users_can_edit': bool,
            'groups': List[str],
            'users': List[str]
        }

        self.attribute_map = {
            'domain_users_can_edit': 'domainUsersCanEdit',
            'groups': 'groups',
            'users': 'users'
        }

        self._domain_users_can_edit = domain_users_can_edit
        self._groups = groups
        self._users = users

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Editors':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Editors of this Editors.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_users_can_edit(self):
        """Gets the domain_users_can_edit of this Editors.

        True if anyone in the document's domain has edit access to the protected range. Domain protection is only supported on documents within a domain.

        :return: The domain_users_can_edit of this Editors.
        :rtype: bool
        """
        return self._domain_users_can_edit

    @domain_users_can_edit.setter
    def domain_users_can_edit(self, domain_users_can_edit):
        """Sets the domain_users_can_edit of this Editors.

        True if anyone in the document's domain has edit access to the protected range. Domain protection is only supported on documents within a domain.

        :param domain_users_can_edit: The domain_users_can_edit of this Editors.
        :type domain_users_can_edit: bool
        """

        self._domain_users_can_edit = domain_users_can_edit

    @property
    def groups(self):
        """Gets the groups of this Editors.

        The email addresses of groups with edit access to the protected range.

        :return: The groups of this Editors.
        :rtype: List[str]
        """
        return self._groups

    @groups.setter
    def groups(self, groups):
        """Sets the groups of this Editors.

        The email addresses of groups with edit access to the protected range.

        :param groups: The groups of this Editors.
        :type groups: List[str]
        """

        self._groups = groups

    @property
    def users(self):
        """Gets the users of this Editors.

        The email addresses of users with edit access to the protected range.

        :return: The users of this Editors.
        :rtype: List[str]
        """
        return self._users

    @users.setter
    def users(self, users):
        """Sets the users of this Editors.

        The email addresses of users with edit access to the protected range.

        :param users: The users of this Editors.
        :type users: List[str]
        """

        self._users = users
