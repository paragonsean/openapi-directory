# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.banding_properties import BandingProperties
from openapi_server.models.grid_range import GridRange
from openapi_server import util


class BandedRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, banded_range_id: int=None, column_properties: BandingProperties=None, range: GridRange=None, row_properties: BandingProperties=None):
        """BandedRange - a model defined in OpenAPI

        :param banded_range_id: The banded_range_id of this BandedRange.
        :param column_properties: The column_properties of this BandedRange.
        :param range: The range of this BandedRange.
        :param row_properties: The row_properties of this BandedRange.
        """
        self.openapi_types = {
            'banded_range_id': int,
            'column_properties': BandingProperties,
            'range': GridRange,
            'row_properties': BandingProperties
        }

        self.attribute_map = {
            'banded_range_id': 'bandedRangeId',
            'column_properties': 'columnProperties',
            'range': 'range',
            'row_properties': 'rowProperties'
        }

        self._banded_range_id = banded_range_id
        self._column_properties = column_properties
        self._range = range
        self._row_properties = row_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BandedRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BandedRange of this BandedRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def banded_range_id(self):
        """Gets the banded_range_id of this BandedRange.

        The ID of the banded range.

        :return: The banded_range_id of this BandedRange.
        :rtype: int
        """
        return self._banded_range_id

    @banded_range_id.setter
    def banded_range_id(self, banded_range_id):
        """Sets the banded_range_id of this BandedRange.

        The ID of the banded range.

        :param banded_range_id: The banded_range_id of this BandedRange.
        :type banded_range_id: int
        """

        self._banded_range_id = banded_range_id

    @property
    def column_properties(self):
        """Gets the column_properties of this BandedRange.


        :return: The column_properties of this BandedRange.
        :rtype: BandingProperties
        """
        return self._column_properties

    @column_properties.setter
    def column_properties(self, column_properties):
        """Sets the column_properties of this BandedRange.


        :param column_properties: The column_properties of this BandedRange.
        :type column_properties: BandingProperties
        """

        self._column_properties = column_properties

    @property
    def range(self):
        """Gets the range of this BandedRange.


        :return: The range of this BandedRange.
        :rtype: GridRange
        """
        return self._range

    @range.setter
    def range(self, range):
        """Sets the range of this BandedRange.


        :param range: The range of this BandedRange.
        :type range: GridRange
        """

        self._range = range

    @property
    def row_properties(self):
        """Gets the row_properties of this BandedRange.


        :return: The row_properties of this BandedRange.
        :rtype: BandingProperties
        """
        return self._row_properties

    @row_properties.setter
    def row_properties(self, row_properties):
        """Sets the row_properties of this BandedRange.


        :param row_properties: The row_properties of this BandedRange.
        :type row_properties: BandingProperties
        """

        self._row_properties = row_properties
