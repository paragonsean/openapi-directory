# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.developer_metadata_lookup import DeveloperMetadataLookup
from openapi_server.models.grid_range import GridRange
from openapi_server import util


class DataFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, a1_range: str=None, developer_metadata_lookup: DeveloperMetadataLookup=None, grid_range: GridRange=None):
        """DataFilter - a model defined in OpenAPI

        :param a1_range: The a1_range of this DataFilter.
        :param developer_metadata_lookup: The developer_metadata_lookup of this DataFilter.
        :param grid_range: The grid_range of this DataFilter.
        """
        self.openapi_types = {
            'a1_range': str,
            'developer_metadata_lookup': DeveloperMetadataLookup,
            'grid_range': GridRange
        }

        self.attribute_map = {
            'a1_range': 'a1Range',
            'developer_metadata_lookup': 'developerMetadataLookup',
            'grid_range': 'gridRange'
        }

        self._a1_range = a1_range
        self._developer_metadata_lookup = developer_metadata_lookup
        self._grid_range = grid_range

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataFilter of this DataFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def a1_range(self):
        """Gets the a1_range of this DataFilter.

        Selects data that matches the specified A1 range.

        :return: The a1_range of this DataFilter.
        :rtype: str
        """
        return self._a1_range

    @a1_range.setter
    def a1_range(self, a1_range):
        """Sets the a1_range of this DataFilter.

        Selects data that matches the specified A1 range.

        :param a1_range: The a1_range of this DataFilter.
        :type a1_range: str
        """

        self._a1_range = a1_range

    @property
    def developer_metadata_lookup(self):
        """Gets the developer_metadata_lookup of this DataFilter.


        :return: The developer_metadata_lookup of this DataFilter.
        :rtype: DeveloperMetadataLookup
        """
        return self._developer_metadata_lookup

    @developer_metadata_lookup.setter
    def developer_metadata_lookup(self, developer_metadata_lookup):
        """Sets the developer_metadata_lookup of this DataFilter.


        :param developer_metadata_lookup: The developer_metadata_lookup of this DataFilter.
        :type developer_metadata_lookup: DeveloperMetadataLookup
        """

        self._developer_metadata_lookup = developer_metadata_lookup

    @property
    def grid_range(self):
        """Gets the grid_range of this DataFilter.


        :return: The grid_range of this DataFilter.
        :rtype: GridRange
        """
        return self._grid_range

    @grid_range.setter
    def grid_range(self, grid_range):
        """Sets the grid_range of this DataFilter.


        :param grid_range: The grid_range of this DataFilter.
        :type grid_range: GridRange
        """

        self._grid_range = grid_range
