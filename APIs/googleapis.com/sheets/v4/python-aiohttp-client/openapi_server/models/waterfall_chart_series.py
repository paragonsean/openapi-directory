# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.chart_data import ChartData
from openapi_server.models.data_label import DataLabel
from openapi_server.models.waterfall_chart_column_style import WaterfallChartColumnStyle
from openapi_server.models.waterfall_chart_custom_subtotal import WaterfallChartCustomSubtotal
from openapi_server import util


class WaterfallChartSeries(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_subtotals: List[WaterfallChartCustomSubtotal]=None, data: ChartData=None, data_label: DataLabel=None, hide_trailing_subtotal: bool=None, negative_columns_style: WaterfallChartColumnStyle=None, positive_columns_style: WaterfallChartColumnStyle=None, subtotal_columns_style: WaterfallChartColumnStyle=None):
        """WaterfallChartSeries - a model defined in OpenAPI

        :param custom_subtotals: The custom_subtotals of this WaterfallChartSeries.
        :param data: The data of this WaterfallChartSeries.
        :param data_label: The data_label of this WaterfallChartSeries.
        :param hide_trailing_subtotal: The hide_trailing_subtotal of this WaterfallChartSeries.
        :param negative_columns_style: The negative_columns_style of this WaterfallChartSeries.
        :param positive_columns_style: The positive_columns_style of this WaterfallChartSeries.
        :param subtotal_columns_style: The subtotal_columns_style of this WaterfallChartSeries.
        """
        self.openapi_types = {
            'custom_subtotals': List[WaterfallChartCustomSubtotal],
            'data': ChartData,
            'data_label': DataLabel,
            'hide_trailing_subtotal': bool,
            'negative_columns_style': WaterfallChartColumnStyle,
            'positive_columns_style': WaterfallChartColumnStyle,
            'subtotal_columns_style': WaterfallChartColumnStyle
        }

        self.attribute_map = {
            'custom_subtotals': 'customSubtotals',
            'data': 'data',
            'data_label': 'dataLabel',
            'hide_trailing_subtotal': 'hideTrailingSubtotal',
            'negative_columns_style': 'negativeColumnsStyle',
            'positive_columns_style': 'positiveColumnsStyle',
            'subtotal_columns_style': 'subtotalColumnsStyle'
        }

        self._custom_subtotals = custom_subtotals
        self._data = data
        self._data_label = data_label
        self._hide_trailing_subtotal = hide_trailing_subtotal
        self._negative_columns_style = negative_columns_style
        self._positive_columns_style = positive_columns_style
        self._subtotal_columns_style = subtotal_columns_style

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WaterfallChartSeries':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WaterfallChartSeries of this WaterfallChartSeries.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_subtotals(self):
        """Gets the custom_subtotals of this WaterfallChartSeries.

        Custom subtotal columns appearing in this series. The order in which subtotals are defined is not significant. Only one subtotal may be defined for each data point.

        :return: The custom_subtotals of this WaterfallChartSeries.
        :rtype: List[WaterfallChartCustomSubtotal]
        """
        return self._custom_subtotals

    @custom_subtotals.setter
    def custom_subtotals(self, custom_subtotals):
        """Sets the custom_subtotals of this WaterfallChartSeries.

        Custom subtotal columns appearing in this series. The order in which subtotals are defined is not significant. Only one subtotal may be defined for each data point.

        :param custom_subtotals: The custom_subtotals of this WaterfallChartSeries.
        :type custom_subtotals: List[WaterfallChartCustomSubtotal]
        """

        self._custom_subtotals = custom_subtotals

    @property
    def data(self):
        """Gets the data of this WaterfallChartSeries.


        :return: The data of this WaterfallChartSeries.
        :rtype: ChartData
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this WaterfallChartSeries.


        :param data: The data of this WaterfallChartSeries.
        :type data: ChartData
        """

        self._data = data

    @property
    def data_label(self):
        """Gets the data_label of this WaterfallChartSeries.


        :return: The data_label of this WaterfallChartSeries.
        :rtype: DataLabel
        """
        return self._data_label

    @data_label.setter
    def data_label(self, data_label):
        """Sets the data_label of this WaterfallChartSeries.


        :param data_label: The data_label of this WaterfallChartSeries.
        :type data_label: DataLabel
        """

        self._data_label = data_label

    @property
    def hide_trailing_subtotal(self):
        """Gets the hide_trailing_subtotal of this WaterfallChartSeries.

        True to hide the subtotal column from the end of the series. By default, a subtotal column will appear at the end of each series. Setting this field to true will hide that subtotal column for this series.

        :return: The hide_trailing_subtotal of this WaterfallChartSeries.
        :rtype: bool
        """
        return self._hide_trailing_subtotal

    @hide_trailing_subtotal.setter
    def hide_trailing_subtotal(self, hide_trailing_subtotal):
        """Sets the hide_trailing_subtotal of this WaterfallChartSeries.

        True to hide the subtotal column from the end of the series. By default, a subtotal column will appear at the end of each series. Setting this field to true will hide that subtotal column for this series.

        :param hide_trailing_subtotal: The hide_trailing_subtotal of this WaterfallChartSeries.
        :type hide_trailing_subtotal: bool
        """

        self._hide_trailing_subtotal = hide_trailing_subtotal

    @property
    def negative_columns_style(self):
        """Gets the negative_columns_style of this WaterfallChartSeries.


        :return: The negative_columns_style of this WaterfallChartSeries.
        :rtype: WaterfallChartColumnStyle
        """
        return self._negative_columns_style

    @negative_columns_style.setter
    def negative_columns_style(self, negative_columns_style):
        """Sets the negative_columns_style of this WaterfallChartSeries.


        :param negative_columns_style: The negative_columns_style of this WaterfallChartSeries.
        :type negative_columns_style: WaterfallChartColumnStyle
        """

        self._negative_columns_style = negative_columns_style

    @property
    def positive_columns_style(self):
        """Gets the positive_columns_style of this WaterfallChartSeries.


        :return: The positive_columns_style of this WaterfallChartSeries.
        :rtype: WaterfallChartColumnStyle
        """
        return self._positive_columns_style

    @positive_columns_style.setter
    def positive_columns_style(self, positive_columns_style):
        """Sets the positive_columns_style of this WaterfallChartSeries.


        :param positive_columns_style: The positive_columns_style of this WaterfallChartSeries.
        :type positive_columns_style: WaterfallChartColumnStyle
        """

        self._positive_columns_style = positive_columns_style

    @property
    def subtotal_columns_style(self):
        """Gets the subtotal_columns_style of this WaterfallChartSeries.


        :return: The subtotal_columns_style of this WaterfallChartSeries.
        :rtype: WaterfallChartColumnStyle
        """
        return self._subtotal_columns_style

    @subtotal_columns_style.setter
    def subtotal_columns_style(self, subtotal_columns_style):
        """Sets the subtotal_columns_style of this WaterfallChartSeries.


        :param subtotal_columns_style: The subtotal_columns_style of this WaterfallChartSeries.
        :type subtotal_columns_style: WaterfallChartColumnStyle
        """

        self._subtotal_columns_style = subtotal_columns_style
