# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dimension_group import DimensionGroup
from openapi_server import util


class UpdateDimensionGroupRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dimension_group: DimensionGroup=None, fields: str=None):
        """UpdateDimensionGroupRequest - a model defined in OpenAPI

        :param dimension_group: The dimension_group of this UpdateDimensionGroupRequest.
        :param fields: The fields of this UpdateDimensionGroupRequest.
        """
        self.openapi_types = {
            'dimension_group': DimensionGroup,
            'fields': str
        }

        self.attribute_map = {
            'dimension_group': 'dimensionGroup',
            'fields': 'fields'
        }

        self._dimension_group = dimension_group
        self._fields = fields

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateDimensionGroupRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateDimensionGroupRequest of this UpdateDimensionGroupRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dimension_group(self):
        """Gets the dimension_group of this UpdateDimensionGroupRequest.


        :return: The dimension_group of this UpdateDimensionGroupRequest.
        :rtype: DimensionGroup
        """
        return self._dimension_group

    @dimension_group.setter
    def dimension_group(self, dimension_group):
        """Sets the dimension_group of this UpdateDimensionGroupRequest.


        :param dimension_group: The dimension_group of this UpdateDimensionGroupRequest.
        :type dimension_group: DimensionGroup
        """

        self._dimension_group = dimension_group

    @property
    def fields(self):
        """Gets the fields of this UpdateDimensionGroupRequest.

        The fields that should be updated. At least one field must be specified. The root `dimensionGroup` is implied and should not be specified. A single `\"*\"` can be used as short-hand for listing every field.

        :return: The fields of this UpdateDimensionGroupRequest.
        :rtype: str
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this UpdateDimensionGroupRequest.

        The fields that should be updated. At least one field must be specified. The root `dimensionGroup` is implied and should not be specified. A single `\"*\"` can be used as short-hand for listing every field.

        :param fields: The fields of this UpdateDimensionGroupRequest.
        :type fields: str
        """

        self._fields = fields
