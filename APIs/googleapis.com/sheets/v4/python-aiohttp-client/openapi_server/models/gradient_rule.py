# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.interpolation_point import InterpolationPoint
from openapi_server import util


class GradientRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, maxpoint: InterpolationPoint=None, midpoint: InterpolationPoint=None, minpoint: InterpolationPoint=None):
        """GradientRule - a model defined in OpenAPI

        :param maxpoint: The maxpoint of this GradientRule.
        :param midpoint: The midpoint of this GradientRule.
        :param minpoint: The minpoint of this GradientRule.
        """
        self.openapi_types = {
            'maxpoint': InterpolationPoint,
            'midpoint': InterpolationPoint,
            'minpoint': InterpolationPoint
        }

        self.attribute_map = {
            'maxpoint': 'maxpoint',
            'midpoint': 'midpoint',
            'minpoint': 'minpoint'
        }

        self._maxpoint = maxpoint
        self._midpoint = midpoint
        self._minpoint = minpoint

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GradientRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GradientRule of this GradientRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def maxpoint(self):
        """Gets the maxpoint of this GradientRule.


        :return: The maxpoint of this GradientRule.
        :rtype: InterpolationPoint
        """
        return self._maxpoint

    @maxpoint.setter
    def maxpoint(self, maxpoint):
        """Sets the maxpoint of this GradientRule.


        :param maxpoint: The maxpoint of this GradientRule.
        :type maxpoint: InterpolationPoint
        """

        self._maxpoint = maxpoint

    @property
    def midpoint(self):
        """Gets the midpoint of this GradientRule.


        :return: The midpoint of this GradientRule.
        :rtype: InterpolationPoint
        """
        return self._midpoint

    @midpoint.setter
    def midpoint(self, midpoint):
        """Sets the midpoint of this GradientRule.


        :param midpoint: The midpoint of this GradientRule.
        :type midpoint: InterpolationPoint
        """

        self._midpoint = midpoint

    @property
    def minpoint(self):
        """Gets the minpoint of this GradientRule.


        :return: The minpoint of this GradientRule.
        :rtype: InterpolationPoint
        """
        return self._minpoint

    @minpoint.setter
    def minpoint(self, minpoint):
        """Sets the minpoint of this GradientRule.


        :param minpoint: The minpoint of this GradientRule.
        :type minpoint: InterpolationPoint
        """

        self._minpoint = minpoint
