/*
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AddBandingResponse;
import org.openapitools.client.model.AddChartResponse;
import org.openapitools.client.model.AddDataSourceResponse;
import org.openapitools.client.model.AddDimensionGroupResponse;
import org.openapitools.client.model.AddFilterViewResponse;
import org.openapitools.client.model.AddNamedRangeResponse;
import org.openapitools.client.model.AddProtectedRangeResponse;
import org.openapitools.client.model.AddSheetResponse;
import org.openapitools.client.model.AddSlicerResponse;
import org.openapitools.client.model.CreateDeveloperMetadataResponse;
import org.openapitools.client.model.DeleteConditionalFormatRuleResponse;
import org.openapitools.client.model.DeleteDeveloperMetadataResponse;
import org.openapitools.client.model.DeleteDimensionGroupResponse;
import org.openapitools.client.model.DeleteDuplicatesResponse;
import org.openapitools.client.model.DuplicateFilterViewResponse;
import org.openapitools.client.model.DuplicateSheetResponse;
import org.openapitools.client.model.FindReplaceResponse;
import org.openapitools.client.model.RefreshDataSourceResponse;
import org.openapitools.client.model.TrimWhitespaceResponse;
import org.openapitools.client.model.UpdateConditionalFormatRuleResponse;
import org.openapitools.client.model.UpdateDataSourceResponse;
import org.openapitools.client.model.UpdateDeveloperMetadataResponse;
import org.openapitools.client.model.UpdateEmbeddedObjectPositionResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Response
 */
public class ResponseTest {
    private final Response model = new Response();

    /**
     * Model tests for Response
     */
    @Test
    public void testResponse() {
        // TODO: test Response
    }

    /**
     * Test the property 'addBanding'
     */
    @Test
    public void addBandingTest() {
        // TODO: test addBanding
    }

    /**
     * Test the property 'addChart'
     */
    @Test
    public void addChartTest() {
        // TODO: test addChart
    }

    /**
     * Test the property 'addDataSource'
     */
    @Test
    public void addDataSourceTest() {
        // TODO: test addDataSource
    }

    /**
     * Test the property 'addDimensionGroup'
     */
    @Test
    public void addDimensionGroupTest() {
        // TODO: test addDimensionGroup
    }

    /**
     * Test the property 'addFilterView'
     */
    @Test
    public void addFilterViewTest() {
        // TODO: test addFilterView
    }

    /**
     * Test the property 'addNamedRange'
     */
    @Test
    public void addNamedRangeTest() {
        // TODO: test addNamedRange
    }

    /**
     * Test the property 'addProtectedRange'
     */
    @Test
    public void addProtectedRangeTest() {
        // TODO: test addProtectedRange
    }

    /**
     * Test the property 'addSheet'
     */
    @Test
    public void addSheetTest() {
        // TODO: test addSheet
    }

    /**
     * Test the property 'addSlicer'
     */
    @Test
    public void addSlicerTest() {
        // TODO: test addSlicer
    }

    /**
     * Test the property 'createDeveloperMetadata'
     */
    @Test
    public void createDeveloperMetadataTest() {
        // TODO: test createDeveloperMetadata
    }

    /**
     * Test the property 'deleteConditionalFormatRule'
     */
    @Test
    public void deleteConditionalFormatRuleTest() {
        // TODO: test deleteConditionalFormatRule
    }

    /**
     * Test the property 'deleteDeveloperMetadata'
     */
    @Test
    public void deleteDeveloperMetadataTest() {
        // TODO: test deleteDeveloperMetadata
    }

    /**
     * Test the property 'deleteDimensionGroup'
     */
    @Test
    public void deleteDimensionGroupTest() {
        // TODO: test deleteDimensionGroup
    }

    /**
     * Test the property 'deleteDuplicates'
     */
    @Test
    public void deleteDuplicatesTest() {
        // TODO: test deleteDuplicates
    }

    /**
     * Test the property 'duplicateFilterView'
     */
    @Test
    public void duplicateFilterViewTest() {
        // TODO: test duplicateFilterView
    }

    /**
     * Test the property 'duplicateSheet'
     */
    @Test
    public void duplicateSheetTest() {
        // TODO: test duplicateSheet
    }

    /**
     * Test the property 'findReplace'
     */
    @Test
    public void findReplaceTest() {
        // TODO: test findReplace
    }

    /**
     * Test the property 'refreshDataSource'
     */
    @Test
    public void refreshDataSourceTest() {
        // TODO: test refreshDataSource
    }

    /**
     * Test the property 'trimWhitespace'
     */
    @Test
    public void trimWhitespaceTest() {
        // TODO: test trimWhitespace
    }

    /**
     * Test the property 'updateConditionalFormatRule'
     */
    @Test
    public void updateConditionalFormatRuleTest() {
        // TODO: test updateConditionalFormatRule
    }

    /**
     * Test the property 'updateDataSource'
     */
    @Test
    public void updateDataSourceTest() {
        // TODO: test updateDataSource
    }

    /**
     * Test the property 'updateDeveloperMetadata'
     */
    @Test
    public void updateDeveloperMetadataTest() {
        // TODO: test updateDeveloperMetadata
    }

    /**
     * Test the property 'updateEmbeddedObjectPosition'
     */
    @Test
    public void updateEmbeddedObjectPositionTest() {
        // TODO: test updateEmbeddedObjectPosition
    }

}
