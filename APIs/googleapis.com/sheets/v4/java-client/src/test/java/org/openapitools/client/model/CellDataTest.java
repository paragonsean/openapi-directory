/*
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CellFormat;
import org.openapitools.client.model.DataSourceFormula;
import org.openapitools.client.model.DataSourceTable;
import org.openapitools.client.model.DataValidationRule;
import org.openapitools.client.model.ExtendedValue;
import org.openapitools.client.model.PivotTable;
import org.openapitools.client.model.TextFormatRun;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CellData
 */
public class CellDataTest {
    private final CellData model = new CellData();

    /**
     * Model tests for CellData
     */
    @Test
    public void testCellData() {
        // TODO: test CellData
    }

    /**
     * Test the property 'dataSourceFormula'
     */
    @Test
    public void dataSourceFormulaTest() {
        // TODO: test dataSourceFormula
    }

    /**
     * Test the property 'dataSourceTable'
     */
    @Test
    public void dataSourceTableTest() {
        // TODO: test dataSourceTable
    }

    /**
     * Test the property 'dataValidation'
     */
    @Test
    public void dataValidationTest() {
        // TODO: test dataValidation
    }

    /**
     * Test the property 'effectiveFormat'
     */
    @Test
    public void effectiveFormatTest() {
        // TODO: test effectiveFormat
    }

    /**
     * Test the property 'effectiveValue'
     */
    @Test
    public void effectiveValueTest() {
        // TODO: test effectiveValue
    }

    /**
     * Test the property 'formattedValue'
     */
    @Test
    public void formattedValueTest() {
        // TODO: test formattedValue
    }

    /**
     * Test the property 'hyperlink'
     */
    @Test
    public void hyperlinkTest() {
        // TODO: test hyperlink
    }

    /**
     * Test the property 'note'
     */
    @Test
    public void noteTest() {
        // TODO: test note
    }

    /**
     * Test the property 'pivotTable'
     */
    @Test
    public void pivotTableTest() {
        // TODO: test pivotTable
    }

    /**
     * Test the property 'textFormatRuns'
     */
    @Test
    public void textFormatRunsTest() {
        // TODO: test textFormatRuns
    }

    /**
     * Test the property 'userEnteredFormat'
     */
    @Test
    public void userEnteredFormatTest() {
        // TODO: test userEnteredFormat
    }

    /**
     * Test the property 'userEnteredValue'
     */
    @Test
    public void userEnteredValueTest() {
        // TODO: test userEnteredValue
    }

}
