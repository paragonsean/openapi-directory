/*
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AddBandingRequest;
import org.openapitools.client.model.AddChartRequest;
import org.openapitools.client.model.AddConditionalFormatRuleRequest;
import org.openapitools.client.model.AddDataSourceRequest;
import org.openapitools.client.model.AddDimensionGroupRequest;
import org.openapitools.client.model.AddFilterViewRequest;
import org.openapitools.client.model.AddNamedRangeRequest;
import org.openapitools.client.model.AddProtectedRangeRequest;
import org.openapitools.client.model.AddSheetRequest;
import org.openapitools.client.model.AddSlicerRequest;
import org.openapitools.client.model.AppendCellsRequest;
import org.openapitools.client.model.AppendDimensionRequest;
import org.openapitools.client.model.AutoFillRequest;
import org.openapitools.client.model.AutoResizeDimensionsRequest;
import org.openapitools.client.model.ClearBasicFilterRequest;
import org.openapitools.client.model.CopyPasteRequest;
import org.openapitools.client.model.CreateDeveloperMetadataRequest;
import org.openapitools.client.model.CutPasteRequest;
import org.openapitools.client.model.DeleteBandingRequest;
import org.openapitools.client.model.DeleteConditionalFormatRuleRequest;
import org.openapitools.client.model.DeleteDataSourceRequest;
import org.openapitools.client.model.DeleteDeveloperMetadataRequest;
import org.openapitools.client.model.DeleteDimensionGroupRequest;
import org.openapitools.client.model.DeleteDimensionRequest;
import org.openapitools.client.model.DeleteDuplicatesRequest;
import org.openapitools.client.model.DeleteEmbeddedObjectRequest;
import org.openapitools.client.model.DeleteFilterViewRequest;
import org.openapitools.client.model.DeleteNamedRangeRequest;
import org.openapitools.client.model.DeleteProtectedRangeRequest;
import org.openapitools.client.model.DeleteRangeRequest;
import org.openapitools.client.model.DeleteSheetRequest;
import org.openapitools.client.model.DuplicateFilterViewRequest;
import org.openapitools.client.model.DuplicateSheetRequest;
import org.openapitools.client.model.FindReplaceRequest;
import org.openapitools.client.model.InsertDimensionRequest;
import org.openapitools.client.model.InsertRangeRequest;
import org.openapitools.client.model.MergeCellsRequest;
import org.openapitools.client.model.MoveDimensionRequest;
import org.openapitools.client.model.PasteDataRequest;
import org.openapitools.client.model.RandomizeRangeRequest;
import org.openapitools.client.model.RefreshDataSourceRequest;
import org.openapitools.client.model.RepeatCellRequest;
import org.openapitools.client.model.SetBasicFilterRequest;
import org.openapitools.client.model.SetDataValidationRequest;
import org.openapitools.client.model.SortRangeRequest;
import org.openapitools.client.model.TextToColumnsRequest;
import org.openapitools.client.model.TrimWhitespaceRequest;
import org.openapitools.client.model.UnmergeCellsRequest;
import org.openapitools.client.model.UpdateBandingRequest;
import org.openapitools.client.model.UpdateBordersRequest;
import org.openapitools.client.model.UpdateCellsRequest;
import org.openapitools.client.model.UpdateChartSpecRequest;
import org.openapitools.client.model.UpdateConditionalFormatRuleRequest;
import org.openapitools.client.model.UpdateDataSourceRequest;
import org.openapitools.client.model.UpdateDeveloperMetadataRequest;
import org.openapitools.client.model.UpdateDimensionGroupRequest;
import org.openapitools.client.model.UpdateDimensionPropertiesRequest;
import org.openapitools.client.model.UpdateEmbeddedObjectBorderRequest;
import org.openapitools.client.model.UpdateEmbeddedObjectPositionRequest;
import org.openapitools.client.model.UpdateFilterViewRequest;
import org.openapitools.client.model.UpdateNamedRangeRequest;
import org.openapitools.client.model.UpdateProtectedRangeRequest;
import org.openapitools.client.model.UpdateSheetPropertiesRequest;
import org.openapitools.client.model.UpdateSlicerSpecRequest;
import org.openapitools.client.model.UpdateSpreadsheetPropertiesRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Request
 */
public class RequestTest {
    private final Request model = new Request();

    /**
     * Model tests for Request
     */
    @Test
    public void testRequest() {
        // TODO: test Request
    }

    /**
     * Test the property 'addBanding'
     */
    @Test
    public void addBandingTest() {
        // TODO: test addBanding
    }

    /**
     * Test the property 'addChart'
     */
    @Test
    public void addChartTest() {
        // TODO: test addChart
    }

    /**
     * Test the property 'addConditionalFormatRule'
     */
    @Test
    public void addConditionalFormatRuleTest() {
        // TODO: test addConditionalFormatRule
    }

    /**
     * Test the property 'addDataSource'
     */
    @Test
    public void addDataSourceTest() {
        // TODO: test addDataSource
    }

    /**
     * Test the property 'addDimensionGroup'
     */
    @Test
    public void addDimensionGroupTest() {
        // TODO: test addDimensionGroup
    }

    /**
     * Test the property 'addFilterView'
     */
    @Test
    public void addFilterViewTest() {
        // TODO: test addFilterView
    }

    /**
     * Test the property 'addNamedRange'
     */
    @Test
    public void addNamedRangeTest() {
        // TODO: test addNamedRange
    }

    /**
     * Test the property 'addProtectedRange'
     */
    @Test
    public void addProtectedRangeTest() {
        // TODO: test addProtectedRange
    }

    /**
     * Test the property 'addSheet'
     */
    @Test
    public void addSheetTest() {
        // TODO: test addSheet
    }

    /**
     * Test the property 'addSlicer'
     */
    @Test
    public void addSlicerTest() {
        // TODO: test addSlicer
    }

    /**
     * Test the property 'appendCells'
     */
    @Test
    public void appendCellsTest() {
        // TODO: test appendCells
    }

    /**
     * Test the property 'appendDimension'
     */
    @Test
    public void appendDimensionTest() {
        // TODO: test appendDimension
    }

    /**
     * Test the property 'autoFill'
     */
    @Test
    public void autoFillTest() {
        // TODO: test autoFill
    }

    /**
     * Test the property 'autoResizeDimensions'
     */
    @Test
    public void autoResizeDimensionsTest() {
        // TODO: test autoResizeDimensions
    }

    /**
     * Test the property 'clearBasicFilter'
     */
    @Test
    public void clearBasicFilterTest() {
        // TODO: test clearBasicFilter
    }

    /**
     * Test the property 'copyPaste'
     */
    @Test
    public void copyPasteTest() {
        // TODO: test copyPaste
    }

    /**
     * Test the property 'createDeveloperMetadata'
     */
    @Test
    public void createDeveloperMetadataTest() {
        // TODO: test createDeveloperMetadata
    }

    /**
     * Test the property 'cutPaste'
     */
    @Test
    public void cutPasteTest() {
        // TODO: test cutPaste
    }

    /**
     * Test the property 'deleteBanding'
     */
    @Test
    public void deleteBandingTest() {
        // TODO: test deleteBanding
    }

    /**
     * Test the property 'deleteConditionalFormatRule'
     */
    @Test
    public void deleteConditionalFormatRuleTest() {
        // TODO: test deleteConditionalFormatRule
    }

    /**
     * Test the property 'deleteDataSource'
     */
    @Test
    public void deleteDataSourceTest() {
        // TODO: test deleteDataSource
    }

    /**
     * Test the property 'deleteDeveloperMetadata'
     */
    @Test
    public void deleteDeveloperMetadataTest() {
        // TODO: test deleteDeveloperMetadata
    }

    /**
     * Test the property 'deleteDimension'
     */
    @Test
    public void deleteDimensionTest() {
        // TODO: test deleteDimension
    }

    /**
     * Test the property 'deleteDimensionGroup'
     */
    @Test
    public void deleteDimensionGroupTest() {
        // TODO: test deleteDimensionGroup
    }

    /**
     * Test the property 'deleteDuplicates'
     */
    @Test
    public void deleteDuplicatesTest() {
        // TODO: test deleteDuplicates
    }

    /**
     * Test the property 'deleteEmbeddedObject'
     */
    @Test
    public void deleteEmbeddedObjectTest() {
        // TODO: test deleteEmbeddedObject
    }

    /**
     * Test the property 'deleteFilterView'
     */
    @Test
    public void deleteFilterViewTest() {
        // TODO: test deleteFilterView
    }

    /**
     * Test the property 'deleteNamedRange'
     */
    @Test
    public void deleteNamedRangeTest() {
        // TODO: test deleteNamedRange
    }

    /**
     * Test the property 'deleteProtectedRange'
     */
    @Test
    public void deleteProtectedRangeTest() {
        // TODO: test deleteProtectedRange
    }

    /**
     * Test the property 'deleteRange'
     */
    @Test
    public void deleteRangeTest() {
        // TODO: test deleteRange
    }

    /**
     * Test the property 'deleteSheet'
     */
    @Test
    public void deleteSheetTest() {
        // TODO: test deleteSheet
    }

    /**
     * Test the property 'duplicateFilterView'
     */
    @Test
    public void duplicateFilterViewTest() {
        // TODO: test duplicateFilterView
    }

    /**
     * Test the property 'duplicateSheet'
     */
    @Test
    public void duplicateSheetTest() {
        // TODO: test duplicateSheet
    }

    /**
     * Test the property 'findReplace'
     */
    @Test
    public void findReplaceTest() {
        // TODO: test findReplace
    }

    /**
     * Test the property 'insertDimension'
     */
    @Test
    public void insertDimensionTest() {
        // TODO: test insertDimension
    }

    /**
     * Test the property 'insertRange'
     */
    @Test
    public void insertRangeTest() {
        // TODO: test insertRange
    }

    /**
     * Test the property 'mergeCells'
     */
    @Test
    public void mergeCellsTest() {
        // TODO: test mergeCells
    }

    /**
     * Test the property 'moveDimension'
     */
    @Test
    public void moveDimensionTest() {
        // TODO: test moveDimension
    }

    /**
     * Test the property 'pasteData'
     */
    @Test
    public void pasteDataTest() {
        // TODO: test pasteData
    }

    /**
     * Test the property 'randomizeRange'
     */
    @Test
    public void randomizeRangeTest() {
        // TODO: test randomizeRange
    }

    /**
     * Test the property 'refreshDataSource'
     */
    @Test
    public void refreshDataSourceTest() {
        // TODO: test refreshDataSource
    }

    /**
     * Test the property 'repeatCell'
     */
    @Test
    public void repeatCellTest() {
        // TODO: test repeatCell
    }

    /**
     * Test the property 'setBasicFilter'
     */
    @Test
    public void setBasicFilterTest() {
        // TODO: test setBasicFilter
    }

    /**
     * Test the property 'setDataValidation'
     */
    @Test
    public void setDataValidationTest() {
        // TODO: test setDataValidation
    }

    /**
     * Test the property 'sortRange'
     */
    @Test
    public void sortRangeTest() {
        // TODO: test sortRange
    }

    /**
     * Test the property 'textToColumns'
     */
    @Test
    public void textToColumnsTest() {
        // TODO: test textToColumns
    }

    /**
     * Test the property 'trimWhitespace'
     */
    @Test
    public void trimWhitespaceTest() {
        // TODO: test trimWhitespace
    }

    /**
     * Test the property 'unmergeCells'
     */
    @Test
    public void unmergeCellsTest() {
        // TODO: test unmergeCells
    }

    /**
     * Test the property 'updateBanding'
     */
    @Test
    public void updateBandingTest() {
        // TODO: test updateBanding
    }

    /**
     * Test the property 'updateBorders'
     */
    @Test
    public void updateBordersTest() {
        // TODO: test updateBorders
    }

    /**
     * Test the property 'updateCells'
     */
    @Test
    public void updateCellsTest() {
        // TODO: test updateCells
    }

    /**
     * Test the property 'updateChartSpec'
     */
    @Test
    public void updateChartSpecTest() {
        // TODO: test updateChartSpec
    }

    /**
     * Test the property 'updateConditionalFormatRule'
     */
    @Test
    public void updateConditionalFormatRuleTest() {
        // TODO: test updateConditionalFormatRule
    }

    /**
     * Test the property 'updateDataSource'
     */
    @Test
    public void updateDataSourceTest() {
        // TODO: test updateDataSource
    }

    /**
     * Test the property 'updateDeveloperMetadata'
     */
    @Test
    public void updateDeveloperMetadataTest() {
        // TODO: test updateDeveloperMetadata
    }

    /**
     * Test the property 'updateDimensionGroup'
     */
    @Test
    public void updateDimensionGroupTest() {
        // TODO: test updateDimensionGroup
    }

    /**
     * Test the property 'updateDimensionProperties'
     */
    @Test
    public void updateDimensionPropertiesTest() {
        // TODO: test updateDimensionProperties
    }

    /**
     * Test the property 'updateEmbeddedObjectBorder'
     */
    @Test
    public void updateEmbeddedObjectBorderTest() {
        // TODO: test updateEmbeddedObjectBorder
    }

    /**
     * Test the property 'updateEmbeddedObjectPosition'
     */
    @Test
    public void updateEmbeddedObjectPositionTest() {
        // TODO: test updateEmbeddedObjectPosition
    }

    /**
     * Test the property 'updateFilterView'
     */
    @Test
    public void updateFilterViewTest() {
        // TODO: test updateFilterView
    }

    /**
     * Test the property 'updateNamedRange'
     */
    @Test
    public void updateNamedRangeTest() {
        // TODO: test updateNamedRange
    }

    /**
     * Test the property 'updateProtectedRange'
     */
    @Test
    public void updateProtectedRangeTest() {
        // TODO: test updateProtectedRange
    }

    /**
     * Test the property 'updateSheetProperties'
     */
    @Test
    public void updateSheetPropertiesTest() {
        // TODO: test updateSheetProperties
    }

    /**
     * Test the property 'updateSlicerSpec'
     */
    @Test
    public void updateSlicerSpecTest() {
        // TODO: test updateSlicerSpec
    }

    /**
     * Test the property 'updateSpreadsheetProperties'
     */
    @Test
    public void updateSpreadsheetPropertiesTest() {
        // TODO: test updateSpreadsheetProperties
    }

}
