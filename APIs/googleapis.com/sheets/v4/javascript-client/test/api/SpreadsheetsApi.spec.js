/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleSheetsApi);
  }
}(this, function(expect, GoogleSheetsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleSheetsApi.SpreadsheetsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SpreadsheetsApi', function() {
    describe('sheetsSpreadsheetsBatchUpdate', function() {
      it('should call sheetsSpreadsheetsBatchUpdate successfully', function(done) {
        //uncomment below and update the code to test sheetsSpreadsheetsBatchUpdate
        //instance.sheetsSpreadsheetsBatchUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sheetsSpreadsheetsCreate', function() {
      it('should call sheetsSpreadsheetsCreate successfully', function(done) {
        //uncomment below and update the code to test sheetsSpreadsheetsCreate
        //instance.sheetsSpreadsheetsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sheetsSpreadsheetsDeveloperMetadataGet', function() {
      it('should call sheetsSpreadsheetsDeveloperMetadataGet successfully', function(done) {
        //uncomment below and update the code to test sheetsSpreadsheetsDeveloperMetadataGet
        //instance.sheetsSpreadsheetsDeveloperMetadataGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sheetsSpreadsheetsDeveloperMetadataSearch', function() {
      it('should call sheetsSpreadsheetsDeveloperMetadataSearch successfully', function(done) {
        //uncomment below and update the code to test sheetsSpreadsheetsDeveloperMetadataSearch
        //instance.sheetsSpreadsheetsDeveloperMetadataSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sheetsSpreadsheetsGet', function() {
      it('should call sheetsSpreadsheetsGet successfully', function(done) {
        //uncomment below and update the code to test sheetsSpreadsheetsGet
        //instance.sheetsSpreadsheetsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sheetsSpreadsheetsGetByDataFilter', function() {
      it('should call sheetsSpreadsheetsGetByDataFilter successfully', function(done) {
        //uncomment below and update the code to test sheetsSpreadsheetsGetByDataFilter
        //instance.sheetsSpreadsheetsGetByDataFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sheetsSpreadsheetsSheetsCopyTo', function() {
      it('should call sheetsSpreadsheetsSheetsCopyTo successfully', function(done) {
        //uncomment below and update the code to test sheetsSpreadsheetsSheetsCopyTo
        //instance.sheetsSpreadsheetsSheetsCopyTo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sheetsSpreadsheetsValuesAppend', function() {
      it('should call sheetsSpreadsheetsValuesAppend successfully', function(done) {
        //uncomment below and update the code to test sheetsSpreadsheetsValuesAppend
        //instance.sheetsSpreadsheetsValuesAppend(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sheetsSpreadsheetsValuesBatchClear', function() {
      it('should call sheetsSpreadsheetsValuesBatchClear successfully', function(done) {
        //uncomment below and update the code to test sheetsSpreadsheetsValuesBatchClear
        //instance.sheetsSpreadsheetsValuesBatchClear(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sheetsSpreadsheetsValuesBatchClearByDataFilter', function() {
      it('should call sheetsSpreadsheetsValuesBatchClearByDataFilter successfully', function(done) {
        //uncomment below and update the code to test sheetsSpreadsheetsValuesBatchClearByDataFilter
        //instance.sheetsSpreadsheetsValuesBatchClearByDataFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sheetsSpreadsheetsValuesBatchGet', function() {
      it('should call sheetsSpreadsheetsValuesBatchGet successfully', function(done) {
        //uncomment below and update the code to test sheetsSpreadsheetsValuesBatchGet
        //instance.sheetsSpreadsheetsValuesBatchGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sheetsSpreadsheetsValuesBatchGetByDataFilter', function() {
      it('should call sheetsSpreadsheetsValuesBatchGetByDataFilter successfully', function(done) {
        //uncomment below and update the code to test sheetsSpreadsheetsValuesBatchGetByDataFilter
        //instance.sheetsSpreadsheetsValuesBatchGetByDataFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sheetsSpreadsheetsValuesBatchUpdate', function() {
      it('should call sheetsSpreadsheetsValuesBatchUpdate successfully', function(done) {
        //uncomment below and update the code to test sheetsSpreadsheetsValuesBatchUpdate
        //instance.sheetsSpreadsheetsValuesBatchUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sheetsSpreadsheetsValuesBatchUpdateByDataFilter', function() {
      it('should call sheetsSpreadsheetsValuesBatchUpdateByDataFilter successfully', function(done) {
        //uncomment below and update the code to test sheetsSpreadsheetsValuesBatchUpdateByDataFilter
        //instance.sheetsSpreadsheetsValuesBatchUpdateByDataFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sheetsSpreadsheetsValuesClear', function() {
      it('should call sheetsSpreadsheetsValuesClear successfully', function(done) {
        //uncomment below and update the code to test sheetsSpreadsheetsValuesClear
        //instance.sheetsSpreadsheetsValuesClear(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sheetsSpreadsheetsValuesGet', function() {
      it('should call sheetsSpreadsheetsValuesGet successfully', function(done) {
        //uncomment below and update the code to test sheetsSpreadsheetsValuesGet
        //instance.sheetsSpreadsheetsValuesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sheetsSpreadsheetsValuesUpdate', function() {
      it('should call sheetsSpreadsheetsValuesUpdate successfully', function(done) {
        //uncomment below and update the code to test sheetsSpreadsheetsValuesUpdate
        //instance.sheetsSpreadsheetsValuesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
