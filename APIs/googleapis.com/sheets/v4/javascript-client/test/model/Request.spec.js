/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleSheetsApi);
  }
}(this, function(expect, GoogleSheetsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleSheetsApi.Request();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Request', function() {
    it('should create an instance of Request', function() {
      // uncomment below and update the code to test Request
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be.a(GoogleSheetsApi.Request);
    });

    it('should have the property addBanding (base name: "addBanding")', function() {
      // uncomment below and update the code to test the property addBanding
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property addChart (base name: "addChart")', function() {
      // uncomment below and update the code to test the property addChart
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property addConditionalFormatRule (base name: "addConditionalFormatRule")', function() {
      // uncomment below and update the code to test the property addConditionalFormatRule
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property addDataSource (base name: "addDataSource")', function() {
      // uncomment below and update the code to test the property addDataSource
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property addDimensionGroup (base name: "addDimensionGroup")', function() {
      // uncomment below and update the code to test the property addDimensionGroup
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property addFilterView (base name: "addFilterView")', function() {
      // uncomment below and update the code to test the property addFilterView
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property addNamedRange (base name: "addNamedRange")', function() {
      // uncomment below and update the code to test the property addNamedRange
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property addProtectedRange (base name: "addProtectedRange")', function() {
      // uncomment below and update the code to test the property addProtectedRange
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property addSheet (base name: "addSheet")', function() {
      // uncomment below and update the code to test the property addSheet
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property addSlicer (base name: "addSlicer")', function() {
      // uncomment below and update the code to test the property addSlicer
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property appendCells (base name: "appendCells")', function() {
      // uncomment below and update the code to test the property appendCells
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property appendDimension (base name: "appendDimension")', function() {
      // uncomment below and update the code to test the property appendDimension
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property autoFill (base name: "autoFill")', function() {
      // uncomment below and update the code to test the property autoFill
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property autoResizeDimensions (base name: "autoResizeDimensions")', function() {
      // uncomment below and update the code to test the property autoResizeDimensions
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property clearBasicFilter (base name: "clearBasicFilter")', function() {
      // uncomment below and update the code to test the property clearBasicFilter
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property copyPaste (base name: "copyPaste")', function() {
      // uncomment below and update the code to test the property copyPaste
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property createDeveloperMetadata (base name: "createDeveloperMetadata")', function() {
      // uncomment below and update the code to test the property createDeveloperMetadata
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property cutPaste (base name: "cutPaste")', function() {
      // uncomment below and update the code to test the property cutPaste
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property deleteBanding (base name: "deleteBanding")', function() {
      // uncomment below and update the code to test the property deleteBanding
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property deleteConditionalFormatRule (base name: "deleteConditionalFormatRule")', function() {
      // uncomment below and update the code to test the property deleteConditionalFormatRule
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property deleteDataSource (base name: "deleteDataSource")', function() {
      // uncomment below and update the code to test the property deleteDataSource
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property deleteDeveloperMetadata (base name: "deleteDeveloperMetadata")', function() {
      // uncomment below and update the code to test the property deleteDeveloperMetadata
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property deleteDimension (base name: "deleteDimension")', function() {
      // uncomment below and update the code to test the property deleteDimension
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property deleteDimensionGroup (base name: "deleteDimensionGroup")', function() {
      // uncomment below and update the code to test the property deleteDimensionGroup
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property deleteDuplicates (base name: "deleteDuplicates")', function() {
      // uncomment below and update the code to test the property deleteDuplicates
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property deleteEmbeddedObject (base name: "deleteEmbeddedObject")', function() {
      // uncomment below and update the code to test the property deleteEmbeddedObject
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property deleteFilterView (base name: "deleteFilterView")', function() {
      // uncomment below and update the code to test the property deleteFilterView
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property deleteNamedRange (base name: "deleteNamedRange")', function() {
      // uncomment below and update the code to test the property deleteNamedRange
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property deleteProtectedRange (base name: "deleteProtectedRange")', function() {
      // uncomment below and update the code to test the property deleteProtectedRange
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property deleteRange (base name: "deleteRange")', function() {
      // uncomment below and update the code to test the property deleteRange
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property deleteSheet (base name: "deleteSheet")', function() {
      // uncomment below and update the code to test the property deleteSheet
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property duplicateFilterView (base name: "duplicateFilterView")', function() {
      // uncomment below and update the code to test the property duplicateFilterView
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property duplicateSheet (base name: "duplicateSheet")', function() {
      // uncomment below and update the code to test the property duplicateSheet
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property findReplace (base name: "findReplace")', function() {
      // uncomment below and update the code to test the property findReplace
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property insertDimension (base name: "insertDimension")', function() {
      // uncomment below and update the code to test the property insertDimension
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property insertRange (base name: "insertRange")', function() {
      // uncomment below and update the code to test the property insertRange
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property mergeCells (base name: "mergeCells")', function() {
      // uncomment below and update the code to test the property mergeCells
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property moveDimension (base name: "moveDimension")', function() {
      // uncomment below and update the code to test the property moveDimension
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property pasteData (base name: "pasteData")', function() {
      // uncomment below and update the code to test the property pasteData
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property randomizeRange (base name: "randomizeRange")', function() {
      // uncomment below and update the code to test the property randomizeRange
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property refreshDataSource (base name: "refreshDataSource")', function() {
      // uncomment below and update the code to test the property refreshDataSource
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property repeatCell (base name: "repeatCell")', function() {
      // uncomment below and update the code to test the property repeatCell
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property setBasicFilter (base name: "setBasicFilter")', function() {
      // uncomment below and update the code to test the property setBasicFilter
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property setDataValidation (base name: "setDataValidation")', function() {
      // uncomment below and update the code to test the property setDataValidation
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property sortRange (base name: "sortRange")', function() {
      // uncomment below and update the code to test the property sortRange
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property textToColumns (base name: "textToColumns")', function() {
      // uncomment below and update the code to test the property textToColumns
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property trimWhitespace (base name: "trimWhitespace")', function() {
      // uncomment below and update the code to test the property trimWhitespace
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property unmergeCells (base name: "unmergeCells")', function() {
      // uncomment below and update the code to test the property unmergeCells
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateBanding (base name: "updateBanding")', function() {
      // uncomment below and update the code to test the property updateBanding
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateBorders (base name: "updateBorders")', function() {
      // uncomment below and update the code to test the property updateBorders
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateCells (base name: "updateCells")', function() {
      // uncomment below and update the code to test the property updateCells
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateChartSpec (base name: "updateChartSpec")', function() {
      // uncomment below and update the code to test the property updateChartSpec
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateConditionalFormatRule (base name: "updateConditionalFormatRule")', function() {
      // uncomment below and update the code to test the property updateConditionalFormatRule
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateDataSource (base name: "updateDataSource")', function() {
      // uncomment below and update the code to test the property updateDataSource
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateDeveloperMetadata (base name: "updateDeveloperMetadata")', function() {
      // uncomment below and update the code to test the property updateDeveloperMetadata
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateDimensionGroup (base name: "updateDimensionGroup")', function() {
      // uncomment below and update the code to test the property updateDimensionGroup
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateDimensionProperties (base name: "updateDimensionProperties")', function() {
      // uncomment below and update the code to test the property updateDimensionProperties
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateEmbeddedObjectBorder (base name: "updateEmbeddedObjectBorder")', function() {
      // uncomment below and update the code to test the property updateEmbeddedObjectBorder
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateEmbeddedObjectPosition (base name: "updateEmbeddedObjectPosition")', function() {
      // uncomment below and update the code to test the property updateEmbeddedObjectPosition
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateFilterView (base name: "updateFilterView")', function() {
      // uncomment below and update the code to test the property updateFilterView
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateNamedRange (base name: "updateNamedRange")', function() {
      // uncomment below and update the code to test the property updateNamedRange
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateProtectedRange (base name: "updateProtectedRange")', function() {
      // uncomment below and update the code to test the property updateProtectedRange
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateSheetProperties (base name: "updateSheetProperties")', function() {
      // uncomment below and update the code to test the property updateSheetProperties
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateSlicerSpec (base name: "updateSlicerSpec")', function() {
      // uncomment below and update the code to test the property updateSlicerSpec
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateSpreadsheetProperties (base name: "updateSpreadsheetProperties")', function() {
      // uncomment below and update the code to test the property updateSpreadsheetProperties
      //var instance = new GoogleSheetsApi.Request();
      //expect(instance).to.be();
    });

  });

}));
