/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleSheetsApi);
  }
}(this, function(expect, GoogleSheetsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleSheetsApi.Sheet();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Sheet', function() {
    it('should create an instance of Sheet', function() {
      // uncomment below and update the code to test Sheet
      //var instance = new GoogleSheetsApi.Sheet();
      //expect(instance).to.be.a(GoogleSheetsApi.Sheet);
    });

    it('should have the property bandedRanges (base name: "bandedRanges")', function() {
      // uncomment below and update the code to test the property bandedRanges
      //var instance = new GoogleSheetsApi.Sheet();
      //expect(instance).to.be();
    });

    it('should have the property basicFilter (base name: "basicFilter")', function() {
      // uncomment below and update the code to test the property basicFilter
      //var instance = new GoogleSheetsApi.Sheet();
      //expect(instance).to.be();
    });

    it('should have the property charts (base name: "charts")', function() {
      // uncomment below and update the code to test the property charts
      //var instance = new GoogleSheetsApi.Sheet();
      //expect(instance).to.be();
    });

    it('should have the property columnGroups (base name: "columnGroups")', function() {
      // uncomment below and update the code to test the property columnGroups
      //var instance = new GoogleSheetsApi.Sheet();
      //expect(instance).to.be();
    });

    it('should have the property conditionalFormats (base name: "conditionalFormats")', function() {
      // uncomment below and update the code to test the property conditionalFormats
      //var instance = new GoogleSheetsApi.Sheet();
      //expect(instance).to.be();
    });

    it('should have the property data (base name: "data")', function() {
      // uncomment below and update the code to test the property data
      //var instance = new GoogleSheetsApi.Sheet();
      //expect(instance).to.be();
    });

    it('should have the property developerMetadata (base name: "developerMetadata")', function() {
      // uncomment below and update the code to test the property developerMetadata
      //var instance = new GoogleSheetsApi.Sheet();
      //expect(instance).to.be();
    });

    it('should have the property filterViews (base name: "filterViews")', function() {
      // uncomment below and update the code to test the property filterViews
      //var instance = new GoogleSheetsApi.Sheet();
      //expect(instance).to.be();
    });

    it('should have the property merges (base name: "merges")', function() {
      // uncomment below and update the code to test the property merges
      //var instance = new GoogleSheetsApi.Sheet();
      //expect(instance).to.be();
    });

    it('should have the property properties (base name: "properties")', function() {
      // uncomment below and update the code to test the property properties
      //var instance = new GoogleSheetsApi.Sheet();
      //expect(instance).to.be();
    });

    it('should have the property protectedRanges (base name: "protectedRanges")', function() {
      // uncomment below and update the code to test the property protectedRanges
      //var instance = new GoogleSheetsApi.Sheet();
      //expect(instance).to.be();
    });

    it('should have the property rowGroups (base name: "rowGroups")', function() {
      // uncomment below and update the code to test the property rowGroups
      //var instance = new GoogleSheetsApi.Sheet();
      //expect(instance).to.be();
    });

    it('should have the property slicers (base name: "slicers")', function() {
      // uncomment below and update the code to test the property slicers
      //var instance = new GoogleSheetsApi.Sheet();
      //expect(instance).to.be();
    });

  });

}));
