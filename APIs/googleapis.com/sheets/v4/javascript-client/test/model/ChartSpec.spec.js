/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleSheetsApi);
  }
}(this, function(expect, GoogleSheetsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleSheetsApi.ChartSpec();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ChartSpec', function() {
    it('should create an instance of ChartSpec', function() {
      // uncomment below and update the code to test ChartSpec
      //var instance = new GoogleSheetsApi.ChartSpec();
      //expect(instance).to.be.a(GoogleSheetsApi.ChartSpec);
    });

    it('should have the property altText (base name: "altText")', function() {
      // uncomment below and update the code to test the property altText
      //var instance = new GoogleSheetsApi.ChartSpec();
      //expect(instance).to.be();
    });

    it('should have the property backgroundColor (base name: "backgroundColor")', function() {
      // uncomment below and update the code to test the property backgroundColor
      //var instance = new GoogleSheetsApi.ChartSpec();
      //expect(instance).to.be();
    });

    it('should have the property backgroundColorStyle (base name: "backgroundColorStyle")', function() {
      // uncomment below and update the code to test the property backgroundColorStyle
      //var instance = new GoogleSheetsApi.ChartSpec();
      //expect(instance).to.be();
    });

    it('should have the property basicChart (base name: "basicChart")', function() {
      // uncomment below and update the code to test the property basicChart
      //var instance = new GoogleSheetsApi.ChartSpec();
      //expect(instance).to.be();
    });

    it('should have the property bubbleChart (base name: "bubbleChart")', function() {
      // uncomment below and update the code to test the property bubbleChart
      //var instance = new GoogleSheetsApi.ChartSpec();
      //expect(instance).to.be();
    });

    it('should have the property candlestickChart (base name: "candlestickChart")', function() {
      // uncomment below and update the code to test the property candlestickChart
      //var instance = new GoogleSheetsApi.ChartSpec();
      //expect(instance).to.be();
    });

    it('should have the property dataSourceChartProperties (base name: "dataSourceChartProperties")', function() {
      // uncomment below and update the code to test the property dataSourceChartProperties
      //var instance = new GoogleSheetsApi.ChartSpec();
      //expect(instance).to.be();
    });

    it('should have the property filterSpecs (base name: "filterSpecs")', function() {
      // uncomment below and update the code to test the property filterSpecs
      //var instance = new GoogleSheetsApi.ChartSpec();
      //expect(instance).to.be();
    });

    it('should have the property fontName (base name: "fontName")', function() {
      // uncomment below and update the code to test the property fontName
      //var instance = new GoogleSheetsApi.ChartSpec();
      //expect(instance).to.be();
    });

    it('should have the property hiddenDimensionStrategy (base name: "hiddenDimensionStrategy")', function() {
      // uncomment below and update the code to test the property hiddenDimensionStrategy
      //var instance = new GoogleSheetsApi.ChartSpec();
      //expect(instance).to.be();
    });

    it('should have the property histogramChart (base name: "histogramChart")', function() {
      // uncomment below and update the code to test the property histogramChart
      //var instance = new GoogleSheetsApi.ChartSpec();
      //expect(instance).to.be();
    });

    it('should have the property maximized (base name: "maximized")', function() {
      // uncomment below and update the code to test the property maximized
      //var instance = new GoogleSheetsApi.ChartSpec();
      //expect(instance).to.be();
    });

    it('should have the property orgChart (base name: "orgChart")', function() {
      // uncomment below and update the code to test the property orgChart
      //var instance = new GoogleSheetsApi.ChartSpec();
      //expect(instance).to.be();
    });

    it('should have the property pieChart (base name: "pieChart")', function() {
      // uncomment below and update the code to test the property pieChart
      //var instance = new GoogleSheetsApi.ChartSpec();
      //expect(instance).to.be();
    });

    it('should have the property scorecardChart (base name: "scorecardChart")', function() {
      // uncomment below and update the code to test the property scorecardChart
      //var instance = new GoogleSheetsApi.ChartSpec();
      //expect(instance).to.be();
    });

    it('should have the property sortSpecs (base name: "sortSpecs")', function() {
      // uncomment below and update the code to test the property sortSpecs
      //var instance = new GoogleSheetsApi.ChartSpec();
      //expect(instance).to.be();
    });

    it('should have the property subtitle (base name: "subtitle")', function() {
      // uncomment below and update the code to test the property subtitle
      //var instance = new GoogleSheetsApi.ChartSpec();
      //expect(instance).to.be();
    });

    it('should have the property subtitleTextFormat (base name: "subtitleTextFormat")', function() {
      // uncomment below and update the code to test the property subtitleTextFormat
      //var instance = new GoogleSheetsApi.ChartSpec();
      //expect(instance).to.be();
    });

    it('should have the property subtitleTextPosition (base name: "subtitleTextPosition")', function() {
      // uncomment below and update the code to test the property subtitleTextPosition
      //var instance = new GoogleSheetsApi.ChartSpec();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new GoogleSheetsApi.ChartSpec();
      //expect(instance).to.be();
    });

    it('should have the property titleTextFormat (base name: "titleTextFormat")', function() {
      // uncomment below and update the code to test the property titleTextFormat
      //var instance = new GoogleSheetsApi.ChartSpec();
      //expect(instance).to.be();
    });

    it('should have the property titleTextPosition (base name: "titleTextPosition")', function() {
      // uncomment below and update the code to test the property titleTextPosition
      //var instance = new GoogleSheetsApi.ChartSpec();
      //expect(instance).to.be();
    });

    it('should have the property treemapChart (base name: "treemapChart")', function() {
      // uncomment below and update the code to test the property treemapChart
      //var instance = new GoogleSheetsApi.ChartSpec();
      //expect(instance).to.be();
    });

    it('should have the property waterfallChart (base name: "waterfallChart")', function() {
      // uncomment below and update the code to test the property waterfallChart
      //var instance = new GoogleSheetsApi.ChartSpec();
      //expect(instance).to.be();
    });

  });

}));
