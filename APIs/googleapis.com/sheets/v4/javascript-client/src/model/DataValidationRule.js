/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BooleanCondition from './BooleanCondition';

/**
 * The DataValidationRule model module.
 * @module model/DataValidationRule
 * @version v4
 */
class DataValidationRule {
    /**
     * Constructs a new <code>DataValidationRule</code>.
     * A data validation rule.
     * @alias module:model/DataValidationRule
     */
    constructor() { 
        
        DataValidationRule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DataValidationRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataValidationRule} obj Optional instance to populate.
     * @return {module:model/DataValidationRule} The populated <code>DataValidationRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataValidationRule();

            if (data.hasOwnProperty('condition')) {
                obj['condition'] = BooleanCondition.constructFromObject(data['condition']);
            }
            if (data.hasOwnProperty('inputMessage')) {
                obj['inputMessage'] = ApiClient.convertToType(data['inputMessage'], 'String');
            }
            if (data.hasOwnProperty('showCustomUi')) {
                obj['showCustomUi'] = ApiClient.convertToType(data['showCustomUi'], 'Boolean');
            }
            if (data.hasOwnProperty('strict')) {
                obj['strict'] = ApiClient.convertToType(data['strict'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataValidationRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataValidationRule</code>.
     */
    static validateJSON(data) {
        // validate the optional field `condition`
        if (data['condition']) { // data not null
          BooleanCondition.validateJSON(data['condition']);
        }
        // ensure the json data is a string
        if (data['inputMessage'] && !(typeof data['inputMessage'] === 'string' || data['inputMessage'] instanceof String)) {
            throw new Error("Expected the field `inputMessage` to be a primitive type in the JSON string but got " + data['inputMessage']);
        }

        return true;
    }


}



/**
 * @member {module:model/BooleanCondition} condition
 */
DataValidationRule.prototype['condition'] = undefined;

/**
 * A message to show the user when adding data to the cell.
 * @member {String} inputMessage
 */
DataValidationRule.prototype['inputMessage'] = undefined;

/**
 * True if the UI should be customized based on the kind of condition. If true, \"List\" conditions will show a dropdown.
 * @member {Boolean} showCustomUi
 */
DataValidationRule.prototype['showCustomUi'] = undefined;

/**
 * True if invalid data should be rejected.
 * @member {Boolean} strict
 */
DataValidationRule.prototype['strict'] = undefined;






export default DataValidationRule;

