/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FindReplaceResponse model module.
 * @module model/FindReplaceResponse
 * @version v4
 */
class FindReplaceResponse {
    /**
     * Constructs a new <code>FindReplaceResponse</code>.
     * The result of the find/replace.
     * @alias module:model/FindReplaceResponse
     */
    constructor() { 
        
        FindReplaceResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FindReplaceResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FindReplaceResponse} obj Optional instance to populate.
     * @return {module:model/FindReplaceResponse} The populated <code>FindReplaceResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FindReplaceResponse();

            if (data.hasOwnProperty('formulasChanged')) {
                obj['formulasChanged'] = ApiClient.convertToType(data['formulasChanged'], 'Number');
            }
            if (data.hasOwnProperty('occurrencesChanged')) {
                obj['occurrencesChanged'] = ApiClient.convertToType(data['occurrencesChanged'], 'Number');
            }
            if (data.hasOwnProperty('rowsChanged')) {
                obj['rowsChanged'] = ApiClient.convertToType(data['rowsChanged'], 'Number');
            }
            if (data.hasOwnProperty('sheetsChanged')) {
                obj['sheetsChanged'] = ApiClient.convertToType(data['sheetsChanged'], 'Number');
            }
            if (data.hasOwnProperty('valuesChanged')) {
                obj['valuesChanged'] = ApiClient.convertToType(data['valuesChanged'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FindReplaceResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FindReplaceResponse</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The number of formula cells changed.
 * @member {Number} formulasChanged
 */
FindReplaceResponse.prototype['formulasChanged'] = undefined;

/**
 * The number of occurrences (possibly multiple within a cell) changed. For example, if replacing `\"e\"` with `\"o\"` in `\"Google Sheets\"`, this would be `\"3\"` because `\"Google Sheets\"` -> `\"Googlo Shoots\"`.
 * @member {Number} occurrencesChanged
 */
FindReplaceResponse.prototype['occurrencesChanged'] = undefined;

/**
 * The number of rows changed.
 * @member {Number} rowsChanged
 */
FindReplaceResponse.prototype['rowsChanged'] = undefined;

/**
 * The number of sheets changed.
 * @member {Number} sheetsChanged
 */
FindReplaceResponse.prototype['sheetsChanged'] = undefined;

/**
 * The number of non-formula cells changed.
 * @member {Number} valuesChanged
 */
FindReplaceResponse.prototype['valuesChanged'] = undefined;






export default FindReplaceResponse;

