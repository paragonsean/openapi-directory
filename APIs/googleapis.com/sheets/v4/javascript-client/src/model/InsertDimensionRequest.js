/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DimensionRange from './DimensionRange';

/**
 * The InsertDimensionRequest model module.
 * @module model/InsertDimensionRequest
 * @version v4
 */
class InsertDimensionRequest {
    /**
     * Constructs a new <code>InsertDimensionRequest</code>.
     * Inserts rows or columns in a sheet at a particular index.
     * @alias module:model/InsertDimensionRequest
     */
    constructor() { 
        
        InsertDimensionRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InsertDimensionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InsertDimensionRequest} obj Optional instance to populate.
     * @return {module:model/InsertDimensionRequest} The populated <code>InsertDimensionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InsertDimensionRequest();

            if (data.hasOwnProperty('inheritFromBefore')) {
                obj['inheritFromBefore'] = ApiClient.convertToType(data['inheritFromBefore'], 'Boolean');
            }
            if (data.hasOwnProperty('range')) {
                obj['range'] = DimensionRange.constructFromObject(data['range']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InsertDimensionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InsertDimensionRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `range`
        if (data['range']) { // data not null
          DimensionRange.validateJSON(data['range']);
        }

        return true;
    }


}



/**
 * Whether dimension properties should be extended from the dimensions before or after the newly inserted dimensions. True to inherit from the dimensions before (in which case the start index must be greater than 0), and false to inherit from the dimensions after. For example, if row index 0 has red background and row index 1 has a green background, then inserting 2 rows at index 1 can inherit either the green or red background. If `inheritFromBefore` is true, the two new rows will be red (because the row before the insertion point was red), whereas if `inheritFromBefore` is false, the two new rows will be green (because the row after the insertion point was green).
 * @member {Boolean} inheritFromBefore
 */
InsertDimensionRequest.prototype['inheritFromBefore'] = undefined;

/**
 * @member {module:model/DimensionRange} range
 */
InsertDimensionRequest.prototype['range'] = undefined;






export default InsertDimensionRequest;

