/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DimensionRange from './DimensionRange';

/**
 * The AddDimensionGroupRequest model module.
 * @module model/AddDimensionGroupRequest
 * @version v4
 */
class AddDimensionGroupRequest {
    /**
     * Constructs a new <code>AddDimensionGroupRequest</code>.
     * Creates a group over the specified range. If the requested range is a superset of the range of an existing group G, then the depth of G is incremented and this new group G&#39; has the depth of that group. For example, a group [C:D, depth 1] + [B:E] results in groups [B:E, depth 1] and [C:D, depth 2]. If the requested range is a subset of the range of an existing group G, then the depth of the new group G&#39; becomes one greater than the depth of G. For example, a group [B:E, depth 1] + [C:D] results in groups [B:E, depth 1] and [C:D, depth 2]. If the requested range starts before and ends within, or starts within and ends after, the range of an existing group G, then the range of the existing group G becomes the union of the ranges, and the new group G&#39; has depth one greater than the depth of G and range as the intersection of the ranges. For example, a group [B:D, depth 1] + [C:E] results in groups [B:E, depth 1] and [C:D, depth 2].
     * @alias module:model/AddDimensionGroupRequest
     */
    constructor() { 
        
        AddDimensionGroupRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AddDimensionGroupRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddDimensionGroupRequest} obj Optional instance to populate.
     * @return {module:model/AddDimensionGroupRequest} The populated <code>AddDimensionGroupRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddDimensionGroupRequest();

            if (data.hasOwnProperty('range')) {
                obj['range'] = DimensionRange.constructFromObject(data['range']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddDimensionGroupRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddDimensionGroupRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `range`
        if (data['range']) { // data not null
          DimensionRange.validateJSON(data['range']);
        }

        return true;
    }


}



/**
 * @member {module:model/DimensionRange} range
 */
AddDimensionGroupRequest.prototype['range'] = undefined;






export default AddDimensionGroupRequest;

