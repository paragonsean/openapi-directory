/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BigQueryQuerySpec from './BigQueryQuerySpec';
import BigQueryTableSpec from './BigQueryTableSpec';

/**
 * The BigQueryDataSourceSpec model module.
 * @module model/BigQueryDataSourceSpec
 * @version v4
 */
class BigQueryDataSourceSpec {
    /**
     * Constructs a new <code>BigQueryDataSourceSpec</code>.
     * The specification of a BigQuery data source that&#39;s connected to a sheet.
     * @alias module:model/BigQueryDataSourceSpec
     */
    constructor() { 
        
        BigQueryDataSourceSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BigQueryDataSourceSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BigQueryDataSourceSpec} obj Optional instance to populate.
     * @return {module:model/BigQueryDataSourceSpec} The populated <code>BigQueryDataSourceSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BigQueryDataSourceSpec();

            if (data.hasOwnProperty('projectId')) {
                obj['projectId'] = ApiClient.convertToType(data['projectId'], 'String');
            }
            if (data.hasOwnProperty('querySpec')) {
                obj['querySpec'] = BigQueryQuerySpec.constructFromObject(data['querySpec']);
            }
            if (data.hasOwnProperty('tableSpec')) {
                obj['tableSpec'] = BigQueryTableSpec.constructFromObject(data['tableSpec']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BigQueryDataSourceSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BigQueryDataSourceSpec</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['projectId'] && !(typeof data['projectId'] === 'string' || data['projectId'] instanceof String)) {
            throw new Error("Expected the field `projectId` to be a primitive type in the JSON string but got " + data['projectId']);
        }
        // validate the optional field `querySpec`
        if (data['querySpec']) { // data not null
          BigQueryQuerySpec.validateJSON(data['querySpec']);
        }
        // validate the optional field `tableSpec`
        if (data['tableSpec']) { // data not null
          BigQueryTableSpec.validateJSON(data['tableSpec']);
        }

        return true;
    }


}



/**
 * The ID of a BigQuery enabled Google Cloud project with a billing account attached. For any queries executed against the data source, the project is charged.
 * @member {String} projectId
 */
BigQueryDataSourceSpec.prototype['projectId'] = undefined;

/**
 * @member {module:model/BigQueryQuerySpec} querySpec
 */
BigQueryDataSourceSpec.prototype['querySpec'] = undefined;

/**
 * @member {module:model/BigQueryTableSpec} tableSpec
 */
BigQueryDataSourceSpec.prototype['tableSpec'] = undefined;






export default BigQueryDataSourceSpec;

