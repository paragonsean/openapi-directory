/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PivotGroupLimit model module.
 * @module model/PivotGroupLimit
 * @version v4
 */
class PivotGroupLimit {
    /**
     * Constructs a new <code>PivotGroupLimit</code>.
     * The count limit on rows or columns in the pivot group.
     * @alias module:model/PivotGroupLimit
     */
    constructor() { 
        
        PivotGroupLimit.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PivotGroupLimit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PivotGroupLimit} obj Optional instance to populate.
     * @return {module:model/PivotGroupLimit} The populated <code>PivotGroupLimit</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PivotGroupLimit();

            if (data.hasOwnProperty('applyOrder')) {
                obj['applyOrder'] = ApiClient.convertToType(data['applyOrder'], 'Number');
            }
            if (data.hasOwnProperty('countLimit')) {
                obj['countLimit'] = ApiClient.convertToType(data['countLimit'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PivotGroupLimit</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PivotGroupLimit</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The order in which the group limit is applied to the pivot table. Pivot group limits are applied from lower to higher order number. Order numbers are normalized to consecutive integers from 0. For write request, to fully customize the applying orders, all pivot group limits should have this field set with an unique number. Otherwise, the order is determined by the index in the PivotTable.rows list and then the PivotTable.columns list.
 * @member {Number} applyOrder
 */
PivotGroupLimit.prototype['applyOrder'] = undefined;

/**
 * The count limit.
 * @member {Number} countLimit
 */
PivotGroupLimit.prototype['countLimit'] = undefined;






export default PivotGroupLimit;

