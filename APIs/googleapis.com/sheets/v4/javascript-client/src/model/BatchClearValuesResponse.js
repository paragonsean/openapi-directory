/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BatchClearValuesResponse model module.
 * @module model/BatchClearValuesResponse
 * @version v4
 */
class BatchClearValuesResponse {
    /**
     * Constructs a new <code>BatchClearValuesResponse</code>.
     * The response when clearing a range of values in a spreadsheet.
     * @alias module:model/BatchClearValuesResponse
     */
    constructor() { 
        
        BatchClearValuesResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BatchClearValuesResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchClearValuesResponse} obj Optional instance to populate.
     * @return {module:model/BatchClearValuesResponse} The populated <code>BatchClearValuesResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchClearValuesResponse();

            if (data.hasOwnProperty('clearedRanges')) {
                obj['clearedRanges'] = ApiClient.convertToType(data['clearedRanges'], ['String']);
            }
            if (data.hasOwnProperty('spreadsheetId')) {
                obj['spreadsheetId'] = ApiClient.convertToType(data['spreadsheetId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchClearValuesResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchClearValuesResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['clearedRanges'])) {
            throw new Error("Expected the field `clearedRanges` to be an array in the JSON data but got " + data['clearedRanges']);
        }
        // ensure the json data is a string
        if (data['spreadsheetId'] && !(typeof data['spreadsheetId'] === 'string' || data['spreadsheetId'] instanceof String)) {
            throw new Error("Expected the field `spreadsheetId` to be a primitive type in the JSON string but got " + data['spreadsheetId']);
        }

        return true;
    }


}



/**
 * The ranges that were cleared, in A1 notation. If the requests are for an unbounded range or a ranger larger than the bounds of the sheet, this is the actual ranges that were cleared, bounded to the sheet's limits.
 * @member {Array.<String>} clearedRanges
 */
BatchClearValuesResponse.prototype['clearedRanges'] = undefined;

/**
 * The spreadsheet the updates were applied to.
 * @member {String} spreadsheetId
 */
BatchClearValuesResponse.prototype['spreadsheetId'] = undefined;






export default BatchClearValuesResponse;

