/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GridRange from './GridRange';

/**
 * The MergeCellsRequest model module.
 * @module model/MergeCellsRequest
 * @version v4
 */
class MergeCellsRequest {
    /**
     * Constructs a new <code>MergeCellsRequest</code>.
     * Merges all cells in the range.
     * @alias module:model/MergeCellsRequest
     */
    constructor() { 
        
        MergeCellsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MergeCellsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MergeCellsRequest} obj Optional instance to populate.
     * @return {module:model/MergeCellsRequest} The populated <code>MergeCellsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MergeCellsRequest();

            if (data.hasOwnProperty('mergeType')) {
                obj['mergeType'] = ApiClient.convertToType(data['mergeType'], 'String');
            }
            if (data.hasOwnProperty('range')) {
                obj['range'] = GridRange.constructFromObject(data['range']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MergeCellsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MergeCellsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['mergeType'] && !(typeof data['mergeType'] === 'string' || data['mergeType'] instanceof String)) {
            throw new Error("Expected the field `mergeType` to be a primitive type in the JSON string but got " + data['mergeType']);
        }
        // validate the optional field `range`
        if (data['range']) { // data not null
          GridRange.validateJSON(data['range']);
        }

        return true;
    }


}



/**
 * How the cells should be merged.
 * @member {module:model/MergeCellsRequest.MergeTypeEnum} mergeType
 */
MergeCellsRequest.prototype['mergeType'] = undefined;

/**
 * @member {module:model/GridRange} range
 */
MergeCellsRequest.prototype['range'] = undefined;





/**
 * Allowed values for the <code>mergeType</code> property.
 * @enum {String}
 * @readonly
 */
MergeCellsRequest['MergeTypeEnum'] = {

    /**
     * value: "MERGE_ALL"
     * @const
     */
    "ALL": "MERGE_ALL",

    /**
     * value: "MERGE_COLUMNS"
     * @const
     */
    "COLUMNS": "MERGE_COLUMNS",

    /**
     * value: "MERGE_ROWS"
     * @const
     */
    "ROWS": "MERGE_ROWS"
};



export default MergeCellsRequest;

