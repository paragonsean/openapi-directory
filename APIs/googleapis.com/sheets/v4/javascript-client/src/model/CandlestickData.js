/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CandlestickSeries from './CandlestickSeries';

/**
 * The CandlestickData model module.
 * @module model/CandlestickData
 * @version v4
 */
class CandlestickData {
    /**
     * Constructs a new <code>CandlestickData</code>.
     * The Candlestick chart data, each containing the low, open, close, and high values for a series.
     * @alias module:model/CandlestickData
     */
    constructor() { 
        
        CandlestickData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CandlestickData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CandlestickData} obj Optional instance to populate.
     * @return {module:model/CandlestickData} The populated <code>CandlestickData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CandlestickData();

            if (data.hasOwnProperty('closeSeries')) {
                obj['closeSeries'] = CandlestickSeries.constructFromObject(data['closeSeries']);
            }
            if (data.hasOwnProperty('highSeries')) {
                obj['highSeries'] = CandlestickSeries.constructFromObject(data['highSeries']);
            }
            if (data.hasOwnProperty('lowSeries')) {
                obj['lowSeries'] = CandlestickSeries.constructFromObject(data['lowSeries']);
            }
            if (data.hasOwnProperty('openSeries')) {
                obj['openSeries'] = CandlestickSeries.constructFromObject(data['openSeries']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CandlestickData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CandlestickData</code>.
     */
    static validateJSON(data) {
        // validate the optional field `closeSeries`
        if (data['closeSeries']) { // data not null
          CandlestickSeries.validateJSON(data['closeSeries']);
        }
        // validate the optional field `highSeries`
        if (data['highSeries']) { // data not null
          CandlestickSeries.validateJSON(data['highSeries']);
        }
        // validate the optional field `lowSeries`
        if (data['lowSeries']) { // data not null
          CandlestickSeries.validateJSON(data['lowSeries']);
        }
        // validate the optional field `openSeries`
        if (data['openSeries']) { // data not null
          CandlestickSeries.validateJSON(data['openSeries']);
        }

        return true;
    }


}



/**
 * @member {module:model/CandlestickSeries} closeSeries
 */
CandlestickData.prototype['closeSeries'] = undefined;

/**
 * @member {module:model/CandlestickSeries} highSeries
 */
CandlestickData.prototype['highSeries'] = undefined;

/**
 * @member {module:model/CandlestickSeries} lowSeries
 */
CandlestickData.prototype['lowSeries'] = undefined;

/**
 * @member {module:model/CandlestickSeries} openSeries
 */
CandlestickData.prototype['openSeries'] = undefined;






export default CandlestickData;

