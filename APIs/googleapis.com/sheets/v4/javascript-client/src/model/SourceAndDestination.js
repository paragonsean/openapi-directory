/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GridRange from './GridRange';

/**
 * The SourceAndDestination model module.
 * @module model/SourceAndDestination
 * @version v4
 */
class SourceAndDestination {
    /**
     * Constructs a new <code>SourceAndDestination</code>.
     * A combination of a source range and how to extend that source.
     * @alias module:model/SourceAndDestination
     */
    constructor() { 
        
        SourceAndDestination.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SourceAndDestination</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SourceAndDestination} obj Optional instance to populate.
     * @return {module:model/SourceAndDestination} The populated <code>SourceAndDestination</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SourceAndDestination();

            if (data.hasOwnProperty('dimension')) {
                obj['dimension'] = ApiClient.convertToType(data['dimension'], 'String');
            }
            if (data.hasOwnProperty('fillLength')) {
                obj['fillLength'] = ApiClient.convertToType(data['fillLength'], 'Number');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = GridRange.constructFromObject(data['source']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SourceAndDestination</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SourceAndDestination</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dimension'] && !(typeof data['dimension'] === 'string' || data['dimension'] instanceof String)) {
            throw new Error("Expected the field `dimension` to be a primitive type in the JSON string but got " + data['dimension']);
        }
        // validate the optional field `source`
        if (data['source']) { // data not null
          GridRange.validateJSON(data['source']);
        }

        return true;
    }


}



/**
 * The dimension that data should be filled into.
 * @member {module:model/SourceAndDestination.DimensionEnum} dimension
 */
SourceAndDestination.prototype['dimension'] = undefined;

/**
 * The number of rows or columns that data should be filled into. Positive numbers expand beyond the last row or last column of the source. Negative numbers expand before the first row or first column of the source.
 * @member {Number} fillLength
 */
SourceAndDestination.prototype['fillLength'] = undefined;

/**
 * @member {module:model/GridRange} source
 */
SourceAndDestination.prototype['source'] = undefined;





/**
 * Allowed values for the <code>dimension</code> property.
 * @enum {String}
 * @readonly
 */
SourceAndDestination['DimensionEnum'] = {

    /**
     * value: "DIMENSION_UNSPECIFIED"
     * @const
     */
    "DIMENSION_UNSPECIFIED": "DIMENSION_UNSPECIFIED",

    /**
     * value: "ROWS"
     * @const
     */
    "ROWS": "ROWS",

    /**
     * value: "COLUMNS"
     * @const
     */
    "COLUMNS": "COLUMNS"
};



export default SourceAndDestination;

