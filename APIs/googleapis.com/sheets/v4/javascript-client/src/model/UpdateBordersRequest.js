/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Border from './Border';
import GridRange from './GridRange';

/**
 * The UpdateBordersRequest model module.
 * @module model/UpdateBordersRequest
 * @version v4
 */
class UpdateBordersRequest {
    /**
     * Constructs a new <code>UpdateBordersRequest</code>.
     * Updates the borders of a range. If a field is not set in the request, that means the border remains as-is. For example, with two subsequent UpdateBordersRequest: 1. range: A1:A5 &#x60;{ top: RED, bottom: WHITE }&#x60; 2. range: A1:A5 &#x60;{ left: BLUE }&#x60; That would result in A1:A5 having a borders of &#x60;{ top: RED, bottom: WHITE, left: BLUE }&#x60;. If you want to clear a border, explicitly set the style to NONE.
     * @alias module:model/UpdateBordersRequest
     */
    constructor() { 
        
        UpdateBordersRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateBordersRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateBordersRequest} obj Optional instance to populate.
     * @return {module:model/UpdateBordersRequest} The populated <code>UpdateBordersRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateBordersRequest();

            if (data.hasOwnProperty('bottom')) {
                obj['bottom'] = Border.constructFromObject(data['bottom']);
            }
            if (data.hasOwnProperty('innerHorizontal')) {
                obj['innerHorizontal'] = Border.constructFromObject(data['innerHorizontal']);
            }
            if (data.hasOwnProperty('innerVertical')) {
                obj['innerVertical'] = Border.constructFromObject(data['innerVertical']);
            }
            if (data.hasOwnProperty('left')) {
                obj['left'] = Border.constructFromObject(data['left']);
            }
            if (data.hasOwnProperty('range')) {
                obj['range'] = GridRange.constructFromObject(data['range']);
            }
            if (data.hasOwnProperty('right')) {
                obj['right'] = Border.constructFromObject(data['right']);
            }
            if (data.hasOwnProperty('top')) {
                obj['top'] = Border.constructFromObject(data['top']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateBordersRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateBordersRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `bottom`
        if (data['bottom']) { // data not null
          Border.validateJSON(data['bottom']);
        }
        // validate the optional field `innerHorizontal`
        if (data['innerHorizontal']) { // data not null
          Border.validateJSON(data['innerHorizontal']);
        }
        // validate the optional field `innerVertical`
        if (data['innerVertical']) { // data not null
          Border.validateJSON(data['innerVertical']);
        }
        // validate the optional field `left`
        if (data['left']) { // data not null
          Border.validateJSON(data['left']);
        }
        // validate the optional field `range`
        if (data['range']) { // data not null
          GridRange.validateJSON(data['range']);
        }
        // validate the optional field `right`
        if (data['right']) { // data not null
          Border.validateJSON(data['right']);
        }
        // validate the optional field `top`
        if (data['top']) { // data not null
          Border.validateJSON(data['top']);
        }

        return true;
    }


}



/**
 * @member {module:model/Border} bottom
 */
UpdateBordersRequest.prototype['bottom'] = undefined;

/**
 * @member {module:model/Border} innerHorizontal
 */
UpdateBordersRequest.prototype['innerHorizontal'] = undefined;

/**
 * @member {module:model/Border} innerVertical
 */
UpdateBordersRequest.prototype['innerVertical'] = undefined;

/**
 * @member {module:model/Border} left
 */
UpdateBordersRequest.prototype['left'] = undefined;

/**
 * @member {module:model/GridRange} range
 */
UpdateBordersRequest.prototype['range'] = undefined;

/**
 * @member {module:model/Border} right
 */
UpdateBordersRequest.prototype['right'] = undefined;

/**
 * @member {module:model/Border} top
 */
UpdateBordersRequest.prototype['top'] = undefined;






export default UpdateBordersRequest;

