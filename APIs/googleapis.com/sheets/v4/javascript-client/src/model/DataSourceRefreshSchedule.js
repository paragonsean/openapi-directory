/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DataSourceRefreshDailySchedule from './DataSourceRefreshDailySchedule';
import DataSourceRefreshMonthlySchedule from './DataSourceRefreshMonthlySchedule';
import DataSourceRefreshWeeklySchedule from './DataSourceRefreshWeeklySchedule';
import Interval from './Interval';

/**
 * The DataSourceRefreshSchedule model module.
 * @module model/DataSourceRefreshSchedule
 * @version v4
 */
class DataSourceRefreshSchedule {
    /**
     * Constructs a new <code>DataSourceRefreshSchedule</code>.
     * Schedule for refreshing the data source. Data sources in the spreadsheet are refreshed within a time interval. You can specify the start time by clicking the Scheduled Refresh button in the Sheets editor, but the interval is fixed at 4 hours. For example, if you specify a start time of 8 AM , the refresh will take place between 8 AM and 12 PM every day.
     * @alias module:model/DataSourceRefreshSchedule
     */
    constructor() { 
        
        DataSourceRefreshSchedule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DataSourceRefreshSchedule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataSourceRefreshSchedule} obj Optional instance to populate.
     * @return {module:model/DataSourceRefreshSchedule} The populated <code>DataSourceRefreshSchedule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataSourceRefreshSchedule();

            if (data.hasOwnProperty('dailySchedule')) {
                obj['dailySchedule'] = DataSourceRefreshDailySchedule.constructFromObject(data['dailySchedule']);
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('monthlySchedule')) {
                obj['monthlySchedule'] = DataSourceRefreshMonthlySchedule.constructFromObject(data['monthlySchedule']);
            }
            if (data.hasOwnProperty('nextRun')) {
                obj['nextRun'] = Interval.constructFromObject(data['nextRun']);
            }
            if (data.hasOwnProperty('refreshScope')) {
                obj['refreshScope'] = ApiClient.convertToType(data['refreshScope'], 'String');
            }
            if (data.hasOwnProperty('weeklySchedule')) {
                obj['weeklySchedule'] = DataSourceRefreshWeeklySchedule.constructFromObject(data['weeklySchedule']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataSourceRefreshSchedule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataSourceRefreshSchedule</code>.
     */
    static validateJSON(data) {
        // validate the optional field `dailySchedule`
        if (data['dailySchedule']) { // data not null
          DataSourceRefreshDailySchedule.validateJSON(data['dailySchedule']);
        }
        // validate the optional field `monthlySchedule`
        if (data['monthlySchedule']) { // data not null
          DataSourceRefreshMonthlySchedule.validateJSON(data['monthlySchedule']);
        }
        // validate the optional field `nextRun`
        if (data['nextRun']) { // data not null
          Interval.validateJSON(data['nextRun']);
        }
        // ensure the json data is a string
        if (data['refreshScope'] && !(typeof data['refreshScope'] === 'string' || data['refreshScope'] instanceof String)) {
            throw new Error("Expected the field `refreshScope` to be a primitive type in the JSON string but got " + data['refreshScope']);
        }
        // validate the optional field `weeklySchedule`
        if (data['weeklySchedule']) { // data not null
          DataSourceRefreshWeeklySchedule.validateJSON(data['weeklySchedule']);
        }

        return true;
    }


}



/**
 * @member {module:model/DataSourceRefreshDailySchedule} dailySchedule
 */
DataSourceRefreshSchedule.prototype['dailySchedule'] = undefined;

/**
 * True if the refresh schedule is enabled, or false otherwise.
 * @member {Boolean} enabled
 */
DataSourceRefreshSchedule.prototype['enabled'] = undefined;

/**
 * @member {module:model/DataSourceRefreshMonthlySchedule} monthlySchedule
 */
DataSourceRefreshSchedule.prototype['monthlySchedule'] = undefined;

/**
 * @member {module:model/Interval} nextRun
 */
DataSourceRefreshSchedule.prototype['nextRun'] = undefined;

/**
 * The scope of the refresh. Must be ALL_DATA_SOURCES.
 * @member {module:model/DataSourceRefreshSchedule.RefreshScopeEnum} refreshScope
 */
DataSourceRefreshSchedule.prototype['refreshScope'] = undefined;

/**
 * @member {module:model/DataSourceRefreshWeeklySchedule} weeklySchedule
 */
DataSourceRefreshSchedule.prototype['weeklySchedule'] = undefined;





/**
 * Allowed values for the <code>refreshScope</code> property.
 * @enum {String}
 * @readonly
 */
DataSourceRefreshSchedule['RefreshScopeEnum'] = {

    /**
     * value: "DATA_SOURCE_REFRESH_SCOPE_UNSPECIFIED"
     * @const
     */
    "DATA_SOURCE_REFRESH_SCOPE_UNSPECIFIED": "DATA_SOURCE_REFRESH_SCOPE_UNSPECIFIED",

    /**
     * value: "ALL_DATA_SOURCES"
     * @const
     */
    "ALL_DATA_SOURCES": "ALL_DATA_SOURCES"
};



export default DataSourceRefreshSchedule;

