/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SheetProperties from './SheetProperties';

/**
 * The AddSheetRequest model module.
 * @module model/AddSheetRequest
 * @version v4
 */
class AddSheetRequest {
    /**
     * Constructs a new <code>AddSheetRequest</code>.
     * Adds a new sheet. When a sheet is added at a given index, all subsequent sheets&#39; indexes are incremented. To add an object sheet, use AddChartRequest instead and specify EmbeddedObjectPosition.sheetId or EmbeddedObjectPosition.newSheet.
     * @alias module:model/AddSheetRequest
     */
    constructor() { 
        
        AddSheetRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AddSheetRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddSheetRequest} obj Optional instance to populate.
     * @return {module:model/AddSheetRequest} The populated <code>AddSheetRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddSheetRequest();

            if (data.hasOwnProperty('properties')) {
                obj['properties'] = SheetProperties.constructFromObject(data['properties']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddSheetRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddSheetRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `properties`
        if (data['properties']) { // data not null
          SheetProperties.validateJSON(data['properties']);
        }

        return true;
    }


}



/**
 * @member {module:model/SheetProperties} properties
 */
AddSheetRequest.prototype['properties'] = undefined;






export default AddSheetRequest;

