/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Color from './Color';
import ColorStyle from './ColorStyle';

/**
 * The Border model module.
 * @module model/Border
 * @version v4
 */
class Border {
    /**
     * Constructs a new <code>Border</code>.
     * A border along a cell.
     * @alias module:model/Border
     */
    constructor() { 
        
        Border.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Border</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Border} obj Optional instance to populate.
     * @return {module:model/Border} The populated <code>Border</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Border();

            if (data.hasOwnProperty('color')) {
                obj['color'] = Color.constructFromObject(data['color']);
            }
            if (data.hasOwnProperty('colorStyle')) {
                obj['colorStyle'] = ColorStyle.constructFromObject(data['colorStyle']);
            }
            if (data.hasOwnProperty('style')) {
                obj['style'] = ApiClient.convertToType(data['style'], 'String');
            }
            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Border</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Border</code>.
     */
    static validateJSON(data) {
        // validate the optional field `color`
        if (data['color']) { // data not null
          Color.validateJSON(data['color']);
        }
        // validate the optional field `colorStyle`
        if (data['colorStyle']) { // data not null
          ColorStyle.validateJSON(data['colorStyle']);
        }
        // ensure the json data is a string
        if (data['style'] && !(typeof data['style'] === 'string' || data['style'] instanceof String)) {
            throw new Error("Expected the field `style` to be a primitive type in the JSON string but got " + data['style']);
        }

        return true;
    }


}



/**
 * @member {module:model/Color} color
 */
Border.prototype['color'] = undefined;

/**
 * @member {module:model/ColorStyle} colorStyle
 */
Border.prototype['colorStyle'] = undefined;

/**
 * The style of the border.
 * @member {module:model/Border.StyleEnum} style
 */
Border.prototype['style'] = undefined;

/**
 * The width of the border, in pixels. Deprecated; the width is determined by the \"style\" field.
 * @member {Number} width
 */
Border.prototype['width'] = undefined;





/**
 * Allowed values for the <code>style</code> property.
 * @enum {String}
 * @readonly
 */
Border['StyleEnum'] = {

    /**
     * value: "STYLE_UNSPECIFIED"
     * @const
     */
    "STYLE_UNSPECIFIED": "STYLE_UNSPECIFIED",

    /**
     * value: "DOTTED"
     * @const
     */
    "DOTTED": "DOTTED",

    /**
     * value: "DASHED"
     * @const
     */
    "DASHED": "DASHED",

    /**
     * value: "SOLID"
     * @const
     */
    "SOLID": "SOLID",

    /**
     * value: "SOLID_MEDIUM"
     * @const
     */
    "SOLID_MEDIUM": "SOLID_MEDIUM",

    /**
     * value: "SOLID_THICK"
     * @const
     */
    "SOLID_THICK": "SOLID_THICK",

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "DOUBLE"
     * @const
     */
    "DOUBLE": "DOUBLE"
};



export default Border;

