/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ChartHistogramRule model module.
 * @module model/ChartHistogramRule
 * @version v4
 */
class ChartHistogramRule {
    /**
     * Constructs a new <code>ChartHistogramRule</code>.
     * Allows you to organize numeric values in a source data column into buckets of constant size.
     * @alias module:model/ChartHistogramRule
     */
    constructor() { 
        
        ChartHistogramRule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChartHistogramRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChartHistogramRule} obj Optional instance to populate.
     * @return {module:model/ChartHistogramRule} The populated <code>ChartHistogramRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChartHistogramRule();

            if (data.hasOwnProperty('intervalSize')) {
                obj['intervalSize'] = ApiClient.convertToType(data['intervalSize'], 'Number');
            }
            if (data.hasOwnProperty('maxValue')) {
                obj['maxValue'] = ApiClient.convertToType(data['maxValue'], 'Number');
            }
            if (data.hasOwnProperty('minValue')) {
                obj['minValue'] = ApiClient.convertToType(data['minValue'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChartHistogramRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChartHistogramRule</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The size of the buckets that are created. Must be positive.
 * @member {Number} intervalSize
 */
ChartHistogramRule.prototype['intervalSize'] = undefined;

/**
 * The maximum value at which items are placed into buckets. Values greater than the maximum are grouped into a single bucket. If omitted, it is determined by the maximum item value.
 * @member {Number} maxValue
 */
ChartHistogramRule.prototype['maxValue'] = undefined;

/**
 * The minimum value at which items are placed into buckets. Values that are less than the minimum are grouped into a single bucket. If omitted, it is determined by the minimum item value.
 * @member {Number} minValue
 */
ChartHistogramRule.prototype['minValue'] = undefined;






export default ChartHistogramRule;

