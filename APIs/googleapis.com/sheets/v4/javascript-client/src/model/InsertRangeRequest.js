/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GridRange from './GridRange';

/**
 * The InsertRangeRequest model module.
 * @module model/InsertRangeRequest
 * @version v4
 */
class InsertRangeRequest {
    /**
     * Constructs a new <code>InsertRangeRequest</code>.
     * Inserts cells into a range, shifting the existing cells over or down.
     * @alias module:model/InsertRangeRequest
     */
    constructor() { 
        
        InsertRangeRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InsertRangeRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InsertRangeRequest} obj Optional instance to populate.
     * @return {module:model/InsertRangeRequest} The populated <code>InsertRangeRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InsertRangeRequest();

            if (data.hasOwnProperty('range')) {
                obj['range'] = GridRange.constructFromObject(data['range']);
            }
            if (data.hasOwnProperty('shiftDimension')) {
                obj['shiftDimension'] = ApiClient.convertToType(data['shiftDimension'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InsertRangeRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InsertRangeRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `range`
        if (data['range']) { // data not null
          GridRange.validateJSON(data['range']);
        }
        // ensure the json data is a string
        if (data['shiftDimension'] && !(typeof data['shiftDimension'] === 'string' || data['shiftDimension'] instanceof String)) {
            throw new Error("Expected the field `shiftDimension` to be a primitive type in the JSON string but got " + data['shiftDimension']);
        }

        return true;
    }


}



/**
 * @member {module:model/GridRange} range
 */
InsertRangeRequest.prototype['range'] = undefined;

/**
 * The dimension which will be shifted when inserting cells. If ROWS, existing cells will be shifted down. If COLUMNS, existing cells will be shifted right.
 * @member {module:model/InsertRangeRequest.ShiftDimensionEnum} shiftDimension
 */
InsertRangeRequest.prototype['shiftDimension'] = undefined;





/**
 * Allowed values for the <code>shiftDimension</code> property.
 * @enum {String}
 * @readonly
 */
InsertRangeRequest['ShiftDimensionEnum'] = {

    /**
     * value: "DIMENSION_UNSPECIFIED"
     * @const
     */
    "DIMENSION_UNSPECIFIED": "DIMENSION_UNSPECIFIED",

    /**
     * value: "ROWS"
     * @const
     */
    "ROWS": "ROWS",

    /**
     * value: "COLUMNS"
     * @const
     */
    "COLUMNS": "COLUMNS"
};



export default InsertRangeRequest;

