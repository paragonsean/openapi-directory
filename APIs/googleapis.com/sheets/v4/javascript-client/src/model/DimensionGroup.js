/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DimensionRange from './DimensionRange';

/**
 * The DimensionGroup model module.
 * @module model/DimensionGroup
 * @version v4
 */
class DimensionGroup {
    /**
     * Constructs a new <code>DimensionGroup</code>.
     * A group over an interval of rows or columns on a sheet, which can contain or be contained within other groups. A group can be collapsed or expanded as a unit on the sheet.
     * @alias module:model/DimensionGroup
     */
    constructor() { 
        
        DimensionGroup.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DimensionGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DimensionGroup} obj Optional instance to populate.
     * @return {module:model/DimensionGroup} The populated <code>DimensionGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DimensionGroup();

            if (data.hasOwnProperty('collapsed')) {
                obj['collapsed'] = ApiClient.convertToType(data['collapsed'], 'Boolean');
            }
            if (data.hasOwnProperty('depth')) {
                obj['depth'] = ApiClient.convertToType(data['depth'], 'Number');
            }
            if (data.hasOwnProperty('range')) {
                obj['range'] = DimensionRange.constructFromObject(data['range']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DimensionGroup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DimensionGroup</code>.
     */
    static validateJSON(data) {
        // validate the optional field `range`
        if (data['range']) { // data not null
          DimensionRange.validateJSON(data['range']);
        }

        return true;
    }


}



/**
 * This field is true if this group is collapsed. A collapsed group remains collapsed if an overlapping group at a shallower depth is expanded. A true value does not imply that all dimensions within the group are hidden, since a dimension's visibility can change independently from this group property. However, when this property is updated, all dimensions within it are set to hidden if this field is true, or set to visible if this field is false.
 * @member {Boolean} collapsed
 */
DimensionGroup.prototype['collapsed'] = undefined;

/**
 * The depth of the group, representing how many groups have a range that wholly contains the range of this group.
 * @member {Number} depth
 */
DimensionGroup.prototype['depth'] = undefined;

/**
 * @member {module:model/DimensionRange} range
 */
DimensionGroup.prototype['range'] = undefined;






export default DimensionGroup;

