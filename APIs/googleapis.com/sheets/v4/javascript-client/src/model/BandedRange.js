/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BandingProperties from './BandingProperties';
import GridRange from './GridRange';

/**
 * The BandedRange model module.
 * @module model/BandedRange
 * @version v4
 */
class BandedRange {
    /**
     * Constructs a new <code>BandedRange</code>.
     * A banded (alternating colors) range in a sheet.
     * @alias module:model/BandedRange
     */
    constructor() { 
        
        BandedRange.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BandedRange</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BandedRange} obj Optional instance to populate.
     * @return {module:model/BandedRange} The populated <code>BandedRange</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BandedRange();

            if (data.hasOwnProperty('bandedRangeId')) {
                obj['bandedRangeId'] = ApiClient.convertToType(data['bandedRangeId'], 'Number');
            }
            if (data.hasOwnProperty('columnProperties')) {
                obj['columnProperties'] = BandingProperties.constructFromObject(data['columnProperties']);
            }
            if (data.hasOwnProperty('range')) {
                obj['range'] = GridRange.constructFromObject(data['range']);
            }
            if (data.hasOwnProperty('rowProperties')) {
                obj['rowProperties'] = BandingProperties.constructFromObject(data['rowProperties']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BandedRange</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BandedRange</code>.
     */
    static validateJSON(data) {
        // validate the optional field `columnProperties`
        if (data['columnProperties']) { // data not null
          BandingProperties.validateJSON(data['columnProperties']);
        }
        // validate the optional field `range`
        if (data['range']) { // data not null
          GridRange.validateJSON(data['range']);
        }
        // validate the optional field `rowProperties`
        if (data['rowProperties']) { // data not null
          BandingProperties.validateJSON(data['rowProperties']);
        }

        return true;
    }


}



/**
 * The ID of the banded range.
 * @member {Number} bandedRangeId
 */
BandedRange.prototype['bandedRangeId'] = undefined;

/**
 * @member {module:model/BandingProperties} columnProperties
 */
BandedRange.prototype['columnProperties'] = undefined;

/**
 * @member {module:model/GridRange} range
 */
BandedRange.prototype['range'] = undefined;

/**
 * @member {module:model/BandingProperties} rowProperties
 */
BandedRange.prototype['rowProperties'] = undefined;






export default BandedRange;

