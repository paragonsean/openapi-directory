/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Color from './Color';
import ColorStyle from './ColorStyle';

/**
 * The BandingProperties model module.
 * @module model/BandingProperties
 * @version v4
 */
class BandingProperties {
    /**
     * Constructs a new <code>BandingProperties</code>.
     * Properties referring a single dimension (either row or column). If both BandedRange.row_properties and BandedRange.column_properties are set, the fill colors are applied to cells according to the following rules: * header_color and footer_color take priority over band colors. * first_band_color takes priority over second_band_color. * row_properties takes priority over column_properties. For example, the first row color takes priority over the first column color, but the first column color takes priority over the second row color. Similarly, the row header takes priority over the column header in the top left cell, but the column header takes priority over the first row color if the row header is not set.
     * @alias module:model/BandingProperties
     */
    constructor() { 
        
        BandingProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BandingProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BandingProperties} obj Optional instance to populate.
     * @return {module:model/BandingProperties} The populated <code>BandingProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BandingProperties();

            if (data.hasOwnProperty('firstBandColor')) {
                obj['firstBandColor'] = Color.constructFromObject(data['firstBandColor']);
            }
            if (data.hasOwnProperty('firstBandColorStyle')) {
                obj['firstBandColorStyle'] = ColorStyle.constructFromObject(data['firstBandColorStyle']);
            }
            if (data.hasOwnProperty('footerColor')) {
                obj['footerColor'] = Color.constructFromObject(data['footerColor']);
            }
            if (data.hasOwnProperty('footerColorStyle')) {
                obj['footerColorStyle'] = ColorStyle.constructFromObject(data['footerColorStyle']);
            }
            if (data.hasOwnProperty('headerColor')) {
                obj['headerColor'] = Color.constructFromObject(data['headerColor']);
            }
            if (data.hasOwnProperty('headerColorStyle')) {
                obj['headerColorStyle'] = ColorStyle.constructFromObject(data['headerColorStyle']);
            }
            if (data.hasOwnProperty('secondBandColor')) {
                obj['secondBandColor'] = Color.constructFromObject(data['secondBandColor']);
            }
            if (data.hasOwnProperty('secondBandColorStyle')) {
                obj['secondBandColorStyle'] = ColorStyle.constructFromObject(data['secondBandColorStyle']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BandingProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BandingProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `firstBandColor`
        if (data['firstBandColor']) { // data not null
          Color.validateJSON(data['firstBandColor']);
        }
        // validate the optional field `firstBandColorStyle`
        if (data['firstBandColorStyle']) { // data not null
          ColorStyle.validateJSON(data['firstBandColorStyle']);
        }
        // validate the optional field `footerColor`
        if (data['footerColor']) { // data not null
          Color.validateJSON(data['footerColor']);
        }
        // validate the optional field `footerColorStyle`
        if (data['footerColorStyle']) { // data not null
          ColorStyle.validateJSON(data['footerColorStyle']);
        }
        // validate the optional field `headerColor`
        if (data['headerColor']) { // data not null
          Color.validateJSON(data['headerColor']);
        }
        // validate the optional field `headerColorStyle`
        if (data['headerColorStyle']) { // data not null
          ColorStyle.validateJSON(data['headerColorStyle']);
        }
        // validate the optional field `secondBandColor`
        if (data['secondBandColor']) { // data not null
          Color.validateJSON(data['secondBandColor']);
        }
        // validate the optional field `secondBandColorStyle`
        if (data['secondBandColorStyle']) { // data not null
          ColorStyle.validateJSON(data['secondBandColorStyle']);
        }

        return true;
    }


}



/**
 * @member {module:model/Color} firstBandColor
 */
BandingProperties.prototype['firstBandColor'] = undefined;

/**
 * @member {module:model/ColorStyle} firstBandColorStyle
 */
BandingProperties.prototype['firstBandColorStyle'] = undefined;

/**
 * @member {module:model/Color} footerColor
 */
BandingProperties.prototype['footerColor'] = undefined;

/**
 * @member {module:model/ColorStyle} footerColorStyle
 */
BandingProperties.prototype['footerColorStyle'] = undefined;

/**
 * @member {module:model/Color} headerColor
 */
BandingProperties.prototype['headerColor'] = undefined;

/**
 * @member {module:model/ColorStyle} headerColorStyle
 */
BandingProperties.prototype['headerColorStyle'] = undefined;

/**
 * @member {module:model/Color} secondBandColor
 */
BandingProperties.prototype['secondBandColor'] = undefined;

/**
 * @member {module:model/ColorStyle} secondBandColorStyle
 */
BandingProperties.prototype['secondBandColorStyle'] = undefined;






export default BandingProperties;

