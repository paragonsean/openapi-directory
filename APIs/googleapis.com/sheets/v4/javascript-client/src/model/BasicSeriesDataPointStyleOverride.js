/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Color from './Color';
import ColorStyle from './ColorStyle';
import PointStyle from './PointStyle';

/**
 * The BasicSeriesDataPointStyleOverride model module.
 * @module model/BasicSeriesDataPointStyleOverride
 * @version v4
 */
class BasicSeriesDataPointStyleOverride {
    /**
     * Constructs a new <code>BasicSeriesDataPointStyleOverride</code>.
     * Style override settings for a single series data point.
     * @alias module:model/BasicSeriesDataPointStyleOverride
     */
    constructor() { 
        
        BasicSeriesDataPointStyleOverride.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BasicSeriesDataPointStyleOverride</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BasicSeriesDataPointStyleOverride} obj Optional instance to populate.
     * @return {module:model/BasicSeriesDataPointStyleOverride} The populated <code>BasicSeriesDataPointStyleOverride</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BasicSeriesDataPointStyleOverride();

            if (data.hasOwnProperty('color')) {
                obj['color'] = Color.constructFromObject(data['color']);
            }
            if (data.hasOwnProperty('colorStyle')) {
                obj['colorStyle'] = ColorStyle.constructFromObject(data['colorStyle']);
            }
            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'Number');
            }
            if (data.hasOwnProperty('pointStyle')) {
                obj['pointStyle'] = PointStyle.constructFromObject(data['pointStyle']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BasicSeriesDataPointStyleOverride</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BasicSeriesDataPointStyleOverride</code>.
     */
    static validateJSON(data) {
        // validate the optional field `color`
        if (data['color']) { // data not null
          Color.validateJSON(data['color']);
        }
        // validate the optional field `colorStyle`
        if (data['colorStyle']) { // data not null
          ColorStyle.validateJSON(data['colorStyle']);
        }
        // validate the optional field `pointStyle`
        if (data['pointStyle']) { // data not null
          PointStyle.validateJSON(data['pointStyle']);
        }

        return true;
    }


}



/**
 * @member {module:model/Color} color
 */
BasicSeriesDataPointStyleOverride.prototype['color'] = undefined;

/**
 * @member {module:model/ColorStyle} colorStyle
 */
BasicSeriesDataPointStyleOverride.prototype['colorStyle'] = undefined;

/**
 * The zero-based index of the series data point.
 * @member {Number} index
 */
BasicSeriesDataPointStyleOverride.prototype['index'] = undefined;

/**
 * @member {module:model/PointStyle} pointStyle
 */
BasicSeriesDataPointStyleOverride.prototype['pointStyle'] = undefined;






export default BasicSeriesDataPointStyleOverride;

