/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Editors model module.
 * @module model/Editors
 * @version v4
 */
class Editors {
    /**
     * Constructs a new <code>Editors</code>.
     * The editors of a protected range.
     * @alias module:model/Editors
     */
    constructor() { 
        
        Editors.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Editors</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Editors} obj Optional instance to populate.
     * @return {module:model/Editors} The populated <code>Editors</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Editors();

            if (data.hasOwnProperty('domainUsersCanEdit')) {
                obj['domainUsersCanEdit'] = ApiClient.convertToType(data['domainUsersCanEdit'], 'Boolean');
            }
            if (data.hasOwnProperty('groups')) {
                obj['groups'] = ApiClient.convertToType(data['groups'], ['String']);
            }
            if (data.hasOwnProperty('users')) {
                obj['users'] = ApiClient.convertToType(data['users'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Editors</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Editors</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['groups'])) {
            throw new Error("Expected the field `groups` to be an array in the JSON data but got " + data['groups']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['users'])) {
            throw new Error("Expected the field `users` to be an array in the JSON data but got " + data['users']);
        }

        return true;
    }


}



/**
 * True if anyone in the document's domain has edit access to the protected range. Domain protection is only supported on documents within a domain.
 * @member {Boolean} domainUsersCanEdit
 */
Editors.prototype['domainUsersCanEdit'] = undefined;

/**
 * The email addresses of groups with edit access to the protected range.
 * @member {Array.<String>} groups
 */
Editors.prototype['groups'] = undefined;

/**
 * The email addresses of users with edit access to the protected range.
 * @member {Array.<String>} users
 */
Editors.prototype['users'] = undefined;






export default Editors;

