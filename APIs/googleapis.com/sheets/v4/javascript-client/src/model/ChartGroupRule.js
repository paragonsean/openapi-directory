/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChartDateTimeRule from './ChartDateTimeRule';
import ChartHistogramRule from './ChartHistogramRule';

/**
 * The ChartGroupRule model module.
 * @module model/ChartGroupRule
 * @version v4
 */
class ChartGroupRule {
    /**
     * Constructs a new <code>ChartGroupRule</code>.
     * An optional setting on the ChartData of the domain of a data source chart that defines buckets for the values in the domain rather than breaking out each individual value. For example, when plotting a data source chart, you can specify a histogram rule on the domain (it should only contain numeric values), grouping its values into buckets. Any values of a chart series that fall into the same bucket are aggregated based on the aggregate_type.
     * @alias module:model/ChartGroupRule
     */
    constructor() { 
        
        ChartGroupRule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChartGroupRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChartGroupRule} obj Optional instance to populate.
     * @return {module:model/ChartGroupRule} The populated <code>ChartGroupRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChartGroupRule();

            if (data.hasOwnProperty('dateTimeRule')) {
                obj['dateTimeRule'] = ChartDateTimeRule.constructFromObject(data['dateTimeRule']);
            }
            if (data.hasOwnProperty('histogramRule')) {
                obj['histogramRule'] = ChartHistogramRule.constructFromObject(data['histogramRule']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChartGroupRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChartGroupRule</code>.
     */
    static validateJSON(data) {
        // validate the optional field `dateTimeRule`
        if (data['dateTimeRule']) { // data not null
          ChartDateTimeRule.validateJSON(data['dateTimeRule']);
        }
        // validate the optional field `histogramRule`
        if (data['histogramRule']) { // data not null
          ChartHistogramRule.validateJSON(data['histogramRule']);
        }

        return true;
    }


}



/**
 * @member {module:model/ChartDateTimeRule} dateTimeRule
 */
ChartGroupRule.prototype['dateTimeRule'] = undefined;

/**
 * @member {module:model/ChartHistogramRule} histogramRule
 */
ChartGroupRule.prototype['histogramRule'] = undefined;






export default ChartGroupRule;

