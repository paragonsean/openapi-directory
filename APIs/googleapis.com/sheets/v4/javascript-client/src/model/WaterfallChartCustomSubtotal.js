/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WaterfallChartCustomSubtotal model module.
 * @module model/WaterfallChartCustomSubtotal
 * @version v4
 */
class WaterfallChartCustomSubtotal {
    /**
     * Constructs a new <code>WaterfallChartCustomSubtotal</code>.
     * A custom subtotal column for a waterfall chart series.
     * @alias module:model/WaterfallChartCustomSubtotal
     */
    constructor() { 
        
        WaterfallChartCustomSubtotal.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WaterfallChartCustomSubtotal</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WaterfallChartCustomSubtotal} obj Optional instance to populate.
     * @return {module:model/WaterfallChartCustomSubtotal} The populated <code>WaterfallChartCustomSubtotal</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WaterfallChartCustomSubtotal();

            if (data.hasOwnProperty('dataIsSubtotal')) {
                obj['dataIsSubtotal'] = ApiClient.convertToType(data['dataIsSubtotal'], 'Boolean');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('subtotalIndex')) {
                obj['subtotalIndex'] = ApiClient.convertToType(data['subtotalIndex'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WaterfallChartCustomSubtotal</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WaterfallChartCustomSubtotal</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }

        return true;
    }


}



/**
 * True if the data point at subtotal_index is the subtotal. If false, the subtotal will be computed and appear after the data point.
 * @member {Boolean} dataIsSubtotal
 */
WaterfallChartCustomSubtotal.prototype['dataIsSubtotal'] = undefined;

/**
 * A label for the subtotal column.
 * @member {String} label
 */
WaterfallChartCustomSubtotal.prototype['label'] = undefined;

/**
 * The zero-based index of a data point within the series. If data_is_subtotal is true, the data point at this index is the subtotal. Otherwise, the subtotal appears after the data point with this index. A series can have multiple subtotals at arbitrary indices, but subtotals do not affect the indices of the data points. For example, if a series has three data points, their indices will always be 0, 1, and 2, regardless of how many subtotals exist on the series or what data points they are associated with.
 * @member {Number} subtotalIndex
 */
WaterfallChartCustomSubtotal.prototype['subtotalIndex'] = undefined;






export default WaterfallChartCustomSubtotal;

