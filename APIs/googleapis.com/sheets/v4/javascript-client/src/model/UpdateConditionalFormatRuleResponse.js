/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConditionalFormatRule from './ConditionalFormatRule';

/**
 * The UpdateConditionalFormatRuleResponse model module.
 * @module model/UpdateConditionalFormatRuleResponse
 * @version v4
 */
class UpdateConditionalFormatRuleResponse {
    /**
     * Constructs a new <code>UpdateConditionalFormatRuleResponse</code>.
     * The result of updating a conditional format rule.
     * @alias module:model/UpdateConditionalFormatRuleResponse
     */
    constructor() { 
        
        UpdateConditionalFormatRuleResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateConditionalFormatRuleResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateConditionalFormatRuleResponse} obj Optional instance to populate.
     * @return {module:model/UpdateConditionalFormatRuleResponse} The populated <code>UpdateConditionalFormatRuleResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateConditionalFormatRuleResponse();

            if (data.hasOwnProperty('newIndex')) {
                obj['newIndex'] = ApiClient.convertToType(data['newIndex'], 'Number');
            }
            if (data.hasOwnProperty('newRule')) {
                obj['newRule'] = ConditionalFormatRule.constructFromObject(data['newRule']);
            }
            if (data.hasOwnProperty('oldIndex')) {
                obj['oldIndex'] = ApiClient.convertToType(data['oldIndex'], 'Number');
            }
            if (data.hasOwnProperty('oldRule')) {
                obj['oldRule'] = ConditionalFormatRule.constructFromObject(data['oldRule']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateConditionalFormatRuleResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateConditionalFormatRuleResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `newRule`
        if (data['newRule']) { // data not null
          ConditionalFormatRule.validateJSON(data['newRule']);
        }
        // validate the optional field `oldRule`
        if (data['oldRule']) { // data not null
          ConditionalFormatRule.validateJSON(data['oldRule']);
        }

        return true;
    }


}



/**
 * The index of the new rule.
 * @member {Number} newIndex
 */
UpdateConditionalFormatRuleResponse.prototype['newIndex'] = undefined;

/**
 * @member {module:model/ConditionalFormatRule} newRule
 */
UpdateConditionalFormatRuleResponse.prototype['newRule'] = undefined;

/**
 * The old index of the rule. Not set if a rule was replaced (because it is the same as new_index).
 * @member {Number} oldIndex
 */
UpdateConditionalFormatRuleResponse.prototype['oldIndex'] = undefined;

/**
 * @member {module:model/ConditionalFormatRule} oldRule
 */
UpdateConditionalFormatRuleResponse.prototype['oldRule'] = undefined;






export default UpdateConditionalFormatRuleResponse;

