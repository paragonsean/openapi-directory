/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BooleanCondition from './BooleanCondition';

/**
 * The PivotFilterCriteria model module.
 * @module model/PivotFilterCriteria
 * @version v4
 */
class PivotFilterCriteria {
    /**
     * Constructs a new <code>PivotFilterCriteria</code>.
     * Criteria for showing/hiding rows in a pivot table.
     * @alias module:model/PivotFilterCriteria
     */
    constructor() { 
        
        PivotFilterCriteria.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PivotFilterCriteria</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PivotFilterCriteria} obj Optional instance to populate.
     * @return {module:model/PivotFilterCriteria} The populated <code>PivotFilterCriteria</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PivotFilterCriteria();

            if (data.hasOwnProperty('condition')) {
                obj['condition'] = BooleanCondition.constructFromObject(data['condition']);
            }
            if (data.hasOwnProperty('visibleByDefault')) {
                obj['visibleByDefault'] = ApiClient.convertToType(data['visibleByDefault'], 'Boolean');
            }
            if (data.hasOwnProperty('visibleValues')) {
                obj['visibleValues'] = ApiClient.convertToType(data['visibleValues'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PivotFilterCriteria</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PivotFilterCriteria</code>.
     */
    static validateJSON(data) {
        // validate the optional field `condition`
        if (data['condition']) { // data not null
          BooleanCondition.validateJSON(data['condition']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['visibleValues'])) {
            throw new Error("Expected the field `visibleValues` to be an array in the JSON data but got " + data['visibleValues']);
        }

        return true;
    }


}



/**
 * @member {module:model/BooleanCondition} condition
 */
PivotFilterCriteria.prototype['condition'] = undefined;

/**
 * Whether values are visible by default. If true, the visible_values are ignored, all values that meet condition (if specified) are shown. If false, values that are both in visible_values and meet condition are shown.
 * @member {Boolean} visibleByDefault
 */
PivotFilterCriteria.prototype['visibleByDefault'] = undefined;

/**
 * Values that should be included. Values not listed here are excluded.
 * @member {Array.<String>} visibleValues
 */
PivotFilterCriteria.prototype['visibleValues'] = undefined;






export default PivotFilterCriteria;

