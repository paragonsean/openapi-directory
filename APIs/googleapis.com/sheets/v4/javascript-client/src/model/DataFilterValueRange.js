/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DataFilter from './DataFilter';

/**
 * The DataFilterValueRange model module.
 * @module model/DataFilterValueRange
 * @version v4
 */
class DataFilterValueRange {
    /**
     * Constructs a new <code>DataFilterValueRange</code>.
     * A range of values whose location is specified by a DataFilter.
     * @alias module:model/DataFilterValueRange
     */
    constructor() { 
        
        DataFilterValueRange.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DataFilterValueRange</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataFilterValueRange} obj Optional instance to populate.
     * @return {module:model/DataFilterValueRange} The populated <code>DataFilterValueRange</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataFilterValueRange();

            if (data.hasOwnProperty('dataFilter')) {
                obj['dataFilter'] = DataFilter.constructFromObject(data['dataFilter']);
            }
            if (data.hasOwnProperty('majorDimension')) {
                obj['majorDimension'] = ApiClient.convertToType(data['majorDimension'], 'String');
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], [[Object]]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataFilterValueRange</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataFilterValueRange</code>.
     */
    static validateJSON(data) {
        // validate the optional field `dataFilter`
        if (data['dataFilter']) { // data not null
          DataFilter.validateJSON(data['dataFilter']);
        }
        // ensure the json data is a string
        if (data['majorDimension'] && !(typeof data['majorDimension'] === 'string' || data['majorDimension'] instanceof String)) {
            throw new Error("Expected the field `majorDimension` to be a primitive type in the JSON string but got " + data['majorDimension']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['values'])) {
            throw new Error("Expected the field `values` to be an array in the JSON data but got " + data['values']);
        }

        return true;
    }


}



/**
 * @member {module:model/DataFilter} dataFilter
 */
DataFilterValueRange.prototype['dataFilter'] = undefined;

/**
 * The major dimension of the values.
 * @member {module:model/DataFilterValueRange.MajorDimensionEnum} majorDimension
 */
DataFilterValueRange.prototype['majorDimension'] = undefined;

/**
 * The data to be written. If the provided values exceed any of the ranges matched by the data filter then the request fails. If the provided values are less than the matched ranges only the specified values are written, existing values in the matched ranges remain unaffected.
 * @member {Array.<Array.<Object>>} values
 */
DataFilterValueRange.prototype['values'] = undefined;





/**
 * Allowed values for the <code>majorDimension</code> property.
 * @enum {String}
 * @readonly
 */
DataFilterValueRange['MajorDimensionEnum'] = {

    /**
     * value: "DIMENSION_UNSPECIFIED"
     * @const
     */
    "DIMENSION_UNSPECIFIED": "DIMENSION_UNSPECIFIED",

    /**
     * value: "ROWS"
     * @const
     */
    "ROWS": "ROWS",

    /**
     * value: "COLUMNS"
     * @const
     */
    "COLUMNS": "COLUMNS"
};



export default DataFilterValueRange;

