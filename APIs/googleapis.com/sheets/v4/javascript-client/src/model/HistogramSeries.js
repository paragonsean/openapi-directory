/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChartData from './ChartData';
import Color from './Color';
import ColorStyle from './ColorStyle';

/**
 * The HistogramSeries model module.
 * @module model/HistogramSeries
 * @version v4
 */
class HistogramSeries {
    /**
     * Constructs a new <code>HistogramSeries</code>.
     * A histogram series containing the series color and data.
     * @alias module:model/HistogramSeries
     */
    constructor() { 
        
        HistogramSeries.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HistogramSeries</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HistogramSeries} obj Optional instance to populate.
     * @return {module:model/HistogramSeries} The populated <code>HistogramSeries</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HistogramSeries();

            if (data.hasOwnProperty('barColor')) {
                obj['barColor'] = Color.constructFromObject(data['barColor']);
            }
            if (data.hasOwnProperty('barColorStyle')) {
                obj['barColorStyle'] = ColorStyle.constructFromObject(data['barColorStyle']);
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ChartData.constructFromObject(data['data']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HistogramSeries</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HistogramSeries</code>.
     */
    static validateJSON(data) {
        // validate the optional field `barColor`
        if (data['barColor']) { // data not null
          Color.validateJSON(data['barColor']);
        }
        // validate the optional field `barColorStyle`
        if (data['barColorStyle']) { // data not null
          ColorStyle.validateJSON(data['barColorStyle']);
        }
        // validate the optional field `data`
        if (data['data']) { // data not null
          ChartData.validateJSON(data['data']);
        }

        return true;
    }


}



/**
 * @member {module:model/Color} barColor
 */
HistogramSeries.prototype['barColor'] = undefined;

/**
 * @member {module:model/ColorStyle} barColorStyle
 */
HistogramSeries.prototype['barColorStyle'] = undefined;

/**
 * @member {module:model/ChartData} data
 */
HistogramSeries.prototype['data'] = undefined;






export default HistogramSeries;

