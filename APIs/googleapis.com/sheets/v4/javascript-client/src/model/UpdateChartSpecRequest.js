/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChartSpec from './ChartSpec';

/**
 * The UpdateChartSpecRequest model module.
 * @module model/UpdateChartSpecRequest
 * @version v4
 */
class UpdateChartSpecRequest {
    /**
     * Constructs a new <code>UpdateChartSpecRequest</code>.
     * Updates a chart&#39;s specifications. (This does not move or resize a chart. To move or resize a chart, use UpdateEmbeddedObjectPositionRequest.)
     * @alias module:model/UpdateChartSpecRequest
     */
    constructor() { 
        
        UpdateChartSpecRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateChartSpecRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateChartSpecRequest} obj Optional instance to populate.
     * @return {module:model/UpdateChartSpecRequest} The populated <code>UpdateChartSpecRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateChartSpecRequest();

            if (data.hasOwnProperty('chartId')) {
                obj['chartId'] = ApiClient.convertToType(data['chartId'], 'Number');
            }
            if (data.hasOwnProperty('spec')) {
                obj['spec'] = ChartSpec.constructFromObject(data['spec']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateChartSpecRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateChartSpecRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `spec`
        if (data['spec']) { // data not null
          ChartSpec.validateJSON(data['spec']);
        }

        return true;
    }


}



/**
 * The ID of the chart to update.
 * @member {Number} chartId
 */
UpdateChartSpecRequest.prototype['chartId'] = undefined;

/**
 * @member {module:model/ChartSpec} spec
 */
UpdateChartSpecRequest.prototype['spec'] = undefined;






export default UpdateChartSpecRequest;

