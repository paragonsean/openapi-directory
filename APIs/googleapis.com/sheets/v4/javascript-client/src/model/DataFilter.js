/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DeveloperMetadataLookup from './DeveloperMetadataLookup';
import GridRange from './GridRange';

/**
 * The DataFilter model module.
 * @module model/DataFilter
 * @version v4
 */
class DataFilter {
    /**
     * Constructs a new <code>DataFilter</code>.
     * Filter that describes what data should be selected or returned from a request.
     * @alias module:model/DataFilter
     */
    constructor() { 
        
        DataFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DataFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataFilter} obj Optional instance to populate.
     * @return {module:model/DataFilter} The populated <code>DataFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataFilter();

            if (data.hasOwnProperty('a1Range')) {
                obj['a1Range'] = ApiClient.convertToType(data['a1Range'], 'String');
            }
            if (data.hasOwnProperty('developerMetadataLookup')) {
                obj['developerMetadataLookup'] = DeveloperMetadataLookup.constructFromObject(data['developerMetadataLookup']);
            }
            if (data.hasOwnProperty('gridRange')) {
                obj['gridRange'] = GridRange.constructFromObject(data['gridRange']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataFilter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['a1Range'] && !(typeof data['a1Range'] === 'string' || data['a1Range'] instanceof String)) {
            throw new Error("Expected the field `a1Range` to be a primitive type in the JSON string but got " + data['a1Range']);
        }
        // validate the optional field `developerMetadataLookup`
        if (data['developerMetadataLookup']) { // data not null
          DeveloperMetadataLookup.validateJSON(data['developerMetadataLookup']);
        }
        // validate the optional field `gridRange`
        if (data['gridRange']) { // data not null
          GridRange.validateJSON(data['gridRange']);
        }

        return true;
    }


}



/**
 * Selects data that matches the specified A1 range.
 * @member {String} a1Range
 */
DataFilter.prototype['a1Range'] = undefined;

/**
 * @member {module:model/DeveloperMetadataLookup} developerMetadataLookup
 */
DataFilter.prototype['developerMetadataLookup'] = undefined;

/**
 * @member {module:model/GridRange} gridRange
 */
DataFilter.prototype['gridRange'] = undefined;






export default DataFilter;

