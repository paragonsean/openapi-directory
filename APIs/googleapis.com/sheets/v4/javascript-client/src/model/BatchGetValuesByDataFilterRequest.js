/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DataFilter from './DataFilter';

/**
 * The BatchGetValuesByDataFilterRequest model module.
 * @module model/BatchGetValuesByDataFilterRequest
 * @version v4
 */
class BatchGetValuesByDataFilterRequest {
    /**
     * Constructs a new <code>BatchGetValuesByDataFilterRequest</code>.
     * The request for retrieving a range of values in a spreadsheet selected by a set of DataFilters.
     * @alias module:model/BatchGetValuesByDataFilterRequest
     */
    constructor() { 
        
        BatchGetValuesByDataFilterRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BatchGetValuesByDataFilterRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchGetValuesByDataFilterRequest} obj Optional instance to populate.
     * @return {module:model/BatchGetValuesByDataFilterRequest} The populated <code>BatchGetValuesByDataFilterRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchGetValuesByDataFilterRequest();

            if (data.hasOwnProperty('dataFilters')) {
                obj['dataFilters'] = ApiClient.convertToType(data['dataFilters'], [DataFilter]);
            }
            if (data.hasOwnProperty('dateTimeRenderOption')) {
                obj['dateTimeRenderOption'] = ApiClient.convertToType(data['dateTimeRenderOption'], 'String');
            }
            if (data.hasOwnProperty('majorDimension')) {
                obj['majorDimension'] = ApiClient.convertToType(data['majorDimension'], 'String');
            }
            if (data.hasOwnProperty('valueRenderOption')) {
                obj['valueRenderOption'] = ApiClient.convertToType(data['valueRenderOption'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchGetValuesByDataFilterRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchGetValuesByDataFilterRequest</code>.
     */
    static validateJSON(data) {
        if (data['dataFilters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['dataFilters'])) {
                throw new Error("Expected the field `dataFilters` to be an array in the JSON data but got " + data['dataFilters']);
            }
            // validate the optional field `dataFilters` (array)
            for (const item of data['dataFilters']) {
                DataFilter.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['dateTimeRenderOption'] && !(typeof data['dateTimeRenderOption'] === 'string' || data['dateTimeRenderOption'] instanceof String)) {
            throw new Error("Expected the field `dateTimeRenderOption` to be a primitive type in the JSON string but got " + data['dateTimeRenderOption']);
        }
        // ensure the json data is a string
        if (data['majorDimension'] && !(typeof data['majorDimension'] === 'string' || data['majorDimension'] instanceof String)) {
            throw new Error("Expected the field `majorDimension` to be a primitive type in the JSON string but got " + data['majorDimension']);
        }
        // ensure the json data is a string
        if (data['valueRenderOption'] && !(typeof data['valueRenderOption'] === 'string' || data['valueRenderOption'] instanceof String)) {
            throw new Error("Expected the field `valueRenderOption` to be a primitive type in the JSON string but got " + data['valueRenderOption']);
        }

        return true;
    }


}



/**
 * The data filters used to match the ranges of values to retrieve. Ranges that match any of the specified data filters are included in the response.
 * @member {Array.<module:model/DataFilter>} dataFilters
 */
BatchGetValuesByDataFilterRequest.prototype['dataFilters'] = undefined;

/**
 * How dates, times, and durations should be represented in the output. This is ignored if value_render_option is FORMATTED_VALUE. The default dateTime render option is SERIAL_NUMBER.
 * @member {module:model/BatchGetValuesByDataFilterRequest.DateTimeRenderOptionEnum} dateTimeRenderOption
 */
BatchGetValuesByDataFilterRequest.prototype['dateTimeRenderOption'] = undefined;

/**
 * The major dimension that results should use. For example, if the spreadsheet data is: `A1=1,B1=2,A2=3,B2=4`, then a request that selects that range and sets `majorDimension=ROWS` returns `[[1,2],[3,4]]`, whereas a request that sets `majorDimension=COLUMNS` returns `[[1,3],[2,4]]`.
 * @member {module:model/BatchGetValuesByDataFilterRequest.MajorDimensionEnum} majorDimension
 */
BatchGetValuesByDataFilterRequest.prototype['majorDimension'] = undefined;

/**
 * How values should be represented in the output. The default render option is FORMATTED_VALUE.
 * @member {module:model/BatchGetValuesByDataFilterRequest.ValueRenderOptionEnum} valueRenderOption
 */
BatchGetValuesByDataFilterRequest.prototype['valueRenderOption'] = undefined;





/**
 * Allowed values for the <code>dateTimeRenderOption</code> property.
 * @enum {String}
 * @readonly
 */
BatchGetValuesByDataFilterRequest['DateTimeRenderOptionEnum'] = {

    /**
     * value: "SERIAL_NUMBER"
     * @const
     */
    "SERIAL_NUMBER": "SERIAL_NUMBER",

    /**
     * value: "FORMATTED_STRING"
     * @const
     */
    "FORMATTED_STRING": "FORMATTED_STRING"
};


/**
 * Allowed values for the <code>majorDimension</code> property.
 * @enum {String}
 * @readonly
 */
BatchGetValuesByDataFilterRequest['MajorDimensionEnum'] = {

    /**
     * value: "DIMENSION_UNSPECIFIED"
     * @const
     */
    "DIMENSION_UNSPECIFIED": "DIMENSION_UNSPECIFIED",

    /**
     * value: "ROWS"
     * @const
     */
    "ROWS": "ROWS",

    /**
     * value: "COLUMNS"
     * @const
     */
    "COLUMNS": "COLUMNS"
};


/**
 * Allowed values for the <code>valueRenderOption</code> property.
 * @enum {String}
 * @readonly
 */
BatchGetValuesByDataFilterRequest['ValueRenderOptionEnum'] = {

    /**
     * value: "FORMATTED_VALUE"
     * @const
     */
    "FORMATTED_VALUE": "FORMATTED_VALUE",

    /**
     * value: "UNFORMATTED_VALUE"
     * @const
     */
    "UNFORMATTED_VALUE": "UNFORMATTED_VALUE",

    /**
     * value: "FORMULA"
     * @const
     */
    "FORMULA": "FORMULA"
};



export default BatchGetValuesByDataFilterRequest;

