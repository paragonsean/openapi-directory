/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConditionalFormatRule from './ConditionalFormatRule';

/**
 * The UpdateConditionalFormatRuleRequest model module.
 * @module model/UpdateConditionalFormatRuleRequest
 * @version v4
 */
class UpdateConditionalFormatRuleRequest {
    /**
     * Constructs a new <code>UpdateConditionalFormatRuleRequest</code>.
     * Updates a conditional format rule at the given index, or moves a conditional format rule to another index.
     * @alias module:model/UpdateConditionalFormatRuleRequest
     */
    constructor() { 
        
        UpdateConditionalFormatRuleRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateConditionalFormatRuleRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateConditionalFormatRuleRequest} obj Optional instance to populate.
     * @return {module:model/UpdateConditionalFormatRuleRequest} The populated <code>UpdateConditionalFormatRuleRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateConditionalFormatRuleRequest();

            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'Number');
            }
            if (data.hasOwnProperty('newIndex')) {
                obj['newIndex'] = ApiClient.convertToType(data['newIndex'], 'Number');
            }
            if (data.hasOwnProperty('rule')) {
                obj['rule'] = ConditionalFormatRule.constructFromObject(data['rule']);
            }
            if (data.hasOwnProperty('sheetId')) {
                obj['sheetId'] = ApiClient.convertToType(data['sheetId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateConditionalFormatRuleRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateConditionalFormatRuleRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `rule`
        if (data['rule']) { // data not null
          ConditionalFormatRule.validateJSON(data['rule']);
        }

        return true;
    }


}



/**
 * The zero-based index of the rule that should be replaced or moved.
 * @member {Number} index
 */
UpdateConditionalFormatRuleRequest.prototype['index'] = undefined;

/**
 * The zero-based new index the rule should end up at.
 * @member {Number} newIndex
 */
UpdateConditionalFormatRuleRequest.prototype['newIndex'] = undefined;

/**
 * @member {module:model/ConditionalFormatRule} rule
 */
UpdateConditionalFormatRuleRequest.prototype['rule'] = undefined;

/**
 * The sheet of the rule to move. Required if new_index is set, unused otherwise.
 * @member {Number} sheetId
 */
UpdateConditionalFormatRuleRequest.prototype['sheetId'] = undefined;






export default UpdateConditionalFormatRuleRequest;

