/**
 * Google Sheets API
 * Reads and writes Google Sheets.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateValuesResponse from './UpdateValuesResponse';

/**
 * The BatchUpdateValuesResponse model module.
 * @module model/BatchUpdateValuesResponse
 * @version v4
 */
class BatchUpdateValuesResponse {
    /**
     * Constructs a new <code>BatchUpdateValuesResponse</code>.
     * The response when updating a range of values in a spreadsheet.
     * @alias module:model/BatchUpdateValuesResponse
     */
    constructor() { 
        
        BatchUpdateValuesResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BatchUpdateValuesResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchUpdateValuesResponse} obj Optional instance to populate.
     * @return {module:model/BatchUpdateValuesResponse} The populated <code>BatchUpdateValuesResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchUpdateValuesResponse();

            if (data.hasOwnProperty('responses')) {
                obj['responses'] = ApiClient.convertToType(data['responses'], [UpdateValuesResponse]);
            }
            if (data.hasOwnProperty('spreadsheetId')) {
                obj['spreadsheetId'] = ApiClient.convertToType(data['spreadsheetId'], 'String');
            }
            if (data.hasOwnProperty('totalUpdatedCells')) {
                obj['totalUpdatedCells'] = ApiClient.convertToType(data['totalUpdatedCells'], 'Number');
            }
            if (data.hasOwnProperty('totalUpdatedColumns')) {
                obj['totalUpdatedColumns'] = ApiClient.convertToType(data['totalUpdatedColumns'], 'Number');
            }
            if (data.hasOwnProperty('totalUpdatedRows')) {
                obj['totalUpdatedRows'] = ApiClient.convertToType(data['totalUpdatedRows'], 'Number');
            }
            if (data.hasOwnProperty('totalUpdatedSheets')) {
                obj['totalUpdatedSheets'] = ApiClient.convertToType(data['totalUpdatedSheets'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchUpdateValuesResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchUpdateValuesResponse</code>.
     */
    static validateJSON(data) {
        if (data['responses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['responses'])) {
                throw new Error("Expected the field `responses` to be an array in the JSON data but got " + data['responses']);
            }
            // validate the optional field `responses` (array)
            for (const item of data['responses']) {
                UpdateValuesResponse.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['spreadsheetId'] && !(typeof data['spreadsheetId'] === 'string' || data['spreadsheetId'] instanceof String)) {
            throw new Error("Expected the field `spreadsheetId` to be a primitive type in the JSON string but got " + data['spreadsheetId']);
        }

        return true;
    }


}



/**
 * One UpdateValuesResponse per requested range, in the same order as the requests appeared.
 * @member {Array.<module:model/UpdateValuesResponse>} responses
 */
BatchUpdateValuesResponse.prototype['responses'] = undefined;

/**
 * The spreadsheet the updates were applied to.
 * @member {String} spreadsheetId
 */
BatchUpdateValuesResponse.prototype['spreadsheetId'] = undefined;

/**
 * The total number of cells updated.
 * @member {Number} totalUpdatedCells
 */
BatchUpdateValuesResponse.prototype['totalUpdatedCells'] = undefined;

/**
 * The total number of columns where at least one cell in the column was updated.
 * @member {Number} totalUpdatedColumns
 */
BatchUpdateValuesResponse.prototype['totalUpdatedColumns'] = undefined;

/**
 * The total number of rows where at least one cell in the row was updated.
 * @member {Number} totalUpdatedRows
 */
BatchUpdateValuesResponse.prototype['totalUpdatedRows'] = undefined;

/**
 * The total number of sheets where at least one cell in the sheet was updated.
 * @member {Number} totalUpdatedSheets
 */
BatchUpdateValuesResponse.prototype['totalUpdatedSheets'] = undefined;






export default BatchUpdateValuesResponse;

