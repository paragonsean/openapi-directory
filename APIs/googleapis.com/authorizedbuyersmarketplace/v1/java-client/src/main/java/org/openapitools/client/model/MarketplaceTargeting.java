/*
 * Authorized Buyers Marketplace API
 * The Authorized Buyers Marketplace API lets buyers programmatically discover inventory; propose, retrieve and negotiate deals with publishers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CriteriaTargeting;
import org.openapitools.client.model.DayPartTargeting;
import org.openapitools.client.model.InventorySizeTargeting;
import org.openapitools.client.model.InventoryTypeTargeting;
import org.openapitools.client.model.PlacementTargeting;
import org.openapitools.client.model.TechnologyTargeting;
import org.openapitools.client.model.VideoTargeting;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Targeting represents different criteria that can be used to target inventory. For example, they can choose to target inventory only if the user is in the US. Multiple types of targeting are always applied as a logical AND, unless noted otherwise.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:31:11.931533-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MarketplaceTargeting {
  public static final String SERIALIZED_NAME_DAYPART_TARGETING = "daypartTargeting";
  @SerializedName(SERIALIZED_NAME_DAYPART_TARGETING)
  private DayPartTargeting daypartTargeting;

  public static final String SERIALIZED_NAME_GEO_TARGETING = "geoTargeting";
  @SerializedName(SERIALIZED_NAME_GEO_TARGETING)
  private CriteriaTargeting geoTargeting;

  public static final String SERIALIZED_NAME_INVENTORY_SIZE_TARGETING = "inventorySizeTargeting";
  @SerializedName(SERIALIZED_NAME_INVENTORY_SIZE_TARGETING)
  private InventorySizeTargeting inventorySizeTargeting;

  public static final String SERIALIZED_NAME_INVENTORY_TYPE_TARGETING = "inventoryTypeTargeting";
  @SerializedName(SERIALIZED_NAME_INVENTORY_TYPE_TARGETING)
  private InventoryTypeTargeting inventoryTypeTargeting;

  public static final String SERIALIZED_NAME_PLACEMENT_TARGETING = "placementTargeting";
  @SerializedName(SERIALIZED_NAME_PLACEMENT_TARGETING)
  private PlacementTargeting placementTargeting;

  public static final String SERIALIZED_NAME_TECHNOLOGY_TARGETING = "technologyTargeting";
  @SerializedName(SERIALIZED_NAME_TECHNOLOGY_TARGETING)
  private TechnologyTargeting technologyTargeting;

  public static final String SERIALIZED_NAME_USER_LIST_TARGETING = "userListTargeting";
  @SerializedName(SERIALIZED_NAME_USER_LIST_TARGETING)
  private CriteriaTargeting userListTargeting;

  public static final String SERIALIZED_NAME_VIDEO_TARGETING = "videoTargeting";
  @SerializedName(SERIALIZED_NAME_VIDEO_TARGETING)
  private VideoTargeting videoTargeting;

  public MarketplaceTargeting() {
  }

  public MarketplaceTargeting daypartTargeting(DayPartTargeting daypartTargeting) {
    this.daypartTargeting = daypartTargeting;
    return this;
  }

  /**
   * Get daypartTargeting
   * @return daypartTargeting
   */
  @javax.annotation.Nullable
  public DayPartTargeting getDaypartTargeting() {
    return daypartTargeting;
  }

  public void setDaypartTargeting(DayPartTargeting daypartTargeting) {
    this.daypartTargeting = daypartTargeting;
  }


  public MarketplaceTargeting geoTargeting(CriteriaTargeting geoTargeting) {
    this.geoTargeting = geoTargeting;
    return this;
  }

  /**
   * Get geoTargeting
   * @return geoTargeting
   */
  @javax.annotation.Nullable
  public CriteriaTargeting getGeoTargeting() {
    return geoTargeting;
  }

  public void setGeoTargeting(CriteriaTargeting geoTargeting) {
    this.geoTargeting = geoTargeting;
  }


  public MarketplaceTargeting inventorySizeTargeting(InventorySizeTargeting inventorySizeTargeting) {
    this.inventorySizeTargeting = inventorySizeTargeting;
    return this;
  }

  /**
   * Get inventorySizeTargeting
   * @return inventorySizeTargeting
   */
  @javax.annotation.Nullable
  public InventorySizeTargeting getInventorySizeTargeting() {
    return inventorySizeTargeting;
  }

  public void setInventorySizeTargeting(InventorySizeTargeting inventorySizeTargeting) {
    this.inventorySizeTargeting = inventorySizeTargeting;
  }


  public MarketplaceTargeting inventoryTypeTargeting(InventoryTypeTargeting inventoryTypeTargeting) {
    this.inventoryTypeTargeting = inventoryTypeTargeting;
    return this;
  }

  /**
   * Get inventoryTypeTargeting
   * @return inventoryTypeTargeting
   */
  @javax.annotation.Nullable
  public InventoryTypeTargeting getInventoryTypeTargeting() {
    return inventoryTypeTargeting;
  }

  public void setInventoryTypeTargeting(InventoryTypeTargeting inventoryTypeTargeting) {
    this.inventoryTypeTargeting = inventoryTypeTargeting;
  }


  public MarketplaceTargeting placementTargeting(PlacementTargeting placementTargeting) {
    this.placementTargeting = placementTargeting;
    return this;
  }

  /**
   * Get placementTargeting
   * @return placementTargeting
   */
  @javax.annotation.Nullable
  public PlacementTargeting getPlacementTargeting() {
    return placementTargeting;
  }

  public void setPlacementTargeting(PlacementTargeting placementTargeting) {
    this.placementTargeting = placementTargeting;
  }


  public MarketplaceTargeting technologyTargeting(TechnologyTargeting technologyTargeting) {
    this.technologyTargeting = technologyTargeting;
    return this;
  }

  /**
   * Get technologyTargeting
   * @return technologyTargeting
   */
  @javax.annotation.Nullable
  public TechnologyTargeting getTechnologyTargeting() {
    return technologyTargeting;
  }

  public void setTechnologyTargeting(TechnologyTargeting technologyTargeting) {
    this.technologyTargeting = technologyTargeting;
  }


  public MarketplaceTargeting userListTargeting(CriteriaTargeting userListTargeting) {
    this.userListTargeting = userListTargeting;
    return this;
  }

  /**
   * Get userListTargeting
   * @return userListTargeting
   */
  @javax.annotation.Nullable
  public CriteriaTargeting getUserListTargeting() {
    return userListTargeting;
  }

  public void setUserListTargeting(CriteriaTargeting userListTargeting) {
    this.userListTargeting = userListTargeting;
  }


  public MarketplaceTargeting videoTargeting(VideoTargeting videoTargeting) {
    this.videoTargeting = videoTargeting;
    return this;
  }

  /**
   * Get videoTargeting
   * @return videoTargeting
   */
  @javax.annotation.Nullable
  public VideoTargeting getVideoTargeting() {
    return videoTargeting;
  }

  public void setVideoTargeting(VideoTargeting videoTargeting) {
    this.videoTargeting = videoTargeting;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MarketplaceTargeting marketplaceTargeting = (MarketplaceTargeting) o;
    return Objects.equals(this.daypartTargeting, marketplaceTargeting.daypartTargeting) &&
        Objects.equals(this.geoTargeting, marketplaceTargeting.geoTargeting) &&
        Objects.equals(this.inventorySizeTargeting, marketplaceTargeting.inventorySizeTargeting) &&
        Objects.equals(this.inventoryTypeTargeting, marketplaceTargeting.inventoryTypeTargeting) &&
        Objects.equals(this.placementTargeting, marketplaceTargeting.placementTargeting) &&
        Objects.equals(this.technologyTargeting, marketplaceTargeting.technologyTargeting) &&
        Objects.equals(this.userListTargeting, marketplaceTargeting.userListTargeting) &&
        Objects.equals(this.videoTargeting, marketplaceTargeting.videoTargeting);
  }

  @Override
  public int hashCode() {
    return Objects.hash(daypartTargeting, geoTargeting, inventorySizeTargeting, inventoryTypeTargeting, placementTargeting, technologyTargeting, userListTargeting, videoTargeting);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MarketplaceTargeting {\n");
    sb.append("    daypartTargeting: ").append(toIndentedString(daypartTargeting)).append("\n");
    sb.append("    geoTargeting: ").append(toIndentedString(geoTargeting)).append("\n");
    sb.append("    inventorySizeTargeting: ").append(toIndentedString(inventorySizeTargeting)).append("\n");
    sb.append("    inventoryTypeTargeting: ").append(toIndentedString(inventoryTypeTargeting)).append("\n");
    sb.append("    placementTargeting: ").append(toIndentedString(placementTargeting)).append("\n");
    sb.append("    technologyTargeting: ").append(toIndentedString(technologyTargeting)).append("\n");
    sb.append("    userListTargeting: ").append(toIndentedString(userListTargeting)).append("\n");
    sb.append("    videoTargeting: ").append(toIndentedString(videoTargeting)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("daypartTargeting");
    openapiFields.add("geoTargeting");
    openapiFields.add("inventorySizeTargeting");
    openapiFields.add("inventoryTypeTargeting");
    openapiFields.add("placementTargeting");
    openapiFields.add("technologyTargeting");
    openapiFields.add("userListTargeting");
    openapiFields.add("videoTargeting");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MarketplaceTargeting
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MarketplaceTargeting.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MarketplaceTargeting is not found in the empty JSON string", MarketplaceTargeting.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MarketplaceTargeting.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MarketplaceTargeting` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `daypartTargeting`
      if (jsonObj.get("daypartTargeting") != null && !jsonObj.get("daypartTargeting").isJsonNull()) {
        DayPartTargeting.validateJsonElement(jsonObj.get("daypartTargeting"));
      }
      // validate the optional field `geoTargeting`
      if (jsonObj.get("geoTargeting") != null && !jsonObj.get("geoTargeting").isJsonNull()) {
        CriteriaTargeting.validateJsonElement(jsonObj.get("geoTargeting"));
      }
      // validate the optional field `inventorySizeTargeting`
      if (jsonObj.get("inventorySizeTargeting") != null && !jsonObj.get("inventorySizeTargeting").isJsonNull()) {
        InventorySizeTargeting.validateJsonElement(jsonObj.get("inventorySizeTargeting"));
      }
      // validate the optional field `inventoryTypeTargeting`
      if (jsonObj.get("inventoryTypeTargeting") != null && !jsonObj.get("inventoryTypeTargeting").isJsonNull()) {
        InventoryTypeTargeting.validateJsonElement(jsonObj.get("inventoryTypeTargeting"));
      }
      // validate the optional field `placementTargeting`
      if (jsonObj.get("placementTargeting") != null && !jsonObj.get("placementTargeting").isJsonNull()) {
        PlacementTargeting.validateJsonElement(jsonObj.get("placementTargeting"));
      }
      // validate the optional field `technologyTargeting`
      if (jsonObj.get("technologyTargeting") != null && !jsonObj.get("technologyTargeting").isJsonNull()) {
        TechnologyTargeting.validateJsonElement(jsonObj.get("technologyTargeting"));
      }
      // validate the optional field `userListTargeting`
      if (jsonObj.get("userListTargeting") != null && !jsonObj.get("userListTargeting").isJsonNull()) {
        CriteriaTargeting.validateJsonElement(jsonObj.get("userListTargeting"));
      }
      // validate the optional field `videoTargeting`
      if (jsonObj.get("videoTargeting") != null && !jsonObj.get("videoTargeting").isJsonNull()) {
        VideoTargeting.validateJsonElement(jsonObj.get("videoTargeting"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MarketplaceTargeting.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MarketplaceTargeting' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MarketplaceTargeting> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MarketplaceTargeting.class));

       return (TypeAdapter<T>) new TypeAdapter<MarketplaceTargeting>() {
           @Override
           public void write(JsonWriter out, MarketplaceTargeting value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MarketplaceTargeting read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MarketplaceTargeting given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MarketplaceTargeting
   * @throws IOException if the JSON string is invalid with respect to MarketplaceTargeting
   */
  public static MarketplaceTargeting fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MarketplaceTargeting.class);
  }

  /**
   * Convert an instance of MarketplaceTargeting to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

