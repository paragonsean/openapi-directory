/*
 * Authorized Buyers Marketplace API
 * The Authorized Buyers Marketplace API lets buyers programmatically discover inventory; propose, retrieve and negotiate deals with publishers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Contact;
import org.openapitools.client.model.CriteriaTargeting;
import org.openapitools.client.model.InventorySizeTargeting;
import org.openapitools.client.model.Money;
import org.openapitools.client.model.PreferredDealTerms;
import org.openapitools.client.model.ProgrammaticGuaranteedTerms;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request to send an RFP. All fields in this request are proposed to publisher and subject to changes by publisher during later negotiation.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:31:11.931533-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SendRfpRequest {
  public static final String SERIALIZED_NAME_BUYER_CONTACTS = "buyerContacts";
  @SerializedName(SERIALIZED_NAME_BUYER_CONTACTS)
  private List<Contact> buyerContacts = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLIENT = "client";
  @SerializedName(SERIALIZED_NAME_CLIENT)
  private String client;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_ESTIMATED_GROSS_SPEND = "estimatedGrossSpend";
  @SerializedName(SERIALIZED_NAME_ESTIMATED_GROSS_SPEND)
  private Money estimatedGrossSpend;

  public static final String SERIALIZED_NAME_FLIGHT_END_TIME = "flightEndTime";
  @SerializedName(SERIALIZED_NAME_FLIGHT_END_TIME)
  private String flightEndTime;

  public static final String SERIALIZED_NAME_FLIGHT_START_TIME = "flightStartTime";
  @SerializedName(SERIALIZED_NAME_FLIGHT_START_TIME)
  private String flightStartTime;

  public static final String SERIALIZED_NAME_GEO_TARGETING = "geoTargeting";
  @SerializedName(SERIALIZED_NAME_GEO_TARGETING)
  private CriteriaTargeting geoTargeting;

  public static final String SERIALIZED_NAME_INVENTORY_SIZE_TARGETING = "inventorySizeTargeting";
  @SerializedName(SERIALIZED_NAME_INVENTORY_SIZE_TARGETING)
  private InventorySizeTargeting inventorySizeTargeting;

  public static final String SERIALIZED_NAME_NOTE = "note";
  @SerializedName(SERIALIZED_NAME_NOTE)
  private String note;

  public static final String SERIALIZED_NAME_PREFERRED_DEAL_TERMS = "preferredDealTerms";
  @SerializedName(SERIALIZED_NAME_PREFERRED_DEAL_TERMS)
  private PreferredDealTerms preferredDealTerms;

  public static final String SERIALIZED_NAME_PROGRAMMATIC_GUARANTEED_TERMS = "programmaticGuaranteedTerms";
  @SerializedName(SERIALIZED_NAME_PROGRAMMATIC_GUARANTEED_TERMS)
  private ProgrammaticGuaranteedTerms programmaticGuaranteedTerms;

  public static final String SERIALIZED_NAME_PUBLISHER_PROFILE = "publisherProfile";
  @SerializedName(SERIALIZED_NAME_PUBLISHER_PROFILE)
  private String publisherProfile;

  public SendRfpRequest() {
  }

  public SendRfpRequest buyerContacts(List<Contact> buyerContacts) {
    this.buyerContacts = buyerContacts;
    return this;
  }

  public SendRfpRequest addBuyerContactsItem(Contact buyerContactsItem) {
    if (this.buyerContacts == null) {
      this.buyerContacts = new ArrayList<>();
    }
    this.buyerContacts.add(buyerContactsItem);
    return this;
  }

  /**
   * Contact information for the buyer.
   * @return buyerContacts
   */
  @javax.annotation.Nullable
  public List<Contact> getBuyerContacts() {
    return buyerContacts;
  }

  public void setBuyerContacts(List<Contact> buyerContacts) {
    this.buyerContacts = buyerContacts;
  }


  public SendRfpRequest client(String client) {
    this.client = client;
    return this;
  }

  /**
   * If the current buyer is sending the RFP on behalf of its client, use this field to specify the name of the client in the format: &#x60;buyers/{accountId}/clients/{clientAccountid}&#x60;.
   * @return client
   */
  @javax.annotation.Nullable
  public String getClient() {
    return client;
  }

  public void setClient(String client) {
    this.client = client;
  }


  public SendRfpRequest displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The display name of the proposal being created by this RFP.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public SendRfpRequest estimatedGrossSpend(Money estimatedGrossSpend) {
    this.estimatedGrossSpend = estimatedGrossSpend;
    return this;
  }

  /**
   * Get estimatedGrossSpend
   * @return estimatedGrossSpend
   */
  @javax.annotation.Nullable
  public Money getEstimatedGrossSpend() {
    return estimatedGrossSpend;
  }

  public void setEstimatedGrossSpend(Money estimatedGrossSpend) {
    this.estimatedGrossSpend = estimatedGrossSpend;
  }


  public SendRfpRequest flightEndTime(String flightEndTime) {
    this.flightEndTime = flightEndTime;
    return this;
  }

  /**
   * Required. Proposed flight end time of the RFP. A timestamp in RFC3339 UTC \&quot;Zulu\&quot; format. Note that the specified value will be truncated to a granularity of one second.
   * @return flightEndTime
   */
  @javax.annotation.Nullable
  public String getFlightEndTime() {
    return flightEndTime;
  }

  public void setFlightEndTime(String flightEndTime) {
    this.flightEndTime = flightEndTime;
  }


  public SendRfpRequest flightStartTime(String flightStartTime) {
    this.flightStartTime = flightStartTime;
    return this;
  }

  /**
   * Required. Proposed flight start time of the RFP. A timestamp in RFC3339 UTC \&quot;Zulu\&quot; format. Note that the specified value will be truncated to a granularity of one second.
   * @return flightStartTime
   */
  @javax.annotation.Nullable
  public String getFlightStartTime() {
    return flightStartTime;
  }

  public void setFlightStartTime(String flightStartTime) {
    this.flightStartTime = flightStartTime;
  }


  public SendRfpRequest geoTargeting(CriteriaTargeting geoTargeting) {
    this.geoTargeting = geoTargeting;
    return this;
  }

  /**
   * Get geoTargeting
   * @return geoTargeting
   */
  @javax.annotation.Nullable
  public CriteriaTargeting getGeoTargeting() {
    return geoTargeting;
  }

  public void setGeoTargeting(CriteriaTargeting geoTargeting) {
    this.geoTargeting = geoTargeting;
  }


  public SendRfpRequest inventorySizeTargeting(InventorySizeTargeting inventorySizeTargeting) {
    this.inventorySizeTargeting = inventorySizeTargeting;
    return this;
  }

  /**
   * Get inventorySizeTargeting
   * @return inventorySizeTargeting
   */
  @javax.annotation.Nullable
  public InventorySizeTargeting getInventorySizeTargeting() {
    return inventorySizeTargeting;
  }

  public void setInventorySizeTargeting(InventorySizeTargeting inventorySizeTargeting) {
    this.inventorySizeTargeting = inventorySizeTargeting;
  }


  public SendRfpRequest note(String note) {
    this.note = note;
    return this;
  }

  /**
   * A message that is sent to the publisher. Maximum length is 1024 characters.
   * @return note
   */
  @javax.annotation.Nullable
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }


  public SendRfpRequest preferredDealTerms(PreferredDealTerms preferredDealTerms) {
    this.preferredDealTerms = preferredDealTerms;
    return this;
  }

  /**
   * Get preferredDealTerms
   * @return preferredDealTerms
   */
  @javax.annotation.Nullable
  public PreferredDealTerms getPreferredDealTerms() {
    return preferredDealTerms;
  }

  public void setPreferredDealTerms(PreferredDealTerms preferredDealTerms) {
    this.preferredDealTerms = preferredDealTerms;
  }


  public SendRfpRequest programmaticGuaranteedTerms(ProgrammaticGuaranteedTerms programmaticGuaranteedTerms) {
    this.programmaticGuaranteedTerms = programmaticGuaranteedTerms;
    return this;
  }

  /**
   * Get programmaticGuaranteedTerms
   * @return programmaticGuaranteedTerms
   */
  @javax.annotation.Nullable
  public ProgrammaticGuaranteedTerms getProgrammaticGuaranteedTerms() {
    return programmaticGuaranteedTerms;
  }

  public void setProgrammaticGuaranteedTerms(ProgrammaticGuaranteedTerms programmaticGuaranteedTerms) {
    this.programmaticGuaranteedTerms = programmaticGuaranteedTerms;
  }


  public SendRfpRequest publisherProfile(String publisherProfile) {
    this.publisherProfile = publisherProfile;
    return this;
  }

  /**
   * Required. The profile of the publisher who will receive this RFP in the format: &#x60;buyers/{accountId}/publisherProfiles/{publisherProfileId}&#x60;.
   * @return publisherProfile
   */
  @javax.annotation.Nullable
  public String getPublisherProfile() {
    return publisherProfile;
  }

  public void setPublisherProfile(String publisherProfile) {
    this.publisherProfile = publisherProfile;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SendRfpRequest sendRfpRequest = (SendRfpRequest) o;
    return Objects.equals(this.buyerContacts, sendRfpRequest.buyerContacts) &&
        Objects.equals(this.client, sendRfpRequest.client) &&
        Objects.equals(this.displayName, sendRfpRequest.displayName) &&
        Objects.equals(this.estimatedGrossSpend, sendRfpRequest.estimatedGrossSpend) &&
        Objects.equals(this.flightEndTime, sendRfpRequest.flightEndTime) &&
        Objects.equals(this.flightStartTime, sendRfpRequest.flightStartTime) &&
        Objects.equals(this.geoTargeting, sendRfpRequest.geoTargeting) &&
        Objects.equals(this.inventorySizeTargeting, sendRfpRequest.inventorySizeTargeting) &&
        Objects.equals(this.note, sendRfpRequest.note) &&
        Objects.equals(this.preferredDealTerms, sendRfpRequest.preferredDealTerms) &&
        Objects.equals(this.programmaticGuaranteedTerms, sendRfpRequest.programmaticGuaranteedTerms) &&
        Objects.equals(this.publisherProfile, sendRfpRequest.publisherProfile);
  }

  @Override
  public int hashCode() {
    return Objects.hash(buyerContacts, client, displayName, estimatedGrossSpend, flightEndTime, flightStartTime, geoTargeting, inventorySizeTargeting, note, preferredDealTerms, programmaticGuaranteedTerms, publisherProfile);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SendRfpRequest {\n");
    sb.append("    buyerContacts: ").append(toIndentedString(buyerContacts)).append("\n");
    sb.append("    client: ").append(toIndentedString(client)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    estimatedGrossSpend: ").append(toIndentedString(estimatedGrossSpend)).append("\n");
    sb.append("    flightEndTime: ").append(toIndentedString(flightEndTime)).append("\n");
    sb.append("    flightStartTime: ").append(toIndentedString(flightStartTime)).append("\n");
    sb.append("    geoTargeting: ").append(toIndentedString(geoTargeting)).append("\n");
    sb.append("    inventorySizeTargeting: ").append(toIndentedString(inventorySizeTargeting)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    preferredDealTerms: ").append(toIndentedString(preferredDealTerms)).append("\n");
    sb.append("    programmaticGuaranteedTerms: ").append(toIndentedString(programmaticGuaranteedTerms)).append("\n");
    sb.append("    publisherProfile: ").append(toIndentedString(publisherProfile)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("buyerContacts");
    openapiFields.add("client");
    openapiFields.add("displayName");
    openapiFields.add("estimatedGrossSpend");
    openapiFields.add("flightEndTime");
    openapiFields.add("flightStartTime");
    openapiFields.add("geoTargeting");
    openapiFields.add("inventorySizeTargeting");
    openapiFields.add("note");
    openapiFields.add("preferredDealTerms");
    openapiFields.add("programmaticGuaranteedTerms");
    openapiFields.add("publisherProfile");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SendRfpRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SendRfpRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SendRfpRequest is not found in the empty JSON string", SendRfpRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SendRfpRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SendRfpRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("buyerContacts") != null && !jsonObj.get("buyerContacts").isJsonNull()) {
        JsonArray jsonArraybuyerContacts = jsonObj.getAsJsonArray("buyerContacts");
        if (jsonArraybuyerContacts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("buyerContacts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `buyerContacts` to be an array in the JSON string but got `%s`", jsonObj.get("buyerContacts").toString()));
          }

          // validate the optional field `buyerContacts` (array)
          for (int i = 0; i < jsonArraybuyerContacts.size(); i++) {
            Contact.validateJsonElement(jsonArraybuyerContacts.get(i));
          };
        }
      }
      if ((jsonObj.get("client") != null && !jsonObj.get("client").isJsonNull()) && !jsonObj.get("client").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `client` to be a primitive type in the JSON string but got `%s`", jsonObj.get("client").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      // validate the optional field `estimatedGrossSpend`
      if (jsonObj.get("estimatedGrossSpend") != null && !jsonObj.get("estimatedGrossSpend").isJsonNull()) {
        Money.validateJsonElement(jsonObj.get("estimatedGrossSpend"));
      }
      if ((jsonObj.get("flightEndTime") != null && !jsonObj.get("flightEndTime").isJsonNull()) && !jsonObj.get("flightEndTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flightEndTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flightEndTime").toString()));
      }
      if ((jsonObj.get("flightStartTime") != null && !jsonObj.get("flightStartTime").isJsonNull()) && !jsonObj.get("flightStartTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flightStartTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flightStartTime").toString()));
      }
      // validate the optional field `geoTargeting`
      if (jsonObj.get("geoTargeting") != null && !jsonObj.get("geoTargeting").isJsonNull()) {
        CriteriaTargeting.validateJsonElement(jsonObj.get("geoTargeting"));
      }
      // validate the optional field `inventorySizeTargeting`
      if (jsonObj.get("inventorySizeTargeting") != null && !jsonObj.get("inventorySizeTargeting").isJsonNull()) {
        InventorySizeTargeting.validateJsonElement(jsonObj.get("inventorySizeTargeting"));
      }
      if ((jsonObj.get("note") != null && !jsonObj.get("note").isJsonNull()) && !jsonObj.get("note").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `note` to be a primitive type in the JSON string but got `%s`", jsonObj.get("note").toString()));
      }
      // validate the optional field `preferredDealTerms`
      if (jsonObj.get("preferredDealTerms") != null && !jsonObj.get("preferredDealTerms").isJsonNull()) {
        PreferredDealTerms.validateJsonElement(jsonObj.get("preferredDealTerms"));
      }
      // validate the optional field `programmaticGuaranteedTerms`
      if (jsonObj.get("programmaticGuaranteedTerms") != null && !jsonObj.get("programmaticGuaranteedTerms").isJsonNull()) {
        ProgrammaticGuaranteedTerms.validateJsonElement(jsonObj.get("programmaticGuaranteedTerms"));
      }
      if ((jsonObj.get("publisherProfile") != null && !jsonObj.get("publisherProfile").isJsonNull()) && !jsonObj.get("publisherProfile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publisherProfile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publisherProfile").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SendRfpRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SendRfpRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SendRfpRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SendRfpRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<SendRfpRequest>() {
           @Override
           public void write(JsonWriter out, SendRfpRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SendRfpRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SendRfpRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SendRfpRequest
   * @throws IOException if the JSON string is invalid with respect to SendRfpRequest
   */
  public static SendRfpRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SendRfpRequest.class);
  }

  /**
   * Convert an instance of SendRfpRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

