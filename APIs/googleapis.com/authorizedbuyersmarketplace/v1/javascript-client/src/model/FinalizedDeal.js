/**
 * Authorized Buyers Marketplace API
 * The Authorized Buyers Marketplace API lets buyers programmatically discover inventory; propose, retrieve and negotiate deals with publishers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Deal from './Deal';
import DealPausingInfo from './DealPausingInfo';
import RtbMetrics from './RtbMetrics';

/**
 * The FinalizedDeal model module.
 * @module model/FinalizedDeal
 * @version v1
 */
class FinalizedDeal {
    /**
     * Constructs a new <code>FinalizedDeal</code>.
     * A finalized deal is a snapshot of the deal when both buyer and seller accept the deal. The buyer or seller can update the deal after it&#39;s been finalized and renegotiate on the deal targeting, terms and other fields, while at the same time the finalized snapshot of the deal can still be retrieved using this API. The finalized deal contains a copy of the deal as it existed when most recently finalized, as well as fields related to deal serving such as pause/resume status, RTB metrics, and more.
     * @alias module:model/FinalizedDeal
     */
    constructor() { 
        
        FinalizedDeal.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FinalizedDeal</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FinalizedDeal} obj Optional instance to populate.
     * @return {module:model/FinalizedDeal} The populated <code>FinalizedDeal</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FinalizedDeal();

            if (data.hasOwnProperty('deal')) {
                obj['deal'] = Deal.constructFromObject(data['deal']);
            }
            if (data.hasOwnProperty('dealPausingInfo')) {
                obj['dealPausingInfo'] = DealPausingInfo.constructFromObject(data['dealPausingInfo']);
            }
            if (data.hasOwnProperty('dealServingStatus')) {
                obj['dealServingStatus'] = ApiClient.convertToType(data['dealServingStatus'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('readyToServe')) {
                obj['readyToServe'] = ApiClient.convertToType(data['readyToServe'], 'Boolean');
            }
            if (data.hasOwnProperty('rtbMetrics')) {
                obj['rtbMetrics'] = RtbMetrics.constructFromObject(data['rtbMetrics']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FinalizedDeal</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FinalizedDeal</code>.
     */
    static validateJSON(data) {
        // validate the optional field `deal`
        if (data['deal']) { // data not null
          Deal.validateJSON(data['deal']);
        }
        // validate the optional field `dealPausingInfo`
        if (data['dealPausingInfo']) { // data not null
          DealPausingInfo.validateJSON(data['dealPausingInfo']);
        }
        // ensure the json data is a string
        if (data['dealServingStatus'] && !(typeof data['dealServingStatus'] === 'string' || data['dealServingStatus'] instanceof String)) {
            throw new Error("Expected the field `dealServingStatus` to be a primitive type in the JSON string but got " + data['dealServingStatus']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `rtbMetrics`
        if (data['rtbMetrics']) { // data not null
          RtbMetrics.validateJSON(data['rtbMetrics']);
        }

        return true;
    }


}



/**
 * @member {module:model/Deal} deal
 */
FinalizedDeal.prototype['deal'] = undefined;

/**
 * @member {module:model/DealPausingInfo} dealPausingInfo
 */
FinalizedDeal.prototype['dealPausingInfo'] = undefined;

/**
 * Serving status of the deal.
 * @member {module:model/FinalizedDeal.DealServingStatusEnum} dealServingStatus
 */
FinalizedDeal.prototype['dealServingStatus'] = undefined;

/**
 * The resource name of the finalized deal. Format: `buyers/{accountId}/finalizedDeals/{finalizedDealId}`
 * @member {String} name
 */
FinalizedDeal.prototype['name'] = undefined;

/**
 * Whether the Programmatic Guaranteed deal is ready for serving.
 * @member {Boolean} readyToServe
 */
FinalizedDeal.prototype['readyToServe'] = undefined;

/**
 * @member {module:model/RtbMetrics} rtbMetrics
 */
FinalizedDeal.prototype['rtbMetrics'] = undefined;





/**
 * Allowed values for the <code>dealServingStatus</code> property.
 * @enum {String}
 * @readonly
 */
FinalizedDeal['DealServingStatusEnum'] = {

    /**
     * value: "DEAL_SERVING_STATUS_UNSPECIFIED"
     * @const
     */
    "DEAL_SERVING_STATUS_UNSPECIFIED": "DEAL_SERVING_STATUS_UNSPECIFIED",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "ENDED"
     * @const
     */
    "ENDED": "ENDED",

    /**
     * value: "PAUSED_BY_BUYER"
     * @const
     */
    "PAUSED_BY_BUYER": "PAUSED_BY_BUYER",

    /**
     * value: "PAUSED_BY_SELLER"
     * @const
     */
    "PAUSED_BY_SELLER": "PAUSED_BY_SELLER"
};



export default FinalizedDeal;

