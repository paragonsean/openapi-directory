/**
 * Authorized Buyers Marketplace API
 * The Authorized Buyers Marketplace API lets buyers programmatically discover inventory; propose, retrieve and negotiate deals with publishers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Price from './Price';

/**
 * The ProgrammaticGuaranteedTerms model module.
 * @module model/ProgrammaticGuaranteedTerms
 * @version v1
 */
class ProgrammaticGuaranteedTerms {
    /**
     * Constructs a new <code>ProgrammaticGuaranteedTerms</code>.
     * Pricing terms for Programmatic Guaranteed Deals.
     * @alias module:model/ProgrammaticGuaranteedTerms
     */
    constructor() { 
        
        ProgrammaticGuaranteedTerms.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProgrammaticGuaranteedTerms</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProgrammaticGuaranteedTerms} obj Optional instance to populate.
     * @return {module:model/ProgrammaticGuaranteedTerms} The populated <code>ProgrammaticGuaranteedTerms</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProgrammaticGuaranteedTerms();

            if (data.hasOwnProperty('fixedPrice')) {
                obj['fixedPrice'] = Price.constructFromObject(data['fixedPrice']);
            }
            if (data.hasOwnProperty('guaranteedLooks')) {
                obj['guaranteedLooks'] = ApiClient.convertToType(data['guaranteedLooks'], 'String');
            }
            if (data.hasOwnProperty('impressionCap')) {
                obj['impressionCap'] = ApiClient.convertToType(data['impressionCap'], 'String');
            }
            if (data.hasOwnProperty('minimumDailyLooks')) {
                obj['minimumDailyLooks'] = ApiClient.convertToType(data['minimumDailyLooks'], 'String');
            }
            if (data.hasOwnProperty('percentShareOfVoice')) {
                obj['percentShareOfVoice'] = ApiClient.convertToType(data['percentShareOfVoice'], 'String');
            }
            if (data.hasOwnProperty('reservationType')) {
                obj['reservationType'] = ApiClient.convertToType(data['reservationType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProgrammaticGuaranteedTerms</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProgrammaticGuaranteedTerms</code>.
     */
    static validateJSON(data) {
        // validate the optional field `fixedPrice`
        if (data['fixedPrice']) { // data not null
          Price.validateJSON(data['fixedPrice']);
        }
        // ensure the json data is a string
        if (data['guaranteedLooks'] && !(typeof data['guaranteedLooks'] === 'string' || data['guaranteedLooks'] instanceof String)) {
            throw new Error("Expected the field `guaranteedLooks` to be a primitive type in the JSON string but got " + data['guaranteedLooks']);
        }
        // ensure the json data is a string
        if (data['impressionCap'] && !(typeof data['impressionCap'] === 'string' || data['impressionCap'] instanceof String)) {
            throw new Error("Expected the field `impressionCap` to be a primitive type in the JSON string but got " + data['impressionCap']);
        }
        // ensure the json data is a string
        if (data['minimumDailyLooks'] && !(typeof data['minimumDailyLooks'] === 'string' || data['minimumDailyLooks'] instanceof String)) {
            throw new Error("Expected the field `minimumDailyLooks` to be a primitive type in the JSON string but got " + data['minimumDailyLooks']);
        }
        // ensure the json data is a string
        if (data['percentShareOfVoice'] && !(typeof data['percentShareOfVoice'] === 'string' || data['percentShareOfVoice'] instanceof String)) {
            throw new Error("Expected the field `percentShareOfVoice` to be a primitive type in the JSON string but got " + data['percentShareOfVoice']);
        }
        // ensure the json data is a string
        if (data['reservationType'] && !(typeof data['reservationType'] === 'string' || data['reservationType'] instanceof String)) {
            throw new Error("Expected the field `reservationType` to be a primitive type in the JSON string but got " + data['reservationType']);
        }

        return true;
    }


}



/**
 * @member {module:model/Price} fixedPrice
 */
ProgrammaticGuaranteedTerms.prototype['fixedPrice'] = undefined;

/**
 * Count of guaranteed looks. For CPD deals, buyer changes to guaranteed_looks will be ignored.
 * @member {String} guaranteedLooks
 */
ProgrammaticGuaranteedTerms.prototype['guaranteedLooks'] = undefined;

/**
 * The lifetime impression cap for CPM Sponsorship deals. Deal will stop serving when cap is reached.
 * @member {String} impressionCap
 */
ProgrammaticGuaranteedTerms.prototype['impressionCap'] = undefined;

/**
 * Daily minimum looks for CPD deal types. For CPD deals, buyer should negotiate on this field instead of guaranteed_looks.
 * @member {String} minimumDailyLooks
 */
ProgrammaticGuaranteedTerms.prototype['minimumDailyLooks'] = undefined;

/**
 * For sponsorship deals, this is the percentage of the seller's eligible impressions that the deal will serve until the cap is reached. Valid value is within range 0~100.
 * @member {String} percentShareOfVoice
 */
ProgrammaticGuaranteedTerms.prototype['percentShareOfVoice'] = undefined;

/**
 * The reservation type for a Programmatic Guaranteed deal. This indicates whether the number of impressions is fixed, or a percent of available impressions. If not specified, the default reservation type is STANDARD.
 * @member {module:model/ProgrammaticGuaranteedTerms.ReservationTypeEnum} reservationType
 */
ProgrammaticGuaranteedTerms.prototype['reservationType'] = undefined;





/**
 * Allowed values for the <code>reservationType</code> property.
 * @enum {String}
 * @readonly
 */
ProgrammaticGuaranteedTerms['ReservationTypeEnum'] = {

    /**
     * value: "RESERVATION_TYPE_UNSPECIFIED"
     * @const
     */
    "RESERVATION_TYPE_UNSPECIFIED": "RESERVATION_TYPE_UNSPECIFIED",

    /**
     * value: "STANDARD"
     * @const
     */
    "STANDARD": "STANDARD",

    /**
     * value: "SPONSORSHIP"
     * @const
     */
    "SPONSORSHIP": "SPONSORSHIP"
};



export default ProgrammaticGuaranteedTerms;

