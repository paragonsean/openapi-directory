/**
 * Authorized Buyers Marketplace API
 * The Authorized Buyers Marketplace API lets buyers programmatically discover inventory; propose, retrieve and negotiate deals with publishers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Deal from './Deal';

/**
 * The UpdateDealRequest model module.
 * @module model/UpdateDealRequest
 * @version v1
 */
class UpdateDealRequest {
    /**
     * Constructs a new <code>UpdateDealRequest</code>.
     * Request message for updating the deal at the given revision number.
     * @alias module:model/UpdateDealRequest
     */
    constructor() { 
        
        UpdateDealRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateDealRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateDealRequest} obj Optional instance to populate.
     * @return {module:model/UpdateDealRequest} The populated <code>UpdateDealRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateDealRequest();

            if (data.hasOwnProperty('deal')) {
                obj['deal'] = Deal.constructFromObject(data['deal']);
            }
            if (data.hasOwnProperty('updateMask')) {
                obj['updateMask'] = ApiClient.convertToType(data['updateMask'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateDealRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateDealRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `deal`
        if (data['deal']) { // data not null
          Deal.validateJSON(data['deal']);
        }
        // ensure the json data is a string
        if (data['updateMask'] && !(typeof data['updateMask'] === 'string' || data['updateMask'] instanceof String)) {
            throw new Error("Expected the field `updateMask` to be a primitive type in the JSON string but got " + data['updateMask']);
        }

        return true;
    }


}



/**
 * @member {module:model/Deal} deal
 */
UpdateDealRequest.prototype['deal'] = undefined;

/**
 * List of fields to be updated. If empty or unspecified, the service will update all fields populated in the update request excluding the output only fields and primitive fields with default value. Note that explicit field mask is required in order to reset a primitive field back to its default value, for example, false for boolean fields, 0 for integer fields. A special field mask consisting of a single path \"*\" can be used to indicate full replacement(the equivalent of PUT method), updatable fields unset or unspecified in the input will be cleared or set to default value. Output only fields will be ignored regardless of the value of updateMask.
 * @member {String} updateMask
 */
UpdateDealRequest.prototype['updateMask'] = undefined;






export default UpdateDealRequest;

