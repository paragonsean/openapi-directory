/**
 * Authorized Buyers Marketplace API
 * The Authorized Buyers Marketplace API lets buyers programmatically discover inventory; propose, retrieve and negotiate deals with publishers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreativeRequirements from './CreativeRequirements';
import DeliveryControl from './DeliveryControl';
import MarketplaceTargeting from './MarketplaceTargeting';
import Money from './Money';
import PreferredDealTerms from './PreferredDealTerms';
import PrivateAuctionTerms from './PrivateAuctionTerms';
import ProgrammaticGuaranteedTerms from './ProgrammaticGuaranteedTerms';
import TimeZone from './TimeZone';

/**
 * The Deal model module.
 * @module model/Deal
 * @version v1
 */
class Deal {
    /**
     * Constructs a new <code>Deal</code>.
     * A deal represents a segment of inventory for displaying ads that contains the terms and targeting information that is used for serving as well as the deal stats and status. Note: A proposal may contain multiple deals.
     * @alias module:model/Deal
     */
    constructor() { 
        
        Deal.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Deal</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Deal} obj Optional instance to populate.
     * @return {module:model/Deal} The populated <code>Deal</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Deal();

            if (data.hasOwnProperty('billedBuyer')) {
                obj['billedBuyer'] = ApiClient.convertToType(data['billedBuyer'], 'String');
            }
            if (data.hasOwnProperty('buyer')) {
                obj['buyer'] = ApiClient.convertToType(data['buyer'], 'String');
            }
            if (data.hasOwnProperty('client')) {
                obj['client'] = ApiClient.convertToType(data['client'], 'String');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('creativeRequirements')) {
                obj['creativeRequirements'] = CreativeRequirements.constructFromObject(data['creativeRequirements']);
            }
            if (data.hasOwnProperty('dealType')) {
                obj['dealType'] = ApiClient.convertToType(data['dealType'], 'String');
            }
            if (data.hasOwnProperty('deliveryControl')) {
                obj['deliveryControl'] = DeliveryControl.constructFromObject(data['deliveryControl']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('estimatedGrossSpend')) {
                obj['estimatedGrossSpend'] = Money.constructFromObject(data['estimatedGrossSpend']);
            }
            if (data.hasOwnProperty('flightEndTime')) {
                obj['flightEndTime'] = ApiClient.convertToType(data['flightEndTime'], 'String');
            }
            if (data.hasOwnProperty('flightStartTime')) {
                obj['flightStartTime'] = ApiClient.convertToType(data['flightStartTime'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('preferredDealTerms')) {
                obj['preferredDealTerms'] = PreferredDealTerms.constructFromObject(data['preferredDealTerms']);
            }
            if (data.hasOwnProperty('privateAuctionTerms')) {
                obj['privateAuctionTerms'] = PrivateAuctionTerms.constructFromObject(data['privateAuctionTerms']);
            }
            if (data.hasOwnProperty('programmaticGuaranteedTerms')) {
                obj['programmaticGuaranteedTerms'] = ProgrammaticGuaranteedTerms.constructFromObject(data['programmaticGuaranteedTerms']);
            }
            if (data.hasOwnProperty('proposalRevision')) {
                obj['proposalRevision'] = ApiClient.convertToType(data['proposalRevision'], 'String');
            }
            if (data.hasOwnProperty('publisherProfile')) {
                obj['publisherProfile'] = ApiClient.convertToType(data['publisherProfile'], 'String');
            }
            if (data.hasOwnProperty('sellerTimeZone')) {
                obj['sellerTimeZone'] = TimeZone.constructFromObject(data['sellerTimeZone']);
            }
            if (data.hasOwnProperty('targeting')) {
                obj['targeting'] = MarketplaceTargeting.constructFromObject(data['targeting']);
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Deal</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Deal</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['billedBuyer'] && !(typeof data['billedBuyer'] === 'string' || data['billedBuyer'] instanceof String)) {
            throw new Error("Expected the field `billedBuyer` to be a primitive type in the JSON string but got " + data['billedBuyer']);
        }
        // ensure the json data is a string
        if (data['buyer'] && !(typeof data['buyer'] === 'string' || data['buyer'] instanceof String)) {
            throw new Error("Expected the field `buyer` to be a primitive type in the JSON string but got " + data['buyer']);
        }
        // ensure the json data is a string
        if (data['client'] && !(typeof data['client'] === 'string' || data['client'] instanceof String)) {
            throw new Error("Expected the field `client` to be a primitive type in the JSON string but got " + data['client']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // validate the optional field `creativeRequirements`
        if (data['creativeRequirements']) { // data not null
          CreativeRequirements.validateJSON(data['creativeRequirements']);
        }
        // ensure the json data is a string
        if (data['dealType'] && !(typeof data['dealType'] === 'string' || data['dealType'] instanceof String)) {
            throw new Error("Expected the field `dealType` to be a primitive type in the JSON string but got " + data['dealType']);
        }
        // validate the optional field `deliveryControl`
        if (data['deliveryControl']) { // data not null
          DeliveryControl.validateJSON(data['deliveryControl']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `estimatedGrossSpend`
        if (data['estimatedGrossSpend']) { // data not null
          Money.validateJSON(data['estimatedGrossSpend']);
        }
        // ensure the json data is a string
        if (data['flightEndTime'] && !(typeof data['flightEndTime'] === 'string' || data['flightEndTime'] instanceof String)) {
            throw new Error("Expected the field `flightEndTime` to be a primitive type in the JSON string but got " + data['flightEndTime']);
        }
        // ensure the json data is a string
        if (data['flightStartTime'] && !(typeof data['flightStartTime'] === 'string' || data['flightStartTime'] instanceof String)) {
            throw new Error("Expected the field `flightStartTime` to be a primitive type in the JSON string but got " + data['flightStartTime']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `preferredDealTerms`
        if (data['preferredDealTerms']) { // data not null
          PreferredDealTerms.validateJSON(data['preferredDealTerms']);
        }
        // validate the optional field `privateAuctionTerms`
        if (data['privateAuctionTerms']) { // data not null
          PrivateAuctionTerms.validateJSON(data['privateAuctionTerms']);
        }
        // validate the optional field `programmaticGuaranteedTerms`
        if (data['programmaticGuaranteedTerms']) { // data not null
          ProgrammaticGuaranteedTerms.validateJSON(data['programmaticGuaranteedTerms']);
        }
        // ensure the json data is a string
        if (data['proposalRevision'] && !(typeof data['proposalRevision'] === 'string' || data['proposalRevision'] instanceof String)) {
            throw new Error("Expected the field `proposalRevision` to be a primitive type in the JSON string but got " + data['proposalRevision']);
        }
        // ensure the json data is a string
        if (data['publisherProfile'] && !(typeof data['publisherProfile'] === 'string' || data['publisherProfile'] instanceof String)) {
            throw new Error("Expected the field `publisherProfile` to be a primitive type in the JSON string but got " + data['publisherProfile']);
        }
        // validate the optional field `sellerTimeZone`
        if (data['sellerTimeZone']) { // data not null
          TimeZone.validateJSON(data['sellerTimeZone']);
        }
        // validate the optional field `targeting`
        if (data['targeting']) { // data not null
          MarketplaceTargeting.validateJSON(data['targeting']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Output only. When the client field is populated, this field refers to the buyer who creates and manages the client buyer and gets billed on behalf of the client buyer; when the buyer field is populated, this field is the same value as buyer. Format : `buyers/{buyerAccountId}`
 * @member {String} billedBuyer
 */
Deal.prototype['billedBuyer'] = undefined;

/**
 * Output only. Refers to a buyer in The Realtime-bidding API. Format: `buyers/{buyerAccountId}`
 * @member {String} buyer
 */
Deal.prototype['buyer'] = undefined;

/**
 * Output only. Refers to a Client. Format: `buyers/{buyerAccountId}/clients/{clientAccountid}`
 * @member {String} client
 */
Deal.prototype['client'] = undefined;

/**
 * Output only. The time of the deal creation.
 * @member {String} createTime
 */
Deal.prototype['createTime'] = undefined;

/**
 * @member {module:model/CreativeRequirements} creativeRequirements
 */
Deal.prototype['creativeRequirements'] = undefined;

/**
 * Output only. Type of deal.
 * @member {module:model/Deal.DealTypeEnum} dealType
 */
Deal.prototype['dealType'] = undefined;

/**
 * @member {module:model/DeliveryControl} deliveryControl
 */
Deal.prototype['deliveryControl'] = undefined;

/**
 * Output only. Free text description for the deal terms.
 * @member {String} description
 */
Deal.prototype['description'] = undefined;

/**
 * Output only. The name of the deal. Maximum length of 255 unicode characters is allowed. Control characters are not allowed. Buyers cannot update this field. Note: Not to be confused with name, which is a unique identifier of the deal.
 * @member {String} displayName
 */
Deal.prototype['displayName'] = undefined;

/**
 * @member {module:model/Money} estimatedGrossSpend
 */
Deal.prototype['estimatedGrossSpend'] = undefined;

/**
 * Proposed flight end time of the deal. This will generally be stored in a granularity of a second. A value is not necessary for Private Auction deals.
 * @member {String} flightEndTime
 */
Deal.prototype['flightEndTime'] = undefined;

/**
 * Proposed flight start time of the deal. This will generally be stored in the granularity of one second since deal serving starts at seconds boundary. Any time specified with more granularity (for example, in milliseconds) will be truncated towards the start of time in seconds.
 * @member {String} flightStartTime
 */
Deal.prototype['flightStartTime'] = undefined;

/**
 * Immutable. The unique identifier of the deal. Auto-generated by the server when a deal is created. Format: buyers/{accountId}/proposals/{proposalId}/deals/{dealId}
 * @member {String} name
 */
Deal.prototype['name'] = undefined;

/**
 * @member {module:model/PreferredDealTerms} preferredDealTerms
 */
Deal.prototype['preferredDealTerms'] = undefined;

/**
 * @member {module:model/PrivateAuctionTerms} privateAuctionTerms
 */
Deal.prototype['privateAuctionTerms'] = undefined;

/**
 * @member {module:model/ProgrammaticGuaranteedTerms} programmaticGuaranteedTerms
 */
Deal.prototype['programmaticGuaranteedTerms'] = undefined;

/**
 * Output only. The revision number for the proposal and is the same value as proposal.proposal_revision. Each update to deal causes the proposal revision number to auto-increment. The buyer keeps track of the last revision number they know of and pass it in when making an update. If the head revision number on the server has since incremented, then an ABORTED error is returned during the update operation to let the buyer know that a subsequent update was made.
 * @member {String} proposalRevision
 */
Deal.prototype['proposalRevision'] = undefined;

/**
 * Immutable. Reference to the seller on the deal. Format: `buyers/{buyerAccountId}/publisherProfiles/{publisherProfileId}`
 * @member {String} publisherProfile
 */
Deal.prototype['publisherProfile'] = undefined;

/**
 * @member {module:model/TimeZone} sellerTimeZone
 */
Deal.prototype['sellerTimeZone'] = undefined;

/**
 * @member {module:model/MarketplaceTargeting} targeting
 */
Deal.prototype['targeting'] = undefined;

/**
 * Output only. The time when the deal was last updated.
 * @member {String} updateTime
 */
Deal.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>dealType</code> property.
 * @enum {String}
 * @readonly
 */
Deal['DealTypeEnum'] = {

    /**
     * value: "DEAL_TYPE_UNSPECIFIED"
     * @const
     */
    "DEAL_TYPE_UNSPECIFIED": "DEAL_TYPE_UNSPECIFIED",

    /**
     * value: "PREFERRED_DEAL"
     * @const
     */
    "PREFERRED_DEAL": "PREFERRED_DEAL",

    /**
     * value: "PRIVATE_AUCTION"
     * @const
     */
    "PRIVATE_AUCTION": "PRIVATE_AUCTION",

    /**
     * value: "PROGRAMMATIC_GUARANTEED"
     * @const
     */
    "PROGRAMMATIC_GUARANTEED": "PROGRAMMATIC_GUARANTEED"
};



export default Deal;

