/**
 * Authorized Buyers Marketplace API
 * The Authorized Buyers Marketplace API lets buyers programmatically discover inventory; propose, retrieve and negotiate deals with publishers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Contact from './Contact';
import CriteriaTargeting from './CriteriaTargeting';
import InventorySizeTargeting from './InventorySizeTargeting';
import Money from './Money';
import PreferredDealTerms from './PreferredDealTerms';
import ProgrammaticGuaranteedTerms from './ProgrammaticGuaranteedTerms';

/**
 * The SendRfpRequest model module.
 * @module model/SendRfpRequest
 * @version v1
 */
class SendRfpRequest {
    /**
     * Constructs a new <code>SendRfpRequest</code>.
     * Request to send an RFP. All fields in this request are proposed to publisher and subject to changes by publisher during later negotiation.
     * @alias module:model/SendRfpRequest
     */
    constructor() { 
        
        SendRfpRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SendRfpRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SendRfpRequest} obj Optional instance to populate.
     * @return {module:model/SendRfpRequest} The populated <code>SendRfpRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SendRfpRequest();

            if (data.hasOwnProperty('buyerContacts')) {
                obj['buyerContacts'] = ApiClient.convertToType(data['buyerContacts'], [Contact]);
            }
            if (data.hasOwnProperty('client')) {
                obj['client'] = ApiClient.convertToType(data['client'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('estimatedGrossSpend')) {
                obj['estimatedGrossSpend'] = Money.constructFromObject(data['estimatedGrossSpend']);
            }
            if (data.hasOwnProperty('flightEndTime')) {
                obj['flightEndTime'] = ApiClient.convertToType(data['flightEndTime'], 'String');
            }
            if (data.hasOwnProperty('flightStartTime')) {
                obj['flightStartTime'] = ApiClient.convertToType(data['flightStartTime'], 'String');
            }
            if (data.hasOwnProperty('geoTargeting')) {
                obj['geoTargeting'] = CriteriaTargeting.constructFromObject(data['geoTargeting']);
            }
            if (data.hasOwnProperty('inventorySizeTargeting')) {
                obj['inventorySizeTargeting'] = InventorySizeTargeting.constructFromObject(data['inventorySizeTargeting']);
            }
            if (data.hasOwnProperty('note')) {
                obj['note'] = ApiClient.convertToType(data['note'], 'String');
            }
            if (data.hasOwnProperty('preferredDealTerms')) {
                obj['preferredDealTerms'] = PreferredDealTerms.constructFromObject(data['preferredDealTerms']);
            }
            if (data.hasOwnProperty('programmaticGuaranteedTerms')) {
                obj['programmaticGuaranteedTerms'] = ProgrammaticGuaranteedTerms.constructFromObject(data['programmaticGuaranteedTerms']);
            }
            if (data.hasOwnProperty('publisherProfile')) {
                obj['publisherProfile'] = ApiClient.convertToType(data['publisherProfile'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SendRfpRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SendRfpRequest</code>.
     */
    static validateJSON(data) {
        if (data['buyerContacts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['buyerContacts'])) {
                throw new Error("Expected the field `buyerContacts` to be an array in the JSON data but got " + data['buyerContacts']);
            }
            // validate the optional field `buyerContacts` (array)
            for (const item of data['buyerContacts']) {
                Contact.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['client'] && !(typeof data['client'] === 'string' || data['client'] instanceof String)) {
            throw new Error("Expected the field `client` to be a primitive type in the JSON string but got " + data['client']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `estimatedGrossSpend`
        if (data['estimatedGrossSpend']) { // data not null
          Money.validateJSON(data['estimatedGrossSpend']);
        }
        // ensure the json data is a string
        if (data['flightEndTime'] && !(typeof data['flightEndTime'] === 'string' || data['flightEndTime'] instanceof String)) {
            throw new Error("Expected the field `flightEndTime` to be a primitive type in the JSON string but got " + data['flightEndTime']);
        }
        // ensure the json data is a string
        if (data['flightStartTime'] && !(typeof data['flightStartTime'] === 'string' || data['flightStartTime'] instanceof String)) {
            throw new Error("Expected the field `flightStartTime` to be a primitive type in the JSON string but got " + data['flightStartTime']);
        }
        // validate the optional field `geoTargeting`
        if (data['geoTargeting']) { // data not null
          CriteriaTargeting.validateJSON(data['geoTargeting']);
        }
        // validate the optional field `inventorySizeTargeting`
        if (data['inventorySizeTargeting']) { // data not null
          InventorySizeTargeting.validateJSON(data['inventorySizeTargeting']);
        }
        // ensure the json data is a string
        if (data['note'] && !(typeof data['note'] === 'string' || data['note'] instanceof String)) {
            throw new Error("Expected the field `note` to be a primitive type in the JSON string but got " + data['note']);
        }
        // validate the optional field `preferredDealTerms`
        if (data['preferredDealTerms']) { // data not null
          PreferredDealTerms.validateJSON(data['preferredDealTerms']);
        }
        // validate the optional field `programmaticGuaranteedTerms`
        if (data['programmaticGuaranteedTerms']) { // data not null
          ProgrammaticGuaranteedTerms.validateJSON(data['programmaticGuaranteedTerms']);
        }
        // ensure the json data is a string
        if (data['publisherProfile'] && !(typeof data['publisherProfile'] === 'string' || data['publisherProfile'] instanceof String)) {
            throw new Error("Expected the field `publisherProfile` to be a primitive type in the JSON string but got " + data['publisherProfile']);
        }

        return true;
    }


}



/**
 * Contact information for the buyer.
 * @member {Array.<module:model/Contact>} buyerContacts
 */
SendRfpRequest.prototype['buyerContacts'] = undefined;

/**
 * If the current buyer is sending the RFP on behalf of its client, use this field to specify the name of the client in the format: `buyers/{accountId}/clients/{clientAccountid}`.
 * @member {String} client
 */
SendRfpRequest.prototype['client'] = undefined;

/**
 * Required. The display name of the proposal being created by this RFP.
 * @member {String} displayName
 */
SendRfpRequest.prototype['displayName'] = undefined;

/**
 * @member {module:model/Money} estimatedGrossSpend
 */
SendRfpRequest.prototype['estimatedGrossSpend'] = undefined;

/**
 * Required. Proposed flight end time of the RFP. A timestamp in RFC3339 UTC \"Zulu\" format. Note that the specified value will be truncated to a granularity of one second.
 * @member {String} flightEndTime
 */
SendRfpRequest.prototype['flightEndTime'] = undefined;

/**
 * Required. Proposed flight start time of the RFP. A timestamp in RFC3339 UTC \"Zulu\" format. Note that the specified value will be truncated to a granularity of one second.
 * @member {String} flightStartTime
 */
SendRfpRequest.prototype['flightStartTime'] = undefined;

/**
 * @member {module:model/CriteriaTargeting} geoTargeting
 */
SendRfpRequest.prototype['geoTargeting'] = undefined;

/**
 * @member {module:model/InventorySizeTargeting} inventorySizeTargeting
 */
SendRfpRequest.prototype['inventorySizeTargeting'] = undefined;

/**
 * A message that is sent to the publisher. Maximum length is 1024 characters.
 * @member {String} note
 */
SendRfpRequest.prototype['note'] = undefined;

/**
 * @member {module:model/PreferredDealTerms} preferredDealTerms
 */
SendRfpRequest.prototype['preferredDealTerms'] = undefined;

/**
 * @member {module:model/ProgrammaticGuaranteedTerms} programmaticGuaranteedTerms
 */
SendRfpRequest.prototype['programmaticGuaranteedTerms'] = undefined;

/**
 * Required. The profile of the publisher who will receive this RFP in the format: `buyers/{accountId}/publisherProfiles/{publisherProfileId}`.
 * @member {String} publisherProfile
 */
SendRfpRequest.prototype['publisherProfile'] = undefined;






export default SendRfpRequest;

