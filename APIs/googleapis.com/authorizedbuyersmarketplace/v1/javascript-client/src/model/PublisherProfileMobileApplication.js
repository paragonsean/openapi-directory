/**
 * Authorized Buyers Marketplace API
 * The Authorized Buyers Marketplace API lets buyers programmatically discover inventory; propose, retrieve and negotiate deals with publishers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PublisherProfileMobileApplication model module.
 * @module model/PublisherProfileMobileApplication
 * @version v1
 */
class PublisherProfileMobileApplication {
    /**
     * Constructs a new <code>PublisherProfileMobileApplication</code>.
     * A mobile application that contains a external app ID, name, and app store.
     * @alias module:model/PublisherProfileMobileApplication
     */
    constructor() { 
        
        PublisherProfileMobileApplication.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PublisherProfileMobileApplication</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PublisherProfileMobileApplication} obj Optional instance to populate.
     * @return {module:model/PublisherProfileMobileApplication} The populated <code>PublisherProfileMobileApplication</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PublisherProfileMobileApplication();

            if (data.hasOwnProperty('appStore')) {
                obj['appStore'] = ApiClient.convertToType(data['appStore'], 'String');
            }
            if (data.hasOwnProperty('externalAppId')) {
                obj['externalAppId'] = ApiClient.convertToType(data['externalAppId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PublisherProfileMobileApplication</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PublisherProfileMobileApplication</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['appStore'] && !(typeof data['appStore'] === 'string' || data['appStore'] instanceof String)) {
            throw new Error("Expected the field `appStore` to be a primitive type in the JSON string but got " + data['appStore']);
        }
        // ensure the json data is a string
        if (data['externalAppId'] && !(typeof data['externalAppId'] === 'string' || data['externalAppId'] instanceof String)) {
            throw new Error("Expected the field `externalAppId` to be a primitive type in the JSON string but got " + data['externalAppId']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * The app store the app belongs to. Can be used to filter the response of the publisherProfiles.list method.
 * @member {module:model/PublisherProfileMobileApplication.AppStoreEnum} appStore
 */
PublisherProfileMobileApplication.prototype['appStore'] = undefined;

/**
 * The external ID for the app from its app store. Can be used to filter the response of the publisherProfiles.list method.
 * @member {String} externalAppId
 */
PublisherProfileMobileApplication.prototype['externalAppId'] = undefined;

/**
 * The name of the app.
 * @member {String} name
 */
PublisherProfileMobileApplication.prototype['name'] = undefined;





/**
 * Allowed values for the <code>appStore</code> property.
 * @enum {String}
 * @readonly
 */
PublisherProfileMobileApplication['AppStoreEnum'] = {

    /**
     * value: "APP_STORE_TYPE_UNSPECIFIED"
     * @const
     */
    "APP_STORE_TYPE_UNSPECIFIED": "APP_STORE_TYPE_UNSPECIFIED",

    /**
     * value: "APPLE_ITUNES"
     * @const
     */
    "APPLE_ITUNES": "APPLE_ITUNES",

    /**
     * value: "GOOGLE_PLAY"
     * @const
     */
    "GOOGLE_PLAY": "GOOGLE_PLAY",

    /**
     * value: "ROKU"
     * @const
     */
    "ROKU": "ROKU",

    /**
     * value: "AMAZON_FIRE_TV"
     * @const
     */
    "AMAZON_FIRE_TV": "AMAZON_FIRE_TV",

    /**
     * value: "PLAYSTATION"
     * @const
     */
    "PLAYSTATION": "PLAYSTATION",

    /**
     * value: "XBOX"
     * @const
     */
    "XBOX": "XBOX",

    /**
     * value: "SAMSUNG_TV"
     * @const
     */
    "SAMSUNG_TV": "SAMSUNG_TV",

    /**
     * value: "AMAZON"
     * @const
     */
    "AMAZON": "AMAZON",

    /**
     * value: "OPPO"
     * @const
     */
    "OPPO": "OPPO",

    /**
     * value: "SAMSUNG"
     * @const
     */
    "SAMSUNG": "SAMSUNG",

    /**
     * value: "VIVO"
     * @const
     */
    "VIVO": "VIVO",

    /**
     * value: "XIAOMI"
     * @const
     */
    "XIAOMI": "XIAOMI",

    /**
     * value: "LG_TV"
     * @const
     */
    "LG_TV": "LG_TV"
};



export default PublisherProfileMobileApplication;

