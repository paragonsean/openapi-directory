# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.contact import Contact
from openapi_server.models.criteria_targeting import CriteriaTargeting
from openapi_server.models.inventory_size_targeting import InventorySizeTargeting
from openapi_server.models.money import Money
from openapi_server.models.preferred_deal_terms import PreferredDealTerms
from openapi_server.models.programmatic_guaranteed_terms import ProgrammaticGuaranteedTerms
from openapi_server import util


class SendRfpRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, buyer_contacts: List[Contact]=None, client: str=None, display_name: str=None, estimated_gross_spend: Money=None, flight_end_time: str=None, flight_start_time: str=None, geo_targeting: CriteriaTargeting=None, inventory_size_targeting: InventorySizeTargeting=None, note: str=None, preferred_deal_terms: PreferredDealTerms=None, programmatic_guaranteed_terms: ProgrammaticGuaranteedTerms=None, publisher_profile: str=None):
        """SendRfpRequest - a model defined in OpenAPI

        :param buyer_contacts: The buyer_contacts of this SendRfpRequest.
        :param client: The client of this SendRfpRequest.
        :param display_name: The display_name of this SendRfpRequest.
        :param estimated_gross_spend: The estimated_gross_spend of this SendRfpRequest.
        :param flight_end_time: The flight_end_time of this SendRfpRequest.
        :param flight_start_time: The flight_start_time of this SendRfpRequest.
        :param geo_targeting: The geo_targeting of this SendRfpRequest.
        :param inventory_size_targeting: The inventory_size_targeting of this SendRfpRequest.
        :param note: The note of this SendRfpRequest.
        :param preferred_deal_terms: The preferred_deal_terms of this SendRfpRequest.
        :param programmatic_guaranteed_terms: The programmatic_guaranteed_terms of this SendRfpRequest.
        :param publisher_profile: The publisher_profile of this SendRfpRequest.
        """
        self.openapi_types = {
            'buyer_contacts': List[Contact],
            'client': str,
            'display_name': str,
            'estimated_gross_spend': Money,
            'flight_end_time': str,
            'flight_start_time': str,
            'geo_targeting': CriteriaTargeting,
            'inventory_size_targeting': InventorySizeTargeting,
            'note': str,
            'preferred_deal_terms': PreferredDealTerms,
            'programmatic_guaranteed_terms': ProgrammaticGuaranteedTerms,
            'publisher_profile': str
        }

        self.attribute_map = {
            'buyer_contacts': 'buyerContacts',
            'client': 'client',
            'display_name': 'displayName',
            'estimated_gross_spend': 'estimatedGrossSpend',
            'flight_end_time': 'flightEndTime',
            'flight_start_time': 'flightStartTime',
            'geo_targeting': 'geoTargeting',
            'inventory_size_targeting': 'inventorySizeTargeting',
            'note': 'note',
            'preferred_deal_terms': 'preferredDealTerms',
            'programmatic_guaranteed_terms': 'programmaticGuaranteedTerms',
            'publisher_profile': 'publisherProfile'
        }

        self._buyer_contacts = buyer_contacts
        self._client = client
        self._display_name = display_name
        self._estimated_gross_spend = estimated_gross_spend
        self._flight_end_time = flight_end_time
        self._flight_start_time = flight_start_time
        self._geo_targeting = geo_targeting
        self._inventory_size_targeting = inventory_size_targeting
        self._note = note
        self._preferred_deal_terms = preferred_deal_terms
        self._programmatic_guaranteed_terms = programmatic_guaranteed_terms
        self._publisher_profile = publisher_profile

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SendRfpRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SendRfpRequest of this SendRfpRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def buyer_contacts(self):
        """Gets the buyer_contacts of this SendRfpRequest.

        Contact information for the buyer.

        :return: The buyer_contacts of this SendRfpRequest.
        :rtype: List[Contact]
        """
        return self._buyer_contacts

    @buyer_contacts.setter
    def buyer_contacts(self, buyer_contacts):
        """Sets the buyer_contacts of this SendRfpRequest.

        Contact information for the buyer.

        :param buyer_contacts: The buyer_contacts of this SendRfpRequest.
        :type buyer_contacts: List[Contact]
        """

        self._buyer_contacts = buyer_contacts

    @property
    def client(self):
        """Gets the client of this SendRfpRequest.

        If the current buyer is sending the RFP on behalf of its client, use this field to specify the name of the client in the format: `buyers/{accountId}/clients/{clientAccountid}`.

        :return: The client of this SendRfpRequest.
        :rtype: str
        """
        return self._client

    @client.setter
    def client(self, client):
        """Sets the client of this SendRfpRequest.

        If the current buyer is sending the RFP on behalf of its client, use this field to specify the name of the client in the format: `buyers/{accountId}/clients/{clientAccountid}`.

        :param client: The client of this SendRfpRequest.
        :type client: str
        """

        self._client = client

    @property
    def display_name(self):
        """Gets the display_name of this SendRfpRequest.

        Required. The display name of the proposal being created by this RFP.

        :return: The display_name of this SendRfpRequest.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this SendRfpRequest.

        Required. The display name of the proposal being created by this RFP.

        :param display_name: The display_name of this SendRfpRequest.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def estimated_gross_spend(self):
        """Gets the estimated_gross_spend of this SendRfpRequest.


        :return: The estimated_gross_spend of this SendRfpRequest.
        :rtype: Money
        """
        return self._estimated_gross_spend

    @estimated_gross_spend.setter
    def estimated_gross_spend(self, estimated_gross_spend):
        """Sets the estimated_gross_spend of this SendRfpRequest.


        :param estimated_gross_spend: The estimated_gross_spend of this SendRfpRequest.
        :type estimated_gross_spend: Money
        """

        self._estimated_gross_spend = estimated_gross_spend

    @property
    def flight_end_time(self):
        """Gets the flight_end_time of this SendRfpRequest.

        Required. Proposed flight end time of the RFP. A timestamp in RFC3339 UTC \"Zulu\" format. Note that the specified value will be truncated to a granularity of one second.

        :return: The flight_end_time of this SendRfpRequest.
        :rtype: str
        """
        return self._flight_end_time

    @flight_end_time.setter
    def flight_end_time(self, flight_end_time):
        """Sets the flight_end_time of this SendRfpRequest.

        Required. Proposed flight end time of the RFP. A timestamp in RFC3339 UTC \"Zulu\" format. Note that the specified value will be truncated to a granularity of one second.

        :param flight_end_time: The flight_end_time of this SendRfpRequest.
        :type flight_end_time: str
        """

        self._flight_end_time = flight_end_time

    @property
    def flight_start_time(self):
        """Gets the flight_start_time of this SendRfpRequest.

        Required. Proposed flight start time of the RFP. A timestamp in RFC3339 UTC \"Zulu\" format. Note that the specified value will be truncated to a granularity of one second.

        :return: The flight_start_time of this SendRfpRequest.
        :rtype: str
        """
        return self._flight_start_time

    @flight_start_time.setter
    def flight_start_time(self, flight_start_time):
        """Sets the flight_start_time of this SendRfpRequest.

        Required. Proposed flight start time of the RFP. A timestamp in RFC3339 UTC \"Zulu\" format. Note that the specified value will be truncated to a granularity of one second.

        :param flight_start_time: The flight_start_time of this SendRfpRequest.
        :type flight_start_time: str
        """

        self._flight_start_time = flight_start_time

    @property
    def geo_targeting(self):
        """Gets the geo_targeting of this SendRfpRequest.


        :return: The geo_targeting of this SendRfpRequest.
        :rtype: CriteriaTargeting
        """
        return self._geo_targeting

    @geo_targeting.setter
    def geo_targeting(self, geo_targeting):
        """Sets the geo_targeting of this SendRfpRequest.


        :param geo_targeting: The geo_targeting of this SendRfpRequest.
        :type geo_targeting: CriteriaTargeting
        """

        self._geo_targeting = geo_targeting

    @property
    def inventory_size_targeting(self):
        """Gets the inventory_size_targeting of this SendRfpRequest.


        :return: The inventory_size_targeting of this SendRfpRequest.
        :rtype: InventorySizeTargeting
        """
        return self._inventory_size_targeting

    @inventory_size_targeting.setter
    def inventory_size_targeting(self, inventory_size_targeting):
        """Sets the inventory_size_targeting of this SendRfpRequest.


        :param inventory_size_targeting: The inventory_size_targeting of this SendRfpRequest.
        :type inventory_size_targeting: InventorySizeTargeting
        """

        self._inventory_size_targeting = inventory_size_targeting

    @property
    def note(self):
        """Gets the note of this SendRfpRequest.

        A message that is sent to the publisher. Maximum length is 1024 characters.

        :return: The note of this SendRfpRequest.
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this SendRfpRequest.

        A message that is sent to the publisher. Maximum length is 1024 characters.

        :param note: The note of this SendRfpRequest.
        :type note: str
        """

        self._note = note

    @property
    def preferred_deal_terms(self):
        """Gets the preferred_deal_terms of this SendRfpRequest.


        :return: The preferred_deal_terms of this SendRfpRequest.
        :rtype: PreferredDealTerms
        """
        return self._preferred_deal_terms

    @preferred_deal_terms.setter
    def preferred_deal_terms(self, preferred_deal_terms):
        """Sets the preferred_deal_terms of this SendRfpRequest.


        :param preferred_deal_terms: The preferred_deal_terms of this SendRfpRequest.
        :type preferred_deal_terms: PreferredDealTerms
        """

        self._preferred_deal_terms = preferred_deal_terms

    @property
    def programmatic_guaranteed_terms(self):
        """Gets the programmatic_guaranteed_terms of this SendRfpRequest.


        :return: The programmatic_guaranteed_terms of this SendRfpRequest.
        :rtype: ProgrammaticGuaranteedTerms
        """
        return self._programmatic_guaranteed_terms

    @programmatic_guaranteed_terms.setter
    def programmatic_guaranteed_terms(self, programmatic_guaranteed_terms):
        """Sets the programmatic_guaranteed_terms of this SendRfpRequest.


        :param programmatic_guaranteed_terms: The programmatic_guaranteed_terms of this SendRfpRequest.
        :type programmatic_guaranteed_terms: ProgrammaticGuaranteedTerms
        """

        self._programmatic_guaranteed_terms = programmatic_guaranteed_terms

    @property
    def publisher_profile(self):
        """Gets the publisher_profile of this SendRfpRequest.

        Required. The profile of the publisher who will receive this RFP in the format: `buyers/{accountId}/publisherProfiles/{publisherProfileId}`.

        :return: The publisher_profile of this SendRfpRequest.
        :rtype: str
        """
        return self._publisher_profile

    @publisher_profile.setter
    def publisher_profile(self, publisher_profile):
        """Sets the publisher_profile of this SendRfpRequest.

        Required. The profile of the publisher who will receive this RFP in the format: `buyers/{accountId}/publisherProfiles/{publisherProfileId}`.

        :param publisher_profile: The publisher_profile of this SendRfpRequest.
        :type publisher_profile: str
        """

        self._publisher_profile = publisher_profile
