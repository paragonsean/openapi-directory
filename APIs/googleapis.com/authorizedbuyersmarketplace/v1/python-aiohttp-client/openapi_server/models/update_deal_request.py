# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deal import Deal
from openapi_server import util


class UpdateDealRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deal: Deal=None, update_mask: str=None):
        """UpdateDealRequest - a model defined in OpenAPI

        :param deal: The deal of this UpdateDealRequest.
        :param update_mask: The update_mask of this UpdateDealRequest.
        """
        self.openapi_types = {
            'deal': Deal,
            'update_mask': str
        }

        self.attribute_map = {
            'deal': 'deal',
            'update_mask': 'updateMask'
        }

        self._deal = deal
        self._update_mask = update_mask

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateDealRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateDealRequest of this UpdateDealRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deal(self):
        """Gets the deal of this UpdateDealRequest.


        :return: The deal of this UpdateDealRequest.
        :rtype: Deal
        """
        return self._deal

    @deal.setter
    def deal(self, deal):
        """Sets the deal of this UpdateDealRequest.


        :param deal: The deal of this UpdateDealRequest.
        :type deal: Deal
        """

        self._deal = deal

    @property
    def update_mask(self):
        """Gets the update_mask of this UpdateDealRequest.

        List of fields to be updated. If empty or unspecified, the service will update all fields populated in the update request excluding the output only fields and primitive fields with default value. Note that explicit field mask is required in order to reset a primitive field back to its default value, for example, false for boolean fields, 0 for integer fields. A special field mask consisting of a single path \"*\" can be used to indicate full replacement(the equivalent of PUT method), updatable fields unset or unspecified in the input will be cleared or set to default value. Output only fields will be ignored regardless of the value of updateMask.

        :return: The update_mask of this UpdateDealRequest.
        :rtype: str
        """
        return self._update_mask

    @update_mask.setter
    def update_mask(self, update_mask):
        """Sets the update_mask of this UpdateDealRequest.

        List of fields to be updated. If empty or unspecified, the service will update all fields populated in the update request excluding the output only fields and primitive fields with default value. Note that explicit field mask is required in order to reset a primitive field back to its default value, for example, false for boolean fields, 0 for integer fields. A special field mask consisting of a single path \"*\" can be used to indicate full replacement(the equivalent of PUT method), updatable fields unset or unspecified in the input will be cleared or set to default value. Output only fields will be ignored regardless of the value of updateMask.

        :param update_mask: The update_mask of this UpdateDealRequest.
        :type update_mask: str
        """

        self._update_mask = update_mask
