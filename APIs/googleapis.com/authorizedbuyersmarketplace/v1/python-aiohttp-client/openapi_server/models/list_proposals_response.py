# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.proposal import Proposal
from openapi_server import util


class ListProposalsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_page_token: str=None, proposals: List[Proposal]=None):
        """ListProposalsResponse - a model defined in OpenAPI

        :param next_page_token: The next_page_token of this ListProposalsResponse.
        :param proposals: The proposals of this ListProposalsResponse.
        """
        self.openapi_types = {
            'next_page_token': str,
            'proposals': List[Proposal]
        }

        self.attribute_map = {
            'next_page_token': 'nextPageToken',
            'proposals': 'proposals'
        }

        self._next_page_token = next_page_token
        self._proposals = proposals

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListProposalsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListProposalsResponse of this ListProposalsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListProposalsResponse.

        Continuation token for fetching the next page of results.

        :return: The next_page_token of this ListProposalsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListProposalsResponse.

        Continuation token for fetching the next page of results.

        :param next_page_token: The next_page_token of this ListProposalsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def proposals(self):
        """Gets the proposals of this ListProposalsResponse.

        The list of proposals.

        :return: The proposals of this ListProposalsResponse.
        :rtype: List[Proposal]
        """
        return self._proposals

    @proposals.setter
    def proposals(self, proposals):
        """Sets the proposals of this ListProposalsResponse.

        The list of proposals.

        :param proposals: The proposals of this ListProposalsResponse.
        :type proposals: List[Proposal]
        """

        self._proposals = proposals
