# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddCreativeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creative: str=None):
        """AddCreativeRequest - a model defined in OpenAPI

        :param creative: The creative of this AddCreativeRequest.
        """
        self.openapi_types = {
            'creative': str
        }

        self.attribute_map = {
            'creative': 'creative'
        }

        self._creative = creative

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddCreativeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddCreativeRequest of this AddCreativeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creative(self):
        """Gets the creative of this AddCreativeRequest.

        Name of the creative to add to the finalized deal, in the format `buyers/{buyerAccountId}/creatives/{creativeId}`. See creative.name.

        :return: The creative of this AddCreativeRequest.
        :rtype: str
        """
        return self._creative

    @creative.setter
    def creative(self, creative):
        """Sets the creative of this AddCreativeRequest.

        Name of the creative to add to the finalized deal, in the format `buyers/{buyerAccountId}/creatives/{creativeId}`. See creative.name.

        :param creative: The creative of this AddCreativeRequest.
        :type creative: str
        """

        self._creative = creative
