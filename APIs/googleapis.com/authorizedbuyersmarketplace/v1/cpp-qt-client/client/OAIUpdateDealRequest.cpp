/**
 * Authorized Buyers Marketplace API
 * The Authorized Buyers Marketplace API lets buyers programmatically discover inventory; propose, retrieve and negotiate deals with publishers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateDealRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateDealRequest::OAIUpdateDealRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateDealRequest::OAIUpdateDealRequest() {
    this->initializeModel();
}

OAIUpdateDealRequest::~OAIUpdateDealRequest() {}

void OAIUpdateDealRequest::initializeModel() {

    m_deal_isSet = false;
    m_deal_isValid = false;

    m_update_mask_isSet = false;
    m_update_mask_isValid = false;
}

void OAIUpdateDealRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateDealRequest::fromJsonObject(QJsonObject json) {

    m_deal_isValid = ::OpenAPI::fromJsonValue(m_deal, json[QString("deal")]);
    m_deal_isSet = !json[QString("deal")].isNull() && m_deal_isValid;

    m_update_mask_isValid = ::OpenAPI::fromJsonValue(m_update_mask, json[QString("updateMask")]);
    m_update_mask_isSet = !json[QString("updateMask")].isNull() && m_update_mask_isValid;
}

QString OAIUpdateDealRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateDealRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_deal.isSet()) {
        obj.insert(QString("deal"), ::OpenAPI::toJsonValue(m_deal));
    }
    if (m_update_mask_isSet) {
        obj.insert(QString("updateMask"), ::OpenAPI::toJsonValue(m_update_mask));
    }
    return obj;
}

OAIDeal OAIUpdateDealRequest::getDeal() const {
    return m_deal;
}
void OAIUpdateDealRequest::setDeal(const OAIDeal &deal) {
    m_deal = deal;
    m_deal_isSet = true;
}

bool OAIUpdateDealRequest::is_deal_Set() const{
    return m_deal_isSet;
}

bool OAIUpdateDealRequest::is_deal_Valid() const{
    return m_deal_isValid;
}

QString OAIUpdateDealRequest::getUpdateMask() const {
    return m_update_mask;
}
void OAIUpdateDealRequest::setUpdateMask(const QString &update_mask) {
    m_update_mask = update_mask;
    m_update_mask_isSet = true;
}

bool OAIUpdateDealRequest::is_update_mask_Set() const{
    return m_update_mask_isSet;
}

bool OAIUpdateDealRequest::is_update_mask_Valid() const{
    return m_update_mask_isValid;
}

bool OAIUpdateDealRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_deal.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_mask_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateDealRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
