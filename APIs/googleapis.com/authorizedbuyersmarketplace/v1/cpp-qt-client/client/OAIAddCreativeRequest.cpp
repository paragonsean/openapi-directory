/**
 * Authorized Buyers Marketplace API
 * The Authorized Buyers Marketplace API lets buyers programmatically discover inventory; propose, retrieve and negotiate deals with publishers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddCreativeRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddCreativeRequest::OAIAddCreativeRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddCreativeRequest::OAIAddCreativeRequest() {
    this->initializeModel();
}

OAIAddCreativeRequest::~OAIAddCreativeRequest() {}

void OAIAddCreativeRequest::initializeModel() {

    m_creative_isSet = false;
    m_creative_isValid = false;
}

void OAIAddCreativeRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddCreativeRequest::fromJsonObject(QJsonObject json) {

    m_creative_isValid = ::OpenAPI::fromJsonValue(m_creative, json[QString("creative")]);
    m_creative_isSet = !json[QString("creative")].isNull() && m_creative_isValid;
}

QString OAIAddCreativeRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddCreativeRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_creative_isSet) {
        obj.insert(QString("creative"), ::OpenAPI::toJsonValue(m_creative));
    }
    return obj;
}

QString OAIAddCreativeRequest::getCreative() const {
    return m_creative;
}
void OAIAddCreativeRequest::setCreative(const QString &creative) {
    m_creative = creative;
    m_creative_isSet = true;
}

bool OAIAddCreativeRequest::is_creative_Set() const{
    return m_creative_isSet;
}

bool OAIAddCreativeRequest::is_creative_Valid() const{
    return m_creative_isValid;
}

bool OAIAddCreativeRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creative_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddCreativeRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
