/**
 * Authorized Buyers Marketplace API
 * The Authorized Buyers Marketplace API lets buyers programmatically discover inventory; propose, retrieve and negotiate deals with publishers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFinalizedDeal.h
 *
 * A finalized deal is a snapshot of the deal when both buyer and seller accept the deal. The buyer or seller can update the deal after it&#39;s been finalized and renegotiate on the deal targeting, terms and other fields, while at the same time the finalized snapshot of the deal can still be retrieved using this API. The finalized deal contains a copy of the deal as it existed when most recently finalized, as well as fields related to deal serving such as pause/resume status, RTB metrics, and more.
 */

#ifndef OAIFinalizedDeal_H
#define OAIFinalizedDeal_H

#include <QJsonObject>

#include "OAIDeal.h"
#include "OAIDealPausingInfo.h"
#include "OAIRtbMetrics.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDeal;
class OAIDealPausingInfo;
class OAIRtbMetrics;

class OAIFinalizedDeal : public OAIObject {
public:
    OAIFinalizedDeal();
    OAIFinalizedDeal(QString json);
    ~OAIFinalizedDeal() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDeal getDeal() const;
    void setDeal(const OAIDeal &deal);
    bool is_deal_Set() const;
    bool is_deal_Valid() const;

    OAIDealPausingInfo getDealPausingInfo() const;
    void setDealPausingInfo(const OAIDealPausingInfo &deal_pausing_info);
    bool is_deal_pausing_info_Set() const;
    bool is_deal_pausing_info_Valid() const;

    QString getDealServingStatus() const;
    void setDealServingStatus(const QString &deal_serving_status);
    bool is_deal_serving_status_Set() const;
    bool is_deal_serving_status_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isReadyToServe() const;
    void setReadyToServe(const bool &ready_to_serve);
    bool is_ready_to_serve_Set() const;
    bool is_ready_to_serve_Valid() const;

    OAIRtbMetrics getRtbMetrics() const;
    void setRtbMetrics(const OAIRtbMetrics &rtb_metrics);
    bool is_rtb_metrics_Set() const;
    bool is_rtb_metrics_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDeal m_deal;
    bool m_deal_isSet;
    bool m_deal_isValid;

    OAIDealPausingInfo m_deal_pausing_info;
    bool m_deal_pausing_info_isSet;
    bool m_deal_pausing_info_isValid;

    QString m_deal_serving_status;
    bool m_deal_serving_status_isSet;
    bool m_deal_serving_status_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_ready_to_serve;
    bool m_ready_to_serve_isSet;
    bool m_ready_to_serve_isValid;

    OAIRtbMetrics m_rtb_metrics;
    bool m_rtb_metrics_isSet;
    bool m_rtb_metrics_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFinalizedDeal)

#endif // OAIFinalizedDeal_H
