/**
 * Authorized Buyers Marketplace API
 * The Authorized Buyers Marketplace API lets buyers programmatically discover inventory; propose, retrieve and negotiate deals with publishers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMarketplaceTargeting.h
 *
 * Targeting represents different criteria that can be used to target inventory. For example, they can choose to target inventory only if the user is in the US. Multiple types of targeting are always applied as a logical AND, unless noted otherwise.
 */

#ifndef OAIMarketplaceTargeting_H
#define OAIMarketplaceTargeting_H

#include <QJsonObject>

#include "OAICriteriaTargeting.h"
#include "OAIDayPartTargeting.h"
#include "OAIInventorySizeTargeting.h"
#include "OAIInventoryTypeTargeting.h"
#include "OAIPlacementTargeting.h"
#include "OAITechnologyTargeting.h"
#include "OAIVideoTargeting.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDayPartTargeting;
class OAICriteriaTargeting;
class OAIInventorySizeTargeting;
class OAIInventoryTypeTargeting;
class OAIPlacementTargeting;
class OAITechnologyTargeting;
class OAIVideoTargeting;

class OAIMarketplaceTargeting : public OAIObject {
public:
    OAIMarketplaceTargeting();
    OAIMarketplaceTargeting(QString json);
    ~OAIMarketplaceTargeting() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDayPartTargeting getDaypartTargeting() const;
    void setDaypartTargeting(const OAIDayPartTargeting &daypart_targeting);
    bool is_daypart_targeting_Set() const;
    bool is_daypart_targeting_Valid() const;

    OAICriteriaTargeting getGeoTargeting() const;
    void setGeoTargeting(const OAICriteriaTargeting &geo_targeting);
    bool is_geo_targeting_Set() const;
    bool is_geo_targeting_Valid() const;

    OAIInventorySizeTargeting getInventorySizeTargeting() const;
    void setInventorySizeTargeting(const OAIInventorySizeTargeting &inventory_size_targeting);
    bool is_inventory_size_targeting_Set() const;
    bool is_inventory_size_targeting_Valid() const;

    OAIInventoryTypeTargeting getInventoryTypeTargeting() const;
    void setInventoryTypeTargeting(const OAIInventoryTypeTargeting &inventory_type_targeting);
    bool is_inventory_type_targeting_Set() const;
    bool is_inventory_type_targeting_Valid() const;

    OAIPlacementTargeting getPlacementTargeting() const;
    void setPlacementTargeting(const OAIPlacementTargeting &placement_targeting);
    bool is_placement_targeting_Set() const;
    bool is_placement_targeting_Valid() const;

    OAITechnologyTargeting getTechnologyTargeting() const;
    void setTechnologyTargeting(const OAITechnologyTargeting &technology_targeting);
    bool is_technology_targeting_Set() const;
    bool is_technology_targeting_Valid() const;

    OAICriteriaTargeting getUserListTargeting() const;
    void setUserListTargeting(const OAICriteriaTargeting &user_list_targeting);
    bool is_user_list_targeting_Set() const;
    bool is_user_list_targeting_Valid() const;

    OAIVideoTargeting getVideoTargeting() const;
    void setVideoTargeting(const OAIVideoTargeting &video_targeting);
    bool is_video_targeting_Set() const;
    bool is_video_targeting_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDayPartTargeting m_daypart_targeting;
    bool m_daypart_targeting_isSet;
    bool m_daypart_targeting_isValid;

    OAICriteriaTargeting m_geo_targeting;
    bool m_geo_targeting_isSet;
    bool m_geo_targeting_isValid;

    OAIInventorySizeTargeting m_inventory_size_targeting;
    bool m_inventory_size_targeting_isSet;
    bool m_inventory_size_targeting_isValid;

    OAIInventoryTypeTargeting m_inventory_type_targeting;
    bool m_inventory_type_targeting_isSet;
    bool m_inventory_type_targeting_isValid;

    OAIPlacementTargeting m_placement_targeting;
    bool m_placement_targeting_isSet;
    bool m_placement_targeting_isValid;

    OAITechnologyTargeting m_technology_targeting;
    bool m_technology_targeting_isSet;
    bool m_technology_targeting_isValid;

    OAICriteriaTargeting m_user_list_targeting;
    bool m_user_list_targeting_isSet;
    bool m_user_list_targeting_isValid;

    OAIVideoTargeting m_video_targeting;
    bool m_video_targeting_isSet;
    bool m_video_targeting_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMarketplaceTargeting)

#endif // OAIMarketplaceTargeting_H
