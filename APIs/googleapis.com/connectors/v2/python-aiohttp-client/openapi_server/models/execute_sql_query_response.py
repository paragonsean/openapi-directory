# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExecuteSqlQueryResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, results: List[Dict[str, object]]=None):
        """ExecuteSqlQueryResponse - a model defined in OpenAPI

        :param results: The results of this ExecuteSqlQueryResponse.
        """
        self.openapi_types = {
            'results': List[Dict[str, object]]
        }

        self.attribute_map = {
            'results': 'results'
        }

        self._results = results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExecuteSqlQueryResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExecuteSqlQueryResponse of this ExecuteSqlQueryResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def results(self):
        """Gets the results of this ExecuteSqlQueryResponse.

        In the case of successful execution of the query the response contains results returned by the external system. For example, the result rows of the query are contained in the 'results' Struct list - \"results\": [ { \"field1\": \"val1\", \"field2\": \"val2\",.. },.. ] Each Struct row can contain fields any type of like nested Structs or lists.

        :return: The results of this ExecuteSqlQueryResponse.
        :rtype: List[Dict[str, object]]
        """
        return self._results

    @results.setter
    def results(self, results):
        """Sets the results of this ExecuteSqlQueryResponse.

        In the case of successful execution of the query the response contains results returned by the external system. For example, the result rows of the query are contained in the 'results' Struct list - \"results\": [ { \"field1\": \"val1\", \"field2\": \"val2\",.. },.. ] Each Struct row can contain fields any type of like nested Structs or lists.

        :param results: The results of this ExecuteSqlQueryResponse.
        :type results: List[Dict[str, object]]
        """

        self._results = results
