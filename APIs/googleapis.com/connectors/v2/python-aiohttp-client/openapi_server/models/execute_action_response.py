# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExecuteActionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, results: List[Dict[str, object]]=None):
        """ExecuteActionResponse - a model defined in OpenAPI

        :param results: The results of this ExecuteActionResponse.
        """
        self.openapi_types = {
            'results': List[Dict[str, object]]
        }

        self.attribute_map = {
            'results': 'results'
        }

        self._results = results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExecuteActionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExecuteActionResponse of this ExecuteActionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def results(self):
        """Gets the results of this ExecuteActionResponse.

        In the case of successful invocation of the specified action, the results Struct contains values based on the response of the action invoked. 1. If the action execution produces any entities as a result, they are returned as an array of Structs with the 'key' being the field name and the 'value' being the value of that field in each result row. { 'results': [{'key': 'value'}, ...] }

        :return: The results of this ExecuteActionResponse.
        :rtype: List[Dict[str, object]]
        """
        return self._results

    @results.setter
    def results(self, results):
        """Sets the results of this ExecuteActionResponse.

        In the case of successful invocation of the specified action, the results Struct contains values based on the response of the action invoked. 1. If the action execution produces any entities as a result, they are returned as an array of Structs with the 'key' being the field name and the 'value' being the value of that field in each result row. { 'results': [{'key': 'value'}, ...] }

        :param results: The results of this ExecuteActionResponse.
        :type results: List[Dict[str, object]]
        """

        self._results = results
