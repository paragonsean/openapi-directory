# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.daily_cycle import DailyCycle
from openapi_server.models.weekly_cycle import WeeklyCycle
from openapi_server import util


class MaintenanceWindow(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, daily_cycle: DailyCycle=None, weekly_cycle: WeeklyCycle=None):
        """MaintenanceWindow - a model defined in OpenAPI

        :param daily_cycle: The daily_cycle of this MaintenanceWindow.
        :param weekly_cycle: The weekly_cycle of this MaintenanceWindow.
        """
        self.openapi_types = {
            'daily_cycle': DailyCycle,
            'weekly_cycle': WeeklyCycle
        }

        self.attribute_map = {
            'daily_cycle': 'dailyCycle',
            'weekly_cycle': 'weeklyCycle'
        }

        self._daily_cycle = daily_cycle
        self._weekly_cycle = weekly_cycle

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MaintenanceWindow':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MaintenanceWindow of this MaintenanceWindow.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def daily_cycle(self):
        """Gets the daily_cycle of this MaintenanceWindow.


        :return: The daily_cycle of this MaintenanceWindow.
        :rtype: DailyCycle
        """
        return self._daily_cycle

    @daily_cycle.setter
    def daily_cycle(self, daily_cycle):
        """Sets the daily_cycle of this MaintenanceWindow.


        :param daily_cycle: The daily_cycle of this MaintenanceWindow.
        :type daily_cycle: DailyCycle
        """

        self._daily_cycle = daily_cycle

    @property
    def weekly_cycle(self):
        """Gets the weekly_cycle of this MaintenanceWindow.


        :return: The weekly_cycle of this MaintenanceWindow.
        :rtype: WeeklyCycle
        """
        return self._weekly_cycle

    @weekly_cycle.setter
    def weekly_cycle(self, weekly_cycle):
        """Sets the weekly_cycle of this MaintenanceWindow.


        :param weekly_cycle: The weekly_cycle of this MaintenanceWindow.
        :type weekly_cycle: WeeklyCycle
        """

        self._weekly_cycle = weekly_cycle
