/**
 * Connectors API
 * Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AccessCredentials model module.
 * @module model/AccessCredentials
 * @version v2
 */
class AccessCredentials {
    /**
     * Constructs a new <code>AccessCredentials</code>.
     * AccessCredentials includes the OAuth access token, and the other fields returned along with it.
     * @alias module:model/AccessCredentials
     */
    constructor() { 
        
        AccessCredentials.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AccessCredentials</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccessCredentials} obj Optional instance to populate.
     * @return {module:model/AccessCredentials} The populated <code>AccessCredentials</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccessCredentials();

            if (data.hasOwnProperty('accessToken')) {
                obj['accessToken'] = ApiClient.convertToType(data['accessToken'], 'String');
            }
            if (data.hasOwnProperty('expiresIn')) {
                obj['expiresIn'] = ApiClient.convertToType(data['expiresIn'], 'String');
            }
            if (data.hasOwnProperty('refreshToken')) {
                obj['refreshToken'] = ApiClient.convertToType(data['refreshToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccessCredentials</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccessCredentials</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accessToken'] && !(typeof data['accessToken'] === 'string' || data['accessToken'] instanceof String)) {
            throw new Error("Expected the field `accessToken` to be a primitive type in the JSON string but got " + data['accessToken']);
        }
        // ensure the json data is a string
        if (data['expiresIn'] && !(typeof data['expiresIn'] === 'string' || data['expiresIn'] instanceof String)) {
            throw new Error("Expected the field `expiresIn` to be a primitive type in the JSON string but got " + data['expiresIn']);
        }
        // ensure the json data is a string
        if (data['refreshToken'] && !(typeof data['refreshToken'] === 'string' || data['refreshToken'] instanceof String)) {
            throw new Error("Expected the field `refreshToken` to be a primitive type in the JSON string but got " + data['refreshToken']);
        }

        return true;
    }


}



/**
 * OAuth access token.
 * @member {String} accessToken
 */
AccessCredentials.prototype['accessToken'] = undefined;

/**
 * Duration till the access token expires.
 * @member {String} expiresIn
 */
AccessCredentials.prototype['expiresIn'] = undefined;

/**
 * OAuth refresh token.
 * @member {String} refreshToken
 */
AccessCredentials.prototype['refreshToken'] = undefined;






export default AccessCredentials;

