/**
 * Connectors API
 * Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProvisionedResource model module.
 * @module model/ProvisionedResource
 * @version v2
 */
class ProvisionedResource {
    /**
     * Constructs a new <code>ProvisionedResource</code>.
     * Describes provisioned dataplane resources.
     * @alias module:model/ProvisionedResource
     */
    constructor() { 
        
        ProvisionedResource.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProvisionedResource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProvisionedResource} obj Optional instance to populate.
     * @return {module:model/ProvisionedResource} The populated <code>ProvisionedResource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProvisionedResource();

            if (data.hasOwnProperty('resourceType')) {
                obj['resourceType'] = ApiClient.convertToType(data['resourceType'], 'String');
            }
            if (data.hasOwnProperty('resourceUrl')) {
                obj['resourceUrl'] = ApiClient.convertToType(data['resourceUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProvisionedResource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProvisionedResource</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['resourceType'] && !(typeof data['resourceType'] === 'string' || data['resourceType'] instanceof String)) {
            throw new Error("Expected the field `resourceType` to be a primitive type in the JSON string but got " + data['resourceType']);
        }
        // ensure the json data is a string
        if (data['resourceUrl'] && !(typeof data['resourceUrl'] === 'string' || data['resourceUrl'] instanceof String)) {
            throw new Error("Expected the field `resourceUrl` to be a primitive type in the JSON string but got " + data['resourceUrl']);
        }

        return true;
    }


}



/**
 * Type of the resource. This can be either a GCP resource or a custom one (e.g. another cloud provider's VM). For GCP compute resources use singular form of the names listed in GCP compute API documentation (https://cloud.google.com/compute/docs/reference/rest/v1/), prefixed with 'compute-', for example: 'compute-instance', 'compute-disk', 'compute-autoscaler'.
 * @member {String} resourceType
 */
ProvisionedResource.prototype['resourceType'] = undefined;

/**
 * URL identifying the resource, e.g. \"https://www.googleapis.com/compute/v1/projects/...)\".
 * @member {String} resourceUrl
 */
ProvisionedResource.prototype['resourceUrl'] = undefined;






export default ProvisionedResource;

