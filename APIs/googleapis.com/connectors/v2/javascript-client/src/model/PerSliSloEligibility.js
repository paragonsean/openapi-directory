/**
 * Connectors API
 * Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SloEligibility from './SloEligibility';

/**
 * The PerSliSloEligibility model module.
 * @module model/PerSliSloEligibility
 * @version v2
 */
class PerSliSloEligibility {
    /**
     * Constructs a new <code>PerSliSloEligibility</code>.
     * PerSliSloEligibility is a mapping from an SLI name to eligibility.
     * @alias module:model/PerSliSloEligibility
     */
    constructor() { 
        
        PerSliSloEligibility.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PerSliSloEligibility</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PerSliSloEligibility} obj Optional instance to populate.
     * @return {module:model/PerSliSloEligibility} The populated <code>PerSliSloEligibility</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PerSliSloEligibility();

            if (data.hasOwnProperty('eligibilities')) {
                obj['eligibilities'] = ApiClient.convertToType(data['eligibilities'], {'String': SloEligibility});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PerSliSloEligibility</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PerSliSloEligibility</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * An entry in the eligibilities map specifies an eligibility for a particular SLI for the given instance. The SLI key in the name must be a valid SLI name specified in the Eligibility Exporter binary flags otherwise an error will be emitted by Eligibility Exporter and the oncaller will be alerted. If an SLI has been defined in the binary flags but the eligibilities map does not contain it, the corresponding SLI time series will not be emitted by the Eligibility Exporter. This ensures a smooth rollout and compatibility between the data produced by different versions of the Eligibility Exporters. If eligibilities map contains a key for an SLI which has not been declared in the binary flags, there will be an error message emitted in the Eligibility Exporter log and the metric for the SLI in question will not be emitted.
 * @member {Object.<String, module:model/SloEligibility>} eligibilities
 */
PerSliSloEligibility.prototype['eligibilities'] = undefined;






export default PerSliSloEligibility;

