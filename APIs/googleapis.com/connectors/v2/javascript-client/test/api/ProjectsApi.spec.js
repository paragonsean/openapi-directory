/**
 * Connectors API
 * Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ConnectorsApi);
  }
}(this, function(expect, ConnectorsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ConnectorsApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('connectorsProjectsLocationsConnectionsActionsExecute', function() {
      it('should call connectorsProjectsLocationsConnectionsActionsExecute successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsActionsExecute
        //instance.connectorsProjectsLocationsConnectionsActionsExecute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsActionsList', function() {
      it('should call connectorsProjectsLocationsConnectionsActionsList successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsActionsList
        //instance.connectorsProjectsLocationsConnectionsActionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsCheckReadiness', function() {
      it('should call connectorsProjectsLocationsConnectionsCheckReadiness successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsCheckReadiness
        //instance.connectorsProjectsLocationsConnectionsCheckReadiness(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsCheckStatus', function() {
      it('should call connectorsProjectsLocationsConnectionsCheckStatus successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsCheckStatus
        //instance.connectorsProjectsLocationsConnectionsCheckStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsEntityTypesEntitiesCreate', function() {
      it('should call connectorsProjectsLocationsConnectionsEntityTypesEntitiesCreate successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsEntityTypesEntitiesCreate
        //instance.connectorsProjectsLocationsConnectionsEntityTypesEntitiesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsEntityTypesEntitiesDelete', function() {
      it('should call connectorsProjectsLocationsConnectionsEntityTypesEntitiesDelete successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsEntityTypesEntitiesDelete
        //instance.connectorsProjectsLocationsConnectionsEntityTypesEntitiesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsEntityTypesEntitiesDeleteEntitiesWithConditions', function() {
      it('should call connectorsProjectsLocationsConnectionsEntityTypesEntitiesDeleteEntitiesWithConditions successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsEntityTypesEntitiesDeleteEntitiesWithConditions
        //instance.connectorsProjectsLocationsConnectionsEntityTypesEntitiesDeleteEntitiesWithConditions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsEntityTypesEntitiesGet', function() {
      it('should call connectorsProjectsLocationsConnectionsEntityTypesEntitiesGet successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsEntityTypesEntitiesGet
        //instance.connectorsProjectsLocationsConnectionsEntityTypesEntitiesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsEntityTypesEntitiesList', function() {
      it('should call connectorsProjectsLocationsConnectionsEntityTypesEntitiesList successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsEntityTypesEntitiesList
        //instance.connectorsProjectsLocationsConnectionsEntityTypesEntitiesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsEntityTypesEntitiesPatch', function() {
      it('should call connectorsProjectsLocationsConnectionsEntityTypesEntitiesPatch successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsEntityTypesEntitiesPatch
        //instance.connectorsProjectsLocationsConnectionsEntityTypesEntitiesPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsEntityTypesEntitiesUpdateEntitiesWithConditions', function() {
      it('should call connectorsProjectsLocationsConnectionsEntityTypesEntitiesUpdateEntitiesWithConditions successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsEntityTypesEntitiesUpdateEntitiesWithConditions
        //instance.connectorsProjectsLocationsConnectionsEntityTypesEntitiesUpdateEntitiesWithConditions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsEntityTypesList', function() {
      it('should call connectorsProjectsLocationsConnectionsEntityTypesList successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsEntityTypesList
        //instance.connectorsProjectsLocationsConnectionsEntityTypesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsExchangeAuthCode', function() {
      it('should call connectorsProjectsLocationsConnectionsExchangeAuthCode successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsExchangeAuthCode
        //instance.connectorsProjectsLocationsConnectionsExchangeAuthCode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsExecuteSqlQuery', function() {
      it('should call connectorsProjectsLocationsConnectionsExecuteSqlQuery successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsExecuteSqlQuery
        //instance.connectorsProjectsLocationsConnectionsExecuteSqlQuery(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsRefreshAccessToken', function() {
      it('should call connectorsProjectsLocationsConnectionsRefreshAccessToken successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsRefreshAccessToken
        //instance.connectorsProjectsLocationsConnectionsRefreshAccessToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
