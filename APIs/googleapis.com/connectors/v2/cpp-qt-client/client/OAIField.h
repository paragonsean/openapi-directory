/**
 * Connectors API
 * Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIField.h
 *
 * Message contains EntityType&#39;s Field metadata.
 */

#ifndef OAIField_H
#define OAIField_H

#include <QJsonObject>

#include "OAIJsonSchema.h"
#include "OAIReference.h"
#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIJsonSchema;
class OAIReference;

class OAIField : public OAIObject {
public:
    OAIField();
    OAIField(QString json);
    ~OAIField() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QJsonValue> getAdditionalDetails() const;
    void setAdditionalDetails(const QMap<QString, QJsonValue> &additional_details);
    bool is_additional_details_Set() const;
    bool is_additional_details_Valid() const;

    QString getDataType() const;
    void setDataType(const QString &data_type);
    bool is_data_type_Set() const;
    bool is_data_type_Valid() const;

    QJsonValue getDefaultValue() const;
    void setDefaultValue(const QJsonValue &default_value);
    bool is_default_value_Set() const;
    bool is_default_value_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIJsonSchema getJsonSchema() const;
    void setJsonSchema(const OAIJsonSchema &json_schema);
    bool is_json_schema_Set() const;
    bool is_json_schema_Valid() const;

    bool isKey() const;
    void setKey(const bool &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isNullable() const;
    void setNullable(const bool &nullable);
    bool is_nullable_Set() const;
    bool is_nullable_Valid() const;

    OAIReference getReference() const;
    void setReference(const OAIReference &reference);
    bool is_reference_Set() const;
    bool is_reference_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QJsonValue> m_additional_details;
    bool m_additional_details_isSet;
    bool m_additional_details_isValid;

    QString m_data_type;
    bool m_data_type_isSet;
    bool m_data_type_isValid;

    QJsonValue m_default_value;
    bool m_default_value_isSet;
    bool m_default_value_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIJsonSchema m_json_schema;
    bool m_json_schema_isSet;
    bool m_json_schema_isValid;

    bool m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_nullable;
    bool m_nullable_isSet;
    bool m_nullable_isValid;

    OAIReference m_reference;
    bool m_reference_isSet;
    bool m_reference_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIField)

#endif // OAIField_H
