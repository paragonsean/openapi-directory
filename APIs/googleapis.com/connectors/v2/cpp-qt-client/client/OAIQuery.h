/**
 * Connectors API
 * Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQuery.h
 *
 * A wrapper around the SQL query statement. This is needed so that the JSON representation of ExecuteSqlQueryRequest has the following format: &#x60;{\&quot;query\&quot;:\&quot;select *\&quot;}&#x60;.
 */

#ifndef OAIQuery_H
#define OAIQuery_H

#include <QJsonObject>

#include "OAIQueryParameter.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIQueryParameter;

class OAIQuery : public OAIObject {
public:
    OAIQuery();
    OAIQuery(QString json);
    ~OAIQuery() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMaxRows() const;
    void setMaxRows(const QString &max_rows);
    bool is_max_rows_Set() const;
    bool is_max_rows_Valid() const;

    QString getQuery() const;
    void setQuery(const QString &query);
    bool is_query_Set() const;
    bool is_query_Valid() const;

    QList<OAIQueryParameter> getQueryParameters() const;
    void setQueryParameters(const QList<OAIQueryParameter> &query_parameters);
    bool is_query_parameters_Set() const;
    bool is_query_parameters_Valid() const;

    QString getTimeout() const;
    void setTimeout(const QString &timeout);
    bool is_timeout_Set() const;
    bool is_timeout_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_max_rows;
    bool m_max_rows_isSet;
    bool m_max_rows_isValid;

    QString m_query;
    bool m_query_isSet;
    bool m_query_isValid;

    QList<OAIQueryParameter> m_query_parameters;
    bool m_query_parameters_isSet;
    bool m_query_parameters_isValid;

    QString m_timeout;
    bool m_timeout_isSet;
    bool m_timeout_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQuery)

#endif // OAIQuery_H
