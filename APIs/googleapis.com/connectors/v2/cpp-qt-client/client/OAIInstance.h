/**
 * Connectors API
 * Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInstance.h
 *
 * Instance represents the interface for SLM services to actuate the state of control plane resources. Example Instance in JSON, where consumer-project-number&#x3D;123456, producer-project-id&#x3D;cloud-sql: &#x60;&#x60;&#x60;json Instance: { \&quot;name\&quot;: \&quot;projects/123456/locations/us-east1/instances/prod-instance\&quot;, \&quot;create_time\&quot;: { \&quot;seconds\&quot;: 1526406431, }, \&quot;labels\&quot;: { \&quot;env\&quot;: \&quot;prod\&quot;, \&quot;foo\&quot;: \&quot;bar\&quot; }, \&quot;state\&quot;: READY, \&quot;software_versions\&quot;: { \&quot;software_update\&quot;: \&quot;cloud-sql-09-28-2018\&quot;, }, \&quot;maintenance_policy_names\&quot;: { \&quot;UpdatePolicy\&quot;: \&quot;projects/123456/locations/us-east1/maintenancePolicies/prod-update-policy\&quot;, } \&quot;tenant_project_id\&quot;: \&quot;cloud-sql-test-tenant\&quot;, \&quot;producer_metadata\&quot;: { \&quot;cloud-sql-tier\&quot;: \&quot;basic\&quot;, \&quot;cloud-sql-instance-size\&quot;: \&quot;1G\&quot;, }, \&quot;provisioned_resources\&quot;: [ { \&quot;resource-type\&quot;: \&quot;compute-instance\&quot;, \&quot;resource-url\&quot;: \&quot;https://www.googleapis.com/compute/v1/projects/cloud-sql/zones/us-east1-b/instances/vm-1\&quot;, } ], \&quot;maintenance_schedules\&quot;: { \&quot;csa_rollout\&quot;: { \&quot;start_time\&quot;: { \&quot;seconds\&quot;: 1526406431, }, \&quot;end_time\&quot;: { \&quot;seconds\&quot;: 1535406431, }, }, \&quot;ncsa_rollout\&quot;: { \&quot;start_time\&quot;: { \&quot;seconds\&quot;: 1526406431, }, \&quot;end_time\&quot;: { \&quot;seconds\&quot;: 1535406431, }, } }, \&quot;consumer_defined_name\&quot;: \&quot;my-sql-instance1\&quot;, } &#x60;&#x60;&#x60; LINT.IfChange
 */

#ifndef OAIInstance_H
#define OAIInstance_H

#include <QJsonObject>

#include "OAIMaintenanceSchedule.h"
#include "OAIMaintenanceSettings.h"
#include "OAINotificationParameter.h"
#include "OAIProvisionedResource.h"
#include "OAISloMetadata.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMaintenanceSchedule;
class OAIMaintenanceSettings;
class OAINotificationParameter;
class OAIProvisionedResource;
class OAISloMetadata;

class OAIInstance : public OAIObject {
public:
    OAIInstance();
    OAIInstance(QString json);
    ~OAIInstance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConsumerDefinedName() const;
    void setConsumerDefinedName(const QString &consumer_defined_name);
    bool is_consumer_defined_name_Set() const;
    bool is_consumer_defined_name_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getInstanceType() const;
    void setInstanceType(const QString &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QMap<QString, QString> getMaintenancePolicyNames() const;
    void setMaintenancePolicyNames(const QMap<QString, QString> &maintenance_policy_names);
    bool is_maintenance_policy_names_Set() const;
    bool is_maintenance_policy_names_Valid() const;

    QMap<QString, OAIMaintenanceSchedule> getMaintenanceSchedules() const;
    void setMaintenanceSchedules(const QMap<QString, OAIMaintenanceSchedule> &maintenance_schedules);
    bool is_maintenance_schedules_Set() const;
    bool is_maintenance_schedules_Valid() const;

    OAIMaintenanceSettings getMaintenanceSettings() const;
    void setMaintenanceSettings(const OAIMaintenanceSettings &maintenance_settings);
    bool is_maintenance_settings_Set() const;
    bool is_maintenance_settings_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QMap<QString, OAINotificationParameter> getNotificationParameters() const;
    void setNotificationParameters(const QMap<QString, OAINotificationParameter> &notification_parameters);
    bool is_notification_parameters_Set() const;
    bool is_notification_parameters_Valid() const;

    QMap<QString, QString> getProducerMetadata() const;
    void setProducerMetadata(const QMap<QString, QString> &producer_metadata);
    bool is_producer_metadata_Set() const;
    bool is_producer_metadata_Valid() const;

    QList<OAIProvisionedResource> getProvisionedResources() const;
    void setProvisionedResources(const QList<OAIProvisionedResource> &provisioned_resources);
    bool is_provisioned_resources_Set() const;
    bool is_provisioned_resources_Valid() const;

    QString getSlmInstanceTemplate() const;
    void setSlmInstanceTemplate(const QString &slm_instance_template);
    bool is_slm_instance_template_Set() const;
    bool is_slm_instance_template_Valid() const;

    OAISloMetadata getSloMetadata() const;
    void setSloMetadata(const OAISloMetadata &slo_metadata);
    bool is_slo_metadata_Set() const;
    bool is_slo_metadata_Valid() const;

    QMap<QString, QString> getSoftwareVersions() const;
    void setSoftwareVersions(const QMap<QString, QString> &software_versions);
    bool is_software_versions_Set() const;
    bool is_software_versions_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getTenantProjectId() const;
    void setTenantProjectId(const QString &tenant_project_id);
    bool is_tenant_project_id_Set() const;
    bool is_tenant_project_id_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_consumer_defined_name;
    bool m_consumer_defined_name_isSet;
    bool m_consumer_defined_name_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QMap<QString, QString> m_maintenance_policy_names;
    bool m_maintenance_policy_names_isSet;
    bool m_maintenance_policy_names_isValid;

    QMap<QString, OAIMaintenanceSchedule> m_maintenance_schedules;
    bool m_maintenance_schedules_isSet;
    bool m_maintenance_schedules_isValid;

    OAIMaintenanceSettings m_maintenance_settings;
    bool m_maintenance_settings_isSet;
    bool m_maintenance_settings_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QMap<QString, OAINotificationParameter> m_notification_parameters;
    bool m_notification_parameters_isSet;
    bool m_notification_parameters_isValid;

    QMap<QString, QString> m_producer_metadata;
    bool m_producer_metadata_isSet;
    bool m_producer_metadata_isValid;

    QList<OAIProvisionedResource> m_provisioned_resources;
    bool m_provisioned_resources_isSet;
    bool m_provisioned_resources_isValid;

    QString m_slm_instance_template;
    bool m_slm_instance_template_isSet;
    bool m_slm_instance_template_isValid;

    OAISloMetadata m_slo_metadata;
    bool m_slo_metadata_isSet;
    bool m_slo_metadata_isValid;

    QMap<QString, QString> m_software_versions;
    bool m_software_versions_isSet;
    bool m_software_versions_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_tenant_project_id;
    bool m_tenant_project_id_isSet;
    bool m_tenant_project_id_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInstance)

#endif // OAIInstance_H
