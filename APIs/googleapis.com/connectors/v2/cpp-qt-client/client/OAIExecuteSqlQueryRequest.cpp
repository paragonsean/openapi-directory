/**
 * Connectors API
 * Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExecuteSqlQueryRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExecuteSqlQueryRequest::OAIExecuteSqlQueryRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExecuteSqlQueryRequest::OAIExecuteSqlQueryRequest() {
    this->initializeModel();
}

OAIExecuteSqlQueryRequest::~OAIExecuteSqlQueryRequest() {}

void OAIExecuteSqlQueryRequest::initializeModel() {

    m_query_isSet = false;
    m_query_isValid = false;
}

void OAIExecuteSqlQueryRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExecuteSqlQueryRequest::fromJsonObject(QJsonObject json) {

    m_query_isValid = ::OpenAPI::fromJsonValue(m_query, json[QString("query")]);
    m_query_isSet = !json[QString("query")].isNull() && m_query_isValid;
}

QString OAIExecuteSqlQueryRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExecuteSqlQueryRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_query.isSet()) {
        obj.insert(QString("query"), ::OpenAPI::toJsonValue(m_query));
    }
    return obj;
}

OAIQuery OAIExecuteSqlQueryRequest::getQuery() const {
    return m_query;
}
void OAIExecuteSqlQueryRequest::setQuery(const OAIQuery &query) {
    m_query = query;
    m_query_isSet = true;
}

bool OAIExecuteSqlQueryRequest::is_query_Set() const{
    return m_query_isSet;
}

bool OAIExecuteSqlQueryRequest::is_query_Valid() const{
    return m_query_isValid;
}

bool OAIExecuteSqlQueryRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_query.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExecuteSqlQueryRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
