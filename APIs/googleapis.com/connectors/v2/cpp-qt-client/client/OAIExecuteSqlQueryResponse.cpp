/**
 * Connectors API
 * Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExecuteSqlQueryResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExecuteSqlQueryResponse::OAIExecuteSqlQueryResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExecuteSqlQueryResponse::OAIExecuteSqlQueryResponse() {
    this->initializeModel();
}

OAIExecuteSqlQueryResponse::~OAIExecuteSqlQueryResponse() {}

void OAIExecuteSqlQueryResponse::initializeModel() {

    m_results_isSet = false;
    m_results_isValid = false;
}

void OAIExecuteSqlQueryResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExecuteSqlQueryResponse::fromJsonObject(QJsonObject json) {

    if(json["results"].isArray()){
        auto arr = json["results"].toArray();
        m_results_isValid = true;
        if(arr.count() > 0) {
            for (const QJsonValue jval : arr) {
                QMap<QString, QJsonValue> item;
                m_results_isValid &= ::OpenAPI::fromJsonValue(item, jval);
                m_results_isSet = !jval.isNull() && m_results_isValid;
                m_results.push_back(item);
            }
        }
    }
}

QString OAIExecuteSqlQueryResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExecuteSqlQueryResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_results.size() > 0) {
        
        obj.insert(QString("results"), toJsonValue(m_results));
    }
    return obj;
}

QList<QMap<QString, QJsonValue>> OAIExecuteSqlQueryResponse::getResults() const {
    return m_results;
}
void OAIExecuteSqlQueryResponse::setResults(const QList<QMap<QString, QJsonValue>> &results) {
    m_results = results;
    m_results_isSet = true;
}

bool OAIExecuteSqlQueryResponse::is_results_Set() const{
    return m_results_isSet;
}

bool OAIExecuteSqlQueryResponse::is_results_Valid() const{
    return m_results_isValid;
}

bool OAIExecuteSqlQueryResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_results.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExecuteSqlQueryResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
