/**
 * Connectors API
 * Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRoleGrant.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRoleGrant::OAIRoleGrant(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRoleGrant::OAIRoleGrant() {
    this->initializeModel();
}

OAIRoleGrant::~OAIRoleGrant() {}

void OAIRoleGrant::initializeModel() {

    m_helper_text_template_isSet = false;
    m_helper_text_template_isValid = false;

    m_principal_isSet = false;
    m_principal_isValid = false;

    m_resource_isSet = false;
    m_resource_isValid = false;

    m_roles_isSet = false;
    m_roles_isValid = false;
}

void OAIRoleGrant::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRoleGrant::fromJsonObject(QJsonObject json) {

    m_helper_text_template_isValid = ::OpenAPI::fromJsonValue(m_helper_text_template, json[QString("helperTextTemplate")]);
    m_helper_text_template_isSet = !json[QString("helperTextTemplate")].isNull() && m_helper_text_template_isValid;

    m_principal_isValid = ::OpenAPI::fromJsonValue(m_principal, json[QString("principal")]);
    m_principal_isSet = !json[QString("principal")].isNull() && m_principal_isValid;

    m_resource_isValid = ::OpenAPI::fromJsonValue(m_resource, json[QString("resource")]);
    m_resource_isSet = !json[QString("resource")].isNull() && m_resource_isValid;

    m_roles_isValid = ::OpenAPI::fromJsonValue(m_roles, json[QString("roles")]);
    m_roles_isSet = !json[QString("roles")].isNull() && m_roles_isValid;
}

QString OAIRoleGrant::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRoleGrant::asJsonObject() const {
    QJsonObject obj;
    if (m_helper_text_template_isSet) {
        obj.insert(QString("helperTextTemplate"), ::OpenAPI::toJsonValue(m_helper_text_template));
    }
    if (m_principal_isSet) {
        obj.insert(QString("principal"), ::OpenAPI::toJsonValue(m_principal));
    }
    if (m_resource.isSet()) {
        obj.insert(QString("resource"), ::OpenAPI::toJsonValue(m_resource));
    }
    if (m_roles.size() > 0) {
        obj.insert(QString("roles"), ::OpenAPI::toJsonValue(m_roles));
    }
    return obj;
}

QString OAIRoleGrant::getHelperTextTemplate() const {
    return m_helper_text_template;
}
void OAIRoleGrant::setHelperTextTemplate(const QString &helper_text_template) {
    m_helper_text_template = helper_text_template;
    m_helper_text_template_isSet = true;
}

bool OAIRoleGrant::is_helper_text_template_Set() const{
    return m_helper_text_template_isSet;
}

bool OAIRoleGrant::is_helper_text_template_Valid() const{
    return m_helper_text_template_isValid;
}

QString OAIRoleGrant::getPrincipal() const {
    return m_principal;
}
void OAIRoleGrant::setPrincipal(const QString &principal) {
    m_principal = principal;
    m_principal_isSet = true;
}

bool OAIRoleGrant::is_principal_Set() const{
    return m_principal_isSet;
}

bool OAIRoleGrant::is_principal_Valid() const{
    return m_principal_isValid;
}

OAIResource OAIRoleGrant::getResource() const {
    return m_resource;
}
void OAIRoleGrant::setResource(const OAIResource &resource) {
    m_resource = resource;
    m_resource_isSet = true;
}

bool OAIRoleGrant::is_resource_Set() const{
    return m_resource_isSet;
}

bool OAIRoleGrant::is_resource_Valid() const{
    return m_resource_isValid;
}

QList<QString> OAIRoleGrant::getRoles() const {
    return m_roles;
}
void OAIRoleGrant::setRoles(const QList<QString> &roles) {
    m_roles = roles;
    m_roles_isSet = true;
}

bool OAIRoleGrant::is_roles_Set() const{
    return m_roles_isSet;
}

bool OAIRoleGrant::is_roles_Valid() const{
    return m_roles_isValid;
}

bool OAIRoleGrant::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_helper_text_template_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_principal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_roles.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRoleGrant::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
