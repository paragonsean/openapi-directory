/**
 * Connectors API
 * Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISettings::OAISettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISettings::OAISettings() {
    this->initializeModel();
}

OAISettings::~OAISettings() {}

void OAISettings::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_payg_isSet = false;
    m_payg_isValid = false;

    m_tenant_project_id_isSet = false;
    m_tenant_project_id_isValid = false;

    m_vpcsc_isSet = false;
    m_vpcsc_isValid = false;
}

void OAISettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISettings::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_payg_isValid = ::OpenAPI::fromJsonValue(m_payg, json[QString("payg")]);
    m_payg_isSet = !json[QString("payg")].isNull() && m_payg_isValid;

    m_tenant_project_id_isValid = ::OpenAPI::fromJsonValue(m_tenant_project_id, json[QString("tenantProjectId")]);
    m_tenant_project_id_isSet = !json[QString("tenantProjectId")].isNull() && m_tenant_project_id_isValid;

    m_vpcsc_isValid = ::OpenAPI::fromJsonValue(m_vpcsc, json[QString("vpcsc")]);
    m_vpcsc_isSet = !json[QString("vpcsc")].isNull() && m_vpcsc_isValid;
}

QString OAISettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISettings::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_payg_isSet) {
        obj.insert(QString("payg"), ::OpenAPI::toJsonValue(m_payg));
    }
    if (m_tenant_project_id_isSet) {
        obj.insert(QString("tenantProjectId"), ::OpenAPI::toJsonValue(m_tenant_project_id));
    }
    if (m_vpcsc_isSet) {
        obj.insert(QString("vpcsc"), ::OpenAPI::toJsonValue(m_vpcsc));
    }
    return obj;
}

QString OAISettings::getName() const {
    return m_name;
}
void OAISettings::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAISettings::is_name_Set() const{
    return m_name_isSet;
}

bool OAISettings::is_name_Valid() const{
    return m_name_isValid;
}

bool OAISettings::isPayg() const {
    return m_payg;
}
void OAISettings::setPayg(const bool &payg) {
    m_payg = payg;
    m_payg_isSet = true;
}

bool OAISettings::is_payg_Set() const{
    return m_payg_isSet;
}

bool OAISettings::is_payg_Valid() const{
    return m_payg_isValid;
}

QString OAISettings::getTenantProjectId() const {
    return m_tenant_project_id;
}
void OAISettings::setTenantProjectId(const QString &tenant_project_id) {
    m_tenant_project_id = tenant_project_id;
    m_tenant_project_id_isSet = true;
}

bool OAISettings::is_tenant_project_id_Set() const{
    return m_tenant_project_id_isSet;
}

bool OAISettings::is_tenant_project_id_Valid() const{
    return m_tenant_project_id_isValid;
}

bool OAISettings::isVpcsc() const {
    return m_vpcsc;
}
void OAISettings::setVpcsc(const bool &vpcsc) {
    m_vpcsc = vpcsc;
    m_vpcsc_isSet = true;
}

bool OAISettings::is_vpcsc_Set() const{
    return m_vpcsc_isSet;
}

bool OAISettings::is_vpcsc_Valid() const{
    return m_vpcsc_isValid;
}

bool OAISettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payg_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tenant_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vpcsc_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
