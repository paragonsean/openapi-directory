/**
 * Connectors API
 * Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMaintenanceSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMaintenanceSettings::OAIMaintenanceSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMaintenanceSettings::OAIMaintenanceSettings() {
    this->initializeModel();
}

OAIMaintenanceSettings::~OAIMaintenanceSettings() {}

void OAIMaintenanceSettings::initializeModel() {

    m_exclude_isSet = false;
    m_exclude_isValid = false;

    m_is_rollback_isSet = false;
    m_is_rollback_isValid = false;

    m_maintenance_policies_isSet = false;
    m_maintenance_policies_isValid = false;
}

void OAIMaintenanceSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMaintenanceSettings::fromJsonObject(QJsonObject json) {

    m_exclude_isValid = ::OpenAPI::fromJsonValue(m_exclude, json[QString("exclude")]);
    m_exclude_isSet = !json[QString("exclude")].isNull() && m_exclude_isValid;

    m_is_rollback_isValid = ::OpenAPI::fromJsonValue(m_is_rollback, json[QString("isRollback")]);
    m_is_rollback_isSet = !json[QString("isRollback")].isNull() && m_is_rollback_isValid;

    m_maintenance_policies_isValid = ::OpenAPI::fromJsonValue(m_maintenance_policies, json[QString("maintenancePolicies")]);
    m_maintenance_policies_isSet = !json[QString("maintenancePolicies")].isNull() && m_maintenance_policies_isValid;
}

QString OAIMaintenanceSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMaintenanceSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_exclude_isSet) {
        obj.insert(QString("exclude"), ::OpenAPI::toJsonValue(m_exclude));
    }
    if (m_is_rollback_isSet) {
        obj.insert(QString("isRollback"), ::OpenAPI::toJsonValue(m_is_rollback));
    }
    if (m_maintenance_policies.size() > 0) {
        obj.insert(QString("maintenancePolicies"), ::OpenAPI::toJsonValue(m_maintenance_policies));
    }
    return obj;
}

bool OAIMaintenanceSettings::isExclude() const {
    return m_exclude;
}
void OAIMaintenanceSettings::setExclude(const bool &exclude) {
    m_exclude = exclude;
    m_exclude_isSet = true;
}

bool OAIMaintenanceSettings::is_exclude_Set() const{
    return m_exclude_isSet;
}

bool OAIMaintenanceSettings::is_exclude_Valid() const{
    return m_exclude_isValid;
}

bool OAIMaintenanceSettings::isIsRollback() const {
    return m_is_rollback;
}
void OAIMaintenanceSettings::setIsRollback(const bool &is_rollback) {
    m_is_rollback = is_rollback;
    m_is_rollback_isSet = true;
}

bool OAIMaintenanceSettings::is_is_rollback_Set() const{
    return m_is_rollback_isSet;
}

bool OAIMaintenanceSettings::is_is_rollback_Valid() const{
    return m_is_rollback_isValid;
}

QMap<QString, OAIMaintenancePolicy> OAIMaintenanceSettings::getMaintenancePolicies() const {
    return m_maintenance_policies;
}
void OAIMaintenanceSettings::setMaintenancePolicies(const QMap<QString, OAIMaintenancePolicy> &maintenance_policies) {
    m_maintenance_policies = maintenance_policies;
    m_maintenance_policies_isSet = true;
}

bool OAIMaintenanceSettings::is_maintenance_policies_Set() const{
    return m_maintenance_policies_isSet;
}

bool OAIMaintenanceSettings::is_maintenance_policies_Valid() const{
    return m_maintenance_policies_isValid;
}

bool OAIMaintenanceSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_exclude_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_rollback_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_maintenance_policies.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMaintenanceSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
