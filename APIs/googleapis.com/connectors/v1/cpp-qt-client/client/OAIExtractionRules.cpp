/**
 * Connectors API
 * Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExtractionRules.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExtractionRules::OAIExtractionRules(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExtractionRules::OAIExtractionRules() {
    this->initializeModel();
}

OAIExtractionRules::~OAIExtractionRules() {}

void OAIExtractionRules::initializeModel() {

    m_extraction_rule_isSet = false;
    m_extraction_rule_isValid = false;
}

void OAIExtractionRules::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExtractionRules::fromJsonObject(QJsonObject json) {

    m_extraction_rule_isValid = ::OpenAPI::fromJsonValue(m_extraction_rule, json[QString("extractionRule")]);
    m_extraction_rule_isSet = !json[QString("extractionRule")].isNull() && m_extraction_rule_isValid;
}

QString OAIExtractionRules::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExtractionRules::asJsonObject() const {
    QJsonObject obj;
    if (m_extraction_rule.size() > 0) {
        obj.insert(QString("extractionRule"), ::OpenAPI::toJsonValue(m_extraction_rule));
    }
    return obj;
}

QList<OAIExtractionRule> OAIExtractionRules::getExtractionRule() const {
    return m_extraction_rule;
}
void OAIExtractionRules::setExtractionRule(const QList<OAIExtractionRule> &extraction_rule) {
    m_extraction_rule = extraction_rule;
    m_extraction_rule_isSet = true;
}

bool OAIExtractionRules::is_extraction_rule_Set() const{
    return m_extraction_rule_isSet;
}

bool OAIExtractionRules::is_extraction_rule_Valid() const{
    return m_extraction_rule_isValid;
}

bool OAIExtractionRules::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_extraction_rule.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExtractionRules::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
