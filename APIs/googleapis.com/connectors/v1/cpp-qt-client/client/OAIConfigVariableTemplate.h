/**
 * Connectors API
 * Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConfigVariableTemplate.h
 *
 * ConfigVariableTemplate provides metadata about a &#x60;ConfigVariable&#x60; that is used in a Connection.
 */

#ifndef OAIConfigVariableTemplate_H
#define OAIConfigVariableTemplate_H

#include <QJsonObject>

#include "OAIAuthorizationCodeLink.h"
#include "OAIEnumOption.h"
#include "OAILogicalExpression.h"
#include "OAIRoleGrant.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAuthorizationCodeLink;
class OAIEnumOption;
class OAILogicalExpression;
class OAIRoleGrant;

class OAIConfigVariableTemplate : public OAIObject {
public:
    OAIConfigVariableTemplate();
    OAIConfigVariableTemplate(QString json);
    ~OAIConfigVariableTemplate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAuthorizationCodeLink getAuthorizationCodeLink() const;
    void setAuthorizationCodeLink(const OAIAuthorizationCodeLink &authorization_code_link);
    bool is_authorization_code_link_Set() const;
    bool is_authorization_code_link_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QList<OAIEnumOption> getEnumOptions() const;
    void setEnumOptions(const QList<OAIEnumOption> &enum_options);
    bool is_enum_options_Set() const;
    bool is_enum_options_Valid() const;

    bool isIsAdvanced() const;
    void setIsAdvanced(const bool &is_advanced);
    bool is_is_advanced_Set() const;
    bool is_is_advanced_Valid() const;

    QString getKey() const;
    void setKey(const QString &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    QString getLocationType() const;
    void setLocationType(const QString &location_type);
    bool is_location_type_Set() const;
    bool is_location_type_Valid() const;

    bool isRequired() const;
    void setRequired(const bool &required);
    bool is_required_Set() const;
    bool is_required_Valid() const;

    OAILogicalExpression getRequiredCondition() const;
    void setRequiredCondition(const OAILogicalExpression &required_condition);
    bool is_required_condition_Set() const;
    bool is_required_condition_Valid() const;

    OAIRoleGrant getRoleGrant() const;
    void setRoleGrant(const OAIRoleGrant &role_grant);
    bool is_role_grant_Set() const;
    bool is_role_grant_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getValidationRegex() const;
    void setValidationRegex(const QString &validation_regex);
    bool is_validation_regex_Set() const;
    bool is_validation_regex_Valid() const;

    QString getValueType() const;
    void setValueType(const QString &value_type);
    bool is_value_type_Set() const;
    bool is_value_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAuthorizationCodeLink m_authorization_code_link;
    bool m_authorization_code_link_isSet;
    bool m_authorization_code_link_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QList<OAIEnumOption> m_enum_options;
    bool m_enum_options_isSet;
    bool m_enum_options_isValid;

    bool m_is_advanced;
    bool m_is_advanced_isSet;
    bool m_is_advanced_isValid;

    QString m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    QString m_location_type;
    bool m_location_type_isSet;
    bool m_location_type_isValid;

    bool m_required;
    bool m_required_isSet;
    bool m_required_isValid;

    OAILogicalExpression m_required_condition;
    bool m_required_condition_isSet;
    bool m_required_condition_isValid;

    OAIRoleGrant m_role_grant;
    bool m_role_grant_isSet;
    bool m_role_grant_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_validation_regex;
    bool m_validation_regex_isSet;
    bool m_validation_regex_isValid;

    QString m_value_type;
    bool m_value_type_isSet;
    bool m_value_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConfigVariableTemplate)

#endif // OAIConfigVariableTemplate_H
