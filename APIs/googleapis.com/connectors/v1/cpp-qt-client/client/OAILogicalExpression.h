/**
 * Connectors API
 * Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILogicalExpression.h
 *
 * Struct for representing boolean expressions.
 */

#ifndef OAILogicalExpression_H
#define OAILogicalExpression_H

#include <QJsonObject>

#include "OAIFieldComparison.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFieldComparison;

class OAILogicalExpression : public OAIObject {
public:
    OAILogicalExpression();
    OAILogicalExpression(QString json);
    ~OAILogicalExpression() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIFieldComparison> getFieldComparisons() const;
    void setFieldComparisons(const QList<OAIFieldComparison> &field_comparisons);
    bool is_field_comparisons_Set() const;
    bool is_field_comparisons_Valid() const;

    QList<OAILogicalExpression> getLogicalExpressions() const;
    void setLogicalExpressions(const QList<OAILogicalExpression> &logical_expressions);
    bool is_logical_expressions_Set() const;
    bool is_logical_expressions_Valid() const;

    QString getLogicalOperator() const;
    void setLogicalOperator(const QString &logical_operator);
    bool is_logical_operator_Set() const;
    bool is_logical_operator_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIFieldComparison> m_field_comparisons;
    bool m_field_comparisons_isSet;
    bool m_field_comparisons_isValid;

    QList<OAILogicalExpression> m_logical_expressions;
    bool m_logical_expressions_isSet;
    bool m_logical_expressions_isValid;

    QString m_logical_operator;
    bool m_logical_operator_isSet;
    bool m_logical_operator_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILogicalExpression)

#endif // OAILogicalExpression_H
