/**
 * Connectors API
 * Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConnection.h
 *
 * Connection represents an instance of connector.
 */

#ifndef OAIConnection_H
#define OAIConnection_H

#include <QJsonObject>

#include "OAIAuthConfig.h"
#include "OAIConfigVariable.h"
#include "OAIConnectionStatus.h"
#include "OAIConnectorVersionInfraConfig.h"
#include "OAIConnectorsLogConfig.h"
#include "OAIDestinationConfig.h"
#include "OAIEventingConfig.h"
#include "OAIEventingRuntimeData.h"
#include "OAILockConfig.h"
#include "OAINodeConfig.h"
#include "OAISslConfig.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAuthConfig;
class OAIConfigVariable;
class OAIConnectorVersionInfraConfig;
class OAIDestinationConfig;
class OAIEventingConfig;
class OAIEventingRuntimeData;
class OAILockConfig;
class OAIConnectorsLogConfig;
class OAINodeConfig;
class OAISslConfig;
class OAIConnectionStatus;

class OAIConnection : public OAIObject {
public:
    OAIConnection();
    OAIConnection(QString json);
    ~OAIConnection() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAuthConfig getAuthConfig() const;
    void setAuthConfig(const OAIAuthConfig &auth_config);
    bool is_auth_config_Set() const;
    bool is_auth_config_Valid() const;

    QList<OAIConfigVariable> getConfigVariables() const;
    void setConfigVariables(const QList<OAIConfigVariable> &config_variables);
    bool is_config_variables_Set() const;
    bool is_config_variables_Valid() const;

    QString getConnectionRevision() const;
    void setConnectionRevision(const QString &connection_revision);
    bool is_connection_revision_Set() const;
    bool is_connection_revision_Valid() const;

    QString getConnectorVersion() const;
    void setConnectorVersion(const QString &connector_version);
    bool is_connector_version_Set() const;
    bool is_connector_version_Valid() const;

    OAIConnectorVersionInfraConfig getConnectorVersionInfraConfig() const;
    void setConnectorVersionInfraConfig(const OAIConnectorVersionInfraConfig &connector_version_infra_config);
    bool is_connector_version_infra_config_Set() const;
    bool is_connector_version_infra_config_Valid() const;

    QString getConnectorVersionLaunchStage() const;
    void setConnectorVersionLaunchStage(const QString &connector_version_launch_stage);
    bool is_connector_version_launch_stage_Set() const;
    bool is_connector_version_launch_stage_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAIDestinationConfig> getDestinationConfigs() const;
    void setDestinationConfigs(const QList<OAIDestinationConfig> &destination_configs);
    bool is_destination_configs_Set() const;
    bool is_destination_configs_Valid() const;

    QString getEnvoyImageLocation() const;
    void setEnvoyImageLocation(const QString &envoy_image_location);
    bool is_envoy_image_location_Set() const;
    bool is_envoy_image_location_Valid() const;

    OAIEventingConfig getEventingConfig() const;
    void setEventingConfig(const OAIEventingConfig &eventing_config);
    bool is_eventing_config_Set() const;
    bool is_eventing_config_Valid() const;

    QString getEventingEnablementType() const;
    void setEventingEnablementType(const QString &eventing_enablement_type);
    bool is_eventing_enablement_type_Set() const;
    bool is_eventing_enablement_type_Valid() const;

    OAIEventingRuntimeData getEventingRuntimeData() const;
    void setEventingRuntimeData(const OAIEventingRuntimeData &eventing_runtime_data);
    bool is_eventing_runtime_data_Set() const;
    bool is_eventing_runtime_data_Valid() const;

    QString getImageLocation() const;
    void setImageLocation(const QString &image_location);
    bool is_image_location_Set() const;
    bool is_image_location_Valid() const;

    bool isIsTrustedTester() const;
    void setIsTrustedTester(const bool &is_trusted_tester);
    bool is_is_trusted_tester_Set() const;
    bool is_is_trusted_tester_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    OAILockConfig getLockConfig() const;
    void setLockConfig(const OAILockConfig &lock_config);
    bool is_lock_config_Set() const;
    bool is_lock_config_Valid() const;

    OAIConnectorsLogConfig getLogConfig() const;
    void setLogConfig(const OAIConnectorsLogConfig &log_config);
    bool is_log_config_Set() const;
    bool is_log_config_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAINodeConfig getNodeConfig() const;
    void setNodeConfig(const OAINodeConfig &node_config);
    bool is_node_config_Set() const;
    bool is_node_config_Valid() const;

    QString getServiceAccount() const;
    void setServiceAccount(const QString &service_account);
    bool is_service_account_Set() const;
    bool is_service_account_Valid() const;

    QString getServiceDirectory() const;
    void setServiceDirectory(const QString &service_directory);
    bool is_service_directory_Set() const;
    bool is_service_directory_Valid() const;

    OAISslConfig getSslConfig() const;
    void setSslConfig(const OAISslConfig &ssl_config);
    bool is_ssl_config_Set() const;
    bool is_ssl_config_Valid() const;

    OAIConnectionStatus getStatus() const;
    void setStatus(const OAIConnectionStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getSubscriptionType() const;
    void setSubscriptionType(const QString &subscription_type);
    bool is_subscription_type_Set() const;
    bool is_subscription_type_Valid() const;

    bool isSuspended() const;
    void setSuspended(const bool &suspended);
    bool is_suspended_Set() const;
    bool is_suspended_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAuthConfig m_auth_config;
    bool m_auth_config_isSet;
    bool m_auth_config_isValid;

    QList<OAIConfigVariable> m_config_variables;
    bool m_config_variables_isSet;
    bool m_config_variables_isValid;

    QString m_connection_revision;
    bool m_connection_revision_isSet;
    bool m_connection_revision_isValid;

    QString m_connector_version;
    bool m_connector_version_isSet;
    bool m_connector_version_isValid;

    OAIConnectorVersionInfraConfig m_connector_version_infra_config;
    bool m_connector_version_infra_config_isSet;
    bool m_connector_version_infra_config_isValid;

    QString m_connector_version_launch_stage;
    bool m_connector_version_launch_stage_isSet;
    bool m_connector_version_launch_stage_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAIDestinationConfig> m_destination_configs;
    bool m_destination_configs_isSet;
    bool m_destination_configs_isValid;

    QString m_envoy_image_location;
    bool m_envoy_image_location_isSet;
    bool m_envoy_image_location_isValid;

    OAIEventingConfig m_eventing_config;
    bool m_eventing_config_isSet;
    bool m_eventing_config_isValid;

    QString m_eventing_enablement_type;
    bool m_eventing_enablement_type_isSet;
    bool m_eventing_enablement_type_isValid;

    OAIEventingRuntimeData m_eventing_runtime_data;
    bool m_eventing_runtime_data_isSet;
    bool m_eventing_runtime_data_isValid;

    QString m_image_location;
    bool m_image_location_isSet;
    bool m_image_location_isValid;

    bool m_is_trusted_tester;
    bool m_is_trusted_tester_isSet;
    bool m_is_trusted_tester_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    OAILockConfig m_lock_config;
    bool m_lock_config_isSet;
    bool m_lock_config_isValid;

    OAIConnectorsLogConfig m_log_config;
    bool m_log_config_isSet;
    bool m_log_config_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAINodeConfig m_node_config;
    bool m_node_config_isSet;
    bool m_node_config_isValid;

    QString m_service_account;
    bool m_service_account_isSet;
    bool m_service_account_isValid;

    QString m_service_directory;
    bool m_service_directory_isSet;
    bool m_service_directory_isValid;

    OAISslConfig m_ssl_config;
    bool m_ssl_config_isSet;
    bool m_ssl_config_isValid;

    OAIConnectionStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_subscription_type;
    bool m_subscription_type_isSet;
    bool m_subscription_type_isValid;

    bool m_suspended;
    bool m_suspended_isSet;
    bool m_suspended_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConnection)

#endif // OAIConnection_H
