/**
 * Connectors API
 * Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRoleGrant.h
 *
 * This configuration defines all the Cloud IAM roles that needs to be granted to a particular Google Cloud resource for the selected principal like service account. These configurations will let UI display to customers what IAM roles need to be granted by them. Or these configurations can be used by the UI to render a &#39;grant&#39; button to do the same on behalf of the user.
 */

#ifndef OAIRoleGrant_H
#define OAIRoleGrant_H

#include <QJsonObject>

#include "OAIResource.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResource;

class OAIRoleGrant : public OAIObject {
public:
    OAIRoleGrant();
    OAIRoleGrant(QString json);
    ~OAIRoleGrant() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHelperTextTemplate() const;
    void setHelperTextTemplate(const QString &helper_text_template);
    bool is_helper_text_template_Set() const;
    bool is_helper_text_template_Valid() const;

    QString getPrincipal() const;
    void setPrincipal(const QString &principal);
    bool is_principal_Set() const;
    bool is_principal_Valid() const;

    OAIResource getResource() const;
    void setResource(const OAIResource &resource);
    bool is_resource_Set() const;
    bool is_resource_Valid() const;

    QList<QString> getRoles() const;
    void setRoles(const QList<QString> &roles);
    bool is_roles_Set() const;
    bool is_roles_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_helper_text_template;
    bool m_helper_text_template_isSet;
    bool m_helper_text_template_isValid;

    QString m_principal;
    bool m_principal_isSet;
    bool m_principal_isValid;

    OAIResource m_resource;
    bool m_resource_isSet;
    bool m_resource_isValid;

    QList<QString> m_roles;
    bool m_roles_isSet;
    bool m_roles_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRoleGrant)

#endif // OAIRoleGrant_H
