/*
 * Connectors API
 * Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.AuthConfig;
import org.openapitools.client.model.ConfigVariable;
import org.openapitools.client.model.ConnectionStatus;
import org.openapitools.client.model.ConnectorVersionInfraConfig;
import org.openapitools.client.model.ConnectorsLogConfig;
import org.openapitools.client.model.DestinationConfig;
import org.openapitools.client.model.EventingConfig;
import org.openapitools.client.model.EventingRuntimeData;
import org.openapitools.client.model.LockConfig;
import org.openapitools.client.model.NodeConfig;
import org.openapitools.client.model.SslConfig;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Connection
 */
public class ConnectionTest {
    private final Connection model = new Connection();

    /**
     * Model tests for Connection
     */
    @Test
    public void testConnection() {
        // TODO: test Connection
    }

    /**
     * Test the property 'authConfig'
     */
    @Test
    public void authConfigTest() {
        // TODO: test authConfig
    }

    /**
     * Test the property 'configVariables'
     */
    @Test
    public void configVariablesTest() {
        // TODO: test configVariables
    }

    /**
     * Test the property 'connectionRevision'
     */
    @Test
    public void connectionRevisionTest() {
        // TODO: test connectionRevision
    }

    /**
     * Test the property 'connectorVersion'
     */
    @Test
    public void connectorVersionTest() {
        // TODO: test connectorVersion
    }

    /**
     * Test the property 'connectorVersionInfraConfig'
     */
    @Test
    public void connectorVersionInfraConfigTest() {
        // TODO: test connectorVersionInfraConfig
    }

    /**
     * Test the property 'connectorVersionLaunchStage'
     */
    @Test
    public void connectorVersionLaunchStageTest() {
        // TODO: test connectorVersionLaunchStage
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'destinationConfigs'
     */
    @Test
    public void destinationConfigsTest() {
        // TODO: test destinationConfigs
    }

    /**
     * Test the property 'envoyImageLocation'
     */
    @Test
    public void envoyImageLocationTest() {
        // TODO: test envoyImageLocation
    }

    /**
     * Test the property 'eventingConfig'
     */
    @Test
    public void eventingConfigTest() {
        // TODO: test eventingConfig
    }

    /**
     * Test the property 'eventingEnablementType'
     */
    @Test
    public void eventingEnablementTypeTest() {
        // TODO: test eventingEnablementType
    }

    /**
     * Test the property 'eventingRuntimeData'
     */
    @Test
    public void eventingRuntimeDataTest() {
        // TODO: test eventingRuntimeData
    }

    /**
     * Test the property 'imageLocation'
     */
    @Test
    public void imageLocationTest() {
        // TODO: test imageLocation
    }

    /**
     * Test the property 'isTrustedTester'
     */
    @Test
    public void isTrustedTesterTest() {
        // TODO: test isTrustedTester
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'lockConfig'
     */
    @Test
    public void lockConfigTest() {
        // TODO: test lockConfig
    }

    /**
     * Test the property 'logConfig'
     */
    @Test
    public void logConfigTest() {
        // TODO: test logConfig
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nodeConfig'
     */
    @Test
    public void nodeConfigTest() {
        // TODO: test nodeConfig
    }

    /**
     * Test the property 'serviceAccount'
     */
    @Test
    public void serviceAccountTest() {
        // TODO: test serviceAccount
    }

    /**
     * Test the property 'serviceDirectory'
     */
    @Test
    public void serviceDirectoryTest() {
        // TODO: test serviceDirectory
    }

    /**
     * Test the property 'sslConfig'
     */
    @Test
    public void sslConfigTest() {
        // TODO: test sslConfig
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'subscriptionType'
     */
    @Test
    public void subscriptionTypeTest() {
        // TODO: test subscriptionType
    }

    /**
     * Test the property 'suspended'
     */
    @Test
    public void suspendedTest() {
        // TODO: test suspended
    }

    /**
     * Test the property 'updateTime'
     */
    @Test
    public void updateTimeTest() {
        // TODO: test updateTime
    }

}
