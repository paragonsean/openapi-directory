/*
 * Connectors API
 * Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.AuthConfigTemplate;
import org.openapitools.client.model.ConfigVariableTemplate;
import org.openapitools.client.model.ConnectorInfraConfig;
import org.openapitools.client.model.DestinationConfigTemplate;
import org.openapitools.client.model.EgressControlConfig;
import org.openapitools.client.model.EventingConfigTemplate;
import org.openapitools.client.model.RoleGrant;
import org.openapitools.client.model.SslConfigTemplate;
import org.openapitools.client.model.SupportedRuntimeFeatures;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ConnectorVersion
 */
public class ConnectorVersionTest {
    private final ConnectorVersion model = new ConnectorVersion();

    /**
     * Model tests for ConnectorVersion
     */
    @Test
    public void testConnectorVersion() {
        // TODO: test ConnectorVersion
    }

    /**
     * Test the property 'authConfigTemplates'
     */
    @Test
    public void authConfigTemplatesTest() {
        // TODO: test authConfigTemplates
    }

    /**
     * Test the property 'configVariableTemplates'
     */
    @Test
    public void configVariableTemplatesTest() {
        // TODO: test configVariableTemplates
    }

    /**
     * Test the property 'connectorInfraConfig'
     */
    @Test
    public void connectorInfraConfigTest() {
        // TODO: test connectorInfraConfig
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'destinationConfigTemplates'
     */
    @Test
    public void destinationConfigTemplatesTest() {
        // TODO: test destinationConfigTemplates
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'egressControlConfig'
     */
    @Test
    public void egressControlConfigTest() {
        // TODO: test egressControlConfig
    }

    /**
     * Test the property 'eventingConfigTemplate'
     */
    @Test
    public void eventingConfigTemplateTest() {
        // TODO: test eventingConfigTemplate
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'launchStage'
     */
    @Test
    public void launchStageTest() {
        // TODO: test launchStage
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'releaseVersion'
     */
    @Test
    public void releaseVersionTest() {
        // TODO: test releaseVersion
    }

    /**
     * Test the property 'roleGrant'
     */
    @Test
    public void roleGrantTest() {
        // TODO: test roleGrant
    }

    /**
     * Test the property 'roleGrants'
     */
    @Test
    public void roleGrantsTest() {
        // TODO: test roleGrants
    }

    /**
     * Test the property 'sslConfigTemplate'
     */
    @Test
    public void sslConfigTemplateTest() {
        // TODO: test sslConfigTemplate
    }

    /**
     * Test the property 'supportedRuntimeFeatures'
     */
    @Test
    public void supportedRuntimeFeaturesTest() {
        // TODO: test supportedRuntimeFeatures
    }

    /**
     * Test the property 'unsupportedConnectionTypes'
     */
    @Test
    public void unsupportedConnectionTypesTest() {
        // TODO: test unsupportedConnectionTypes
    }

    /**
     * Test the property 'updateTime'
     */
    @Test
    public void updateTimeTest() {
        // TODO: test updateTime
    }

}
