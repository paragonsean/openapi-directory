/**
 * Connectors API
 * Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ConnectorsApi);
  }
}(this, function(expect, ConnectorsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ConnectorsApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('connectorsProjectsLocationsConnectionsConnectionSchemaMetadataGetAction', function() {
      it('should call connectorsProjectsLocationsConnectionsConnectionSchemaMetadataGetAction successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsConnectionSchemaMetadataGetAction
        //instance.connectorsProjectsLocationsConnectionsConnectionSchemaMetadataGetAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsConnectionSchemaMetadataGetEntityType', function() {
      it('should call connectorsProjectsLocationsConnectionsConnectionSchemaMetadataGetEntityType successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsConnectionSchemaMetadataGetEntityType
        //instance.connectorsProjectsLocationsConnectionsConnectionSchemaMetadataGetEntityType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsConnectionSchemaMetadataListActions', function() {
      it('should call connectorsProjectsLocationsConnectionsConnectionSchemaMetadataListActions successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsConnectionSchemaMetadataListActions
        //instance.connectorsProjectsLocationsConnectionsConnectionSchemaMetadataListActions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsConnectionSchemaMetadataListEntityTypes', function() {
      it('should call connectorsProjectsLocationsConnectionsConnectionSchemaMetadataListEntityTypes successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsConnectionSchemaMetadataListEntityTypes
        //instance.connectorsProjectsLocationsConnectionsConnectionSchemaMetadataListEntityTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsConnectionSchemaMetadataRefresh', function() {
      it('should call connectorsProjectsLocationsConnectionsConnectionSchemaMetadataRefresh successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsConnectionSchemaMetadataRefresh
        //instance.connectorsProjectsLocationsConnectionsConnectionSchemaMetadataRefresh(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsCreate', function() {
      it('should call connectorsProjectsLocationsConnectionsCreate successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsCreate
        //instance.connectorsProjectsLocationsConnectionsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsEventSubscriptionsCreate', function() {
      it('should call connectorsProjectsLocationsConnectionsEventSubscriptionsCreate successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsEventSubscriptionsCreate
        //instance.connectorsProjectsLocationsConnectionsEventSubscriptionsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsEventSubscriptionsList', function() {
      it('should call connectorsProjectsLocationsConnectionsEventSubscriptionsList successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsEventSubscriptionsList
        //instance.connectorsProjectsLocationsConnectionsEventSubscriptionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsEventSubscriptionsRetry', function() {
      it('should call connectorsProjectsLocationsConnectionsEventSubscriptionsRetry successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsEventSubscriptionsRetry
        //instance.connectorsProjectsLocationsConnectionsEventSubscriptionsRetry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsList', function() {
      it('should call connectorsProjectsLocationsConnectionsList successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsList
        //instance.connectorsProjectsLocationsConnectionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsListenEvent', function() {
      it('should call connectorsProjectsLocationsConnectionsListenEvent successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsListenEvent
        //instance.connectorsProjectsLocationsConnectionsListenEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsRepairEventing', function() {
      it('should call connectorsProjectsLocationsConnectionsRepairEventing successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsRepairEventing
        //instance.connectorsProjectsLocationsConnectionsRepairEventing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsRuntimeActionSchemasList', function() {
      it('should call connectorsProjectsLocationsConnectionsRuntimeActionSchemasList successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsRuntimeActionSchemasList
        //instance.connectorsProjectsLocationsConnectionsRuntimeActionSchemasList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsConnectionsRuntimeEntitySchemasList', function() {
      it('should call connectorsProjectsLocationsConnectionsRuntimeEntitySchemasList successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsConnectionsRuntimeEntitySchemasList
        //instance.connectorsProjectsLocationsConnectionsRuntimeEntitySchemasList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsEndpointAttachmentsCreate', function() {
      it('should call connectorsProjectsLocationsEndpointAttachmentsCreate successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsEndpointAttachmentsCreate
        //instance.connectorsProjectsLocationsEndpointAttachmentsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsEndpointAttachmentsList', function() {
      it('should call connectorsProjectsLocationsEndpointAttachmentsList successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsEndpointAttachmentsList
        //instance.connectorsProjectsLocationsEndpointAttachmentsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsGlobalCustomConnectorsCreate', function() {
      it('should call connectorsProjectsLocationsGlobalCustomConnectorsCreate successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsGlobalCustomConnectorsCreate
        //instance.connectorsProjectsLocationsGlobalCustomConnectorsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsGlobalCustomConnectorsCustomConnectorVersionsCreate', function() {
      it('should call connectorsProjectsLocationsGlobalCustomConnectorsCustomConnectorVersionsCreate successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsGlobalCustomConnectorsCustomConnectorVersionsCreate
        //instance.connectorsProjectsLocationsGlobalCustomConnectorsCustomConnectorVersionsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsGlobalCustomConnectorsCustomConnectorVersionsList', function() {
      it('should call connectorsProjectsLocationsGlobalCustomConnectorsCustomConnectorVersionsList successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsGlobalCustomConnectorsCustomConnectorVersionsList
        //instance.connectorsProjectsLocationsGlobalCustomConnectorsCustomConnectorVersionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsGlobalCustomConnectorsList', function() {
      it('should call connectorsProjectsLocationsGlobalCustomConnectorsList successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsGlobalCustomConnectorsList
        //instance.connectorsProjectsLocationsGlobalCustomConnectorsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsGlobalManagedZonesCreate', function() {
      it('should call connectorsProjectsLocationsGlobalManagedZonesCreate successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsGlobalManagedZonesCreate
        //instance.connectorsProjectsLocationsGlobalManagedZonesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsGlobalManagedZonesList', function() {
      it('should call connectorsProjectsLocationsGlobalManagedZonesList successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsGlobalManagedZonesList
        //instance.connectorsProjectsLocationsGlobalManagedZonesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsGlobalManagedZonesPatch', function() {
      it('should call connectorsProjectsLocationsGlobalManagedZonesPatch successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsGlobalManagedZonesPatch
        //instance.connectorsProjectsLocationsGlobalManagedZonesPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsList', function() {
      it('should call connectorsProjectsLocationsList successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsList
        //instance.connectorsProjectsLocationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsOperationsCancel', function() {
      it('should call connectorsProjectsLocationsOperationsCancel successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsOperationsCancel
        //instance.connectorsProjectsLocationsOperationsCancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsOperationsDelete', function() {
      it('should call connectorsProjectsLocationsOperationsDelete successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsOperationsDelete
        //instance.connectorsProjectsLocationsOperationsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsOperationsList', function() {
      it('should call connectorsProjectsLocationsOperationsList successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsOperationsList
        //instance.connectorsProjectsLocationsOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsProvidersConnectorsList', function() {
      it('should call connectorsProjectsLocationsProvidersConnectorsList successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsProvidersConnectorsList
        //instance.connectorsProjectsLocationsProvidersConnectorsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsProvidersConnectorsVersionsEventtypesGet', function() {
      it('should call connectorsProjectsLocationsProvidersConnectorsVersionsEventtypesGet successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsProvidersConnectorsVersionsEventtypesGet
        //instance.connectorsProjectsLocationsProvidersConnectorsVersionsEventtypesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsProvidersConnectorsVersionsEventtypesList', function() {
      it('should call connectorsProjectsLocationsProvidersConnectorsVersionsEventtypesList successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsProvidersConnectorsVersionsEventtypesList
        //instance.connectorsProjectsLocationsProvidersConnectorsVersionsEventtypesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsProvidersConnectorsVersionsList', function() {
      it('should call connectorsProjectsLocationsProvidersConnectorsVersionsList successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsProvidersConnectorsVersionsList
        //instance.connectorsProjectsLocationsProvidersConnectorsVersionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsProvidersGetIamPolicy', function() {
      it('should call connectorsProjectsLocationsProvidersGetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsProvidersGetIamPolicy
        //instance.connectorsProjectsLocationsProvidersGetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsProvidersList', function() {
      it('should call connectorsProjectsLocationsProvidersList successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsProvidersList
        //instance.connectorsProjectsLocationsProvidersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsProvidersSetIamPolicy', function() {
      it('should call connectorsProjectsLocationsProvidersSetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsProvidersSetIamPolicy
        //instance.connectorsProjectsLocationsProvidersSetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connectorsProjectsLocationsProvidersTestIamPermissions', function() {
      it('should call connectorsProjectsLocationsProvidersTestIamPermissions successfully', function(done) {
        //uncomment below and update the code to test connectorsProjectsLocationsProvidersTestIamPermissions
        //instance.connectorsProjectsLocationsProvidersTestIamPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
