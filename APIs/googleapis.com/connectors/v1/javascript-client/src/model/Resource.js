/**
 * Connectors API
 * Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Resource model module.
 * @module model/Resource
 * @version v1
 */
class Resource {
    /**
     * Constructs a new <code>Resource</code>.
     * Resource definition
     * @alias module:model/Resource
     */
    constructor() { 
        
        Resource.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Resource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Resource} obj Optional instance to populate.
     * @return {module:model/Resource} The populated <code>Resource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Resource();

            if (data.hasOwnProperty('pathTemplate')) {
                obj['pathTemplate'] = ApiClient.convertToType(data['pathTemplate'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Resource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Resource</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['pathTemplate'] && !(typeof data['pathTemplate'] === 'string' || data['pathTemplate'] instanceof String)) {
            throw new Error("Expected the field `pathTemplate` to be a primitive type in the JSON string but got " + data['pathTemplate']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Template to uniquely represent a Google Cloud resource in a format IAM expects This is a template that can have references to other values provided in the config variable template.
 * @member {String} pathTemplate
 */
Resource.prototype['pathTemplate'] = undefined;

/**
 * Different types of resource supported.
 * @member {module:model/Resource.TypeEnum} type
 */
Resource.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
Resource['TypeEnum'] = {

    /**
     * value: "TYPE_UNSPECIFIED"
     * @const
     */
    "TYPE_UNSPECIFIED": "TYPE_UNSPECIFIED",

    /**
     * value: "GCP_PROJECT"
     * @const
     */
    "GCP_PROJECT": "GCP_PROJECT",

    /**
     * value: "GCP_RESOURCE"
     * @const
     */
    "GCP_RESOURCE": "GCP_RESOURCE",

    /**
     * value: "GCP_SECRETMANAGER_SECRET"
     * @const
     */
    "GCP_SECRETMANAGER_SECRET": "GCP_SECRETMANAGER_SECRET",

    /**
     * value: "GCP_SECRETMANAGER_SECRET_VERSION"
     * @const
     */
    "GCP_SECRETMANAGER_SECRET_VERSION": "GCP_SECRETMANAGER_SECRET_VERSION"
};



export default Resource;

