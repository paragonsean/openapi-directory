/**
 * Connectors API
 * Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CustomConnector model module.
 * @module model/CustomConnector
 * @version v1
 */
class CustomConnector {
    /**
     * Constructs a new <code>CustomConnector</code>.
     * CustomConnector represents the custom connector defined by the customer as part of byoc.
     * @alias module:model/CustomConnector
     */
    constructor() { 
        
        CustomConnector.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomConnector</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomConnector} obj Optional instance to populate.
     * @return {module:model/CustomConnector} The populated <code>CustomConnector</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomConnector();

            if (data.hasOwnProperty('activeConnectorVersions')) {
                obj['activeConnectorVersions'] = ApiClient.convertToType(data['activeConnectorVersions'], ['String']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('customConnectorType')) {
                obj['customConnectorType'] = ApiClient.convertToType(data['customConnectorType'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('logo')) {
                obj['logo'] = ApiClient.convertToType(data['logo'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomConnector</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomConnector</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['activeConnectorVersions'])) {
            throw new Error("Expected the field `activeConnectorVersions` to be an array in the JSON data but got " + data['activeConnectorVersions']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['customConnectorType'] && !(typeof data['customConnectorType'] === 'string' || data['customConnectorType'] instanceof String)) {
            throw new Error("Expected the field `customConnectorType` to be a primitive type in the JSON string but got " + data['customConnectorType']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['logo'] && !(typeof data['logo'] === 'string' || data['logo'] instanceof String)) {
            throw new Error("Expected the field `logo` to be a primitive type in the JSON string but got " + data['logo']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Optional. Active connector versions.
 * @member {Array.<String>} activeConnectorVersions
 */
CustomConnector.prototype['activeConnectorVersions'] = undefined;

/**
 * Output only. Created time.
 * @member {String} createTime
 */
CustomConnector.prototype['createTime'] = undefined;

/**
 * Required. Type of the custom connector.
 * @member {module:model/CustomConnector.CustomConnectorTypeEnum} customConnectorType
 */
CustomConnector.prototype['customConnectorType'] = undefined;

/**
 * Optional. Description of the resource.
 * @member {String} description
 */
CustomConnector.prototype['description'] = undefined;

/**
 * Optional. Display name.
 * @member {String} displayName
 */
CustomConnector.prototype['displayName'] = undefined;

/**
 * Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
 * @member {Object.<String, String>} labels
 */
CustomConnector.prototype['labels'] = undefined;

/**
 * Optional. Logo of the resource.
 * @member {String} logo
 */
CustomConnector.prototype['logo'] = undefined;

/**
 * Identifier. Resource name of the CustomConnector. Format: projects/{project}/locations/{location}/customConnectors/{connector}
 * @member {String} name
 */
CustomConnector.prototype['name'] = undefined;

/**
 * Output only. Updated time.
 * @member {String} updateTime
 */
CustomConnector.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>customConnectorType</code> property.
 * @enum {String}
 * @readonly
 */
CustomConnector['CustomConnectorTypeEnum'] = {

    /**
     * value: "CUSTOM_CONNECTOR_TYPE_UNSPECIFIED"
     * @const
     */
    "CUSTOM_CONNECTOR_TYPE_UNSPECIFIED": "CUSTOM_CONNECTOR_TYPE_UNSPECIFIED",

    /**
     * value: "OPEN_API"
     * @const
     */
    "OPEN_API": "OPEN_API",

    /**
     * value: "PROTO"
     * @const
     */
    "PROTO": "PROTO"
};



export default CustomConnector;

