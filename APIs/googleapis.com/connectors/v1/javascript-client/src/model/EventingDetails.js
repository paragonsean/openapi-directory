/**
 * Connectors API
 * Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EventingDetails model module.
 * @module model/EventingDetails
 * @version v1
 */
class EventingDetails {
    /**
     * Constructs a new <code>EventingDetails</code>.
     * Eventing Details message.
     * @alias module:model/EventingDetails
     */
    constructor() { 
        
        EventingDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EventingDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventingDetails} obj Optional instance to populate.
     * @return {module:model/EventingDetails} The populated <code>EventingDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventingDetails();

            if (data.hasOwnProperty('customEventTypes')) {
                obj['customEventTypes'] = ApiClient.convertToType(data['customEventTypes'], 'Boolean');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('documentationLink')) {
                obj['documentationLink'] = ApiClient.convertToType(data['documentationLink'], 'String');
            }
            if (data.hasOwnProperty('iconLocation')) {
                obj['iconLocation'] = ApiClient.convertToType(data['iconLocation'], 'String');
            }
            if (data.hasOwnProperty('launchStage')) {
                obj['launchStage'] = ApiClient.convertToType(data['launchStage'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('searchTags')) {
                obj['searchTags'] = ApiClient.convertToType(data['searchTags'], ['String']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventingDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventingDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['documentationLink'] && !(typeof data['documentationLink'] === 'string' || data['documentationLink'] instanceof String)) {
            throw new Error("Expected the field `documentationLink` to be a primitive type in the JSON string but got " + data['documentationLink']);
        }
        // ensure the json data is a string
        if (data['iconLocation'] && !(typeof data['iconLocation'] === 'string' || data['iconLocation'] instanceof String)) {
            throw new Error("Expected the field `iconLocation` to be a primitive type in the JSON string but got " + data['iconLocation']);
        }
        // ensure the json data is a string
        if (data['launchStage'] && !(typeof data['launchStage'] === 'string' || data['launchStage'] instanceof String)) {
            throw new Error("Expected the field `launchStage` to be a primitive type in the JSON string but got " + data['launchStage']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['searchTags'])) {
            throw new Error("Expected the field `searchTags` to be an array in the JSON data but got " + data['searchTags']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Output only. Custom Event Types.
 * @member {Boolean} customEventTypes
 */
EventingDetails.prototype['customEventTypes'] = undefined;

/**
 * Output only. Description.
 * @member {String} description
 */
EventingDetails.prototype['description'] = undefined;

/**
 * Output only. Link to public documentation.
 * @member {String} documentationLink
 */
EventingDetails.prototype['documentationLink'] = undefined;

/**
 * Output only. Cloud storage location of the icon.
 * @member {String} iconLocation
 */
EventingDetails.prototype['iconLocation'] = undefined;

/**
 * Output only. Eventing Launch Stage.
 * @member {module:model/EventingDetails.LaunchStageEnum} launchStage
 */
EventingDetails.prototype['launchStage'] = undefined;

/**
 * Output only. Name of the Eventing trigger.
 * @member {String} name
 */
EventingDetails.prototype['name'] = undefined;

/**
 * Output only. Array of search keywords.
 * @member {Array.<String>} searchTags
 */
EventingDetails.prototype['searchTags'] = undefined;

/**
 * Output only. The type of the event listener for a specific connector.
 * @member {module:model/EventingDetails.TypeEnum} type
 */
EventingDetails.prototype['type'] = undefined;





/**
 * Allowed values for the <code>launchStage</code> property.
 * @enum {String}
 * @readonly
 */
EventingDetails['LaunchStageEnum'] = {

    /**
     * value: "LAUNCH_STAGE_UNSPECIFIED"
     * @const
     */
    "LAUNCH_STAGE_UNSPECIFIED": "LAUNCH_STAGE_UNSPECIFIED",

    /**
     * value: "PREVIEW"
     * @const
     */
    "PREVIEW": "PREVIEW",

    /**
     * value: "GA"
     * @const
     */
    "GA": "GA",

    /**
     * value: "DEPRECATED"
     * @const
     */
    "DEPRECATED": "DEPRECATED",

    /**
     * value: "PRIVATE_PREVIEW"
     * @const
     */
    "PRIVATE_PREVIEW": "PRIVATE_PREVIEW"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
EventingDetails['TypeEnum'] = {

    /**
     * value: "TYPE_UNSPECIFIED"
     * @const
     */
    "TYPE_UNSPECIFIED": "TYPE_UNSPECIFIED",

    /**
     * value: "WEBHOOK"
     * @const
     */
    "WEBHOOK": "WEBHOOK",

    /**
     * value: "JMS"
     * @const
     */
    "JMS": "JMS"
};



export default EventingDetails;

