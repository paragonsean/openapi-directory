# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Destination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, host: str=None, port: int=None, service_attachment: str=None):
        """Destination - a model defined in OpenAPI

        :param host: The host of this Destination.
        :param port: The port of this Destination.
        :param service_attachment: The service_attachment of this Destination.
        """
        self.openapi_types = {
            'host': str,
            'port': int,
            'service_attachment': str
        }

        self.attribute_map = {
            'host': 'host',
            'port': 'port',
            'service_attachment': 'serviceAttachment'
        }

        self._host = host
        self._port = port
        self._service_attachment = service_attachment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Destination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Destination of this Destination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host(self):
        """Gets the host of this Destination.

        For publicly routable host.

        :return: The host of this Destination.
        :rtype: str
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this Destination.

        For publicly routable host.

        :param host: The host of this Destination.
        :type host: str
        """

        self._host = host

    @property
    def port(self):
        """Gets the port of this Destination.

        The port is the target port number that is accepted by the destination.

        :return: The port of this Destination.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this Destination.

        The port is the target port number that is accepted by the destination.

        :param port: The port of this Destination.
        :type port: int
        """

        self._port = port

    @property
    def service_attachment(self):
        """Gets the service_attachment of this Destination.

        PSC service attachments. Format: projects/*/regions/*/serviceAttachments/*

        :return: The service_attachment of this Destination.
        :rtype: str
        """
        return self._service_attachment

    @service_attachment.setter
    def service_attachment(self, service_attachment):
        """Sets the service_attachment of this Destination.

        PSC service attachments. Format: projects/*/regions/*/serviceAttachments/*

        :param service_attachment: The service_attachment of this Destination.
        :type service_attachment: str
        """

        self._service_attachment = service_attachment
