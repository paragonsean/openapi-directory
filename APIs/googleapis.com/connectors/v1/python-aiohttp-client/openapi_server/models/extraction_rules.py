# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.extraction_rule import ExtractionRule
from openapi_server import util


class ExtractionRules(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, extraction_rule: List[ExtractionRule]=None):
        """ExtractionRules - a model defined in OpenAPI

        :param extraction_rule: The extraction_rule of this ExtractionRules.
        """
        self.openapi_types = {
            'extraction_rule': List[ExtractionRule]
        }

        self.attribute_map = {
            'extraction_rule': 'extractionRule'
        }

        self._extraction_rule = extraction_rule

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExtractionRules':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExtractionRules of this ExtractionRules.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def extraction_rule(self):
        """Gets the extraction_rule of this ExtractionRules.

        Collection of Extraction Rule.

        :return: The extraction_rule of this ExtractionRules.
        :rtype: List[ExtractionRule]
        """
        return self._extraction_rule

    @extraction_rule.setter
    def extraction_rule(self, extraction_rule):
        """Sets the extraction_rule of this ExtractionRules.

        Collection of Extraction Rule.

        :param extraction_rule: The extraction_rule of this ExtractionRules.
        :type extraction_rule: List[ExtractionRule]
        """

        self._extraction_rule = extraction_rule
