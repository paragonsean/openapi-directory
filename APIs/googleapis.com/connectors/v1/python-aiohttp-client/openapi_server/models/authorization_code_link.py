# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AuthorizationCodeLink(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_id: str=None, enable_pkce: bool=None, scopes: List[str]=None, uri: str=None):
        """AuthorizationCodeLink - a model defined in OpenAPI

        :param client_id: The client_id of this AuthorizationCodeLink.
        :param enable_pkce: The enable_pkce of this AuthorizationCodeLink.
        :param scopes: The scopes of this AuthorizationCodeLink.
        :param uri: The uri of this AuthorizationCodeLink.
        """
        self.openapi_types = {
            'client_id': str,
            'enable_pkce': bool,
            'scopes': List[str],
            'uri': str
        }

        self.attribute_map = {
            'client_id': 'clientId',
            'enable_pkce': 'enablePkce',
            'scopes': 'scopes',
            'uri': 'uri'
        }

        self._client_id = client_id
        self._enable_pkce = enable_pkce
        self._scopes = scopes
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AuthorizationCodeLink':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AuthorizationCodeLink of this AuthorizationCodeLink.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_id(self):
        """Gets the client_id of this AuthorizationCodeLink.

        The client ID assigned to the Google Cloud Connectors OAuth app for the connector data source.

        :return: The client_id of this AuthorizationCodeLink.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this AuthorizationCodeLink.

        The client ID assigned to the Google Cloud Connectors OAuth app for the connector data source.

        :param client_id: The client_id of this AuthorizationCodeLink.
        :type client_id: str
        """

        self._client_id = client_id

    @property
    def enable_pkce(self):
        """Gets the enable_pkce of this AuthorizationCodeLink.

        Whether to enable PKCE for the auth code flow.

        :return: The enable_pkce of this AuthorizationCodeLink.
        :rtype: bool
        """
        return self._enable_pkce

    @enable_pkce.setter
    def enable_pkce(self, enable_pkce):
        """Sets the enable_pkce of this AuthorizationCodeLink.

        Whether to enable PKCE for the auth code flow.

        :param enable_pkce: The enable_pkce of this AuthorizationCodeLink.
        :type enable_pkce: bool
        """

        self._enable_pkce = enable_pkce

    @property
    def scopes(self):
        """Gets the scopes of this AuthorizationCodeLink.

        The scopes for which the user will authorize Google Cloud Connectors on the connector data source.

        :return: The scopes of this AuthorizationCodeLink.
        :rtype: List[str]
        """
        return self._scopes

    @scopes.setter
    def scopes(self, scopes):
        """Sets the scopes of this AuthorizationCodeLink.

        The scopes for which the user will authorize Google Cloud Connectors on the connector data source.

        :param scopes: The scopes of this AuthorizationCodeLink.
        :type scopes: List[str]
        """

        self._scopes = scopes

    @property
    def uri(self):
        """Gets the uri of this AuthorizationCodeLink.

        The base URI the user must click to trigger the authorization code login flow.

        :return: The uri of this AuthorizationCodeLink.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this AuthorizationCodeLink.

        The base URI the user must click to trigger the authorization code login flow.

        :param uri: The uri of this AuthorizationCodeLink.
        :type uri: str
        """

        self._uri = uri
