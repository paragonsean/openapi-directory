# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.source import Source
from openapi_server import util


class ExtractionRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, extraction_regex: str=None, source: Source=None):
        """ExtractionRule - a model defined in OpenAPI

        :param extraction_regex: The extraction_regex of this ExtractionRule.
        :param source: The source of this ExtractionRule.
        """
        self.openapi_types = {
            'extraction_regex': str,
            'source': Source
        }

        self.attribute_map = {
            'extraction_regex': 'extractionRegex',
            'source': 'source'
        }

        self._extraction_regex = extraction_regex
        self._source = source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExtractionRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExtractionRule of this ExtractionRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def extraction_regex(self):
        """Gets the extraction_regex of this ExtractionRule.

        Regex used to extract backend details from source. If empty, whole source value will be used.

        :return: The extraction_regex of this ExtractionRule.
        :rtype: str
        """
        return self._extraction_regex

    @extraction_regex.setter
    def extraction_regex(self, extraction_regex):
        """Sets the extraction_regex of this ExtractionRule.

        Regex used to extract backend details from source. If empty, whole source value will be used.

        :param extraction_regex: The extraction_regex of this ExtractionRule.
        :type extraction_regex: str
        """

        self._extraction_regex = extraction_regex

    @property
    def source(self):
        """Gets the source of this ExtractionRule.


        :return: The source of this ExtractionRule.
        :rtype: Source
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this ExtractionRule.


        :param source: The source of this ExtractionRule.
        :type source: Source
        """

        self._source = source
