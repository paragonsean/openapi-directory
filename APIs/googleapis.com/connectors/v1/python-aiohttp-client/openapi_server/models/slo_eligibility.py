# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SloEligibility(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, eligible: bool=None, reason: str=None):
        """SloEligibility - a model defined in OpenAPI

        :param eligible: The eligible of this SloEligibility.
        :param reason: The reason of this SloEligibility.
        """
        self.openapi_types = {
            'eligible': bool,
            'reason': str
        }

        self.attribute_map = {
            'eligible': 'eligible',
            'reason': 'reason'
        }

        self._eligible = eligible
        self._reason = reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SloEligibility':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SloEligibility of this SloEligibility.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def eligible(self):
        """Gets the eligible of this SloEligibility.

        Whether an instance is eligible or ineligible.

        :return: The eligible of this SloEligibility.
        :rtype: bool
        """
        return self._eligible

    @eligible.setter
    def eligible(self, eligible):
        """Sets the eligible of this SloEligibility.

        Whether an instance is eligible or ineligible.

        :param eligible: The eligible of this SloEligibility.
        :type eligible: bool
        """

        self._eligible = eligible

    @property
    def reason(self):
        """Gets the reason of this SloEligibility.

        User-defined reason for the current value of instance eligibility. Usually, this can be directly mapped to the internal state. An empty reason is allowed.

        :return: The reason of this SloEligibility.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this SloEligibility.

        User-defined reason for the current value of instance eligibility. Usually, this can be directly mapped to the internal state. An empty reason is allowed.

        :param reason: The reason of this SloEligibility.
        :type reason: str
        """

        self._reason = reason
