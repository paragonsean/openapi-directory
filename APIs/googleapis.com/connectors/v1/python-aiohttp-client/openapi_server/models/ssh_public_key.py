# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.secret import Secret
from openapi_server import util


class SshPublicKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cert_type: str=None, ssh_client_cert: Secret=None, ssh_client_cert_pass: Secret=None, username: str=None):
        """SshPublicKey - a model defined in OpenAPI

        :param cert_type: The cert_type of this SshPublicKey.
        :param ssh_client_cert: The ssh_client_cert of this SshPublicKey.
        :param ssh_client_cert_pass: The ssh_client_cert_pass of this SshPublicKey.
        :param username: The username of this SshPublicKey.
        """
        self.openapi_types = {
            'cert_type': str,
            'ssh_client_cert': Secret,
            'ssh_client_cert_pass': Secret,
            'username': str
        }

        self.attribute_map = {
            'cert_type': 'certType',
            'ssh_client_cert': 'sshClientCert',
            'ssh_client_cert_pass': 'sshClientCertPass',
            'username': 'username'
        }

        self._cert_type = cert_type
        self._ssh_client_cert = ssh_client_cert
        self._ssh_client_cert_pass = ssh_client_cert_pass
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SshPublicKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SshPublicKey of this SshPublicKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cert_type(self):
        """Gets the cert_type of this SshPublicKey.

        Format of SSH Client cert.

        :return: The cert_type of this SshPublicKey.
        :rtype: str
        """
        return self._cert_type

    @cert_type.setter
    def cert_type(self, cert_type):
        """Sets the cert_type of this SshPublicKey.

        Format of SSH Client cert.

        :param cert_type: The cert_type of this SshPublicKey.
        :type cert_type: str
        """

        self._cert_type = cert_type

    @property
    def ssh_client_cert(self):
        """Gets the ssh_client_cert of this SshPublicKey.


        :return: The ssh_client_cert of this SshPublicKey.
        :rtype: Secret
        """
        return self._ssh_client_cert

    @ssh_client_cert.setter
    def ssh_client_cert(self, ssh_client_cert):
        """Sets the ssh_client_cert of this SshPublicKey.


        :param ssh_client_cert: The ssh_client_cert of this SshPublicKey.
        :type ssh_client_cert: Secret
        """

        self._ssh_client_cert = ssh_client_cert

    @property
    def ssh_client_cert_pass(self):
        """Gets the ssh_client_cert_pass of this SshPublicKey.


        :return: The ssh_client_cert_pass of this SshPublicKey.
        :rtype: Secret
        """
        return self._ssh_client_cert_pass

    @ssh_client_cert_pass.setter
    def ssh_client_cert_pass(self, ssh_client_cert_pass):
        """Sets the ssh_client_cert_pass of this SshPublicKey.


        :param ssh_client_cert_pass: The ssh_client_cert_pass of this SshPublicKey.
        :type ssh_client_cert_pass: Secret
        """

        self._ssh_client_cert_pass = ssh_client_cert_pass

    @property
    def username(self):
        """Gets the username of this SshPublicKey.

        The user account used to authenticate.

        :return: The username of this SshPublicKey.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this SshPublicKey.

        The user account used to authenticate.

        :param username: The username of this SshPublicKey.
        :type username: str
        """

        self._username = username
