# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SupportedRuntimeFeatures(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_apis: bool=None, entity_apis: bool=None, sql_query: bool=None):
        """SupportedRuntimeFeatures - a model defined in OpenAPI

        :param action_apis: The action_apis of this SupportedRuntimeFeatures.
        :param entity_apis: The entity_apis of this SupportedRuntimeFeatures.
        :param sql_query: The sql_query of this SupportedRuntimeFeatures.
        """
        self.openapi_types = {
            'action_apis': bool,
            'entity_apis': bool,
            'sql_query': bool
        }

        self.attribute_map = {
            'action_apis': 'actionApis',
            'entity_apis': 'entityApis',
            'sql_query': 'sqlQuery'
        }

        self._action_apis = action_apis
        self._entity_apis = entity_apis
        self._sql_query = sql_query

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SupportedRuntimeFeatures':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SupportedRuntimeFeatures of this SupportedRuntimeFeatures.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_apis(self):
        """Gets the action_apis of this SupportedRuntimeFeatures.

        Specifies if the connector supports action apis like 'executeAction'.

        :return: The action_apis of this SupportedRuntimeFeatures.
        :rtype: bool
        """
        return self._action_apis

    @action_apis.setter
    def action_apis(self, action_apis):
        """Sets the action_apis of this SupportedRuntimeFeatures.

        Specifies if the connector supports action apis like 'executeAction'.

        :param action_apis: The action_apis of this SupportedRuntimeFeatures.
        :type action_apis: bool
        """

        self._action_apis = action_apis

    @property
    def entity_apis(self):
        """Gets the entity_apis of this SupportedRuntimeFeatures.

        Specifies if the connector supports entity apis like 'createEntity'.

        :return: The entity_apis of this SupportedRuntimeFeatures.
        :rtype: bool
        """
        return self._entity_apis

    @entity_apis.setter
    def entity_apis(self, entity_apis):
        """Sets the entity_apis of this SupportedRuntimeFeatures.

        Specifies if the connector supports entity apis like 'createEntity'.

        :param entity_apis: The entity_apis of this SupportedRuntimeFeatures.
        :type entity_apis: bool
        """

        self._entity_apis = entity_apis

    @property
    def sql_query(self):
        """Gets the sql_query of this SupportedRuntimeFeatures.

        Specifies if the connector supports 'ExecuteSqlQuery' operation.

        :return: The sql_query of this SupportedRuntimeFeatures.
        :rtype: bool
        """
        return self._sql_query

    @sql_query.setter
    def sql_query(self, sql_query):
        """Sets the sql_query of this SupportedRuntimeFeatures.

        Specifies if the connector supports 'ExecuteSqlQuery' operation.

        :param sql_query: The sql_query of this SupportedRuntimeFeatures.
        :type sql_query: bool
        """

        self._sql_query = sql_query
