# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.predefined_detector_info import PredefinedDetectorInfo
from openapi_server.models.user_defined_detector_info import UserDefinedDetectorInfo
from openapi_server import util


class MatchInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, predefined_detector: PredefinedDetectorInfo=None, user_defined_detector: UserDefinedDetectorInfo=None):
        """MatchInfo - a model defined in OpenAPI

        :param predefined_detector: The predefined_detector of this MatchInfo.
        :param user_defined_detector: The user_defined_detector of this MatchInfo.
        """
        self.openapi_types = {
            'predefined_detector': PredefinedDetectorInfo,
            'user_defined_detector': UserDefinedDetectorInfo
        }

        self.attribute_map = {
            'predefined_detector': 'predefinedDetector',
            'user_defined_detector': 'userDefinedDetector'
        }

        self._predefined_detector = predefined_detector
        self._user_defined_detector = user_defined_detector

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MatchInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MatchInfo of this MatchInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def predefined_detector(self):
        """Gets the predefined_detector of this MatchInfo.


        :return: The predefined_detector of this MatchInfo.
        :rtype: PredefinedDetectorInfo
        """
        return self._predefined_detector

    @predefined_detector.setter
    def predefined_detector(self, predefined_detector):
        """Sets the predefined_detector of this MatchInfo.


        :param predefined_detector: The predefined_detector of this MatchInfo.
        :type predefined_detector: PredefinedDetectorInfo
        """

        self._predefined_detector = predefined_detector

    @property
    def user_defined_detector(self):
        """Gets the user_defined_detector of this MatchInfo.


        :return: The user_defined_detector of this MatchInfo.
        :rtype: UserDefinedDetectorInfo
        """
        return self._user_defined_detector

    @user_defined_detector.setter
    def user_defined_detector(self, user_defined_detector):
        """Sets the user_defined_detector of this MatchInfo.


        :param user_defined_detector: The user_defined_detector of this MatchInfo.
        :type user_defined_detector: UserDefinedDetectorInfo
        """

        self._user_defined_detector = user_defined_detector
