# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CloudPubsubTopic(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, payload_format: str=None, topic_name: str=None):
        """CloudPubsubTopic - a model defined in OpenAPI

        :param payload_format: The payload_format of this CloudPubsubTopic.
        :param topic_name: The topic_name of this CloudPubsubTopic.
        """
        self.openapi_types = {
            'payload_format': str,
            'topic_name': str
        }

        self.attribute_map = {
            'payload_format': 'payloadFormat',
            'topic_name': 'topicName'
        }

        self._payload_format = payload_format
        self._topic_name = topic_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CloudPubsubTopic':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CloudPubsubTopic of this CloudPubsubTopic.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def payload_format(self):
        """Gets the payload_format of this CloudPubsubTopic.

        Optional. The format of the payload that would be sent. If not specified the format will be JSON.

        :return: The payload_format of this CloudPubsubTopic.
        :rtype: str
        """
        return self._payload_format

    @payload_format.setter
    def payload_format(self, payload_format):
        """Sets the payload_format of this CloudPubsubTopic.

        Optional. The format of the payload that would be sent. If not specified the format will be JSON.

        :param payload_format: The payload_format of this CloudPubsubTopic.
        :type payload_format: str
        """
        allowed_values = ["PAYLOAD_FORMAT_UNSPECIFIED", "JSON"]  # noqa: E501
        if payload_format not in allowed_values:
            raise ValueError(
                "Invalid value for `payload_format` ({0}), must be one of {1}"
                .format(payload_format, allowed_values)
            )

        self._payload_format = payload_format

    @property
    def topic_name(self):
        """Gets the topic_name of this CloudPubsubTopic.

        The `name` field of a Cloud Pubsub [Topic] (https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics#Topic).

        :return: The topic_name of this CloudPubsubTopic.
        :rtype: str
        """
        return self._topic_name

    @topic_name.setter
    def topic_name(self, topic_name):
        """Sets the topic_name of this CloudPubsubTopic.

        The `name` field of a Cloud Pubsub [Topic] (https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics#Topic).

        :param topic_name: The topic_name of this CloudPubsubTopic.
        :type topic_name: str
        """

        self._topic_name = topic_name
