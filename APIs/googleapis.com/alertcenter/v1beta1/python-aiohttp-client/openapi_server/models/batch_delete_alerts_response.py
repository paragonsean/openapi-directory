# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.status import Status
from openapi_server import util


class BatchDeleteAlertsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, failed_alert_status: Dict[str, Status]=None, success_alert_ids: List[str]=None):
        """BatchDeleteAlertsResponse - a model defined in OpenAPI

        :param failed_alert_status: The failed_alert_status of this BatchDeleteAlertsResponse.
        :param success_alert_ids: The success_alert_ids of this BatchDeleteAlertsResponse.
        """
        self.openapi_types = {
            'failed_alert_status': Dict[str, Status],
            'success_alert_ids': List[str]
        }

        self.attribute_map = {
            'failed_alert_status': 'failedAlertStatus',
            'success_alert_ids': 'successAlertIds'
        }

        self._failed_alert_status = failed_alert_status
        self._success_alert_ids = success_alert_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchDeleteAlertsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchDeleteAlertsResponse of this BatchDeleteAlertsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def failed_alert_status(self):
        """Gets the failed_alert_status of this BatchDeleteAlertsResponse.

        The status details for each failed `alert_id`.

        :return: The failed_alert_status of this BatchDeleteAlertsResponse.
        :rtype: Dict[str, Status]
        """
        return self._failed_alert_status

    @failed_alert_status.setter
    def failed_alert_status(self, failed_alert_status):
        """Sets the failed_alert_status of this BatchDeleteAlertsResponse.

        The status details for each failed `alert_id`.

        :param failed_alert_status: The failed_alert_status of this BatchDeleteAlertsResponse.
        :type failed_alert_status: Dict[str, Status]
        """

        self._failed_alert_status = failed_alert_status

    @property
    def success_alert_ids(self):
        """Gets the success_alert_ids of this BatchDeleteAlertsResponse.

        The successful list of alert IDs.

        :return: The success_alert_ids of this BatchDeleteAlertsResponse.
        :rtype: List[str]
        """
        return self._success_alert_ids

    @success_alert_ids.setter
    def success_alert_ids(self, success_alert_ids):
        """Sets the success_alert_ids of this BatchDeleteAlertsResponse.

        The successful list of alert IDs.

        :param success_alert_ids: The success_alert_ids of this BatchDeleteAlertsResponse.
        :type success_alert_ids: List[str]
        """

        self._success_alert_ids = success_alert_ids
