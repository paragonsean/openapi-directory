# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GmailMessageInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attachments_sha256_hash: List[str]=None, _date: str=None, md5_hash_message_body: str=None, md5_hash_subject: str=None, message_body_snippet: str=None, message_id: str=None, recipient: str=None, sent_time: str=None, subject_text: str=None):
        """GmailMessageInfo - a model defined in OpenAPI

        :param attachments_sha256_hash: The attachments_sha256_hash of this GmailMessageInfo.
        :param _date: The _date of this GmailMessageInfo.
        :param md5_hash_message_body: The md5_hash_message_body of this GmailMessageInfo.
        :param md5_hash_subject: The md5_hash_subject of this GmailMessageInfo.
        :param message_body_snippet: The message_body_snippet of this GmailMessageInfo.
        :param message_id: The message_id of this GmailMessageInfo.
        :param recipient: The recipient of this GmailMessageInfo.
        :param sent_time: The sent_time of this GmailMessageInfo.
        :param subject_text: The subject_text of this GmailMessageInfo.
        """
        self.openapi_types = {
            'attachments_sha256_hash': List[str],
            '_date': str,
            'md5_hash_message_body': str,
            'md5_hash_subject': str,
            'message_body_snippet': str,
            'message_id': str,
            'recipient': str,
            'sent_time': str,
            'subject_text': str
        }

        self.attribute_map = {
            'attachments_sha256_hash': 'attachmentsSha256Hash',
            '_date': 'date',
            'md5_hash_message_body': 'md5HashMessageBody',
            'md5_hash_subject': 'md5HashSubject',
            'message_body_snippet': 'messageBodySnippet',
            'message_id': 'messageId',
            'recipient': 'recipient',
            'sent_time': 'sentTime',
            'subject_text': 'subjectText'
        }

        self._attachments_sha256_hash = attachments_sha256_hash
        self.__date = _date
        self._md5_hash_message_body = md5_hash_message_body
        self._md5_hash_subject = md5_hash_subject
        self._message_body_snippet = message_body_snippet
        self._message_id = message_id
        self._recipient = recipient
        self._sent_time = sent_time
        self._subject_text = subject_text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GmailMessageInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GmailMessageInfo of this GmailMessageInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attachments_sha256_hash(self):
        """Gets the attachments_sha256_hash of this GmailMessageInfo.

        The `SHA256` hash of email's attachment and all MIME parts.

        :return: The attachments_sha256_hash of this GmailMessageInfo.
        :rtype: List[str]
        """
        return self._attachments_sha256_hash

    @attachments_sha256_hash.setter
    def attachments_sha256_hash(self, attachments_sha256_hash):
        """Sets the attachments_sha256_hash of this GmailMessageInfo.

        The `SHA256` hash of email's attachment and all MIME parts.

        :param attachments_sha256_hash: The attachments_sha256_hash of this GmailMessageInfo.
        :type attachments_sha256_hash: List[str]
        """

        self._attachments_sha256_hash = attachments_sha256_hash

    @property
    def _date(self):
        """Gets the _date of this GmailMessageInfo.

        The date of the event related to this email.

        :return: The _date of this GmailMessageInfo.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this GmailMessageInfo.

        The date of the event related to this email.

        :param _date: The _date of this GmailMessageInfo.
        :type _date: str
        """

        self.__date = _date

    @property
    def md5_hash_message_body(self):
        """Gets the md5_hash_message_body of this GmailMessageInfo.

        The hash of the message body text.

        :return: The md5_hash_message_body of this GmailMessageInfo.
        :rtype: str
        """
        return self._md5_hash_message_body

    @md5_hash_message_body.setter
    def md5_hash_message_body(self, md5_hash_message_body):
        """Sets the md5_hash_message_body of this GmailMessageInfo.

        The hash of the message body text.

        :param md5_hash_message_body: The md5_hash_message_body of this GmailMessageInfo.
        :type md5_hash_message_body: str
        """

        self._md5_hash_message_body = md5_hash_message_body

    @property
    def md5_hash_subject(self):
        """Gets the md5_hash_subject of this GmailMessageInfo.

        The MD5 Hash of email's subject (only available for reported emails).

        :return: The md5_hash_subject of this GmailMessageInfo.
        :rtype: str
        """
        return self._md5_hash_subject

    @md5_hash_subject.setter
    def md5_hash_subject(self, md5_hash_subject):
        """Sets the md5_hash_subject of this GmailMessageInfo.

        The MD5 Hash of email's subject (only available for reported emails).

        :param md5_hash_subject: The md5_hash_subject of this GmailMessageInfo.
        :type md5_hash_subject: str
        """

        self._md5_hash_subject = md5_hash_subject

    @property
    def message_body_snippet(self):
        """Gets the message_body_snippet of this GmailMessageInfo.

        The snippet of the message body text (only available for reported emails).

        :return: The message_body_snippet of this GmailMessageInfo.
        :rtype: str
        """
        return self._message_body_snippet

    @message_body_snippet.setter
    def message_body_snippet(self, message_body_snippet):
        """Sets the message_body_snippet of this GmailMessageInfo.

        The snippet of the message body text (only available for reported emails).

        :param message_body_snippet: The message_body_snippet of this GmailMessageInfo.
        :type message_body_snippet: str
        """

        self._message_body_snippet = message_body_snippet

    @property
    def message_id(self):
        """Gets the message_id of this GmailMessageInfo.

        The message ID.

        :return: The message_id of this GmailMessageInfo.
        :rtype: str
        """
        return self._message_id

    @message_id.setter
    def message_id(self, message_id):
        """Sets the message_id of this GmailMessageInfo.

        The message ID.

        :param message_id: The message_id of this GmailMessageInfo.
        :type message_id: str
        """

        self._message_id = message_id

    @property
    def recipient(self):
        """Gets the recipient of this GmailMessageInfo.

        The recipient of this email.

        :return: The recipient of this GmailMessageInfo.
        :rtype: str
        """
        return self._recipient

    @recipient.setter
    def recipient(self, recipient):
        """Sets the recipient of this GmailMessageInfo.

        The recipient of this email.

        :param recipient: The recipient of this GmailMessageInfo.
        :type recipient: str
        """

        self._recipient = recipient

    @property
    def sent_time(self):
        """Gets the sent_time of this GmailMessageInfo.

        The sent time of the email.

        :return: The sent_time of this GmailMessageInfo.
        :rtype: str
        """
        return self._sent_time

    @sent_time.setter
    def sent_time(self, sent_time):
        """Sets the sent_time of this GmailMessageInfo.

        The sent time of the email.

        :param sent_time: The sent_time of this GmailMessageInfo.
        :type sent_time: str
        """

        self._sent_time = sent_time

    @property
    def subject_text(self):
        """Gets the subject_text of this GmailMessageInfo.

        The email subject text (only available for reported emails).

        :return: The subject_text of this GmailMessageInfo.
        :rtype: str
        """
        return self._subject_text

    @subject_text.setter
    def subject_text(self, subject_text):
        """Sets the subject_text of this GmailMessageInfo.

        The email subject text (only available for reported emails).

        :param subject_text: The subject_text of this GmailMessageInfo.
        :type subject_text: str
        """

        self._subject_text = subject_text
