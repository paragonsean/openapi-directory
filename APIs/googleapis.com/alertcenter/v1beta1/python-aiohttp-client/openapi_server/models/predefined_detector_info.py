# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PredefinedDetectorInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, detector_name: str=None):
        """PredefinedDetectorInfo - a model defined in OpenAPI

        :param detector_name: The detector_name of this PredefinedDetectorInfo.
        """
        self.openapi_types = {
            'detector_name': str
        }

        self.attribute_map = {
            'detector_name': 'detectorName'
        }

        self._detector_name = detector_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PredefinedDetectorInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PredefinedDetectorInfo of this PredefinedDetectorInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def detector_name(self):
        """Gets the detector_name of this PredefinedDetectorInfo.

        Name that uniquely identifies the detector.

        :return: The detector_name of this PredefinedDetectorInfo.
        :rtype: str
        """
        return self._detector_name

    @detector_name.setter
    def detector_name(self, detector_name):
        """Sets the detector_name of this PredefinedDetectorInfo.

        Name that uniquely identifies the detector.

        :param detector_name: The detector_name of this PredefinedDetectorInfo.
        :type detector_name: str
        """

        self._detector_name = detector_name
