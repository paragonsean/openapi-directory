# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LoginDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ip_address: str=None, login_time: str=None):
        """LoginDetails - a model defined in OpenAPI

        :param ip_address: The ip_address of this LoginDetails.
        :param login_time: The login_time of this LoginDetails.
        """
        self.openapi_types = {
            'ip_address': str,
            'login_time': str
        }

        self.attribute_map = {
            'ip_address': 'ipAddress',
            'login_time': 'loginTime'
        }

        self._ip_address = ip_address
        self._login_time = login_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LoginDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LoginDetails of this LoginDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ip_address(self):
        """Gets the ip_address of this LoginDetails.

        Optional. The human-readable IP address (for example, `11.22.33.44`) that is associated with the warning event.

        :return: The ip_address of this LoginDetails.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this LoginDetails.

        Optional. The human-readable IP address (for example, `11.22.33.44`) that is associated with the warning event.

        :param ip_address: The ip_address of this LoginDetails.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def login_time(self):
        """Gets the login_time of this LoginDetails.

        Optional. The successful login time that is associated with the warning event. This isn't present for blocked login attempts.

        :return: The login_time of this LoginDetails.
        :rtype: str
        """
        return self._login_time

    @login_time.setter
    def login_time(self, login_time):
        """Sets the login_time of this LoginDetails.

        Optional. The successful login time that is associated with the warning event. This isn't present for blocked login attempts.

        :param login_time: The login_time of this LoginDetails.
        :type login_time: str
        """

        self._login_time = login_time
