# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rule_violation_info import RuleViolationInfo
from openapi_server import util


class DlpRuleViolation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rule_violation_info: RuleViolationInfo=None):
        """DlpRuleViolation - a model defined in OpenAPI

        :param rule_violation_info: The rule_violation_info of this DlpRuleViolation.
        """
        self.openapi_types = {
            'rule_violation_info': RuleViolationInfo
        }

        self.attribute_map = {
            'rule_violation_info': 'ruleViolationInfo'
        }

        self._rule_violation_info = rule_violation_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DlpRuleViolation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DlpRuleViolation of this DlpRuleViolation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rule_violation_info(self):
        """Gets the rule_violation_info of this DlpRuleViolation.


        :return: The rule_violation_info of this DlpRuleViolation.
        :rtype: RuleViolationInfo
        """
        return self._rule_violation_info

    @rule_violation_info.setter
    def rule_violation_info(self, rule_violation_info):
        """Sets the rule_violation_info of this DlpRuleViolation.


        :param rule_violation_info: The rule_violation_info of this DlpRuleViolation.
        :type rule_violation_info: RuleViolationInfo
        """

        self._rule_violation_info = rule_violation_info
