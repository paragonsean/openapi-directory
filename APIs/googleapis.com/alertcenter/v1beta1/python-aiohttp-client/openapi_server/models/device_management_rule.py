# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeviceManagementRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_id: str=None, device_model: str=None, device_type: str=None, email: str=None, ios_vendor_id: str=None, resource_id: str=None, serial_number: str=None):
        """DeviceManagementRule - a model defined in OpenAPI

        :param device_id: The device_id of this DeviceManagementRule.
        :param device_model: The device_model of this DeviceManagementRule.
        :param device_type: The device_type of this DeviceManagementRule.
        :param email: The email of this DeviceManagementRule.
        :param ios_vendor_id: The ios_vendor_id of this DeviceManagementRule.
        :param resource_id: The resource_id of this DeviceManagementRule.
        :param serial_number: The serial_number of this DeviceManagementRule.
        """
        self.openapi_types = {
            'device_id': str,
            'device_model': str,
            'device_type': str,
            'email': str,
            'ios_vendor_id': str,
            'resource_id': str,
            'serial_number': str
        }

        self.attribute_map = {
            'device_id': 'deviceId',
            'device_model': 'deviceModel',
            'device_type': 'deviceType',
            'email': 'email',
            'ios_vendor_id': 'iosVendorId',
            'resource_id': 'resourceId',
            'serial_number': 'serialNumber'
        }

        self._device_id = device_id
        self._device_model = device_model
        self._device_type = device_type
        self._email = email
        self._ios_vendor_id = ios_vendor_id
        self._resource_id = resource_id
        self._serial_number = serial_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeviceManagementRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeviceManagementRule of this DeviceManagementRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_id(self):
        """Gets the device_id of this DeviceManagementRule.

        Required. The device ID.

        :return: The device_id of this DeviceManagementRule.
        :rtype: str
        """
        return self._device_id

    @device_id.setter
    def device_id(self, device_id):
        """Sets the device_id of this DeviceManagementRule.

        Required. The device ID.

        :param device_id: The device_id of this DeviceManagementRule.
        :type device_id: str
        """

        self._device_id = device_id

    @property
    def device_model(self):
        """Gets the device_model of this DeviceManagementRule.

        The model of the device.

        :return: The device_model of this DeviceManagementRule.
        :rtype: str
        """
        return self._device_model

    @device_model.setter
    def device_model(self, device_model):
        """Sets the device_model of this DeviceManagementRule.

        The model of the device.

        :param device_model: The device_model of this DeviceManagementRule.
        :type device_model: str
        """

        self._device_model = device_model

    @property
    def device_type(self):
        """Gets the device_type of this DeviceManagementRule.

        The type of the device.

        :return: The device_type of this DeviceManagementRule.
        :rtype: str
        """
        return self._device_type

    @device_type.setter
    def device_type(self, device_type):
        """Sets the device_type of this DeviceManagementRule.

        The type of the device.

        :param device_type: The device_type of this DeviceManagementRule.
        :type device_type: str
        """

        self._device_type = device_type

    @property
    def email(self):
        """Gets the email of this DeviceManagementRule.

        The email of the user this alert was created for.

        :return: The email of this DeviceManagementRule.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this DeviceManagementRule.

        The email of the user this alert was created for.

        :param email: The email of this DeviceManagementRule.
        :type email: str
        """

        self._email = email

    @property
    def ios_vendor_id(self):
        """Gets the ios_vendor_id of this DeviceManagementRule.

        Required for iOS, empty for others.

        :return: The ios_vendor_id of this DeviceManagementRule.
        :rtype: str
        """
        return self._ios_vendor_id

    @ios_vendor_id.setter
    def ios_vendor_id(self, ios_vendor_id):
        """Sets the ios_vendor_id of this DeviceManagementRule.

        Required for iOS, empty for others.

        :param ios_vendor_id: The ios_vendor_id of this DeviceManagementRule.
        :type ios_vendor_id: str
        """

        self._ios_vendor_id = ios_vendor_id

    @property
    def resource_id(self):
        """Gets the resource_id of this DeviceManagementRule.

        The device resource ID.

        :return: The resource_id of this DeviceManagementRule.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this DeviceManagementRule.

        The device resource ID.

        :param resource_id: The resource_id of this DeviceManagementRule.
        :type resource_id: str
        """

        self._resource_id = resource_id

    @property
    def serial_number(self):
        """Gets the serial_number of this DeviceManagementRule.

        The serial number of the device.

        :return: The serial_number of this DeviceManagementRule.
        :rtype: str
        """
        return self._serial_number

    @serial_number.setter
    def serial_number(self, serial_number):
        """Sets the serial_number of this DeviceManagementRule.

        The serial number of the device.

        :param serial_number: The serial_number of this DeviceManagementRule.
        :type serial_number: str
        """

        self._serial_number = serial_number
