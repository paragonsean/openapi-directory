# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_suspension_details import AccountSuspensionDetails
from openapi_server import util


class AccountSuspensionWarning(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, appeal_window: str=None, state: str=None, suspension_details: List[AccountSuspensionDetails]=None):
        """AccountSuspensionWarning - a model defined in OpenAPI

        :param appeal_window: The appeal_window of this AccountSuspensionWarning.
        :param state: The state of this AccountSuspensionWarning.
        :param suspension_details: The suspension_details of this AccountSuspensionWarning.
        """
        self.openapi_types = {
            'appeal_window': str,
            'state': str,
            'suspension_details': List[AccountSuspensionDetails]
        }

        self.attribute_map = {
            'appeal_window': 'appealWindow',
            'state': 'state',
            'suspension_details': 'suspensionDetails'
        }

        self._appeal_window = appeal_window
        self._state = state
        self._suspension_details = suspension_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountSuspensionWarning':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountSuspensionWarning of this AccountSuspensionWarning.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def appeal_window(self):
        """Gets the appeal_window of this AccountSuspensionWarning.

        The amount of time remaining to appeal an imminent suspension. After this window has elapsed, the account will be suspended. Only populated if the account suspension is in WARNING state.

        :return: The appeal_window of this AccountSuspensionWarning.
        :rtype: str
        """
        return self._appeal_window

    @appeal_window.setter
    def appeal_window(self, appeal_window):
        """Sets the appeal_window of this AccountSuspensionWarning.

        The amount of time remaining to appeal an imminent suspension. After this window has elapsed, the account will be suspended. Only populated if the account suspension is in WARNING state.

        :param appeal_window: The appeal_window of this AccountSuspensionWarning.
        :type appeal_window: str
        """

        self._appeal_window = appeal_window

    @property
    def state(self):
        """Gets the state of this AccountSuspensionWarning.

        Account suspension warning state.

        :return: The state of this AccountSuspensionWarning.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this AccountSuspensionWarning.

        Account suspension warning state.

        :param state: The state of this AccountSuspensionWarning.
        :type state: str
        """
        allowed_values = ["ACCOUNT_SUSPENSION_WARNING_STATE_UNSPECIFIED", "WARNING", "SUSPENDED", "APPEAL_APPROVED", "APPEAL_SUBMITTED"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def suspension_details(self):
        """Gets the suspension_details of this AccountSuspensionWarning.

        Details about why an account is being suspended.

        :return: The suspension_details of this AccountSuspensionWarning.
        :rtype: List[AccountSuspensionDetails]
        """
        return self._suspension_details

    @suspension_details.setter
    def suspension_details(self, suspension_details):
        """Sets the suspension_details of this AccountSuspensionWarning.

        Details about why an account is being suspended.

        :param suspension_details: The suspension_details of this AccountSuspensionWarning.
        :type suspension_details: List[AccountSuspensionDetails]
        """

        self._suspension_details = suspension_details
