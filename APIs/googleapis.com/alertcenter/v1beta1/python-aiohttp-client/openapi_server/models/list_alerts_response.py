# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.alert import Alert
from openapi_server import util


class ListAlertsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alerts: List[Alert]=None, next_page_token: str=None):
        """ListAlertsResponse - a model defined in OpenAPI

        :param alerts: The alerts of this ListAlertsResponse.
        :param next_page_token: The next_page_token of this ListAlertsResponse.
        """
        self.openapi_types = {
            'alerts': List[Alert],
            'next_page_token': str
        }

        self.attribute_map = {
            'alerts': 'alerts',
            'next_page_token': 'nextPageToken'
        }

        self._alerts = alerts
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListAlertsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListAlertsResponse of this ListAlertsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alerts(self):
        """Gets the alerts of this ListAlertsResponse.

        The list of alerts.

        :return: The alerts of this ListAlertsResponse.
        :rtype: List[Alert]
        """
        return self._alerts

    @alerts.setter
    def alerts(self, alerts):
        """Sets the alerts of this ListAlertsResponse.

        The list of alerts.

        :param alerts: The alerts of this ListAlertsResponse.
        :type alerts: List[Alert]
        """

        self._alerts = alerts

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListAlertsResponse.

        The token for the next page. If not empty, indicates that there may be more alerts that match the listing request; this value can be used in a subsequent ListAlertsRequest to get alerts continuing from last result of the current list call.

        :return: The next_page_token of this ListAlertsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListAlertsResponse.

        The token for the next page. If not empty, indicates that there may be more alerts that match the listing request; this value can be used in a subsequent ListAlertsRequest to get alerts continuing from last result of the current list call.

        :param next_page_token: The next_page_token of this ListAlertsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
