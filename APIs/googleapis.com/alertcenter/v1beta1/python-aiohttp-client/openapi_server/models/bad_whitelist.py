# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.domain_id import DomainId
from openapi_server.models.gmail_message_info import GmailMessageInfo
from openapi_server.models.malicious_entity import MaliciousEntity
from openapi_server import util


class BadWhitelist(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain_id: DomainId=None, malicious_entity: MaliciousEntity=None, messages: List[GmailMessageInfo]=None, source_ip: str=None):
        """BadWhitelist - a model defined in OpenAPI

        :param domain_id: The domain_id of this BadWhitelist.
        :param malicious_entity: The malicious_entity of this BadWhitelist.
        :param messages: The messages of this BadWhitelist.
        :param source_ip: The source_ip of this BadWhitelist.
        """
        self.openapi_types = {
            'domain_id': DomainId,
            'malicious_entity': MaliciousEntity,
            'messages': List[GmailMessageInfo],
            'source_ip': str
        }

        self.attribute_map = {
            'domain_id': 'domainId',
            'malicious_entity': 'maliciousEntity',
            'messages': 'messages',
            'source_ip': 'sourceIp'
        }

        self._domain_id = domain_id
        self._malicious_entity = malicious_entity
        self._messages = messages
        self._source_ip = source_ip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BadWhitelist':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BadWhitelist of this BadWhitelist.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_id(self):
        """Gets the domain_id of this BadWhitelist.


        :return: The domain_id of this BadWhitelist.
        :rtype: DomainId
        """
        return self._domain_id

    @domain_id.setter
    def domain_id(self, domain_id):
        """Sets the domain_id of this BadWhitelist.


        :param domain_id: The domain_id of this BadWhitelist.
        :type domain_id: DomainId
        """

        self._domain_id = domain_id

    @property
    def malicious_entity(self):
        """Gets the malicious_entity of this BadWhitelist.


        :return: The malicious_entity of this BadWhitelist.
        :rtype: MaliciousEntity
        """
        return self._malicious_entity

    @malicious_entity.setter
    def malicious_entity(self, malicious_entity):
        """Sets the malicious_entity of this BadWhitelist.


        :param malicious_entity: The malicious_entity of this BadWhitelist.
        :type malicious_entity: MaliciousEntity
        """

        self._malicious_entity = malicious_entity

    @property
    def messages(self):
        """Gets the messages of this BadWhitelist.

        The list of messages contained by this alert.

        :return: The messages of this BadWhitelist.
        :rtype: List[GmailMessageInfo]
        """
        return self._messages

    @messages.setter
    def messages(self, messages):
        """Sets the messages of this BadWhitelist.

        The list of messages contained by this alert.

        :param messages: The messages of this BadWhitelist.
        :type messages: List[GmailMessageInfo]
        """

        self._messages = messages

    @property
    def source_ip(self):
        """Gets the source_ip of this BadWhitelist.

        The source IP address of the malicious email, for example, `127.0.0.1`.

        :return: The source_ip of this BadWhitelist.
        :rtype: str
        """
        return self._source_ip

    @source_ip.setter
    def source_ip(self, source_ip):
        """Sets the source_ip of this BadWhitelist.

        The source IP address of the malicious email, for example, `127.0.0.1`.

        :param source_ip: The source_ip of this BadWhitelist.
        :type source_ip: str
        """

        self._source_ip = source_ip
