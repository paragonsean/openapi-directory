# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.entity import Entity
from openapi_server import util


class EntityList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entities: List[Entity]=None, headers: List[str]=None, name: str=None):
        """EntityList - a model defined in OpenAPI

        :param entities: The entities of this EntityList.
        :param headers: The headers of this EntityList.
        :param name: The name of this EntityList.
        """
        self.openapi_types = {
            'entities': List[Entity],
            'headers': List[str],
            'name': str
        }

        self.attribute_map = {
            'entities': 'entities',
            'headers': 'headers',
            'name': 'name'
        }

        self._entities = entities
        self._headers = headers
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EntityList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EntityList of this EntityList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entities(self):
        """Gets the entities of this EntityList.

        List of entities affected by the alert.

        :return: The entities of this EntityList.
        :rtype: List[Entity]
        """
        return self._entities

    @entities.setter
    def entities(self, entities):
        """Sets the entities of this EntityList.

        List of entities affected by the alert.

        :param entities: The entities of this EntityList.
        :type entities: List[Entity]
        """

        self._entities = entities

    @property
    def headers(self):
        """Gets the headers of this EntityList.

        Headers of the values in entities. If no value is defined in Entity, this field should be empty.

        :return: The headers of this EntityList.
        :rtype: List[str]
        """
        return self._headers

    @headers.setter
    def headers(self, headers):
        """Sets the headers of this EntityList.

        Headers of the values in entities. If no value is defined in Entity, this field should be empty.

        :param headers: The headers of this EntityList.
        :type headers: List[str]
        """

        self._headers = headers

    @property
    def name(self):
        """Gets the name of this EntityList.

        Name of the key detail used to display this entity list.

        :return: The name of this EntityList.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this EntityList.

        Name of the key detail used to display this entity list.

        :param name: The name of this EntityList.
        :type name: str
        """

        self._name = name
