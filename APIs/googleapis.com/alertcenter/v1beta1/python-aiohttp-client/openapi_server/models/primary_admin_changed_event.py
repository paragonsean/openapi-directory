# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PrimaryAdminChangedEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain: str=None, previous_admin_email: str=None, updated_admin_email: str=None):
        """PrimaryAdminChangedEvent - a model defined in OpenAPI

        :param domain: The domain of this PrimaryAdminChangedEvent.
        :param previous_admin_email: The previous_admin_email of this PrimaryAdminChangedEvent.
        :param updated_admin_email: The updated_admin_email of this PrimaryAdminChangedEvent.
        """
        self.openapi_types = {
            'domain': str,
            'previous_admin_email': str,
            'updated_admin_email': str
        }

        self.attribute_map = {
            'domain': 'domain',
            'previous_admin_email': 'previousAdminEmail',
            'updated_admin_email': 'updatedAdminEmail'
        }

        self._domain = domain
        self._previous_admin_email = previous_admin_email
        self._updated_admin_email = updated_admin_email

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PrimaryAdminChangedEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PrimaryAdminChangedEvent of this PrimaryAdminChangedEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain(self):
        """Gets the domain of this PrimaryAdminChangedEvent.

        domain in which actioned occurred

        :return: The domain of this PrimaryAdminChangedEvent.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this PrimaryAdminChangedEvent.

        domain in which actioned occurred

        :param domain: The domain of this PrimaryAdminChangedEvent.
        :type domain: str
        """

        self._domain = domain

    @property
    def previous_admin_email(self):
        """Gets the previous_admin_email of this PrimaryAdminChangedEvent.

        Email of person who was the primary admin before the action

        :return: The previous_admin_email of this PrimaryAdminChangedEvent.
        :rtype: str
        """
        return self._previous_admin_email

    @previous_admin_email.setter
    def previous_admin_email(self, previous_admin_email):
        """Sets the previous_admin_email of this PrimaryAdminChangedEvent.

        Email of person who was the primary admin before the action

        :param previous_admin_email: The previous_admin_email of this PrimaryAdminChangedEvent.
        :type previous_admin_email: str
        """

        self._previous_admin_email = previous_admin_email

    @property
    def updated_admin_email(self):
        """Gets the updated_admin_email of this PrimaryAdminChangedEvent.

        Email of person who is the primary admin after the action

        :return: The updated_admin_email of this PrimaryAdminChangedEvent.
        :rtype: str
        """
        return self._updated_admin_email

    @updated_admin_email.setter
    def updated_admin_email(self, updated_admin_email):
        """Sets the updated_admin_email of this PrimaryAdminChangedEvent.

        Email of person who is the primary admin after the action

        :param updated_admin_email: The updated_admin_email of this PrimaryAdminChangedEvent.
        :type updated_admin_email: str
        """

        self._updated_admin_email = updated_admin_email
