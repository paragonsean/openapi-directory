/*
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Detailed information of a single MDM suspicious activity event.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:29.687014-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SuspiciousActivitySecurityDetail {
  public static final String SERIALIZED_NAME_DEVICE_ID = "deviceId";
  @SerializedName(SERIALIZED_NAME_DEVICE_ID)
  private String deviceId;

  public static final String SERIALIZED_NAME_DEVICE_MODEL = "deviceModel";
  @SerializedName(SERIALIZED_NAME_DEVICE_MODEL)
  private String deviceModel;

  public static final String SERIALIZED_NAME_DEVICE_PROPERTY = "deviceProperty";
  @SerializedName(SERIALIZED_NAME_DEVICE_PROPERTY)
  private String deviceProperty;

  public static final String SERIALIZED_NAME_DEVICE_TYPE = "deviceType";
  @SerializedName(SERIALIZED_NAME_DEVICE_TYPE)
  private String deviceType;

  public static final String SERIALIZED_NAME_IOS_VENDOR_ID = "iosVendorId";
  @SerializedName(SERIALIZED_NAME_IOS_VENDOR_ID)
  private String iosVendorId;

  public static final String SERIALIZED_NAME_NEW_VALUE = "newValue";
  @SerializedName(SERIALIZED_NAME_NEW_VALUE)
  private String newValue;

  public static final String SERIALIZED_NAME_OLD_VALUE = "oldValue";
  @SerializedName(SERIALIZED_NAME_OLD_VALUE)
  private String oldValue;

  public static final String SERIALIZED_NAME_RESOURCE_ID = "resourceId";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ID)
  private String resourceId;

  public static final String SERIALIZED_NAME_SERIAL_NUMBER = "serialNumber";
  @SerializedName(SERIALIZED_NAME_SERIAL_NUMBER)
  private String serialNumber;

  public SuspiciousActivitySecurityDetail() {
  }

  public SuspiciousActivitySecurityDetail deviceId(String deviceId) {
    this.deviceId = deviceId;
    return this;
  }

  /**
   * Required. The device ID.
   * @return deviceId
   */
  @javax.annotation.Nullable
  public String getDeviceId() {
    return deviceId;
  }

  public void setDeviceId(String deviceId) {
    this.deviceId = deviceId;
  }


  public SuspiciousActivitySecurityDetail deviceModel(String deviceModel) {
    this.deviceModel = deviceModel;
    return this;
  }

  /**
   * The model of the device.
   * @return deviceModel
   */
  @javax.annotation.Nullable
  public String getDeviceModel() {
    return deviceModel;
  }

  public void setDeviceModel(String deviceModel) {
    this.deviceModel = deviceModel;
  }


  public SuspiciousActivitySecurityDetail deviceProperty(String deviceProperty) {
    this.deviceProperty = deviceProperty;
    return this;
  }

  /**
   * The device property which was changed.
   * @return deviceProperty
   */
  @javax.annotation.Nullable
  public String getDeviceProperty() {
    return deviceProperty;
  }

  public void setDeviceProperty(String deviceProperty) {
    this.deviceProperty = deviceProperty;
  }


  public SuspiciousActivitySecurityDetail deviceType(String deviceType) {
    this.deviceType = deviceType;
    return this;
  }

  /**
   * The type of the device.
   * @return deviceType
   */
  @javax.annotation.Nullable
  public String getDeviceType() {
    return deviceType;
  }

  public void setDeviceType(String deviceType) {
    this.deviceType = deviceType;
  }


  public SuspiciousActivitySecurityDetail iosVendorId(String iosVendorId) {
    this.iosVendorId = iosVendorId;
    return this;
  }

  /**
   * Required for iOS, empty for others.
   * @return iosVendorId
   */
  @javax.annotation.Nullable
  public String getIosVendorId() {
    return iosVendorId;
  }

  public void setIosVendorId(String iosVendorId) {
    this.iosVendorId = iosVendorId;
  }


  public SuspiciousActivitySecurityDetail newValue(String newValue) {
    this.newValue = newValue;
    return this;
  }

  /**
   * The new value of the device property after the change.
   * @return newValue
   */
  @javax.annotation.Nullable
  public String getNewValue() {
    return newValue;
  }

  public void setNewValue(String newValue) {
    this.newValue = newValue;
  }


  public SuspiciousActivitySecurityDetail oldValue(String oldValue) {
    this.oldValue = oldValue;
    return this;
  }

  /**
   * The old value of the device property before the change.
   * @return oldValue
   */
  @javax.annotation.Nullable
  public String getOldValue() {
    return oldValue;
  }

  public void setOldValue(String oldValue) {
    this.oldValue = oldValue;
  }


  public SuspiciousActivitySecurityDetail resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

  /**
   * The device resource ID.
   * @return resourceId
   */
  @javax.annotation.Nullable
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }


  public SuspiciousActivitySecurityDetail serialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
    return this;
  }

  /**
   * The serial number of the device.
   * @return serialNumber
   */
  @javax.annotation.Nullable
  public String getSerialNumber() {
    return serialNumber;
  }

  public void setSerialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SuspiciousActivitySecurityDetail suspiciousActivitySecurityDetail = (SuspiciousActivitySecurityDetail) o;
    return Objects.equals(this.deviceId, suspiciousActivitySecurityDetail.deviceId) &&
        Objects.equals(this.deviceModel, suspiciousActivitySecurityDetail.deviceModel) &&
        Objects.equals(this.deviceProperty, suspiciousActivitySecurityDetail.deviceProperty) &&
        Objects.equals(this.deviceType, suspiciousActivitySecurityDetail.deviceType) &&
        Objects.equals(this.iosVendorId, suspiciousActivitySecurityDetail.iosVendorId) &&
        Objects.equals(this.newValue, suspiciousActivitySecurityDetail.newValue) &&
        Objects.equals(this.oldValue, suspiciousActivitySecurityDetail.oldValue) &&
        Objects.equals(this.resourceId, suspiciousActivitySecurityDetail.resourceId) &&
        Objects.equals(this.serialNumber, suspiciousActivitySecurityDetail.serialNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deviceId, deviceModel, deviceProperty, deviceType, iosVendorId, newValue, oldValue, resourceId, serialNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SuspiciousActivitySecurityDetail {\n");
    sb.append("    deviceId: ").append(toIndentedString(deviceId)).append("\n");
    sb.append("    deviceModel: ").append(toIndentedString(deviceModel)).append("\n");
    sb.append("    deviceProperty: ").append(toIndentedString(deviceProperty)).append("\n");
    sb.append("    deviceType: ").append(toIndentedString(deviceType)).append("\n");
    sb.append("    iosVendorId: ").append(toIndentedString(iosVendorId)).append("\n");
    sb.append("    newValue: ").append(toIndentedString(newValue)).append("\n");
    sb.append("    oldValue: ").append(toIndentedString(oldValue)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    serialNumber: ").append(toIndentedString(serialNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("deviceId");
    openapiFields.add("deviceModel");
    openapiFields.add("deviceProperty");
    openapiFields.add("deviceType");
    openapiFields.add("iosVendorId");
    openapiFields.add("newValue");
    openapiFields.add("oldValue");
    openapiFields.add("resourceId");
    openapiFields.add("serialNumber");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SuspiciousActivitySecurityDetail
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SuspiciousActivitySecurityDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SuspiciousActivitySecurityDetail is not found in the empty JSON string", SuspiciousActivitySecurityDetail.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SuspiciousActivitySecurityDetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SuspiciousActivitySecurityDetail` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("deviceId") != null && !jsonObj.get("deviceId").isJsonNull()) && !jsonObj.get("deviceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deviceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deviceId").toString()));
      }
      if ((jsonObj.get("deviceModel") != null && !jsonObj.get("deviceModel").isJsonNull()) && !jsonObj.get("deviceModel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deviceModel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deviceModel").toString()));
      }
      if ((jsonObj.get("deviceProperty") != null && !jsonObj.get("deviceProperty").isJsonNull()) && !jsonObj.get("deviceProperty").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deviceProperty` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deviceProperty").toString()));
      }
      if ((jsonObj.get("deviceType") != null && !jsonObj.get("deviceType").isJsonNull()) && !jsonObj.get("deviceType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deviceType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deviceType").toString()));
      }
      if ((jsonObj.get("iosVendorId") != null && !jsonObj.get("iosVendorId").isJsonNull()) && !jsonObj.get("iosVendorId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `iosVendorId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("iosVendorId").toString()));
      }
      if ((jsonObj.get("newValue") != null && !jsonObj.get("newValue").isJsonNull()) && !jsonObj.get("newValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `newValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("newValue").toString()));
      }
      if ((jsonObj.get("oldValue") != null && !jsonObj.get("oldValue").isJsonNull()) && !jsonObj.get("oldValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `oldValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("oldValue").toString()));
      }
      if ((jsonObj.get("resourceId") != null && !jsonObj.get("resourceId").isJsonNull()) && !jsonObj.get("resourceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceId").toString()));
      }
      if ((jsonObj.get("serialNumber") != null && !jsonObj.get("serialNumber").isJsonNull()) && !jsonObj.get("serialNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serialNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serialNumber").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SuspiciousActivitySecurityDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SuspiciousActivitySecurityDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SuspiciousActivitySecurityDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SuspiciousActivitySecurityDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<SuspiciousActivitySecurityDetail>() {
           @Override
           public void write(JsonWriter out, SuspiciousActivitySecurityDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SuspiciousActivitySecurityDetail read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SuspiciousActivitySecurityDetail given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SuspiciousActivitySecurityDetail
   * @throws IOException if the JSON string is invalid with respect to SuspiciousActivitySecurityDetail
   */
  public static SuspiciousActivitySecurityDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SuspiciousActivitySecurityDetail.class);
  }

  /**
   * Convert an instance of SuspiciousActivitySecurityDetail to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

