/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIActivityRule.h
 *
 * Alerts from Google Workspace Security Center rules service configured by an admin.
 */

#ifndef OAIActivityRule_H
#define OAIActivityRule_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIActivityRule : public OAIObject {
public:
    OAIActivityRule();
    OAIActivityRule(QString json);
    ~OAIActivityRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getActionNames() const;
    void setActionNames(const QList<QString> &action_names);
    bool is_action_names_Set() const;
    bool is_action_names_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getQuery() const;
    void setQuery(const QString &query);
    bool is_query_Set() const;
    bool is_query_Valid() const;

    QList<QString> getSupersededAlerts() const;
    void setSupersededAlerts(const QList<QString> &superseded_alerts);
    bool is_superseded_alerts_Set() const;
    bool is_superseded_alerts_Valid() const;

    QString getSupersedingAlert() const;
    void setSupersedingAlert(const QString &superseding_alert);
    bool is_superseding_alert_Set() const;
    bool is_superseding_alert_Valid() const;

    QString getThreshold() const;
    void setThreshold(const QString &threshold);
    bool is_threshold_Set() const;
    bool is_threshold_Valid() const;

    QString getTriggerSource() const;
    void setTriggerSource(const QString &trigger_source);
    bool is_trigger_source_Set() const;
    bool is_trigger_source_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    QString getWindowSize() const;
    void setWindowSize(const QString &window_size);
    bool is_window_size_Set() const;
    bool is_window_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_action_names;
    bool m_action_names_isSet;
    bool m_action_names_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_query;
    bool m_query_isSet;
    bool m_query_isValid;

    QList<QString> m_superseded_alerts;
    bool m_superseded_alerts_isSet;
    bool m_superseded_alerts_isValid;

    QString m_superseding_alert;
    bool m_superseding_alert_isSet;
    bool m_superseding_alert_isValid;

    QString m_threshold;
    bool m_threshold_isSet;
    bool m_threshold_isValid;

    QString m_trigger_source;
    bool m_trigger_source_isSet;
    bool m_trigger_source_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;

    QString m_window_size;
    bool m_window_size_isSet;
    bool m_window_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIActivityRule)

#endif // OAIActivityRule_H
