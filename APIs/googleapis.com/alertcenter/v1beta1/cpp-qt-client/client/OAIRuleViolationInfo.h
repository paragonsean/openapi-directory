/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRuleViolationInfo.h
 *
 * Common alert information about violated rules that are configured by Google Workspace administrators.
 */

#ifndef OAIRuleViolationInfo_H
#define OAIRuleViolationInfo_H

#include <QJsonObject>

#include "OAIMatchInfo.h"
#include "OAIObject.h"
#include "OAIResourceInfo.h"
#include "OAIRuleInfo.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMatchInfo;
class OAIResourceInfo;
class OAIRuleInfo;

class OAIRuleViolationInfo : public OAIObject {
public:
    OAIRuleViolationInfo();
    OAIRuleViolationInfo(QString json);
    ~OAIRuleViolationInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataSource() const;
    void setDataSource(const QString &data_source);
    bool is_data_source_Set() const;
    bool is_data_source_Valid() const;

    QList<OAIMatchInfo> getMatchInfo() const;
    void setMatchInfo(const QList<OAIMatchInfo> &match_info);
    bool is_match_info_Set() const;
    bool is_match_info_Valid() const;

    QList<QString> getRecipients() const;
    void setRecipients(const QList<QString> &recipients);
    bool is_recipients_Set() const;
    bool is_recipients_Valid() const;

    OAIResourceInfo getResourceInfo() const;
    void setResourceInfo(const OAIResourceInfo &resource_info);
    bool is_resource_info_Set() const;
    bool is_resource_info_Valid() const;

    OAIRuleInfo getRuleInfo() const;
    void setRuleInfo(const OAIRuleInfo &rule_info);
    bool is_rule_info_Set() const;
    bool is_rule_info_Valid() const;

    QList<QString> getSuppressedActionTypes() const;
    void setSuppressedActionTypes(const QList<QString> &suppressed_action_types);
    bool is_suppressed_action_types_Set() const;
    bool is_suppressed_action_types_Valid() const;

    QString getTrigger() const;
    void setTrigger(const QString &trigger);
    bool is_trigger_Set() const;
    bool is_trigger_Valid() const;

    QList<OAIObject> getTriggeredActionInfo() const;
    void setTriggeredActionInfo(const QList<OAIObject> &triggered_action_info);
    bool is_triggered_action_info_Set() const;
    bool is_triggered_action_info_Valid() const;

    QList<QString> getTriggeredActionTypes() const;
    void setTriggeredActionTypes(const QList<QString> &triggered_action_types);
    bool is_triggered_action_types_Set() const;
    bool is_triggered_action_types_Valid() const;

    QString getTriggeringUserEmail() const;
    void setTriggeringUserEmail(const QString &triggering_user_email);
    bool is_triggering_user_email_Set() const;
    bool is_triggering_user_email_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_source;
    bool m_data_source_isSet;
    bool m_data_source_isValid;

    QList<OAIMatchInfo> m_match_info;
    bool m_match_info_isSet;
    bool m_match_info_isValid;

    QList<QString> m_recipients;
    bool m_recipients_isSet;
    bool m_recipients_isValid;

    OAIResourceInfo m_resource_info;
    bool m_resource_info_isSet;
    bool m_resource_info_isValid;

    OAIRuleInfo m_rule_info;
    bool m_rule_info_isSet;
    bool m_rule_info_isValid;

    QList<QString> m_suppressed_action_types;
    bool m_suppressed_action_types_isSet;
    bool m_suppressed_action_types_isValid;

    QString m_trigger;
    bool m_trigger_isSet;
    bool m_trigger_isValid;

    QList<OAIObject> m_triggered_action_info;
    bool m_triggered_action_info_isSet;
    bool m_triggered_action_info_isValid;

    QList<QString> m_triggered_action_types;
    bool m_triggered_action_types_isSet;
    bool m_triggered_action_types_isValid;

    QString m_triggering_user_email;
    bool m_triggering_user_email_isSet;
    bool m_triggering_user_email_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRuleViolationInfo)

#endif // OAIRuleViolationInfo_H
