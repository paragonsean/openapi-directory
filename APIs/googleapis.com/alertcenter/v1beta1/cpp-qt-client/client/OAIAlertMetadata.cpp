/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAlertMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAlertMetadata::OAIAlertMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAlertMetadata::OAIAlertMetadata() {
    this->initializeModel();
}

OAIAlertMetadata::~OAIAlertMetadata() {}

void OAIAlertMetadata::initializeModel() {

    m_alert_id_isSet = false;
    m_alert_id_isValid = false;

    m_assignee_isSet = false;
    m_assignee_isValid = false;

    m_customer_id_isSet = false;
    m_customer_id_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_severity_isSet = false;
    m_severity_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIAlertMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAlertMetadata::fromJsonObject(QJsonObject json) {

    m_alert_id_isValid = ::OpenAPI::fromJsonValue(m_alert_id, json[QString("alertId")]);
    m_alert_id_isSet = !json[QString("alertId")].isNull() && m_alert_id_isValid;

    m_assignee_isValid = ::OpenAPI::fromJsonValue(m_assignee, json[QString("assignee")]);
    m_assignee_isSet = !json[QString("assignee")].isNull() && m_assignee_isValid;

    m_customer_id_isValid = ::OpenAPI::fromJsonValue(m_customer_id, json[QString("customerId")]);
    m_customer_id_isSet = !json[QString("customerId")].isNull() && m_customer_id_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_severity_isValid = ::OpenAPI::fromJsonValue(m_severity, json[QString("severity")]);
    m_severity_isSet = !json[QString("severity")].isNull() && m_severity_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIAlertMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAlertMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_alert_id_isSet) {
        obj.insert(QString("alertId"), ::OpenAPI::toJsonValue(m_alert_id));
    }
    if (m_assignee_isSet) {
        obj.insert(QString("assignee"), ::OpenAPI::toJsonValue(m_assignee));
    }
    if (m_customer_id_isSet) {
        obj.insert(QString("customerId"), ::OpenAPI::toJsonValue(m_customer_id));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_severity_isSet) {
        obj.insert(QString("severity"), ::OpenAPI::toJsonValue(m_severity));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIAlertMetadata::getAlertId() const {
    return m_alert_id;
}
void OAIAlertMetadata::setAlertId(const QString &alert_id) {
    m_alert_id = alert_id;
    m_alert_id_isSet = true;
}

bool OAIAlertMetadata::is_alert_id_Set() const{
    return m_alert_id_isSet;
}

bool OAIAlertMetadata::is_alert_id_Valid() const{
    return m_alert_id_isValid;
}

QString OAIAlertMetadata::getAssignee() const {
    return m_assignee;
}
void OAIAlertMetadata::setAssignee(const QString &assignee) {
    m_assignee = assignee;
    m_assignee_isSet = true;
}

bool OAIAlertMetadata::is_assignee_Set() const{
    return m_assignee_isSet;
}

bool OAIAlertMetadata::is_assignee_Valid() const{
    return m_assignee_isValid;
}

QString OAIAlertMetadata::getCustomerId() const {
    return m_customer_id;
}
void OAIAlertMetadata::setCustomerId(const QString &customer_id) {
    m_customer_id = customer_id;
    m_customer_id_isSet = true;
}

bool OAIAlertMetadata::is_customer_id_Set() const{
    return m_customer_id_isSet;
}

bool OAIAlertMetadata::is_customer_id_Valid() const{
    return m_customer_id_isValid;
}

QString OAIAlertMetadata::getEtag() const {
    return m_etag;
}
void OAIAlertMetadata::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIAlertMetadata::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIAlertMetadata::is_etag_Valid() const{
    return m_etag_isValid;
}

QString OAIAlertMetadata::getSeverity() const {
    return m_severity;
}
void OAIAlertMetadata::setSeverity(const QString &severity) {
    m_severity = severity;
    m_severity_isSet = true;
}

bool OAIAlertMetadata::is_severity_Set() const{
    return m_severity_isSet;
}

bool OAIAlertMetadata::is_severity_Valid() const{
    return m_severity_isValid;
}

QString OAIAlertMetadata::getStatus() const {
    return m_status;
}
void OAIAlertMetadata::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIAlertMetadata::is_status_Set() const{
    return m_status_isSet;
}

bool OAIAlertMetadata::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIAlertMetadata::getUpdateTime() const {
    return m_update_time;
}
void OAIAlertMetadata::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIAlertMetadata::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIAlertMetadata::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIAlertMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alert_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_assignee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_severity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAlertMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
