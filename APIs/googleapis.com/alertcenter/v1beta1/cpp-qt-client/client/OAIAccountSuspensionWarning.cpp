/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountSuspensionWarning.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountSuspensionWarning::OAIAccountSuspensionWarning(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountSuspensionWarning::OAIAccountSuspensionWarning() {
    this->initializeModel();
}

OAIAccountSuspensionWarning::~OAIAccountSuspensionWarning() {}

void OAIAccountSuspensionWarning::initializeModel() {

    m_appeal_window_isSet = false;
    m_appeal_window_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_suspension_details_isSet = false;
    m_suspension_details_isValid = false;
}

void OAIAccountSuspensionWarning::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountSuspensionWarning::fromJsonObject(QJsonObject json) {

    m_appeal_window_isValid = ::OpenAPI::fromJsonValue(m_appeal_window, json[QString("appealWindow")]);
    m_appeal_window_isSet = !json[QString("appealWindow")].isNull() && m_appeal_window_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_suspension_details_isValid = ::OpenAPI::fromJsonValue(m_suspension_details, json[QString("suspensionDetails")]);
    m_suspension_details_isSet = !json[QString("suspensionDetails")].isNull() && m_suspension_details_isValid;
}

QString OAIAccountSuspensionWarning::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountSuspensionWarning::asJsonObject() const {
    QJsonObject obj;
    if (m_appeal_window_isSet) {
        obj.insert(QString("appealWindow"), ::OpenAPI::toJsonValue(m_appeal_window));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_suspension_details.size() > 0) {
        obj.insert(QString("suspensionDetails"), ::OpenAPI::toJsonValue(m_suspension_details));
    }
    return obj;
}

QString OAIAccountSuspensionWarning::getAppealWindow() const {
    return m_appeal_window;
}
void OAIAccountSuspensionWarning::setAppealWindow(const QString &appeal_window) {
    m_appeal_window = appeal_window;
    m_appeal_window_isSet = true;
}

bool OAIAccountSuspensionWarning::is_appeal_window_Set() const{
    return m_appeal_window_isSet;
}

bool OAIAccountSuspensionWarning::is_appeal_window_Valid() const{
    return m_appeal_window_isValid;
}

QString OAIAccountSuspensionWarning::getState() const {
    return m_state;
}
void OAIAccountSuspensionWarning::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIAccountSuspensionWarning::is_state_Set() const{
    return m_state_isSet;
}

bool OAIAccountSuspensionWarning::is_state_Valid() const{
    return m_state_isValid;
}

QList<OAIAccountSuspensionDetails> OAIAccountSuspensionWarning::getSuspensionDetails() const {
    return m_suspension_details;
}
void OAIAccountSuspensionWarning::setSuspensionDetails(const QList<OAIAccountSuspensionDetails> &suspension_details) {
    m_suspension_details = suspension_details;
    m_suspension_details_isSet = true;
}

bool OAIAccountSuspensionWarning::is_suspension_details_Set() const{
    return m_suspension_details_isSet;
}

bool OAIAccountSuspensionWarning::is_suspension_details_Valid() const{
    return m_suspension_details_isValid;
}

bool OAIAccountSuspensionWarning::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_appeal_window_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_suspension_details.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountSuspensionWarning::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
