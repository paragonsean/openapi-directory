/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMailPhishing.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMailPhishing::OAIMailPhishing(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMailPhishing::OAIMailPhishing() {
    this->initializeModel();
}

OAIMailPhishing::~OAIMailPhishing() {}

void OAIMailPhishing::initializeModel() {

    m_domain_id_isSet = false;
    m_domain_id_isValid = false;

    m_is_internal_isSet = false;
    m_is_internal_isValid = false;

    m_malicious_entity_isSet = false;
    m_malicious_entity_isValid = false;

    m_messages_isSet = false;
    m_messages_isValid = false;

    m_system_action_type_isSet = false;
    m_system_action_type_isValid = false;
}

void OAIMailPhishing::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMailPhishing::fromJsonObject(QJsonObject json) {

    m_domain_id_isValid = ::OpenAPI::fromJsonValue(m_domain_id, json[QString("domainId")]);
    m_domain_id_isSet = !json[QString("domainId")].isNull() && m_domain_id_isValid;

    m_is_internal_isValid = ::OpenAPI::fromJsonValue(m_is_internal, json[QString("isInternal")]);
    m_is_internal_isSet = !json[QString("isInternal")].isNull() && m_is_internal_isValid;

    m_malicious_entity_isValid = ::OpenAPI::fromJsonValue(m_malicious_entity, json[QString("maliciousEntity")]);
    m_malicious_entity_isSet = !json[QString("maliciousEntity")].isNull() && m_malicious_entity_isValid;

    m_messages_isValid = ::OpenAPI::fromJsonValue(m_messages, json[QString("messages")]);
    m_messages_isSet = !json[QString("messages")].isNull() && m_messages_isValid;

    m_system_action_type_isValid = ::OpenAPI::fromJsonValue(m_system_action_type, json[QString("systemActionType")]);
    m_system_action_type_isSet = !json[QString("systemActionType")].isNull() && m_system_action_type_isValid;
}

QString OAIMailPhishing::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMailPhishing::asJsonObject() const {
    QJsonObject obj;
    if (m_domain_id.isSet()) {
        obj.insert(QString("domainId"), ::OpenAPI::toJsonValue(m_domain_id));
    }
    if (m_is_internal_isSet) {
        obj.insert(QString("isInternal"), ::OpenAPI::toJsonValue(m_is_internal));
    }
    if (m_malicious_entity.isSet()) {
        obj.insert(QString("maliciousEntity"), ::OpenAPI::toJsonValue(m_malicious_entity));
    }
    if (m_messages.size() > 0) {
        obj.insert(QString("messages"), ::OpenAPI::toJsonValue(m_messages));
    }
    if (m_system_action_type_isSet) {
        obj.insert(QString("systemActionType"), ::OpenAPI::toJsonValue(m_system_action_type));
    }
    return obj;
}

OAIDomainId OAIMailPhishing::getDomainId() const {
    return m_domain_id;
}
void OAIMailPhishing::setDomainId(const OAIDomainId &domain_id) {
    m_domain_id = domain_id;
    m_domain_id_isSet = true;
}

bool OAIMailPhishing::is_domain_id_Set() const{
    return m_domain_id_isSet;
}

bool OAIMailPhishing::is_domain_id_Valid() const{
    return m_domain_id_isValid;
}

bool OAIMailPhishing::isIsInternal() const {
    return m_is_internal;
}
void OAIMailPhishing::setIsInternal(const bool &is_internal) {
    m_is_internal = is_internal;
    m_is_internal_isSet = true;
}

bool OAIMailPhishing::is_is_internal_Set() const{
    return m_is_internal_isSet;
}

bool OAIMailPhishing::is_is_internal_Valid() const{
    return m_is_internal_isValid;
}

OAIMaliciousEntity OAIMailPhishing::getMaliciousEntity() const {
    return m_malicious_entity;
}
void OAIMailPhishing::setMaliciousEntity(const OAIMaliciousEntity &malicious_entity) {
    m_malicious_entity = malicious_entity;
    m_malicious_entity_isSet = true;
}

bool OAIMailPhishing::is_malicious_entity_Set() const{
    return m_malicious_entity_isSet;
}

bool OAIMailPhishing::is_malicious_entity_Valid() const{
    return m_malicious_entity_isValid;
}

QList<OAIGmailMessageInfo> OAIMailPhishing::getMessages() const {
    return m_messages;
}
void OAIMailPhishing::setMessages(const QList<OAIGmailMessageInfo> &messages) {
    m_messages = messages;
    m_messages_isSet = true;
}

bool OAIMailPhishing::is_messages_Set() const{
    return m_messages_isSet;
}

bool OAIMailPhishing::is_messages_Valid() const{
    return m_messages_isValid;
}

QString OAIMailPhishing::getSystemActionType() const {
    return m_system_action_type;
}
void OAIMailPhishing::setSystemActionType(const QString &system_action_type) {
    m_system_action_type = system_action_type;
    m_system_action_type_isSet = true;
}

bool OAIMailPhishing::is_system_action_type_Set() const{
    return m_system_action_type_isSet;
}

bool OAIMailPhishing::is_system_action_type_Valid() const{
    return m_system_action_type_isValid;
}

bool OAIMailPhishing::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_domain_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_internal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_malicious_entity.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_messages.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_system_action_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMailPhishing::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
