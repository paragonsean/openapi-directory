/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApnsCertificateExpirationInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApnsCertificateExpirationInfo::OAIApnsCertificateExpirationInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApnsCertificateExpirationInfo::OAIApnsCertificateExpirationInfo() {
    this->initializeModel();
}

OAIApnsCertificateExpirationInfo::~OAIApnsCertificateExpirationInfo() {}

void OAIApnsCertificateExpirationInfo::initializeModel() {

    m_apple_id_isSet = false;
    m_apple_id_isValid = false;

    m_expiration_time_isSet = false;
    m_expiration_time_isValid = false;

    m_uid_isSet = false;
    m_uid_isValid = false;
}

void OAIApnsCertificateExpirationInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApnsCertificateExpirationInfo::fromJsonObject(QJsonObject json) {

    m_apple_id_isValid = ::OpenAPI::fromJsonValue(m_apple_id, json[QString("appleId")]);
    m_apple_id_isSet = !json[QString("appleId")].isNull() && m_apple_id_isValid;

    m_expiration_time_isValid = ::OpenAPI::fromJsonValue(m_expiration_time, json[QString("expirationTime")]);
    m_expiration_time_isSet = !json[QString("expirationTime")].isNull() && m_expiration_time_isValid;

    m_uid_isValid = ::OpenAPI::fromJsonValue(m_uid, json[QString("uid")]);
    m_uid_isSet = !json[QString("uid")].isNull() && m_uid_isValid;
}

QString OAIApnsCertificateExpirationInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApnsCertificateExpirationInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_apple_id_isSet) {
        obj.insert(QString("appleId"), ::OpenAPI::toJsonValue(m_apple_id));
    }
    if (m_expiration_time_isSet) {
        obj.insert(QString("expirationTime"), ::OpenAPI::toJsonValue(m_expiration_time));
    }
    if (m_uid_isSet) {
        obj.insert(QString("uid"), ::OpenAPI::toJsonValue(m_uid));
    }
    return obj;
}

QString OAIApnsCertificateExpirationInfo::getAppleId() const {
    return m_apple_id;
}
void OAIApnsCertificateExpirationInfo::setAppleId(const QString &apple_id) {
    m_apple_id = apple_id;
    m_apple_id_isSet = true;
}

bool OAIApnsCertificateExpirationInfo::is_apple_id_Set() const{
    return m_apple_id_isSet;
}

bool OAIApnsCertificateExpirationInfo::is_apple_id_Valid() const{
    return m_apple_id_isValid;
}

QString OAIApnsCertificateExpirationInfo::getExpirationTime() const {
    return m_expiration_time;
}
void OAIApnsCertificateExpirationInfo::setExpirationTime(const QString &expiration_time) {
    m_expiration_time = expiration_time;
    m_expiration_time_isSet = true;
}

bool OAIApnsCertificateExpirationInfo::is_expiration_time_Set() const{
    return m_expiration_time_isSet;
}

bool OAIApnsCertificateExpirationInfo::is_expiration_time_Valid() const{
    return m_expiration_time_isValid;
}

QString OAIApnsCertificateExpirationInfo::getUid() const {
    return m_uid;
}
void OAIApnsCertificateExpirationInfo::setUid(const QString &uid) {
    m_uid = uid;
    m_uid_isSet = true;
}

bool OAIApnsCertificateExpirationInfo::is_uid_Set() const{
    return m_uid_isSet;
}

bool OAIApnsCertificateExpirationInfo::is_uid_Valid() const{
    return m_uid_isValid;
}

bool OAIApnsCertificateExpirationInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_apple_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiration_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApnsCertificateExpirationInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
