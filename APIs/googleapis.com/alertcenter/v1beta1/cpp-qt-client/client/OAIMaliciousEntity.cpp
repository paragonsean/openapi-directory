/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMaliciousEntity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMaliciousEntity::OAIMaliciousEntity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMaliciousEntity::OAIMaliciousEntity() {
    this->initializeModel();
}

OAIMaliciousEntity::~OAIMaliciousEntity() {}

void OAIMaliciousEntity::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_entity_isSet = false;
    m_entity_isValid = false;

    m_from_header_isSet = false;
    m_from_header_isValid = false;
}

void OAIMaliciousEntity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMaliciousEntity::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_entity_isValid = ::OpenAPI::fromJsonValue(m_entity, json[QString("entity")]);
    m_entity_isSet = !json[QString("entity")].isNull() && m_entity_isValid;

    m_from_header_isValid = ::OpenAPI::fromJsonValue(m_from_header, json[QString("fromHeader")]);
    m_from_header_isSet = !json[QString("fromHeader")].isNull() && m_from_header_isValid;
}

QString OAIMaliciousEntity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMaliciousEntity::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_entity.isSet()) {
        obj.insert(QString("entity"), ::OpenAPI::toJsonValue(m_entity));
    }
    if (m_from_header_isSet) {
        obj.insert(QString("fromHeader"), ::OpenAPI::toJsonValue(m_from_header));
    }
    return obj;
}

QString OAIMaliciousEntity::getDisplayName() const {
    return m_display_name;
}
void OAIMaliciousEntity::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIMaliciousEntity::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIMaliciousEntity::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIUser OAIMaliciousEntity::getEntity() const {
    return m_entity;
}
void OAIMaliciousEntity::setEntity(const OAIUser &entity) {
    m_entity = entity;
    m_entity_isSet = true;
}

bool OAIMaliciousEntity::is_entity_Set() const{
    return m_entity_isSet;
}

bool OAIMaliciousEntity::is_entity_Valid() const{
    return m_entity_isValid;
}

QString OAIMaliciousEntity::getFromHeader() const {
    return m_from_header;
}
void OAIMaliciousEntity::setFromHeader(const QString &from_header) {
    m_from_header = from_header;
    m_from_header_isSet = true;
}

bool OAIMaliciousEntity::is_from_header_Set() const{
    return m_from_header_isSet;
}

bool OAIMaliciousEntity::is_from_header_Valid() const{
    return m_from_header_isValid;
}

bool OAIMaliciousEntity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_header_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMaliciousEntity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
