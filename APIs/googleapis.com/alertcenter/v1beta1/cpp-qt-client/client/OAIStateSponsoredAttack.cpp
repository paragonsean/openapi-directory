/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStateSponsoredAttack.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStateSponsoredAttack::OAIStateSponsoredAttack(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStateSponsoredAttack::OAIStateSponsoredAttack() {
    this->initializeModel();
}

OAIStateSponsoredAttack::~OAIStateSponsoredAttack() {}

void OAIStateSponsoredAttack::initializeModel() {

    m_email_isSet = false;
    m_email_isValid = false;
}

void OAIStateSponsoredAttack::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStateSponsoredAttack::fromJsonObject(QJsonObject json) {

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;
}

QString OAIStateSponsoredAttack::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStateSponsoredAttack::asJsonObject() const {
    QJsonObject obj;
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    return obj;
}

QString OAIStateSponsoredAttack::getEmail() const {
    return m_email;
}
void OAIStateSponsoredAttack::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIStateSponsoredAttack::is_email_Set() const{
    return m_email_isSet;
}

bool OAIStateSponsoredAttack::is_email_Valid() const{
    return m_email_isValid;
}

bool OAIStateSponsoredAttack::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStateSponsoredAttack::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
