/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVoiceMisconfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVoiceMisconfiguration::OAIVoiceMisconfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVoiceMisconfiguration::OAIVoiceMisconfiguration() {
    this->initializeModel();
}

OAIVoiceMisconfiguration::~OAIVoiceMisconfiguration() {}

void OAIVoiceMisconfiguration::initializeModel() {

    m_entity_name_isSet = false;
    m_entity_name_isValid = false;

    m_entity_type_isSet = false;
    m_entity_type_isValid = false;

    m_fix_uri_isSet = false;
    m_fix_uri_isValid = false;

    m_members_misconfiguration_isSet = false;
    m_members_misconfiguration_isValid = false;

    m_transfer_misconfiguration_isSet = false;
    m_transfer_misconfiguration_isValid = false;

    m_voicemail_misconfiguration_isSet = false;
    m_voicemail_misconfiguration_isValid = false;
}

void OAIVoiceMisconfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVoiceMisconfiguration::fromJsonObject(QJsonObject json) {

    m_entity_name_isValid = ::OpenAPI::fromJsonValue(m_entity_name, json[QString("entityName")]);
    m_entity_name_isSet = !json[QString("entityName")].isNull() && m_entity_name_isValid;

    m_entity_type_isValid = ::OpenAPI::fromJsonValue(m_entity_type, json[QString("entityType")]);
    m_entity_type_isSet = !json[QString("entityType")].isNull() && m_entity_type_isValid;

    m_fix_uri_isValid = ::OpenAPI::fromJsonValue(m_fix_uri, json[QString("fixUri")]);
    m_fix_uri_isSet = !json[QString("fixUri")].isNull() && m_fix_uri_isValid;

    m_members_misconfiguration_isValid = ::OpenAPI::fromJsonValue(m_members_misconfiguration, json[QString("membersMisconfiguration")]);
    m_members_misconfiguration_isSet = !json[QString("membersMisconfiguration")].isNull() && m_members_misconfiguration_isValid;

    m_transfer_misconfiguration_isValid = ::OpenAPI::fromJsonValue(m_transfer_misconfiguration, json[QString("transferMisconfiguration")]);
    m_transfer_misconfiguration_isSet = !json[QString("transferMisconfiguration")].isNull() && m_transfer_misconfiguration_isValid;

    m_voicemail_misconfiguration_isValid = ::OpenAPI::fromJsonValue(m_voicemail_misconfiguration, json[QString("voicemailMisconfiguration")]);
    m_voicemail_misconfiguration_isSet = !json[QString("voicemailMisconfiguration")].isNull() && m_voicemail_misconfiguration_isValid;
}

QString OAIVoiceMisconfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVoiceMisconfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_entity_name_isSet) {
        obj.insert(QString("entityName"), ::OpenAPI::toJsonValue(m_entity_name));
    }
    if (m_entity_type_isSet) {
        obj.insert(QString("entityType"), ::OpenAPI::toJsonValue(m_entity_type));
    }
    if (m_fix_uri_isSet) {
        obj.insert(QString("fixUri"), ::OpenAPI::toJsonValue(m_fix_uri));
    }
    if (m_members_misconfiguration.isSet()) {
        obj.insert(QString("membersMisconfiguration"), ::OpenAPI::toJsonValue(m_members_misconfiguration));
    }
    if (m_transfer_misconfiguration.isSet()) {
        obj.insert(QString("transferMisconfiguration"), ::OpenAPI::toJsonValue(m_transfer_misconfiguration));
    }
    if (m_voicemail_misconfiguration.isSet()) {
        obj.insert(QString("voicemailMisconfiguration"), ::OpenAPI::toJsonValue(m_voicemail_misconfiguration));
    }
    return obj;
}

QString OAIVoiceMisconfiguration::getEntityName() const {
    return m_entity_name;
}
void OAIVoiceMisconfiguration::setEntityName(const QString &entity_name) {
    m_entity_name = entity_name;
    m_entity_name_isSet = true;
}

bool OAIVoiceMisconfiguration::is_entity_name_Set() const{
    return m_entity_name_isSet;
}

bool OAIVoiceMisconfiguration::is_entity_name_Valid() const{
    return m_entity_name_isValid;
}

QString OAIVoiceMisconfiguration::getEntityType() const {
    return m_entity_type;
}
void OAIVoiceMisconfiguration::setEntityType(const QString &entity_type) {
    m_entity_type = entity_type;
    m_entity_type_isSet = true;
}

bool OAIVoiceMisconfiguration::is_entity_type_Set() const{
    return m_entity_type_isSet;
}

bool OAIVoiceMisconfiguration::is_entity_type_Valid() const{
    return m_entity_type_isValid;
}

QString OAIVoiceMisconfiguration::getFixUri() const {
    return m_fix_uri;
}
void OAIVoiceMisconfiguration::setFixUri(const QString &fix_uri) {
    m_fix_uri = fix_uri;
    m_fix_uri_isSet = true;
}

bool OAIVoiceMisconfiguration::is_fix_uri_Set() const{
    return m_fix_uri_isSet;
}

bool OAIVoiceMisconfiguration::is_fix_uri_Valid() const{
    return m_fix_uri_isValid;
}

OAITransferMisconfiguration OAIVoiceMisconfiguration::getMembersMisconfiguration() const {
    return m_members_misconfiguration;
}
void OAIVoiceMisconfiguration::setMembersMisconfiguration(const OAITransferMisconfiguration &members_misconfiguration) {
    m_members_misconfiguration = members_misconfiguration;
    m_members_misconfiguration_isSet = true;
}

bool OAIVoiceMisconfiguration::is_members_misconfiguration_Set() const{
    return m_members_misconfiguration_isSet;
}

bool OAIVoiceMisconfiguration::is_members_misconfiguration_Valid() const{
    return m_members_misconfiguration_isValid;
}

OAITransferMisconfiguration OAIVoiceMisconfiguration::getTransferMisconfiguration() const {
    return m_transfer_misconfiguration;
}
void OAIVoiceMisconfiguration::setTransferMisconfiguration(const OAITransferMisconfiguration &transfer_misconfiguration) {
    m_transfer_misconfiguration = transfer_misconfiguration;
    m_transfer_misconfiguration_isSet = true;
}

bool OAIVoiceMisconfiguration::is_transfer_misconfiguration_Set() const{
    return m_transfer_misconfiguration_isSet;
}

bool OAIVoiceMisconfiguration::is_transfer_misconfiguration_Valid() const{
    return m_transfer_misconfiguration_isValid;
}

OAIVoicemailMisconfiguration OAIVoiceMisconfiguration::getVoicemailMisconfiguration() const {
    return m_voicemail_misconfiguration;
}
void OAIVoiceMisconfiguration::setVoicemailMisconfiguration(const OAIVoicemailMisconfiguration &voicemail_misconfiguration) {
    m_voicemail_misconfiguration = voicemail_misconfiguration;
    m_voicemail_misconfiguration_isSet = true;
}

bool OAIVoiceMisconfiguration::is_voicemail_misconfiguration_Set() const{
    return m_voicemail_misconfiguration_isSet;
}

bool OAIVoiceMisconfiguration::is_voicemail_misconfiguration_Valid() const{
    return m_voicemail_misconfiguration_isValid;
}

bool OAIVoiceMisconfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_entity_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fix_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_members_misconfiguration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfer_misconfiguration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_voicemail_misconfiguration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVoiceMisconfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
