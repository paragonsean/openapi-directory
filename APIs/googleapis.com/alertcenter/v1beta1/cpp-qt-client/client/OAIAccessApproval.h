/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccessApproval.h
 *
 * Alert that is triggered when Google support requests to access customer data.
 */

#ifndef OAIAccessApproval_H
#define OAIAccessApproval_H

#include <QJsonObject>

#include "OAISupportTicket.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISupportTicket;

class OAIAccessApproval : public OAIObject {
public:
    OAIAccessApproval();
    OAIAccessApproval(QString json);
    ~OAIAccessApproval() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getJustificationReason() const;
    void setJustificationReason(const QList<QString> &justification_reason);
    bool is_justification_reason_Set() const;
    bool is_justification_reason_Valid() const;

    QString getOfficeLocation() const;
    void setOfficeLocation(const QString &office_location);
    bool is_office_location_Set() const;
    bool is_office_location_Valid() const;

    QList<QString> getProducts() const;
    void setProducts(const QList<QString> &products);
    bool is_products_Set() const;
    bool is_products_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    QString getScope() const;
    void setScope(const QString &scope);
    bool is_scope_Set() const;
    bool is_scope_Valid() const;

    QList<OAISupportTicket> getTickets() const;
    void setTickets(const QList<OAISupportTicket> &tickets);
    bool is_tickets_Set() const;
    bool is_tickets_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_justification_reason;
    bool m_justification_reason_isSet;
    bool m_justification_reason_isValid;

    QString m_office_location;
    bool m_office_location_isSet;
    bool m_office_location_isValid;

    QList<QString> m_products;
    bool m_products_isSet;
    bool m_products_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    QString m_scope;
    bool m_scope_isSet;
    bool m_scope_isValid;

    QList<OAISupportTicket> m_tickets;
    bool m_tickets_isSet;
    bool m_tickets_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccessApproval)

#endif // OAIAccessApproval_H
