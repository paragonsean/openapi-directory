/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISupportTicket.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISupportTicket::OAISupportTicket(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISupportTicket::OAISupportTicket() {
    this->initializeModel();
}

OAISupportTicket::~OAISupportTicket() {}

void OAISupportTicket::initializeModel() {

    m_ticket_id_isSet = false;
    m_ticket_id_isValid = false;

    m_ticket_url_isSet = false;
    m_ticket_url_isValid = false;
}

void OAISupportTicket::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISupportTicket::fromJsonObject(QJsonObject json) {

    m_ticket_id_isValid = ::OpenAPI::fromJsonValue(m_ticket_id, json[QString("ticketId")]);
    m_ticket_id_isSet = !json[QString("ticketId")].isNull() && m_ticket_id_isValid;

    m_ticket_url_isValid = ::OpenAPI::fromJsonValue(m_ticket_url, json[QString("ticketUrl")]);
    m_ticket_url_isSet = !json[QString("ticketUrl")].isNull() && m_ticket_url_isValid;
}

QString OAISupportTicket::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISupportTicket::asJsonObject() const {
    QJsonObject obj;
    if (m_ticket_id_isSet) {
        obj.insert(QString("ticketId"), ::OpenAPI::toJsonValue(m_ticket_id));
    }
    if (m_ticket_url_isSet) {
        obj.insert(QString("ticketUrl"), ::OpenAPI::toJsonValue(m_ticket_url));
    }
    return obj;
}

QString OAISupportTicket::getTicketId() const {
    return m_ticket_id;
}
void OAISupportTicket::setTicketId(const QString &ticket_id) {
    m_ticket_id = ticket_id;
    m_ticket_id_isSet = true;
}

bool OAISupportTicket::is_ticket_id_Set() const{
    return m_ticket_id_isSet;
}

bool OAISupportTicket::is_ticket_id_Valid() const{
    return m_ticket_id_isValid;
}

QString OAISupportTicket::getTicketUrl() const {
    return m_ticket_url;
}
void OAISupportTicket::setTicketUrl(const QString &ticket_url) {
    m_ticket_url = ticket_url;
    m_ticket_url_isSet = true;
}

bool OAISupportTicket::is_ticket_url_Set() const{
    return m_ticket_url_isSet;
}

bool OAISupportTicket::is_ticket_url_Valid() const{
    return m_ticket_url_isValid;
}

bool OAISupportTicket::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ticket_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ticket_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISupportTicket::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
