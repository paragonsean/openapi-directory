/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISensitiveAdminAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISensitiveAdminAction::OAISensitiveAdminAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISensitiveAdminAction::OAISensitiveAdminAction() {
    this->initializeModel();
}

OAISensitiveAdminAction::~OAISensitiveAdminAction() {}

void OAISensitiveAdminAction::initializeModel() {

    m_actor_email_isSet = false;
    m_actor_email_isValid = false;

    m_event_time_isSet = false;
    m_event_time_isValid = false;

    m_primary_admin_changed_event_isSet = false;
    m_primary_admin_changed_event_isValid = false;

    m_sso_profile_created_event_isSet = false;
    m_sso_profile_created_event_isValid = false;

    m_sso_profile_deleted_event_isSet = false;
    m_sso_profile_deleted_event_isValid = false;

    m_sso_profile_updated_event_isSet = false;
    m_sso_profile_updated_event_isValid = false;

    m_super_admin_password_reset_event_isSet = false;
    m_super_admin_password_reset_event_isValid = false;
}

void OAISensitiveAdminAction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISensitiveAdminAction::fromJsonObject(QJsonObject json) {

    m_actor_email_isValid = ::OpenAPI::fromJsonValue(m_actor_email, json[QString("actorEmail")]);
    m_actor_email_isSet = !json[QString("actorEmail")].isNull() && m_actor_email_isValid;

    m_event_time_isValid = ::OpenAPI::fromJsonValue(m_event_time, json[QString("eventTime")]);
    m_event_time_isSet = !json[QString("eventTime")].isNull() && m_event_time_isValid;

    m_primary_admin_changed_event_isValid = ::OpenAPI::fromJsonValue(m_primary_admin_changed_event, json[QString("primaryAdminChangedEvent")]);
    m_primary_admin_changed_event_isSet = !json[QString("primaryAdminChangedEvent")].isNull() && m_primary_admin_changed_event_isValid;

    m_sso_profile_created_event_isValid = ::OpenAPI::fromJsonValue(m_sso_profile_created_event, json[QString("ssoProfileCreatedEvent")]);
    m_sso_profile_created_event_isSet = !json[QString("ssoProfileCreatedEvent")].isNull() && m_sso_profile_created_event_isValid;

    m_sso_profile_deleted_event_isValid = ::OpenAPI::fromJsonValue(m_sso_profile_deleted_event, json[QString("ssoProfileDeletedEvent")]);
    m_sso_profile_deleted_event_isSet = !json[QString("ssoProfileDeletedEvent")].isNull() && m_sso_profile_deleted_event_isValid;

    m_sso_profile_updated_event_isValid = ::OpenAPI::fromJsonValue(m_sso_profile_updated_event, json[QString("ssoProfileUpdatedEvent")]);
    m_sso_profile_updated_event_isSet = !json[QString("ssoProfileUpdatedEvent")].isNull() && m_sso_profile_updated_event_isValid;

    m_super_admin_password_reset_event_isValid = ::OpenAPI::fromJsonValue(m_super_admin_password_reset_event, json[QString("superAdminPasswordResetEvent")]);
    m_super_admin_password_reset_event_isSet = !json[QString("superAdminPasswordResetEvent")].isNull() && m_super_admin_password_reset_event_isValid;
}

QString OAISensitiveAdminAction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISensitiveAdminAction::asJsonObject() const {
    QJsonObject obj;
    if (m_actor_email_isSet) {
        obj.insert(QString("actorEmail"), ::OpenAPI::toJsonValue(m_actor_email));
    }
    if (m_event_time_isSet) {
        obj.insert(QString("eventTime"), ::OpenAPI::toJsonValue(m_event_time));
    }
    if (m_primary_admin_changed_event.isSet()) {
        obj.insert(QString("primaryAdminChangedEvent"), ::OpenAPI::toJsonValue(m_primary_admin_changed_event));
    }
    if (m_sso_profile_created_event.isSet()) {
        obj.insert(QString("ssoProfileCreatedEvent"), ::OpenAPI::toJsonValue(m_sso_profile_created_event));
    }
    if (m_sso_profile_deleted_event.isSet()) {
        obj.insert(QString("ssoProfileDeletedEvent"), ::OpenAPI::toJsonValue(m_sso_profile_deleted_event));
    }
    if (m_sso_profile_updated_event.isSet()) {
        obj.insert(QString("ssoProfileUpdatedEvent"), ::OpenAPI::toJsonValue(m_sso_profile_updated_event));
    }
    if (m_super_admin_password_reset_event.isSet()) {
        obj.insert(QString("superAdminPasswordResetEvent"), ::OpenAPI::toJsonValue(m_super_admin_password_reset_event));
    }
    return obj;
}

QString OAISensitiveAdminAction::getActorEmail() const {
    return m_actor_email;
}
void OAISensitiveAdminAction::setActorEmail(const QString &actor_email) {
    m_actor_email = actor_email;
    m_actor_email_isSet = true;
}

bool OAISensitiveAdminAction::is_actor_email_Set() const{
    return m_actor_email_isSet;
}

bool OAISensitiveAdminAction::is_actor_email_Valid() const{
    return m_actor_email_isValid;
}

QString OAISensitiveAdminAction::getEventTime() const {
    return m_event_time;
}
void OAISensitiveAdminAction::setEventTime(const QString &event_time) {
    m_event_time = event_time;
    m_event_time_isSet = true;
}

bool OAISensitiveAdminAction::is_event_time_Set() const{
    return m_event_time_isSet;
}

bool OAISensitiveAdminAction::is_event_time_Valid() const{
    return m_event_time_isValid;
}

OAIPrimaryAdminChangedEvent OAISensitiveAdminAction::getPrimaryAdminChangedEvent() const {
    return m_primary_admin_changed_event;
}
void OAISensitiveAdminAction::setPrimaryAdminChangedEvent(const OAIPrimaryAdminChangedEvent &primary_admin_changed_event) {
    m_primary_admin_changed_event = primary_admin_changed_event;
    m_primary_admin_changed_event_isSet = true;
}

bool OAISensitiveAdminAction::is_primary_admin_changed_event_Set() const{
    return m_primary_admin_changed_event_isSet;
}

bool OAISensitiveAdminAction::is_primary_admin_changed_event_Valid() const{
    return m_primary_admin_changed_event_isValid;
}

OAISSOProfileCreatedEvent OAISensitiveAdminAction::getSsoProfileCreatedEvent() const {
    return m_sso_profile_created_event;
}
void OAISensitiveAdminAction::setSsoProfileCreatedEvent(const OAISSOProfileCreatedEvent &sso_profile_created_event) {
    m_sso_profile_created_event = sso_profile_created_event;
    m_sso_profile_created_event_isSet = true;
}

bool OAISensitiveAdminAction::is_sso_profile_created_event_Set() const{
    return m_sso_profile_created_event_isSet;
}

bool OAISensitiveAdminAction::is_sso_profile_created_event_Valid() const{
    return m_sso_profile_created_event_isValid;
}

OAISSOProfileDeletedEvent OAISensitiveAdminAction::getSsoProfileDeletedEvent() const {
    return m_sso_profile_deleted_event;
}
void OAISensitiveAdminAction::setSsoProfileDeletedEvent(const OAISSOProfileDeletedEvent &sso_profile_deleted_event) {
    m_sso_profile_deleted_event = sso_profile_deleted_event;
    m_sso_profile_deleted_event_isSet = true;
}

bool OAISensitiveAdminAction::is_sso_profile_deleted_event_Set() const{
    return m_sso_profile_deleted_event_isSet;
}

bool OAISensitiveAdminAction::is_sso_profile_deleted_event_Valid() const{
    return m_sso_profile_deleted_event_isValid;
}

OAISSOProfileUpdatedEvent OAISensitiveAdminAction::getSsoProfileUpdatedEvent() const {
    return m_sso_profile_updated_event;
}
void OAISensitiveAdminAction::setSsoProfileUpdatedEvent(const OAISSOProfileUpdatedEvent &sso_profile_updated_event) {
    m_sso_profile_updated_event = sso_profile_updated_event;
    m_sso_profile_updated_event_isSet = true;
}

bool OAISensitiveAdminAction::is_sso_profile_updated_event_Set() const{
    return m_sso_profile_updated_event_isSet;
}

bool OAISensitiveAdminAction::is_sso_profile_updated_event_Valid() const{
    return m_sso_profile_updated_event_isValid;
}

OAISuperAdminPasswordResetEvent OAISensitiveAdminAction::getSuperAdminPasswordResetEvent() const {
    return m_super_admin_password_reset_event;
}
void OAISensitiveAdminAction::setSuperAdminPasswordResetEvent(const OAISuperAdminPasswordResetEvent &super_admin_password_reset_event) {
    m_super_admin_password_reset_event = super_admin_password_reset_event;
    m_super_admin_password_reset_event_isSet = true;
}

bool OAISensitiveAdminAction::is_super_admin_password_reset_event_Set() const{
    return m_super_admin_password_reset_event_isSet;
}

bool OAISensitiveAdminAction::is_super_admin_password_reset_event_Valid() const{
    return m_super_admin_password_reset_event_isValid;
}

bool OAISensitiveAdminAction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_actor_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_event_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_admin_changed_event.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sso_profile_created_event.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sso_profile_deleted_event.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sso_profile_updated_event.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_super_admin_password_reset_event.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISensitiveAdminAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
