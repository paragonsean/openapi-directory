/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRequestInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRequestInfo::OAIRequestInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRequestInfo::OAIRequestInfo() {
    this->initializeModel();
}

OAIRequestInfo::~OAIRequestInfo() {}

void OAIRequestInfo::initializeModel() {

    m_app_developer_email_isSet = false;
    m_app_developer_email_isValid = false;

    m_app_key_isSet = false;
    m_app_key_isValid = false;

    m_number_of_requests_isSet = false;
    m_number_of_requests_isValid = false;
}

void OAIRequestInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRequestInfo::fromJsonObject(QJsonObject json) {

    m_app_developer_email_isValid = ::OpenAPI::fromJsonValue(m_app_developer_email, json[QString("appDeveloperEmail")]);
    m_app_developer_email_isSet = !json[QString("appDeveloperEmail")].isNull() && m_app_developer_email_isValid;

    m_app_key_isValid = ::OpenAPI::fromJsonValue(m_app_key, json[QString("appKey")]);
    m_app_key_isSet = !json[QString("appKey")].isNull() && m_app_key_isValid;

    m_number_of_requests_isValid = ::OpenAPI::fromJsonValue(m_number_of_requests, json[QString("numberOfRequests")]);
    m_number_of_requests_isSet = !json[QString("numberOfRequests")].isNull() && m_number_of_requests_isValid;
}

QString OAIRequestInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRequestInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_app_developer_email.size() > 0) {
        obj.insert(QString("appDeveloperEmail"), ::OpenAPI::toJsonValue(m_app_developer_email));
    }
    if (m_app_key_isSet) {
        obj.insert(QString("appKey"), ::OpenAPI::toJsonValue(m_app_key));
    }
    if (m_number_of_requests_isSet) {
        obj.insert(QString("numberOfRequests"), ::OpenAPI::toJsonValue(m_number_of_requests));
    }
    return obj;
}

QList<QString> OAIRequestInfo::getAppDeveloperEmail() const {
    return m_app_developer_email;
}
void OAIRequestInfo::setAppDeveloperEmail(const QList<QString> &app_developer_email) {
    m_app_developer_email = app_developer_email;
    m_app_developer_email_isSet = true;
}

bool OAIRequestInfo::is_app_developer_email_Set() const{
    return m_app_developer_email_isSet;
}

bool OAIRequestInfo::is_app_developer_email_Valid() const{
    return m_app_developer_email_isValid;
}

QString OAIRequestInfo::getAppKey() const {
    return m_app_key;
}
void OAIRequestInfo::setAppKey(const QString &app_key) {
    m_app_key = app_key;
    m_app_key_isSet = true;
}

bool OAIRequestInfo::is_app_key_Set() const{
    return m_app_key_isSet;
}

bool OAIRequestInfo::is_app_key_Valid() const{
    return m_app_key_isValid;
}

QString OAIRequestInfo::getNumberOfRequests() const {
    return m_number_of_requests;
}
void OAIRequestInfo::setNumberOfRequests(const QString &number_of_requests) {
    m_number_of_requests = number_of_requests;
    m_number_of_requests_isSet = true;
}

bool OAIRequestInfo::is_number_of_requests_Set() const{
    return m_number_of_requests_isSet;
}

bool OAIRequestInfo::is_number_of_requests_Valid() const{
    return m_number_of_requests_isValid;
}

bool OAIRequestInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_developer_email.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_requests_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRequestInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
