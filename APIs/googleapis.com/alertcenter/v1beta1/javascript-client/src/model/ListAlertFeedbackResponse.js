/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AlertFeedback from './AlertFeedback';

/**
 * The ListAlertFeedbackResponse model module.
 * @module model/ListAlertFeedbackResponse
 * @version v1beta1
 */
class ListAlertFeedbackResponse {
    /**
     * Constructs a new <code>ListAlertFeedbackResponse</code>.
     * Response message for an alert feedback listing request.
     * @alias module:model/ListAlertFeedbackResponse
     */
    constructor() { 
        
        ListAlertFeedbackResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListAlertFeedbackResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListAlertFeedbackResponse} obj Optional instance to populate.
     * @return {module:model/ListAlertFeedbackResponse} The populated <code>ListAlertFeedbackResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListAlertFeedbackResponse();

            if (data.hasOwnProperty('feedback')) {
                obj['feedback'] = ApiClient.convertToType(data['feedback'], [AlertFeedback]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListAlertFeedbackResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListAlertFeedbackResponse</code>.
     */
    static validateJSON(data) {
        if (data['feedback']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['feedback'])) {
                throw new Error("Expected the field `feedback` to be an array in the JSON data but got " + data['feedback']);
            }
            // validate the optional field `feedback` (array)
            for (const item of data['feedback']) {
                AlertFeedback.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The list of alert feedback. Feedback entries for each alert are ordered by creation time descending.
 * @member {Array.<module:model/AlertFeedback>} feedback
 */
ListAlertFeedbackResponse.prototype['feedback'] = undefined;






export default ListAlertFeedbackResponse;

