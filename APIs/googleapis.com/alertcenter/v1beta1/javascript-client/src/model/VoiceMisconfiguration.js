/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TransferMisconfiguration from './TransferMisconfiguration';
import VoicemailMisconfiguration from './VoicemailMisconfiguration';

/**
 * The VoiceMisconfiguration model module.
 * @module model/VoiceMisconfiguration
 * @version v1beta1
 */
class VoiceMisconfiguration {
    /**
     * Constructs a new <code>VoiceMisconfiguration</code>.
     * An alert triggered when Google Voice configuration becomes invalid, generally due to an external entity being modified or deleted.
     * @alias module:model/VoiceMisconfiguration
     */
    constructor() { 
        
        VoiceMisconfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VoiceMisconfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VoiceMisconfiguration} obj Optional instance to populate.
     * @return {module:model/VoiceMisconfiguration} The populated <code>VoiceMisconfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VoiceMisconfiguration();

            if (data.hasOwnProperty('entityName')) {
                obj['entityName'] = ApiClient.convertToType(data['entityName'], 'String');
            }
            if (data.hasOwnProperty('entityType')) {
                obj['entityType'] = ApiClient.convertToType(data['entityType'], 'String');
            }
            if (data.hasOwnProperty('fixUri')) {
                obj['fixUri'] = ApiClient.convertToType(data['fixUri'], 'String');
            }
            if (data.hasOwnProperty('membersMisconfiguration')) {
                obj['membersMisconfiguration'] = TransferMisconfiguration.constructFromObject(data['membersMisconfiguration']);
            }
            if (data.hasOwnProperty('transferMisconfiguration')) {
                obj['transferMisconfiguration'] = TransferMisconfiguration.constructFromObject(data['transferMisconfiguration']);
            }
            if (data.hasOwnProperty('voicemailMisconfiguration')) {
                obj['voicemailMisconfiguration'] = VoicemailMisconfiguration.constructFromObject(data['voicemailMisconfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VoiceMisconfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VoiceMisconfiguration</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['entityName'] && !(typeof data['entityName'] === 'string' || data['entityName'] instanceof String)) {
            throw new Error("Expected the field `entityName` to be a primitive type in the JSON string but got " + data['entityName']);
        }
        // ensure the json data is a string
        if (data['entityType'] && !(typeof data['entityType'] === 'string' || data['entityType'] instanceof String)) {
            throw new Error("Expected the field `entityType` to be a primitive type in the JSON string but got " + data['entityType']);
        }
        // ensure the json data is a string
        if (data['fixUri'] && !(typeof data['fixUri'] === 'string' || data['fixUri'] instanceof String)) {
            throw new Error("Expected the field `fixUri` to be a primitive type in the JSON string but got " + data['fixUri']);
        }
        // validate the optional field `membersMisconfiguration`
        if (data['membersMisconfiguration']) { // data not null
          TransferMisconfiguration.validateJSON(data['membersMisconfiguration']);
        }
        // validate the optional field `transferMisconfiguration`
        if (data['transferMisconfiguration']) { // data not null
          TransferMisconfiguration.validateJSON(data['transferMisconfiguration']);
        }
        // validate the optional field `voicemailMisconfiguration`
        if (data['voicemailMisconfiguration']) { // data not null
          VoicemailMisconfiguration.validateJSON(data['voicemailMisconfiguration']);
        }

        return true;
    }


}



/**
 * Name of the entity whose configuration is now invalid.
 * @member {String} entityName
 */
VoiceMisconfiguration.prototype['entityName'] = undefined;

/**
 * Type of the entity whose configuration is now invalid.
 * @member {module:model/VoiceMisconfiguration.EntityTypeEnum} entityType
 */
VoiceMisconfiguration.prototype['entityType'] = undefined;

/**
 * Link that the admin can follow to fix the issue.
 * @member {String} fixUri
 */
VoiceMisconfiguration.prototype['fixUri'] = undefined;

/**
 * @member {module:model/TransferMisconfiguration} membersMisconfiguration
 */
VoiceMisconfiguration.prototype['membersMisconfiguration'] = undefined;

/**
 * @member {module:model/TransferMisconfiguration} transferMisconfiguration
 */
VoiceMisconfiguration.prototype['transferMisconfiguration'] = undefined;

/**
 * @member {module:model/VoicemailMisconfiguration} voicemailMisconfiguration
 */
VoiceMisconfiguration.prototype['voicemailMisconfiguration'] = undefined;





/**
 * Allowed values for the <code>entityType</code> property.
 * @enum {String}
 * @readonly
 */
VoiceMisconfiguration['EntityTypeEnum'] = {

    /**
     * value: "ENTITY_TYPE_UNSPECIFIED"
     * @const
     */
    "ENTITY_TYPE_UNSPECIFIED": "ENTITY_TYPE_UNSPECIFIED",

    /**
     * value: "AUTO_ATTENDANT"
     * @const
     */
    "AUTO_ATTENDANT": "AUTO_ATTENDANT",

    /**
     * value: "RING_GROUP"
     * @const
     */
    "RING_GROUP": "RING_GROUP"
};



export default VoiceMisconfiguration;

