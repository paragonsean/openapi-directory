/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeviceCompromisedSecurityDetail model module.
 * @module model/DeviceCompromisedSecurityDetail
 * @version v1beta1
 */
class DeviceCompromisedSecurityDetail {
    /**
     * Constructs a new <code>DeviceCompromisedSecurityDetail</code>.
     * Detailed information of a single MDM device compromised event.
     * @alias module:model/DeviceCompromisedSecurityDetail
     */
    constructor() { 
        
        DeviceCompromisedSecurityDetail.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeviceCompromisedSecurityDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeviceCompromisedSecurityDetail} obj Optional instance to populate.
     * @return {module:model/DeviceCompromisedSecurityDetail} The populated <code>DeviceCompromisedSecurityDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeviceCompromisedSecurityDetail();

            if (data.hasOwnProperty('deviceCompromisedState')) {
                obj['deviceCompromisedState'] = ApiClient.convertToType(data['deviceCompromisedState'], 'String');
            }
            if (data.hasOwnProperty('deviceId')) {
                obj['deviceId'] = ApiClient.convertToType(data['deviceId'], 'String');
            }
            if (data.hasOwnProperty('deviceModel')) {
                obj['deviceModel'] = ApiClient.convertToType(data['deviceModel'], 'String');
            }
            if (data.hasOwnProperty('deviceType')) {
                obj['deviceType'] = ApiClient.convertToType(data['deviceType'], 'String');
            }
            if (data.hasOwnProperty('iosVendorId')) {
                obj['iosVendorId'] = ApiClient.convertToType(data['iosVendorId'], 'String');
            }
            if (data.hasOwnProperty('resourceId')) {
                obj['resourceId'] = ApiClient.convertToType(data['resourceId'], 'String');
            }
            if (data.hasOwnProperty('serialNumber')) {
                obj['serialNumber'] = ApiClient.convertToType(data['serialNumber'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeviceCompromisedSecurityDetail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeviceCompromisedSecurityDetail</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['deviceCompromisedState'] && !(typeof data['deviceCompromisedState'] === 'string' || data['deviceCompromisedState'] instanceof String)) {
            throw new Error("Expected the field `deviceCompromisedState` to be a primitive type in the JSON string but got " + data['deviceCompromisedState']);
        }
        // ensure the json data is a string
        if (data['deviceId'] && !(typeof data['deviceId'] === 'string' || data['deviceId'] instanceof String)) {
            throw new Error("Expected the field `deviceId` to be a primitive type in the JSON string but got " + data['deviceId']);
        }
        // ensure the json data is a string
        if (data['deviceModel'] && !(typeof data['deviceModel'] === 'string' || data['deviceModel'] instanceof String)) {
            throw new Error("Expected the field `deviceModel` to be a primitive type in the JSON string but got " + data['deviceModel']);
        }
        // ensure the json data is a string
        if (data['deviceType'] && !(typeof data['deviceType'] === 'string' || data['deviceType'] instanceof String)) {
            throw new Error("Expected the field `deviceType` to be a primitive type in the JSON string but got " + data['deviceType']);
        }
        // ensure the json data is a string
        if (data['iosVendorId'] && !(typeof data['iosVendorId'] === 'string' || data['iosVendorId'] instanceof String)) {
            throw new Error("Expected the field `iosVendorId` to be a primitive type in the JSON string but got " + data['iosVendorId']);
        }
        // ensure the json data is a string
        if (data['resourceId'] && !(typeof data['resourceId'] === 'string' || data['resourceId'] instanceof String)) {
            throw new Error("Expected the field `resourceId` to be a primitive type in the JSON string but got " + data['resourceId']);
        }
        // ensure the json data is a string
        if (data['serialNumber'] && !(typeof data['serialNumber'] === 'string' || data['serialNumber'] instanceof String)) {
            throw new Error("Expected the field `serialNumber` to be a primitive type in the JSON string but got " + data['serialNumber']);
        }

        return true;
    }


}



/**
 * The device compromised state. Possible values are \"`Compromised`\" or \"`Not Compromised`\".
 * @member {String} deviceCompromisedState
 */
DeviceCompromisedSecurityDetail.prototype['deviceCompromisedState'] = undefined;

/**
 * Required. The device ID.
 * @member {String} deviceId
 */
DeviceCompromisedSecurityDetail.prototype['deviceId'] = undefined;

/**
 * The model of the device.
 * @member {String} deviceModel
 */
DeviceCompromisedSecurityDetail.prototype['deviceModel'] = undefined;

/**
 * The type of the device.
 * @member {String} deviceType
 */
DeviceCompromisedSecurityDetail.prototype['deviceType'] = undefined;

/**
 * Required for iOS, empty for others.
 * @member {String} iosVendorId
 */
DeviceCompromisedSecurityDetail.prototype['iosVendorId'] = undefined;

/**
 * The device resource ID.
 * @member {String} resourceId
 */
DeviceCompromisedSecurityDetail.prototype['resourceId'] = undefined;

/**
 * The serial number of the device.
 * @member {String} serialNumber
 */
DeviceCompromisedSecurityDetail.prototype['serialNumber'] = undefined;






export default DeviceCompromisedSecurityDetail;

