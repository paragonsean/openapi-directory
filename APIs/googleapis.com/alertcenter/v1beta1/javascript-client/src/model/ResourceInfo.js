/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResourceInfo model module.
 * @module model/ResourceInfo
 * @version v1beta1
 */
class ResourceInfo {
    /**
     * Constructs a new <code>ResourceInfo</code>.
     * Proto that contains resource information.
     * @alias module:model/ResourceInfo
     */
    constructor() { 
        
        ResourceInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResourceInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceInfo} obj Optional instance to populate.
     * @return {module:model/ResourceInfo} The populated <code>ResourceInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceInfo();

            if (data.hasOwnProperty('documentId')) {
                obj['documentId'] = ApiClient.convertToType(data['documentId'], 'String');
            }
            if (data.hasOwnProperty('resourceTitle')) {
                obj['resourceTitle'] = ApiClient.convertToType(data['resourceTitle'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['documentId'] && !(typeof data['documentId'] === 'string' || data['documentId'] instanceof String)) {
            throw new Error("Expected the field `documentId` to be a primitive type in the JSON string but got " + data['documentId']);
        }
        // ensure the json data is a string
        if (data['resourceTitle'] && !(typeof data['resourceTitle'] === 'string' || data['resourceTitle'] instanceof String)) {
            throw new Error("Expected the field `resourceTitle` to be a primitive type in the JSON string but got " + data['resourceTitle']);
        }

        return true;
    }


}



/**
 * Drive file ID.
 * @member {String} documentId
 */
ResourceInfo.prototype['documentId'] = undefined;

/**
 * Title of the resource, for example email subject, or document title.
 * @member {String} resourceTitle
 */
ResourceInfo.prototype['resourceTitle'] = undefined;






export default ResourceInfo;

