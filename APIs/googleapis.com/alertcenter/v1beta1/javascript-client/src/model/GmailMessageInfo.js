/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GmailMessageInfo model module.
 * @module model/GmailMessageInfo
 * @version v1beta1
 */
class GmailMessageInfo {
    /**
     * Constructs a new <code>GmailMessageInfo</code>.
     * Details of a message in phishing spike alert.
     * @alias module:model/GmailMessageInfo
     */
    constructor() { 
        
        GmailMessageInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GmailMessageInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GmailMessageInfo} obj Optional instance to populate.
     * @return {module:model/GmailMessageInfo} The populated <code>GmailMessageInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GmailMessageInfo();

            if (data.hasOwnProperty('attachmentsSha256Hash')) {
                obj['attachmentsSha256Hash'] = ApiClient.convertToType(data['attachmentsSha256Hash'], ['String']);
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'String');
            }
            if (data.hasOwnProperty('md5HashMessageBody')) {
                obj['md5HashMessageBody'] = ApiClient.convertToType(data['md5HashMessageBody'], 'String');
            }
            if (data.hasOwnProperty('md5HashSubject')) {
                obj['md5HashSubject'] = ApiClient.convertToType(data['md5HashSubject'], 'String');
            }
            if (data.hasOwnProperty('messageBodySnippet')) {
                obj['messageBodySnippet'] = ApiClient.convertToType(data['messageBodySnippet'], 'String');
            }
            if (data.hasOwnProperty('messageId')) {
                obj['messageId'] = ApiClient.convertToType(data['messageId'], 'String');
            }
            if (data.hasOwnProperty('recipient')) {
                obj['recipient'] = ApiClient.convertToType(data['recipient'], 'String');
            }
            if (data.hasOwnProperty('sentTime')) {
                obj['sentTime'] = ApiClient.convertToType(data['sentTime'], 'String');
            }
            if (data.hasOwnProperty('subjectText')) {
                obj['subjectText'] = ApiClient.convertToType(data['subjectText'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GmailMessageInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GmailMessageInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['attachmentsSha256Hash'])) {
            throw new Error("Expected the field `attachmentsSha256Hash` to be an array in the JSON data but got " + data['attachmentsSha256Hash']);
        }
        // ensure the json data is a string
        if (data['date'] && !(typeof data['date'] === 'string' || data['date'] instanceof String)) {
            throw new Error("Expected the field `date` to be a primitive type in the JSON string but got " + data['date']);
        }
        // ensure the json data is a string
        if (data['md5HashMessageBody'] && !(typeof data['md5HashMessageBody'] === 'string' || data['md5HashMessageBody'] instanceof String)) {
            throw new Error("Expected the field `md5HashMessageBody` to be a primitive type in the JSON string but got " + data['md5HashMessageBody']);
        }
        // ensure the json data is a string
        if (data['md5HashSubject'] && !(typeof data['md5HashSubject'] === 'string' || data['md5HashSubject'] instanceof String)) {
            throw new Error("Expected the field `md5HashSubject` to be a primitive type in the JSON string but got " + data['md5HashSubject']);
        }
        // ensure the json data is a string
        if (data['messageBodySnippet'] && !(typeof data['messageBodySnippet'] === 'string' || data['messageBodySnippet'] instanceof String)) {
            throw new Error("Expected the field `messageBodySnippet` to be a primitive type in the JSON string but got " + data['messageBodySnippet']);
        }
        // ensure the json data is a string
        if (data['messageId'] && !(typeof data['messageId'] === 'string' || data['messageId'] instanceof String)) {
            throw new Error("Expected the field `messageId` to be a primitive type in the JSON string but got " + data['messageId']);
        }
        // ensure the json data is a string
        if (data['recipient'] && !(typeof data['recipient'] === 'string' || data['recipient'] instanceof String)) {
            throw new Error("Expected the field `recipient` to be a primitive type in the JSON string but got " + data['recipient']);
        }
        // ensure the json data is a string
        if (data['sentTime'] && !(typeof data['sentTime'] === 'string' || data['sentTime'] instanceof String)) {
            throw new Error("Expected the field `sentTime` to be a primitive type in the JSON string but got " + data['sentTime']);
        }
        // ensure the json data is a string
        if (data['subjectText'] && !(typeof data['subjectText'] === 'string' || data['subjectText'] instanceof String)) {
            throw new Error("Expected the field `subjectText` to be a primitive type in the JSON string but got " + data['subjectText']);
        }

        return true;
    }


}



/**
 * The `SHA256` hash of email's attachment and all MIME parts.
 * @member {Array.<String>} attachmentsSha256Hash
 */
GmailMessageInfo.prototype['attachmentsSha256Hash'] = undefined;

/**
 * The date of the event related to this email.
 * @member {String} date
 */
GmailMessageInfo.prototype['date'] = undefined;

/**
 * The hash of the message body text.
 * @member {String} md5HashMessageBody
 */
GmailMessageInfo.prototype['md5HashMessageBody'] = undefined;

/**
 * The MD5 Hash of email's subject (only available for reported emails).
 * @member {String} md5HashSubject
 */
GmailMessageInfo.prototype['md5HashSubject'] = undefined;

/**
 * The snippet of the message body text (only available for reported emails).
 * @member {String} messageBodySnippet
 */
GmailMessageInfo.prototype['messageBodySnippet'] = undefined;

/**
 * The message ID.
 * @member {String} messageId
 */
GmailMessageInfo.prototype['messageId'] = undefined;

/**
 * The recipient of this email.
 * @member {String} recipient
 */
GmailMessageInfo.prototype['recipient'] = undefined;

/**
 * The sent time of the email.
 * @member {String} sentTime
 */
GmailMessageInfo.prototype['sentTime'] = undefined;

/**
 * The email subject text (only available for reported emails).
 * @member {String} subjectText
 */
GmailMessageInfo.prototype['subjectText'] = undefined;






export default GmailMessageInfo;

