/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DomainId from './DomainId';
import GmailMessageInfo from './GmailMessageInfo';
import MaliciousEntity from './MaliciousEntity';

/**
 * The PhishingSpike model module.
 * @module model/PhishingSpike
 * @version v1beta1
 */
class PhishingSpike {
    /**
     * Constructs a new <code>PhishingSpike</code>.
     * Alert for a spike in user reported phishing. *Warning*: This type has been deprecated. Use [MailPhishing](/admin-sdk/alertcenter/reference/rest/v1beta1/MailPhishing) instead.
     * @alias module:model/PhishingSpike
     */
    constructor() { 
        
        PhishingSpike.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PhishingSpike</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PhishingSpike} obj Optional instance to populate.
     * @return {module:model/PhishingSpike} The populated <code>PhishingSpike</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PhishingSpike();

            if (data.hasOwnProperty('domainId')) {
                obj['domainId'] = DomainId.constructFromObject(data['domainId']);
            }
            if (data.hasOwnProperty('isInternal')) {
                obj['isInternal'] = ApiClient.convertToType(data['isInternal'], 'Boolean');
            }
            if (data.hasOwnProperty('maliciousEntity')) {
                obj['maliciousEntity'] = MaliciousEntity.constructFromObject(data['maliciousEntity']);
            }
            if (data.hasOwnProperty('messages')) {
                obj['messages'] = ApiClient.convertToType(data['messages'], [GmailMessageInfo]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PhishingSpike</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PhishingSpike</code>.
     */
    static validateJSON(data) {
        // validate the optional field `domainId`
        if (data['domainId']) { // data not null
          DomainId.validateJSON(data['domainId']);
        }
        // validate the optional field `maliciousEntity`
        if (data['maliciousEntity']) { // data not null
          MaliciousEntity.validateJSON(data['maliciousEntity']);
        }
        if (data['messages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['messages'])) {
                throw new Error("Expected the field `messages` to be an array in the JSON data but got " + data['messages']);
            }
            // validate the optional field `messages` (array)
            for (const item of data['messages']) {
                GmailMessageInfo.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/DomainId} domainId
 */
PhishingSpike.prototype['domainId'] = undefined;

/**
 * If `true`, the email originated from within the organization.
 * @member {Boolean} isInternal
 */
PhishingSpike.prototype['isInternal'] = undefined;

/**
 * @member {module:model/MaliciousEntity} maliciousEntity
 */
PhishingSpike.prototype['maliciousEntity'] = undefined;

/**
 * The list of messages contained by this alert.
 * @member {Array.<module:model/GmailMessageInfo>} messages
 */
PhishingSpike.prototype['messages'] = undefined;






export default PhishingSpike;

