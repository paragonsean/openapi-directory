/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SupportTicket model module.
 * @module model/SupportTicket
 * @version v1beta1
 */
class SupportTicket {
    /**
     * Constructs a new <code>SupportTicket</code>.
     * Support ticket related to Access Approvals request
     * @alias module:model/SupportTicket
     */
    constructor() { 
        
        SupportTicket.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SupportTicket</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SupportTicket} obj Optional instance to populate.
     * @return {module:model/SupportTicket} The populated <code>SupportTicket</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SupportTicket();

            if (data.hasOwnProperty('ticketId')) {
                obj['ticketId'] = ApiClient.convertToType(data['ticketId'], 'String');
            }
            if (data.hasOwnProperty('ticketUrl')) {
                obj['ticketUrl'] = ApiClient.convertToType(data['ticketUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SupportTicket</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SupportTicket</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ticketId'] && !(typeof data['ticketId'] === 'string' || data['ticketId'] instanceof String)) {
            throw new Error("Expected the field `ticketId` to be a primitive type in the JSON string but got " + data['ticketId']);
        }
        // ensure the json data is a string
        if (data['ticketUrl'] && !(typeof data['ticketUrl'] === 'string' || data['ticketUrl'] instanceof String)) {
            throw new Error("Expected the field `ticketUrl` to be a primitive type in the JSON string but got " + data['ticketUrl']);
        }

        return true;
    }


}



/**
 * Support ticket ID
 * @member {String} ticketId
 */
SupportTicket.prototype['ticketId'] = undefined;

/**
 * Link to support ticket
 * @member {String} ticketUrl
 */
SupportTicket.prototype['ticketUrl'] = undefined;






export default SupportTicket;

