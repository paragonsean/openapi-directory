/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccountSuspensionDetails from './AccountSuspensionDetails';

/**
 * The AccountSuspensionWarning model module.
 * @module model/AccountSuspensionWarning
 * @version v1beta1
 */
class AccountSuspensionWarning {
    /**
     * Constructs a new <code>AccountSuspensionWarning</code>.
     * A warning that the customer&#39;s account is about to be suspended.
     * @alias module:model/AccountSuspensionWarning
     */
    constructor() { 
        
        AccountSuspensionWarning.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AccountSuspensionWarning</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccountSuspensionWarning} obj Optional instance to populate.
     * @return {module:model/AccountSuspensionWarning} The populated <code>AccountSuspensionWarning</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccountSuspensionWarning();

            if (data.hasOwnProperty('appealWindow')) {
                obj['appealWindow'] = ApiClient.convertToType(data['appealWindow'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('suspensionDetails')) {
                obj['suspensionDetails'] = ApiClient.convertToType(data['suspensionDetails'], [AccountSuspensionDetails]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccountSuspensionWarning</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccountSuspensionWarning</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['appealWindow'] && !(typeof data['appealWindow'] === 'string' || data['appealWindow'] instanceof String)) {
            throw new Error("Expected the field `appealWindow` to be a primitive type in the JSON string but got " + data['appealWindow']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        if (data['suspensionDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['suspensionDetails'])) {
                throw new Error("Expected the field `suspensionDetails` to be an array in the JSON data but got " + data['suspensionDetails']);
            }
            // validate the optional field `suspensionDetails` (array)
            for (const item of data['suspensionDetails']) {
                AccountSuspensionDetails.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The amount of time remaining to appeal an imminent suspension. After this window has elapsed, the account will be suspended. Only populated if the account suspension is in WARNING state.
 * @member {String} appealWindow
 */
AccountSuspensionWarning.prototype['appealWindow'] = undefined;

/**
 * Account suspension warning state.
 * @member {module:model/AccountSuspensionWarning.StateEnum} state
 */
AccountSuspensionWarning.prototype['state'] = undefined;

/**
 * Details about why an account is being suspended.
 * @member {Array.<module:model/AccountSuspensionDetails>} suspensionDetails
 */
AccountSuspensionWarning.prototype['suspensionDetails'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
AccountSuspensionWarning['StateEnum'] = {

    /**
     * value: "ACCOUNT_SUSPENSION_WARNING_STATE_UNSPECIFIED"
     * @const
     */
    "ACCOUNT_SUSPENSION_WARNING_STATE_UNSPECIFIED": "ACCOUNT_SUSPENSION_WARNING_STATE_UNSPECIFIED",

    /**
     * value: "WARNING"
     * @const
     */
    "WARNING": "WARNING",

    /**
     * value: "SUSPENDED"
     * @const
     */
    "SUSPENDED": "SUSPENDED",

    /**
     * value: "APPEAL_APPROVED"
     * @const
     */
    "APPEAL_APPROVED": "APPEAL_APPROVED",

    /**
     * value: "APPEAL_SUBMITTED"
     * @const
     */
    "APPEAL_SUBMITTED": "APPEAL_SUBMITTED"
};



export default AccountSuspensionWarning;

