/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CloudPubsubTopic model module.
 * @module model/CloudPubsubTopic
 * @version v1beta1
 */
class CloudPubsubTopic {
    /**
     * Constructs a new <code>CloudPubsubTopic</code>.
     * A reference to a Cloud Pubsub topic. To register for notifications, the owner of the topic must grant &#x60;alerts-api-push-notifications@system.gserviceaccount.com&#x60; the &#x60;projects.topics.publish&#x60; permission.
     * @alias module:model/CloudPubsubTopic
     */
    constructor() { 
        
        CloudPubsubTopic.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CloudPubsubTopic</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CloudPubsubTopic} obj Optional instance to populate.
     * @return {module:model/CloudPubsubTopic} The populated <code>CloudPubsubTopic</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CloudPubsubTopic();

            if (data.hasOwnProperty('payloadFormat')) {
                obj['payloadFormat'] = ApiClient.convertToType(data['payloadFormat'], 'String');
            }
            if (data.hasOwnProperty('topicName')) {
                obj['topicName'] = ApiClient.convertToType(data['topicName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CloudPubsubTopic</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CloudPubsubTopic</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['payloadFormat'] && !(typeof data['payloadFormat'] === 'string' || data['payloadFormat'] instanceof String)) {
            throw new Error("Expected the field `payloadFormat` to be a primitive type in the JSON string but got " + data['payloadFormat']);
        }
        // ensure the json data is a string
        if (data['topicName'] && !(typeof data['topicName'] === 'string' || data['topicName'] instanceof String)) {
            throw new Error("Expected the field `topicName` to be a primitive type in the JSON string but got " + data['topicName']);
        }

        return true;
    }


}



/**
 * Optional. The format of the payload that would be sent. If not specified the format will be JSON.
 * @member {module:model/CloudPubsubTopic.PayloadFormatEnum} payloadFormat
 */
CloudPubsubTopic.prototype['payloadFormat'] = undefined;

/**
 * The `name` field of a Cloud Pubsub [Topic] (https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics#Topic).
 * @member {String} topicName
 */
CloudPubsubTopic.prototype['topicName'] = undefined;





/**
 * Allowed values for the <code>payloadFormat</code> property.
 * @enum {String}
 * @readonly
 */
CloudPubsubTopic['PayloadFormatEnum'] = {

    /**
     * value: "PAYLOAD_FORMAT_UNSPECIFIED"
     * @const
     */
    "PAYLOAD_FORMAT_UNSPECIFIED": "PAYLOAD_FORMAT_UNSPECIFIED",

    /**
     * value: "JSON"
     * @const
     */
    "JSON": "JSON"
};



export default CloudPubsubTopic;

