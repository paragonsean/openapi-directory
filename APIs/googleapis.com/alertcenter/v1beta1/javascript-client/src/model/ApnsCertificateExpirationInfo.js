/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApnsCertificateExpirationInfo model module.
 * @module model/ApnsCertificateExpirationInfo
 * @version v1beta1
 */
class ApnsCertificateExpirationInfo {
    /**
     * Constructs a new <code>ApnsCertificateExpirationInfo</code>.
     * The explanation message associated with \&quot;APNS certificate is expiring soon\&quot; and \&quot;APNS certificate has expired\&quot; alerts.
     * @alias module:model/ApnsCertificateExpirationInfo
     */
    constructor() { 
        
        ApnsCertificateExpirationInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApnsCertificateExpirationInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApnsCertificateExpirationInfo} obj Optional instance to populate.
     * @return {module:model/ApnsCertificateExpirationInfo} The populated <code>ApnsCertificateExpirationInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApnsCertificateExpirationInfo();

            if (data.hasOwnProperty('appleId')) {
                obj['appleId'] = ApiClient.convertToType(data['appleId'], 'String');
            }
            if (data.hasOwnProperty('expirationTime')) {
                obj['expirationTime'] = ApiClient.convertToType(data['expirationTime'], 'String');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApnsCertificateExpirationInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApnsCertificateExpirationInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['appleId'] && !(typeof data['appleId'] === 'string' || data['appleId'] instanceof String)) {
            throw new Error("Expected the field `appleId` to be a primitive type in the JSON string but got " + data['appleId']);
        }
        // ensure the json data is a string
        if (data['expirationTime'] && !(typeof data['expirationTime'] === 'string' || data['expirationTime'] instanceof String)) {
            throw new Error("Expected the field `expirationTime` to be a primitive type in the JSON string but got " + data['expirationTime']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }

        return true;
    }


}



/**
 * The Apple ID used to create the certificate. It may be blank if admins didn't enter it.
 * @member {String} appleId
 */
ApnsCertificateExpirationInfo.prototype['appleId'] = undefined;

/**
 * The expiration date of the APNS certificate.
 * @member {String} expirationTime
 */
ApnsCertificateExpirationInfo.prototype['expirationTime'] = undefined;

/**
 * The UID of the certificate.
 * @member {String} uid
 */
ApnsCertificateExpirationInfo.prototype['uid'] = undefined;






export default ApnsCertificateExpirationInfo;

