/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MergeInfo from './MergeInfo';

/**
 * The AppsOutage model module.
 * @module model/AppsOutage
 * @version v1beta1
 */
class AppsOutage {
    /**
     * Constructs a new <code>AppsOutage</code>.
     * An outage incident reported for a Google Workspace service.
     * @alias module:model/AppsOutage
     */
    constructor() { 
        
        AppsOutage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AppsOutage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppsOutage} obj Optional instance to populate.
     * @return {module:model/AppsOutage} The populated <code>AppsOutage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppsOutage();

            if (data.hasOwnProperty('dashboardUri')) {
                obj['dashboardUri'] = ApiClient.convertToType(data['dashboardUri'], 'String');
            }
            if (data.hasOwnProperty('incidentTrackingId')) {
                obj['incidentTrackingId'] = ApiClient.convertToType(data['incidentTrackingId'], 'String');
            }
            if (data.hasOwnProperty('mergeInfo')) {
                obj['mergeInfo'] = MergeInfo.constructFromObject(data['mergeInfo']);
            }
            if (data.hasOwnProperty('nextUpdateTime')) {
                obj['nextUpdateTime'] = ApiClient.convertToType(data['nextUpdateTime'], 'String');
            }
            if (data.hasOwnProperty('products')) {
                obj['products'] = ApiClient.convertToType(data['products'], ['String']);
            }
            if (data.hasOwnProperty('resolutionTime')) {
                obj['resolutionTime'] = ApiClient.convertToType(data['resolutionTime'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppsOutage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppsOutage</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dashboardUri'] && !(typeof data['dashboardUri'] === 'string' || data['dashboardUri'] instanceof String)) {
            throw new Error("Expected the field `dashboardUri` to be a primitive type in the JSON string but got " + data['dashboardUri']);
        }
        // ensure the json data is a string
        if (data['incidentTrackingId'] && !(typeof data['incidentTrackingId'] === 'string' || data['incidentTrackingId'] instanceof String)) {
            throw new Error("Expected the field `incidentTrackingId` to be a primitive type in the JSON string but got " + data['incidentTrackingId']);
        }
        // validate the optional field `mergeInfo`
        if (data['mergeInfo']) { // data not null
          MergeInfo.validateJSON(data['mergeInfo']);
        }
        // ensure the json data is a string
        if (data['nextUpdateTime'] && !(typeof data['nextUpdateTime'] === 'string' || data['nextUpdateTime'] instanceof String)) {
            throw new Error("Expected the field `nextUpdateTime` to be a primitive type in the JSON string but got " + data['nextUpdateTime']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['products'])) {
            throw new Error("Expected the field `products` to be an array in the JSON data but got " + data['products']);
        }
        // ensure the json data is a string
        if (data['resolutionTime'] && !(typeof data['resolutionTime'] === 'string' || data['resolutionTime'] instanceof String)) {
            throw new Error("Expected the field `resolutionTime` to be a primitive type in the JSON string but got " + data['resolutionTime']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * Link to the outage event in Google Workspace Status Dashboard
 * @member {String} dashboardUri
 */
AppsOutage.prototype['dashboardUri'] = undefined;

/**
 * Incident tracking ID.
 * @member {String} incidentTrackingId
 */
AppsOutage.prototype['incidentTrackingId'] = undefined;

/**
 * @member {module:model/MergeInfo} mergeInfo
 */
AppsOutage.prototype['mergeInfo'] = undefined;

/**
 * Timestamp by which the next update is expected to arrive.
 * @member {String} nextUpdateTime
 */
AppsOutage.prototype['nextUpdateTime'] = undefined;

/**
 * List of products impacted by the outage.
 * @member {Array.<String>} products
 */
AppsOutage.prototype['products'] = undefined;

/**
 * Timestamp when the outage is expected to be resolved, or has confirmed resolution. Provided only when known.
 * @member {String} resolutionTime
 */
AppsOutage.prototype['resolutionTime'] = undefined;

/**
 * Current outage status.
 * @member {module:model/AppsOutage.StatusEnum} status
 */
AppsOutage.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
AppsOutage['StatusEnum'] = {

    /**
     * value: "STATUS_UNSPECIFIED"
     * @const
     */
    "STATUS_UNSPECIFIED": "STATUS_UNSPECIFIED",

    /**
     * value: "NEW"
     * @const
     */
    "NEW": "NEW",

    /**
     * value: "ONGOING"
     * @const
     */
    "ONGOING": "ONGOING",

    /**
     * value: "RESOLVED"
     * @const
     */
    "RESOLVED": "RESOLVED",

    /**
     * value: "FALSE_POSITIVE"
     * @const
     */
    "FALSE_POSITIVE": "FALSE_POSITIVE",

    /**
     * value: "PARTIALLY_RESOLVED"
     * @const
     */
    "PARTIALLY_RESOLVED": "PARTIALLY_RESOLVED",

    /**
     * value: "MERGED"
     * @const
     */
    "MERGED": "MERGED",

    /**
     * value: "DOWNGRADED"
     * @const
     */
    "DOWNGRADED": "DOWNGRADED"
};



export default AppsOutage;

