/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SupportTicket from './SupportTicket';

/**
 * The AccessApproval model module.
 * @module model/AccessApproval
 * @version v1beta1
 */
class AccessApproval {
    /**
     * Constructs a new <code>AccessApproval</code>.
     * Alert that is triggered when Google support requests to access customer data.
     * @alias module:model/AccessApproval
     */
    constructor() { 
        
        AccessApproval.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AccessApproval</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccessApproval} obj Optional instance to populate.
     * @return {module:model/AccessApproval} The populated <code>AccessApproval</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccessApproval();

            if (data.hasOwnProperty('justificationReason')) {
                obj['justificationReason'] = ApiClient.convertToType(data['justificationReason'], ['String']);
            }
            if (data.hasOwnProperty('officeLocation')) {
                obj['officeLocation'] = ApiClient.convertToType(data['officeLocation'], 'String');
            }
            if (data.hasOwnProperty('products')) {
                obj['products'] = ApiClient.convertToType(data['products'], ['String']);
            }
            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = ApiClient.convertToType(data['scope'], 'String');
            }
            if (data.hasOwnProperty('tickets')) {
                obj['tickets'] = ApiClient.convertToType(data['tickets'], [SupportTicket]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccessApproval</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccessApproval</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['justificationReason'])) {
            throw new Error("Expected the field `justificationReason` to be an array in the JSON data but got " + data['justificationReason']);
        }
        // ensure the json data is a string
        if (data['officeLocation'] && !(typeof data['officeLocation'] === 'string' || data['officeLocation'] instanceof String)) {
            throw new Error("Expected the field `officeLocation` to be a primitive type in the JSON string but got " + data['officeLocation']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['products'])) {
            throw new Error("Expected the field `products` to be an array in the JSON data but got " + data['products']);
        }
        // ensure the json data is a string
        if (data['requestId'] && !(typeof data['requestId'] === 'string' || data['requestId'] instanceof String)) {
            throw new Error("Expected the field `requestId` to be a primitive type in the JSON string but got " + data['requestId']);
        }
        // ensure the json data is a string
        if (data['scope'] && !(typeof data['scope'] === 'string' || data['scope'] instanceof String)) {
            throw new Error("Expected the field `scope` to be a primitive type in the JSON string but got " + data['scope']);
        }
        if (data['tickets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tickets'])) {
                throw new Error("Expected the field `tickets` to be an array in the JSON data but got " + data['tickets']);
            }
            // validate the optional field `tickets` (array)
            for (const item of data['tickets']) {
                SupportTicket.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Justification for data access based on justification enums.
 * @member {Array.<module:model/AccessApproval.JustificationReasonEnum>} justificationReason
 */
AccessApproval.prototype['justificationReason'] = undefined;

/**
 * Office location of Google staff requesting access such as \"US\".
 * @member {String} officeLocation
 */
AccessApproval.prototype['officeLocation'] = undefined;

/**
 * Products within scope of the Access Approvals request.
 * @member {Array.<String>} products
 */
AccessApproval.prototype['products'] = undefined;

/**
 * ID of the Access Approvals request. This is a helpful field when requesting support from Google.
 * @member {String} requestId
 */
AccessApproval.prototype['requestId'] = undefined;

/**
 * Scope of access, also known as a resource. This is further narrowed down by the product field.
 * @member {String} scope
 */
AccessApproval.prototype['scope'] = undefined;

/**
 * Support tickets related to this Access Approvals request. Populated if there is an associated case number.
 * @member {Array.<module:model/SupportTicket>} tickets
 */
AccessApproval.prototype['tickets'] = undefined;





/**
 * Allowed values for the <code>justificationReason</code> property.
 * @enum {String}
 * @readonly
 */
AccessApproval['JustificationReasonEnum'] = {

    /**
     * value: "JUSTIFICATION_UNSPECIFIED"
     * @const
     */
    "JUSTIFICATION_UNSPECIFIED": "JUSTIFICATION_UNSPECIFIED",

    /**
     * value: "CUSTOMER_INITIATED_SUPPORT"
     * @const
     */
    "CUSTOMER_INITIATED_SUPPORT": "CUSTOMER_INITIATED_SUPPORT",

    /**
     * value: "GOOGLE_INITIATED_REVIEW"
     * @const
     */
    "GOOGLE_INITIATED_REVIEW": "GOOGLE_INITIATED_REVIEW",

    /**
     * value: "GOOGLE_INITIATED_SERVICE"
     * @const
     */
    "GOOGLE_INITIATED_SERVICE": "GOOGLE_INITIATED_SERVICE",

    /**
     * value: "THIRD_PARTY_DATA_REQUEST"
     * @const
     */
    "THIRD_PARTY_DATA_REQUEST": "THIRD_PARTY_DATA_REQUEST",

    /**
     * value: "GOOGLE_RESPONSE_TO_PRODUCTION_ALERT"
     * @const
     */
    "GOOGLE_RESPONSE_TO_PRODUCTION_ALERT": "GOOGLE_RESPONSE_TO_PRODUCTION_ALERT"
};



export default AccessApproval;

