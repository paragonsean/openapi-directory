/**
 * Google Workspace Alert Center API
 * Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AlertMetadata from './AlertMetadata';

/**
 * The Alert model module.
 * @module model/Alert
 * @version v1beta1
 */
class Alert {
    /**
     * Constructs a new <code>Alert</code>.
     * An alert affecting a customer.
     * @alias module:model/Alert
     */
    constructor() { 
        
        Alert.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Alert</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Alert} obj Optional instance to populate.
     * @return {module:model/Alert} The populated <code>Alert</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Alert();

            if (data.hasOwnProperty('alertId')) {
                obj['alertId'] = ApiClient.convertToType(data['alertId'], 'String');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('customerId')) {
                obj['customerId'] = ApiClient.convertToType(data['customerId'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], {'String': Object});
            }
            if (data.hasOwnProperty('deleted')) {
                obj['deleted'] = ApiClient.convertToType(data['deleted'], 'Boolean');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = AlertMetadata.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('securityInvestigationToolLink')) {
                obj['securityInvestigationToolLink'] = ApiClient.convertToType(data['securityInvestigationToolLink'], 'String');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Alert</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Alert</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['alertId'] && !(typeof data['alertId'] === 'string' || data['alertId'] instanceof String)) {
            throw new Error("Expected the field `alertId` to be a primitive type in the JSON string but got " + data['alertId']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['customerId'] && !(typeof data['customerId'] === 'string' || data['customerId'] instanceof String)) {
            throw new Error("Expected the field `customerId` to be a primitive type in the JSON string but got " + data['customerId']);
        }
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          AlertMetadata.validateJSON(data['metadata']);
        }
        // ensure the json data is a string
        if (data['securityInvestigationToolLink'] && !(typeof data['securityInvestigationToolLink'] === 'string' || data['securityInvestigationToolLink'] instanceof String)) {
            throw new Error("Expected the field `securityInvestigationToolLink` to be a primitive type in the JSON string but got " + data['securityInvestigationToolLink']);
        }
        // ensure the json data is a string
        if (data['source'] && !(typeof data['source'] === 'string' || data['source'] instanceof String)) {
            throw new Error("Expected the field `source` to be a primitive type in the JSON string but got " + data['source']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Output only. The unique identifier for the alert.
 * @member {String} alertId
 */
Alert.prototype['alertId'] = undefined;

/**
 * Output only. The time this alert was created.
 * @member {String} createTime
 */
Alert.prototype['createTime'] = undefined;

/**
 * Output only. The unique identifier of the Google Workspace account of the customer.
 * @member {String} customerId
 */
Alert.prototype['customerId'] = undefined;

/**
 * Optional. The data associated with this alert, for example google.apps.alertcenter.type.DeviceCompromised.
 * @member {Object.<String, Object>} data
 */
Alert.prototype['data'] = undefined;

/**
 * Output only. `True` if this alert is marked for deletion.
 * @member {Boolean} deleted
 */
Alert.prototype['deleted'] = undefined;

/**
 * Optional. The time the event that caused this alert ceased being active. If provided, the end time must not be earlier than the start time. If not provided, it indicates an ongoing alert.
 * @member {String} endTime
 */
Alert.prototype['endTime'] = undefined;

/**
 * Optional. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of an alert from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform alert updates in order to avoid race conditions: An `etag` is returned in the response which contains alerts, and systems are expected to put that etag in the request to update alert to ensure that their change will be applied to the same version of the alert. If no `etag` is provided in the call to update alert, then the existing alert is overwritten blindly.
 * @member {String} etag
 */
Alert.prototype['etag'] = undefined;

/**
 * @member {module:model/AlertMetadata} metadata
 */
Alert.prototype['metadata'] = undefined;

/**
 * Output only. An optional [Security Investigation Tool](https://support.google.com/a/answer/7575955) query for this alert.
 * @member {String} securityInvestigationToolLink
 */
Alert.prototype['securityInvestigationToolLink'] = undefined;

/**
 * Required. A unique identifier for the system that reported the alert. This is output only after alert is created. Supported sources are any of the following: * Google Operations * Mobile device management * Gmail phishing * Data Loss Prevention * Domain wide takeout * State sponsored attack * Google identity * Apps outage
 * @member {String} source
 */
Alert.prototype['source'] = undefined;

/**
 * Required. The time the event that caused this alert was started or detected.
 * @member {String} startTime
 */
Alert.prototype['startTime'] = undefined;

/**
 * Required. The type of the alert. This is output only after alert is created. For a list of available alert types see [Google Workspace Alert types](https://developers.google.com/admin-sdk/alertcenter/reference/alert-types).
 * @member {String} type
 */
Alert.prototype['type'] = undefined;

/**
 * Output only. The time this alert was last updated.
 * @member {String} updateTime
 */
Alert.prototype['updateTime'] = undefined;






export default Alert;

