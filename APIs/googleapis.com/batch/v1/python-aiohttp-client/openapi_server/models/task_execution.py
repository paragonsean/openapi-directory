# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TaskExecution(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exit_code: int=None):
        """TaskExecution - a model defined in OpenAPI

        :param exit_code: The exit_code of this TaskExecution.
        """
        self.openapi_types = {
            'exit_code': int
        }

        self.attribute_map = {
            'exit_code': 'exitCode'
        }

        self._exit_code = exit_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskExecution':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TaskExecution of this TaskExecution.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exit_code(self):
        """Gets the exit_code of this TaskExecution.

        When task is completed as the status of FAILED or SUCCEEDED, exit code is for one task execution result, default is 0 as success.

        :return: The exit_code of this TaskExecution.
        :rtype: int
        """
        return self._exit_code

    @exit_code.setter
    def exit_code(self, exit_code):
        """Sets the exit_code of this TaskExecution.

        When task is completed as the status of FAILED or SUCCEEDED, exit code is for one task execution result, default is 0 as success.

        :param exit_code: The exit_code of this TaskExecution.
        :type exit_code: int
        """

        self._exit_code = exit_code
