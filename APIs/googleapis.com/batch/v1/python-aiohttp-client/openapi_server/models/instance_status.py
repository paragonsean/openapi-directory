# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.disk import Disk
from openapi_server import util


class InstanceStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, boot_disk: Disk=None, machine_type: str=None, provisioning_model: str=None, task_pack: str=None):
        """InstanceStatus - a model defined in OpenAPI

        :param boot_disk: The boot_disk of this InstanceStatus.
        :param machine_type: The machine_type of this InstanceStatus.
        :param provisioning_model: The provisioning_model of this InstanceStatus.
        :param task_pack: The task_pack of this InstanceStatus.
        """
        self.openapi_types = {
            'boot_disk': Disk,
            'machine_type': str,
            'provisioning_model': str,
            'task_pack': str
        }

        self.attribute_map = {
            'boot_disk': 'bootDisk',
            'machine_type': 'machineType',
            'provisioning_model': 'provisioningModel',
            'task_pack': 'taskPack'
        }

        self._boot_disk = boot_disk
        self._machine_type = machine_type
        self._provisioning_model = provisioning_model
        self._task_pack = task_pack

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstanceStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstanceStatus of this InstanceStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def boot_disk(self):
        """Gets the boot_disk of this InstanceStatus.


        :return: The boot_disk of this InstanceStatus.
        :rtype: Disk
        """
        return self._boot_disk

    @boot_disk.setter
    def boot_disk(self, boot_disk):
        """Sets the boot_disk of this InstanceStatus.


        :param boot_disk: The boot_disk of this InstanceStatus.
        :type boot_disk: Disk
        """

        self._boot_disk = boot_disk

    @property
    def machine_type(self):
        """Gets the machine_type of this InstanceStatus.

        The Compute Engine machine type.

        :return: The machine_type of this InstanceStatus.
        :rtype: str
        """
        return self._machine_type

    @machine_type.setter
    def machine_type(self, machine_type):
        """Sets the machine_type of this InstanceStatus.

        The Compute Engine machine type.

        :param machine_type: The machine_type of this InstanceStatus.
        :type machine_type: str
        """

        self._machine_type = machine_type

    @property
    def provisioning_model(self):
        """Gets the provisioning_model of this InstanceStatus.

        The VM instance provisioning model.

        :return: The provisioning_model of this InstanceStatus.
        :rtype: str
        """
        return self._provisioning_model

    @provisioning_model.setter
    def provisioning_model(self, provisioning_model):
        """Sets the provisioning_model of this InstanceStatus.

        The VM instance provisioning model.

        :param provisioning_model: The provisioning_model of this InstanceStatus.
        :type provisioning_model: str
        """
        allowed_values = ["PROVISIONING_MODEL_UNSPECIFIED", "STANDARD", "SPOT", "PREEMPTIBLE"]  # noqa: E501
        if provisioning_model not in allowed_values:
            raise ValueError(
                "Invalid value for `provisioning_model` ({0}), must be one of {1}"
                .format(provisioning_model, allowed_values)
            )

        self._provisioning_model = provisioning_model

    @property
    def task_pack(self):
        """Gets the task_pack of this InstanceStatus.

        The max number of tasks can be assigned to this instance type.

        :return: The task_pack of this InstanceStatus.
        :rtype: str
        """
        return self._task_pack

    @task_pack.setter
    def task_pack(self, task_pack):
        """Sets the task_pack of this InstanceStatus.

        The max number of tasks can be assigned to this instance type.

        :param task_pack: The task_pack of this InstanceStatus.
        :type task_pack: str
        """

        self._task_pack = task_pack
