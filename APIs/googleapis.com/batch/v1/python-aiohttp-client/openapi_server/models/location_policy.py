# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LocationPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_locations: List[str]=None):
        """LocationPolicy - a model defined in OpenAPI

        :param allowed_locations: The allowed_locations of this LocationPolicy.
        """
        self.openapi_types = {
            'allowed_locations': List[str]
        }

        self.attribute_map = {
            'allowed_locations': 'allowedLocations'
        }

        self._allowed_locations = allowed_locations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LocationPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LocationPolicy of this LocationPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_locations(self):
        """Gets the allowed_locations of this LocationPolicy.

        A list of allowed location names represented by internal URLs. Each location can be a region or a zone. Only one region or multiple zones in one region is supported now. For example, [\"regions/us-central1\"] allow VMs in any zones in region us-central1. [\"zones/us-central1-a\", \"zones/us-central1-c\"] only allow VMs in zones us-central1-a and us-central1-c. All locations end up in different regions would cause errors. For example, [\"regions/us-central1\", \"zones/us-central1-a\", \"zones/us-central1-b\", \"zones/us-west1-a\"] contains 2 regions \"us-central1\" and \"us-west1\". An error is expected in this case.

        :return: The allowed_locations of this LocationPolicy.
        :rtype: List[str]
        """
        return self._allowed_locations

    @allowed_locations.setter
    def allowed_locations(self, allowed_locations):
        """Sets the allowed_locations of this LocationPolicy.

        A list of allowed location names represented by internal URLs. Each location can be a region or a zone. Only one region or multiple zones in one region is supported now. For example, [\"regions/us-central1\"] allow VMs in any zones in region us-central1. [\"zones/us-central1-a\", \"zones/us-central1-c\"] only allow VMs in zones us-central1-a and us-central1-c. All locations end up in different regions would cause errors. For example, [\"regions/us-central1\", \"zones/us-central1-a\", \"zones/us-central1-b\", \"zones/us-west1-a\"] contains 2 regions \"us-central1\" and \"us-west1\". An error is expected in this case.

        :param allowed_locations: The allowed_locations of this LocationPolicy.
        :type allowed_locations: List[str]
        """

        self._allowed_locations = allowed_locations
