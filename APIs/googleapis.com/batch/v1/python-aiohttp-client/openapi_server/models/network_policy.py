# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.network_interface import NetworkInterface
from openapi_server import util


class NetworkPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, network_interfaces: List[NetworkInterface]=None):
        """NetworkPolicy - a model defined in OpenAPI

        :param network_interfaces: The network_interfaces of this NetworkPolicy.
        """
        self.openapi_types = {
            'network_interfaces': List[NetworkInterface]
        }

        self.attribute_map = {
            'network_interfaces': 'networkInterfaces'
        }

        self._network_interfaces = network_interfaces

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetworkPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NetworkPolicy of this NetworkPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def network_interfaces(self):
        """Gets the network_interfaces of this NetworkPolicy.

        Network configurations.

        :return: The network_interfaces of this NetworkPolicy.
        :rtype: List[NetworkInterface]
        """
        return self._network_interfaces

    @network_interfaces.setter
    def network_interfaces(self, network_interfaces):
        """Sets the network_interfaces of this NetworkPolicy.

        Network configurations.

        :param network_interfaces: The network_interfaces of this NetworkPolicy.
        :type network_interfaces: List[NetworkInterface]
        """

        self._network_interfaces = network_interfaces
