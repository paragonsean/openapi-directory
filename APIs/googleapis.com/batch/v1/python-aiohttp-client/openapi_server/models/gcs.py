# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GCS(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, remote_path: str=None):
        """GCS - a model defined in OpenAPI

        :param remote_path: The remote_path of this GCS.
        """
        self.openapi_types = {
            'remote_path': str
        }

        self.attribute_map = {
            'remote_path': 'remotePath'
        }

        self._remote_path = remote_path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GCS':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GCS of this GCS.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def remote_path(self):
        """Gets the remote_path of this GCS.

        Remote path, either a bucket name or a subdirectory of a bucket, e.g.: bucket_name, bucket_name/subdirectory/

        :return: The remote_path of this GCS.
        :rtype: str
        """
        return self._remote_path

    @remote_path.setter
    def remote_path(self, remote_path):
        """Sets the remote_path of this GCS.

        Remote path, either a bucket name or a subdirectory of a bucket, e.g.: bucket_name, bucket_name/subdirectory/

        :param remote_path: The remote_path of this GCS.
        :type remote_path: str
        """

        self._remote_path = remote_path
