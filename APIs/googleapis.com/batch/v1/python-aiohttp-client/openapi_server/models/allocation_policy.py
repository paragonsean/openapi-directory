# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.instance_policy_or_template import InstancePolicyOrTemplate
from openapi_server.models.location_policy import LocationPolicy
from openapi_server.models.network_policy import NetworkPolicy
from openapi_server.models.placement_policy import PlacementPolicy
from openapi_server.models.service_account import ServiceAccount
from openapi_server import util


class AllocationPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instances: List[InstancePolicyOrTemplate]=None, labels: Dict[str, str]=None, location: LocationPolicy=None, network: NetworkPolicy=None, placement: PlacementPolicy=None, service_account: ServiceAccount=None, tags: List[str]=None):
        """AllocationPolicy - a model defined in OpenAPI

        :param instances: The instances of this AllocationPolicy.
        :param labels: The labels of this AllocationPolicy.
        :param location: The location of this AllocationPolicy.
        :param network: The network of this AllocationPolicy.
        :param placement: The placement of this AllocationPolicy.
        :param service_account: The service_account of this AllocationPolicy.
        :param tags: The tags of this AllocationPolicy.
        """
        self.openapi_types = {
            'instances': List[InstancePolicyOrTemplate],
            'labels': Dict[str, str],
            'location': LocationPolicy,
            'network': NetworkPolicy,
            'placement': PlacementPolicy,
            'service_account': ServiceAccount,
            'tags': List[str]
        }

        self.attribute_map = {
            'instances': 'instances',
            'labels': 'labels',
            'location': 'location',
            'network': 'network',
            'placement': 'placement',
            'service_account': 'serviceAccount',
            'tags': 'tags'
        }

        self._instances = instances
        self._labels = labels
        self._location = location
        self._network = network
        self._placement = placement
        self._service_account = service_account
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AllocationPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AllocationPolicy of this AllocationPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instances(self):
        """Gets the instances of this AllocationPolicy.

        Describe instances that can be created by this AllocationPolicy. Only instances[0] is supported now.

        :return: The instances of this AllocationPolicy.
        :rtype: List[InstancePolicyOrTemplate]
        """
        return self._instances

    @instances.setter
    def instances(self, instances):
        """Sets the instances of this AllocationPolicy.

        Describe instances that can be created by this AllocationPolicy. Only instances[0] is supported now.

        :param instances: The instances of this AllocationPolicy.
        :type instances: List[InstancePolicyOrTemplate]
        """

        self._instances = instances

    @property
    def labels(self):
        """Gets the labels of this AllocationPolicy.

        Labels applied to all VM instances and other resources created by AllocationPolicy. Labels could be user provided or system generated. You can assign up to 64 labels. [Google Compute Engine label restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) apply. Label names that start with \"goog-\" or \"google-\" are reserved.

        :return: The labels of this AllocationPolicy.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this AllocationPolicy.

        Labels applied to all VM instances and other resources created by AllocationPolicy. Labels could be user provided or system generated. You can assign up to 64 labels. [Google Compute Engine label restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) apply. Label names that start with \"goog-\" or \"google-\" are reserved.

        :param labels: The labels of this AllocationPolicy.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def location(self):
        """Gets the location of this AllocationPolicy.


        :return: The location of this AllocationPolicy.
        :rtype: LocationPolicy
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this AllocationPolicy.


        :param location: The location of this AllocationPolicy.
        :type location: LocationPolicy
        """

        self._location = location

    @property
    def network(self):
        """Gets the network of this AllocationPolicy.


        :return: The network of this AllocationPolicy.
        :rtype: NetworkPolicy
        """
        return self._network

    @network.setter
    def network(self, network):
        """Sets the network of this AllocationPolicy.


        :param network: The network of this AllocationPolicy.
        :type network: NetworkPolicy
        """

        self._network = network

    @property
    def placement(self):
        """Gets the placement of this AllocationPolicy.


        :return: The placement of this AllocationPolicy.
        :rtype: PlacementPolicy
        """
        return self._placement

    @placement.setter
    def placement(self, placement):
        """Sets the placement of this AllocationPolicy.


        :param placement: The placement of this AllocationPolicy.
        :type placement: PlacementPolicy
        """

        self._placement = placement

    @property
    def service_account(self):
        """Gets the service_account of this AllocationPolicy.


        :return: The service_account of this AllocationPolicy.
        :rtype: ServiceAccount
        """
        return self._service_account

    @service_account.setter
    def service_account(self, service_account):
        """Sets the service_account of this AllocationPolicy.


        :param service_account: The service_account of this AllocationPolicy.
        :type service_account: ServiceAccount
        """

        self._service_account = service_account

    @property
    def tags(self):
        """Gets the tags of this AllocationPolicy.

        Optional. Tags applied to the VM instances. The tags identify valid sources or targets for network firewalls. Each tag must be 1-63 characters long, and comply with [RFC1035](https://www.ietf.org/rfc/rfc1035.txt).

        :return: The tags of this AllocationPolicy.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this AllocationPolicy.

        Optional. Tags applied to the VM instances. The tags identify valid sources or targets for network firewalls. Each tag must be 1-63 characters long, and comply with [RFC1035](https://www.ietf.org/rfc/rfc1035.txt).

        :param tags: The tags of this AllocationPolicy.
        :type tags: List[str]
        """

        self._tags = tags
