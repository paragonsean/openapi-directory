# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.instance_policy import InstancePolicy
from openapi_server import util


class InstancePolicyOrTemplate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, install_gpu_drivers: bool=None, instance_template: str=None, policy: InstancePolicy=None):
        """InstancePolicyOrTemplate - a model defined in OpenAPI

        :param install_gpu_drivers: The install_gpu_drivers of this InstancePolicyOrTemplate.
        :param instance_template: The instance_template of this InstancePolicyOrTemplate.
        :param policy: The policy of this InstancePolicyOrTemplate.
        """
        self.openapi_types = {
            'install_gpu_drivers': bool,
            'instance_template': str,
            'policy': InstancePolicy
        }

        self.attribute_map = {
            'install_gpu_drivers': 'installGpuDrivers',
            'instance_template': 'instanceTemplate',
            'policy': 'policy'
        }

        self._install_gpu_drivers = install_gpu_drivers
        self._instance_template = instance_template
        self._policy = policy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstancePolicyOrTemplate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstancePolicyOrTemplate of this InstancePolicyOrTemplate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def install_gpu_drivers(self):
        """Gets the install_gpu_drivers of this InstancePolicyOrTemplate.

        Set this field true if users want Batch to help fetch drivers from a third party location and install them for GPUs specified in policy.accelerators or instance_template on their behalf. Default is false. For Container-Optimized Image cases, Batch will install the accelerator driver following milestones of https://cloud.google.com/container-optimized-os/docs/release-notes. For non Container-Optimized Image cases, following https://github.com/GoogleCloudPlatform/compute-gpu-installation/blob/main/linux/install_gpu_driver.py.

        :return: The install_gpu_drivers of this InstancePolicyOrTemplate.
        :rtype: bool
        """
        return self._install_gpu_drivers

    @install_gpu_drivers.setter
    def install_gpu_drivers(self, install_gpu_drivers):
        """Sets the install_gpu_drivers of this InstancePolicyOrTemplate.

        Set this field true if users want Batch to help fetch drivers from a third party location and install them for GPUs specified in policy.accelerators or instance_template on their behalf. Default is false. For Container-Optimized Image cases, Batch will install the accelerator driver following milestones of https://cloud.google.com/container-optimized-os/docs/release-notes. For non Container-Optimized Image cases, following https://github.com/GoogleCloudPlatform/compute-gpu-installation/blob/main/linux/install_gpu_driver.py.

        :param install_gpu_drivers: The install_gpu_drivers of this InstancePolicyOrTemplate.
        :type install_gpu_drivers: bool
        """

        self._install_gpu_drivers = install_gpu_drivers

    @property
    def instance_template(self):
        """Gets the instance_template of this InstancePolicyOrTemplate.

        Name of an instance template used to create VMs. Named the field as 'instance_template' instead of 'template' to avoid c++ keyword conflict.

        :return: The instance_template of this InstancePolicyOrTemplate.
        :rtype: str
        """
        return self._instance_template

    @instance_template.setter
    def instance_template(self, instance_template):
        """Sets the instance_template of this InstancePolicyOrTemplate.

        Name of an instance template used to create VMs. Named the field as 'instance_template' instead of 'template' to avoid c++ keyword conflict.

        :param instance_template: The instance_template of this InstancePolicyOrTemplate.
        :type instance_template: str
        """

        self._instance_template = instance_template

    @property
    def policy(self):
        """Gets the policy of this InstancePolicyOrTemplate.


        :return: The policy of this InstancePolicyOrTemplate.
        :rtype: InstancePolicy
        """
        return self._policy

    @policy.setter
    def policy(self, policy):
        """Sets the policy of this InstancePolicyOrTemplate.


        :param policy: The policy of this InstancePolicyOrTemplate.
        :type policy: InstancePolicy
        """

        self._policy = policy
