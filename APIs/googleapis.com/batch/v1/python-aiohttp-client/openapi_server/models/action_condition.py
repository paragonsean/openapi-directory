# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ActionCondition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exit_codes: List[int]=None):
        """ActionCondition - a model defined in OpenAPI

        :param exit_codes: The exit_codes of this ActionCondition.
        """
        self.openapi_types = {
            'exit_codes': List[int]
        }

        self.attribute_map = {
            'exit_codes': 'exitCodes'
        }

        self._exit_codes = exit_codes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActionCondition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActionCondition of this ActionCondition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exit_codes(self):
        """Gets the exit_codes of this ActionCondition.

        Exit codes of a task execution. If there are more than 1 exit codes, when task executes with any of the exit code in the list, the condition is met and the action will be executed.

        :return: The exit_codes of this ActionCondition.
        :rtype: List[int]
        """
        return self._exit_codes

    @exit_codes.setter
    def exit_codes(self, exit_codes):
        """Sets the exit_codes of this ActionCondition.

        Exit codes of a task execution. If there are more than 1 exit codes, when task executes with any of the exit code in the list, the condition is met and the action will be executed.

        :param exit_codes: The exit_codes of this ActionCondition.
        :type exit_codes: List[int]
        """

        self._exit_codes = exit_codes
