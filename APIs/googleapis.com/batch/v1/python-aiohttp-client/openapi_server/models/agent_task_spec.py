# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.agent_environment import AgentEnvironment
from openapi_server.models.agent_task_runnable import AgentTaskRunnable
from openapi_server.models.agent_task_user_account import AgentTaskUserAccount
from openapi_server import util


class AgentTaskSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, environment: AgentEnvironment=None, max_run_duration: str=None, runnables: List[AgentTaskRunnable]=None, user_account: AgentTaskUserAccount=None):
        """AgentTaskSpec - a model defined in OpenAPI

        :param environment: The environment of this AgentTaskSpec.
        :param max_run_duration: The max_run_duration of this AgentTaskSpec.
        :param runnables: The runnables of this AgentTaskSpec.
        :param user_account: The user_account of this AgentTaskSpec.
        """
        self.openapi_types = {
            'environment': AgentEnvironment,
            'max_run_duration': str,
            'runnables': List[AgentTaskRunnable],
            'user_account': AgentTaskUserAccount
        }

        self.attribute_map = {
            'environment': 'environment',
            'max_run_duration': 'maxRunDuration',
            'runnables': 'runnables',
            'user_account': 'userAccount'
        }

        self._environment = environment
        self._max_run_duration = max_run_duration
        self._runnables = runnables
        self._user_account = user_account

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AgentTaskSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AgentTaskSpec of this AgentTaskSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def environment(self):
        """Gets the environment of this AgentTaskSpec.


        :return: The environment of this AgentTaskSpec.
        :rtype: AgentEnvironment
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this AgentTaskSpec.


        :param environment: The environment of this AgentTaskSpec.
        :type environment: AgentEnvironment
        """

        self._environment = environment

    @property
    def max_run_duration(self):
        """Gets the max_run_duration of this AgentTaskSpec.

        Maximum duration the task should run. The task will be killed and marked as FAILED if over this limit.

        :return: The max_run_duration of this AgentTaskSpec.
        :rtype: str
        """
        return self._max_run_duration

    @max_run_duration.setter
    def max_run_duration(self, max_run_duration):
        """Sets the max_run_duration of this AgentTaskSpec.

        Maximum duration the task should run. The task will be killed and marked as FAILED if over this limit.

        :param max_run_duration: The max_run_duration of this AgentTaskSpec.
        :type max_run_duration: str
        """

        self._max_run_duration = max_run_duration

    @property
    def runnables(self):
        """Gets the runnables of this AgentTaskSpec.

        AgentTaskRunnable is runanbles that will be executed on the agent.

        :return: The runnables of this AgentTaskSpec.
        :rtype: List[AgentTaskRunnable]
        """
        return self._runnables

    @runnables.setter
    def runnables(self, runnables):
        """Sets the runnables of this AgentTaskSpec.

        AgentTaskRunnable is runanbles that will be executed on the agent.

        :param runnables: The runnables of this AgentTaskSpec.
        :type runnables: List[AgentTaskRunnable]
        """

        self._runnables = runnables

    @property
    def user_account(self):
        """Gets the user_account of this AgentTaskSpec.


        :return: The user_account of this AgentTaskSpec.
        :rtype: AgentTaskUserAccount
        """
        return self._user_account

    @user_account.setter
    def user_account(self, user_account):
        """Sets the user_account of this AgentTaskSpec.


        :param user_account: The user_account of this AgentTaskSpec.
        :type user_account: AgentTaskUserAccount
        """

        self._user_account = user_account
