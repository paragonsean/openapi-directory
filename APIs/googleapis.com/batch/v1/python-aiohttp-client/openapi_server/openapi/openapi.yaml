openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: An API to manage the running of batch resources on Google Cloud Platform.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Batch API
  version: v1
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
  - format: google
    url: https://batch.googleapis.com/$discovery/rest?version=v1
    version: v1
  x-providerName: googleapis.com
  x-serviceName: batch
externalDocs:
  url: https://cloud.google.com/batch/
servers:
- url: https://batch.googleapis.com/
tags:
- name: projects
paths:
  /v1/{name}:
    delete:
      description: "Deletes a long-running operation. This method indicates that the\
        \ client is no longer interested in the operation result. It does not cancel\
        \ the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
      operationId: batch_projects_locations_operations_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the operation resource to be deleted.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Optional. Reason for this deletion.
        explode: true
        in: query
        name: reason
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. An optional request ID to identify requests. Specify\
          \ a unique request ID so that if you must retry your request, the server\
          \ will know to ignore the request if it has already been completed. The\
          \ server will guarantee that for at least 60 minutes after the first request.\
          \ For example, consider a situation where you make an initial request and\
          \ the request times out. If you make the request again with the same request\
          \ ID, the server can check if original operation with the same request ID\
          \ was received, and if so, will ignore the second request. This prevents\
          \ clients from accidentally creating duplicate commitments. The request\
          \ ID must be a valid UUID with the exception that zero UUID is not supported\
          \ (00000000-0000-0000-0000-000000000000)."
        explode: true
        in: query
        name: requestId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: Gets the latest state of a long-running operation. Clients can
        use this method to poll the operation result at intervals as recommended by
        the API service.
      operationId: batch_projects_locations_operations_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the operation resource.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v1/{name}/locations:
    get:
      description: Lists information about the supported locations for this service.
      operationId: batch_projects_locations_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "The resource that owns the locations collection, if applicable."
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "A filter to narrow down results to a preferred subset. The filtering\
          \ language accepts strings like `\"displayName=tokyo\"`, and is documented\
          \ in more detail in [AIP-160](https://google.aip.dev/160)."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of results to return. If not set, the service\
          \ selects a default."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: A page token received from the `next_page_token` field in the
          response. Send that page token to receive the subsequent page.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v1/{name}/operations:
    get:
      description: "Lists operations that match the specified filter in the request.\
        \ If the server doesn't support this method, it returns `UNIMPLEMENTED`."
      operationId: batch_projects_locations_operations_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the operation's parent resource.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: The standard list filter.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The standard list page size.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: The standard list page token.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v1/{name}:cancel:
    post:
      description: "Starts asynchronous cancellation on a long-running operation.\
        \ The server makes a best effort to cancel the operation, but success is not\
        \ guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.\
        \ Clients can use Operations.GetOperation or other methods to check whether\
        \ the cancellation succeeded or whether the operation completed despite cancellation.\
        \ On successful cancellation, the operation is not deleted; instead, it becomes\
        \ an operation with an Operation.error value with a google.rpc.Status.code\
        \ of 1, corresponding to `Code.CANCELLED`."
      operationId: batch_projects_locations_operations_cancel
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the operation resource to be cancelled.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1/{parent}/jobs:
    get:
      description: List all Jobs for a project within a region.
      operationId: batch_projects_locations_jobs_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Parent path.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: List filter.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Sort results. Supported are \"name\", \"name desc\"\
          , \"create_time\", and \"create_time desc\"."
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Page size.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: Page token.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Create a Job.
      operationId: batch_projects_locations_jobs_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent resource name where the Job will be created.\
          \ Pattern: \"projects/{project}/locations/{location}\""
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "ID used to uniquely identify the Job within its parent scope.\
          \ This field should contain at most 63 characters and must start with lowercase\
          \ characters. Only lowercase characters, numbers and '-' are accepted. The\
          \ '-' character cannot be the first or the last one. A system generated\
          \ ID will be used if the field is not set. The job.name field in the request\
          \ will be ignored and the created resource name of the Job will be \"{parent}/jobs/{job_id}\"\
          ."
        explode: true
        in: query
        name: jobId
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. An optional request ID to identify requests. Specify\
          \ a unique request ID so that if you must retry your request, the server\
          \ will know to ignore the request if it has already been completed. The\
          \ server will guarantee that for at least 60 minutes since the first request.\
          \ For example, consider a situation where you make an initial request and\
          \ the request times out. If you make the request again with the same request\
          \ ID, the server can check if original operation with the same request ID\
          \ was received, and if so, will ignore the second request. This prevents\
          \ clients from accidentally creating duplicate commitments. The request\
          \ ID must be a valid UUID with the exception that zero UUID is not supported\
          \ (00000000-0000-0000-0000-000000000000)."
        explode: true
        in: query
        name: requestId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1/{parent}/state:report:
    post:
      description: "Report agent's state, e.g. agent status and tasks information"
      operationId: batch_projects_locations_state_report
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. Format: projects/{project}/locations/{location} {project}\
          \ should be a project number."
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportAgentStateRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportAgentStateResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1/{parent}/tasks:
    get:
      description: List Tasks associated with a job.
      operationId: batch_projects_locations_jobs_task_groups_tasks_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. Name of a TaskGroup from which Tasks are being requested.\
          \ Pattern: \"projects/{project}/locations/{location}/jobs/{job}/taskGroups/{task_group}\""
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "Task filter, null filter matches all Tasks. Filter string should\
          \ be of the format State=TaskStatus.State e.g. State=RUNNING"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Page size.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: Page token.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTasksResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    Accelerator:
      description: Accelerator describes Compute Engine accelerators to be attached
        to the VM.
      example:
        driverVersion: driverVersion
        count: count
        installGpuDrivers: true
        type: type
      properties:
        count:
          description: The number of accelerators of this type.
          format: int64
          title: count
          type: string
        driverVersion:
          description: "Optional. The NVIDIA GPU driver version that should be installed\
            \ for this type. You can define the specific driver version such as \"\
            470.103.01\", following the driver version requirements in https://cloud.google.com/compute/docs/gpus/install-drivers-gpu#minimum-driver.\
            \ Batch will install the specific accelerator driver if qualified."
          title: driverVersion
          type: string
        installGpuDrivers:
          deprecated: true
          description: "Deprecated: please use instances[0].install_gpu_drivers instead."
          title: installGpuDrivers
          type: boolean
        type:
          description: "The accelerator type. For example, \"nvidia-tesla-t4\". See\
            \ `gcloud compute accelerator-types list`."
          title: type
          type: string
      title: Accelerator
      type: object
    ActionCondition:
      description: Conditions for actions to deal with task failures.
      example:
        exitCodes:
        - 6
        - 6
      properties:
        exitCodes:
          description: "Exit codes of a task execution. If there are more than 1 exit\
            \ codes, when task executes with any of the exit code in the list, the\
            \ condition is met and the action will be executed."
          items:
            format: int32
            type: integer
          title: exitCodes
          type: array
      title: ActionCondition
      type: object
    AgentContainer:
      description: Container runnable representation on the agent side.
      example:
        imageUri: imageUri
        entrypoint: entrypoint
        options: options
        volumes:
        - volumes
        - volumes
        commands:
        - commands
        - commands
      properties:
        commands:
          description: Overrides the `CMD` specified in the container. If there is
            an ENTRYPOINT (either in the container image or with the entrypoint field
            below) then commands are appended as arguments to the ENTRYPOINT.
          items:
            type: string
          title: commands
          type: array
        entrypoint:
          description: Overrides the `ENTRYPOINT` specified in the container.
          title: entrypoint
          type: string
        imageUri:
          description: The URI to pull the container image from.
          title: imageUri
          type: string
        options:
          description: "Arbitrary additional options to include in the \"docker run\"\
            \ command when running this container, e.g. \"--network host\"."
          title: options
          type: string
        volumes:
          description: "Volumes to mount (bind mount) from the host machine files\
            \ or directories into the container, formatted to match docker run's --volume\
            \ option, e.g. /foo:/bar, or /foo:/bar:ro"
          items:
            type: string
          title: volumes
          type: array
      title: AgentContainer
      type: object
    AgentEnvironment:
      description: AgentEnvironment is the Environment representation between Agent
        and CLH communication. The environment is used in both task level and agent
        level.
      example:
        encryptedVariables:
          cipherText: cipherText
          keyName: keyName
        variables:
          key: variables
        secretVariables:
          key: secretVariables
      properties:
        encryptedVariables:
          $ref: '#/components/schemas/AgentKMSEnvMap'
        secretVariables:
          additionalProperties:
            type: string
          description: A map of environment variable names to Secret Manager secret
            names. The VM will access the named secrets to set the value of each environment
            variable.
          title: secretVariables
          type: object
        variables:
          additionalProperties:
            type: string
          description: A map of environment variable names to values.
          title: variables
          type: object
      title: AgentEnvironment
      type: object
    AgentInfo:
      description: VM Agent Info.
      example:
        jobId: jobId
        taskGroupId: taskGroupId
        state: AGENT_STATE_UNSPECIFIED
        tasks:
        - runnable: runnable
          taskId: taskId
          taskStatus:
            state: STATE_UNSPECIFIED
            statusEvents:
            - taskState: STATE_UNSPECIFIED
              eventTime: eventTime
              description: description
              taskExecution:
                exitCode: 0
              type: type
            - taskState: STATE_UNSPECIFIED
              eventTime: eventTime
              description: description
              taskExecution:
                exitCode: 0
              type: type
        - runnable: runnable
          taskId: taskId
          taskStatus:
            state: STATE_UNSPECIFIED
            statusEvents:
            - taskState: STATE_UNSPECIFIED
              eventTime: eventTime
              description: description
              taskExecution:
                exitCode: 0
              type: type
            - taskState: STATE_UNSPECIFIED
              eventTime: eventTime
              description: description
              taskExecution:
                exitCode: 0
              type: type
        reportTime: reportTime
      properties:
        jobId:
          description: Optional. The assigned Job ID
          title: jobId
          type: string
        reportTime:
          description: When the AgentInfo is generated.
          format: google-datetime
          title: reportTime
          type: string
        state:
          description: Agent state.
          enum:
          - AGENT_STATE_UNSPECIFIED
          - AGENT_STARTING
          - AGENT_RUNNING
          - AGENT_STOPPED
          title: state
          type: string
        taskGroupId:
          description: The assigned task group ID.
          title: taskGroupId
          type: string
        tasks:
          description: Task Info.
          items:
            $ref: '#/components/schemas/AgentTaskInfo'
          title: tasks
          type: array
      title: AgentInfo
      type: object
    AgentKMSEnvMap:
      description: AgentKMSEnvMap contains the encrypted key/value pair to be used
        in the environment on the Agent side.
      example:
        cipherText: cipherText
        keyName: keyName
      properties:
        cipherText:
          description: The value of the cipherText response from the `encrypt` method.
          title: cipherText
          type: string
        keyName:
          description: The name of the KMS key that will be used to decrypt the cipher
            text.
          title: keyName
          type: string
      title: AgentKMSEnvMap
      type: object
    AgentMetadata:
      description: VM Agent Metadata.
      example:
        imageVersion: imageVersion
        creator: creator
        instance: instance
        instanceId: instanceId
        creationTime: creationTime
        instancePreemptionNoticeReceived: true
        zone: zone
        version: version
        osRelease:
          key: osRelease
      properties:
        creationTime:
          deprecated: true
          description: When the VM agent started. Use agent_startup_time instead.
          format: google-datetime
          title: creationTime
          type: string
        creator:
          description: "Full name of the entity that created this vm. For MIG, this\
            \ path is: projects/{project}/regions/{region}/InstanceGroupManagers/{igm}\
            \ The value is retrieved from the vm metadata key of \"created-by\"."
          title: creator
          type: string
        imageVersion:
          description: image version for the VM that this agent is installed on.
          title: imageVersion
          type: string
        instance:
          description: GCP instance name (go/instance-name).
          title: instance
          type: string
        instanceId:
          description: GCP instance ID (go/instance-id).
          format: uint64
          title: instanceId
          type: string
        instancePreemptionNoticeReceived:
          description: If the GCP instance has received preemption notice.
          title: instancePreemptionNoticeReceived
          type: boolean
        osRelease:
          additionalProperties:
            type: string
          description: parsed contents of /etc/os-release
          title: osRelease
          type: object
        version:
          description: agent binary version running on VM
          title: version
          type: string
        zone:
          description: Agent zone.
          title: zone
          type: string
      title: AgentMetadata
      type: object
    AgentScript:
      description: Script runnable representation on the agent side.
      example:
        path: path
        text: text
      properties:
        path:
          description: "Script file path on the host VM. To specify an interpreter,\
            \ please add a `#!`(also known as [shebang line](https://en.wikipedia.org/wiki/Shebang_(Unix)))\
            \ as the first line of the file.(For example, to execute the script using\
            \ bash, `#!/bin/bash` should be the first line of the file. To execute\
            \ the script using`Python3`, `#!/usr/bin/env python3` should be the first\
            \ line of the file.) Otherwise, the file will by default be executed by\
            \ `/bin/sh`."
          title: path
          type: string
        text:
          description: "Shell script text. To specify an interpreter, please add a\
            \ `#!\\n` at the beginning of the text.(For example, to execute the script\
            \ using bash, `#!/bin/bash\\n` should be added. To execute the script\
            \ using`Python3`, `#!/usr/bin/env python3\\n` should be added.) Otherwise,\
            \ the script will by default be executed by `/bin/sh`."
          title: text
          type: string
      title: AgentScript
      type: object
    AgentTask:
      description: TODO(b/182501497) The message needs to be redefined when the Agent
        API server updates data in storage per the backend design.
      example:
        task: task
        agentTaskSpec:
          environment:
            encryptedVariables:
              cipherText: cipherText
              keyName: keyName
            variables:
              key: variables
            secretVariables:
              key: secretVariables
          userAccount:
            uid: uid
            gid: gid
          maxRunDuration: maxRunDuration
          runnables:
          - container:
              imageUri: imageUri
              entrypoint: entrypoint
              options: options
              volumes:
              - volumes
              - volumes
              commands:
              - commands
              - commands
            environment:
              encryptedVariables:
                cipherText: cipherText
                keyName: keyName
              variables:
                key: variables
              secretVariables:
                key: secretVariables
            background: true
            alwaysRun: true
            ignoreExitStatus: true
            script:
              path: path
              text: text
            timeout: timeout
          - container:
              imageUri: imageUri
              entrypoint: entrypoint
              options: options
              volumes:
              - volumes
              - volumes
              commands:
              - commands
              - commands
            environment:
              encryptedVariables:
                cipherText: cipherText
                keyName: keyName
              variables:
                key: variables
              secretVariables:
                key: secretVariables
            background: true
            alwaysRun: true
            ignoreExitStatus: true
            script:
              path: path
              text: text
            timeout: timeout
        intendedState: INTENDED_STATE_UNSPECIFIED
        reachedBarrier: reachedBarrier
        taskSource: TASK_SOURCE_UNSPECIFIED
        spec:
          environment:
            encryptedVariables:
              cipherText: cipherText
              keyName: keyName
            variables:
              key: variables
            secretVariables:
              key: secretVariables
          environments:
            key: environments
          lifecyclePolicies:
          - actionCondition:
              exitCodes:
              - 6
              - 6
            action: ACTION_UNSPECIFIED
          - actionCondition:
              exitCodes:
              - 6
              - 6
            action: ACTION_UNSPECIFIED
          volumes:
          - mountPath: mountPath
            gcs:
              remotePath: remotePath
            mountOptions:
            - mountOptions
            - mountOptions
            nfs:
              server: server
              remotePath: remotePath
            deviceName: deviceName
          - mountPath: mountPath
            gcs:
              remotePath: remotePath
            mountOptions:
            - mountOptions
            - mountOptions
            nfs:
              server: server
              remotePath: remotePath
            deviceName: deviceName
          maxRunDuration: maxRunDuration
          maxRetryCount: 1
          computeResource:
            bootDiskMib: bootDiskMib
            cpuMilli: cpuMilli
            memoryMib: memoryMib
          runnables:
          - container:
              imageUri: imageUri
              password: password
              enableImageStreaming: true
              entrypoint: entrypoint
              options: options
              volumes:
              - volumes
              - volumes
              blockExternalNetwork: true
              commands:
              - commands
              - commands
              username: username
            environment:
              encryptedVariables:
                cipherText: cipherText
                keyName: keyName
              variables:
                key: variables
              secretVariables:
                key: secretVariables
            barrier:
              name: name
            background: true
            displayName: displayName
            alwaysRun: true
            ignoreExitStatus: true
            script:
              path: path
              text: text
            timeout: timeout
            labels:
              key: labels
          - container:
              imageUri: imageUri
              password: password
              enableImageStreaming: true
              entrypoint: entrypoint
              options: options
              volumes:
              - volumes
              - volumes
              blockExternalNetwork: true
              commands:
              - commands
              - commands
              username: username
            environment:
              encryptedVariables:
                cipherText: cipherText
                keyName: keyName
              variables:
                key: variables
              secretVariables:
                key: secretVariables
            barrier:
              name: name
            background: true
            displayName: displayName
            alwaysRun: true
            ignoreExitStatus: true
            script:
              path: path
              text: text
            timeout: timeout
            labels:
              key: labels
        status:
          state: STATE_UNSPECIFIED
          statusEvents:
          - taskState: STATE_UNSPECIFIED
            eventTime: eventTime
            description: description
            taskExecution:
              exitCode: 0
            type: type
          - taskState: STATE_UNSPECIFIED
            eventTime: eventTime
            description: description
            taskExecution:
              exitCode: 0
            type: type
      properties:
        agentTaskSpec:
          $ref: '#/components/schemas/AgentTaskSpec'
        intendedState:
          description: The intended state of the task.
          enum:
          - INTENDED_STATE_UNSPECIFIED
          - ASSIGNED
          - CANCELLED
          - DELETED
          title: intendedState
          type: string
        reachedBarrier:
          description: The highest barrier reached by all tasks in the task's TaskGroup.
          format: int64
          title: reachedBarrier
          type: string
        spec:
          $ref: '#/components/schemas/TaskSpec'
        status:
          $ref: '#/components/schemas/TaskStatus'
        task:
          description: Task name.
          title: task
          type: string
        taskSource:
          description: TaskSource represents the source of the task.
          enum:
          - TASK_SOURCE_UNSPECIFIED
          - BATCH_INTERNAL
          - USER
          title: taskSource
          type: string
      title: AgentTask
      type: object
    AgentTaskInfo:
      description: Task Info
      example:
        runnable: runnable
        taskId: taskId
        taskStatus:
          state: STATE_UNSPECIFIED
          statusEvents:
          - taskState: STATE_UNSPECIFIED
            eventTime: eventTime
            description: description
            taskExecution:
              exitCode: 0
            type: type
          - taskState: STATE_UNSPECIFIED
            eventTime: eventTime
            description: description
            taskExecution:
              exitCode: 0
            type: type
      properties:
        runnable:
          description: The highest index of a runnable started by the agent for this
            task. The runnables are indexed from 1. Value 0 is undefined.
          format: int64
          title: runnable
          type: string
        taskId:
          description: ID of the Task
          title: taskId
          type: string
        taskStatus:
          $ref: '#/components/schemas/TaskStatus'
      title: AgentTaskInfo
      type: object
    AgentTaskRunnable:
      description: AgentTaskRunnable is the Runnable representation between Agent
        and CLH communication.
      example:
        container:
          imageUri: imageUri
          entrypoint: entrypoint
          options: options
          volumes:
          - volumes
          - volumes
          commands:
          - commands
          - commands
        environment:
          encryptedVariables:
            cipherText: cipherText
            keyName: keyName
          variables:
            key: variables
          secretVariables:
            key: secretVariables
        background: true
        alwaysRun: true
        ignoreExitStatus: true
        script:
          path: path
          text: text
        timeout: timeout
      properties:
        alwaysRun:
          description: "By default, after a Runnable fails, no further Runnable are\
            \ executed. This flag indicates that this Runnable must be run even if\
            \ the Task has already failed. This is useful for Runnables that copy\
            \ output files off of the VM or for debugging. The always_run flag does\
            \ not override the Task's overall max_run_duration. If the max_run_duration\
            \ has expired then no further Runnables will execute, not even always_run\
            \ Runnables."
          title: alwaysRun
          type: boolean
        background:
          description: This flag allows a Runnable to continue running in the background
            while the Task executes subsequent Runnables. This is useful to provide
            services to other Runnables (or to provide debugging support tools like
            SSH servers).
          title: background
          type: boolean
        container:
          $ref: '#/components/schemas/AgentContainer'
        environment:
          $ref: '#/components/schemas/AgentEnvironment'
        ignoreExitStatus:
          description: "Normally, a non-zero exit status causes the Task to fail.\
            \ This flag allows execution of other Runnables to continue instead."
          title: ignoreExitStatus
          type: boolean
        script:
          $ref: '#/components/schemas/AgentScript'
        timeout:
          description: Timeout for this Runnable.
          format: google-duration
          title: timeout
          type: string
      title: AgentTaskRunnable
      type: object
    AgentTaskSpec:
      description: AgentTaskSpec is the user's TaskSpec representation between Agent
        and CLH communication.
      example:
        environment:
          encryptedVariables:
            cipherText: cipherText
            keyName: keyName
          variables:
            key: variables
          secretVariables:
            key: secretVariables
        userAccount:
          uid: uid
          gid: gid
        maxRunDuration: maxRunDuration
        runnables:
        - container:
            imageUri: imageUri
            entrypoint: entrypoint
            options: options
            volumes:
            - volumes
            - volumes
            commands:
            - commands
            - commands
          environment:
            encryptedVariables:
              cipherText: cipherText
              keyName: keyName
            variables:
              key: variables
            secretVariables:
              key: secretVariables
          background: true
          alwaysRun: true
          ignoreExitStatus: true
          script:
            path: path
            text: text
          timeout: timeout
        - container:
            imageUri: imageUri
            entrypoint: entrypoint
            options: options
            volumes:
            - volumes
            - volumes
            commands:
            - commands
            - commands
          environment:
            encryptedVariables:
              cipherText: cipherText
              keyName: keyName
            variables:
              key: variables
            secretVariables:
              key: secretVariables
          background: true
          alwaysRun: true
          ignoreExitStatus: true
          script:
            path: path
            text: text
          timeout: timeout
      properties:
        environment:
          $ref: '#/components/schemas/AgentEnvironment'
        maxRunDuration:
          description: Maximum duration the task should run. The task will be killed
            and marked as FAILED if over this limit.
          format: google-duration
          title: maxRunDuration
          type: string
        runnables:
          description: AgentTaskRunnable is runanbles that will be executed on the
            agent.
          items:
            $ref: '#/components/schemas/AgentTaskRunnable'
          title: runnables
          type: array
        userAccount:
          $ref: '#/components/schemas/AgentTaskUserAccount'
      title: AgentTaskSpec
      type: object
    AgentTaskUserAccount:
      description: AgentTaskUserAccount contains the information of a POSIX account
        on the guest os which is used to execute the runnables.
      example:
        uid: uid
        gid: gid
      properties:
        gid:
          description: gid id an unique identifier of the POSIX account group corresponding
            to the user account.
          format: int64
          title: gid
          type: string
        uid:
          description: uid is an unique identifier of the POSIX account corresponding
            to the user account.
          format: int64
          title: uid
          type: string
      title: AgentTaskUserAccount
      type: object
    AgentTimingInfo:
      description: VM timing information
      example:
        agentStartupTime: agentStartupTime
        bootTime: bootTime
        scriptStartupTime: scriptStartupTime
      properties:
        agentStartupTime:
          description: Agent startup time
          format: google-datetime
          title: agentStartupTime
          type: string
        bootTime:
          description: Boot timestamp of the VM OS
          format: google-datetime
          title: bootTime
          type: string
        scriptStartupTime:
          description: Startup time of the Batch VM script.
          format: google-datetime
          title: scriptStartupTime
          type: string
      title: AgentTimingInfo
      type: object
    AllocationPolicy:
      description: "A Job's resource allocation policy describes when, where, and\
        \ how compute resources should be allocated for the Job."
      example:
        instances:
        - instanceTemplate: instanceTemplate
          installGpuDrivers: true
          policy:
            disks:
            - existingDisk: existingDisk
              newDisk:
                image: image
                sizeGb: sizeGb
                type: type
                diskInterface: diskInterface
                snapshot: snapshot
              deviceName: deviceName
            - existingDisk: existingDisk
              newDisk:
                image: image
                sizeGb: sizeGb
                type: type
                diskInterface: diskInterface
                snapshot: snapshot
              deviceName: deviceName
            minCpuPlatform: minCpuPlatform
            provisioningModel: PROVISIONING_MODEL_UNSPECIFIED
            accelerators:
            - driverVersion: driverVersion
              count: count
              installGpuDrivers: true
              type: type
            - driverVersion: driverVersion
              count: count
              installGpuDrivers: true
              type: type
            reservation: reservation
            bootDisk:
              image: image
              sizeGb: sizeGb
              type: type
              diskInterface: diskInterface
              snapshot: snapshot
            machineType: machineType
        - instanceTemplate: instanceTemplate
          installGpuDrivers: true
          policy:
            disks:
            - existingDisk: existingDisk
              newDisk:
                image: image
                sizeGb: sizeGb
                type: type
                diskInterface: diskInterface
                snapshot: snapshot
              deviceName: deviceName
            - existingDisk: existingDisk
              newDisk:
                image: image
                sizeGb: sizeGb
                type: type
                diskInterface: diskInterface
                snapshot: snapshot
              deviceName: deviceName
            minCpuPlatform: minCpuPlatform
            provisioningModel: PROVISIONING_MODEL_UNSPECIFIED
            accelerators:
            - driverVersion: driverVersion
              count: count
              installGpuDrivers: true
              type: type
            - driverVersion: driverVersion
              count: count
              installGpuDrivers: true
              type: type
            reservation: reservation
            bootDisk:
              image: image
              sizeGb: sizeGb
              type: type
              diskInterface: diskInterface
              snapshot: snapshot
            machineType: machineType
        location:
          allowedLocations:
          - allowedLocations
          - allowedLocations
        serviceAccount:
          scopes:
          - scopes
          - scopes
          email: email
        placement:
          collocation: collocation
          maxDistance: maxDistance
        labels:
          key: labels
        network:
          networkInterfaces:
          - noExternalIpAddress: true
            subnetwork: subnetwork
            network: network
          - noExternalIpAddress: true
            subnetwork: subnetwork
            network: network
        tags:
        - tags
        - tags
      properties:
        instances:
          description: "Describe instances that can be created by this AllocationPolicy.\
            \ Only instances[0] is supported now."
          items:
            $ref: '#/components/schemas/InstancePolicyOrTemplate'
          title: instances
          type: array
        labels:
          additionalProperties:
            type: string
          description: "Labels applied to all VM instances and other resources created\
            \ by AllocationPolicy. Labels could be user provided or system generated.\
            \ You can assign up to 64 labels. [Google Compute Engine label restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions)\
            \ apply. Label names that start with \"goog-\" or \"google-\" are reserved."
          title: labels
          type: object
        location:
          $ref: '#/components/schemas/LocationPolicy'
        network:
          $ref: '#/components/schemas/NetworkPolicy'
        placement:
          $ref: '#/components/schemas/PlacementPolicy'
        serviceAccount:
          $ref: '#/components/schemas/ServiceAccount'
        tags:
          description: "Optional. Tags applied to the VM instances. The tags identify\
            \ valid sources or targets for network firewalls. Each tag must be 1-63\
            \ characters long, and comply with [RFC1035](https://www.ietf.org/rfc/rfc1035.txt)."
          items:
            type: string
          title: tags
          type: array
      title: AllocationPolicy
      type: object
    AttachedDisk:
      description: A new or an existing persistent disk (PD) or a local ssd attached
        to a VM instance.
      example:
        existingDisk: existingDisk
        newDisk:
          image: image
          sizeGb: sizeGb
          type: type
          diskInterface: diskInterface
          snapshot: snapshot
        deviceName: deviceName
      properties:
        deviceName:
          description: "Device name that the guest operating system will see. It is\
            \ used by Runnable.volumes field to mount disks. So please specify the\
            \ device_name if you want Batch to help mount the disk, and it should\
            \ match the device_name field in volumes."
          title: deviceName
          type: string
        existingDisk:
          description: Name of an existing PD.
          title: existingDisk
          type: string
        newDisk:
          $ref: '#/components/schemas/Disk'
      title: AttachedDisk
      type: object
    Barrier:
      description: Barrier runnable blocks until all tasks in a taskgroup reach it.
      example:
        name: name
      properties:
        name:
          description: "Barriers are identified by their index in runnable list. Names\
            \ are not required, but if present should be an identifier."
          title: name
          type: string
      title: Barrier
      type: object
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    CloudLoggingOption:
      description: '`CloudLoggingOption` contains additional settings for Cloud Logging
        logs generated by Batch job.'
      example:
        useGenericTaskMonitoredResource: true
      properties:
        useGenericTaskMonitoredResource:
          description: "Optional. Set this flag to true to change the [monitored resource\
            \ type](https://cloud.google.com/monitoring/api/resources) for Cloud Logging\
            \ logs generated by this Batch job from the [`batch.googleapis.com/Job`](https://cloud.google.com/monitoring/api/resources#tag_batch.googleapis.com/Job)\
            \ type to the formerly used [`generic_task`](https://cloud.google.com/monitoring/api/resources#tag_generic_task)\
            \ type."
          title: useGenericTaskMonitoredResource
          type: boolean
      title: CloudLoggingOption
      type: object
    ComputeResource:
      description: "Compute resource requirements. ComputeResource defines the amount\
        \ of resources required for each task. Make sure your tasks have enough resources\
        \ to successfully run. If you also define the types of resources for a job\
        \ to use with the [InstancePolicyOrTemplate](https://cloud.google.com/batch/docs/reference/rest/v1/projects.locations.jobs#instancepolicyortemplate)\
        \ field, make sure both fields are compatible with each other."
      example:
        bootDiskMib: bootDiskMib
        cpuMilli: cpuMilli
        memoryMib: memoryMib
      properties:
        bootDiskMib:
          description: Extra boot disk size in MiB for each task.
          format: int64
          title: bootDiskMib
          type: string
        cpuMilli:
          description: "The milliCPU count. `cpuMilli` defines the amount of CPU resources\
            \ per task in milliCPU units. For example, `1000` corresponds to 1 vCPU\
            \ per task. If undefined, the default value is `2000`. If you also define\
            \ the VM's machine type using the `machineType` in [InstancePolicy](https://cloud.google.com/batch/docs/reference/rest/v1/projects.locations.jobs#instancepolicy)\
            \ field or inside the `instanceTemplate` in the [InstancePolicyOrTemplate](https://cloud.google.com/batch/docs/reference/rest/v1/projects.locations.jobs#instancepolicyortemplate)\
            \ field, make sure the CPU resources for both fields are compatible with\
            \ each other and with how many tasks you want to allow to run on the same\
            \ VM at the same time. For example, if you specify the `n2-standard-2`\
            \ machine type, which has 2 vCPUs each, you are recommended to set `cpuMilli`\
            \ no more than `2000`, or you are recommended to run two tasks on the\
            \ same VM if you set `cpuMilli` to `1000` or less."
          format: int64
          title: cpuMilli
          type: string
        memoryMib:
          description: "Memory in MiB. `memoryMib` defines the amount of memory per\
            \ task in MiB units. If undefined, the default value is `2000`. If you\
            \ also define the VM's machine type using the `machineType` in [InstancePolicy](https://cloud.google.com/batch/docs/reference/rest/v1/projects.locations.jobs#instancepolicy)\
            \ field or inside the `instanceTemplate` in the [InstancePolicyOrTemplate](https://cloud.google.com/batch/docs/reference/rest/v1/projects.locations.jobs#instancepolicyortemplate)\
            \ field, make sure the memory resources for both fields are compatible\
            \ with each other and with how many tasks you want to allow to run on\
            \ the same VM at the same time. For example, if you specify the `n2-standard-2`\
            \ machine type, which has 8 GiB each, you are recommended to set `memoryMib`\
            \ to no more than `8192`, or you are recommended to run two tasks on the\
            \ same VM if you set `memoryMib` to `4096` or less."
          format: int64
          title: memoryMib
          type: string
      title: ComputeResource
      type: object
    Container:
      description: Container runnable.
      example:
        imageUri: imageUri
        password: password
        enableImageStreaming: true
        entrypoint: entrypoint
        options: options
        volumes:
        - volumes
        - volumes
        blockExternalNetwork: true
        commands:
        - commands
        - commands
        username: username
      properties:
        blockExternalNetwork:
          description: "If set to true, external network access to and from container\
            \ will be blocked, containers that are with block_external_network as\
            \ true can still communicate with each other, network cannot be specified\
            \ in the `container.options` field."
          title: blockExternalNetwork
          type: boolean
        commands:
          description: Overrides the `CMD` specified in the container. If there is
            an ENTRYPOINT (either in the container image or with the entrypoint field
            below) then commands are appended as arguments to the ENTRYPOINT.
          items:
            type: string
          title: commands
          type: array
        enableImageStreaming:
          description: "Optional. If set to true, this container runnable uses Image\
            \ streaming. Use Image streaming to allow the runnable to initialize without\
            \ waiting for the entire container image to download, which can significantly\
            \ reduce startup time for large container images. When `enableImageStreaming`\
            \ is set to true, the container runtime is [containerd](https://containerd.io/)\
            \ instead of Docker. Additionally, this container runnable only supports\
            \ the following `container` subfields: `imageUri`, `commands[]`, `entrypoint`,\
            \ and `volumes[]`; any other `container` subfields are ignored. For more\
            \ information about the requirements and limitations for using Image streaming\
            \ with Batch, see the [`image-streaming` sample on GitHub](https://github.com/GoogleCloudPlatform/batch-samples/tree/main/api-samples/image-streaming)."
          title: enableImageStreaming
          type: boolean
        entrypoint:
          description: Overrides the `ENTRYPOINT` specified in the container.
          title: entrypoint
          type: string
        imageUri:
          description: The URI to pull the container image from.
          title: imageUri
          type: string
        options:
          description: "Arbitrary additional options to include in the \"docker run\"\
            \ command when running this container, e.g. \"--network host\"."
          title: options
          type: string
        password:
          description: "Required if the container image is from a private Docker registry.\
            \ The password to login to the Docker registry that contains the image.\
            \ For security, it is strongly recommended to specify an encrypted password\
            \ by using a Secret Manager secret: `projects/*/secrets/*/versions/*`.\
            \ Warning: If you specify the password using plain text, you risk the\
            \ password being exposed to any users who can view the job or its logs.\
            \ To avoid this risk, specify a secret that contains the password instead.\
            \ Learn more about [Secret Manager](https://cloud.google.com/secret-manager/docs/)\
            \ and [using Secret Manager with Batch](https://cloud.google.com/batch/docs/create-run-job-secret-manager)."
          title: password
          type: string
        username:
          description: "Required if the container image is from a private Docker registry.\
            \ The username to login to the Docker registry that contains the image.\
            \ You can either specify the username directly by using plain text or\
            \ specify an encrypted username by using a Secret Manager secret: `projects/*/secrets/*/versions/*`.\
            \ However, using a secret is recommended for enhanced security. Caution:\
            \ If you specify the username using plain text, you risk the username\
            \ being exposed to any users who can view the job or its logs. To avoid\
            \ this risk, specify a secret that contains the username instead. Learn\
            \ more about [Secret Manager](https://cloud.google.com/secret-manager/docs/)\
            \ and [using Secret Manager with Batch](https://cloud.google.com/batch/docs/create-run-job-secret-manager)."
          title: username
          type: string
        volumes:
          description: "Volumes to mount (bind mount) from the host machine files\
            \ or directories into the container, formatted to match docker run's --volume\
            \ option, e.g. /foo:/bar, or /foo:/bar:ro If the `TaskSpec.Volumes` field\
            \ is specified but this field is not, Batch will mount each volume from\
            \ the host machine to the container with the same mount path by default.\
            \ In this case, the default mount option for containers will be read-only\
            \ (ro) for existing persistent disks and read-write (rw) for other volume\
            \ types, regardless of the original mount options specified in `TaskSpec.Volumes`.\
            \ If you need different mount settings, you can explicitly configure them\
            \ in this field."
          items:
            type: string
          title: volumes
          type: array
      title: Container
      type: object
    Disk:
      description: A new persistent disk or a local ssd. A VM can only have one local
        SSD setting but multiple local SSD partitions. See https://cloud.google.com/compute/docs/disks#pdspecs
        and https://cloud.google.com/compute/docs/disks#localssds.
      example:
        image: image
        sizeGb: sizeGb
        type: type
        diskInterface: diskInterface
        snapshot: snapshot
      properties:
        diskInterface:
          description: "Local SSDs are available through both \"SCSI\" and \"NVMe\"\
            \ interfaces. If not indicated, \"NVMe\" will be the default one for local\
            \ ssds. This field is ignored for persistent disks as the interface is\
            \ chosen automatically. See https://cloud.google.com/compute/docs/disks/persistent-disks#choose_an_interface."
          title: diskInterface
          type: string
        image:
          description: "URL for a VM image to use as the data source for this disk.\
            \ For example, the following are all valid URLs: * Specify the image by\
            \ its family name: projects/{project}/global/images/family/{image_family}\
            \ * Specify the image version: projects/{project}/global/images/{image_version}\
            \ You can also use Batch customized image in short names. The following\
            \ image values are supported for a boot disk: * `batch-debian`: use Batch\
            \ Debian images. * `batch-centos`: use Batch CentOS images. * `batch-cos`:\
            \ use Batch Container-Optimized images. * `batch-hpc-centos`: use Batch\
            \ HPC CentOS images. * `batch-hpc-rocky`: use Batch HPC Rocky Linux images."
          title: image
          type: string
        sizeGb:
          description: "Disk size in GB. **Non-Boot Disk**: If the `type` specifies\
            \ a persistent disk, this field is ignored if `data_source` is set as\
            \ `image` or `snapshot`. If the `type` specifies a local SSD, this field\
            \ should be a multiple of 375 GB, otherwise, the final size will be the\
            \ next greater multiple of 375 GB. **Boot Disk**: Batch will calculate\
            \ the boot disk size based on source image and task requirements if you\
            \ do not speicify the size. If both this field and the `boot_disk_mib`\
            \ field in task spec's `compute_resource` are defined, Batch will only\
            \ honor this field. Also, this field should be no smaller than the source\
            \ disk's size when the `data_source` is set as `snapshot` or `image`.\
            \ For example, if you set an image as the `data_source` field and the\
            \ image's default disk size 30 GB, you can only use this field to make\
            \ the disk larger or equal to 30 GB."
          format: int64
          title: sizeGb
          type: string
        snapshot:
          description: Name of a snapshot used as the data source. Snapshot is not
            supported as boot disk now.
          title: snapshot
          type: string
        type:
          description: "Disk type as shown in `gcloud compute disk-types list`. For\
            \ example, local SSD uses type \"local-ssd\". Persistent disks and boot\
            \ disks use \"pd-balanced\", \"pd-extreme\", \"pd-ssd\" or \"pd-standard\"\
            ."
          title: type
          type: string
      title: Disk
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining\
        \ duplicated empty messages in your APIs. A typical example is to use it as\
        \ the request or the response type of an API method. For instance: service\
        \ Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    Environment:
      description: An Environment describes a collection of environment variables
        to set when executing Tasks.
      example:
        encryptedVariables:
          cipherText: cipherText
          keyName: keyName
        variables:
          key: variables
        secretVariables:
          key: secretVariables
      properties:
        encryptedVariables:
          $ref: '#/components/schemas/KMSEnvMap'
        secretVariables:
          additionalProperties:
            type: string
          description: A map of environment variable names to Secret Manager secret
            names. The VM will access the named secrets to set the value of each environment
            variable.
          title: secretVariables
          type: object
        variables:
          additionalProperties:
            type: string
          description: A map of environment variable names to values.
          title: variables
          type: object
      title: Environment
      type: object
    GCS:
      description: Represents a Google Cloud Storage volume.
      example:
        remotePath: remotePath
      properties:
        remotePath:
          description: "Remote path, either a bucket name or a subdirectory of a bucket,\
            \ e.g.: bucket_name, bucket_name/subdirectory/"
          title: remotePath
          type: string
      title: GCS
      type: object
    InstancePolicy:
      description: InstancePolicy describes an instance type and resources attached
        to each VM created by this InstancePolicy.
      example:
        disks:
        - existingDisk: existingDisk
          newDisk:
            image: image
            sizeGb: sizeGb
            type: type
            diskInterface: diskInterface
            snapshot: snapshot
          deviceName: deviceName
        - existingDisk: existingDisk
          newDisk:
            image: image
            sizeGb: sizeGb
            type: type
            diskInterface: diskInterface
            snapshot: snapshot
          deviceName: deviceName
        minCpuPlatform: minCpuPlatform
        provisioningModel: PROVISIONING_MODEL_UNSPECIFIED
        accelerators:
        - driverVersion: driverVersion
          count: count
          installGpuDrivers: true
          type: type
        - driverVersion: driverVersion
          count: count
          installGpuDrivers: true
          type: type
        reservation: reservation
        bootDisk:
          image: image
          sizeGb: sizeGb
          type: type
          diskInterface: diskInterface
          snapshot: snapshot
        machineType: machineType
      properties:
        accelerators:
          description: The accelerators attached to each VM instance.
          items:
            $ref: '#/components/schemas/Accelerator'
          title: accelerators
          type: array
        bootDisk:
          $ref: '#/components/schemas/Disk'
        disks:
          description: Non-boot disks to be attached for each VM created by this InstancePolicy.
            New disks will be deleted when the VM is deleted. A non-boot disk is a
            disk that can be of a device with a file system or a raw storage drive
            that is not ready for data storage and accessing.
          items:
            $ref: '#/components/schemas/AttachedDisk'
          title: disks
          type: array
        machineType:
          description: The Compute Engine machine type.
          title: machineType
          type: string
        minCpuPlatform:
          description: The minimum CPU platform. See https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform.
          title: minCpuPlatform
          type: string
        provisioningModel:
          description: The provisioning model.
          enum:
          - PROVISIONING_MODEL_UNSPECIFIED
          - STANDARD
          - SPOT
          - PREEMPTIBLE
          title: provisioningModel
          type: string
        reservation:
          description: "Optional. If specified, VMs will consume only the specified\
            \ reservation. If not specified (default), VMs will consume any applicable\
            \ reservation."
          title: reservation
          type: string
      title: InstancePolicy
      type: object
    InstancePolicyOrTemplate:
      description: "InstancePolicyOrTemplate lets you define the type of resources\
        \ to use for this job either with an InstancePolicy or an instance template.\
        \ If undefined, Batch picks the type of VM to use and doesn't include optional\
        \ VM resources such as GPUs and extra disks."
      example:
        instanceTemplate: instanceTemplate
        installGpuDrivers: true
        policy:
          disks:
          - existingDisk: existingDisk
            newDisk:
              image: image
              sizeGb: sizeGb
              type: type
              diskInterface: diskInterface
              snapshot: snapshot
            deviceName: deviceName
          - existingDisk: existingDisk
            newDisk:
              image: image
              sizeGb: sizeGb
              type: type
              diskInterface: diskInterface
              snapshot: snapshot
            deviceName: deviceName
          minCpuPlatform: minCpuPlatform
          provisioningModel: PROVISIONING_MODEL_UNSPECIFIED
          accelerators:
          - driverVersion: driverVersion
            count: count
            installGpuDrivers: true
            type: type
          - driverVersion: driverVersion
            count: count
            installGpuDrivers: true
            type: type
          reservation: reservation
          bootDisk:
            image: image
            sizeGb: sizeGb
            type: type
            diskInterface: diskInterface
            snapshot: snapshot
          machineType: machineType
      properties:
        installGpuDrivers:
          description: "Set this field true if users want Batch to help fetch drivers\
            \ from a third party location and install them for GPUs specified in policy.accelerators\
            \ or instance_template on their behalf. Default is false. For Container-Optimized\
            \ Image cases, Batch will install the accelerator driver following milestones\
            \ of https://cloud.google.com/container-optimized-os/docs/release-notes.\
            \ For non Container-Optimized Image cases, following https://github.com/GoogleCloudPlatform/compute-gpu-installation/blob/main/linux/install_gpu_driver.py."
          title: installGpuDrivers
          type: boolean
        instanceTemplate:
          description: Name of an instance template used to create VMs. Named the
            field as 'instance_template' instead of 'template' to avoid c++ keyword
            conflict.
          title: instanceTemplate
          type: string
        policy:
          $ref: '#/components/schemas/InstancePolicy'
      title: InstancePolicyOrTemplate
      type: object
    InstanceStatus:
      description: VM instance status.
      example:
        provisioningModel: PROVISIONING_MODEL_UNSPECIFIED
        taskPack: taskPack
        bootDisk:
          image: image
          sizeGb: sizeGb
          type: type
          diskInterface: diskInterface
          snapshot: snapshot
        machineType: machineType
      properties:
        bootDisk:
          $ref: '#/components/schemas/Disk'
        machineType:
          description: The Compute Engine machine type.
          title: machineType
          type: string
        provisioningModel:
          description: The VM instance provisioning model.
          enum:
          - PROVISIONING_MODEL_UNSPECIFIED
          - STANDARD
          - SPOT
          - PREEMPTIBLE
          title: provisioningModel
          type: string
        taskPack:
          description: The max number of tasks can be assigned to this instance type.
          format: int64
          title: taskPack
          type: string
      title: InstanceStatus
      type: object
    Job:
      description: The Cloud Batch Job description.
      example:
        logsPolicy:
          cloudLoggingOption:
            useGenericTaskMonitoredResource: true
          logsPath: logsPath
          destination: DESTINATION_UNSPECIFIED
        uid: uid
        taskGroups:
        - requireHostsFile: true
          taskCount: taskCount
          taskCountPerNode: taskCountPerNode
          taskEnvironments:
          - encryptedVariables:
              cipherText: cipherText
              keyName: keyName
            variables:
              key: variables
            secretVariables:
              key: secretVariables
          - encryptedVariables:
              cipherText: cipherText
              keyName: keyName
            variables:
              key: variables
            secretVariables:
              key: secretVariables
          parallelism: parallelism
          name: name
          taskSpec:
            environment:
              encryptedVariables:
                cipherText: cipherText
                keyName: keyName
              variables:
                key: variables
              secretVariables:
                key: secretVariables
            environments:
              key: environments
            lifecyclePolicies:
            - actionCondition:
                exitCodes:
                - 6
                - 6
              action: ACTION_UNSPECIFIED
            - actionCondition:
                exitCodes:
                - 6
                - 6
              action: ACTION_UNSPECIFIED
            volumes:
            - mountPath: mountPath
              gcs:
                remotePath: remotePath
              mountOptions:
              - mountOptions
              - mountOptions
              nfs:
                server: server
                remotePath: remotePath
              deviceName: deviceName
            - mountPath: mountPath
              gcs:
                remotePath: remotePath
              mountOptions:
              - mountOptions
              - mountOptions
              nfs:
                server: server
                remotePath: remotePath
              deviceName: deviceName
            maxRunDuration: maxRunDuration
            maxRetryCount: 1
            computeResource:
              bootDiskMib: bootDiskMib
              cpuMilli: cpuMilli
              memoryMib: memoryMib
            runnables:
            - container:
                imageUri: imageUri
                password: password
                enableImageStreaming: true
                entrypoint: entrypoint
                options: options
                volumes:
                - volumes
                - volumes
                blockExternalNetwork: true
                commands:
                - commands
                - commands
                username: username
              environment:
                encryptedVariables:
                  cipherText: cipherText
                  keyName: keyName
                variables:
                  key: variables
                secretVariables:
                  key: secretVariables
              barrier:
                name: name
              background: true
              displayName: displayName
              alwaysRun: true
              ignoreExitStatus: true
              script:
                path: path
                text: text
              timeout: timeout
              labels:
                key: labels
            - container:
                imageUri: imageUri
                password: password
                enableImageStreaming: true
                entrypoint: entrypoint
                options: options
                volumes:
                - volumes
                - volumes
                blockExternalNetwork: true
                commands:
                - commands
                - commands
                username: username
              environment:
                encryptedVariables:
                  cipherText: cipherText
                  keyName: keyName
                variables:
                  key: variables
                secretVariables:
                  key: secretVariables
              barrier:
                name: name
              background: true
              displayName: displayName
              alwaysRun: true
              ignoreExitStatus: true
              script:
                path: path
                text: text
              timeout: timeout
              labels:
                key: labels
          runAsNonRoot: true
          permissiveSsh: true
          schedulingPolicy: SCHEDULING_POLICY_UNSPECIFIED
        - requireHostsFile: true
          taskCount: taskCount
          taskCountPerNode: taskCountPerNode
          taskEnvironments:
          - encryptedVariables:
              cipherText: cipherText
              keyName: keyName
            variables:
              key: variables
            secretVariables:
              key: secretVariables
          - encryptedVariables:
              cipherText: cipherText
              keyName: keyName
            variables:
              key: variables
            secretVariables:
              key: secretVariables
          parallelism: parallelism
          name: name
          taskSpec:
            environment:
              encryptedVariables:
                cipherText: cipherText
                keyName: keyName
              variables:
                key: variables
              secretVariables:
                key: secretVariables
            environments:
              key: environments
            lifecyclePolicies:
            - actionCondition:
                exitCodes:
                - 6
                - 6
              action: ACTION_UNSPECIFIED
            - actionCondition:
                exitCodes:
                - 6
                - 6
              action: ACTION_UNSPECIFIED
            volumes:
            - mountPath: mountPath
              gcs:
                remotePath: remotePath
              mountOptions:
              - mountOptions
              - mountOptions
              nfs:
                server: server
                remotePath: remotePath
              deviceName: deviceName
            - mountPath: mountPath
              gcs:
                remotePath: remotePath
              mountOptions:
              - mountOptions
              - mountOptions
              nfs:
                server: server
                remotePath: remotePath
              deviceName: deviceName
            maxRunDuration: maxRunDuration
            maxRetryCount: 1
            computeResource:
              bootDiskMib: bootDiskMib
              cpuMilli: cpuMilli
              memoryMib: memoryMib
            runnables:
            - container:
                imageUri: imageUri
                password: password
                enableImageStreaming: true
                entrypoint: entrypoint
                options: options
                volumes:
                - volumes
                - volumes
                blockExternalNetwork: true
                commands:
                - commands
                - commands
                username: username
              environment:
                encryptedVariables:
                  cipherText: cipherText
                  keyName: keyName
                variables:
                  key: variables
                secretVariables:
                  key: secretVariables
              barrier:
                name: name
              background: true
              displayName: displayName
              alwaysRun: true
              ignoreExitStatus: true
              script:
                path: path
                text: text
              timeout: timeout
              labels:
                key: labels
            - container:
                imageUri: imageUri
                password: password
                enableImageStreaming: true
                entrypoint: entrypoint
                options: options
                volumes:
                - volumes
                - volumes
                blockExternalNetwork: true
                commands:
                - commands
                - commands
                username: username
              environment:
                encryptedVariables:
                  cipherText: cipherText
                  keyName: keyName
                variables:
                  key: variables
                secretVariables:
                  key: secretVariables
              barrier:
                name: name
              background: true
              displayName: displayName
              alwaysRun: true
              ignoreExitStatus: true
              script:
                path: path
                text: text
              timeout: timeout
              labels:
                key: labels
          runAsNonRoot: true
          permissiveSsh: true
          schedulingPolicy: SCHEDULING_POLICY_UNSPECIFIED
        createTime: createTime
        name: name
        updateTime: updateTime
        priority: priority
        allocationPolicy:
          instances:
          - instanceTemplate: instanceTemplate
            installGpuDrivers: true
            policy:
              disks:
              - existingDisk: existingDisk
                newDisk:
                  image: image
                  sizeGb: sizeGb
                  type: type
                  diskInterface: diskInterface
                  snapshot: snapshot
                deviceName: deviceName
              - existingDisk: existingDisk
                newDisk:
                  image: image
                  sizeGb: sizeGb
                  type: type
                  diskInterface: diskInterface
                  snapshot: snapshot
                deviceName: deviceName
              minCpuPlatform: minCpuPlatform
              provisioningModel: PROVISIONING_MODEL_UNSPECIFIED
              accelerators:
              - driverVersion: driverVersion
                count: count
                installGpuDrivers: true
                type: type
              - driverVersion: driverVersion
                count: count
                installGpuDrivers: true
                type: type
              reservation: reservation
              bootDisk:
                image: image
                sizeGb: sizeGb
                type: type
                diskInterface: diskInterface
                snapshot: snapshot
              machineType: machineType
          - instanceTemplate: instanceTemplate
            installGpuDrivers: true
            policy:
              disks:
              - existingDisk: existingDisk
                newDisk:
                  image: image
                  sizeGb: sizeGb
                  type: type
                  diskInterface: diskInterface
                  snapshot: snapshot
                deviceName: deviceName
              - existingDisk: existingDisk
                newDisk:
                  image: image
                  sizeGb: sizeGb
                  type: type
                  diskInterface: diskInterface
                  snapshot: snapshot
                deviceName: deviceName
              minCpuPlatform: minCpuPlatform
              provisioningModel: PROVISIONING_MODEL_UNSPECIFIED
              accelerators:
              - driverVersion: driverVersion
                count: count
                installGpuDrivers: true
                type: type
              - driverVersion: driverVersion
                count: count
                installGpuDrivers: true
                type: type
              reservation: reservation
              bootDisk:
                image: image
                sizeGb: sizeGb
                type: type
                diskInterface: diskInterface
                snapshot: snapshot
              machineType: machineType
          location:
            allowedLocations:
            - allowedLocations
            - allowedLocations
          serviceAccount:
            scopes:
            - scopes
            - scopes
            email: email
          placement:
            collocation: collocation
            maxDistance: maxDistance
          labels:
            key: labels
          network:
            networkInterfaces:
            - noExternalIpAddress: true
              subnetwork: subnetwork
              network: network
            - noExternalIpAddress: true
              subnetwork: subnetwork
              network: network
          tags:
          - tags
          - tags
        notifications:
        - message:
            newTaskState: STATE_UNSPECIFIED
            type: TYPE_UNSPECIFIED
            newJobState: STATE_UNSPECIFIED
          pubsubTopic: pubsubTopic
        - message:
            newTaskState: STATE_UNSPECIFIED
            type: TYPE_UNSPECIFIED
            newJobState: STATE_UNSPECIFIED
          pubsubTopic: pubsubTopic
        labels:
          key: labels
        status:
          runDuration: runDuration
          taskGroups:
            key:
              instances:
              - provisioningModel: PROVISIONING_MODEL_UNSPECIFIED
                taskPack: taskPack
                bootDisk:
                  image: image
                  sizeGb: sizeGb
                  type: type
                  diskInterface: diskInterface
                  snapshot: snapshot
                machineType: machineType
              - provisioningModel: PROVISIONING_MODEL_UNSPECIFIED
                taskPack: taskPack
                bootDisk:
                  image: image
                  sizeGb: sizeGb
                  type: type
                  diskInterface: diskInterface
                  snapshot: snapshot
                machineType: machineType
              counts:
                key: counts
          state: STATE_UNSPECIFIED
          statusEvents:
          - taskState: STATE_UNSPECIFIED
            eventTime: eventTime
            description: description
            taskExecution:
              exitCode: 0
            type: type
          - taskState: STATE_UNSPECIFIED
            eventTime: eventTime
            description: description
            taskExecution:
              exitCode: 0
            type: type
      properties:
        allocationPolicy:
          $ref: '#/components/schemas/AllocationPolicy'
        createTime:
          description: Output only. When the Job was created.
          format: google-datetime
          readOnly: true
          title: createTime
          type: string
        labels:
          additionalProperties:
            type: string
          description: "Labels for the Job. Labels could be user provided or system\
            \ generated. For example, \"labels\": { \"department\": \"finance\", \"\
            environment\": \"test\" } You can assign up to 64 labels. [Google Compute\
            \ Engine label restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions)\
            \ apply. Label names that start with \"goog-\" or \"google-\" are reserved."
          title: labels
          type: object
        logsPolicy:
          $ref: '#/components/schemas/LogsPolicy'
        name:
          description: "Output only. Job name. For example: \"projects/123456/locations/us-central1/jobs/job01\"\
            ."
          readOnly: true
          title: name
          type: string
        notifications:
          description: Notification configurations.
          items:
            $ref: '#/components/schemas/JobNotification'
          title: notifications
          type: array
        priority:
          description: "Priority of the Job. The valid value range is [0, 100). Default\
            \ value is 0. Higher value indicates higher priority. A job with higher\
            \ priority value is more likely to run earlier if all other requirements\
            \ are satisfied."
          format: int64
          title: priority
          type: string
        status:
          $ref: '#/components/schemas/JobStatus'
        taskGroups:
          description: Required. TaskGroups in the Job. Only one TaskGroup is supported
            now.
          items:
            $ref: '#/components/schemas/TaskGroup'
          title: taskGroups
          type: array
        uid:
          description: Output only. A system generated unique ID for the Job.
          readOnly: true
          title: uid
          type: string
        updateTime:
          description: Output only. The last time the Job was updated.
          format: google-datetime
          readOnly: true
          title: updateTime
          type: string
      title: Job
      type: object
    JobNotification:
      description: Notification configurations.
      example:
        message:
          newTaskState: STATE_UNSPECIFIED
          type: TYPE_UNSPECIFIED
          newJobState: STATE_UNSPECIFIED
        pubsubTopic: pubsubTopic
      properties:
        message:
          $ref: '#/components/schemas/Message'
        pubsubTopic:
          description: "The Pub/Sub topic where notifications like the job state changes\
            \ will be published. The topic must exist in the same project as the job\
            \ and billings will be charged to this project. If not specified, no Pub/Sub\
            \ messages will be sent. Topic format: `projects/{project}/topics/{topic}`."
          title: pubsubTopic
          type: string
      title: JobNotification
      type: object
    JobStatus:
      description: Job status.
      example:
        runDuration: runDuration
        taskGroups:
          key:
            instances:
            - provisioningModel: PROVISIONING_MODEL_UNSPECIFIED
              taskPack: taskPack
              bootDisk:
                image: image
                sizeGb: sizeGb
                type: type
                diskInterface: diskInterface
                snapshot: snapshot
              machineType: machineType
            - provisioningModel: PROVISIONING_MODEL_UNSPECIFIED
              taskPack: taskPack
              bootDisk:
                image: image
                sizeGb: sizeGb
                type: type
                diskInterface: diskInterface
                snapshot: snapshot
              machineType: machineType
            counts:
              key: counts
        state: STATE_UNSPECIFIED
        statusEvents:
        - taskState: STATE_UNSPECIFIED
          eventTime: eventTime
          description: description
          taskExecution:
            exitCode: 0
          type: type
        - taskState: STATE_UNSPECIFIED
          eventTime: eventTime
          description: description
          taskExecution:
            exitCode: 0
          type: type
      properties:
        runDuration:
          description: The duration of time that the Job spent in status RUNNING.
          format: google-duration
          title: runDuration
          type: string
        state:
          description: Job state
          enum:
          - STATE_UNSPECIFIED
          - QUEUED
          - SCHEDULED
          - RUNNING
          - SUCCEEDED
          - FAILED
          - DELETION_IN_PROGRESS
          title: state
          type: string
        statusEvents:
          description: Job status events
          items:
            $ref: '#/components/schemas/StatusEvent'
          title: statusEvents
          type: array
        taskGroups:
          additionalProperties:
            $ref: '#/components/schemas/TaskGroupStatus'
          description: Aggregated task status for each TaskGroup in the Job. The map
            key is TaskGroup ID.
          title: taskGroups
          type: object
      title: JobStatus
      type: object
    KMSEnvMap:
      example:
        cipherText: cipherText
        keyName: keyName
      properties:
        cipherText:
          description: The value of the cipherText response from the `encrypt` method.
          title: cipherText
          type: string
        keyName:
          description: The name of the KMS key that will be used to decrypt the cipher
            text.
          title: keyName
          type: string
      title: KMSEnvMap
      type: object
    LifecyclePolicy:
      description: LifecyclePolicy describes how to deal with task failures based
        on different conditions.
      example:
        actionCondition:
          exitCodes:
          - 6
          - 6
        action: ACTION_UNSPECIFIED
      properties:
        action:
          description: "Action to execute when ActionCondition is true. When RETRY_TASK\
            \ is specified, we will retry failed tasks if we notice any exit code\
            \ match and fail tasks if no match is found. Likewise, when FAIL_TASK\
            \ is specified, we will fail tasks if we notice any exit code match and\
            \ retry tasks if no match is found."
          enum:
          - ACTION_UNSPECIFIED
          - RETRY_TASK
          - FAIL_TASK
          title: action
          type: string
        actionCondition:
          $ref: '#/components/schemas/ActionCondition'
      title: LifecyclePolicy
      type: object
    ListJobsResponse:
      description: ListJob Response.
      example:
        unreachable:
        - unreachable
        - unreachable
        nextPageToken: nextPageToken
        jobs:
        - logsPolicy:
            cloudLoggingOption:
              useGenericTaskMonitoredResource: true
            logsPath: logsPath
            destination: DESTINATION_UNSPECIFIED
          uid: uid
          taskGroups:
          - requireHostsFile: true
            taskCount: taskCount
            taskCountPerNode: taskCountPerNode
            taskEnvironments:
            - encryptedVariables:
                cipherText: cipherText
                keyName: keyName
              variables:
                key: variables
              secretVariables:
                key: secretVariables
            - encryptedVariables:
                cipherText: cipherText
                keyName: keyName
              variables:
                key: variables
              secretVariables:
                key: secretVariables
            parallelism: parallelism
            name: name
            taskSpec:
              environment:
                encryptedVariables:
                  cipherText: cipherText
                  keyName: keyName
                variables:
                  key: variables
                secretVariables:
                  key: secretVariables
              environments:
                key: environments
              lifecyclePolicies:
              - actionCondition:
                  exitCodes:
                  - 6
                  - 6
                action: ACTION_UNSPECIFIED
              - actionCondition:
                  exitCodes:
                  - 6
                  - 6
                action: ACTION_UNSPECIFIED
              volumes:
              - mountPath: mountPath
                gcs:
                  remotePath: remotePath
                mountOptions:
                - mountOptions
                - mountOptions
                nfs:
                  server: server
                  remotePath: remotePath
                deviceName: deviceName
              - mountPath: mountPath
                gcs:
                  remotePath: remotePath
                mountOptions:
                - mountOptions
                - mountOptions
                nfs:
                  server: server
                  remotePath: remotePath
                deviceName: deviceName
              maxRunDuration: maxRunDuration
              maxRetryCount: 1
              computeResource:
                bootDiskMib: bootDiskMib
                cpuMilli: cpuMilli
                memoryMib: memoryMib
              runnables:
              - container:
                  imageUri: imageUri
                  password: password
                  enableImageStreaming: true
                  entrypoint: entrypoint
                  options: options
                  volumes:
                  - volumes
                  - volumes
                  blockExternalNetwork: true
                  commands:
                  - commands
                  - commands
                  username: username
                environment:
                  encryptedVariables:
                    cipherText: cipherText
                    keyName: keyName
                  variables:
                    key: variables
                  secretVariables:
                    key: secretVariables
                barrier:
                  name: name
                background: true
                displayName: displayName
                alwaysRun: true
                ignoreExitStatus: true
                script:
                  path: path
                  text: text
                timeout: timeout
                labels:
                  key: labels
              - container:
                  imageUri: imageUri
                  password: password
                  enableImageStreaming: true
                  entrypoint: entrypoint
                  options: options
                  volumes:
                  - volumes
                  - volumes
                  blockExternalNetwork: true
                  commands:
                  - commands
                  - commands
                  username: username
                environment:
                  encryptedVariables:
                    cipherText: cipherText
                    keyName: keyName
                  variables:
                    key: variables
                  secretVariables:
                    key: secretVariables
                barrier:
                  name: name
                background: true
                displayName: displayName
                alwaysRun: true
                ignoreExitStatus: true
                script:
                  path: path
                  text: text
                timeout: timeout
                labels:
                  key: labels
            runAsNonRoot: true
            permissiveSsh: true
            schedulingPolicy: SCHEDULING_POLICY_UNSPECIFIED
          - requireHostsFile: true
            taskCount: taskCount
            taskCountPerNode: taskCountPerNode
            taskEnvironments:
            - encryptedVariables:
                cipherText: cipherText
                keyName: keyName
              variables:
                key: variables
              secretVariables:
                key: secretVariables
            - encryptedVariables:
                cipherText: cipherText
                keyName: keyName
              variables:
                key: variables
              secretVariables:
                key: secretVariables
            parallelism: parallelism
            name: name
            taskSpec:
              environment:
                encryptedVariables:
                  cipherText: cipherText
                  keyName: keyName
                variables:
                  key: variables
                secretVariables:
                  key: secretVariables
              environments:
                key: environments
              lifecyclePolicies:
              - actionCondition:
                  exitCodes:
                  - 6
                  - 6
                action: ACTION_UNSPECIFIED
              - actionCondition:
                  exitCodes:
                  - 6
                  - 6
                action: ACTION_UNSPECIFIED
              volumes:
              - mountPath: mountPath
                gcs:
                  remotePath: remotePath
                mountOptions:
                - mountOptions
                - mountOptions
                nfs:
                  server: server
                  remotePath: remotePath
                deviceName: deviceName
              - mountPath: mountPath
                gcs:
                  remotePath: remotePath
                mountOptions:
                - mountOptions
                - mountOptions
                nfs:
                  server: server
                  remotePath: remotePath
                deviceName: deviceName
              maxRunDuration: maxRunDuration
              maxRetryCount: 1
              computeResource:
                bootDiskMib: bootDiskMib
                cpuMilli: cpuMilli
                memoryMib: memoryMib
              runnables:
              - container:
                  imageUri: imageUri
                  password: password
                  enableImageStreaming: true
                  entrypoint: entrypoint
                  options: options
                  volumes:
                  - volumes
                  - volumes
                  blockExternalNetwork: true
                  commands:
                  - commands
                  - commands
                  username: username
                environment:
                  encryptedVariables:
                    cipherText: cipherText
                    keyName: keyName
                  variables:
                    key: variables
                  secretVariables:
                    key: secretVariables
                barrier:
                  name: name
                background: true
                displayName: displayName
                alwaysRun: true
                ignoreExitStatus: true
                script:
                  path: path
                  text: text
                timeout: timeout
                labels:
                  key: labels
              - container:
                  imageUri: imageUri
                  password: password
                  enableImageStreaming: true
                  entrypoint: entrypoint
                  options: options
                  volumes:
                  - volumes
                  - volumes
                  blockExternalNetwork: true
                  commands:
                  - commands
                  - commands
                  username: username
                environment:
                  encryptedVariables:
                    cipherText: cipherText
                    keyName: keyName
                  variables:
                    key: variables
                  secretVariables:
                    key: secretVariables
                barrier:
                  name: name
                background: true
                displayName: displayName
                alwaysRun: true
                ignoreExitStatus: true
                script:
                  path: path
                  text: text
                timeout: timeout
                labels:
                  key: labels
            runAsNonRoot: true
            permissiveSsh: true
            schedulingPolicy: SCHEDULING_POLICY_UNSPECIFIED
          createTime: createTime
          name: name
          updateTime: updateTime
          priority: priority
          allocationPolicy:
            instances:
            - instanceTemplate: instanceTemplate
              installGpuDrivers: true
              policy:
                disks:
                - existingDisk: existingDisk
                  newDisk:
                    image: image
                    sizeGb: sizeGb
                    type: type
                    diskInterface: diskInterface
                    snapshot: snapshot
                  deviceName: deviceName
                - existingDisk: existingDisk
                  newDisk:
                    image: image
                    sizeGb: sizeGb
                    type: type
                    diskInterface: diskInterface
                    snapshot: snapshot
                  deviceName: deviceName
                minCpuPlatform: minCpuPlatform
                provisioningModel: PROVISIONING_MODEL_UNSPECIFIED
                accelerators:
                - driverVersion: driverVersion
                  count: count
                  installGpuDrivers: true
                  type: type
                - driverVersion: driverVersion
                  count: count
                  installGpuDrivers: true
                  type: type
                reservation: reservation
                bootDisk:
                  image: image
                  sizeGb: sizeGb
                  type: type
                  diskInterface: diskInterface
                  snapshot: snapshot
                machineType: machineType
            - instanceTemplate: instanceTemplate
              installGpuDrivers: true
              policy:
                disks:
                - existingDisk: existingDisk
                  newDisk:
                    image: image
                    sizeGb: sizeGb
                    type: type
                    diskInterface: diskInterface
                    snapshot: snapshot
                  deviceName: deviceName
                - existingDisk: existingDisk
                  newDisk:
                    image: image
                    sizeGb: sizeGb
                    type: type
                    diskInterface: diskInterface
                    snapshot: snapshot
                  deviceName: deviceName
                minCpuPlatform: minCpuPlatform
                provisioningModel: PROVISIONING_MODEL_UNSPECIFIED
                accelerators:
                - driverVersion: driverVersion
                  count: count
                  installGpuDrivers: true
                  type: type
                - driverVersion: driverVersion
                  count: count
                  installGpuDrivers: true
                  type: type
                reservation: reservation
                bootDisk:
                  image: image
                  sizeGb: sizeGb
                  type: type
                  diskInterface: diskInterface
                  snapshot: snapshot
                machineType: machineType
            location:
              allowedLocations:
              - allowedLocations
              - allowedLocations
            serviceAccount:
              scopes:
              - scopes
              - scopes
              email: email
            placement:
              collocation: collocation
              maxDistance: maxDistance
            labels:
              key: labels
            network:
              networkInterfaces:
              - noExternalIpAddress: true
                subnetwork: subnetwork
                network: network
              - noExternalIpAddress: true
                subnetwork: subnetwork
                network: network
            tags:
            - tags
            - tags
          notifications:
          - message:
              newTaskState: STATE_UNSPECIFIED
              type: TYPE_UNSPECIFIED
              newJobState: STATE_UNSPECIFIED
            pubsubTopic: pubsubTopic
          - message:
              newTaskState: STATE_UNSPECIFIED
              type: TYPE_UNSPECIFIED
              newJobState: STATE_UNSPECIFIED
            pubsubTopic: pubsubTopic
          labels:
            key: labels
          status:
            runDuration: runDuration
            taskGroups:
              key:
                instances:
                - provisioningModel: PROVISIONING_MODEL_UNSPECIFIED
                  taskPack: taskPack
                  bootDisk:
                    image: image
                    sizeGb: sizeGb
                    type: type
                    diskInterface: diskInterface
                    snapshot: snapshot
                  machineType: machineType
                - provisioningModel: PROVISIONING_MODEL_UNSPECIFIED
                  taskPack: taskPack
                  bootDisk:
                    image: image
                    sizeGb: sizeGb
                    type: type
                    diskInterface: diskInterface
                    snapshot: snapshot
                  machineType: machineType
                counts:
                  key: counts
            state: STATE_UNSPECIFIED
            statusEvents:
            - taskState: STATE_UNSPECIFIED
              eventTime: eventTime
              description: description
              taskExecution:
                exitCode: 0
              type: type
            - taskState: STATE_UNSPECIFIED
              eventTime: eventTime
              description: description
              taskExecution:
                exitCode: 0
              type: type
        - logsPolicy:
            cloudLoggingOption:
              useGenericTaskMonitoredResource: true
            logsPath: logsPath
            destination: DESTINATION_UNSPECIFIED
          uid: uid
          taskGroups:
          - requireHostsFile: true
            taskCount: taskCount
            taskCountPerNode: taskCountPerNode
            taskEnvironments:
            - encryptedVariables:
                cipherText: cipherText
                keyName: keyName
              variables:
                key: variables
              secretVariables:
                key: secretVariables
            - encryptedVariables:
                cipherText: cipherText
                keyName: keyName
              variables:
                key: variables
              secretVariables:
                key: secretVariables
            parallelism: parallelism
            name: name
            taskSpec:
              environment:
                encryptedVariables:
                  cipherText: cipherText
                  keyName: keyName
                variables:
                  key: variables
                secretVariables:
                  key: secretVariables
              environments:
                key: environments
              lifecyclePolicies:
              - actionCondition:
                  exitCodes:
                  - 6
                  - 6
                action: ACTION_UNSPECIFIED
              - actionCondition:
                  exitCodes:
                  - 6
                  - 6
                action: ACTION_UNSPECIFIED
              volumes:
              - mountPath: mountPath
                gcs:
                  remotePath: remotePath
                mountOptions:
                - mountOptions
                - mountOptions
                nfs:
                  server: server
                  remotePath: remotePath
                deviceName: deviceName
              - mountPath: mountPath
                gcs:
                  remotePath: remotePath
                mountOptions:
                - mountOptions
                - mountOptions
                nfs:
                  server: server
                  remotePath: remotePath
                deviceName: deviceName
              maxRunDuration: maxRunDuration
              maxRetryCount: 1
              computeResource:
                bootDiskMib: bootDiskMib
                cpuMilli: cpuMilli
                memoryMib: memoryMib
              runnables:
              - container:
                  imageUri: imageUri
                  password: password
                  enableImageStreaming: true
                  entrypoint: entrypoint
                  options: options
                  volumes:
                  - volumes
                  - volumes
                  blockExternalNetwork: true
                  commands:
                  - commands
                  - commands
                  username: username
                environment:
                  encryptedVariables:
                    cipherText: cipherText
                    keyName: keyName
                  variables:
                    key: variables
                  secretVariables:
                    key: secretVariables
                barrier:
                  name: name
                background: true
                displayName: displayName
                alwaysRun: true
                ignoreExitStatus: true
                script:
                  path: path
                  text: text
                timeout: timeout
                labels:
                  key: labels
              - container:
                  imageUri: imageUri
                  password: password
                  enableImageStreaming: true
                  entrypoint: entrypoint
                  options: options
                  volumes:
                  - volumes
                  - volumes
                  blockExternalNetwork: true
                  commands:
                  - commands
                  - commands
                  username: username
                environment:
                  encryptedVariables:
                    cipherText: cipherText
                    keyName: keyName
                  variables:
                    key: variables
                  secretVariables:
                    key: secretVariables
                barrier:
                  name: name
                background: true
                displayName: displayName
                alwaysRun: true
                ignoreExitStatus: true
                script:
                  path: path
                  text: text
                timeout: timeout
                labels:
                  key: labels
            runAsNonRoot: true
            permissiveSsh: true
            schedulingPolicy: SCHEDULING_POLICY_UNSPECIFIED
          - requireHostsFile: true
            taskCount: taskCount
            taskCountPerNode: taskCountPerNode
            taskEnvironments:
            - encryptedVariables:
                cipherText: cipherText
                keyName: keyName
              variables:
                key: variables
              secretVariables:
                key: secretVariables
            - encryptedVariables:
                cipherText: cipherText
                keyName: keyName
              variables:
                key: variables
              secretVariables:
                key: secretVariables
            parallelism: parallelism
            name: name
            taskSpec:
              environment:
                encryptedVariables:
                  cipherText: cipherText
                  keyName: keyName
                variables:
                  key: variables
                secretVariables:
                  key: secretVariables
              environments:
                key: environments
              lifecyclePolicies:
              - actionCondition:
                  exitCodes:
                  - 6
                  - 6
                action: ACTION_UNSPECIFIED
              - actionCondition:
                  exitCodes:
                  - 6
                  - 6
                action: ACTION_UNSPECIFIED
              volumes:
              - mountPath: mountPath
                gcs:
                  remotePath: remotePath
                mountOptions:
                - mountOptions
                - mountOptions
                nfs:
                  server: server
                  remotePath: remotePath
                deviceName: deviceName
              - mountPath: mountPath
                gcs:
                  remotePath: remotePath
                mountOptions:
                - mountOptions
                - mountOptions
                nfs:
                  server: server
                  remotePath: remotePath
                deviceName: deviceName
              maxRunDuration: maxRunDuration
              maxRetryCount: 1
              computeResource:
                bootDiskMib: bootDiskMib
                cpuMilli: cpuMilli
                memoryMib: memoryMib
              runnables:
              - container:
                  imageUri: imageUri
                  password: password
                  enableImageStreaming: true
                  entrypoint: entrypoint
                  options: options
                  volumes:
                  - volumes
                  - volumes
                  blockExternalNetwork: true
                  commands:
                  - commands
                  - commands
                  username: username
                environment:
                  encryptedVariables:
                    cipherText: cipherText
                    keyName: keyName
                  variables:
                    key: variables
                  secretVariables:
                    key: secretVariables
                barrier:
                  name: name
                background: true
                displayName: displayName
                alwaysRun: true
                ignoreExitStatus: true
                script:
                  path: path
                  text: text
                timeout: timeout
                labels:
                  key: labels
              - container:
                  imageUri: imageUri
                  password: password
                  enableImageStreaming: true
                  entrypoint: entrypoint
                  options: options
                  volumes:
                  - volumes
                  - volumes
                  blockExternalNetwork: true
                  commands:
                  - commands
                  - commands
                  username: username
                environment:
                  encryptedVariables:
                    cipherText: cipherText
                    keyName: keyName
                  variables:
                    key: variables
                  secretVariables:
                    key: secretVariables
                barrier:
                  name: name
                background: true
                displayName: displayName
                alwaysRun: true
                ignoreExitStatus: true
                script:
                  path: path
                  text: text
                timeout: timeout
                labels:
                  key: labels
            runAsNonRoot: true
            permissiveSsh: true
            schedulingPolicy: SCHEDULING_POLICY_UNSPECIFIED
          createTime: createTime
          name: name
          updateTime: updateTime
          priority: priority
          allocationPolicy:
            instances:
            - instanceTemplate: instanceTemplate
              installGpuDrivers: true
              policy:
                disks:
                - existingDisk: existingDisk
                  newDisk:
                    image: image
                    sizeGb: sizeGb
                    type: type
                    diskInterface: diskInterface
                    snapshot: snapshot
                  deviceName: deviceName
                - existingDisk: existingDisk
                  newDisk:
                    image: image
                    sizeGb: sizeGb
                    type: type
                    diskInterface: diskInterface
                    snapshot: snapshot
                  deviceName: deviceName
                minCpuPlatform: minCpuPlatform
                provisioningModel: PROVISIONING_MODEL_UNSPECIFIED
                accelerators:
                - driverVersion: driverVersion
                  count: count
                  installGpuDrivers: true
                  type: type
                - driverVersion: driverVersion
                  count: count
                  installGpuDrivers: true
                  type: type
                reservation: reservation
                bootDisk:
                  image: image
                  sizeGb: sizeGb
                  type: type
                  diskInterface: diskInterface
                  snapshot: snapshot
                machineType: machineType
            - instanceTemplate: instanceTemplate
              installGpuDrivers: true
              policy:
                disks:
                - existingDisk: existingDisk
                  newDisk:
                    image: image
                    sizeGb: sizeGb
                    type: type
                    diskInterface: diskInterface
                    snapshot: snapshot
                  deviceName: deviceName
                - existingDisk: existingDisk
                  newDisk:
                    image: image
                    sizeGb: sizeGb
                    type: type
                    diskInterface: diskInterface
                    snapshot: snapshot
                  deviceName: deviceName
                minCpuPlatform: minCpuPlatform
                provisioningModel: PROVISIONING_MODEL_UNSPECIFIED
                accelerators:
                - driverVersion: driverVersion
                  count: count
                  installGpuDrivers: true
                  type: type
                - driverVersion: driverVersion
                  count: count
                  installGpuDrivers: true
                  type: type
                reservation: reservation
                bootDisk:
                  image: image
                  sizeGb: sizeGb
                  type: type
                  diskInterface: diskInterface
                  snapshot: snapshot
                machineType: machineType
            location:
              allowedLocations:
              - allowedLocations
              - allowedLocations
            serviceAccount:
              scopes:
              - scopes
              - scopes
              email: email
            placement:
              collocation: collocation
              maxDistance: maxDistance
            labels:
              key: labels
            network:
              networkInterfaces:
              - noExternalIpAddress: true
                subnetwork: subnetwork
                network: network
              - noExternalIpAddress: true
                subnetwork: subnetwork
                network: network
            tags:
            - tags
            - tags
          notifications:
          - message:
              newTaskState: STATE_UNSPECIFIED
              type: TYPE_UNSPECIFIED
              newJobState: STATE_UNSPECIFIED
            pubsubTopic: pubsubTopic
          - message:
              newTaskState: STATE_UNSPECIFIED
              type: TYPE_UNSPECIFIED
              newJobState: STATE_UNSPECIFIED
            pubsubTopic: pubsubTopic
          labels:
            key: labels
          status:
            runDuration: runDuration
            taskGroups:
              key:
                instances:
                - provisioningModel: PROVISIONING_MODEL_UNSPECIFIED
                  taskPack: taskPack
                  bootDisk:
                    image: image
                    sizeGb: sizeGb
                    type: type
                    diskInterface: diskInterface
                    snapshot: snapshot
                  machineType: machineType
                - provisioningModel: PROVISIONING_MODEL_UNSPECIFIED
                  taskPack: taskPack
                  bootDisk:
                    image: image
                    sizeGb: sizeGb
                    type: type
                    diskInterface: diskInterface
                    snapshot: snapshot
                  machineType: machineType
                counts:
                  key: counts
            state: STATE_UNSPECIFIED
            statusEvents:
            - taskState: STATE_UNSPECIFIED
              eventTime: eventTime
              description: description
              taskExecution:
                exitCode: 0
              type: type
            - taskState: STATE_UNSPECIFIED
              eventTime: eventTime
              description: description
              taskExecution:
                exitCode: 0
              type: type
      properties:
        jobs:
          description: Jobs.
          items:
            $ref: '#/components/schemas/Job'
          title: jobs
          type: array
        nextPageToken:
          description: Next page token.
          title: nextPageToken
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          title: unreachable
          type: array
      title: ListJobsResponse
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      example:
        nextPageToken: nextPageToken
        locations:
        - metadata:
            key: ""
          displayName: displayName
          locationId: locationId
          name: name
          labels:
            key: labels
        - metadata:
            key: ""
          displayName: displayName
          locationId: locationId
          name: name
          labels:
            key: labels
      properties:
        locations:
          description: A list of locations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/Location'
          title: locations
          type: array
        nextPageToken:
          description: The standard List next-page token.
          title: nextPageToken
          type: string
      title: ListLocationsResponse
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      example:
        operations:
        - metadata:
            key: ""
          response:
            key: ""
          name: name
          error:
            code: 0
            details:
            - key: ""
            - key: ""
            message: message
          done: true
        - metadata:
            key: ""
          response:
            key: ""
          name: name
          error:
            code: 0
            details:
            - key: ""
            - key: ""
            message: message
          done: true
        nextPageToken: nextPageToken
      properties:
        nextPageToken:
          description: The standard List next-page token.
          title: nextPageToken
          type: string
        operations:
          description: A list of operations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/Operation'
          title: operations
          type: array
      title: ListOperationsResponse
      type: object
    ListTasksResponse:
      description: ListTasks Response.
      example:
        unreachable:
        - unreachable
        - unreachable
        nextPageToken: nextPageToken
        tasks:
        - name: name
          status:
            state: STATE_UNSPECIFIED
            statusEvents:
            - taskState: STATE_UNSPECIFIED
              eventTime: eventTime
              description: description
              taskExecution:
                exitCode: 0
              type: type
            - taskState: STATE_UNSPECIFIED
              eventTime: eventTime
              description: description
              taskExecution:
                exitCode: 0
              type: type
        - name: name
          status:
            state: STATE_UNSPECIFIED
            statusEvents:
            - taskState: STATE_UNSPECIFIED
              eventTime: eventTime
              description: description
              taskExecution:
                exitCode: 0
              type: type
            - taskState: STATE_UNSPECIFIED
              eventTime: eventTime
              description: description
              taskExecution:
                exitCode: 0
              type: type
      properties:
        nextPageToken:
          description: Next page token.
          title: nextPageToken
          type: string
        tasks:
          description: Tasks.
          items:
            $ref: '#/components/schemas/Task'
          title: tasks
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          title: unreachable
          type: array
      title: ListTasksResponse
      type: object
    Location:
      description: A resource that represents a Google Cloud location.
      example:
        metadata:
          key: ""
        displayName: displayName
        locationId: locationId
        name: name
        labels:
          key: labels
      properties:
        displayName:
          description: "The friendly name for this location, typically a nearby city\
            \ name. For example, \"Tokyo\"."
          title: displayName
          type: string
        labels:
          additionalProperties:
            type: string
          description: "Cross-service attributes for the location. For example {\"\
            cloud.googleapis.com/region\": \"us-east1\"}"
          title: labels
          type: object
        locationId:
          description: "The canonical id for this location. For example: `\"us-east1\"\
            `."
          title: locationId
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: Service-specific metadata. For example the available capacity
            at the given location.
          title: metadata
          type: object
        name:
          description: "Resource name for the location, which may vary between implementations.\
            \ For example: `\"projects/example-project/locations/us-east1\"`"
          title: name
          type: string
      title: Location
      type: object
    LocationPolicy:
      example:
        allowedLocations:
        - allowedLocations
        - allowedLocations
      properties:
        allowedLocations:
          description: "A list of allowed location names represented by internal URLs.\
            \ Each location can be a region or a zone. Only one region or multiple\
            \ zones in one region is supported now. For example, [\"regions/us-central1\"\
            ] allow VMs in any zones in region us-central1. [\"zones/us-central1-a\"\
            , \"zones/us-central1-c\"] only allow VMs in zones us-central1-a and us-central1-c.\
            \ All locations end up in different regions would cause errors. For example,\
            \ [\"regions/us-central1\", \"zones/us-central1-a\", \"zones/us-central1-b\"\
            , \"zones/us-west1-a\"] contains 2 regions \"us-central1\" and \"us-west1\"\
            . An error is expected in this case."
          items:
            type: string
          title: allowedLocations
          type: array
      title: LocationPolicy
      type: object
    LogsPolicy:
      description: LogsPolicy describes how outputs from a Job's Tasks (stdout/stderr)
        will be preserved.
      example:
        cloudLoggingOption:
          useGenericTaskMonitoredResource: true
        logsPath: logsPath
        destination: DESTINATION_UNSPECIFIED
      properties:
        cloudLoggingOption:
          $ref: '#/components/schemas/CloudLoggingOption'
        destination:
          description: Where logs should be saved.
          enum:
          - DESTINATION_UNSPECIFIED
          - CLOUD_LOGGING
          - PATH
          title: destination
          type: string
        logsPath:
          description: "The path to which logs are saved when the destination = PATH.\
            \ This can be a local file path on the VM, or under the mount point of\
            \ a Persistent Disk or Filestore, or a Cloud Storage path."
          title: logsPath
          type: string
      title: LogsPolicy
      type: object
    Message:
      description: "Message details. Describe the conditions under which messages\
        \ will be sent. If no attribute is defined, no message will be sent by default.\
        \ One message should specify either the job or the task level attributes,\
        \ but not both. For example, job level: JOB_STATE_CHANGED and/or a specified\
        \ new_job_state; task level: TASK_STATE_CHANGED and/or a specified new_task_state."
      example:
        newTaskState: STATE_UNSPECIFIED
        type: TYPE_UNSPECIFIED
        newJobState: STATE_UNSPECIFIED
      properties:
        newJobState:
          description: The new job state.
          enum:
          - STATE_UNSPECIFIED
          - QUEUED
          - SCHEDULED
          - RUNNING
          - SUCCEEDED
          - FAILED
          - DELETION_IN_PROGRESS
          title: newJobState
          type: string
        newTaskState:
          description: The new task state.
          enum:
          - STATE_UNSPECIFIED
          - PENDING
          - ASSIGNED
          - RUNNING
          - FAILED
          - SUCCEEDED
          - UNEXECUTED
          title: newTaskState
          type: string
        type:
          description: The message type.
          enum:
          - TYPE_UNSPECIFIED
          - JOB_STATE_CHANGED
          - TASK_STATE_CHANGED
          title: type
          type: string
      title: Message
      type: object
    NFS:
      description: Represents an NFS volume.
      example:
        server: server
        remotePath: remotePath
      properties:
        remotePath:
          description: "Remote source path exported from the NFS, e.g., \"/share\"\
            ."
          title: remotePath
          type: string
        server:
          description: The IP address of the NFS.
          title: server
          type: string
      title: NFS
      type: object
    NetworkInterface:
      description: A network interface.
      example:
        noExternalIpAddress: true
        subnetwork: subnetwork
        network: network
      properties:
        network:
          description: "The URL of an existing network resource. You can specify the\
            \ network as a full or partial URL. For example, the following are all\
            \ valid URLs: * https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}\
            \ * projects/{project}/global/networks/{network} * global/networks/{network}"
          title: network
          type: string
        noExternalIpAddress:
          description: "Default is false (with an external IP address). Required if\
            \ no external public IP address is attached to the VM. If no external\
            \ public IP address, additional configuration is required to allow the\
            \ VM to access Google Services. See https://cloud.google.com/vpc/docs/configure-private-google-access\
            \ and https://cloud.google.com/nat/docs/gce-example#create-nat for more\
            \ information."
          title: noExternalIpAddress
          type: boolean
        subnetwork:
          description: "The URL of an existing subnetwork resource in the network.\
            \ You can specify the subnetwork as a full or partial URL. For example,\
            \ the following are all valid URLs: * https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/subnetworks/{subnetwork}\
            \ * projects/{project}/regions/{region}/subnetworks/{subnetwork} * regions/{region}/subnetworks/{subnetwork}"
          title: subnetwork
          type: string
      title: NetworkInterface
      type: object
    NetworkPolicy:
      description: NetworkPolicy describes VM instance network configurations.
      example:
        networkInterfaces:
        - noExternalIpAddress: true
          subnetwork: subnetwork
          network: network
        - noExternalIpAddress: true
          subnetwork: subnetwork
          network: network
      properties:
        networkInterfaces:
          description: Network configurations.
          items:
            $ref: '#/components/schemas/NetworkInterface'
          title: networkInterfaces
          type: array
      title: NetworkPolicy
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result
        of a network API call.
      example:
        metadata:
          key: ""
        response:
          key: ""
        name: name
        error:
          code: 0
          details:
          - key: ""
          - key: ""
          message: message
        done: true
      properties:
        done:
          description: "If the value is `false`, it means the operation is still in\
            \ progress. If `true`, the operation is completed, and either `error`\
            \ or `response` is available."
          title: done
          type: boolean
        error:
          $ref: '#/components/schemas/Status'
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: "Service-specific metadata associated with the operation. It\
            \ typically contains progress information and common metadata such as\
            \ create time. Some services might not provide such metadata. Any method\
            \ that returns a long-running operation should document the metadata type,\
            \ if any."
          title: metadata
          type: object
        name:
          description: "The server-assigned name, which is only unique within the\
            \ same service that originally returns it. If you use the default HTTP\
            \ mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
          title: name
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: "The normal, successful response of the operation. If the original\
            \ method returns no data on success, such as `Delete`, the response is\
            \ `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`,\
            \ the response should be the resource. For other methods, the response\
            \ should have the type `XxxResponse`, where `Xxx` is the original method\
            \ name. For example, if the original method name is `TakeSnapshot()`,\
            \ the inferred response type is `TakeSnapshotResponse`."
          title: response
          type: object
      title: Operation
      type: object
    OperationMetadata:
      description: Represents the metadata of the long-running operation.
      properties:
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        requestedCancellation:
          description: "Output only. Identifies whether the user has requested cancellation\
            \ of the operation. Operations that have successfully been cancelled have\
            \ Operation.error value with a google.rpc.Status.code of 1, corresponding\
            \ to `Code.CANCELLED`."
          readOnly: true
          type: boolean
        statusMessage:
          description: "Output only. Human-readable status of the operation, if any."
          readOnly: true
          type: string
        target:
          description: Output only. Server-defined resource path for the target of
            the operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
      type: object
    PlacementPolicy:
      description: PlacementPolicy describes a group placement policy for the VMs
        controlled by this AllocationPolicy.
      example:
        collocation: collocation
        maxDistance: maxDistance
      properties:
        collocation:
          description: UNSPECIFIED vs. COLLOCATED (default UNSPECIFIED). Use COLLOCATED
            when you want VMs to be located close to each other for low network latency
            between the VMs. No placement policy will be generated when collocation
            is UNSPECIFIED.
          title: collocation
          type: string
        maxDistance:
          description: "When specified, causes the job to fail if more than max_distance\
            \ logical switches are required between VMs. Batch uses the most compact\
            \ possible placement of VMs even when max_distance is not specified. An\
            \ explicit max_distance makes that level of compactness a strict requirement.\
            \ Not yet implemented"
          format: int64
          title: maxDistance
          type: string
      title: PlacementPolicy
      type: object
    ReportAgentStateRequest:
      description: Request to report agent's state. The Request itself implies the
        agent is healthy.
      example:
        metadata:
          imageVersion: imageVersion
          creator: creator
          instance: instance
          instanceId: instanceId
          creationTime: creationTime
          instancePreemptionNoticeReceived: true
          zone: zone
          version: version
          osRelease:
            key: osRelease
        agentInfo:
          jobId: jobId
          taskGroupId: taskGroupId
          state: AGENT_STATE_UNSPECIFIED
          tasks:
          - runnable: runnable
            taskId: taskId
            taskStatus:
              state: STATE_UNSPECIFIED
              statusEvents:
              - taskState: STATE_UNSPECIFIED
                eventTime: eventTime
                description: description
                taskExecution:
                  exitCode: 0
                type: type
              - taskState: STATE_UNSPECIFIED
                eventTime: eventTime
                description: description
                taskExecution:
                  exitCode: 0
                type: type
          - runnable: runnable
            taskId: taskId
            taskStatus:
              state: STATE_UNSPECIFIED
              statusEvents:
              - taskState: STATE_UNSPECIFIED
                eventTime: eventTime
                description: description
                taskExecution:
                  exitCode: 0
                type: type
              - taskState: STATE_UNSPECIFIED
                eventTime: eventTime
                description: description
                taskExecution:
                  exitCode: 0
                type: type
          reportTime: reportTime
        agentTimingInfo:
          agentStartupTime: agentStartupTime
          bootTime: bootTime
          scriptStartupTime: scriptStartupTime
      properties:
        agentInfo:
          $ref: '#/components/schemas/AgentInfo'
        agentTimingInfo:
          $ref: '#/components/schemas/AgentTimingInfo'
        metadata:
          $ref: '#/components/schemas/AgentMetadata'
      title: ReportAgentStateRequest
      type: object
    ReportAgentStateResponse:
      description: Response to ReportAgentStateRequest.
      example:
        defaultReportInterval: defaultReportInterval
        minReportInterval: minReportInterval
        useBatchMonitoredResource: true
        tasks:
        - task: task
          agentTaskSpec:
            environment:
              encryptedVariables:
                cipherText: cipherText
                keyName: keyName
              variables:
                key: variables
              secretVariables:
                key: secretVariables
            userAccount:
              uid: uid
              gid: gid
            maxRunDuration: maxRunDuration
            runnables:
            - container:
                imageUri: imageUri
                entrypoint: entrypoint
                options: options
                volumes:
                - volumes
                - volumes
                commands:
                - commands
                - commands
              environment:
                encryptedVariables:
                  cipherText: cipherText
                  keyName: keyName
                variables:
                  key: variables
                secretVariables:
                  key: secretVariables
              background: true
              alwaysRun: true
              ignoreExitStatus: true
              script:
                path: path
                text: text
              timeout: timeout
            - container:
                imageUri: imageUri
                entrypoint: entrypoint
                options: options
                volumes:
                - volumes
                - volumes
                commands:
                - commands
                - commands
              environment:
                encryptedVariables:
                  cipherText: cipherText
                  keyName: keyName
                variables:
                  key: variables
                secretVariables:
                  key: secretVariables
              background: true
              alwaysRun: true
              ignoreExitStatus: true
              script:
                path: path
                text: text
              timeout: timeout
          intendedState: INTENDED_STATE_UNSPECIFIED
          reachedBarrier: reachedBarrier
          taskSource: TASK_SOURCE_UNSPECIFIED
          spec:
            environment:
              encryptedVariables:
                cipherText: cipherText
                keyName: keyName
              variables:
                key: variables
              secretVariables:
                key: secretVariables
            environments:
              key: environments
            lifecyclePolicies:
            - actionCondition:
                exitCodes:
                - 6
                - 6
              action: ACTION_UNSPECIFIED
            - actionCondition:
                exitCodes:
                - 6
                - 6
              action: ACTION_UNSPECIFIED
            volumes:
            - mountPath: mountPath
              gcs:
                remotePath: remotePath
              mountOptions:
              - mountOptions
              - mountOptions
              nfs:
                server: server
                remotePath: remotePath
              deviceName: deviceName
            - mountPath: mountPath
              gcs:
                remotePath: remotePath
              mountOptions:
              - mountOptions
              - mountOptions
              nfs:
                server: server
                remotePath: remotePath
              deviceName: deviceName
            maxRunDuration: maxRunDuration
            maxRetryCount: 1
            computeResource:
              bootDiskMib: bootDiskMib
              cpuMilli: cpuMilli
              memoryMib: memoryMib
            runnables:
            - container:
                imageUri: imageUri
                password: password
                enableImageStreaming: true
                entrypoint: entrypoint
                options: options
                volumes:
                - volumes
                - volumes
                blockExternalNetwork: true
                commands:
                - commands
                - commands
                username: username
              environment:
                encryptedVariables:
                  cipherText: cipherText
                  keyName: keyName
                variables:
                  key: variables
                secretVariables:
                  key: secretVariables
              barrier:
                name: name
              background: true
              displayName: displayName
              alwaysRun: true
              ignoreExitStatus: true
              script:
                path: path
                text: text
              timeout: timeout
              labels:
                key: labels
            - container:
                imageUri: imageUri
                password: password
                enableImageStreaming: true
                entrypoint: entrypoint
                options: options
                volumes:
                - volumes
                - volumes
                blockExternalNetwork: true
                commands:
                - commands
                - commands
                username: username
              environment:
                encryptedVariables:
                  cipherText: cipherText
                  keyName: keyName
                variables:
                  key: variables
                secretVariables:
                  key: secretVariables
              barrier:
                name: name
              background: true
              displayName: displayName
              alwaysRun: true
              ignoreExitStatus: true
              script:
                path: path
                text: text
              timeout: timeout
              labels:
                key: labels
          status:
            state: STATE_UNSPECIFIED
            statusEvents:
            - taskState: STATE_UNSPECIFIED
              eventTime: eventTime
              description: description
              taskExecution:
                exitCode: 0
              type: type
            - taskState: STATE_UNSPECIFIED
              eventTime: eventTime
              description: description
              taskExecution:
                exitCode: 0
              type: type
        - task: task
          agentTaskSpec:
            environment:
              encryptedVariables:
                cipherText: cipherText
                keyName: keyName
              variables:
                key: variables
              secretVariables:
                key: secretVariables
            userAccount:
              uid: uid
              gid: gid
            maxRunDuration: maxRunDuration
            runnables:
            - container:
                imageUri: imageUri
                entrypoint: entrypoint
                options: options
                volumes:
                - volumes
                - volumes
                commands:
                - commands
                - commands
              environment:
                encryptedVariables:
                  cipherText: cipherText
                  keyName: keyName
                variables:
                  key: variables
                secretVariables:
                  key: secretVariables
              background: true
              alwaysRun: true
              ignoreExitStatus: true
              script:
                path: path
                text: text
              timeout: timeout
            - container:
                imageUri: imageUri
                entrypoint: entrypoint
                options: options
                volumes:
                - volumes
                - volumes
                commands:
                - commands
                - commands
              environment:
                encryptedVariables:
                  cipherText: cipherText
                  keyName: keyName
                variables:
                  key: variables
                secretVariables:
                  key: secretVariables
              background: true
              alwaysRun: true
              ignoreExitStatus: true
              script:
                path: path
                text: text
              timeout: timeout
          intendedState: INTENDED_STATE_UNSPECIFIED
          reachedBarrier: reachedBarrier
          taskSource: TASK_SOURCE_UNSPECIFIED
          spec:
            environment:
              encryptedVariables:
                cipherText: cipherText
                keyName: keyName
              variables:
                key: variables
              secretVariables:
                key: secretVariables
            environments:
              key: environments
            lifecyclePolicies:
            - actionCondition:
                exitCodes:
                - 6
                - 6
              action: ACTION_UNSPECIFIED
            - actionCondition:
                exitCodes:
                - 6
                - 6
              action: ACTION_UNSPECIFIED
            volumes:
            - mountPath: mountPath
              gcs:
                remotePath: remotePath
              mountOptions:
              - mountOptions
              - mountOptions
              nfs:
                server: server
                remotePath: remotePath
              deviceName: deviceName
            - mountPath: mountPath
              gcs:
                remotePath: remotePath
              mountOptions:
              - mountOptions
              - mountOptions
              nfs:
                server: server
                remotePath: remotePath
              deviceName: deviceName
            maxRunDuration: maxRunDuration
            maxRetryCount: 1
            computeResource:
              bootDiskMib: bootDiskMib
              cpuMilli: cpuMilli
              memoryMib: memoryMib
            runnables:
            - container:
                imageUri: imageUri
                password: password
                enableImageStreaming: true
                entrypoint: entrypoint
                options: options
                volumes:
                - volumes
                - volumes
                blockExternalNetwork: true
                commands:
                - commands
                - commands
                username: username
              environment:
                encryptedVariables:
                  cipherText: cipherText
                  keyName: keyName
                variables:
                  key: variables
                secretVariables:
                  key: secretVariables
              barrier:
                name: name
              background: true
              displayName: displayName
              alwaysRun: true
              ignoreExitStatus: true
              script:
                path: path
                text: text
              timeout: timeout
              labels:
                key: labels
            - container:
                imageUri: imageUri
                password: password
                enableImageStreaming: true
                entrypoint: entrypoint
                options: options
                volumes:
                - volumes
                - volumes
                blockExternalNetwork: true
                commands:
                - commands
                - commands
                username: username
              environment:
                encryptedVariables:
                  cipherText: cipherText
                  keyName: keyName
                variables:
                  key: variables
                secretVariables:
                  key: secretVariables
              barrier:
                name: name
              background: true
              displayName: displayName
              alwaysRun: true
              ignoreExitStatus: true
              script:
                path: path
                text: text
              timeout: timeout
              labels:
                key: labels
          status:
            state: STATE_UNSPECIFIED
            statusEvents:
            - taskState: STATE_UNSPECIFIED
              eventTime: eventTime
              description: description
              taskExecution:
                exitCode: 0
              type: type
            - taskState: STATE_UNSPECIFIED
              eventTime: eventTime
              description: description
              taskExecution:
                exitCode: 0
              type: type
      properties:
        defaultReportInterval:
          description: Default report interval override
          format: google-duration
          title: defaultReportInterval
          type: string
        minReportInterval:
          description: Minimum report interval override
          format: google-duration
          title: minReportInterval
          type: string
        tasks:
          description: Tasks assigned to the agent
          items:
            $ref: '#/components/schemas/AgentTask'
          title: tasks
          type: array
        useBatchMonitoredResource:
          description: "If true, the cloud logging for batch agent will use batch.googleapis.com/Job\
            \ as monitored resource for Batch job related logging."
          title: useBatchMonitoredResource
          type: boolean
      title: ReportAgentStateResponse
      type: object
    Runnable:
      description: Runnable describes instructions for executing a specific script
        or container as part of a Task.
      example:
        container:
          imageUri: imageUri
          password: password
          enableImageStreaming: true
          entrypoint: entrypoint
          options: options
          volumes:
          - volumes
          - volumes
          blockExternalNetwork: true
          commands:
          - commands
          - commands
          username: username
        environment:
          encryptedVariables:
            cipherText: cipherText
            keyName: keyName
          variables:
            key: variables
          secretVariables:
            key: secretVariables
        barrier:
          name: name
        background: true
        displayName: displayName
        alwaysRun: true
        ignoreExitStatus: true
        script:
          path: path
          text: text
        timeout: timeout
        labels:
          key: labels
      properties:
        alwaysRun:
          description: "By default, after a Runnable fails, no further Runnable are\
            \ executed. This flag indicates that this Runnable must be run even if\
            \ the Task has already failed. This is useful for Runnables that copy\
            \ output files off of the VM or for debugging. The always_run flag does\
            \ not override the Task's overall max_run_duration. If the max_run_duration\
            \ has expired then no further Runnables will execute, not even always_run\
            \ Runnables."
          title: alwaysRun
          type: boolean
        background:
          description: This flag allows a Runnable to continue running in the background
            while the Task executes subsequent Runnables. This is useful to provide
            services to other Runnables (or to provide debugging support tools like
            SSH servers).
          title: background
          type: boolean
        barrier:
          $ref: '#/components/schemas/Barrier'
        container:
          $ref: '#/components/schemas/Container'
        displayName:
          description: "Optional. DisplayName is an optional field that can be provided\
            \ by the caller. If provided, it will be used in logs and other outputs\
            \ to identify the script, making it easier for users to understand the\
            \ logs. If not provided the index of the runnable will be used for outputs."
          title: displayName
          type: string
        environment:
          $ref: '#/components/schemas/Environment'
        ignoreExitStatus:
          description: "Normally, a non-zero exit status causes the Task to fail.\
            \ This flag allows execution of other Runnables to continue instead."
          title: ignoreExitStatus
          type: boolean
        labels:
          additionalProperties:
            type: string
          description: Labels for this Runnable.
          title: labels
          type: object
        script:
          $ref: '#/components/schemas/Script'
        timeout:
          description: Timeout for this Runnable.
          format: google-duration
          title: timeout
          type: string
      title: Runnable
      type: object
    Script:
      description: Script runnable.
      example:
        path: path
        text: text
      properties:
        path:
          description: "Script file path on the host VM. To specify an interpreter,\
            \ please add a `#!`(also known as [shebang line](https://en.wikipedia.org/wiki/Shebang_(Unix)))\
            \ as the first line of the file.(For example, to execute the script using\
            \ bash, `#!/bin/bash` should be the first line of the file. To execute\
            \ the script using`Python3`, `#!/usr/bin/env python3` should be the first\
            \ line of the file.) Otherwise, the file will by default be executed by\
            \ `/bin/sh`."
          title: path
          type: string
        text:
          description: "Shell script text. To specify an interpreter, please add a\
            \ `#!\\n` at the beginning of the text.(For example, to execute the script\
            \ using bash, `#!/bin/bash\\n` should be added. To execute the script\
            \ using`Python3`, `#!/usr/bin/env python3\\n` should be added.) Otherwise,\
            \ the script will by default be executed by `/bin/sh`."
          title: text
          type: string
      title: Script
      type: object
    ServiceAccount:
      description: Carries information about a Google Cloud service account.
      example:
        scopes:
        - scopes
        - scopes
        email: email
      properties:
        email:
          description: "Email address of the service account. If not specified, the\
            \ default Compute Engine service account for the project will be used.\
            \ If instance template is being used, the service account has to be specified\
            \ in the instance template and it has to match the email field here."
          title: email
          type: string
        scopes:
          description: "List of scopes to be enabled for this service account on the\
            \ VM, in addition to the cloud-platform API scope that will be added by\
            \ default."
          items:
            type: string
          title: scopes
          type: array
      title: ServiceAccount
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable\
        \ for different programming environments, including REST APIs and RPC APIs.\
        \ It is used by [gRPC](https://github.com/grpc). Each `Status` message contains\
        \ three pieces of data: error code, error message, and error details. You\
        \ can find out more about this error model and how to work with it in the\
        \ [API Design Guide](https://cloud.google.com/apis/design/errors)."
      example:
        code: 0
        details:
        - key: ""
        - key: ""
        message: message
      properties:
        code:
          description: "The status code, which should be an enum value of google.rpc.Code."
          format: int32
          title: code
          type: integer
        details:
          description: A list of messages that carry the error details. There is a
            common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type
                URL.
            type: object
          title: details
          type: array
        message:
          description: "A developer-facing error message, which should be in English.\
            \ Any user-facing error message should be localized and sent in the google.rpc.Status.details\
            \ field, or localized by the client."
          title: message
          type: string
      title: Status
      type: object
    StatusEvent:
      description: Status event
      example:
        taskState: STATE_UNSPECIFIED
        eventTime: eventTime
        description: description
        taskExecution:
          exitCode: 0
        type: type
      properties:
        description:
          description: Description of the event.
          title: description
          type: string
        eventTime:
          description: The time this event occurred.
          format: google-datetime
          title: eventTime
          type: string
        taskExecution:
          $ref: '#/components/schemas/TaskExecution'
        taskState:
          description: Task State
          enum:
          - STATE_UNSPECIFIED
          - PENDING
          - ASSIGNED
          - RUNNING
          - FAILED
          - SUCCEEDED
          - UNEXECUTED
          title: taskState
          type: string
        type:
          description: Type of the event.
          title: type
          type: string
      title: StatusEvent
      type: object
    Task:
      description: A Cloud Batch task.
      example:
        name: name
        status:
          state: STATE_UNSPECIFIED
          statusEvents:
          - taskState: STATE_UNSPECIFIED
            eventTime: eventTime
            description: description
            taskExecution:
              exitCode: 0
            type: type
          - taskState: STATE_UNSPECIFIED
            eventTime: eventTime
            description: description
            taskExecution:
              exitCode: 0
            type: type
      properties:
        name:
          description: "Task name. The name is generated from the parent TaskGroup\
            \ name and 'id' field. For example: \"projects/123456/locations/us-west1/jobs/job01/taskGroups/group01/tasks/task01\"\
            ."
          title: name
          type: string
        status:
          $ref: '#/components/schemas/TaskStatus'
      title: Task
      type: object
    TaskExecution:
      description: "This Task Execution field includes detail information for task\
        \ execution procedures, based on StatusEvent types."
      example:
        exitCode: 0
      properties:
        exitCode:
          description: "When task is completed as the status of FAILED or SUCCEEDED,\
            \ exit code is for one task execution result, default is 0 as success."
          format: int32
          title: exitCode
          type: integer
      title: TaskExecution
      type: object
    TaskGroup:
      description: A TaskGroup defines one or more Tasks that all share the same TaskSpec.
      example:
        requireHostsFile: true
        taskCount: taskCount
        taskCountPerNode: taskCountPerNode
        taskEnvironments:
        - encryptedVariables:
            cipherText: cipherText
            keyName: keyName
          variables:
            key: variables
          secretVariables:
            key: secretVariables
        - encryptedVariables:
            cipherText: cipherText
            keyName: keyName
          variables:
            key: variables
          secretVariables:
            key: secretVariables
        parallelism: parallelism
        name: name
        taskSpec:
          environment:
            encryptedVariables:
              cipherText: cipherText
              keyName: keyName
            variables:
              key: variables
            secretVariables:
              key: secretVariables
          environments:
            key: environments
          lifecyclePolicies:
          - actionCondition:
              exitCodes:
              - 6
              - 6
            action: ACTION_UNSPECIFIED
          - actionCondition:
              exitCodes:
              - 6
              - 6
            action: ACTION_UNSPECIFIED
          volumes:
          - mountPath: mountPath
            gcs:
              remotePath: remotePath
            mountOptions:
            - mountOptions
            - mountOptions
            nfs:
              server: server
              remotePath: remotePath
            deviceName: deviceName
          - mountPath: mountPath
            gcs:
              remotePath: remotePath
            mountOptions:
            - mountOptions
            - mountOptions
            nfs:
              server: server
              remotePath: remotePath
            deviceName: deviceName
          maxRunDuration: maxRunDuration
          maxRetryCount: 1
          computeResource:
            bootDiskMib: bootDiskMib
            cpuMilli: cpuMilli
            memoryMib: memoryMib
          runnables:
          - container:
              imageUri: imageUri
              password: password
              enableImageStreaming: true
              entrypoint: entrypoint
              options: options
              volumes:
              - volumes
              - volumes
              blockExternalNetwork: true
              commands:
              - commands
              - commands
              username: username
            environment:
              encryptedVariables:
                cipherText: cipherText
                keyName: keyName
              variables:
                key: variables
              secretVariables:
                key: secretVariables
            barrier:
              name: name
            background: true
            displayName: displayName
            alwaysRun: true
            ignoreExitStatus: true
            script:
              path: path
              text: text
            timeout: timeout
            labels:
              key: labels
          - container:
              imageUri: imageUri
              password: password
              enableImageStreaming: true
              entrypoint: entrypoint
              options: options
              volumes:
              - volumes
              - volumes
              blockExternalNetwork: true
              commands:
              - commands
              - commands
              username: username
            environment:
              encryptedVariables:
                cipherText: cipherText
                keyName: keyName
              variables:
                key: variables
              secretVariables:
                key: secretVariables
            barrier:
              name: name
            background: true
            displayName: displayName
            alwaysRun: true
            ignoreExitStatus: true
            script:
              path: path
              text: text
            timeout: timeout
            labels:
              key: labels
        runAsNonRoot: true
        permissiveSsh: true
        schedulingPolicy: SCHEDULING_POLICY_UNSPECIFIED
      properties:
        name:
          description: "Output only. TaskGroup name. The system generates this field\
            \ based on parent Job name. For example: \"projects/123456/locations/us-west1/jobs/job01/taskGroups/group01\"\
            ."
          readOnly: true
          title: name
          type: string
        parallelism:
          description: "Max number of tasks that can run in parallel. Default to min(task_count,\
            \ parallel tasks per job limit). See: [Job Limits](https://cloud.google.com/batch/quotas#job_limits).\
            \ Field parallelism must be 1 if the scheduling_policy is IN_ORDER."
          format: int64
          title: parallelism
          type: string
        permissiveSsh:
          description: "When true, Batch will configure SSH to allow passwordless\
            \ login between VMs running the Batch tasks in the same TaskGroup."
          title: permissiveSsh
          type: boolean
        requireHostsFile:
          description: "When true, Batch will populate a file with a list of all VMs\
            \ assigned to the TaskGroup and set the BATCH_HOSTS_FILE environment variable\
            \ to the path of that file. Defaults to false. The host file supports\
            \ up to 1000 VMs."
          title: requireHostsFile
          type: boolean
        runAsNonRoot:
          description: "Optional. If not set or set to false, Batch uses the root\
            \ user to execute runnables. If set to true, Batch runs the runnables\
            \ using a non-root user. Currently, the non-root user Batch used is generated\
            \ by OS Login. For more information, see [About OS Login](https://cloud.google.com/compute/docs/oslogin)."
          title: runAsNonRoot
          type: boolean
        schedulingPolicy:
          description: Scheduling policy for Tasks in the TaskGroup. The default value
            is AS_SOON_AS_POSSIBLE.
          enum:
          - SCHEDULING_POLICY_UNSPECIFIED
          - AS_SOON_AS_POSSIBLE
          - IN_ORDER
          title: schedulingPolicy
          type: string
        taskCount:
          description: Number of Tasks in the TaskGroup. Default is 1.
          format: int64
          title: taskCount
          type: string
        taskCountPerNode:
          description: "Max number of tasks that can be run on a VM at the same time.\
            \ If not specified, the system will decide a value based on available\
            \ compute resources on a VM and task requirements."
          format: int64
          title: taskCountPerNode
          type: string
        taskEnvironments:
          description: "An array of environment variable mappings, which are passed\
            \ to Tasks with matching indices. If task_environments is used then task_count\
            \ should not be specified in the request (and will be ignored). Task count\
            \ will be the length of task_environments. Tasks get a BATCH_TASK_INDEX\
            \ and BATCH_TASK_COUNT environment variable, in addition to any environment\
            \ variables set in task_environments, specifying the number of Tasks in\
            \ the Task's parent TaskGroup, and the specific Task's index in the TaskGroup\
            \ (0 through BATCH_TASK_COUNT - 1)."
          items:
            $ref: '#/components/schemas/Environment'
          title: taskEnvironments
          type: array
        taskSpec:
          $ref: '#/components/schemas/TaskSpec'
      title: TaskGroup
      type: object
    TaskGroupStatus:
      description: Aggregated task status for a TaskGroup.
      example:
        instances:
        - provisioningModel: PROVISIONING_MODEL_UNSPECIFIED
          taskPack: taskPack
          bootDisk:
            image: image
            sizeGb: sizeGb
            type: type
            diskInterface: diskInterface
            snapshot: snapshot
          machineType: machineType
        - provisioningModel: PROVISIONING_MODEL_UNSPECIFIED
          taskPack: taskPack
          bootDisk:
            image: image
            sizeGb: sizeGb
            type: type
            diskInterface: diskInterface
            snapshot: snapshot
          machineType: machineType
        counts:
          key: counts
      properties:
        counts:
          additionalProperties:
            format: int64
            type: string
          description: Count of task in each state in the TaskGroup. The map key is
            task state name.
          title: counts
          type: object
        instances:
          description: Status of instances allocated for the TaskGroup.
          items:
            $ref: '#/components/schemas/InstanceStatus'
          title: instances
          type: array
      title: TaskGroupStatus
      type: object
    TaskSpec:
      description: Spec of a task
      example:
        environment:
          encryptedVariables:
            cipherText: cipherText
            keyName: keyName
          variables:
            key: variables
          secretVariables:
            key: secretVariables
        environments:
          key: environments
        lifecyclePolicies:
        - actionCondition:
            exitCodes:
            - 6
            - 6
          action: ACTION_UNSPECIFIED
        - actionCondition:
            exitCodes:
            - 6
            - 6
          action: ACTION_UNSPECIFIED
        volumes:
        - mountPath: mountPath
          gcs:
            remotePath: remotePath
          mountOptions:
          - mountOptions
          - mountOptions
          nfs:
            server: server
            remotePath: remotePath
          deviceName: deviceName
        - mountPath: mountPath
          gcs:
            remotePath: remotePath
          mountOptions:
          - mountOptions
          - mountOptions
          nfs:
            server: server
            remotePath: remotePath
          deviceName: deviceName
        maxRunDuration: maxRunDuration
        maxRetryCount: 1
        computeResource:
          bootDiskMib: bootDiskMib
          cpuMilli: cpuMilli
          memoryMib: memoryMib
        runnables:
        - container:
            imageUri: imageUri
            password: password
            enableImageStreaming: true
            entrypoint: entrypoint
            options: options
            volumes:
            - volumes
            - volumes
            blockExternalNetwork: true
            commands:
            - commands
            - commands
            username: username
          environment:
            encryptedVariables:
              cipherText: cipherText
              keyName: keyName
            variables:
              key: variables
            secretVariables:
              key: secretVariables
          barrier:
            name: name
          background: true
          displayName: displayName
          alwaysRun: true
          ignoreExitStatus: true
          script:
            path: path
            text: text
          timeout: timeout
          labels:
            key: labels
        - container:
            imageUri: imageUri
            password: password
            enableImageStreaming: true
            entrypoint: entrypoint
            options: options
            volumes:
            - volumes
            - volumes
            blockExternalNetwork: true
            commands:
            - commands
            - commands
            username: username
          environment:
            encryptedVariables:
              cipherText: cipherText
              keyName: keyName
            variables:
              key: variables
            secretVariables:
              key: secretVariables
          barrier:
            name: name
          background: true
          displayName: displayName
          alwaysRun: true
          ignoreExitStatus: true
          script:
            path: path
            text: text
          timeout: timeout
          labels:
            key: labels
      properties:
        computeResource:
          $ref: '#/components/schemas/ComputeResource'
        environment:
          $ref: '#/components/schemas/Environment'
        environments:
          additionalProperties:
            type: string
          deprecated: true
          description: "Deprecated: please use environment(non-plural) instead."
          title: environments
          type: object
        lifecyclePolicies:
          description: "Lifecycle management schema when any task in a task group\
            \ is failed. Currently we only support one lifecycle policy. When the\
            \ lifecycle policy condition is met, the action in the policy will execute.\
            \ If task execution result does not meet with the defined lifecycle policy,\
            \ we consider it as the default policy. Default policy means if the exit\
            \ code is 0, exit task. If task ends with non-zero exit code, retry the\
            \ task with max_retry_count."
          items:
            $ref: '#/components/schemas/LifecyclePolicy'
          title: lifecyclePolicies
          type: array
        maxRetryCount:
          description: "Maximum number of retries on failures. The default, 0, which\
            \ means never retry. The valid value range is [0, 10]."
          format: int32
          title: maxRetryCount
          type: integer
        maxRunDuration:
          description: Maximum duration the task should run. The task will be killed
            and marked as FAILED if over this limit.
          format: google-duration
          title: maxRunDuration
          type: string
        runnables:
          description: "The sequence of scripts or containers to run for this Task.\
            \ Each Task using this TaskSpec executes its list of runnables in order.\
            \ The Task succeeds if all of its runnables either exit with a zero status\
            \ or any that exit with a non-zero status have the ignore_exit_status\
            \ flag. Background runnables are killed automatically (if they have not\
            \ already exited) a short time after all foreground runnables have completed.\
            \ Even though this is likely to result in a non-zero exit status for the\
            \ background runnable, these automatic kills are not treated as Task failures."
          items:
            $ref: '#/components/schemas/Runnable'
          title: runnables
          type: array
        volumes:
          description: Volumes to mount before running Tasks using this TaskSpec.
          items:
            $ref: '#/components/schemas/Volume'
          title: volumes
          type: array
      title: TaskSpec
      type: object
    TaskStatus:
      description: Status of a task
      example:
        state: STATE_UNSPECIFIED
        statusEvents:
        - taskState: STATE_UNSPECIFIED
          eventTime: eventTime
          description: description
          taskExecution:
            exitCode: 0
          type: type
        - taskState: STATE_UNSPECIFIED
          eventTime: eventTime
          description: description
          taskExecution:
            exitCode: 0
          type: type
      properties:
        state:
          description: Task state
          enum:
          - STATE_UNSPECIFIED
          - PENDING
          - ASSIGNED
          - RUNNING
          - FAILED
          - SUCCEEDED
          - UNEXECUTED
          title: state
          type: string
        statusEvents:
          description: Detailed info about why the state is reached.
          items:
            $ref: '#/components/schemas/StatusEvent'
          title: statusEvents
          type: array
      title: TaskStatus
      type: object
    Volume:
      description: Volume describes a volume and parameters for it to be mounted to
        a VM.
      example:
        mountPath: mountPath
        gcs:
          remotePath: remotePath
        mountOptions:
        - mountOptions
        - mountOptions
        nfs:
          server: server
          remotePath: remotePath
        deviceName: deviceName
      properties:
        deviceName:
          description: "Device name of an attached disk volume, which should align\
            \ with a device_name specified by job.allocation_policy.instances[0].policy.disks[i].device_name\
            \ or defined by the given instance template in job.allocation_policy.instances[0].instance_template."
          title: deviceName
          type: string
        gcs:
          $ref: '#/components/schemas/GCS'
        mountOptions:
          description: "For Google Cloud Storage (GCS), mount options are the options\
            \ supported by the gcsfuse tool (https://github.com/GoogleCloudPlatform/gcsfuse).\
            \ For existing persistent disks, mount options provided by the mount command\
            \ (https://man7.org/linux/man-pages/man8/mount.8.html) except writing\
            \ are supported. This is due to restrictions of multi-writer mode (https://cloud.google.com/compute/docs/disks/sharing-disks-between-vms).\
            \ For other attached disks and Network File System (NFS), mount options\
            \ are these supported by the mount command (https://man7.org/linux/man-pages/man8/mount.8.html)."
          items:
            type: string
          title: mountOptions
          type: array
        mountPath:
          description: "The mount path for the volume, e.g. /mnt/disks/share."
          title: mountPath
          type: string
        nfs:
          $ref: '#/components/schemas/NFS'
      title: Volume
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2c
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2c
