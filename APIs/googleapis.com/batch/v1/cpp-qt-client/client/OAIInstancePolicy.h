/**
 * Batch API
 * An API to manage the running of batch resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInstancePolicy.h
 *
 * InstancePolicy describes an instance type and resources attached to each VM created by this InstancePolicy.
 */

#ifndef OAIInstancePolicy_H
#define OAIInstancePolicy_H

#include <QJsonObject>

#include "OAIAccelerator.h"
#include "OAIAttachedDisk.h"
#include "OAIDisk.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccelerator;
class OAIDisk;
class OAIAttachedDisk;

class OAIInstancePolicy : public OAIObject {
public:
    OAIInstancePolicy();
    OAIInstancePolicy(QString json);
    ~OAIInstancePolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAccelerator> getAccelerators() const;
    void setAccelerators(const QList<OAIAccelerator> &accelerators);
    bool is_accelerators_Set() const;
    bool is_accelerators_Valid() const;

    OAIDisk getBootDisk() const;
    void setBootDisk(const OAIDisk &boot_disk);
    bool is_boot_disk_Set() const;
    bool is_boot_disk_Valid() const;

    QList<OAIAttachedDisk> getDisks() const;
    void setDisks(const QList<OAIAttachedDisk> &disks);
    bool is_disks_Set() const;
    bool is_disks_Valid() const;

    QString getMachineType() const;
    void setMachineType(const QString &machine_type);
    bool is_machine_type_Set() const;
    bool is_machine_type_Valid() const;

    QString getMinCpuPlatform() const;
    void setMinCpuPlatform(const QString &min_cpu_platform);
    bool is_min_cpu_platform_Set() const;
    bool is_min_cpu_platform_Valid() const;

    QString getProvisioningModel() const;
    void setProvisioningModel(const QString &provisioning_model);
    bool is_provisioning_model_Set() const;
    bool is_provisioning_model_Valid() const;

    QString getReservation() const;
    void setReservation(const QString &reservation);
    bool is_reservation_Set() const;
    bool is_reservation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAccelerator> m_accelerators;
    bool m_accelerators_isSet;
    bool m_accelerators_isValid;

    OAIDisk m_boot_disk;
    bool m_boot_disk_isSet;
    bool m_boot_disk_isValid;

    QList<OAIAttachedDisk> m_disks;
    bool m_disks_isSet;
    bool m_disks_isValid;

    QString m_machine_type;
    bool m_machine_type_isSet;
    bool m_machine_type_isValid;

    QString m_min_cpu_platform;
    bool m_min_cpu_platform_isSet;
    bool m_min_cpu_platform_isValid;

    QString m_provisioning_model;
    bool m_provisioning_model_isSet;
    bool m_provisioning_model_isValid;

    QString m_reservation;
    bool m_reservation_isSet;
    bool m_reservation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInstancePolicy)

#endif // OAIInstancePolicy_H
