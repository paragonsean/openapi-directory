/**
 * Batch API
 * An API to manage the running of batch resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAllocationPolicy.h
 *
 * A Job&#39;s resource allocation policy describes when, where, and how compute resources should be allocated for the Job.
 */

#ifndef OAIAllocationPolicy_H
#define OAIAllocationPolicy_H

#include <QJsonObject>

#include "OAIInstancePolicyOrTemplate.h"
#include "OAILocationPolicy.h"
#include "OAINetworkPolicy.h"
#include "OAIPlacementPolicy.h"
#include "OAIServiceAccount.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInstancePolicyOrTemplate;
class OAILocationPolicy;
class OAINetworkPolicy;
class OAIPlacementPolicy;
class OAIServiceAccount;

class OAIAllocationPolicy : public OAIObject {
public:
    OAIAllocationPolicy();
    OAIAllocationPolicy(QString json);
    ~OAIAllocationPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIInstancePolicyOrTemplate> getInstances() const;
    void setInstances(const QList<OAIInstancePolicyOrTemplate> &instances);
    bool is_instances_Set() const;
    bool is_instances_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    OAILocationPolicy getLocation() const;
    void setLocation(const OAILocationPolicy &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    OAINetworkPolicy getNetwork() const;
    void setNetwork(const OAINetworkPolicy &network);
    bool is_network_Set() const;
    bool is_network_Valid() const;

    OAIPlacementPolicy getPlacement() const;
    void setPlacement(const OAIPlacementPolicy &placement);
    bool is_placement_Set() const;
    bool is_placement_Valid() const;

    OAIServiceAccount getServiceAccount() const;
    void setServiceAccount(const OAIServiceAccount &service_account);
    bool is_service_account_Set() const;
    bool is_service_account_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIInstancePolicyOrTemplate> m_instances;
    bool m_instances_isSet;
    bool m_instances_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    OAILocationPolicy m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    OAINetworkPolicy m_network;
    bool m_network_isSet;
    bool m_network_isValid;

    OAIPlacementPolicy m_placement;
    bool m_placement_isSet;
    bool m_placement_isValid;

    OAIServiceAccount m_service_account;
    bool m_service_account_isSet;
    bool m_service_account_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAllocationPolicy)

#endif // OAIAllocationPolicy_H
