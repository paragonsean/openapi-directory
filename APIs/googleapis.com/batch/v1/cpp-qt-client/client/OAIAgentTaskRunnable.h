/**
 * Batch API
 * An API to manage the running of batch resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAgentTaskRunnable.h
 *
 * AgentTaskRunnable is the Runnable representation between Agent and CLH communication.
 */

#ifndef OAIAgentTaskRunnable_H
#define OAIAgentTaskRunnable_H

#include <QJsonObject>

#include "OAIAgentContainer.h"
#include "OAIAgentEnvironment.h"
#include "OAIAgentScript.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAgentContainer;
class OAIAgentEnvironment;
class OAIAgentScript;

class OAIAgentTaskRunnable : public OAIObject {
public:
    OAIAgentTaskRunnable();
    OAIAgentTaskRunnable(QString json);
    ~OAIAgentTaskRunnable() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAlwaysRun() const;
    void setAlwaysRun(const bool &always_run);
    bool is_always_run_Set() const;
    bool is_always_run_Valid() const;

    bool isBackground() const;
    void setBackground(const bool &background);
    bool is_background_Set() const;
    bool is_background_Valid() const;

    OAIAgentContainer getContainer() const;
    void setContainer(const OAIAgentContainer &container);
    bool is_container_Set() const;
    bool is_container_Valid() const;

    OAIAgentEnvironment getEnvironment() const;
    void setEnvironment(const OAIAgentEnvironment &environment);
    bool is_environment_Set() const;
    bool is_environment_Valid() const;

    bool isIgnoreExitStatus() const;
    void setIgnoreExitStatus(const bool &ignore_exit_status);
    bool is_ignore_exit_status_Set() const;
    bool is_ignore_exit_status_Valid() const;

    OAIAgentScript getScript() const;
    void setScript(const OAIAgentScript &script);
    bool is_script_Set() const;
    bool is_script_Valid() const;

    QString getTimeout() const;
    void setTimeout(const QString &timeout);
    bool is_timeout_Set() const;
    bool is_timeout_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_always_run;
    bool m_always_run_isSet;
    bool m_always_run_isValid;

    bool m_background;
    bool m_background_isSet;
    bool m_background_isValid;

    OAIAgentContainer m_container;
    bool m_container_isSet;
    bool m_container_isValid;

    OAIAgentEnvironment m_environment;
    bool m_environment_isSet;
    bool m_environment_isValid;

    bool m_ignore_exit_status;
    bool m_ignore_exit_status_isSet;
    bool m_ignore_exit_status_isValid;

    OAIAgentScript m_script;
    bool m_script_isSet;
    bool m_script_isValid;

    QString m_timeout;
    bool m_timeout_isSet;
    bool m_timeout_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAgentTaskRunnable)

#endif // OAIAgentTaskRunnable_H
