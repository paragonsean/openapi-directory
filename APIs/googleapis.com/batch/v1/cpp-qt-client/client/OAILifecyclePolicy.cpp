/**
 * Batch API
 * An API to manage the running of batch resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILifecyclePolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILifecyclePolicy::OAILifecyclePolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILifecyclePolicy::OAILifecyclePolicy() {
    this->initializeModel();
}

OAILifecyclePolicy::~OAILifecyclePolicy() {}

void OAILifecyclePolicy::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_action_condition_isSet = false;
    m_action_condition_isValid = false;
}

void OAILifecyclePolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILifecyclePolicy::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("action")]);
    m_action_isSet = !json[QString("action")].isNull() && m_action_isValid;

    m_action_condition_isValid = ::OpenAPI::fromJsonValue(m_action_condition, json[QString("actionCondition")]);
    m_action_condition_isSet = !json[QString("actionCondition")].isNull() && m_action_condition_isValid;
}

QString OAILifecyclePolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILifecyclePolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_action_isSet) {
        obj.insert(QString("action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_action_condition.isSet()) {
        obj.insert(QString("actionCondition"), ::OpenAPI::toJsonValue(m_action_condition));
    }
    return obj;
}

QString OAILifecyclePolicy::getAction() const {
    return m_action;
}
void OAILifecyclePolicy::setAction(const QString &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAILifecyclePolicy::is_action_Set() const{
    return m_action_isSet;
}

bool OAILifecyclePolicy::is_action_Valid() const{
    return m_action_isValid;
}

OAIActionCondition OAILifecyclePolicy::getActionCondition() const {
    return m_action_condition;
}
void OAILifecyclePolicy::setActionCondition(const OAIActionCondition &action_condition) {
    m_action_condition = action_condition;
    m_action_condition_isSet = true;
}

bool OAILifecyclePolicy::is_action_condition_Set() const{
    return m_action_condition_isSet;
}

bool OAILifecyclePolicy::is_action_condition_Valid() const{
    return m_action_condition_isValid;
}

bool OAILifecyclePolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_action_condition.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILifecyclePolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
