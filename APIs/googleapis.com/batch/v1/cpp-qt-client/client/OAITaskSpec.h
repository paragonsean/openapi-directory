/**
 * Batch API
 * An API to manage the running of batch resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITaskSpec.h
 *
 * Spec of a task
 */

#ifndef OAITaskSpec_H
#define OAITaskSpec_H

#include <QJsonObject>

#include "OAIComputeResource.h"
#include "OAIEnvironment.h"
#include "OAILifecyclePolicy.h"
#include "OAIRunnable.h"
#include "OAIVolume.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIComputeResource;
class OAIEnvironment;
class OAILifecyclePolicy;
class OAIRunnable;
class OAIVolume;

class OAITaskSpec : public OAIObject {
public:
    OAITaskSpec();
    OAITaskSpec(QString json);
    ~OAITaskSpec() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIComputeResource getComputeResource() const;
    void setComputeResource(const OAIComputeResource &compute_resource);
    bool is_compute_resource_Set() const;
    bool is_compute_resource_Valid() const;

    OAIEnvironment getEnvironment() const;
    void setEnvironment(const OAIEnvironment &environment);
    bool is_environment_Set() const;
    bool is_environment_Valid() const;

    Q_DECL_DEPRECATED QMap<QString, QString> getEnvironments() const;
    Q_DECL_DEPRECATED void setEnvironments(const QMap<QString, QString> &environments);
    Q_DECL_DEPRECATED bool is_environments_Set() const;
    Q_DECL_DEPRECATED bool is_environments_Valid() const;

    QList<OAILifecyclePolicy> getLifecyclePolicies() const;
    void setLifecyclePolicies(const QList<OAILifecyclePolicy> &lifecycle_policies);
    bool is_lifecycle_policies_Set() const;
    bool is_lifecycle_policies_Valid() const;

    qint32 getMaxRetryCount() const;
    void setMaxRetryCount(const qint32 &max_retry_count);
    bool is_max_retry_count_Set() const;
    bool is_max_retry_count_Valid() const;

    QString getMaxRunDuration() const;
    void setMaxRunDuration(const QString &max_run_duration);
    bool is_max_run_duration_Set() const;
    bool is_max_run_duration_Valid() const;

    QList<OAIRunnable> getRunnables() const;
    void setRunnables(const QList<OAIRunnable> &runnables);
    bool is_runnables_Set() const;
    bool is_runnables_Valid() const;

    QList<OAIVolume> getVolumes() const;
    void setVolumes(const QList<OAIVolume> &volumes);
    bool is_volumes_Set() const;
    bool is_volumes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIComputeResource m_compute_resource;
    bool m_compute_resource_isSet;
    bool m_compute_resource_isValid;

    OAIEnvironment m_environment;
    bool m_environment_isSet;
    bool m_environment_isValid;

    QMap<QString, QString> m_environments;
    bool m_environments_isSet;
    bool m_environments_isValid;

    QList<OAILifecyclePolicy> m_lifecycle_policies;
    bool m_lifecycle_policies_isSet;
    bool m_lifecycle_policies_isValid;

    qint32 m_max_retry_count;
    bool m_max_retry_count_isSet;
    bool m_max_retry_count_isValid;

    QString m_max_run_duration;
    bool m_max_run_duration_isSet;
    bool m_max_run_duration_isValid;

    QList<OAIRunnable> m_runnables;
    bool m_runnables_isSet;
    bool m_runnables_isValid;

    QList<OAIVolume> m_volumes;
    bool m_volumes_isSet;
    bool m_volumes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITaskSpec)

#endif // OAITaskSpec_H
