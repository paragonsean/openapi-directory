/**
 * Batch API
 * An API to manage the running of batch resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInstancePolicyOrTemplate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInstancePolicyOrTemplate::OAIInstancePolicyOrTemplate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInstancePolicyOrTemplate::OAIInstancePolicyOrTemplate() {
    this->initializeModel();
}

OAIInstancePolicyOrTemplate::~OAIInstancePolicyOrTemplate() {}

void OAIInstancePolicyOrTemplate::initializeModel() {

    m_install_gpu_drivers_isSet = false;
    m_install_gpu_drivers_isValid = false;

    m_instance_template_isSet = false;
    m_instance_template_isValid = false;

    m_policy_isSet = false;
    m_policy_isValid = false;
}

void OAIInstancePolicyOrTemplate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInstancePolicyOrTemplate::fromJsonObject(QJsonObject json) {

    m_install_gpu_drivers_isValid = ::OpenAPI::fromJsonValue(m_install_gpu_drivers, json[QString("installGpuDrivers")]);
    m_install_gpu_drivers_isSet = !json[QString("installGpuDrivers")].isNull() && m_install_gpu_drivers_isValid;

    m_instance_template_isValid = ::OpenAPI::fromJsonValue(m_instance_template, json[QString("instanceTemplate")]);
    m_instance_template_isSet = !json[QString("instanceTemplate")].isNull() && m_instance_template_isValid;

    m_policy_isValid = ::OpenAPI::fromJsonValue(m_policy, json[QString("policy")]);
    m_policy_isSet = !json[QString("policy")].isNull() && m_policy_isValid;
}

QString OAIInstancePolicyOrTemplate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInstancePolicyOrTemplate::asJsonObject() const {
    QJsonObject obj;
    if (m_install_gpu_drivers_isSet) {
        obj.insert(QString("installGpuDrivers"), ::OpenAPI::toJsonValue(m_install_gpu_drivers));
    }
    if (m_instance_template_isSet) {
        obj.insert(QString("instanceTemplate"), ::OpenAPI::toJsonValue(m_instance_template));
    }
    if (m_policy.isSet()) {
        obj.insert(QString("policy"), ::OpenAPI::toJsonValue(m_policy));
    }
    return obj;
}

bool OAIInstancePolicyOrTemplate::isInstallGpuDrivers() const {
    return m_install_gpu_drivers;
}
void OAIInstancePolicyOrTemplate::setInstallGpuDrivers(const bool &install_gpu_drivers) {
    m_install_gpu_drivers = install_gpu_drivers;
    m_install_gpu_drivers_isSet = true;
}

bool OAIInstancePolicyOrTemplate::is_install_gpu_drivers_Set() const{
    return m_install_gpu_drivers_isSet;
}

bool OAIInstancePolicyOrTemplate::is_install_gpu_drivers_Valid() const{
    return m_install_gpu_drivers_isValid;
}

QString OAIInstancePolicyOrTemplate::getInstanceTemplate() const {
    return m_instance_template;
}
void OAIInstancePolicyOrTemplate::setInstanceTemplate(const QString &instance_template) {
    m_instance_template = instance_template;
    m_instance_template_isSet = true;
}

bool OAIInstancePolicyOrTemplate::is_instance_template_Set() const{
    return m_instance_template_isSet;
}

bool OAIInstancePolicyOrTemplate::is_instance_template_Valid() const{
    return m_instance_template_isValid;
}

OAIInstancePolicy OAIInstancePolicyOrTemplate::getPolicy() const {
    return m_policy;
}
void OAIInstancePolicyOrTemplate::setPolicy(const OAIInstancePolicy &policy) {
    m_policy = policy;
    m_policy_isSet = true;
}

bool OAIInstancePolicyOrTemplate::is_policy_Set() const{
    return m_policy_isSet;
}

bool OAIInstancePolicyOrTemplate::is_policy_Valid() const{
    return m_policy_isValid;
}

bool OAIInstancePolicyOrTemplate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_install_gpu_drivers_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instance_template_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInstancePolicyOrTemplate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
