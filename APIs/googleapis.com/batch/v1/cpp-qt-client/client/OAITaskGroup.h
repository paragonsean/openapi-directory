/**
 * Batch API
 * An API to manage the running of batch resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITaskGroup.h
 *
 * A TaskGroup defines one or more Tasks that all share the same TaskSpec.
 */

#ifndef OAITaskGroup_H
#define OAITaskGroup_H

#include <QJsonObject>

#include "OAIEnvironment.h"
#include "OAITaskSpec.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEnvironment;
class OAITaskSpec;

class OAITaskGroup : public OAIObject {
public:
    OAITaskGroup();
    OAITaskGroup(QString json);
    ~OAITaskGroup() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getParallelism() const;
    void setParallelism(const QString &parallelism);
    bool is_parallelism_Set() const;
    bool is_parallelism_Valid() const;

    bool isPermissiveSsh() const;
    void setPermissiveSsh(const bool &permissive_ssh);
    bool is_permissive_ssh_Set() const;
    bool is_permissive_ssh_Valid() const;

    bool isRequireHostsFile() const;
    void setRequireHostsFile(const bool &require_hosts_file);
    bool is_require_hosts_file_Set() const;
    bool is_require_hosts_file_Valid() const;

    bool isRunAsNonRoot() const;
    void setRunAsNonRoot(const bool &run_as_non_root);
    bool is_run_as_non_root_Set() const;
    bool is_run_as_non_root_Valid() const;

    QString getSchedulingPolicy() const;
    void setSchedulingPolicy(const QString &scheduling_policy);
    bool is_scheduling_policy_Set() const;
    bool is_scheduling_policy_Valid() const;

    QString getTaskCount() const;
    void setTaskCount(const QString &task_count);
    bool is_task_count_Set() const;
    bool is_task_count_Valid() const;

    QString getTaskCountPerNode() const;
    void setTaskCountPerNode(const QString &task_count_per_node);
    bool is_task_count_per_node_Set() const;
    bool is_task_count_per_node_Valid() const;

    QList<OAIEnvironment> getTaskEnvironments() const;
    void setTaskEnvironments(const QList<OAIEnvironment> &task_environments);
    bool is_task_environments_Set() const;
    bool is_task_environments_Valid() const;

    OAITaskSpec getTaskSpec() const;
    void setTaskSpec(const OAITaskSpec &task_spec);
    bool is_task_spec_Set() const;
    bool is_task_spec_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_parallelism;
    bool m_parallelism_isSet;
    bool m_parallelism_isValid;

    bool m_permissive_ssh;
    bool m_permissive_ssh_isSet;
    bool m_permissive_ssh_isValid;

    bool m_require_hosts_file;
    bool m_require_hosts_file_isSet;
    bool m_require_hosts_file_isValid;

    bool m_run_as_non_root;
    bool m_run_as_non_root_isSet;
    bool m_run_as_non_root_isValid;

    QString m_scheduling_policy;
    bool m_scheduling_policy_isSet;
    bool m_scheduling_policy_isValid;

    QString m_task_count;
    bool m_task_count_isSet;
    bool m_task_count_isValid;

    QString m_task_count_per_node;
    bool m_task_count_per_node_isSet;
    bool m_task_count_per_node_isValid;

    QList<OAIEnvironment> m_task_environments;
    bool m_task_environments_isSet;
    bool m_task_environments_isValid;

    OAITaskSpec m_task_spec;
    bool m_task_spec_isSet;
    bool m_task_spec_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITaskGroup)

#endif // OAITaskGroup_H
