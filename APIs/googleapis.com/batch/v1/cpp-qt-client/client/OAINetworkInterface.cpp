/**
 * Batch API
 * An API to manage the running of batch resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINetworkInterface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINetworkInterface::OAINetworkInterface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINetworkInterface::OAINetworkInterface() {
    this->initializeModel();
}

OAINetworkInterface::~OAINetworkInterface() {}

void OAINetworkInterface::initializeModel() {

    m_network_isSet = false;
    m_network_isValid = false;

    m_no_external_ip_address_isSet = false;
    m_no_external_ip_address_isValid = false;

    m_subnetwork_isSet = false;
    m_subnetwork_isValid = false;
}

void OAINetworkInterface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINetworkInterface::fromJsonObject(QJsonObject json) {

    m_network_isValid = ::OpenAPI::fromJsonValue(m_network, json[QString("network")]);
    m_network_isSet = !json[QString("network")].isNull() && m_network_isValid;

    m_no_external_ip_address_isValid = ::OpenAPI::fromJsonValue(m_no_external_ip_address, json[QString("noExternalIpAddress")]);
    m_no_external_ip_address_isSet = !json[QString("noExternalIpAddress")].isNull() && m_no_external_ip_address_isValid;

    m_subnetwork_isValid = ::OpenAPI::fromJsonValue(m_subnetwork, json[QString("subnetwork")]);
    m_subnetwork_isSet = !json[QString("subnetwork")].isNull() && m_subnetwork_isValid;
}

QString OAINetworkInterface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINetworkInterface::asJsonObject() const {
    QJsonObject obj;
    if (m_network_isSet) {
        obj.insert(QString("network"), ::OpenAPI::toJsonValue(m_network));
    }
    if (m_no_external_ip_address_isSet) {
        obj.insert(QString("noExternalIpAddress"), ::OpenAPI::toJsonValue(m_no_external_ip_address));
    }
    if (m_subnetwork_isSet) {
        obj.insert(QString("subnetwork"), ::OpenAPI::toJsonValue(m_subnetwork));
    }
    return obj;
}

QString OAINetworkInterface::getNetwork() const {
    return m_network;
}
void OAINetworkInterface::setNetwork(const QString &network) {
    m_network = network;
    m_network_isSet = true;
}

bool OAINetworkInterface::is_network_Set() const{
    return m_network_isSet;
}

bool OAINetworkInterface::is_network_Valid() const{
    return m_network_isValid;
}

bool OAINetworkInterface::isNoExternalIpAddress() const {
    return m_no_external_ip_address;
}
void OAINetworkInterface::setNoExternalIpAddress(const bool &no_external_ip_address) {
    m_no_external_ip_address = no_external_ip_address;
    m_no_external_ip_address_isSet = true;
}

bool OAINetworkInterface::is_no_external_ip_address_Set() const{
    return m_no_external_ip_address_isSet;
}

bool OAINetworkInterface::is_no_external_ip_address_Valid() const{
    return m_no_external_ip_address_isValid;
}

QString OAINetworkInterface::getSubnetwork() const {
    return m_subnetwork;
}
void OAINetworkInterface::setSubnetwork(const QString &subnetwork) {
    m_subnetwork = subnetwork;
    m_subnetwork_isSet = true;
}

bool OAINetworkInterface::is_subnetwork_Set() const{
    return m_subnetwork_isSet;
}

bool OAINetworkInterface::is_subnetwork_Valid() const{
    return m_subnetwork_isValid;
}

bool OAINetworkInterface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_network_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_no_external_ip_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subnetwork_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINetworkInterface::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
