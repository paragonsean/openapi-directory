/**
 * Batch API
 * An API to manage the running of batch resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContainer.h
 *
 * Container runnable.
 */

#ifndef OAIContainer_H
#define OAIContainer_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIContainer : public OAIObject {
public:
    OAIContainer();
    OAIContainer(QString json);
    ~OAIContainer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isBlockExternalNetwork() const;
    void setBlockExternalNetwork(const bool &block_external_network);
    bool is_block_external_network_Set() const;
    bool is_block_external_network_Valid() const;

    QList<QString> getCommands() const;
    void setCommands(const QList<QString> &commands);
    bool is_commands_Set() const;
    bool is_commands_Valid() const;

    bool isEnableImageStreaming() const;
    void setEnableImageStreaming(const bool &enable_image_streaming);
    bool is_enable_image_streaming_Set() const;
    bool is_enable_image_streaming_Valid() const;

    QString getEntrypoint() const;
    void setEntrypoint(const QString &entrypoint);
    bool is_entrypoint_Set() const;
    bool is_entrypoint_Valid() const;

    QString getImageUri() const;
    void setImageUri(const QString &image_uri);
    bool is_image_uri_Set() const;
    bool is_image_uri_Valid() const;

    QString getOptions() const;
    void setOptions(const QString &options);
    bool is_options_Set() const;
    bool is_options_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    QList<QString> getVolumes() const;
    void setVolumes(const QList<QString> &volumes);
    bool is_volumes_Set() const;
    bool is_volumes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_block_external_network;
    bool m_block_external_network_isSet;
    bool m_block_external_network_isValid;

    QList<QString> m_commands;
    bool m_commands_isSet;
    bool m_commands_isValid;

    bool m_enable_image_streaming;
    bool m_enable_image_streaming_isSet;
    bool m_enable_image_streaming_isValid;

    QString m_entrypoint;
    bool m_entrypoint_isSet;
    bool m_entrypoint_isValid;

    QString m_image_uri;
    bool m_image_uri_isSet;
    bool m_image_uri_isValid;

    QString m_options;
    bool m_options_isSet;
    bool m_options_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;

    QList<QString> m_volumes;
    bool m_volumes_isSet;
    bool m_volumes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContainer)

#endif // OAIContainer_H
