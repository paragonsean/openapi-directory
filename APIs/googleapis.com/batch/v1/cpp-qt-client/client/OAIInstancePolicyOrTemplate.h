/**
 * Batch API
 * An API to manage the running of batch resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInstancePolicyOrTemplate.h
 *
 * InstancePolicyOrTemplate lets you define the type of resources to use for this job either with an InstancePolicy or an instance template. If undefined, Batch picks the type of VM to use and doesn&#39;t include optional VM resources such as GPUs and extra disks.
 */

#ifndef OAIInstancePolicyOrTemplate_H
#define OAIInstancePolicyOrTemplate_H

#include <QJsonObject>

#include "OAIInstancePolicy.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInstancePolicy;

class OAIInstancePolicyOrTemplate : public OAIObject {
public:
    OAIInstancePolicyOrTemplate();
    OAIInstancePolicyOrTemplate(QString json);
    ~OAIInstancePolicyOrTemplate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isInstallGpuDrivers() const;
    void setInstallGpuDrivers(const bool &install_gpu_drivers);
    bool is_install_gpu_drivers_Set() const;
    bool is_install_gpu_drivers_Valid() const;

    QString getInstanceTemplate() const;
    void setInstanceTemplate(const QString &instance_template);
    bool is_instance_template_Set() const;
    bool is_instance_template_Valid() const;

    OAIInstancePolicy getPolicy() const;
    void setPolicy(const OAIInstancePolicy &policy);
    bool is_policy_Set() const;
    bool is_policy_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_install_gpu_drivers;
    bool m_install_gpu_drivers_isSet;
    bool m_install_gpu_drivers_isValid;

    QString m_instance_template;
    bool m_instance_template_isSet;
    bool m_instance_template_isValid;

    OAIInstancePolicy m_policy;
    bool m_policy_isSet;
    bool m_policy_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInstancePolicyOrTemplate)

#endif // OAIInstancePolicyOrTemplate_H
