/**
 * Batch API
 * An API to manage the running of batch resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAgentMetadata.h
 *
 * VM Agent Metadata.
 */

#ifndef OAIAgentMetadata_H
#define OAIAgentMetadata_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAgentMetadata : public OAIObject {
public:
    OAIAgentMetadata();
    OAIAgentMetadata(QString json);
    ~OAIAgentMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    Q_DECL_DEPRECATED QString getCreationTime() const;
    Q_DECL_DEPRECATED void setCreationTime(const QString &creation_time);
    Q_DECL_DEPRECATED bool is_creation_time_Set() const;
    Q_DECL_DEPRECATED bool is_creation_time_Valid() const;

    QString getCreator() const;
    void setCreator(const QString &creator);
    bool is_creator_Set() const;
    bool is_creator_Valid() const;

    QString getImageVersion() const;
    void setImageVersion(const QString &image_version);
    bool is_image_version_Set() const;
    bool is_image_version_Valid() const;

    QString getInstance() const;
    void setInstance(const QString &instance);
    bool is_instance_Set() const;
    bool is_instance_Valid() const;

    QString getInstanceId() const;
    void setInstanceId(const QString &instance_id);
    bool is_instance_id_Set() const;
    bool is_instance_id_Valid() const;

    bool isInstancePreemptionNoticeReceived() const;
    void setInstancePreemptionNoticeReceived(const bool &instance_preemption_notice_received);
    bool is_instance_preemption_notice_received_Set() const;
    bool is_instance_preemption_notice_received_Valid() const;

    QMap<QString, QString> getOsRelease() const;
    void setOsRelease(const QMap<QString, QString> &os_release);
    bool is_os_release_Set() const;
    bool is_os_release_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QString getZone() const;
    void setZone(const QString &zone);
    bool is_zone_Set() const;
    bool is_zone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_creator;
    bool m_creator_isSet;
    bool m_creator_isValid;

    QString m_image_version;
    bool m_image_version_isSet;
    bool m_image_version_isValid;

    QString m_instance;
    bool m_instance_isSet;
    bool m_instance_isValid;

    QString m_instance_id;
    bool m_instance_id_isSet;
    bool m_instance_id_isValid;

    bool m_instance_preemption_notice_received;
    bool m_instance_preemption_notice_received_isSet;
    bool m_instance_preemption_notice_received_isValid;

    QMap<QString, QString> m_os_release;
    bool m_os_release_isSet;
    bool m_os_release_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QString m_zone;
    bool m_zone_isSet;
    bool m_zone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAgentMetadata)

#endif // OAIAgentMetadata_H
