/**
 * Batch API
 * An API to manage the running of batch resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRunnable.h
 *
 * Runnable describes instructions for executing a specific script or container as part of a Task.
 */

#ifndef OAIRunnable_H
#define OAIRunnable_H

#include <QJsonObject>

#include "OAIBarrier.h"
#include "OAIContainer.h"
#include "OAIEnvironment.h"
#include "OAIScript.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBarrier;
class OAIContainer;
class OAIEnvironment;
class OAIScript;

class OAIRunnable : public OAIObject {
public:
    OAIRunnable();
    OAIRunnable(QString json);
    ~OAIRunnable() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAlwaysRun() const;
    void setAlwaysRun(const bool &always_run);
    bool is_always_run_Set() const;
    bool is_always_run_Valid() const;

    bool isBackground() const;
    void setBackground(const bool &background);
    bool is_background_Set() const;
    bool is_background_Valid() const;

    OAIBarrier getBarrier() const;
    void setBarrier(const OAIBarrier &barrier);
    bool is_barrier_Set() const;
    bool is_barrier_Valid() const;

    OAIContainer getContainer() const;
    void setContainer(const OAIContainer &container);
    bool is_container_Set() const;
    bool is_container_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    OAIEnvironment getEnvironment() const;
    void setEnvironment(const OAIEnvironment &environment);
    bool is_environment_Set() const;
    bool is_environment_Valid() const;

    bool isIgnoreExitStatus() const;
    void setIgnoreExitStatus(const bool &ignore_exit_status);
    bool is_ignore_exit_status_Set() const;
    bool is_ignore_exit_status_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    OAIScript getScript() const;
    void setScript(const OAIScript &script);
    bool is_script_Set() const;
    bool is_script_Valid() const;

    QString getTimeout() const;
    void setTimeout(const QString &timeout);
    bool is_timeout_Set() const;
    bool is_timeout_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_always_run;
    bool m_always_run_isSet;
    bool m_always_run_isValid;

    bool m_background;
    bool m_background_isSet;
    bool m_background_isValid;

    OAIBarrier m_barrier;
    bool m_barrier_isSet;
    bool m_barrier_isValid;

    OAIContainer m_container;
    bool m_container_isSet;
    bool m_container_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    OAIEnvironment m_environment;
    bool m_environment_isSet;
    bool m_environment_isValid;

    bool m_ignore_exit_status;
    bool m_ignore_exit_status_isSet;
    bool m_ignore_exit_status_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    OAIScript m_script;
    bool m_script_isSet;
    bool m_script_isValid;

    QString m_timeout;
    bool m_timeout_isSet;
    bool m_timeout_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRunnable)

#endif // OAIRunnable_H
