/**
 * Batch API
 * An API to manage the running of batch resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReportAgentStateRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReportAgentStateRequest::OAIReportAgentStateRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReportAgentStateRequest::OAIReportAgentStateRequest() {
    this->initializeModel();
}

OAIReportAgentStateRequest::~OAIReportAgentStateRequest() {}

void OAIReportAgentStateRequest::initializeModel() {

    m_agent_info_isSet = false;
    m_agent_info_isValid = false;

    m_agent_timing_info_isSet = false;
    m_agent_timing_info_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;
}

void OAIReportAgentStateRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReportAgentStateRequest::fromJsonObject(QJsonObject json) {

    m_agent_info_isValid = ::OpenAPI::fromJsonValue(m_agent_info, json[QString("agentInfo")]);
    m_agent_info_isSet = !json[QString("agentInfo")].isNull() && m_agent_info_isValid;

    m_agent_timing_info_isValid = ::OpenAPI::fromJsonValue(m_agent_timing_info, json[QString("agentTimingInfo")]);
    m_agent_timing_info_isSet = !json[QString("agentTimingInfo")].isNull() && m_agent_timing_info_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;
}

QString OAIReportAgentStateRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReportAgentStateRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_agent_info.isSet()) {
        obj.insert(QString("agentInfo"), ::OpenAPI::toJsonValue(m_agent_info));
    }
    if (m_agent_timing_info.isSet()) {
        obj.insert(QString("agentTimingInfo"), ::OpenAPI::toJsonValue(m_agent_timing_info));
    }
    if (m_metadata.isSet()) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    return obj;
}

OAIAgentInfo OAIReportAgentStateRequest::getAgentInfo() const {
    return m_agent_info;
}
void OAIReportAgentStateRequest::setAgentInfo(const OAIAgentInfo &agent_info) {
    m_agent_info = agent_info;
    m_agent_info_isSet = true;
}

bool OAIReportAgentStateRequest::is_agent_info_Set() const{
    return m_agent_info_isSet;
}

bool OAIReportAgentStateRequest::is_agent_info_Valid() const{
    return m_agent_info_isValid;
}

OAIAgentTimingInfo OAIReportAgentStateRequest::getAgentTimingInfo() const {
    return m_agent_timing_info;
}
void OAIReportAgentStateRequest::setAgentTimingInfo(const OAIAgentTimingInfo &agent_timing_info) {
    m_agent_timing_info = agent_timing_info;
    m_agent_timing_info_isSet = true;
}

bool OAIReportAgentStateRequest::is_agent_timing_info_Set() const{
    return m_agent_timing_info_isSet;
}

bool OAIReportAgentStateRequest::is_agent_timing_info_Valid() const{
    return m_agent_timing_info_isValid;
}

OAIAgentMetadata OAIReportAgentStateRequest::getMetadata() const {
    return m_metadata;
}
void OAIReportAgentStateRequest::setMetadata(const OAIAgentMetadata &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIReportAgentStateRequest::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIReportAgentStateRequest::is_metadata_Valid() const{
    return m_metadata_isValid;
}

bool OAIReportAgentStateRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_agent_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_agent_timing_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReportAgentStateRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
