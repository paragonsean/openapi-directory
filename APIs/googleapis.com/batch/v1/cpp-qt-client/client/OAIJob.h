/**
 * Batch API
 * An API to manage the running of batch resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJob.h
 *
 * The Cloud Batch Job description.
 */

#ifndef OAIJob_H
#define OAIJob_H

#include <QJsonObject>

#include "OAIAllocationPolicy.h"
#include "OAIJobNotification.h"
#include "OAIJobStatus.h"
#include "OAILogsPolicy.h"
#include "OAITaskGroup.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAllocationPolicy;
class OAILogsPolicy;
class OAIJobNotification;
class OAIJobStatus;
class OAITaskGroup;

class OAIJob : public OAIObject {
public:
    OAIJob();
    OAIJob(QString json);
    ~OAIJob() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAllocationPolicy getAllocationPolicy() const;
    void setAllocationPolicy(const OAIAllocationPolicy &allocation_policy);
    bool is_allocation_policy_Set() const;
    bool is_allocation_policy_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    OAILogsPolicy getLogsPolicy() const;
    void setLogsPolicy(const OAILogsPolicy &logs_policy);
    bool is_logs_policy_Set() const;
    bool is_logs_policy_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIJobNotification> getNotifications() const;
    void setNotifications(const QList<OAIJobNotification> &notifications);
    bool is_notifications_Set() const;
    bool is_notifications_Valid() const;

    QString getPriority() const;
    void setPriority(const QString &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    OAIJobStatus getStatus() const;
    void setStatus(const OAIJobStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<OAITaskGroup> getTaskGroups() const;
    void setTaskGroups(const QList<OAITaskGroup> &task_groups);
    bool is_task_groups_Set() const;
    bool is_task_groups_Valid() const;

    QString getUid() const;
    void setUid(const QString &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAllocationPolicy m_allocation_policy;
    bool m_allocation_policy_isSet;
    bool m_allocation_policy_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    OAILogsPolicy m_logs_policy;
    bool m_logs_policy_isSet;
    bool m_logs_policy_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIJobNotification> m_notifications;
    bool m_notifications_isSet;
    bool m_notifications_isValid;

    QString m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    OAIJobStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<OAITaskGroup> m_task_groups;
    bool m_task_groups_isSet;
    bool m_task_groups_isValid;

    QString m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJob)

#endif // OAIJob_H
