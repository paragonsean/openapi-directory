/**
 * Batch API
 * An API to manage the running of batch resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPlacementPolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPlacementPolicy::OAIPlacementPolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPlacementPolicy::OAIPlacementPolicy() {
    this->initializeModel();
}

OAIPlacementPolicy::~OAIPlacementPolicy() {}

void OAIPlacementPolicy::initializeModel() {

    m_collocation_isSet = false;
    m_collocation_isValid = false;

    m_max_distance_isSet = false;
    m_max_distance_isValid = false;
}

void OAIPlacementPolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPlacementPolicy::fromJsonObject(QJsonObject json) {

    m_collocation_isValid = ::OpenAPI::fromJsonValue(m_collocation, json[QString("collocation")]);
    m_collocation_isSet = !json[QString("collocation")].isNull() && m_collocation_isValid;

    m_max_distance_isValid = ::OpenAPI::fromJsonValue(m_max_distance, json[QString("maxDistance")]);
    m_max_distance_isSet = !json[QString("maxDistance")].isNull() && m_max_distance_isValid;
}

QString OAIPlacementPolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPlacementPolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_collocation_isSet) {
        obj.insert(QString("collocation"), ::OpenAPI::toJsonValue(m_collocation));
    }
    if (m_max_distance_isSet) {
        obj.insert(QString("maxDistance"), ::OpenAPI::toJsonValue(m_max_distance));
    }
    return obj;
}

QString OAIPlacementPolicy::getCollocation() const {
    return m_collocation;
}
void OAIPlacementPolicy::setCollocation(const QString &collocation) {
    m_collocation = collocation;
    m_collocation_isSet = true;
}

bool OAIPlacementPolicy::is_collocation_Set() const{
    return m_collocation_isSet;
}

bool OAIPlacementPolicy::is_collocation_Valid() const{
    return m_collocation_isValid;
}

QString OAIPlacementPolicy::getMaxDistance() const {
    return m_max_distance;
}
void OAIPlacementPolicy::setMaxDistance(const QString &max_distance) {
    m_max_distance = max_distance;
    m_max_distance_isSet = true;
}

bool OAIPlacementPolicy::is_max_distance_Set() const{
    return m_max_distance_isSet;
}

bool OAIPlacementPolicy::is_max_distance_Valid() const{
    return m_max_distance_isValid;
}

bool OAIPlacementPolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_collocation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_distance_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPlacementPolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
