/**
 * Batch API
 * An API to manage the running of batch resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Accelerator from './model/Accelerator';
import ActionCondition from './model/ActionCondition';
import AgentContainer from './model/AgentContainer';
import AgentEnvironment from './model/AgentEnvironment';
import AgentInfo from './model/AgentInfo';
import AgentKMSEnvMap from './model/AgentKMSEnvMap';
import AgentMetadata from './model/AgentMetadata';
import AgentScript from './model/AgentScript';
import AgentTask from './model/AgentTask';
import AgentTaskInfo from './model/AgentTaskInfo';
import AgentTaskRunnable from './model/AgentTaskRunnable';
import AgentTaskSpec from './model/AgentTaskSpec';
import AgentTaskUserAccount from './model/AgentTaskUserAccount';
import AgentTimingInfo from './model/AgentTimingInfo';
import AllocationPolicy from './model/AllocationPolicy';
import AttachedDisk from './model/AttachedDisk';
import Barrier from './model/Barrier';
import CloudLoggingOption from './model/CloudLoggingOption';
import ComputeResource from './model/ComputeResource';
import Container from './model/Container';
import Disk from './model/Disk';
import Environment from './model/Environment';
import GCS from './model/GCS';
import InstancePolicy from './model/InstancePolicy';
import InstancePolicyOrTemplate from './model/InstancePolicyOrTemplate';
import InstanceStatus from './model/InstanceStatus';
import Job from './model/Job';
import JobNotification from './model/JobNotification';
import JobStatus from './model/JobStatus';
import KMSEnvMap from './model/KMSEnvMap';
import LifecyclePolicy from './model/LifecyclePolicy';
import ListJobsResponse from './model/ListJobsResponse';
import ListLocationsResponse from './model/ListLocationsResponse';
import ListOperationsResponse from './model/ListOperationsResponse';
import ListTasksResponse from './model/ListTasksResponse';
import Location from './model/Location';
import LocationPolicy from './model/LocationPolicy';
import LogsPolicy from './model/LogsPolicy';
import Message from './model/Message';
import NFS from './model/NFS';
import NetworkInterface from './model/NetworkInterface';
import NetworkPolicy from './model/NetworkPolicy';
import Operation from './model/Operation';
import OperationMetadata from './model/OperationMetadata';
import PlacementPolicy from './model/PlacementPolicy';
import ReportAgentStateRequest from './model/ReportAgentStateRequest';
import ReportAgentStateResponse from './model/ReportAgentStateResponse';
import Runnable from './model/Runnable';
import Script from './model/Script';
import ServiceAccount from './model/ServiceAccount';
import Status from './model/Status';
import StatusEvent from './model/StatusEvent';
import Task from './model/Task';
import TaskExecution from './model/TaskExecution';
import TaskGroup from './model/TaskGroup';
import TaskGroupStatus from './model/TaskGroupStatus';
import TaskSpec from './model/TaskSpec';
import TaskStatus from './model/TaskStatus';
import Volume from './model/Volume';
import ProjectsApi from './api/ProjectsApi';


/**
* An API to manage the running of batch resources on Google Cloud Platform..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var BatchApi = require('index'); // See note below*.
* var xxxSvc = new BatchApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new BatchApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new BatchApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new BatchApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Accelerator model constructor.
     * @property {module:model/Accelerator}
     */
    Accelerator,

    /**
     * The ActionCondition model constructor.
     * @property {module:model/ActionCondition}
     */
    ActionCondition,

    /**
     * The AgentContainer model constructor.
     * @property {module:model/AgentContainer}
     */
    AgentContainer,

    /**
     * The AgentEnvironment model constructor.
     * @property {module:model/AgentEnvironment}
     */
    AgentEnvironment,

    /**
     * The AgentInfo model constructor.
     * @property {module:model/AgentInfo}
     */
    AgentInfo,

    /**
     * The AgentKMSEnvMap model constructor.
     * @property {module:model/AgentKMSEnvMap}
     */
    AgentKMSEnvMap,

    /**
     * The AgentMetadata model constructor.
     * @property {module:model/AgentMetadata}
     */
    AgentMetadata,

    /**
     * The AgentScript model constructor.
     * @property {module:model/AgentScript}
     */
    AgentScript,

    /**
     * The AgentTask model constructor.
     * @property {module:model/AgentTask}
     */
    AgentTask,

    /**
     * The AgentTaskInfo model constructor.
     * @property {module:model/AgentTaskInfo}
     */
    AgentTaskInfo,

    /**
     * The AgentTaskRunnable model constructor.
     * @property {module:model/AgentTaskRunnable}
     */
    AgentTaskRunnable,

    /**
     * The AgentTaskSpec model constructor.
     * @property {module:model/AgentTaskSpec}
     */
    AgentTaskSpec,

    /**
     * The AgentTaskUserAccount model constructor.
     * @property {module:model/AgentTaskUserAccount}
     */
    AgentTaskUserAccount,

    /**
     * The AgentTimingInfo model constructor.
     * @property {module:model/AgentTimingInfo}
     */
    AgentTimingInfo,

    /**
     * The AllocationPolicy model constructor.
     * @property {module:model/AllocationPolicy}
     */
    AllocationPolicy,

    /**
     * The AttachedDisk model constructor.
     * @property {module:model/AttachedDisk}
     */
    AttachedDisk,

    /**
     * The Barrier model constructor.
     * @property {module:model/Barrier}
     */
    Barrier,

    /**
     * The CloudLoggingOption model constructor.
     * @property {module:model/CloudLoggingOption}
     */
    CloudLoggingOption,

    /**
     * The ComputeResource model constructor.
     * @property {module:model/ComputeResource}
     */
    ComputeResource,

    /**
     * The Container model constructor.
     * @property {module:model/Container}
     */
    Container,

    /**
     * The Disk model constructor.
     * @property {module:model/Disk}
     */
    Disk,

    /**
     * The Environment model constructor.
     * @property {module:model/Environment}
     */
    Environment,

    /**
     * The GCS model constructor.
     * @property {module:model/GCS}
     */
    GCS,

    /**
     * The InstancePolicy model constructor.
     * @property {module:model/InstancePolicy}
     */
    InstancePolicy,

    /**
     * The InstancePolicyOrTemplate model constructor.
     * @property {module:model/InstancePolicyOrTemplate}
     */
    InstancePolicyOrTemplate,

    /**
     * The InstanceStatus model constructor.
     * @property {module:model/InstanceStatus}
     */
    InstanceStatus,

    /**
     * The Job model constructor.
     * @property {module:model/Job}
     */
    Job,

    /**
     * The JobNotification model constructor.
     * @property {module:model/JobNotification}
     */
    JobNotification,

    /**
     * The JobStatus model constructor.
     * @property {module:model/JobStatus}
     */
    JobStatus,

    /**
     * The KMSEnvMap model constructor.
     * @property {module:model/KMSEnvMap}
     */
    KMSEnvMap,

    /**
     * The LifecyclePolicy model constructor.
     * @property {module:model/LifecyclePolicy}
     */
    LifecyclePolicy,

    /**
     * The ListJobsResponse model constructor.
     * @property {module:model/ListJobsResponse}
     */
    ListJobsResponse,

    /**
     * The ListLocationsResponse model constructor.
     * @property {module:model/ListLocationsResponse}
     */
    ListLocationsResponse,

    /**
     * The ListOperationsResponse model constructor.
     * @property {module:model/ListOperationsResponse}
     */
    ListOperationsResponse,

    /**
     * The ListTasksResponse model constructor.
     * @property {module:model/ListTasksResponse}
     */
    ListTasksResponse,

    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location,

    /**
     * The LocationPolicy model constructor.
     * @property {module:model/LocationPolicy}
     */
    LocationPolicy,

    /**
     * The LogsPolicy model constructor.
     * @property {module:model/LogsPolicy}
     */
    LogsPolicy,

    /**
     * The Message model constructor.
     * @property {module:model/Message}
     */
    Message,

    /**
     * The NFS model constructor.
     * @property {module:model/NFS}
     */
    NFS,

    /**
     * The NetworkInterface model constructor.
     * @property {module:model/NetworkInterface}
     */
    NetworkInterface,

    /**
     * The NetworkPolicy model constructor.
     * @property {module:model/NetworkPolicy}
     */
    NetworkPolicy,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationMetadata model constructor.
     * @property {module:model/OperationMetadata}
     */
    OperationMetadata,

    /**
     * The PlacementPolicy model constructor.
     * @property {module:model/PlacementPolicy}
     */
    PlacementPolicy,

    /**
     * The ReportAgentStateRequest model constructor.
     * @property {module:model/ReportAgentStateRequest}
     */
    ReportAgentStateRequest,

    /**
     * The ReportAgentStateResponse model constructor.
     * @property {module:model/ReportAgentStateResponse}
     */
    ReportAgentStateResponse,

    /**
     * The Runnable model constructor.
     * @property {module:model/Runnable}
     */
    Runnable,

    /**
     * The Script model constructor.
     * @property {module:model/Script}
     */
    Script,

    /**
     * The ServiceAccount model constructor.
     * @property {module:model/ServiceAccount}
     */
    ServiceAccount,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The StatusEvent model constructor.
     * @property {module:model/StatusEvent}
     */
    StatusEvent,

    /**
     * The Task model constructor.
     * @property {module:model/Task}
     */
    Task,

    /**
     * The TaskExecution model constructor.
     * @property {module:model/TaskExecution}
     */
    TaskExecution,

    /**
     * The TaskGroup model constructor.
     * @property {module:model/TaskGroup}
     */
    TaskGroup,

    /**
     * The TaskGroupStatus model constructor.
     * @property {module:model/TaskGroupStatus}
     */
    TaskGroupStatus,

    /**
     * The TaskSpec model constructor.
     * @property {module:model/TaskSpec}
     */
    TaskSpec,

    /**
     * The TaskStatus model constructor.
     * @property {module:model/TaskStatus}
     */
    TaskStatus,

    /**
     * The Volume model constructor.
     * @property {module:model/Volume}
     */
    Volume,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi
};
