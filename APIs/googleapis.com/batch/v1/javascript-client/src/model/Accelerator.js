/**
 * Batch API
 * An API to manage the running of batch resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Accelerator model module.
 * @module model/Accelerator
 * @version v1
 */
class Accelerator {
    /**
     * Constructs a new <code>Accelerator</code>.
     * Accelerator describes Compute Engine accelerators to be attached to the VM.
     * @alias module:model/Accelerator
     */
    constructor() { 
        
        Accelerator.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Accelerator</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Accelerator} obj Optional instance to populate.
     * @return {module:model/Accelerator} The populated <code>Accelerator</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Accelerator();

            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'String');
            }
            if (data.hasOwnProperty('driverVersion')) {
                obj['driverVersion'] = ApiClient.convertToType(data['driverVersion'], 'String');
            }
            if (data.hasOwnProperty('installGpuDrivers')) {
                obj['installGpuDrivers'] = ApiClient.convertToType(data['installGpuDrivers'], 'Boolean');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Accelerator</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Accelerator</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['count'] && !(typeof data['count'] === 'string' || data['count'] instanceof String)) {
            throw new Error("Expected the field `count` to be a primitive type in the JSON string but got " + data['count']);
        }
        // ensure the json data is a string
        if (data['driverVersion'] && !(typeof data['driverVersion'] === 'string' || data['driverVersion'] instanceof String)) {
            throw new Error("Expected the field `driverVersion` to be a primitive type in the JSON string but got " + data['driverVersion']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * The number of accelerators of this type.
 * @member {String} count
 */
Accelerator.prototype['count'] = undefined;

/**
 * Optional. The NVIDIA GPU driver version that should be installed for this type. You can define the specific driver version such as \"470.103.01\", following the driver version requirements in https://cloud.google.com/compute/docs/gpus/install-drivers-gpu#minimum-driver. Batch will install the specific accelerator driver if qualified.
 * @member {String} driverVersion
 */
Accelerator.prototype['driverVersion'] = undefined;

/**
 * Deprecated: please use instances[0].install_gpu_drivers instead.
 * @member {Boolean} installGpuDrivers
 */
Accelerator.prototype['installGpuDrivers'] = undefined;

/**
 * The accelerator type. For example, \"nvidia-tesla-t4\". See `gcloud compute accelerator-types list`.
 * @member {String} type
 */
Accelerator.prototype['type'] = undefined;






export default Accelerator;

