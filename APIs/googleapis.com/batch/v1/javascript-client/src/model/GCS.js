/**
 * Batch API
 * An API to manage the running of batch resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GCS model module.
 * @module model/GCS
 * @version v1
 */
class GCS {
    /**
     * Constructs a new <code>GCS</code>.
     * Represents a Google Cloud Storage volume.
     * @alias module:model/GCS
     */
    constructor() { 
        
        GCS.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GCS</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GCS} obj Optional instance to populate.
     * @return {module:model/GCS} The populated <code>GCS</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GCS();

            if (data.hasOwnProperty('remotePath')) {
                obj['remotePath'] = ApiClient.convertToType(data['remotePath'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GCS</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GCS</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['remotePath'] && !(typeof data['remotePath'] === 'string' || data['remotePath'] instanceof String)) {
            throw new Error("Expected the field `remotePath` to be a primitive type in the JSON string but got " + data['remotePath']);
        }

        return true;
    }


}



/**
 * Remote path, either a bucket name or a subdirectory of a bucket, e.g.: bucket_name, bucket_name/subdirectory/
 * @member {String} remotePath
 */
GCS.prototype['remotePath'] = undefined;






export default GCS;

