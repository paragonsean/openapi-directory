/**
 * Batch API
 * An API to manage the running of batch resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TaskStatus from './TaskStatus';

/**
 * The AgentTaskInfo model module.
 * @module model/AgentTaskInfo
 * @version v1
 */
class AgentTaskInfo {
    /**
     * Constructs a new <code>AgentTaskInfo</code>.
     * Task Info
     * @alias module:model/AgentTaskInfo
     */
    constructor() { 
        
        AgentTaskInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AgentTaskInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AgentTaskInfo} obj Optional instance to populate.
     * @return {module:model/AgentTaskInfo} The populated <code>AgentTaskInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AgentTaskInfo();

            if (data.hasOwnProperty('runnable')) {
                obj['runnable'] = ApiClient.convertToType(data['runnable'], 'String');
            }
            if (data.hasOwnProperty('taskId')) {
                obj['taskId'] = ApiClient.convertToType(data['taskId'], 'String');
            }
            if (data.hasOwnProperty('taskStatus')) {
                obj['taskStatus'] = TaskStatus.constructFromObject(data['taskStatus']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AgentTaskInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AgentTaskInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['runnable'] && !(typeof data['runnable'] === 'string' || data['runnable'] instanceof String)) {
            throw new Error("Expected the field `runnable` to be a primitive type in the JSON string but got " + data['runnable']);
        }
        // ensure the json data is a string
        if (data['taskId'] && !(typeof data['taskId'] === 'string' || data['taskId'] instanceof String)) {
            throw new Error("Expected the field `taskId` to be a primitive type in the JSON string but got " + data['taskId']);
        }
        // validate the optional field `taskStatus`
        if (data['taskStatus']) { // data not null
          TaskStatus.validateJSON(data['taskStatus']);
        }

        return true;
    }


}



/**
 * The highest index of a runnable started by the agent for this task. The runnables are indexed from 1. Value 0 is undefined.
 * @member {String} runnable
 */
AgentTaskInfo.prototype['runnable'] = undefined;

/**
 * ID of the Task
 * @member {String} taskId
 */
AgentTaskInfo.prototype['taskId'] = undefined;

/**
 * @member {module:model/TaskStatus} taskStatus
 */
AgentTaskInfo.prototype['taskStatus'] = undefined;






export default AgentTaskInfo;

