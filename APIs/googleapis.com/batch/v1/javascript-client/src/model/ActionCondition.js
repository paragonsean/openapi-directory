/**
 * Batch API
 * An API to manage the running of batch resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ActionCondition model module.
 * @module model/ActionCondition
 * @version v1
 */
class ActionCondition {
    /**
     * Constructs a new <code>ActionCondition</code>.
     * Conditions for actions to deal with task failures.
     * @alias module:model/ActionCondition
     */
    constructor() { 
        
        ActionCondition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ActionCondition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActionCondition} obj Optional instance to populate.
     * @return {module:model/ActionCondition} The populated <code>ActionCondition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActionCondition();

            if (data.hasOwnProperty('exitCodes')) {
                obj['exitCodes'] = ApiClient.convertToType(data['exitCodes'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActionCondition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActionCondition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['exitCodes'])) {
            throw new Error("Expected the field `exitCodes` to be an array in the JSON data but got " + data['exitCodes']);
        }

        return true;
    }


}



/**
 * Exit codes of a task execution. If there are more than 1 exit codes, when task executes with any of the exit code in the list, the condition is met and the action will be executed.
 * @member {Array.<Number>} exitCodes
 */
ActionCondition.prototype['exitCodes'] = undefined;






export default ActionCondition;

