/**
 * Batch API
 * An API to manage the running of batch resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Message from './Message';

/**
 * The JobNotification model module.
 * @module model/JobNotification
 * @version v1
 */
class JobNotification {
    /**
     * Constructs a new <code>JobNotification</code>.
     * Notification configurations.
     * @alias module:model/JobNotification
     */
    constructor() { 
        
        JobNotification.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobNotification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobNotification} obj Optional instance to populate.
     * @return {module:model/JobNotification} The populated <code>JobNotification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobNotification();

            if (data.hasOwnProperty('message')) {
                obj['message'] = Message.constructFromObject(data['message']);
            }
            if (data.hasOwnProperty('pubsubTopic')) {
                obj['pubsubTopic'] = ApiClient.convertToType(data['pubsubTopic'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobNotification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobNotification</code>.
     */
    static validateJSON(data) {
        // validate the optional field `message`
        if (data['message']) { // data not null
          Message.validateJSON(data['message']);
        }
        // ensure the json data is a string
        if (data['pubsubTopic'] && !(typeof data['pubsubTopic'] === 'string' || data['pubsubTopic'] instanceof String)) {
            throw new Error("Expected the field `pubsubTopic` to be a primitive type in the JSON string but got " + data['pubsubTopic']);
        }

        return true;
    }


}



/**
 * @member {module:model/Message} message
 */
JobNotification.prototype['message'] = undefined;

/**
 * The Pub/Sub topic where notifications like the job state changes will be published. The topic must exist in the same project as the job and billings will be charged to this project. If not specified, no Pub/Sub messages will be sent. Topic format: `projects/{project}/topics/{topic}`.
 * @member {String} pubsubTopic
 */
JobNotification.prototype['pubsubTopic'] = undefined;






export default JobNotification;

