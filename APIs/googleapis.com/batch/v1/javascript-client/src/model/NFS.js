/**
 * Batch API
 * An API to manage the running of batch resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NFS model module.
 * @module model/NFS
 * @version v1
 */
class NFS {
    /**
     * Constructs a new <code>NFS</code>.
     * Represents an NFS volume.
     * @alias module:model/NFS
     */
    constructor() { 
        
        NFS.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NFS</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NFS} obj Optional instance to populate.
     * @return {module:model/NFS} The populated <code>NFS</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NFS();

            if (data.hasOwnProperty('remotePath')) {
                obj['remotePath'] = ApiClient.convertToType(data['remotePath'], 'String');
            }
            if (data.hasOwnProperty('server')) {
                obj['server'] = ApiClient.convertToType(data['server'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NFS</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NFS</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['remotePath'] && !(typeof data['remotePath'] === 'string' || data['remotePath'] instanceof String)) {
            throw new Error("Expected the field `remotePath` to be a primitive type in the JSON string but got " + data['remotePath']);
        }
        // ensure the json data is a string
        if (data['server'] && !(typeof data['server'] === 'string' || data['server'] instanceof String)) {
            throw new Error("Expected the field `server` to be a primitive type in the JSON string but got " + data['server']);
        }

        return true;
    }


}



/**
 * Remote source path exported from the NFS, e.g., \"/share\".
 * @member {String} remotePath
 */
NFS.prototype['remotePath'] = undefined;

/**
 * The IP address of the NFS.
 * @member {String} server
 */
NFS.prototype['server'] = undefined;






export default NFS;

