/**
 * Batch API
 * An API to manage the running of batch resources on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StatusEvent from './StatusEvent';
import TaskGroupStatus from './TaskGroupStatus';

/**
 * The JobStatus model module.
 * @module model/JobStatus
 * @version v1
 */
class JobStatus {
    /**
     * Constructs a new <code>JobStatus</code>.
     * Job status.
     * @alias module:model/JobStatus
     */
    constructor() { 
        
        JobStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobStatus} obj Optional instance to populate.
     * @return {module:model/JobStatus} The populated <code>JobStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobStatus();

            if (data.hasOwnProperty('runDuration')) {
                obj['runDuration'] = ApiClient.convertToType(data['runDuration'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('statusEvents')) {
                obj['statusEvents'] = ApiClient.convertToType(data['statusEvents'], [StatusEvent]);
            }
            if (data.hasOwnProperty('taskGroups')) {
                obj['taskGroups'] = ApiClient.convertToType(data['taskGroups'], {'String': TaskGroupStatus});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['runDuration'] && !(typeof data['runDuration'] === 'string' || data['runDuration'] instanceof String)) {
            throw new Error("Expected the field `runDuration` to be a primitive type in the JSON string but got " + data['runDuration']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        if (data['statusEvents']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['statusEvents'])) {
                throw new Error("Expected the field `statusEvents` to be an array in the JSON data but got " + data['statusEvents']);
            }
            // validate the optional field `statusEvents` (array)
            for (const item of data['statusEvents']) {
                StatusEvent.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The duration of time that the Job spent in status RUNNING.
 * @member {String} runDuration
 */
JobStatus.prototype['runDuration'] = undefined;

/**
 * Job state
 * @member {module:model/JobStatus.StateEnum} state
 */
JobStatus.prototype['state'] = undefined;

/**
 * Job status events
 * @member {Array.<module:model/StatusEvent>} statusEvents
 */
JobStatus.prototype['statusEvents'] = undefined;

/**
 * Aggregated task status for each TaskGroup in the Job. The map key is TaskGroup ID.
 * @member {Object.<String, module:model/TaskGroupStatus>} taskGroups
 */
JobStatus.prototype['taskGroups'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
JobStatus['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "QUEUED"
     * @const
     */
    "QUEUED": "QUEUED",

    /**
     * value: "SCHEDULED"
     * @const
     */
    "SCHEDULED": "SCHEDULED",

    /**
     * value: "RUNNING"
     * @const
     */
    "RUNNING": "RUNNING",

    /**
     * value: "SUCCEEDED"
     * @const
     */
    "SUCCEEDED": "SUCCEEDED",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "DELETION_IN_PROGRESS"
     * @const
     */
    "DELETION_IN_PROGRESS": "DELETION_IN_PROGRESS"
};



export default JobStatus;

