/**
 * AdSense Management API
 * The AdSense Management API allows publishers to access their inventory and run earnings and performance reports.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISite.h
 *
 * Representation of a Site.
 */

#ifndef OAISite_H
#define OAISite_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISite : public OAIObject {
public:
    OAISite();
    OAISite(QString json);
    ~OAISite() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAutoAdsEnabled() const;
    void setAutoAdsEnabled(const bool &auto_ads_enabled);
    bool is_auto_ads_enabled_Set() const;
    bool is_auto_ads_enabled_Valid() const;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getReportingDimensionId() const;
    void setReportingDimensionId(const QString &reporting_dimension_id);
    bool is_reporting_dimension_id_Set() const;
    bool is_reporting_dimension_id_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_auto_ads_enabled;
    bool m_auto_ads_enabled_isSet;
    bool m_auto_ads_enabled_isValid;

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_reporting_dimension_id;
    bool m_reporting_dimension_id_isSet;
    bool m_reporting_dimension_id_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISite)

#endif // OAISite_H
