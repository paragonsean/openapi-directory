/**
 * AdSense Management API
 * The AdSense Management API allows publishers to access their inventory and run earnings and performance reports.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdClient.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdClient::OAIAdClient(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdClient::OAIAdClient() {
    this->initializeModel();
}

OAIAdClient::~OAIAdClient() {}

void OAIAdClient::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_product_code_isSet = false;
    m_product_code_isValid = false;

    m_reporting_dimension_id_isSet = false;
    m_reporting_dimension_id_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIAdClient::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdClient::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_product_code_isValid = ::OpenAPI::fromJsonValue(m_product_code, json[QString("productCode")]);
    m_product_code_isSet = !json[QString("productCode")].isNull() && m_product_code_isValid;

    m_reporting_dimension_id_isValid = ::OpenAPI::fromJsonValue(m_reporting_dimension_id, json[QString("reportingDimensionId")]);
    m_reporting_dimension_id_isSet = !json[QString("reportingDimensionId")].isNull() && m_reporting_dimension_id_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIAdClient::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdClient::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_product_code_isSet) {
        obj.insert(QString("productCode"), ::OpenAPI::toJsonValue(m_product_code));
    }
    if (m_reporting_dimension_id_isSet) {
        obj.insert(QString("reportingDimensionId"), ::OpenAPI::toJsonValue(m_reporting_dimension_id));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QString OAIAdClient::getName() const {
    return m_name;
}
void OAIAdClient::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAdClient::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAdClient::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIAdClient::getProductCode() const {
    return m_product_code;
}
void OAIAdClient::setProductCode(const QString &product_code) {
    m_product_code = product_code;
    m_product_code_isSet = true;
}

bool OAIAdClient::is_product_code_Set() const{
    return m_product_code_isSet;
}

bool OAIAdClient::is_product_code_Valid() const{
    return m_product_code_isValid;
}

QString OAIAdClient::getReportingDimensionId() const {
    return m_reporting_dimension_id;
}
void OAIAdClient::setReportingDimensionId(const QString &reporting_dimension_id) {
    m_reporting_dimension_id = reporting_dimension_id;
    m_reporting_dimension_id_isSet = true;
}

bool OAIAdClient::is_reporting_dimension_id_Set() const{
    return m_reporting_dimension_id_isSet;
}

bool OAIAdClient::is_reporting_dimension_id_Valid() const{
    return m_reporting_dimension_id_isValid;
}

QString OAIAdClient::getState() const {
    return m_state;
}
void OAIAdClient::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIAdClient::is_state_Set() const{
    return m_state_isSet;
}

bool OAIAdClient::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIAdClient::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reporting_dimension_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdClient::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
