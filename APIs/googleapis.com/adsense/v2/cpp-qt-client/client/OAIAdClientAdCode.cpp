/**
 * AdSense Management API
 * The AdSense Management API allows publishers to access their inventory and run earnings and performance reports.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdClientAdCode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdClientAdCode::OAIAdClientAdCode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdClientAdCode::OAIAdClientAdCode() {
    this->initializeModel();
}

OAIAdClientAdCode::~OAIAdClientAdCode() {}

void OAIAdClientAdCode::initializeModel() {

    m_ad_code_isSet = false;
    m_ad_code_isValid = false;

    m_amp_body_isSet = false;
    m_amp_body_isValid = false;

    m_amp_head_isSet = false;
    m_amp_head_isValid = false;
}

void OAIAdClientAdCode::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdClientAdCode::fromJsonObject(QJsonObject json) {

    m_ad_code_isValid = ::OpenAPI::fromJsonValue(m_ad_code, json[QString("adCode")]);
    m_ad_code_isSet = !json[QString("adCode")].isNull() && m_ad_code_isValid;

    m_amp_body_isValid = ::OpenAPI::fromJsonValue(m_amp_body, json[QString("ampBody")]);
    m_amp_body_isSet = !json[QString("ampBody")].isNull() && m_amp_body_isValid;

    m_amp_head_isValid = ::OpenAPI::fromJsonValue(m_amp_head, json[QString("ampHead")]);
    m_amp_head_isSet = !json[QString("ampHead")].isNull() && m_amp_head_isValid;
}

QString OAIAdClientAdCode::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdClientAdCode::asJsonObject() const {
    QJsonObject obj;
    if (m_ad_code_isSet) {
        obj.insert(QString("adCode"), ::OpenAPI::toJsonValue(m_ad_code));
    }
    if (m_amp_body_isSet) {
        obj.insert(QString("ampBody"), ::OpenAPI::toJsonValue(m_amp_body));
    }
    if (m_amp_head_isSet) {
        obj.insert(QString("ampHead"), ::OpenAPI::toJsonValue(m_amp_head));
    }
    return obj;
}

QString OAIAdClientAdCode::getAdCode() const {
    return m_ad_code;
}
void OAIAdClientAdCode::setAdCode(const QString &ad_code) {
    m_ad_code = ad_code;
    m_ad_code_isSet = true;
}

bool OAIAdClientAdCode::is_ad_code_Set() const{
    return m_ad_code_isSet;
}

bool OAIAdClientAdCode::is_ad_code_Valid() const{
    return m_ad_code_isValid;
}

QString OAIAdClientAdCode::getAmpBody() const {
    return m_amp_body;
}
void OAIAdClientAdCode::setAmpBody(const QString &amp_body) {
    m_amp_body = amp_body;
    m_amp_body_isSet = true;
}

bool OAIAdClientAdCode::is_amp_body_Set() const{
    return m_amp_body_isSet;
}

bool OAIAdClientAdCode::is_amp_body_Valid() const{
    return m_amp_body_isValid;
}

QString OAIAdClientAdCode::getAmpHead() const {
    return m_amp_head;
}
void OAIAdClientAdCode::setAmpHead(const QString &amp_head) {
    m_amp_head = amp_head;
    m_amp_head_isSet = true;
}

bool OAIAdClientAdCode::is_amp_head_Set() const{
    return m_amp_head_isSet;
}

bool OAIAdClientAdCode::is_amp_head_Valid() const{
    return m_amp_head_isValid;
}

bool OAIAdClientAdCode::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ad_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amp_body_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amp_head_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdClientAdCode::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
