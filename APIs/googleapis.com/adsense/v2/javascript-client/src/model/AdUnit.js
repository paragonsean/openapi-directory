/**
 * AdSense Management API
 * The AdSense Management API allows publishers to access their inventory and run earnings and performance reports.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContentAdsSettings from './ContentAdsSettings';

/**
 * The AdUnit model module.
 * @module model/AdUnit
 * @version v2
 */
class AdUnit {
    /**
     * Constructs a new <code>AdUnit</code>.
     * Representation of an ad unit. An ad unit represents a saved ad unit with a specific set of ad settings that have been customized within an account.
     * @alias module:model/AdUnit
     */
    constructor() { 
        
        AdUnit.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdUnit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdUnit} obj Optional instance to populate.
     * @return {module:model/AdUnit} The populated <code>AdUnit</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdUnit();

            if (data.hasOwnProperty('contentAdsSettings')) {
                obj['contentAdsSettings'] = ContentAdsSettings.constructFromObject(data['contentAdsSettings']);
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('reportingDimensionId')) {
                obj['reportingDimensionId'] = ApiClient.convertToType(data['reportingDimensionId'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdUnit</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdUnit</code>.
     */
    static validateJSON(data) {
        // validate the optional field `contentAdsSettings`
        if (data['contentAdsSettings']) { // data not null
          ContentAdsSettings.validateJSON(data['contentAdsSettings']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['reportingDimensionId'] && !(typeof data['reportingDimensionId'] === 'string' || data['reportingDimensionId'] instanceof String)) {
            throw new Error("Expected the field `reportingDimensionId` to be a primitive type in the JSON string but got " + data['reportingDimensionId']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * @member {module:model/ContentAdsSettings} contentAdsSettings
 */
AdUnit.prototype['contentAdsSettings'] = undefined;

/**
 * Required. Display name of the ad unit, as provided when the ad unit was created.
 * @member {String} displayName
 */
AdUnit.prototype['displayName'] = undefined;

/**
 * Output only. Resource name of the ad unit. Format: accounts/{account}/adclients/{adclient}/adunits/{adunit}
 * @member {String} name
 */
AdUnit.prototype['name'] = undefined;

/**
 * Output only. Unique ID of the ad unit as used in the `AD_UNIT_ID` reporting dimension.
 * @member {String} reportingDimensionId
 */
AdUnit.prototype['reportingDimensionId'] = undefined;

/**
 * Required. State of the ad unit.
 * @member {module:model/AdUnit.StateEnum} state
 */
AdUnit.prototype['state'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
AdUnit['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "ARCHIVED"
     * @const
     */
    "ARCHIVED": "ARCHIVED"
};



export default AdUnit;

