/*
 * AdSense Management API
 * Accesses AdSense publishers' inventory and generates performance reports.
 *
 * The version of the OpenAPI document: v1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AdStyle;
import org.openapitools.client.model.AdUnitContentAdsSettings;
import org.openapitools.client.model.AdUnitFeedAdsSettings;
import org.openapitools.client.model.AdUnitMobileContentAdsSettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AdUnit
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:40:29.195629-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AdUnit {
  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_CONTENT_ADS_SETTINGS = "contentAdsSettings";
  @SerializedName(SERIALIZED_NAME_CONTENT_ADS_SETTINGS)
  private AdUnitContentAdsSettings contentAdsSettings;

  public static final String SERIALIZED_NAME_CUSTOM_STYLE = "customStyle";
  @SerializedName(SERIALIZED_NAME_CUSTOM_STYLE)
  private AdStyle customStyle;

  public static final String SERIALIZED_NAME_FEED_ADS_SETTINGS = "feedAdsSettings";
  @SerializedName(SERIALIZED_NAME_FEED_ADS_SETTINGS)
  private AdUnitFeedAdsSettings feedAdsSettings;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind = "adsense#adUnit";

  public static final String SERIALIZED_NAME_MOBILE_CONTENT_ADS_SETTINGS = "mobileContentAdsSettings";
  @SerializedName(SERIALIZED_NAME_MOBILE_CONTENT_ADS_SETTINGS)
  private AdUnitMobileContentAdsSettings mobileContentAdsSettings;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SAVED_STYLE_ID = "savedStyleId";
  @SerializedName(SERIALIZED_NAME_SAVED_STYLE_ID)
  private String savedStyleId;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public AdUnit() {
  }

  public AdUnit code(String code) {
    this.code = code;
    return this;
  }

  /**
   * Identity code of this ad unit, not necessarily unique across ad clients.
   * @return code
   */
  @javax.annotation.Nullable
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }


  public AdUnit contentAdsSettings(AdUnitContentAdsSettings contentAdsSettings) {
    this.contentAdsSettings = contentAdsSettings;
    return this;
  }

  /**
   * Get contentAdsSettings
   * @return contentAdsSettings
   */
  @javax.annotation.Nullable
  public AdUnitContentAdsSettings getContentAdsSettings() {
    return contentAdsSettings;
  }

  public void setContentAdsSettings(AdUnitContentAdsSettings contentAdsSettings) {
    this.contentAdsSettings = contentAdsSettings;
  }


  public AdUnit customStyle(AdStyle customStyle) {
    this.customStyle = customStyle;
    return this;
  }

  /**
   * Get customStyle
   * @return customStyle
   */
  @javax.annotation.Nullable
  public AdStyle getCustomStyle() {
    return customStyle;
  }

  public void setCustomStyle(AdStyle customStyle) {
    this.customStyle = customStyle;
  }


  public AdUnit feedAdsSettings(AdUnitFeedAdsSettings feedAdsSettings) {
    this.feedAdsSettings = feedAdsSettings;
    return this;
  }

  /**
   * Get feedAdsSettings
   * @return feedAdsSettings
   */
  @javax.annotation.Nullable
  public AdUnitFeedAdsSettings getFeedAdsSettings() {
    return feedAdsSettings;
  }

  public void setFeedAdsSettings(AdUnitFeedAdsSettings feedAdsSettings) {
    this.feedAdsSettings = feedAdsSettings;
  }


  public AdUnit id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Unique identifier of this ad unit. This should be considered an opaque identifier; it is not safe to rely on it being in any particular format.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public AdUnit kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Kind of resource this is, in this case adsense#adUnit.
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public AdUnit mobileContentAdsSettings(AdUnitMobileContentAdsSettings mobileContentAdsSettings) {
    this.mobileContentAdsSettings = mobileContentAdsSettings;
    return this;
  }

  /**
   * Get mobileContentAdsSettings
   * @return mobileContentAdsSettings
   */
  @javax.annotation.Nullable
  public AdUnitMobileContentAdsSettings getMobileContentAdsSettings() {
    return mobileContentAdsSettings;
  }

  public void setMobileContentAdsSettings(AdUnitMobileContentAdsSettings mobileContentAdsSettings) {
    this.mobileContentAdsSettings = mobileContentAdsSettings;
  }


  public AdUnit name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of this ad unit.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public AdUnit savedStyleId(String savedStyleId) {
    this.savedStyleId = savedStyleId;
    return this;
  }

  /**
   * ID of the saved ad style which holds this ad unit&#39;s style information.
   * @return savedStyleId
   */
  @javax.annotation.Nullable
  public String getSavedStyleId() {
    return savedStyleId;
  }

  public void setSavedStyleId(String savedStyleId) {
    this.savedStyleId = savedStyleId;
  }


  public AdUnit status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Status of this ad unit. Possible values are: NEW: Indicates that the ad unit was created within the last seven days and does not yet have any activity associated with it.  ACTIVE: Indicates that there has been activity on this ad unit in the last seven days.  INACTIVE: Indicates that there has been no activity on this ad unit in the last seven days.
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdUnit adUnit = (AdUnit) o;
    return Objects.equals(this.code, adUnit.code) &&
        Objects.equals(this.contentAdsSettings, adUnit.contentAdsSettings) &&
        Objects.equals(this.customStyle, adUnit.customStyle) &&
        Objects.equals(this.feedAdsSettings, adUnit.feedAdsSettings) &&
        Objects.equals(this.id, adUnit.id) &&
        Objects.equals(this.kind, adUnit.kind) &&
        Objects.equals(this.mobileContentAdsSettings, adUnit.mobileContentAdsSettings) &&
        Objects.equals(this.name, adUnit.name) &&
        Objects.equals(this.savedStyleId, adUnit.savedStyleId) &&
        Objects.equals(this.status, adUnit.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, contentAdsSettings, customStyle, feedAdsSettings, id, kind, mobileContentAdsSettings, name, savedStyleId, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdUnit {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    contentAdsSettings: ").append(toIndentedString(contentAdsSettings)).append("\n");
    sb.append("    customStyle: ").append(toIndentedString(customStyle)).append("\n");
    sb.append("    feedAdsSettings: ").append(toIndentedString(feedAdsSettings)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    mobileContentAdsSettings: ").append(toIndentedString(mobileContentAdsSettings)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    savedStyleId: ").append(toIndentedString(savedStyleId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("code");
    openapiFields.add("contentAdsSettings");
    openapiFields.add("customStyle");
    openapiFields.add("feedAdsSettings");
    openapiFields.add("id");
    openapiFields.add("kind");
    openapiFields.add("mobileContentAdsSettings");
    openapiFields.add("name");
    openapiFields.add("savedStyleId");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AdUnit
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AdUnit.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AdUnit is not found in the empty JSON string", AdUnit.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AdUnit.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AdUnit` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("code") != null && !jsonObj.get("code").isJsonNull()) && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      // validate the optional field `contentAdsSettings`
      if (jsonObj.get("contentAdsSettings") != null && !jsonObj.get("contentAdsSettings").isJsonNull()) {
        AdUnitContentAdsSettings.validateJsonElement(jsonObj.get("contentAdsSettings"));
      }
      // validate the optional field `customStyle`
      if (jsonObj.get("customStyle") != null && !jsonObj.get("customStyle").isJsonNull()) {
        AdStyle.validateJsonElement(jsonObj.get("customStyle"));
      }
      // validate the optional field `feedAdsSettings`
      if (jsonObj.get("feedAdsSettings") != null && !jsonObj.get("feedAdsSettings").isJsonNull()) {
        AdUnitFeedAdsSettings.validateJsonElement(jsonObj.get("feedAdsSettings"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      // validate the optional field `mobileContentAdsSettings`
      if (jsonObj.get("mobileContentAdsSettings") != null && !jsonObj.get("mobileContentAdsSettings").isJsonNull()) {
        AdUnitMobileContentAdsSettings.validateJsonElement(jsonObj.get("mobileContentAdsSettings"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("savedStyleId") != null && !jsonObj.get("savedStyleId").isJsonNull()) && !jsonObj.get("savedStyleId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `savedStyleId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("savedStyleId").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AdUnit.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AdUnit' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AdUnit> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AdUnit.class));

       return (TypeAdapter<T>) new TypeAdapter<AdUnit>() {
           @Override
           public void write(JsonWriter out, AdUnit value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AdUnit read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AdUnit given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AdUnit
   * @throws IOException if the JSON string is invalid with respect to AdUnit
   */
  public static AdUnit fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AdUnit.class);
  }

  /**
   * Convert an instance of AdUnit to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

