/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata from './GoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata';
import GoogleCloudDatalabelingV1beta1LabelStats from './GoogleCloudDatalabelingV1beta1LabelStats';

/**
 * The GoogleCloudDatalabelingV1beta1AnnotatedDataset model module.
 * @module model/GoogleCloudDatalabelingV1beta1AnnotatedDataset
 * @version v1beta1
 */
class GoogleCloudDatalabelingV1beta1AnnotatedDataset {
    /**
     * Constructs a new <code>GoogleCloudDatalabelingV1beta1AnnotatedDataset</code>.
     * AnnotatedDataset is a set holding annotations for data in a Dataset. Each labeling task will generate an AnnotatedDataset under the Dataset that the task is requested for.
     * @alias module:model/GoogleCloudDatalabelingV1beta1AnnotatedDataset
     */
    constructor() { 
        
        GoogleCloudDatalabelingV1beta1AnnotatedDataset.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatalabelingV1beta1AnnotatedDataset</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatalabelingV1beta1AnnotatedDataset} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatalabelingV1beta1AnnotatedDataset} The populated <code>GoogleCloudDatalabelingV1beta1AnnotatedDataset</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatalabelingV1beta1AnnotatedDataset();

            if (data.hasOwnProperty('annotationSource')) {
                obj['annotationSource'] = ApiClient.convertToType(data['annotationSource'], 'String');
            }
            if (data.hasOwnProperty('annotationType')) {
                obj['annotationType'] = ApiClient.convertToType(data['annotationType'], 'String');
            }
            if (data.hasOwnProperty('blockingResources')) {
                obj['blockingResources'] = ApiClient.convertToType(data['blockingResources'], ['String']);
            }
            if (data.hasOwnProperty('completedExampleCount')) {
                obj['completedExampleCount'] = ApiClient.convertToType(data['completedExampleCount'], 'String');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('exampleCount')) {
                obj['exampleCount'] = ApiClient.convertToType(data['exampleCount'], 'String');
            }
            if (data.hasOwnProperty('labelStats')) {
                obj['labelStats'] = GoogleCloudDatalabelingV1beta1LabelStats.constructFromObject(data['labelStats']);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = GoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatalabelingV1beta1AnnotatedDataset</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatalabelingV1beta1AnnotatedDataset</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['annotationSource'] && !(typeof data['annotationSource'] === 'string' || data['annotationSource'] instanceof String)) {
            throw new Error("Expected the field `annotationSource` to be a primitive type in the JSON string but got " + data['annotationSource']);
        }
        // ensure the json data is a string
        if (data['annotationType'] && !(typeof data['annotationType'] === 'string' || data['annotationType'] instanceof String)) {
            throw new Error("Expected the field `annotationType` to be a primitive type in the JSON string but got " + data['annotationType']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['blockingResources'])) {
            throw new Error("Expected the field `blockingResources` to be an array in the JSON data but got " + data['blockingResources']);
        }
        // ensure the json data is a string
        if (data['completedExampleCount'] && !(typeof data['completedExampleCount'] === 'string' || data['completedExampleCount'] instanceof String)) {
            throw new Error("Expected the field `completedExampleCount` to be a primitive type in the JSON string but got " + data['completedExampleCount']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['exampleCount'] && !(typeof data['exampleCount'] === 'string' || data['exampleCount'] instanceof String)) {
            throw new Error("Expected the field `exampleCount` to be a primitive type in the JSON string but got " + data['exampleCount']);
        }
        // validate the optional field `labelStats`
        if (data['labelStats']) { // data not null
          GoogleCloudDatalabelingV1beta1LabelStats.validateJSON(data['labelStats']);
        }
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          GoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata.validateJSON(data['metadata']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * Output only. Source of the annotation.
 * @member {module:model/GoogleCloudDatalabelingV1beta1AnnotatedDataset.AnnotationSourceEnum} annotationSource
 */
GoogleCloudDatalabelingV1beta1AnnotatedDataset.prototype['annotationSource'] = undefined;

/**
 * Output only. Type of the annotation. It is specified when starting labeling task.
 * @member {module:model/GoogleCloudDatalabelingV1beta1AnnotatedDataset.AnnotationTypeEnum} annotationType
 */
GoogleCloudDatalabelingV1beta1AnnotatedDataset.prototype['annotationType'] = undefined;

/**
 * Output only. The names of any related resources that are blocking changes to the annotated dataset.
 * @member {Array.<String>} blockingResources
 */
GoogleCloudDatalabelingV1beta1AnnotatedDataset.prototype['blockingResources'] = undefined;

/**
 * Output only. Number of examples that have annotation in the annotated dataset.
 * @member {String} completedExampleCount
 */
GoogleCloudDatalabelingV1beta1AnnotatedDataset.prototype['completedExampleCount'] = undefined;

/**
 * Output only. Time the AnnotatedDataset was created.
 * @member {String} createTime
 */
GoogleCloudDatalabelingV1beta1AnnotatedDataset.prototype['createTime'] = undefined;

/**
 * Output only. The description of the AnnotatedDataset. It is specified in HumanAnnotationConfig when user starts a labeling task. Maximum of 10000 characters.
 * @member {String} description
 */
GoogleCloudDatalabelingV1beta1AnnotatedDataset.prototype['description'] = undefined;

/**
 * Output only. The display name of the AnnotatedDataset. It is specified in HumanAnnotationConfig when user starts a labeling task. Maximum of 64 characters.
 * @member {String} displayName
 */
GoogleCloudDatalabelingV1beta1AnnotatedDataset.prototype['displayName'] = undefined;

/**
 * Output only. Number of examples in the annotated dataset.
 * @member {String} exampleCount
 */
GoogleCloudDatalabelingV1beta1AnnotatedDataset.prototype['exampleCount'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1beta1LabelStats} labelStats
 */
GoogleCloudDatalabelingV1beta1AnnotatedDataset.prototype['labelStats'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata} metadata
 */
GoogleCloudDatalabelingV1beta1AnnotatedDataset.prototype['metadata'] = undefined;

/**
 * Output only. AnnotatedDataset resource name in format of: projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/ {annotated_dataset_id}
 * @member {String} name
 */
GoogleCloudDatalabelingV1beta1AnnotatedDataset.prototype['name'] = undefined;





/**
 * Allowed values for the <code>annotationSource</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDatalabelingV1beta1AnnotatedDataset['AnnotationSourceEnum'] = {

    /**
     * value: "ANNOTATION_SOURCE_UNSPECIFIED"
     * @const
     */
    "ANNOTATION_SOURCE_UNSPECIFIED": "ANNOTATION_SOURCE_UNSPECIFIED",

    /**
     * value: "OPERATOR"
     * @const
     */
    "OPERATOR": "OPERATOR"
};


/**
 * Allowed values for the <code>annotationType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDatalabelingV1beta1AnnotatedDataset['AnnotationTypeEnum'] = {

    /**
     * value: "ANNOTATION_TYPE_UNSPECIFIED"
     * @const
     */
    "ANNOTATION_TYPE_UNSPECIFIED": "ANNOTATION_TYPE_UNSPECIFIED",

    /**
     * value: "IMAGE_CLASSIFICATION_ANNOTATION"
     * @const
     */
    "IMAGE_CLASSIFICATION_ANNOTATION": "IMAGE_CLASSIFICATION_ANNOTATION",

    /**
     * value: "IMAGE_BOUNDING_BOX_ANNOTATION"
     * @const
     */
    "IMAGE_BOUNDING_BOX_ANNOTATION": "IMAGE_BOUNDING_BOX_ANNOTATION",

    /**
     * value: "IMAGE_ORIENTED_BOUNDING_BOX_ANNOTATION"
     * @const
     */
    "IMAGE_ORIENTED_BOUNDING_BOX_ANNOTATION": "IMAGE_ORIENTED_BOUNDING_BOX_ANNOTATION",

    /**
     * value: "IMAGE_BOUNDING_POLY_ANNOTATION"
     * @const
     */
    "IMAGE_BOUNDING_POLY_ANNOTATION": "IMAGE_BOUNDING_POLY_ANNOTATION",

    /**
     * value: "IMAGE_POLYLINE_ANNOTATION"
     * @const
     */
    "IMAGE_POLYLINE_ANNOTATION": "IMAGE_POLYLINE_ANNOTATION",

    /**
     * value: "IMAGE_SEGMENTATION_ANNOTATION"
     * @const
     */
    "IMAGE_SEGMENTATION_ANNOTATION": "IMAGE_SEGMENTATION_ANNOTATION",

    /**
     * value: "VIDEO_SHOTS_CLASSIFICATION_ANNOTATION"
     * @const
     */
    "VIDEO_SHOTS_CLASSIFICATION_ANNOTATION": "VIDEO_SHOTS_CLASSIFICATION_ANNOTATION",

    /**
     * value: "VIDEO_OBJECT_TRACKING_ANNOTATION"
     * @const
     */
    "VIDEO_OBJECT_TRACKING_ANNOTATION": "VIDEO_OBJECT_TRACKING_ANNOTATION",

    /**
     * value: "VIDEO_OBJECT_DETECTION_ANNOTATION"
     * @const
     */
    "VIDEO_OBJECT_DETECTION_ANNOTATION": "VIDEO_OBJECT_DETECTION_ANNOTATION",

    /**
     * value: "VIDEO_EVENT_ANNOTATION"
     * @const
     */
    "VIDEO_EVENT_ANNOTATION": "VIDEO_EVENT_ANNOTATION",

    /**
     * value: "TEXT_CLASSIFICATION_ANNOTATION"
     * @const
     */
    "TEXT_CLASSIFICATION_ANNOTATION": "TEXT_CLASSIFICATION_ANNOTATION",

    /**
     * value: "TEXT_ENTITY_EXTRACTION_ANNOTATION"
     * @const
     */
    "TEXT_ENTITY_EXTRACTION_ANNOTATION": "TEXT_ENTITY_EXTRACTION_ANNOTATION",

    /**
     * value: "GENERAL_CLASSIFICATION_ANNOTATION"
     * @const
     */
    "GENERAL_CLASSIFICATION_ANNOTATION": "GENERAL_CLASSIFICATION_ANNOTATION"
};



export default GoogleCloudDatalabelingV1beta1AnnotatedDataset;

