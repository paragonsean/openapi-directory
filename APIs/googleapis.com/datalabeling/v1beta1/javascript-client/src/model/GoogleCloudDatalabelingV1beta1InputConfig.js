/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDatalabelingV1beta1BigQuerySource from './GoogleCloudDatalabelingV1beta1BigQuerySource';
import GoogleCloudDatalabelingV1beta1ClassificationMetadata from './GoogleCloudDatalabelingV1beta1ClassificationMetadata';
import GoogleCloudDatalabelingV1beta1GcsSource from './GoogleCloudDatalabelingV1beta1GcsSource';
import GoogleCloudDatalabelingV1beta1TextMetadata from './GoogleCloudDatalabelingV1beta1TextMetadata';

/**
 * The GoogleCloudDatalabelingV1beta1InputConfig model module.
 * @module model/GoogleCloudDatalabelingV1beta1InputConfig
 * @version v1beta1
 */
class GoogleCloudDatalabelingV1beta1InputConfig {
    /**
     * Constructs a new <code>GoogleCloudDatalabelingV1beta1InputConfig</code>.
     * The configuration of input data, including data type, location, etc.
     * @alias module:model/GoogleCloudDatalabelingV1beta1InputConfig
     */
    constructor() { 
        
        GoogleCloudDatalabelingV1beta1InputConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatalabelingV1beta1InputConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatalabelingV1beta1InputConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatalabelingV1beta1InputConfig} The populated <code>GoogleCloudDatalabelingV1beta1InputConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatalabelingV1beta1InputConfig();

            if (data.hasOwnProperty('annotationType')) {
                obj['annotationType'] = ApiClient.convertToType(data['annotationType'], 'String');
            }
            if (data.hasOwnProperty('bigquerySource')) {
                obj['bigquerySource'] = GoogleCloudDatalabelingV1beta1BigQuerySource.constructFromObject(data['bigquerySource']);
            }
            if (data.hasOwnProperty('classificationMetadata')) {
                obj['classificationMetadata'] = GoogleCloudDatalabelingV1beta1ClassificationMetadata.constructFromObject(data['classificationMetadata']);
            }
            if (data.hasOwnProperty('dataType')) {
                obj['dataType'] = ApiClient.convertToType(data['dataType'], 'String');
            }
            if (data.hasOwnProperty('gcsSource')) {
                obj['gcsSource'] = GoogleCloudDatalabelingV1beta1GcsSource.constructFromObject(data['gcsSource']);
            }
            if (data.hasOwnProperty('textMetadata')) {
                obj['textMetadata'] = GoogleCloudDatalabelingV1beta1TextMetadata.constructFromObject(data['textMetadata']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatalabelingV1beta1InputConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatalabelingV1beta1InputConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['annotationType'] && !(typeof data['annotationType'] === 'string' || data['annotationType'] instanceof String)) {
            throw new Error("Expected the field `annotationType` to be a primitive type in the JSON string but got " + data['annotationType']);
        }
        // validate the optional field `bigquerySource`
        if (data['bigquerySource']) { // data not null
          GoogleCloudDatalabelingV1beta1BigQuerySource.validateJSON(data['bigquerySource']);
        }
        // validate the optional field `classificationMetadata`
        if (data['classificationMetadata']) { // data not null
          GoogleCloudDatalabelingV1beta1ClassificationMetadata.validateJSON(data['classificationMetadata']);
        }
        // ensure the json data is a string
        if (data['dataType'] && !(typeof data['dataType'] === 'string' || data['dataType'] instanceof String)) {
            throw new Error("Expected the field `dataType` to be a primitive type in the JSON string but got " + data['dataType']);
        }
        // validate the optional field `gcsSource`
        if (data['gcsSource']) { // data not null
          GoogleCloudDatalabelingV1beta1GcsSource.validateJSON(data['gcsSource']);
        }
        // validate the optional field `textMetadata`
        if (data['textMetadata']) { // data not null
          GoogleCloudDatalabelingV1beta1TextMetadata.validateJSON(data['textMetadata']);
        }

        return true;
    }


}



/**
 * Optional. The type of annotation to be performed on this data. You must specify this field if you are using this InputConfig in an EvaluationJob.
 * @member {module:model/GoogleCloudDatalabelingV1beta1InputConfig.AnnotationTypeEnum} annotationType
 */
GoogleCloudDatalabelingV1beta1InputConfig.prototype['annotationType'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1beta1BigQuerySource} bigquerySource
 */
GoogleCloudDatalabelingV1beta1InputConfig.prototype['bigquerySource'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1beta1ClassificationMetadata} classificationMetadata
 */
GoogleCloudDatalabelingV1beta1InputConfig.prototype['classificationMetadata'] = undefined;

/**
 * Required. Data type must be specifed when user tries to import data.
 * @member {module:model/GoogleCloudDatalabelingV1beta1InputConfig.DataTypeEnum} dataType
 */
GoogleCloudDatalabelingV1beta1InputConfig.prototype['dataType'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1beta1GcsSource} gcsSource
 */
GoogleCloudDatalabelingV1beta1InputConfig.prototype['gcsSource'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1beta1TextMetadata} textMetadata
 */
GoogleCloudDatalabelingV1beta1InputConfig.prototype['textMetadata'] = undefined;





/**
 * Allowed values for the <code>annotationType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDatalabelingV1beta1InputConfig['AnnotationTypeEnum'] = {

    /**
     * value: "ANNOTATION_TYPE_UNSPECIFIED"
     * @const
     */
    "ANNOTATION_TYPE_UNSPECIFIED": "ANNOTATION_TYPE_UNSPECIFIED",

    /**
     * value: "IMAGE_CLASSIFICATION_ANNOTATION"
     * @const
     */
    "IMAGE_CLASSIFICATION_ANNOTATION": "IMAGE_CLASSIFICATION_ANNOTATION",

    /**
     * value: "IMAGE_BOUNDING_BOX_ANNOTATION"
     * @const
     */
    "IMAGE_BOUNDING_BOX_ANNOTATION": "IMAGE_BOUNDING_BOX_ANNOTATION",

    /**
     * value: "IMAGE_ORIENTED_BOUNDING_BOX_ANNOTATION"
     * @const
     */
    "IMAGE_ORIENTED_BOUNDING_BOX_ANNOTATION": "IMAGE_ORIENTED_BOUNDING_BOX_ANNOTATION",

    /**
     * value: "IMAGE_BOUNDING_POLY_ANNOTATION"
     * @const
     */
    "IMAGE_BOUNDING_POLY_ANNOTATION": "IMAGE_BOUNDING_POLY_ANNOTATION",

    /**
     * value: "IMAGE_POLYLINE_ANNOTATION"
     * @const
     */
    "IMAGE_POLYLINE_ANNOTATION": "IMAGE_POLYLINE_ANNOTATION",

    /**
     * value: "IMAGE_SEGMENTATION_ANNOTATION"
     * @const
     */
    "IMAGE_SEGMENTATION_ANNOTATION": "IMAGE_SEGMENTATION_ANNOTATION",

    /**
     * value: "VIDEO_SHOTS_CLASSIFICATION_ANNOTATION"
     * @const
     */
    "VIDEO_SHOTS_CLASSIFICATION_ANNOTATION": "VIDEO_SHOTS_CLASSIFICATION_ANNOTATION",

    /**
     * value: "VIDEO_OBJECT_TRACKING_ANNOTATION"
     * @const
     */
    "VIDEO_OBJECT_TRACKING_ANNOTATION": "VIDEO_OBJECT_TRACKING_ANNOTATION",

    /**
     * value: "VIDEO_OBJECT_DETECTION_ANNOTATION"
     * @const
     */
    "VIDEO_OBJECT_DETECTION_ANNOTATION": "VIDEO_OBJECT_DETECTION_ANNOTATION",

    /**
     * value: "VIDEO_EVENT_ANNOTATION"
     * @const
     */
    "VIDEO_EVENT_ANNOTATION": "VIDEO_EVENT_ANNOTATION",

    /**
     * value: "TEXT_CLASSIFICATION_ANNOTATION"
     * @const
     */
    "TEXT_CLASSIFICATION_ANNOTATION": "TEXT_CLASSIFICATION_ANNOTATION",

    /**
     * value: "TEXT_ENTITY_EXTRACTION_ANNOTATION"
     * @const
     */
    "TEXT_ENTITY_EXTRACTION_ANNOTATION": "TEXT_ENTITY_EXTRACTION_ANNOTATION",

    /**
     * value: "GENERAL_CLASSIFICATION_ANNOTATION"
     * @const
     */
    "GENERAL_CLASSIFICATION_ANNOTATION": "GENERAL_CLASSIFICATION_ANNOTATION"
};


/**
 * Allowed values for the <code>dataType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDatalabelingV1beta1InputConfig['DataTypeEnum'] = {

    /**
     * value: "DATA_TYPE_UNSPECIFIED"
     * @const
     */
    "DATA_TYPE_UNSPECIFIED": "DATA_TYPE_UNSPECIFIED",

    /**
     * value: "IMAGE"
     * @const
     */
    "IMAGE": "IMAGE",

    /**
     * value: "VIDEO"
     * @const
     */
    "VIDEO": "VIDEO",

    /**
     * value: "TEXT"
     * @const
     */
    "TEXT": "TEXT",

    /**
     * value: "GENERAL_DATA"
     * @const
     */
    "GENERAL_DATA": "GENERAL_DATA"
};



export default GoogleCloudDatalabelingV1beta1InputConfig;

