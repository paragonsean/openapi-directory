/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDatalabelingV1beta1VideoThumbnail from './GoogleCloudDatalabelingV1beta1VideoThumbnail';

/**
 * The GoogleCloudDatalabelingV1beta1VideoPayload model module.
 * @module model/GoogleCloudDatalabelingV1beta1VideoPayload
 * @version v1beta1
 */
class GoogleCloudDatalabelingV1beta1VideoPayload {
    /**
     * Constructs a new <code>GoogleCloudDatalabelingV1beta1VideoPayload</code>.
     * Container of information of a video.
     * @alias module:model/GoogleCloudDatalabelingV1beta1VideoPayload
     */
    constructor() { 
        
        GoogleCloudDatalabelingV1beta1VideoPayload.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatalabelingV1beta1VideoPayload</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatalabelingV1beta1VideoPayload} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatalabelingV1beta1VideoPayload} The populated <code>GoogleCloudDatalabelingV1beta1VideoPayload</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatalabelingV1beta1VideoPayload();

            if (data.hasOwnProperty('frameRate')) {
                obj['frameRate'] = ApiClient.convertToType(data['frameRate'], 'Number');
            }
            if (data.hasOwnProperty('mimeType')) {
                obj['mimeType'] = ApiClient.convertToType(data['mimeType'], 'String');
            }
            if (data.hasOwnProperty('signedUri')) {
                obj['signedUri'] = ApiClient.convertToType(data['signedUri'], 'String');
            }
            if (data.hasOwnProperty('videoThumbnails')) {
                obj['videoThumbnails'] = ApiClient.convertToType(data['videoThumbnails'], [GoogleCloudDatalabelingV1beta1VideoThumbnail]);
            }
            if (data.hasOwnProperty('videoUri')) {
                obj['videoUri'] = ApiClient.convertToType(data['videoUri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatalabelingV1beta1VideoPayload</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatalabelingV1beta1VideoPayload</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['mimeType'] && !(typeof data['mimeType'] === 'string' || data['mimeType'] instanceof String)) {
            throw new Error("Expected the field `mimeType` to be a primitive type in the JSON string but got " + data['mimeType']);
        }
        // ensure the json data is a string
        if (data['signedUri'] && !(typeof data['signedUri'] === 'string' || data['signedUri'] instanceof String)) {
            throw new Error("Expected the field `signedUri` to be a primitive type in the JSON string but got " + data['signedUri']);
        }
        if (data['videoThumbnails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['videoThumbnails'])) {
                throw new Error("Expected the field `videoThumbnails` to be an array in the JSON data but got " + data['videoThumbnails']);
            }
            // validate the optional field `videoThumbnails` (array)
            for (const item of data['videoThumbnails']) {
                GoogleCloudDatalabelingV1beta1VideoThumbnail.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['videoUri'] && !(typeof data['videoUri'] === 'string' || data['videoUri'] instanceof String)) {
            throw new Error("Expected the field `videoUri` to be a primitive type in the JSON string but got " + data['videoUri']);
        }

        return true;
    }


}



/**
 * FPS of the video.
 * @member {Number} frameRate
 */
GoogleCloudDatalabelingV1beta1VideoPayload.prototype['frameRate'] = undefined;

/**
 * Video format.
 * @member {String} mimeType
 */
GoogleCloudDatalabelingV1beta1VideoPayload.prototype['mimeType'] = undefined;

/**
 * Signed uri of the video file in the service bucket.
 * @member {String} signedUri
 */
GoogleCloudDatalabelingV1beta1VideoPayload.prototype['signedUri'] = undefined;

/**
 * The list of video thumbnails.
 * @member {Array.<module:model/GoogleCloudDatalabelingV1beta1VideoThumbnail>} videoThumbnails
 */
GoogleCloudDatalabelingV1beta1VideoPayload.prototype['videoThumbnails'] = undefined;

/**
 * Video uri from the user bucket.
 * @member {String} videoUri
 */
GoogleCloudDatalabelingV1beta1VideoPayload.prototype['videoUri'] = undefined;






export default GoogleCloudDatalabelingV1beta1VideoPayload;

