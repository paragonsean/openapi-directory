/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleRpcStatus from './GoogleRpcStatus';

/**
 * The GoogleCloudDatalabelingV1alpha1ImportDataOperationMetadata model module.
 * @module model/GoogleCloudDatalabelingV1alpha1ImportDataOperationMetadata
 * @version v1beta1
 */
class GoogleCloudDatalabelingV1alpha1ImportDataOperationMetadata {
    /**
     * Constructs a new <code>GoogleCloudDatalabelingV1alpha1ImportDataOperationMetadata</code>.
     * Metadata of an ImportData operation.
     * @alias module:model/GoogleCloudDatalabelingV1alpha1ImportDataOperationMetadata
     */
    constructor() { 
        
        GoogleCloudDatalabelingV1alpha1ImportDataOperationMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatalabelingV1alpha1ImportDataOperationMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatalabelingV1alpha1ImportDataOperationMetadata} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatalabelingV1alpha1ImportDataOperationMetadata} The populated <code>GoogleCloudDatalabelingV1alpha1ImportDataOperationMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatalabelingV1alpha1ImportDataOperationMetadata();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('dataset')) {
                obj['dataset'] = ApiClient.convertToType(data['dataset'], 'String');
            }
            if (data.hasOwnProperty('partialFailures')) {
                obj['partialFailures'] = ApiClient.convertToType(data['partialFailures'], [GoogleRpcStatus]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatalabelingV1alpha1ImportDataOperationMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatalabelingV1alpha1ImportDataOperationMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['dataset'] && !(typeof data['dataset'] === 'string' || data['dataset'] instanceof String)) {
            throw new Error("Expected the field `dataset` to be a primitive type in the JSON string but got " + data['dataset']);
        }
        if (data['partialFailures']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['partialFailures'])) {
                throw new Error("Expected the field `partialFailures` to be an array in the JSON data but got " + data['partialFailures']);
            }
            // validate the optional field `partialFailures` (array)
            for (const item of data['partialFailures']) {
                GoogleRpcStatus.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Output only. Timestamp when import dataset request was created.
 * @member {String} createTime
 */
GoogleCloudDatalabelingV1alpha1ImportDataOperationMetadata.prototype['createTime'] = undefined;

/**
 * Output only. The name of imported dataset. \"projects/_*_/datasets/_*\"
 * @member {String} dataset
 */
GoogleCloudDatalabelingV1alpha1ImportDataOperationMetadata.prototype['dataset'] = undefined;

/**
 * Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details.
 * @member {Array.<module:model/GoogleRpcStatus>} partialFailures
 */
GoogleCloudDatalabelingV1alpha1ImportDataOperationMetadata.prototype['partialFailures'] = undefined;






export default GoogleCloudDatalabelingV1alpha1ImportDataOperationMetadata;

