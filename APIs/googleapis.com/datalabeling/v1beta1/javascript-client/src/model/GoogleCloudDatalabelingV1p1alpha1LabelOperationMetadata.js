/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDatalabelingV1p1alpha1LabelImageBoundingBoxOperationMetadata from './GoogleCloudDatalabelingV1p1alpha1LabelImageBoundingBoxOperationMetadata';
import GoogleCloudDatalabelingV1p1alpha1LabelImageBoundingPolyOperationMetadata from './GoogleCloudDatalabelingV1p1alpha1LabelImageBoundingPolyOperationMetadata';
import GoogleCloudDatalabelingV1p1alpha1LabelImageClassificationOperationMetadata from './GoogleCloudDatalabelingV1p1alpha1LabelImageClassificationOperationMetadata';
import GoogleCloudDatalabelingV1p1alpha1LabelImageOrientedBoundingBoxOperationMetadata from './GoogleCloudDatalabelingV1p1alpha1LabelImageOrientedBoundingBoxOperationMetadata';
import GoogleCloudDatalabelingV1p1alpha1LabelImagePolylineOperationMetadata from './GoogleCloudDatalabelingV1p1alpha1LabelImagePolylineOperationMetadata';
import GoogleCloudDatalabelingV1p1alpha1LabelImageSegmentationOperationMetadata from './GoogleCloudDatalabelingV1p1alpha1LabelImageSegmentationOperationMetadata';
import GoogleCloudDatalabelingV1p1alpha1LabelTextClassificationOperationMetadata from './GoogleCloudDatalabelingV1p1alpha1LabelTextClassificationOperationMetadata';
import GoogleCloudDatalabelingV1p1alpha1LabelTextEntityExtractionOperationMetadata from './GoogleCloudDatalabelingV1p1alpha1LabelTextEntityExtractionOperationMetadata';
import GoogleCloudDatalabelingV1p1alpha1LabelVideoClassificationOperationMetadata from './GoogleCloudDatalabelingV1p1alpha1LabelVideoClassificationOperationMetadata';
import GoogleCloudDatalabelingV1p1alpha1LabelVideoEventOperationMetadata from './GoogleCloudDatalabelingV1p1alpha1LabelVideoEventOperationMetadata';
import GoogleCloudDatalabelingV1p1alpha1LabelVideoObjectDetectionOperationMetadata from './GoogleCloudDatalabelingV1p1alpha1LabelVideoObjectDetectionOperationMetadata';
import GoogleCloudDatalabelingV1p1alpha1LabelVideoObjectTrackingOperationMetadata from './GoogleCloudDatalabelingV1p1alpha1LabelVideoObjectTrackingOperationMetadata';
import GoogleRpcStatus from './GoogleRpcStatus';

/**
 * The GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata model module.
 * @module model/GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata
 * @version v1beta1
 */
class GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata {
    /**
     * Constructs a new <code>GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata</code>.
     * Metadata of a labeling operation, such as LabelImage or LabelVideo. Next tag: 23
     * @alias module:model/GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata
     */
    constructor() { 
        
        GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata} The populated <code>GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata();

            if (data.hasOwnProperty('annotatedDataset')) {
                obj['annotatedDataset'] = ApiClient.convertToType(data['annotatedDataset'], 'String');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('dataset')) {
                obj['dataset'] = ApiClient.convertToType(data['dataset'], 'String');
            }
            if (data.hasOwnProperty('imageBoundingBoxDetails')) {
                obj['imageBoundingBoxDetails'] = GoogleCloudDatalabelingV1p1alpha1LabelImageBoundingBoxOperationMetadata.constructFromObject(data['imageBoundingBoxDetails']);
            }
            if (data.hasOwnProperty('imageBoundingPolyDetails')) {
                obj['imageBoundingPolyDetails'] = GoogleCloudDatalabelingV1p1alpha1LabelImageBoundingPolyOperationMetadata.constructFromObject(data['imageBoundingPolyDetails']);
            }
            if (data.hasOwnProperty('imageClassificationDetails')) {
                obj['imageClassificationDetails'] = GoogleCloudDatalabelingV1p1alpha1LabelImageClassificationOperationMetadata.constructFromObject(data['imageClassificationDetails']);
            }
            if (data.hasOwnProperty('imageOrientedBoundingBoxDetails')) {
                obj['imageOrientedBoundingBoxDetails'] = GoogleCloudDatalabelingV1p1alpha1LabelImageOrientedBoundingBoxOperationMetadata.constructFromObject(data['imageOrientedBoundingBoxDetails']);
            }
            if (data.hasOwnProperty('imagePolylineDetails')) {
                obj['imagePolylineDetails'] = GoogleCloudDatalabelingV1p1alpha1LabelImagePolylineOperationMetadata.constructFromObject(data['imagePolylineDetails']);
            }
            if (data.hasOwnProperty('imageSegmentationDetails')) {
                obj['imageSegmentationDetails'] = GoogleCloudDatalabelingV1p1alpha1LabelImageSegmentationOperationMetadata.constructFromObject(data['imageSegmentationDetails']);
            }
            if (data.hasOwnProperty('partialFailures')) {
                obj['partialFailures'] = ApiClient.convertToType(data['partialFailures'], [GoogleRpcStatus]);
            }
            if (data.hasOwnProperty('progressPercent')) {
                obj['progressPercent'] = ApiClient.convertToType(data['progressPercent'], 'Number');
            }
            if (data.hasOwnProperty('textClassificationDetails')) {
                obj['textClassificationDetails'] = GoogleCloudDatalabelingV1p1alpha1LabelTextClassificationOperationMetadata.constructFromObject(data['textClassificationDetails']);
            }
            if (data.hasOwnProperty('textEntityExtractionDetails')) {
                obj['textEntityExtractionDetails'] = GoogleCloudDatalabelingV1p1alpha1LabelTextEntityExtractionOperationMetadata.constructFromObject(data['textEntityExtractionDetails']);
            }
            if (data.hasOwnProperty('videoClassificationDetails')) {
                obj['videoClassificationDetails'] = GoogleCloudDatalabelingV1p1alpha1LabelVideoClassificationOperationMetadata.constructFromObject(data['videoClassificationDetails']);
            }
            if (data.hasOwnProperty('videoEventDetails')) {
                obj['videoEventDetails'] = GoogleCloudDatalabelingV1p1alpha1LabelVideoEventOperationMetadata.constructFromObject(data['videoEventDetails']);
            }
            if (data.hasOwnProperty('videoObjectDetectionDetails')) {
                obj['videoObjectDetectionDetails'] = GoogleCloudDatalabelingV1p1alpha1LabelVideoObjectDetectionOperationMetadata.constructFromObject(data['videoObjectDetectionDetails']);
            }
            if (data.hasOwnProperty('videoObjectTrackingDetails')) {
                obj['videoObjectTrackingDetails'] = GoogleCloudDatalabelingV1p1alpha1LabelVideoObjectTrackingOperationMetadata.constructFromObject(data['videoObjectTrackingDetails']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['annotatedDataset'] && !(typeof data['annotatedDataset'] === 'string' || data['annotatedDataset'] instanceof String)) {
            throw new Error("Expected the field `annotatedDataset` to be a primitive type in the JSON string but got " + data['annotatedDataset']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['dataset'] && !(typeof data['dataset'] === 'string' || data['dataset'] instanceof String)) {
            throw new Error("Expected the field `dataset` to be a primitive type in the JSON string but got " + data['dataset']);
        }
        // validate the optional field `imageBoundingBoxDetails`
        if (data['imageBoundingBoxDetails']) { // data not null
          GoogleCloudDatalabelingV1p1alpha1LabelImageBoundingBoxOperationMetadata.validateJSON(data['imageBoundingBoxDetails']);
        }
        // validate the optional field `imageBoundingPolyDetails`
        if (data['imageBoundingPolyDetails']) { // data not null
          GoogleCloudDatalabelingV1p1alpha1LabelImageBoundingPolyOperationMetadata.validateJSON(data['imageBoundingPolyDetails']);
        }
        // validate the optional field `imageClassificationDetails`
        if (data['imageClassificationDetails']) { // data not null
          GoogleCloudDatalabelingV1p1alpha1LabelImageClassificationOperationMetadata.validateJSON(data['imageClassificationDetails']);
        }
        // validate the optional field `imageOrientedBoundingBoxDetails`
        if (data['imageOrientedBoundingBoxDetails']) { // data not null
          GoogleCloudDatalabelingV1p1alpha1LabelImageOrientedBoundingBoxOperationMetadata.validateJSON(data['imageOrientedBoundingBoxDetails']);
        }
        // validate the optional field `imagePolylineDetails`
        if (data['imagePolylineDetails']) { // data not null
          GoogleCloudDatalabelingV1p1alpha1LabelImagePolylineOperationMetadata.validateJSON(data['imagePolylineDetails']);
        }
        // validate the optional field `imageSegmentationDetails`
        if (data['imageSegmentationDetails']) { // data not null
          GoogleCloudDatalabelingV1p1alpha1LabelImageSegmentationOperationMetadata.validateJSON(data['imageSegmentationDetails']);
        }
        if (data['partialFailures']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['partialFailures'])) {
                throw new Error("Expected the field `partialFailures` to be an array in the JSON data but got " + data['partialFailures']);
            }
            // validate the optional field `partialFailures` (array)
            for (const item of data['partialFailures']) {
                GoogleRpcStatus.validateJSON(item);
            };
        }
        // validate the optional field `textClassificationDetails`
        if (data['textClassificationDetails']) { // data not null
          GoogleCloudDatalabelingV1p1alpha1LabelTextClassificationOperationMetadata.validateJSON(data['textClassificationDetails']);
        }
        // validate the optional field `textEntityExtractionDetails`
        if (data['textEntityExtractionDetails']) { // data not null
          GoogleCloudDatalabelingV1p1alpha1LabelTextEntityExtractionOperationMetadata.validateJSON(data['textEntityExtractionDetails']);
        }
        // validate the optional field `videoClassificationDetails`
        if (data['videoClassificationDetails']) { // data not null
          GoogleCloudDatalabelingV1p1alpha1LabelVideoClassificationOperationMetadata.validateJSON(data['videoClassificationDetails']);
        }
        // validate the optional field `videoEventDetails`
        if (data['videoEventDetails']) { // data not null
          GoogleCloudDatalabelingV1p1alpha1LabelVideoEventOperationMetadata.validateJSON(data['videoEventDetails']);
        }
        // validate the optional field `videoObjectDetectionDetails`
        if (data['videoObjectDetectionDetails']) { // data not null
          GoogleCloudDatalabelingV1p1alpha1LabelVideoObjectDetectionOperationMetadata.validateJSON(data['videoObjectDetectionDetails']);
        }
        // validate the optional field `videoObjectTrackingDetails`
        if (data['videoObjectTrackingDetails']) { // data not null
          GoogleCloudDatalabelingV1p1alpha1LabelVideoObjectTrackingOperationMetadata.validateJSON(data['videoObjectTrackingDetails']);
        }

        return true;
    }


}



/**
 * Output only. The name of annotated dataset in format \"projects/_*_/datasets/_*_/annotatedDatasets/_*\".
 * @member {String} annotatedDataset
 */
GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata.prototype['annotatedDataset'] = undefined;

/**
 * Output only. Timestamp when labeling request was created.
 * @member {String} createTime
 */
GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata.prototype['createTime'] = undefined;

/**
 * Output only. The name of dataset to be labeled. \"projects/_*_/datasets/_*\"
 * @member {String} dataset
 */
GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata.prototype['dataset'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1p1alpha1LabelImageBoundingBoxOperationMetadata} imageBoundingBoxDetails
 */
GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata.prototype['imageBoundingBoxDetails'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1p1alpha1LabelImageBoundingPolyOperationMetadata} imageBoundingPolyDetails
 */
GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata.prototype['imageBoundingPolyDetails'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1p1alpha1LabelImageClassificationOperationMetadata} imageClassificationDetails
 */
GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata.prototype['imageClassificationDetails'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1p1alpha1LabelImageOrientedBoundingBoxOperationMetadata} imageOrientedBoundingBoxDetails
 */
GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata.prototype['imageOrientedBoundingBoxDetails'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1p1alpha1LabelImagePolylineOperationMetadata} imagePolylineDetails
 */
GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata.prototype['imagePolylineDetails'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1p1alpha1LabelImageSegmentationOperationMetadata} imageSegmentationDetails
 */
GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata.prototype['imageSegmentationDetails'] = undefined;

/**
 * Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details.
 * @member {Array.<module:model/GoogleRpcStatus>} partialFailures
 */
GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata.prototype['partialFailures'] = undefined;

/**
 * Output only. Progress of label operation. Range: [0, 100].
 * @member {Number} progressPercent
 */
GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata.prototype['progressPercent'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1p1alpha1LabelTextClassificationOperationMetadata} textClassificationDetails
 */
GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata.prototype['textClassificationDetails'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1p1alpha1LabelTextEntityExtractionOperationMetadata} textEntityExtractionDetails
 */
GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata.prototype['textEntityExtractionDetails'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1p1alpha1LabelVideoClassificationOperationMetadata} videoClassificationDetails
 */
GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata.prototype['videoClassificationDetails'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1p1alpha1LabelVideoEventOperationMetadata} videoEventDetails
 */
GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata.prototype['videoEventDetails'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1p1alpha1LabelVideoObjectDetectionOperationMetadata} videoObjectDetectionDetails
 */
GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata.prototype['videoObjectDetectionDetails'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1p1alpha1LabelVideoObjectTrackingOperationMetadata} videoObjectTrackingDetails
 */
GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata.prototype['videoObjectTrackingDetails'] = undefined;






export default GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata;

