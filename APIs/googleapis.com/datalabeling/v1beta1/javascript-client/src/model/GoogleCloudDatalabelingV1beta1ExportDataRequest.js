/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDatalabelingV1beta1OutputConfig from './GoogleCloudDatalabelingV1beta1OutputConfig';

/**
 * The GoogleCloudDatalabelingV1beta1ExportDataRequest model module.
 * @module model/GoogleCloudDatalabelingV1beta1ExportDataRequest
 * @version v1beta1
 */
class GoogleCloudDatalabelingV1beta1ExportDataRequest {
    /**
     * Constructs a new <code>GoogleCloudDatalabelingV1beta1ExportDataRequest</code>.
     * Request message for ExportData API.
     * @alias module:model/GoogleCloudDatalabelingV1beta1ExportDataRequest
     */
    constructor() { 
        
        GoogleCloudDatalabelingV1beta1ExportDataRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatalabelingV1beta1ExportDataRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatalabelingV1beta1ExportDataRequest} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatalabelingV1beta1ExportDataRequest} The populated <code>GoogleCloudDatalabelingV1beta1ExportDataRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatalabelingV1beta1ExportDataRequest();

            if (data.hasOwnProperty('annotatedDataset')) {
                obj['annotatedDataset'] = ApiClient.convertToType(data['annotatedDataset'], 'String');
            }
            if (data.hasOwnProperty('filter')) {
                obj['filter'] = ApiClient.convertToType(data['filter'], 'String');
            }
            if (data.hasOwnProperty('outputConfig')) {
                obj['outputConfig'] = GoogleCloudDatalabelingV1beta1OutputConfig.constructFromObject(data['outputConfig']);
            }
            if (data.hasOwnProperty('userEmailAddress')) {
                obj['userEmailAddress'] = ApiClient.convertToType(data['userEmailAddress'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatalabelingV1beta1ExportDataRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatalabelingV1beta1ExportDataRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['annotatedDataset'] && !(typeof data['annotatedDataset'] === 'string' || data['annotatedDataset'] instanceof String)) {
            throw new Error("Expected the field `annotatedDataset` to be a primitive type in the JSON string but got " + data['annotatedDataset']);
        }
        // ensure the json data is a string
        if (data['filter'] && !(typeof data['filter'] === 'string' || data['filter'] instanceof String)) {
            throw new Error("Expected the field `filter` to be a primitive type in the JSON string but got " + data['filter']);
        }
        // validate the optional field `outputConfig`
        if (data['outputConfig']) { // data not null
          GoogleCloudDatalabelingV1beta1OutputConfig.validateJSON(data['outputConfig']);
        }
        // ensure the json data is a string
        if (data['userEmailAddress'] && !(typeof data['userEmailAddress'] === 'string' || data['userEmailAddress'] instanceof String)) {
            throw new Error("Expected the field `userEmailAddress` to be a primitive type in the JSON string but got " + data['userEmailAddress']);
        }

        return true;
    }


}



/**
 * Required. Annotated dataset resource name. DataItem in Dataset and their annotations in specified annotated dataset will be exported. It's in format of projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/ {annotated_dataset_id}
 * @member {String} annotatedDataset
 */
GoogleCloudDatalabelingV1beta1ExportDataRequest.prototype['annotatedDataset'] = undefined;

/**
 * Optional. Filter is not supported at this moment.
 * @member {String} filter
 */
GoogleCloudDatalabelingV1beta1ExportDataRequest.prototype['filter'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1beta1OutputConfig} outputConfig
 */
GoogleCloudDatalabelingV1beta1ExportDataRequest.prototype['outputConfig'] = undefined;

/**
 * Email of the user who started the export task and should be notified by email. If empty no notification will be sent.
 * @member {String} userEmailAddress
 */
GoogleCloudDatalabelingV1beta1ExportDataRequest.prototype['userEmailAddress'] = undefined;






export default GoogleCloudDatalabelingV1beta1ExportDataRequest;

