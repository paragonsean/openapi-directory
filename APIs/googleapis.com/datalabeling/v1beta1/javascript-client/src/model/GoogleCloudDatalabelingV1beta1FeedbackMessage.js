/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDatalabelingV1beta1FeedbackMessage model module.
 * @module model/GoogleCloudDatalabelingV1beta1FeedbackMessage
 * @version v1beta1
 */
class GoogleCloudDatalabelingV1beta1FeedbackMessage {
    /**
     * Constructs a new <code>GoogleCloudDatalabelingV1beta1FeedbackMessage</code>.
     * A feedback message inside a feedback thread.
     * @alias module:model/GoogleCloudDatalabelingV1beta1FeedbackMessage
     */
    constructor() { 
        
        GoogleCloudDatalabelingV1beta1FeedbackMessage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatalabelingV1beta1FeedbackMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatalabelingV1beta1FeedbackMessage} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatalabelingV1beta1FeedbackMessage} The populated <code>GoogleCloudDatalabelingV1beta1FeedbackMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatalabelingV1beta1FeedbackMessage();

            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('image')) {
                obj['image'] = ApiClient.convertToType(data['image'], 'Blob');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('operatorFeedbackMetadata')) {
                obj['operatorFeedbackMetadata'] = ApiClient.convertToType(data['operatorFeedbackMetadata'], Object);
            }
            if (data.hasOwnProperty('requesterFeedbackMetadata')) {
                obj['requesterFeedbackMetadata'] = ApiClient.convertToType(data['requesterFeedbackMetadata'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatalabelingV1beta1FeedbackMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatalabelingV1beta1FeedbackMessage</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * String content of the feedback. Maximum of 10000 characters.
 * @member {String} body
 */
GoogleCloudDatalabelingV1beta1FeedbackMessage.prototype['body'] = undefined;

/**
 * Create time.
 * @member {String} createTime
 */
GoogleCloudDatalabelingV1beta1FeedbackMessage.prototype['createTime'] = undefined;

/**
 * The image storing this feedback if the feedback is an image representing operator's comments.
 * @member {Blob} image
 */
GoogleCloudDatalabelingV1beta1FeedbackMessage.prototype['image'] = undefined;

/**
 * Name of the feedback message in a feedback thread. Format: 'project/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}/feedbackMessage/{feedback_message_id}'
 * @member {String} name
 */
GoogleCloudDatalabelingV1beta1FeedbackMessage.prototype['name'] = undefined;

/**
 * Metadata describing the feedback from the operator.
 * @member {Object} operatorFeedbackMetadata
 */
GoogleCloudDatalabelingV1beta1FeedbackMessage.prototype['operatorFeedbackMetadata'] = undefined;

/**
 * Metadata describing the feedback from the labeling task requester.
 * @member {Object} requesterFeedbackMetadata
 */
GoogleCloudDatalabelingV1beta1FeedbackMessage.prototype['requesterFeedbackMetadata'] = undefined;






export default GoogleCloudDatalabelingV1beta1FeedbackMessage;

