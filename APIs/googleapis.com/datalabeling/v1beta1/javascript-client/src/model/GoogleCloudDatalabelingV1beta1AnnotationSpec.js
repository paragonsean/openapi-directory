/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDatalabelingV1beta1AnnotationSpec model module.
 * @module model/GoogleCloudDatalabelingV1beta1AnnotationSpec
 * @version v1beta1
 */
class GoogleCloudDatalabelingV1beta1AnnotationSpec {
    /**
     * Constructs a new <code>GoogleCloudDatalabelingV1beta1AnnotationSpec</code>.
     * Container of information related to one possible annotation that can be used in a labeling task. For example, an image classification task where images are labeled as &#x60;dog&#x60; or &#x60;cat&#x60; must reference an AnnotationSpec for &#x60;dog&#x60; and an AnnotationSpec for &#x60;cat&#x60;.
     * @alias module:model/GoogleCloudDatalabelingV1beta1AnnotationSpec
     */
    constructor() { 
        
        GoogleCloudDatalabelingV1beta1AnnotationSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatalabelingV1beta1AnnotationSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatalabelingV1beta1AnnotationSpec} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatalabelingV1beta1AnnotationSpec} The populated <code>GoogleCloudDatalabelingV1beta1AnnotationSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatalabelingV1beta1AnnotationSpec();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatalabelingV1beta1AnnotationSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatalabelingV1beta1AnnotationSpec</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }

        return true;
    }


}



/**
 * Optional. User-provided description of the annotation specification. The description can be up to 10,000 characters long.
 * @member {String} description
 */
GoogleCloudDatalabelingV1beta1AnnotationSpec.prototype['description'] = undefined;

/**
 * Required. The display name of the AnnotationSpec. Maximum of 64 characters.
 * @member {String} displayName
 */
GoogleCloudDatalabelingV1beta1AnnotationSpec.prototype['displayName'] = undefined;

/**
 * Output only. This is the integer index of the AnnotationSpec. The index for the whole AnnotationSpecSet is sequential starting from 0. For example, an AnnotationSpecSet with classes `dog` and `cat`, might contain one AnnotationSpec with `{ display_name: \"dog\", index: 0 }` and one AnnotationSpec with `{ display_name: \"cat\", index: 1 }`. This is especially useful for model training as it encodes the string labels into numeric values.
 * @member {Number} index
 */
GoogleCloudDatalabelingV1beta1AnnotationSpec.prototype['index'] = undefined;






export default GoogleCloudDatalabelingV1beta1AnnotationSpec;

