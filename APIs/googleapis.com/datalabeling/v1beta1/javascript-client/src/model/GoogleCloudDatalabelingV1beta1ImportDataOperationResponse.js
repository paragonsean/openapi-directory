/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDatalabelingV1beta1ImportDataOperationResponse model module.
 * @module model/GoogleCloudDatalabelingV1beta1ImportDataOperationResponse
 * @version v1beta1
 */
class GoogleCloudDatalabelingV1beta1ImportDataOperationResponse {
    /**
     * Constructs a new <code>GoogleCloudDatalabelingV1beta1ImportDataOperationResponse</code>.
     * Response used for ImportData longrunning operation.
     * @alias module:model/GoogleCloudDatalabelingV1beta1ImportDataOperationResponse
     */
    constructor() { 
        
        GoogleCloudDatalabelingV1beta1ImportDataOperationResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatalabelingV1beta1ImportDataOperationResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatalabelingV1beta1ImportDataOperationResponse} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatalabelingV1beta1ImportDataOperationResponse} The populated <code>GoogleCloudDatalabelingV1beta1ImportDataOperationResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatalabelingV1beta1ImportDataOperationResponse();

            if (data.hasOwnProperty('dataset')) {
                obj['dataset'] = ApiClient.convertToType(data['dataset'], 'String');
            }
            if (data.hasOwnProperty('importCount')) {
                obj['importCount'] = ApiClient.convertToType(data['importCount'], 'Number');
            }
            if (data.hasOwnProperty('totalCount')) {
                obj['totalCount'] = ApiClient.convertToType(data['totalCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatalabelingV1beta1ImportDataOperationResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatalabelingV1beta1ImportDataOperationResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dataset'] && !(typeof data['dataset'] === 'string' || data['dataset'] instanceof String)) {
            throw new Error("Expected the field `dataset` to be a primitive type in the JSON string but got " + data['dataset']);
        }

        return true;
    }


}



/**
 * Ouptut only. The name of imported dataset.
 * @member {String} dataset
 */
GoogleCloudDatalabelingV1beta1ImportDataOperationResponse.prototype['dataset'] = undefined;

/**
 * Output only. Number of examples imported successfully.
 * @member {Number} importCount
 */
GoogleCloudDatalabelingV1beta1ImportDataOperationResponse.prototype['importCount'] = undefined;

/**
 * Output only. Total number of examples requested to import
 * @member {Number} totalCount
 */
GoogleCloudDatalabelingV1beta1ImportDataOperationResponse.prototype['totalCount'] = undefined;






export default GoogleCloudDatalabelingV1beta1ImportDataOperationResponse;

