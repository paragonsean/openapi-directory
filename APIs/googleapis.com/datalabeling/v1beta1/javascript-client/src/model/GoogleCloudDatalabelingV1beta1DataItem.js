/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDatalabelingV1beta1ImagePayload from './GoogleCloudDatalabelingV1beta1ImagePayload';
import GoogleCloudDatalabelingV1beta1TextPayload from './GoogleCloudDatalabelingV1beta1TextPayload';
import GoogleCloudDatalabelingV1beta1VideoPayload from './GoogleCloudDatalabelingV1beta1VideoPayload';

/**
 * The GoogleCloudDatalabelingV1beta1DataItem model module.
 * @module model/GoogleCloudDatalabelingV1beta1DataItem
 * @version v1beta1
 */
class GoogleCloudDatalabelingV1beta1DataItem {
    /**
     * Constructs a new <code>GoogleCloudDatalabelingV1beta1DataItem</code>.
     * DataItem is a piece of data, without annotation. For example, an image.
     * @alias module:model/GoogleCloudDatalabelingV1beta1DataItem
     */
    constructor() { 
        
        GoogleCloudDatalabelingV1beta1DataItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatalabelingV1beta1DataItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatalabelingV1beta1DataItem} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatalabelingV1beta1DataItem} The populated <code>GoogleCloudDatalabelingV1beta1DataItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatalabelingV1beta1DataItem();

            if (data.hasOwnProperty('imagePayload')) {
                obj['imagePayload'] = GoogleCloudDatalabelingV1beta1ImagePayload.constructFromObject(data['imagePayload']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('textPayload')) {
                obj['textPayload'] = GoogleCloudDatalabelingV1beta1TextPayload.constructFromObject(data['textPayload']);
            }
            if (data.hasOwnProperty('videoPayload')) {
                obj['videoPayload'] = GoogleCloudDatalabelingV1beta1VideoPayload.constructFromObject(data['videoPayload']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatalabelingV1beta1DataItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatalabelingV1beta1DataItem</code>.
     */
    static validateJSON(data) {
        // validate the optional field `imagePayload`
        if (data['imagePayload']) { // data not null
          GoogleCloudDatalabelingV1beta1ImagePayload.validateJSON(data['imagePayload']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `textPayload`
        if (data['textPayload']) { // data not null
          GoogleCloudDatalabelingV1beta1TextPayload.validateJSON(data['textPayload']);
        }
        // validate the optional field `videoPayload`
        if (data['videoPayload']) { // data not null
          GoogleCloudDatalabelingV1beta1VideoPayload.validateJSON(data['videoPayload']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudDatalabelingV1beta1ImagePayload} imagePayload
 */
GoogleCloudDatalabelingV1beta1DataItem.prototype['imagePayload'] = undefined;

/**
 * Output only. Name of the data item, in format of: projects/{project_id}/datasets/{dataset_id}/dataItems/{data_item_id}
 * @member {String} name
 */
GoogleCloudDatalabelingV1beta1DataItem.prototype['name'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1beta1TextPayload} textPayload
 */
GoogleCloudDatalabelingV1beta1DataItem.prototype['textPayload'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1beta1VideoPayload} videoPayload
 */
GoogleCloudDatalabelingV1beta1DataItem.prototype['videoPayload'] = undefined;






export default GoogleCloudDatalabelingV1beta1DataItem;

