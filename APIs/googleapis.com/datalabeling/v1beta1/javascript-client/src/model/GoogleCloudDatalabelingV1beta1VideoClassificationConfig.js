/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig from './GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig';

/**
 * The GoogleCloudDatalabelingV1beta1VideoClassificationConfig model module.
 * @module model/GoogleCloudDatalabelingV1beta1VideoClassificationConfig
 * @version v1beta1
 */
class GoogleCloudDatalabelingV1beta1VideoClassificationConfig {
    /**
     * Constructs a new <code>GoogleCloudDatalabelingV1beta1VideoClassificationConfig</code>.
     * Config for video classification human labeling task. Currently two types of video classification are supported: 1. Assign labels on the entire video. 2. Split the video into multiple video clips based on camera shot, and assign labels on each video clip.
     * @alias module:model/GoogleCloudDatalabelingV1beta1VideoClassificationConfig
     */
    constructor() { 
        
        GoogleCloudDatalabelingV1beta1VideoClassificationConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatalabelingV1beta1VideoClassificationConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatalabelingV1beta1VideoClassificationConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatalabelingV1beta1VideoClassificationConfig} The populated <code>GoogleCloudDatalabelingV1beta1VideoClassificationConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatalabelingV1beta1VideoClassificationConfig();

            if (data.hasOwnProperty('annotationSpecSetConfigs')) {
                obj['annotationSpecSetConfigs'] = ApiClient.convertToType(data['annotationSpecSetConfigs'], [GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig]);
            }
            if (data.hasOwnProperty('applyShotDetection')) {
                obj['applyShotDetection'] = ApiClient.convertToType(data['applyShotDetection'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatalabelingV1beta1VideoClassificationConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatalabelingV1beta1VideoClassificationConfig</code>.
     */
    static validateJSON(data) {
        if (data['annotationSpecSetConfigs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['annotationSpecSetConfigs'])) {
                throw new Error("Expected the field `annotationSpecSetConfigs` to be an array in the JSON data but got " + data['annotationSpecSetConfigs']);
            }
            // validate the optional field `annotationSpecSetConfigs` (array)
            for (const item of data['annotationSpecSetConfigs']) {
                GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Required. The list of annotation spec set configs. Since watching a video clip takes much longer time than an image, we support label with multiple AnnotationSpecSet at the same time. Labels in each AnnotationSpecSet will be shown in a group to contributors. Contributors can select one or more (depending on whether to allow multi label) from each group.
 * @member {Array.<module:model/GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig>} annotationSpecSetConfigs
 */
GoogleCloudDatalabelingV1beta1VideoClassificationConfig.prototype['annotationSpecSetConfigs'] = undefined;

/**
 * Optional. Option to apply shot detection on the video.
 * @member {Boolean} applyShotDetection
 */
GoogleCloudDatalabelingV1beta1VideoClassificationConfig.prototype['applyShotDetection'] = undefined;






export default GoogleCloudDatalabelingV1beta1VideoClassificationConfig;

