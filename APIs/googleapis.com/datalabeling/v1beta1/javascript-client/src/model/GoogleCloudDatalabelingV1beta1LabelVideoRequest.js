/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDatalabelingV1beta1EventConfig from './GoogleCloudDatalabelingV1beta1EventConfig';
import GoogleCloudDatalabelingV1beta1HumanAnnotationConfig from './GoogleCloudDatalabelingV1beta1HumanAnnotationConfig';
import GoogleCloudDatalabelingV1beta1ObjectDetectionConfig from './GoogleCloudDatalabelingV1beta1ObjectDetectionConfig';
import GoogleCloudDatalabelingV1beta1ObjectTrackingConfig from './GoogleCloudDatalabelingV1beta1ObjectTrackingConfig';
import GoogleCloudDatalabelingV1beta1VideoClassificationConfig from './GoogleCloudDatalabelingV1beta1VideoClassificationConfig';

/**
 * The GoogleCloudDatalabelingV1beta1LabelVideoRequest model module.
 * @module model/GoogleCloudDatalabelingV1beta1LabelVideoRequest
 * @version v1beta1
 */
class GoogleCloudDatalabelingV1beta1LabelVideoRequest {
    /**
     * Constructs a new <code>GoogleCloudDatalabelingV1beta1LabelVideoRequest</code>.
     * Request message for LabelVideo.
     * @alias module:model/GoogleCloudDatalabelingV1beta1LabelVideoRequest
     */
    constructor() { 
        
        GoogleCloudDatalabelingV1beta1LabelVideoRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatalabelingV1beta1LabelVideoRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatalabelingV1beta1LabelVideoRequest} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatalabelingV1beta1LabelVideoRequest} The populated <code>GoogleCloudDatalabelingV1beta1LabelVideoRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatalabelingV1beta1LabelVideoRequest();

            if (data.hasOwnProperty('basicConfig')) {
                obj['basicConfig'] = GoogleCloudDatalabelingV1beta1HumanAnnotationConfig.constructFromObject(data['basicConfig']);
            }
            if (data.hasOwnProperty('eventConfig')) {
                obj['eventConfig'] = GoogleCloudDatalabelingV1beta1EventConfig.constructFromObject(data['eventConfig']);
            }
            if (data.hasOwnProperty('feature')) {
                obj['feature'] = ApiClient.convertToType(data['feature'], 'String');
            }
            if (data.hasOwnProperty('objectDetectionConfig')) {
                obj['objectDetectionConfig'] = GoogleCloudDatalabelingV1beta1ObjectDetectionConfig.constructFromObject(data['objectDetectionConfig']);
            }
            if (data.hasOwnProperty('objectTrackingConfig')) {
                obj['objectTrackingConfig'] = GoogleCloudDatalabelingV1beta1ObjectTrackingConfig.constructFromObject(data['objectTrackingConfig']);
            }
            if (data.hasOwnProperty('videoClassificationConfig')) {
                obj['videoClassificationConfig'] = GoogleCloudDatalabelingV1beta1VideoClassificationConfig.constructFromObject(data['videoClassificationConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatalabelingV1beta1LabelVideoRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatalabelingV1beta1LabelVideoRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `basicConfig`
        if (data['basicConfig']) { // data not null
          GoogleCloudDatalabelingV1beta1HumanAnnotationConfig.validateJSON(data['basicConfig']);
        }
        // validate the optional field `eventConfig`
        if (data['eventConfig']) { // data not null
          GoogleCloudDatalabelingV1beta1EventConfig.validateJSON(data['eventConfig']);
        }
        // ensure the json data is a string
        if (data['feature'] && !(typeof data['feature'] === 'string' || data['feature'] instanceof String)) {
            throw new Error("Expected the field `feature` to be a primitive type in the JSON string but got " + data['feature']);
        }
        // validate the optional field `objectDetectionConfig`
        if (data['objectDetectionConfig']) { // data not null
          GoogleCloudDatalabelingV1beta1ObjectDetectionConfig.validateJSON(data['objectDetectionConfig']);
        }
        // validate the optional field `objectTrackingConfig`
        if (data['objectTrackingConfig']) { // data not null
          GoogleCloudDatalabelingV1beta1ObjectTrackingConfig.validateJSON(data['objectTrackingConfig']);
        }
        // validate the optional field `videoClassificationConfig`
        if (data['videoClassificationConfig']) { // data not null
          GoogleCloudDatalabelingV1beta1VideoClassificationConfig.validateJSON(data['videoClassificationConfig']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudDatalabelingV1beta1HumanAnnotationConfig} basicConfig
 */
GoogleCloudDatalabelingV1beta1LabelVideoRequest.prototype['basicConfig'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1beta1EventConfig} eventConfig
 */
GoogleCloudDatalabelingV1beta1LabelVideoRequest.prototype['eventConfig'] = undefined;

/**
 * Required. The type of video labeling task.
 * @member {module:model/GoogleCloudDatalabelingV1beta1LabelVideoRequest.FeatureEnum} feature
 */
GoogleCloudDatalabelingV1beta1LabelVideoRequest.prototype['feature'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1beta1ObjectDetectionConfig} objectDetectionConfig
 */
GoogleCloudDatalabelingV1beta1LabelVideoRequest.prototype['objectDetectionConfig'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1beta1ObjectTrackingConfig} objectTrackingConfig
 */
GoogleCloudDatalabelingV1beta1LabelVideoRequest.prototype['objectTrackingConfig'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1beta1VideoClassificationConfig} videoClassificationConfig
 */
GoogleCloudDatalabelingV1beta1LabelVideoRequest.prototype['videoClassificationConfig'] = undefined;





/**
 * Allowed values for the <code>feature</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDatalabelingV1beta1LabelVideoRequest['FeatureEnum'] = {

    /**
     * value: "FEATURE_UNSPECIFIED"
     * @const
     */
    "FEATURE_UNSPECIFIED": "FEATURE_UNSPECIFIED",

    /**
     * value: "CLASSIFICATION"
     * @const
     */
    "CLASSIFICATION": "CLASSIFICATION",

    /**
     * value: "OBJECT_DETECTION"
     * @const
     */
    "OBJECT_DETECTION": "OBJECT_DETECTION",

    /**
     * value: "OBJECT_TRACKING"
     * @const
     */
    "OBJECT_TRACKING": "OBJECT_TRACKING",

    /**
     * value: "EVENT"
     * @const
     */
    "EVENT": "EVENT"
};



export default GoogleCloudDatalabelingV1beta1LabelVideoRequest;

