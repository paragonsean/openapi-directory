/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata model module.
 * @module model/GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata
 * @version v1beta1
 */
class GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata {
    /**
     * Constructs a new <code>GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata</code>.
     * @alias module:model/GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata
     */
    constructor() { 
        
        GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata} The populated <code>GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('lastUpdateTime')) {
                obj['lastUpdateTime'] = ApiClient.convertToType(data['lastUpdateTime'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('thumbnail')) {
                obj['thumbnail'] = ApiClient.convertToType(data['thumbnail'], 'Blob');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['lastUpdateTime'] && !(typeof data['lastUpdateTime'] === 'string' || data['lastUpdateTime'] instanceof String)) {
            throw new Error("Expected the field `lastUpdateTime` to be a primitive type in the JSON string but got " + data['lastUpdateTime']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * When the thread is created
 * @member {String} createTime
 */
GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata.prototype['createTime'] = undefined;

/**
 * When the thread is last updated.
 * @member {String} lastUpdateTime
 */
GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata.prototype['lastUpdateTime'] = undefined;

/**
 * @member {module:model/GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata.StatusEnum} status
 */
GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata.prototype['status'] = undefined;

/**
 * An image thumbnail of this thread.
 * @member {Blob} thumbnail
 */
GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata.prototype['thumbnail'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata['StatusEnum'] = {

    /**
     * value: "FEEDBACK_THREAD_STATUS_UNSPECIFIED"
     * @const
     */
    "FEEDBACK_THREAD_STATUS_UNSPECIFIED": "FEEDBACK_THREAD_STATUS_UNSPECIFIED",

    /**
     * value: "NEW"
     * @const
     */
    "NEW": "NEW",

    /**
     * value: "REPLIED"
     * @const
     */
    "REPLIED": "REPLIED"
};



export default GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata;

