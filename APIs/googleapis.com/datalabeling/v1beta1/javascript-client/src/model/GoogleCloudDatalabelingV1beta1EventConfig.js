/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDatalabelingV1beta1EventConfig model module.
 * @module model/GoogleCloudDatalabelingV1beta1EventConfig
 * @version v1beta1
 */
class GoogleCloudDatalabelingV1beta1EventConfig {
    /**
     * Constructs a new <code>GoogleCloudDatalabelingV1beta1EventConfig</code>.
     * Config for video event human labeling task.
     * @alias module:model/GoogleCloudDatalabelingV1beta1EventConfig
     */
    constructor() { 
        
        GoogleCloudDatalabelingV1beta1EventConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatalabelingV1beta1EventConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatalabelingV1beta1EventConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatalabelingV1beta1EventConfig} The populated <code>GoogleCloudDatalabelingV1beta1EventConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatalabelingV1beta1EventConfig();

            if (data.hasOwnProperty('annotationSpecSets')) {
                obj['annotationSpecSets'] = ApiClient.convertToType(data['annotationSpecSets'], ['String']);
            }
            if (data.hasOwnProperty('clipLength')) {
                obj['clipLength'] = ApiClient.convertToType(data['clipLength'], 'Number');
            }
            if (data.hasOwnProperty('overlapLength')) {
                obj['overlapLength'] = ApiClient.convertToType(data['overlapLength'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatalabelingV1beta1EventConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatalabelingV1beta1EventConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['annotationSpecSets'])) {
            throw new Error("Expected the field `annotationSpecSets` to be an array in the JSON data but got " + data['annotationSpecSets']);
        }

        return true;
    }


}



/**
 * Required. The list of annotation spec set resource name. Similar to video classification, we support selecting event from multiple AnnotationSpecSet at the same time.
 * @member {Array.<String>} annotationSpecSets
 */
GoogleCloudDatalabelingV1beta1EventConfig.prototype['annotationSpecSets'] = undefined;

/**
 * Videos will be cut to smaller clips to make it easier for labelers to work on. Users can configure is field in seconds, if not set, default value is 60s.
 * @member {Number} clipLength
 */
GoogleCloudDatalabelingV1beta1EventConfig.prototype['clipLength'] = undefined;

/**
 * The overlap length between different video clips. Users can configure is field in seconds, if not set, default value is 1s.
 * @member {Number} overlapLength
 */
GoogleCloudDatalabelingV1beta1EventConfig.prototype['overlapLength'] = undefined;






export default GoogleCloudDatalabelingV1beta1EventConfig;

