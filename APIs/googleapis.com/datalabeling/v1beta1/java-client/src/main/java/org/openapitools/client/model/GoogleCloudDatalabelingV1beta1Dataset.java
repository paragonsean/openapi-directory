/*
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1InputConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Dataset is the resource to hold your data. You can request multiple labeling tasks for a dataset while each one will generate an AnnotatedDataset.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:49:41.492869-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDatalabelingV1beta1Dataset {
  public static final String SERIALIZED_NAME_BLOCKING_RESOURCES = "blockingResources";
  @SerializedName(SERIALIZED_NAME_BLOCKING_RESOURCES)
  private List<String> blockingResources = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DATA_ITEM_COUNT = "dataItemCount";
  @SerializedName(SERIALIZED_NAME_DATA_ITEM_COUNT)
  private String dataItemCount;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_INPUT_CONFIGS = "inputConfigs";
  @SerializedName(SERIALIZED_NAME_INPUT_CONFIGS)
  private List<GoogleCloudDatalabelingV1beta1InputConfig> inputConfigs = new ArrayList<>();

  public static final String SERIALIZED_NAME_LAST_MIGRATE_TIME = "lastMigrateTime";
  @SerializedName(SERIALIZED_NAME_LAST_MIGRATE_TIME)
  private String lastMigrateTime;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public GoogleCloudDatalabelingV1beta1Dataset() {
  }

  public GoogleCloudDatalabelingV1beta1Dataset blockingResources(List<String> blockingResources) {
    this.blockingResources = blockingResources;
    return this;
  }

  public GoogleCloudDatalabelingV1beta1Dataset addBlockingResourcesItem(String blockingResourcesItem) {
    if (this.blockingResources == null) {
      this.blockingResources = new ArrayList<>();
    }
    this.blockingResources.add(blockingResourcesItem);
    return this;
  }

  /**
   * Output only. The names of any related resources that are blocking changes to the dataset.
   * @return blockingResources
   */
  @javax.annotation.Nullable
  public List<String> getBlockingResources() {
    return blockingResources;
  }

  public void setBlockingResources(List<String> blockingResources) {
    this.blockingResources = blockingResources;
  }


  public GoogleCloudDatalabelingV1beta1Dataset createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. Time the dataset is created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }


  public GoogleCloudDatalabelingV1beta1Dataset dataItemCount(String dataItemCount) {
    this.dataItemCount = dataItemCount;
    return this;
  }

  /**
   * Output only. The number of data items in the dataset.
   * @return dataItemCount
   */
  @javax.annotation.Nullable
  public String getDataItemCount() {
    return dataItemCount;
  }

  public void setDataItemCount(String dataItemCount) {
    this.dataItemCount = dataItemCount;
  }


  public GoogleCloudDatalabelingV1beta1Dataset description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Optional. User-provided description of the annotation specification set. The description can be up to 10000 characters long.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GoogleCloudDatalabelingV1beta1Dataset displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The display name of the dataset. Maximum of 64 characters.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudDatalabelingV1beta1Dataset inputConfigs(List<GoogleCloudDatalabelingV1beta1InputConfig> inputConfigs) {
    this.inputConfigs = inputConfigs;
    return this;
  }

  public GoogleCloudDatalabelingV1beta1Dataset addInputConfigsItem(GoogleCloudDatalabelingV1beta1InputConfig inputConfigsItem) {
    if (this.inputConfigs == null) {
      this.inputConfigs = new ArrayList<>();
    }
    this.inputConfigs.add(inputConfigsItem);
    return this;
  }

  /**
   * Output only. This is populated with the original input configs where ImportData is called. It is available only after the clients import data to this dataset.
   * @return inputConfigs
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDatalabelingV1beta1InputConfig> getInputConfigs() {
    return inputConfigs;
  }

  public void setInputConfigs(List<GoogleCloudDatalabelingV1beta1InputConfig> inputConfigs) {
    this.inputConfigs = inputConfigs;
  }


  public GoogleCloudDatalabelingV1beta1Dataset lastMigrateTime(String lastMigrateTime) {
    this.lastMigrateTime = lastMigrateTime;
    return this;
  }

  /**
   * Last time that the Dataset is migrated to AI Platform V2. If any of the AnnotatedDataset is migrated, the last_migration_time in Dataset is also updated.
   * @return lastMigrateTime
   */
  @javax.annotation.Nullable
  public String getLastMigrateTime() {
    return lastMigrateTime;
  }

  public void setLastMigrateTime(String lastMigrateTime) {
    this.lastMigrateTime = lastMigrateTime;
  }


  public GoogleCloudDatalabelingV1beta1Dataset name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Dataset resource name, format is: projects/{project_id}/datasets/{dataset_id}
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDatalabelingV1beta1Dataset googleCloudDatalabelingV1beta1Dataset = (GoogleCloudDatalabelingV1beta1Dataset) o;
    return Objects.equals(this.blockingResources, googleCloudDatalabelingV1beta1Dataset.blockingResources) &&
        Objects.equals(this.createTime, googleCloudDatalabelingV1beta1Dataset.createTime) &&
        Objects.equals(this.dataItemCount, googleCloudDatalabelingV1beta1Dataset.dataItemCount) &&
        Objects.equals(this.description, googleCloudDatalabelingV1beta1Dataset.description) &&
        Objects.equals(this.displayName, googleCloudDatalabelingV1beta1Dataset.displayName) &&
        Objects.equals(this.inputConfigs, googleCloudDatalabelingV1beta1Dataset.inputConfigs) &&
        Objects.equals(this.lastMigrateTime, googleCloudDatalabelingV1beta1Dataset.lastMigrateTime) &&
        Objects.equals(this.name, googleCloudDatalabelingV1beta1Dataset.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blockingResources, createTime, dataItemCount, description, displayName, inputConfigs, lastMigrateTime, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDatalabelingV1beta1Dataset {\n");
    sb.append("    blockingResources: ").append(toIndentedString(blockingResources)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    dataItemCount: ").append(toIndentedString(dataItemCount)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    inputConfigs: ").append(toIndentedString(inputConfigs)).append("\n");
    sb.append("    lastMigrateTime: ").append(toIndentedString(lastMigrateTime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("blockingResources");
    openapiFields.add("createTime");
    openapiFields.add("dataItemCount");
    openapiFields.add("description");
    openapiFields.add("displayName");
    openapiFields.add("inputConfigs");
    openapiFields.add("lastMigrateTime");
    openapiFields.add("name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDatalabelingV1beta1Dataset
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDatalabelingV1beta1Dataset.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDatalabelingV1beta1Dataset is not found in the empty JSON string", GoogleCloudDatalabelingV1beta1Dataset.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDatalabelingV1beta1Dataset.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDatalabelingV1beta1Dataset` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("blockingResources") != null && !jsonObj.get("blockingResources").isJsonNull() && !jsonObj.get("blockingResources").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `blockingResources` to be an array in the JSON string but got `%s`", jsonObj.get("blockingResources").toString()));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("dataItemCount") != null && !jsonObj.get("dataItemCount").isJsonNull()) && !jsonObj.get("dataItemCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataItemCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataItemCount").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if (jsonObj.get("inputConfigs") != null && !jsonObj.get("inputConfigs").isJsonNull()) {
        JsonArray jsonArrayinputConfigs = jsonObj.getAsJsonArray("inputConfigs");
        if (jsonArrayinputConfigs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("inputConfigs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `inputConfigs` to be an array in the JSON string but got `%s`", jsonObj.get("inputConfigs").toString()));
          }

          // validate the optional field `inputConfigs` (array)
          for (int i = 0; i < jsonArrayinputConfigs.size(); i++) {
            GoogleCloudDatalabelingV1beta1InputConfig.validateJsonElement(jsonArrayinputConfigs.get(i));
          };
        }
      }
      if ((jsonObj.get("lastMigrateTime") != null && !jsonObj.get("lastMigrateTime").isJsonNull()) && !jsonObj.get("lastMigrateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastMigrateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastMigrateTime").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDatalabelingV1beta1Dataset.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDatalabelingV1beta1Dataset' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDatalabelingV1beta1Dataset> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDatalabelingV1beta1Dataset.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDatalabelingV1beta1Dataset>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDatalabelingV1beta1Dataset value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDatalabelingV1beta1Dataset read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDatalabelingV1beta1Dataset given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDatalabelingV1beta1Dataset
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDatalabelingV1beta1Dataset
   */
  public static GoogleCloudDatalabelingV1beta1Dataset fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDatalabelingV1beta1Dataset.class);
  }

  /**
   * Convert an instance of GoogleCloudDatalabelingV1beta1Dataset to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

