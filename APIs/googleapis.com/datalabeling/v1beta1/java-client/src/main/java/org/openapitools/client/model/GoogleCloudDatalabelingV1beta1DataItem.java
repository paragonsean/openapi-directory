/*
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1ImagePayload;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1TextPayload;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1VideoPayload;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DataItem is a piece of data, without annotation. For example, an image.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:49:41.492869-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDatalabelingV1beta1DataItem {
  public static final String SERIALIZED_NAME_IMAGE_PAYLOAD = "imagePayload";
  @SerializedName(SERIALIZED_NAME_IMAGE_PAYLOAD)
  private GoogleCloudDatalabelingV1beta1ImagePayload imagePayload;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TEXT_PAYLOAD = "textPayload";
  @SerializedName(SERIALIZED_NAME_TEXT_PAYLOAD)
  private GoogleCloudDatalabelingV1beta1TextPayload textPayload;

  public static final String SERIALIZED_NAME_VIDEO_PAYLOAD = "videoPayload";
  @SerializedName(SERIALIZED_NAME_VIDEO_PAYLOAD)
  private GoogleCloudDatalabelingV1beta1VideoPayload videoPayload;

  public GoogleCloudDatalabelingV1beta1DataItem() {
  }

  public GoogleCloudDatalabelingV1beta1DataItem imagePayload(GoogleCloudDatalabelingV1beta1ImagePayload imagePayload) {
    this.imagePayload = imagePayload;
    return this;
  }

  /**
   * Get imagePayload
   * @return imagePayload
   */
  @javax.annotation.Nullable
  public GoogleCloudDatalabelingV1beta1ImagePayload getImagePayload() {
    return imagePayload;
  }

  public void setImagePayload(GoogleCloudDatalabelingV1beta1ImagePayload imagePayload) {
    this.imagePayload = imagePayload;
  }


  public GoogleCloudDatalabelingV1beta1DataItem name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Name of the data item, in format of: projects/{project_id}/datasets/{dataset_id}/dataItems/{data_item_id}
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudDatalabelingV1beta1DataItem textPayload(GoogleCloudDatalabelingV1beta1TextPayload textPayload) {
    this.textPayload = textPayload;
    return this;
  }

  /**
   * Get textPayload
   * @return textPayload
   */
  @javax.annotation.Nullable
  public GoogleCloudDatalabelingV1beta1TextPayload getTextPayload() {
    return textPayload;
  }

  public void setTextPayload(GoogleCloudDatalabelingV1beta1TextPayload textPayload) {
    this.textPayload = textPayload;
  }


  public GoogleCloudDatalabelingV1beta1DataItem videoPayload(GoogleCloudDatalabelingV1beta1VideoPayload videoPayload) {
    this.videoPayload = videoPayload;
    return this;
  }

  /**
   * Get videoPayload
   * @return videoPayload
   */
  @javax.annotation.Nullable
  public GoogleCloudDatalabelingV1beta1VideoPayload getVideoPayload() {
    return videoPayload;
  }

  public void setVideoPayload(GoogleCloudDatalabelingV1beta1VideoPayload videoPayload) {
    this.videoPayload = videoPayload;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDatalabelingV1beta1DataItem googleCloudDatalabelingV1beta1DataItem = (GoogleCloudDatalabelingV1beta1DataItem) o;
    return Objects.equals(this.imagePayload, googleCloudDatalabelingV1beta1DataItem.imagePayload) &&
        Objects.equals(this.name, googleCloudDatalabelingV1beta1DataItem.name) &&
        Objects.equals(this.textPayload, googleCloudDatalabelingV1beta1DataItem.textPayload) &&
        Objects.equals(this.videoPayload, googleCloudDatalabelingV1beta1DataItem.videoPayload);
  }

  @Override
  public int hashCode() {
    return Objects.hash(imagePayload, name, textPayload, videoPayload);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDatalabelingV1beta1DataItem {\n");
    sb.append("    imagePayload: ").append(toIndentedString(imagePayload)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    textPayload: ").append(toIndentedString(textPayload)).append("\n");
    sb.append("    videoPayload: ").append(toIndentedString(videoPayload)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("imagePayload");
    openapiFields.add("name");
    openapiFields.add("textPayload");
    openapiFields.add("videoPayload");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDatalabelingV1beta1DataItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDatalabelingV1beta1DataItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDatalabelingV1beta1DataItem is not found in the empty JSON string", GoogleCloudDatalabelingV1beta1DataItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDatalabelingV1beta1DataItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDatalabelingV1beta1DataItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `imagePayload`
      if (jsonObj.get("imagePayload") != null && !jsonObj.get("imagePayload").isJsonNull()) {
        GoogleCloudDatalabelingV1beta1ImagePayload.validateJsonElement(jsonObj.get("imagePayload"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `textPayload`
      if (jsonObj.get("textPayload") != null && !jsonObj.get("textPayload").isJsonNull()) {
        GoogleCloudDatalabelingV1beta1TextPayload.validateJsonElement(jsonObj.get("textPayload"));
      }
      // validate the optional field `videoPayload`
      if (jsonObj.get("videoPayload") != null && !jsonObj.get("videoPayload").isJsonNull()) {
        GoogleCloudDatalabelingV1beta1VideoPayload.validateJsonElement(jsonObj.get("videoPayload"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDatalabelingV1beta1DataItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDatalabelingV1beta1DataItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDatalabelingV1beta1DataItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDatalabelingV1beta1DataItem.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDatalabelingV1beta1DataItem>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDatalabelingV1beta1DataItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDatalabelingV1beta1DataItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDatalabelingV1beta1DataItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDatalabelingV1beta1DataItem
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDatalabelingV1beta1DataItem
   */
  public static GoogleCloudDatalabelingV1beta1DataItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDatalabelingV1beta1DataItem.class);
  }

  /**
   * Convert an instance of GoogleCloudDatalabelingV1beta1DataItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

