/*
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * General information useful for labels coming from contributors.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:49:41.492869-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDatalabelingV1beta1OperatorMetadata {
  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private List<String> comments = new ArrayList<>();

  public static final String SERIALIZED_NAME_LABEL_VOTES = "labelVotes";
  @SerializedName(SERIALIZED_NAME_LABEL_VOTES)
  private Integer labelVotes;

  public static final String SERIALIZED_NAME_SCORE = "score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private Float score;

  public static final String SERIALIZED_NAME_TOTAL_VOTES = "totalVotes";
  @SerializedName(SERIALIZED_NAME_TOTAL_VOTES)
  private Integer totalVotes;

  public GoogleCloudDatalabelingV1beta1OperatorMetadata() {
  }

  public GoogleCloudDatalabelingV1beta1OperatorMetadata comments(List<String> comments) {
    this.comments = comments;
    return this;
  }

  public GoogleCloudDatalabelingV1beta1OperatorMetadata addCommentsItem(String commentsItem) {
    if (this.comments == null) {
      this.comments = new ArrayList<>();
    }
    this.comments.add(commentsItem);
    return this;
  }

  /**
   * Comments from contributors.
   * @return comments
   */
  @javax.annotation.Nullable
  public List<String> getComments() {
    return comments;
  }

  public void setComments(List<String> comments) {
    this.comments = comments;
  }


  public GoogleCloudDatalabelingV1beta1OperatorMetadata labelVotes(Integer labelVotes) {
    this.labelVotes = labelVotes;
    return this;
  }

  /**
   * The total number of contributors that choose this label.
   * @return labelVotes
   */
  @javax.annotation.Nullable
  public Integer getLabelVotes() {
    return labelVotes;
  }

  public void setLabelVotes(Integer labelVotes) {
    this.labelVotes = labelVotes;
  }


  public GoogleCloudDatalabelingV1beta1OperatorMetadata score(Float score) {
    this.score = score;
    return this;
  }

  /**
   * Confidence score corresponding to a label. For examle, if 3 contributors have answered the question and 2 of them agree on the final label, the confidence score will be 0.67 (2/3).
   * @return score
   */
  @javax.annotation.Nullable
  public Float getScore() {
    return score;
  }

  public void setScore(Float score) {
    this.score = score;
  }


  public GoogleCloudDatalabelingV1beta1OperatorMetadata totalVotes(Integer totalVotes) {
    this.totalVotes = totalVotes;
    return this;
  }

  /**
   * The total number of contributors that answer this question.
   * @return totalVotes
   */
  @javax.annotation.Nullable
  public Integer getTotalVotes() {
    return totalVotes;
  }

  public void setTotalVotes(Integer totalVotes) {
    this.totalVotes = totalVotes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDatalabelingV1beta1OperatorMetadata googleCloudDatalabelingV1beta1OperatorMetadata = (GoogleCloudDatalabelingV1beta1OperatorMetadata) o;
    return Objects.equals(this.comments, googleCloudDatalabelingV1beta1OperatorMetadata.comments) &&
        Objects.equals(this.labelVotes, googleCloudDatalabelingV1beta1OperatorMetadata.labelVotes) &&
        Objects.equals(this.score, googleCloudDatalabelingV1beta1OperatorMetadata.score) &&
        Objects.equals(this.totalVotes, googleCloudDatalabelingV1beta1OperatorMetadata.totalVotes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(comments, labelVotes, score, totalVotes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDatalabelingV1beta1OperatorMetadata {\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    labelVotes: ").append(toIndentedString(labelVotes)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    totalVotes: ").append(toIndentedString(totalVotes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("comments");
    openapiFields.add("labelVotes");
    openapiFields.add("score");
    openapiFields.add("totalVotes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDatalabelingV1beta1OperatorMetadata
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDatalabelingV1beta1OperatorMetadata.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDatalabelingV1beta1OperatorMetadata is not found in the empty JSON string", GoogleCloudDatalabelingV1beta1OperatorMetadata.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDatalabelingV1beta1OperatorMetadata.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDatalabelingV1beta1OperatorMetadata` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("comments") != null && !jsonObj.get("comments").isJsonNull() && !jsonObj.get("comments").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `comments` to be an array in the JSON string but got `%s`", jsonObj.get("comments").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDatalabelingV1beta1OperatorMetadata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDatalabelingV1beta1OperatorMetadata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDatalabelingV1beta1OperatorMetadata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDatalabelingV1beta1OperatorMetadata.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDatalabelingV1beta1OperatorMetadata>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDatalabelingV1beta1OperatorMetadata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDatalabelingV1beta1OperatorMetadata read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDatalabelingV1beta1OperatorMetadata given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDatalabelingV1beta1OperatorMetadata
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDatalabelingV1beta1OperatorMetadata
   */
  public static GoogleCloudDatalabelingV1beta1OperatorMetadata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDatalabelingV1beta1OperatorMetadata.class);
  }

  /**
   * Convert an instance of GoogleCloudDatalabelingV1beta1OperatorMetadata to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

