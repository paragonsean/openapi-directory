/*
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1BoundingPolyConfig;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1HumanAnnotationConfig;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1ImageClassificationConfig;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1PolylineConfig;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1SegmentationConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for starting an image labeling task.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:49:41.492869-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDatalabelingV1beta1LabelImageRequest {
  public static final String SERIALIZED_NAME_BASIC_CONFIG = "basicConfig";
  @SerializedName(SERIALIZED_NAME_BASIC_CONFIG)
  private GoogleCloudDatalabelingV1beta1HumanAnnotationConfig basicConfig;

  public static final String SERIALIZED_NAME_BOUNDING_POLY_CONFIG = "boundingPolyConfig";
  @SerializedName(SERIALIZED_NAME_BOUNDING_POLY_CONFIG)
  private GoogleCloudDatalabelingV1beta1BoundingPolyConfig boundingPolyConfig;

  /**
   * Required. The type of image labeling task.
   */
  @JsonAdapter(FeatureEnum.Adapter.class)
  public enum FeatureEnum {
    FEATURE_UNSPECIFIED("FEATURE_UNSPECIFIED"),
    
    CLASSIFICATION("CLASSIFICATION"),
    
    BOUNDING_BOX("BOUNDING_BOX"),
    
    ORIENTED_BOUNDING_BOX("ORIENTED_BOUNDING_BOX"),
    
    BOUNDING_POLY("BOUNDING_POLY"),
    
    POLYLINE("POLYLINE"),
    
    SEGMENTATION("SEGMENTATION");

    private String value;

    FeatureEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FeatureEnum fromValue(String value) {
      for (FeatureEnum b : FeatureEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FeatureEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FeatureEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FeatureEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FeatureEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      FeatureEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_FEATURE = "feature";
  @SerializedName(SERIALIZED_NAME_FEATURE)
  private FeatureEnum feature;

  public static final String SERIALIZED_NAME_IMAGE_CLASSIFICATION_CONFIG = "imageClassificationConfig";
  @SerializedName(SERIALIZED_NAME_IMAGE_CLASSIFICATION_CONFIG)
  private GoogleCloudDatalabelingV1beta1ImageClassificationConfig imageClassificationConfig;

  public static final String SERIALIZED_NAME_POLYLINE_CONFIG = "polylineConfig";
  @SerializedName(SERIALIZED_NAME_POLYLINE_CONFIG)
  private GoogleCloudDatalabelingV1beta1PolylineConfig polylineConfig;

  public static final String SERIALIZED_NAME_SEGMENTATION_CONFIG = "segmentationConfig";
  @SerializedName(SERIALIZED_NAME_SEGMENTATION_CONFIG)
  private GoogleCloudDatalabelingV1beta1SegmentationConfig segmentationConfig;

  public GoogleCloudDatalabelingV1beta1LabelImageRequest() {
  }

  public GoogleCloudDatalabelingV1beta1LabelImageRequest basicConfig(GoogleCloudDatalabelingV1beta1HumanAnnotationConfig basicConfig) {
    this.basicConfig = basicConfig;
    return this;
  }

  /**
   * Get basicConfig
   * @return basicConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudDatalabelingV1beta1HumanAnnotationConfig getBasicConfig() {
    return basicConfig;
  }

  public void setBasicConfig(GoogleCloudDatalabelingV1beta1HumanAnnotationConfig basicConfig) {
    this.basicConfig = basicConfig;
  }


  public GoogleCloudDatalabelingV1beta1LabelImageRequest boundingPolyConfig(GoogleCloudDatalabelingV1beta1BoundingPolyConfig boundingPolyConfig) {
    this.boundingPolyConfig = boundingPolyConfig;
    return this;
  }

  /**
   * Get boundingPolyConfig
   * @return boundingPolyConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudDatalabelingV1beta1BoundingPolyConfig getBoundingPolyConfig() {
    return boundingPolyConfig;
  }

  public void setBoundingPolyConfig(GoogleCloudDatalabelingV1beta1BoundingPolyConfig boundingPolyConfig) {
    this.boundingPolyConfig = boundingPolyConfig;
  }


  public GoogleCloudDatalabelingV1beta1LabelImageRequest feature(FeatureEnum feature) {
    this.feature = feature;
    return this;
  }

  /**
   * Required. The type of image labeling task.
   * @return feature
   */
  @javax.annotation.Nullable
  public FeatureEnum getFeature() {
    return feature;
  }

  public void setFeature(FeatureEnum feature) {
    this.feature = feature;
  }


  public GoogleCloudDatalabelingV1beta1LabelImageRequest imageClassificationConfig(GoogleCloudDatalabelingV1beta1ImageClassificationConfig imageClassificationConfig) {
    this.imageClassificationConfig = imageClassificationConfig;
    return this;
  }

  /**
   * Get imageClassificationConfig
   * @return imageClassificationConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudDatalabelingV1beta1ImageClassificationConfig getImageClassificationConfig() {
    return imageClassificationConfig;
  }

  public void setImageClassificationConfig(GoogleCloudDatalabelingV1beta1ImageClassificationConfig imageClassificationConfig) {
    this.imageClassificationConfig = imageClassificationConfig;
  }


  public GoogleCloudDatalabelingV1beta1LabelImageRequest polylineConfig(GoogleCloudDatalabelingV1beta1PolylineConfig polylineConfig) {
    this.polylineConfig = polylineConfig;
    return this;
  }

  /**
   * Get polylineConfig
   * @return polylineConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudDatalabelingV1beta1PolylineConfig getPolylineConfig() {
    return polylineConfig;
  }

  public void setPolylineConfig(GoogleCloudDatalabelingV1beta1PolylineConfig polylineConfig) {
    this.polylineConfig = polylineConfig;
  }


  public GoogleCloudDatalabelingV1beta1LabelImageRequest segmentationConfig(GoogleCloudDatalabelingV1beta1SegmentationConfig segmentationConfig) {
    this.segmentationConfig = segmentationConfig;
    return this;
  }

  /**
   * Get segmentationConfig
   * @return segmentationConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudDatalabelingV1beta1SegmentationConfig getSegmentationConfig() {
    return segmentationConfig;
  }

  public void setSegmentationConfig(GoogleCloudDatalabelingV1beta1SegmentationConfig segmentationConfig) {
    this.segmentationConfig = segmentationConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDatalabelingV1beta1LabelImageRequest googleCloudDatalabelingV1beta1LabelImageRequest = (GoogleCloudDatalabelingV1beta1LabelImageRequest) o;
    return Objects.equals(this.basicConfig, googleCloudDatalabelingV1beta1LabelImageRequest.basicConfig) &&
        Objects.equals(this.boundingPolyConfig, googleCloudDatalabelingV1beta1LabelImageRequest.boundingPolyConfig) &&
        Objects.equals(this.feature, googleCloudDatalabelingV1beta1LabelImageRequest.feature) &&
        Objects.equals(this.imageClassificationConfig, googleCloudDatalabelingV1beta1LabelImageRequest.imageClassificationConfig) &&
        Objects.equals(this.polylineConfig, googleCloudDatalabelingV1beta1LabelImageRequest.polylineConfig) &&
        Objects.equals(this.segmentationConfig, googleCloudDatalabelingV1beta1LabelImageRequest.segmentationConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(basicConfig, boundingPolyConfig, feature, imageClassificationConfig, polylineConfig, segmentationConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDatalabelingV1beta1LabelImageRequest {\n");
    sb.append("    basicConfig: ").append(toIndentedString(basicConfig)).append("\n");
    sb.append("    boundingPolyConfig: ").append(toIndentedString(boundingPolyConfig)).append("\n");
    sb.append("    feature: ").append(toIndentedString(feature)).append("\n");
    sb.append("    imageClassificationConfig: ").append(toIndentedString(imageClassificationConfig)).append("\n");
    sb.append("    polylineConfig: ").append(toIndentedString(polylineConfig)).append("\n");
    sb.append("    segmentationConfig: ").append(toIndentedString(segmentationConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("basicConfig");
    openapiFields.add("boundingPolyConfig");
    openapiFields.add("feature");
    openapiFields.add("imageClassificationConfig");
    openapiFields.add("polylineConfig");
    openapiFields.add("segmentationConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDatalabelingV1beta1LabelImageRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDatalabelingV1beta1LabelImageRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDatalabelingV1beta1LabelImageRequest is not found in the empty JSON string", GoogleCloudDatalabelingV1beta1LabelImageRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDatalabelingV1beta1LabelImageRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDatalabelingV1beta1LabelImageRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `basicConfig`
      if (jsonObj.get("basicConfig") != null && !jsonObj.get("basicConfig").isJsonNull()) {
        GoogleCloudDatalabelingV1beta1HumanAnnotationConfig.validateJsonElement(jsonObj.get("basicConfig"));
      }
      // validate the optional field `boundingPolyConfig`
      if (jsonObj.get("boundingPolyConfig") != null && !jsonObj.get("boundingPolyConfig").isJsonNull()) {
        GoogleCloudDatalabelingV1beta1BoundingPolyConfig.validateJsonElement(jsonObj.get("boundingPolyConfig"));
      }
      if ((jsonObj.get("feature") != null && !jsonObj.get("feature").isJsonNull()) && !jsonObj.get("feature").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `feature` to be a primitive type in the JSON string but got `%s`", jsonObj.get("feature").toString()));
      }
      // validate the optional field `feature`
      if (jsonObj.get("feature") != null && !jsonObj.get("feature").isJsonNull()) {
        FeatureEnum.validateJsonElement(jsonObj.get("feature"));
      }
      // validate the optional field `imageClassificationConfig`
      if (jsonObj.get("imageClassificationConfig") != null && !jsonObj.get("imageClassificationConfig").isJsonNull()) {
        GoogleCloudDatalabelingV1beta1ImageClassificationConfig.validateJsonElement(jsonObj.get("imageClassificationConfig"));
      }
      // validate the optional field `polylineConfig`
      if (jsonObj.get("polylineConfig") != null && !jsonObj.get("polylineConfig").isJsonNull()) {
        GoogleCloudDatalabelingV1beta1PolylineConfig.validateJsonElement(jsonObj.get("polylineConfig"));
      }
      // validate the optional field `segmentationConfig`
      if (jsonObj.get("segmentationConfig") != null && !jsonObj.get("segmentationConfig").isJsonNull()) {
        GoogleCloudDatalabelingV1beta1SegmentationConfig.validateJsonElement(jsonObj.get("segmentationConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDatalabelingV1beta1LabelImageRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDatalabelingV1beta1LabelImageRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDatalabelingV1beta1LabelImageRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDatalabelingV1beta1LabelImageRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDatalabelingV1beta1LabelImageRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDatalabelingV1beta1LabelImageRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDatalabelingV1beta1LabelImageRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDatalabelingV1beta1LabelImageRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDatalabelingV1beta1LabelImageRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDatalabelingV1beta1LabelImageRequest
   */
  public static GoogleCloudDatalabelingV1beta1LabelImageRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDatalabelingV1beta1LabelImageRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudDatalabelingV1beta1LabelImageRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

