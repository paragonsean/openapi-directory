/*
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1AnnotationSpecSet;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1CreateAnnotationSpecSetRequest;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1CreateDatasetRequest;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1CreateEvaluationJobRequest;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1CreateInstructionRequest;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1Dataset;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1EvaluationJob;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1ExportDataRequest;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1FeedbackMessage;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1ImportDataRequest;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1LabelImageRequest;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1LabelTextRequest;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1LabelVideoRequest;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1ListAnnotatedDatasetsResponse;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1ListAnnotationSpecSetsResponse;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1ListDataItemsResponse;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1ListDatasetsResponse;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1ListEvaluationJobsResponse;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1ListExamplesResponse;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1ListFeedbackMessagesResponse;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1ListFeedbackThreadsResponse;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1ListInstructionsResponse;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1SearchEvaluationsResponse;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1SearchExampleComparisonsRequest;
import org.openapitools.client.model.GoogleCloudDatalabelingV1beta1SearchExampleComparisonsResponse;
import org.openapitools.client.model.GoogleLongrunningListOperationsResponse;
import org.openapitools.client.model.GoogleLongrunningOperation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectsApi
 */
@Disabled
public class ProjectsApiTest {

    private final ProjectsApi api = new ProjectsApi();

    /**
     * Creates an annotation spec set by providing a set of labels.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsAnnotationSpecSetsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDatalabelingV1beta1CreateAnnotationSpecSetRequest googleCloudDatalabelingV1beta1CreateAnnotationSpecSetRequest = null;
        GoogleCloudDatalabelingV1beta1AnnotationSpecSet response = api.datalabelingProjectsAnnotationSpecSetsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDatalabelingV1beta1CreateAnnotationSpecSetRequest);
        // TODO: test validations
    }

    /**
     * Lists annotation spec sets for a project. Pagination is supported.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsAnnotationSpecSetsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDatalabelingV1beta1ListAnnotationSpecSetsResponse response = api.datalabelingProjectsAnnotationSpecSetsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Lists examples in an annotated dataset. Pagination is supported.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsDatasetsAnnotatedDatasetsExamplesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDatalabelingV1beta1ListExamplesResponse response = api.datalabelingProjectsDatasetsAnnotatedDatasetsExamplesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Create a FeedbackMessage object.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsDatasetsAnnotatedDatasetsFeedbackThreadsFeedbackMessagesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDatalabelingV1beta1FeedbackMessage googleCloudDatalabelingV1beta1FeedbackMessage = null;
        GoogleLongrunningOperation response = api.datalabelingProjectsDatasetsAnnotatedDatasetsFeedbackThreadsFeedbackMessagesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDatalabelingV1beta1FeedbackMessage);
        // TODO: test validations
    }

    /**
     * List FeedbackMessages with pagination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsDatasetsAnnotatedDatasetsFeedbackThreadsFeedbackMessagesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDatalabelingV1beta1ListFeedbackMessagesResponse response = api.datalabelingProjectsDatasetsAnnotatedDatasetsFeedbackThreadsFeedbackMessagesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * List FeedbackThreads with pagination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsDatasetsAnnotatedDatasetsFeedbackThreadsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDatalabelingV1beta1ListFeedbackThreadsResponse response = api.datalabelingProjectsDatasetsAnnotatedDatasetsFeedbackThreadsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Lists annotated datasets for a dataset. Pagination is supported.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsDatasetsAnnotatedDatasetsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDatalabelingV1beta1ListAnnotatedDatasetsResponse response = api.datalabelingProjectsDatasetsAnnotatedDatasetsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates dataset. If success return a Dataset resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsDatasetsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDatalabelingV1beta1CreateDatasetRequest googleCloudDatalabelingV1beta1CreateDatasetRequest = null;
        GoogleCloudDatalabelingV1beta1Dataset response = api.datalabelingProjectsDatasetsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDatalabelingV1beta1CreateDatasetRequest);
        // TODO: test validations
    }

    /**
     * Lists data items in a dataset. This API can be called after data are imported into dataset. Pagination is supported.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsDatasetsDataItemsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDatalabelingV1beta1ListDataItemsResponse response = api.datalabelingProjectsDatasetsDataItemsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Searches example comparisons from an evaluation. The return format is a list of example comparisons that show ground truth and prediction(s) for a single input. Search by providing an evaluation ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsDatasetsEvaluationsExampleComparisonsSearchTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDatalabelingV1beta1SearchExampleComparisonsRequest googleCloudDatalabelingV1beta1SearchExampleComparisonsRequest = null;
        GoogleCloudDatalabelingV1beta1SearchExampleComparisonsResponse response = api.datalabelingProjectsDatasetsEvaluationsExampleComparisonsSearch(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDatalabelingV1beta1SearchExampleComparisonsRequest);
        // TODO: test validations
    }

    /**
     * Exports data and annotations from dataset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsDatasetsExportDataTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDatalabelingV1beta1ExportDataRequest googleCloudDatalabelingV1beta1ExportDataRequest = null;
        GoogleLongrunningOperation response = api.datalabelingProjectsDatasetsExportData(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDatalabelingV1beta1ExportDataRequest);
        // TODO: test validations
    }

    /**
     * Starts a labeling task for image. The type of image labeling task is configured by feature in the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsDatasetsImageLabelTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDatalabelingV1beta1LabelImageRequest googleCloudDatalabelingV1beta1LabelImageRequest = null;
        GoogleLongrunningOperation response = api.datalabelingProjectsDatasetsImageLabel(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDatalabelingV1beta1LabelImageRequest);
        // TODO: test validations
    }

    /**
     * Imports data into dataset based on source locations defined in request. It can be called multiple times for the same dataset. Each dataset can only have one long running operation running on it. For example, no labeling task (also long running operation) can be started while importing is still ongoing. Vice versa.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsDatasetsImportDataTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDatalabelingV1beta1ImportDataRequest googleCloudDatalabelingV1beta1ImportDataRequest = null;
        GoogleLongrunningOperation response = api.datalabelingProjectsDatasetsImportData(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDatalabelingV1beta1ImportDataRequest);
        // TODO: test validations
    }

    /**
     * Lists datasets under a project. Pagination is supported.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsDatasetsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDatalabelingV1beta1ListDatasetsResponse response = api.datalabelingProjectsDatasetsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Starts a labeling task for text. The type of text labeling task is configured by feature in the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsDatasetsTextLabelTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDatalabelingV1beta1LabelTextRequest googleCloudDatalabelingV1beta1LabelTextRequest = null;
        GoogleLongrunningOperation response = api.datalabelingProjectsDatasetsTextLabel(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDatalabelingV1beta1LabelTextRequest);
        // TODO: test validations
    }

    /**
     * Starts a labeling task for video. The type of video labeling task is configured by feature in the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsDatasetsVideoLabelTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDatalabelingV1beta1LabelVideoRequest googleCloudDatalabelingV1beta1LabelVideoRequest = null;
        GoogleLongrunningOperation response = api.datalabelingProjectsDatasetsVideoLabel(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDatalabelingV1beta1LabelVideoRequest);
        // TODO: test validations
    }

    /**
     * Creates an evaluation job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsEvaluationJobsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDatalabelingV1beta1CreateEvaluationJobRequest googleCloudDatalabelingV1beta1CreateEvaluationJobRequest = null;
        GoogleCloudDatalabelingV1beta1EvaluationJob response = api.datalabelingProjectsEvaluationJobsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDatalabelingV1beta1CreateEvaluationJobRequest);
        // TODO: test validations
    }

    /**
     * Lists all evaluation jobs within a project with possible filters. Pagination is supported.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsEvaluationJobsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDatalabelingV1beta1ListEvaluationJobsResponse response = api.datalabelingProjectsEvaluationJobsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Updates an evaluation job. You can only update certain fields of the job&#39;s EvaluationJobConfig: &#x60;humanAnnotationConfig.instruction&#x60;, &#x60;exampleCount&#x60;, and &#x60;exampleSamplePercentage&#x60;. If you want to change any other aspect of the evaluation job, you must delete the job and create a new one.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsEvaluationJobsPatchTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String updateMask = null;
        GoogleCloudDatalabelingV1beta1EvaluationJob googleCloudDatalabelingV1beta1EvaluationJob = null;
        GoogleCloudDatalabelingV1beta1EvaluationJob response = api.datalabelingProjectsEvaluationJobsPatch(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, updateMask, googleCloudDatalabelingV1beta1EvaluationJob);
        // TODO: test validations
    }

    /**
     * Pauses an evaluation job. Pausing an evaluation job that is already in a &#x60;PAUSED&#x60; state is a no-op.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsEvaluationJobsPauseTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        Object response = api.datalabelingProjectsEvaluationJobsPause(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

    /**
     * Resumes a paused evaluation job. A deleted evaluation job can&#39;t be resumed. Resuming a running or scheduled evaluation job is a no-op.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsEvaluationJobsResumeTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        Object response = api.datalabelingProjectsEvaluationJobsResume(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

    /**
     * Searches evaluations within a project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsEvaluationsSearchTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDatalabelingV1beta1SearchEvaluationsResponse response = api.datalabelingProjectsEvaluationsSearch(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates an instruction for how data should be labeled.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsInstructionsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDatalabelingV1beta1CreateInstructionRequest googleCloudDatalabelingV1beta1CreateInstructionRequest = null;
        GoogleLongrunningOperation response = api.datalabelingProjectsInstructionsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDatalabelingV1beta1CreateInstructionRequest);
        // TODO: test validations
    }

    /**
     * Lists instructions for a project. Pagination is supported.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsInstructionsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDatalabelingV1beta1ListInstructionsResponse response = api.datalabelingProjectsInstructionsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn&#39;t support this method, it returns &#x60;google.rpc.Code.UNIMPLEMENTED&#x60;. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to &#x60;Code.CANCELLED&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsOperationsCancelTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object response = api.datalabelingProjectsOperationsCancel(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn&#39;t support this method, it returns &#x60;google.rpc.Code.UNIMPLEMENTED&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsOperationsDeleteTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object response = api.datalabelingProjectsOperationsDelete(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsOperationsGetTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        GoogleLongrunningOperation response = api.datalabelingProjectsOperationsGet(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter);
        // TODO: test validations
    }

    /**
     * Lists operations that match the specified filter in the request. If the server doesn&#39;t support this method, it returns &#x60;UNIMPLEMENTED&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datalabelingProjectsOperationsListTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleLongrunningListOperationsResponse response = api.datalabelingProjectsOperationsList(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

}
