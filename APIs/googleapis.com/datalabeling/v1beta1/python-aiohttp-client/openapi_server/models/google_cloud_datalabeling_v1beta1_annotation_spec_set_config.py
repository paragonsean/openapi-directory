# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_multi_label: bool=None, annotation_spec_set: str=None):
        """GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig - a model defined in OpenAPI

        :param allow_multi_label: The allow_multi_label of this GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig.
        :param annotation_spec_set: The annotation_spec_set of this GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig.
        """
        self.openapi_types = {
            'allow_multi_label': bool,
            'annotation_spec_set': str
        }

        self.attribute_map = {
            'allow_multi_label': 'allowMultiLabel',
            'annotation_spec_set': 'annotationSpecSet'
        }

        self._allow_multi_label = allow_multi_label
        self._annotation_spec_set = annotation_spec_set

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig of this GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_multi_label(self):
        """Gets the allow_multi_label of this GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig.

        Optional. If allow_multi_label is true, contributors are able to choose multiple labels from one annotation spec set.

        :return: The allow_multi_label of this GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig.
        :rtype: bool
        """
        return self._allow_multi_label

    @allow_multi_label.setter
    def allow_multi_label(self, allow_multi_label):
        """Sets the allow_multi_label of this GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig.

        Optional. If allow_multi_label is true, contributors are able to choose multiple labels from one annotation spec set.

        :param allow_multi_label: The allow_multi_label of this GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig.
        :type allow_multi_label: bool
        """

        self._allow_multi_label = allow_multi_label

    @property
    def annotation_spec_set(self):
        """Gets the annotation_spec_set of this GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig.

        Required. Annotation spec set resource name.

        :return: The annotation_spec_set of this GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig.
        :rtype: str
        """
        return self._annotation_spec_set

    @annotation_spec_set.setter
    def annotation_spec_set(self, annotation_spec_set):
        """Sets the annotation_spec_set of this GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig.

        Required. Annotation spec set resource name.

        :param annotation_spec_set: The annotation_spec_set of this GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig.
        :type annotation_spec_set: str
        """

        self._annotation_spec_set = annotation_spec_set
