# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDatalabelingV1beta1AnnotationSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, display_name: str=None, index: int=None):
        """GoogleCloudDatalabelingV1beta1AnnotationSpec - a model defined in OpenAPI

        :param description: The description of this GoogleCloudDatalabelingV1beta1AnnotationSpec.
        :param display_name: The display_name of this GoogleCloudDatalabelingV1beta1AnnotationSpec.
        :param index: The index of this GoogleCloudDatalabelingV1beta1AnnotationSpec.
        """
        self.openapi_types = {
            'description': str,
            'display_name': str,
            'index': int
        }

        self.attribute_map = {
            'description': 'description',
            'display_name': 'displayName',
            'index': 'index'
        }

        self._description = description
        self._display_name = display_name
        self._index = index

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatalabelingV1beta1AnnotationSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatalabelingV1beta1AnnotationSpec of this GoogleCloudDatalabelingV1beta1AnnotationSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this GoogleCloudDatalabelingV1beta1AnnotationSpec.

        Optional. User-provided description of the annotation specification. The description can be up to 10,000 characters long.

        :return: The description of this GoogleCloudDatalabelingV1beta1AnnotationSpec.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudDatalabelingV1beta1AnnotationSpec.

        Optional. User-provided description of the annotation specification. The description can be up to 10,000 characters long.

        :param description: The description of this GoogleCloudDatalabelingV1beta1AnnotationSpec.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudDatalabelingV1beta1AnnotationSpec.

        Required. The display name of the AnnotationSpec. Maximum of 64 characters.

        :return: The display_name of this GoogleCloudDatalabelingV1beta1AnnotationSpec.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudDatalabelingV1beta1AnnotationSpec.

        Required. The display name of the AnnotationSpec. Maximum of 64 characters.

        :param display_name: The display_name of this GoogleCloudDatalabelingV1beta1AnnotationSpec.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def index(self):
        """Gets the index of this GoogleCloudDatalabelingV1beta1AnnotationSpec.

        Output only. This is the integer index of the AnnotationSpec. The index for the whole AnnotationSpecSet is sequential starting from 0. For example, an AnnotationSpecSet with classes `dog` and `cat`, might contain one AnnotationSpec with `{ display_name: \"dog\", index: 0 }` and one AnnotationSpec with `{ display_name: \"cat\", index: 1 }`. This is especially useful for model training as it encodes the string labels into numeric values.

        :return: The index of this GoogleCloudDatalabelingV1beta1AnnotationSpec.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this GoogleCloudDatalabelingV1beta1AnnotationSpec.

        Output only. This is the integer index of the AnnotationSpec. The index for the whole AnnotationSpecSet is sequential starting from 0. For example, an AnnotationSpecSet with classes `dog` and `cat`, might contain one AnnotationSpec with `{ display_name: \"dog\", index: 0 }` and one AnnotationSpec with `{ display_name: \"cat\", index: 1 }`. This is especially useful for model training as it encodes the string labels into numeric values.

        :param index: The index of this GoogleCloudDatalabelingV1beta1AnnotationSpec.
        :type index: int
        """

        self._index = index
