# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_datalabeling_v1beta1_evaluation_config import GoogleCloudDatalabelingV1beta1EvaluationConfig
from openapi_server.models.google_cloud_datalabeling_v1beta1_evaluation_metrics import GoogleCloudDatalabelingV1beta1EvaluationMetrics
from openapi_server import util


class GoogleCloudDatalabelingV1beta1Evaluation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotation_type: str=None, config: GoogleCloudDatalabelingV1beta1EvaluationConfig=None, create_time: str=None, evaluated_item_count: str=None, evaluation_job_run_time: str=None, evaluation_metrics: GoogleCloudDatalabelingV1beta1EvaluationMetrics=None, name: str=None):
        """GoogleCloudDatalabelingV1beta1Evaluation - a model defined in OpenAPI

        :param annotation_type: The annotation_type of this GoogleCloudDatalabelingV1beta1Evaluation.
        :param config: The config of this GoogleCloudDatalabelingV1beta1Evaluation.
        :param create_time: The create_time of this GoogleCloudDatalabelingV1beta1Evaluation.
        :param evaluated_item_count: The evaluated_item_count of this GoogleCloudDatalabelingV1beta1Evaluation.
        :param evaluation_job_run_time: The evaluation_job_run_time of this GoogleCloudDatalabelingV1beta1Evaluation.
        :param evaluation_metrics: The evaluation_metrics of this GoogleCloudDatalabelingV1beta1Evaluation.
        :param name: The name of this GoogleCloudDatalabelingV1beta1Evaluation.
        """
        self.openapi_types = {
            'annotation_type': str,
            'config': GoogleCloudDatalabelingV1beta1EvaluationConfig,
            'create_time': str,
            'evaluated_item_count': str,
            'evaluation_job_run_time': str,
            'evaluation_metrics': GoogleCloudDatalabelingV1beta1EvaluationMetrics,
            'name': str
        }

        self.attribute_map = {
            'annotation_type': 'annotationType',
            'config': 'config',
            'create_time': 'createTime',
            'evaluated_item_count': 'evaluatedItemCount',
            'evaluation_job_run_time': 'evaluationJobRunTime',
            'evaluation_metrics': 'evaluationMetrics',
            'name': 'name'
        }

        self._annotation_type = annotation_type
        self._config = config
        self._create_time = create_time
        self._evaluated_item_count = evaluated_item_count
        self._evaluation_job_run_time = evaluation_job_run_time
        self._evaluation_metrics = evaluation_metrics
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatalabelingV1beta1Evaluation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatalabelingV1beta1Evaluation of this GoogleCloudDatalabelingV1beta1Evaluation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotation_type(self):
        """Gets the annotation_type of this GoogleCloudDatalabelingV1beta1Evaluation.

        Output only. Type of task that the model version being evaluated performs, as defined in the evaluationJobConfig.inputConfig.annotationType field of the evaluation job that created this evaluation.

        :return: The annotation_type of this GoogleCloudDatalabelingV1beta1Evaluation.
        :rtype: str
        """
        return self._annotation_type

    @annotation_type.setter
    def annotation_type(self, annotation_type):
        """Sets the annotation_type of this GoogleCloudDatalabelingV1beta1Evaluation.

        Output only. Type of task that the model version being evaluated performs, as defined in the evaluationJobConfig.inputConfig.annotationType field of the evaluation job that created this evaluation.

        :param annotation_type: The annotation_type of this GoogleCloudDatalabelingV1beta1Evaluation.
        :type annotation_type: str
        """
        allowed_values = ["ANNOTATION_TYPE_UNSPECIFIED", "IMAGE_CLASSIFICATION_ANNOTATION", "IMAGE_BOUNDING_BOX_ANNOTATION", "IMAGE_ORIENTED_BOUNDING_BOX_ANNOTATION", "IMAGE_BOUNDING_POLY_ANNOTATION", "IMAGE_POLYLINE_ANNOTATION", "IMAGE_SEGMENTATION_ANNOTATION", "VIDEO_SHOTS_CLASSIFICATION_ANNOTATION", "VIDEO_OBJECT_TRACKING_ANNOTATION", "VIDEO_OBJECT_DETECTION_ANNOTATION", "VIDEO_EVENT_ANNOTATION", "TEXT_CLASSIFICATION_ANNOTATION", "TEXT_ENTITY_EXTRACTION_ANNOTATION", "GENERAL_CLASSIFICATION_ANNOTATION"]  # noqa: E501
        if annotation_type not in allowed_values:
            raise ValueError(
                "Invalid value for `annotation_type` ({0}), must be one of {1}"
                .format(annotation_type, allowed_values)
            )

        self._annotation_type = annotation_type

    @property
    def config(self):
        """Gets the config of this GoogleCloudDatalabelingV1beta1Evaluation.


        :return: The config of this GoogleCloudDatalabelingV1beta1Evaluation.
        :rtype: GoogleCloudDatalabelingV1beta1EvaluationConfig
        """
        return self._config

    @config.setter
    def config(self, config):
        """Sets the config of this GoogleCloudDatalabelingV1beta1Evaluation.


        :param config: The config of this GoogleCloudDatalabelingV1beta1Evaluation.
        :type config: GoogleCloudDatalabelingV1beta1EvaluationConfig
        """

        self._config = config

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudDatalabelingV1beta1Evaluation.

        Output only. Timestamp for when this evaluation was created.

        :return: The create_time of this GoogleCloudDatalabelingV1beta1Evaluation.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudDatalabelingV1beta1Evaluation.

        Output only. Timestamp for when this evaluation was created.

        :param create_time: The create_time of this GoogleCloudDatalabelingV1beta1Evaluation.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def evaluated_item_count(self):
        """Gets the evaluated_item_count of this GoogleCloudDatalabelingV1beta1Evaluation.

        Output only. The number of items in the ground truth dataset that were used for this evaluation. Only populated when the evaulation is for certain AnnotationTypes.

        :return: The evaluated_item_count of this GoogleCloudDatalabelingV1beta1Evaluation.
        :rtype: str
        """
        return self._evaluated_item_count

    @evaluated_item_count.setter
    def evaluated_item_count(self, evaluated_item_count):
        """Sets the evaluated_item_count of this GoogleCloudDatalabelingV1beta1Evaluation.

        Output only. The number of items in the ground truth dataset that were used for this evaluation. Only populated when the evaulation is for certain AnnotationTypes.

        :param evaluated_item_count: The evaluated_item_count of this GoogleCloudDatalabelingV1beta1Evaluation.
        :type evaluated_item_count: str
        """

        self._evaluated_item_count = evaluated_item_count

    @property
    def evaluation_job_run_time(self):
        """Gets the evaluation_job_run_time of this GoogleCloudDatalabelingV1beta1Evaluation.

        Output only. Timestamp for when the evaluation job that created this evaluation ran.

        :return: The evaluation_job_run_time of this GoogleCloudDatalabelingV1beta1Evaluation.
        :rtype: str
        """
        return self._evaluation_job_run_time

    @evaluation_job_run_time.setter
    def evaluation_job_run_time(self, evaluation_job_run_time):
        """Sets the evaluation_job_run_time of this GoogleCloudDatalabelingV1beta1Evaluation.

        Output only. Timestamp for when the evaluation job that created this evaluation ran.

        :param evaluation_job_run_time: The evaluation_job_run_time of this GoogleCloudDatalabelingV1beta1Evaluation.
        :type evaluation_job_run_time: str
        """

        self._evaluation_job_run_time = evaluation_job_run_time

    @property
    def evaluation_metrics(self):
        """Gets the evaluation_metrics of this GoogleCloudDatalabelingV1beta1Evaluation.


        :return: The evaluation_metrics of this GoogleCloudDatalabelingV1beta1Evaluation.
        :rtype: GoogleCloudDatalabelingV1beta1EvaluationMetrics
        """
        return self._evaluation_metrics

    @evaluation_metrics.setter
    def evaluation_metrics(self, evaluation_metrics):
        """Sets the evaluation_metrics of this GoogleCloudDatalabelingV1beta1Evaluation.


        :param evaluation_metrics: The evaluation_metrics of this GoogleCloudDatalabelingV1beta1Evaluation.
        :type evaluation_metrics: GoogleCloudDatalabelingV1beta1EvaluationMetrics
        """

        self._evaluation_metrics = evaluation_metrics

    @property
    def name(self):
        """Gets the name of this GoogleCloudDatalabelingV1beta1Evaluation.

        Output only. Resource name of an evaluation. The name has the following format: \"projects/{project_id}/datasets/{dataset_id}/evaluations/ {evaluation_id}'

        :return: The name of this GoogleCloudDatalabelingV1beta1Evaluation.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDatalabelingV1beta1Evaluation.

        Output only. Resource name of an evaluation. The name has the following format: \"projects/{project_id}/datasets/{dataset_id}/evaluations/ {evaluation_id}'

        :param name: The name of this GoogleCloudDatalabelingV1beta1Evaluation.
        :type name: str
        """

        self._name = name
