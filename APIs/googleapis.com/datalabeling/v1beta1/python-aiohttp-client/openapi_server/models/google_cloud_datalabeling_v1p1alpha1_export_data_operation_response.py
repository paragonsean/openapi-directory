# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_datalabeling_v1p1alpha1_label_stats import GoogleCloudDatalabelingV1p1alpha1LabelStats
from openapi_server.models.google_cloud_datalabeling_v1p1alpha1_output_config import GoogleCloudDatalabelingV1p1alpha1OutputConfig
from openapi_server import util


class GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotated_dataset: str=None, dataset: str=None, export_count: int=None, label_stats: GoogleCloudDatalabelingV1p1alpha1LabelStats=None, output_config: GoogleCloudDatalabelingV1p1alpha1OutputConfig=None, total_count: int=None):
        """GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse - a model defined in OpenAPI

        :param annotated_dataset: The annotated_dataset of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.
        :param dataset: The dataset of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.
        :param export_count: The export_count of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.
        :param label_stats: The label_stats of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.
        :param output_config: The output_config of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.
        :param total_count: The total_count of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.
        """
        self.openapi_types = {
            'annotated_dataset': str,
            'dataset': str,
            'export_count': int,
            'label_stats': GoogleCloudDatalabelingV1p1alpha1LabelStats,
            'output_config': GoogleCloudDatalabelingV1p1alpha1OutputConfig,
            'total_count': int
        }

        self.attribute_map = {
            'annotated_dataset': 'annotatedDataset',
            'dataset': 'dataset',
            'export_count': 'exportCount',
            'label_stats': 'labelStats',
            'output_config': 'outputConfig',
            'total_count': 'totalCount'
        }

        self._annotated_dataset = annotated_dataset
        self._dataset = dataset
        self._export_count = export_count
        self._label_stats = label_stats
        self._output_config = output_config
        self._total_count = total_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotated_dataset(self):
        """Gets the annotated_dataset of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.

        Output only. The name of annotated dataset in format \"projects/*/datasets/*/annotatedDatasets/*\".

        :return: The annotated_dataset of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.
        :rtype: str
        """
        return self._annotated_dataset

    @annotated_dataset.setter
    def annotated_dataset(self, annotated_dataset):
        """Sets the annotated_dataset of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.

        Output only. The name of annotated dataset in format \"projects/*/datasets/*/annotatedDatasets/*\".

        :param annotated_dataset: The annotated_dataset of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.
        :type annotated_dataset: str
        """

        self._annotated_dataset = annotated_dataset

    @property
    def dataset(self):
        """Gets the dataset of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.

        Ouptut only. The name of dataset. \"projects/*/datasets/*\"

        :return: The dataset of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.
        :rtype: str
        """
        return self._dataset

    @dataset.setter
    def dataset(self, dataset):
        """Sets the dataset of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.

        Ouptut only. The name of dataset. \"projects/*/datasets/*\"

        :param dataset: The dataset of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.
        :type dataset: str
        """

        self._dataset = dataset

    @property
    def export_count(self):
        """Gets the export_count of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.

        Output only. Number of examples exported successfully.

        :return: The export_count of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.
        :rtype: int
        """
        return self._export_count

    @export_count.setter
    def export_count(self, export_count):
        """Sets the export_count of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.

        Output only. Number of examples exported successfully.

        :param export_count: The export_count of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.
        :type export_count: int
        """

        self._export_count = export_count

    @property
    def label_stats(self):
        """Gets the label_stats of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.


        :return: The label_stats of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.
        :rtype: GoogleCloudDatalabelingV1p1alpha1LabelStats
        """
        return self._label_stats

    @label_stats.setter
    def label_stats(self, label_stats):
        """Sets the label_stats of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.


        :param label_stats: The label_stats of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.
        :type label_stats: GoogleCloudDatalabelingV1p1alpha1LabelStats
        """

        self._label_stats = label_stats

    @property
    def output_config(self):
        """Gets the output_config of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.


        :return: The output_config of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.
        :rtype: GoogleCloudDatalabelingV1p1alpha1OutputConfig
        """
        return self._output_config

    @output_config.setter
    def output_config(self, output_config):
        """Sets the output_config of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.


        :param output_config: The output_config of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.
        :type output_config: GoogleCloudDatalabelingV1p1alpha1OutputConfig
        """

        self._output_config = output_config

    @property
    def total_count(self):
        """Gets the total_count of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.

        Output only. Total number of examples requested to export

        :return: The total_count of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count):
        """Sets the total_count of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.

        Output only. Total number of examples requested to export

        :param total_count: The total_count of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse.
        :type total_count: int
        """

        self._total_count = total_count
