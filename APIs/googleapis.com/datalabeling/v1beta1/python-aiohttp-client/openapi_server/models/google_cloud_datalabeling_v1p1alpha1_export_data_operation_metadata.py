# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_rpc_status import GoogleRpcStatus
from openapi_server import util


class GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotated_dataset: str=None, create_time: str=None, dataset: str=None, partial_failures: List[GoogleRpcStatus]=None):
        """GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata - a model defined in OpenAPI

        :param annotated_dataset: The annotated_dataset of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata.
        :param create_time: The create_time of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata.
        :param dataset: The dataset of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata.
        :param partial_failures: The partial_failures of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata.
        """
        self.openapi_types = {
            'annotated_dataset': str,
            'create_time': str,
            'dataset': str,
            'partial_failures': List[GoogleRpcStatus]
        }

        self.attribute_map = {
            'annotated_dataset': 'annotatedDataset',
            'create_time': 'createTime',
            'dataset': 'dataset',
            'partial_failures': 'partialFailures'
        }

        self._annotated_dataset = annotated_dataset
        self._create_time = create_time
        self._dataset = dataset
        self._partial_failures = partial_failures

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotated_dataset(self):
        """Gets the annotated_dataset of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata.

        Output only. The name of annotated dataset in format \"projects/*/datasets/*/annotatedDatasets/*\".

        :return: The annotated_dataset of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata.
        :rtype: str
        """
        return self._annotated_dataset

    @annotated_dataset.setter
    def annotated_dataset(self, annotated_dataset):
        """Sets the annotated_dataset of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata.

        Output only. The name of annotated dataset in format \"projects/*/datasets/*/annotatedDatasets/*\".

        :param annotated_dataset: The annotated_dataset of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata.
        :type annotated_dataset: str
        """

        self._annotated_dataset = annotated_dataset

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata.

        Output only. Timestamp when export dataset request was created.

        :return: The create_time of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata.

        Output only. Timestamp when export dataset request was created.

        :param create_time: The create_time of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def dataset(self):
        """Gets the dataset of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata.

        Output only. The name of dataset to be exported. \"projects/*/datasets/*\"

        :return: The dataset of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata.
        :rtype: str
        """
        return self._dataset

    @dataset.setter
    def dataset(self, dataset):
        """Sets the dataset of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata.

        Output only. The name of dataset to be exported. \"projects/*/datasets/*\"

        :param dataset: The dataset of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata.
        :type dataset: str
        """

        self._dataset = dataset

    @property
    def partial_failures(self):
        """Gets the partial_failures of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata.

        Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details.

        :return: The partial_failures of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata.
        :rtype: List[GoogleRpcStatus]
        """
        return self._partial_failures

    @partial_failures.setter
    def partial_failures(self, partial_failures):
        """Sets the partial_failures of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata.

        Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details.

        :param partial_failures: The partial_failures of this GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata.
        :type partial_failures: List[GoogleRpcStatus]
        """

        self._partial_failures = partial_failures
