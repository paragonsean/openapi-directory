# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_datalabeling_v1beta1_annotated_dataset_metadata import GoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata
from openapi_server.models.google_cloud_datalabeling_v1beta1_label_stats import GoogleCloudDatalabelingV1beta1LabelStats
from openapi_server import util


class GoogleCloudDatalabelingV1beta1AnnotatedDataset(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotation_source: str=None, annotation_type: str=None, blocking_resources: List[str]=None, completed_example_count: str=None, create_time: str=None, description: str=None, display_name: str=None, example_count: str=None, label_stats: GoogleCloudDatalabelingV1beta1LabelStats=None, metadata: GoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata=None, name: str=None):
        """GoogleCloudDatalabelingV1beta1AnnotatedDataset - a model defined in OpenAPI

        :param annotation_source: The annotation_source of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :param annotation_type: The annotation_type of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :param blocking_resources: The blocking_resources of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :param completed_example_count: The completed_example_count of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :param create_time: The create_time of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :param description: The description of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :param display_name: The display_name of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :param example_count: The example_count of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :param label_stats: The label_stats of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :param metadata: The metadata of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :param name: The name of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        """
        self.openapi_types = {
            'annotation_source': str,
            'annotation_type': str,
            'blocking_resources': List[str],
            'completed_example_count': str,
            'create_time': str,
            'description': str,
            'display_name': str,
            'example_count': str,
            'label_stats': GoogleCloudDatalabelingV1beta1LabelStats,
            'metadata': GoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata,
            'name': str
        }

        self.attribute_map = {
            'annotation_source': 'annotationSource',
            'annotation_type': 'annotationType',
            'blocking_resources': 'blockingResources',
            'completed_example_count': 'completedExampleCount',
            'create_time': 'createTime',
            'description': 'description',
            'display_name': 'displayName',
            'example_count': 'exampleCount',
            'label_stats': 'labelStats',
            'metadata': 'metadata',
            'name': 'name'
        }

        self._annotation_source = annotation_source
        self._annotation_type = annotation_type
        self._blocking_resources = blocking_resources
        self._completed_example_count = completed_example_count
        self._create_time = create_time
        self._description = description
        self._display_name = display_name
        self._example_count = example_count
        self._label_stats = label_stats
        self._metadata = metadata
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatalabelingV1beta1AnnotatedDataset':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatalabelingV1beta1AnnotatedDataset of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotation_source(self):
        """Gets the annotation_source of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.

        Output only. Source of the annotation.

        :return: The annotation_source of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :rtype: str
        """
        return self._annotation_source

    @annotation_source.setter
    def annotation_source(self, annotation_source):
        """Sets the annotation_source of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.

        Output only. Source of the annotation.

        :param annotation_source: The annotation_source of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :type annotation_source: str
        """
        allowed_values = ["ANNOTATION_SOURCE_UNSPECIFIED", "OPERATOR"]  # noqa: E501
        if annotation_source not in allowed_values:
            raise ValueError(
                "Invalid value for `annotation_source` ({0}), must be one of {1}"
                .format(annotation_source, allowed_values)
            )

        self._annotation_source = annotation_source

    @property
    def annotation_type(self):
        """Gets the annotation_type of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.

        Output only. Type of the annotation. It is specified when starting labeling task.

        :return: The annotation_type of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :rtype: str
        """
        return self._annotation_type

    @annotation_type.setter
    def annotation_type(self, annotation_type):
        """Sets the annotation_type of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.

        Output only. Type of the annotation. It is specified when starting labeling task.

        :param annotation_type: The annotation_type of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :type annotation_type: str
        """
        allowed_values = ["ANNOTATION_TYPE_UNSPECIFIED", "IMAGE_CLASSIFICATION_ANNOTATION", "IMAGE_BOUNDING_BOX_ANNOTATION", "IMAGE_ORIENTED_BOUNDING_BOX_ANNOTATION", "IMAGE_BOUNDING_POLY_ANNOTATION", "IMAGE_POLYLINE_ANNOTATION", "IMAGE_SEGMENTATION_ANNOTATION", "VIDEO_SHOTS_CLASSIFICATION_ANNOTATION", "VIDEO_OBJECT_TRACKING_ANNOTATION", "VIDEO_OBJECT_DETECTION_ANNOTATION", "VIDEO_EVENT_ANNOTATION", "TEXT_CLASSIFICATION_ANNOTATION", "TEXT_ENTITY_EXTRACTION_ANNOTATION", "GENERAL_CLASSIFICATION_ANNOTATION"]  # noqa: E501
        if annotation_type not in allowed_values:
            raise ValueError(
                "Invalid value for `annotation_type` ({0}), must be one of {1}"
                .format(annotation_type, allowed_values)
            )

        self._annotation_type = annotation_type

    @property
    def blocking_resources(self):
        """Gets the blocking_resources of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.

        Output only. The names of any related resources that are blocking changes to the annotated dataset.

        :return: The blocking_resources of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :rtype: List[str]
        """
        return self._blocking_resources

    @blocking_resources.setter
    def blocking_resources(self, blocking_resources):
        """Sets the blocking_resources of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.

        Output only. The names of any related resources that are blocking changes to the annotated dataset.

        :param blocking_resources: The blocking_resources of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :type blocking_resources: List[str]
        """

        self._blocking_resources = blocking_resources

    @property
    def completed_example_count(self):
        """Gets the completed_example_count of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.

        Output only. Number of examples that have annotation in the annotated dataset.

        :return: The completed_example_count of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :rtype: str
        """
        return self._completed_example_count

    @completed_example_count.setter
    def completed_example_count(self, completed_example_count):
        """Sets the completed_example_count of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.

        Output only. Number of examples that have annotation in the annotated dataset.

        :param completed_example_count: The completed_example_count of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :type completed_example_count: str
        """

        self._completed_example_count = completed_example_count

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.

        Output only. Time the AnnotatedDataset was created.

        :return: The create_time of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.

        Output only. Time the AnnotatedDataset was created.

        :param create_time: The create_time of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def description(self):
        """Gets the description of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.

        Output only. The description of the AnnotatedDataset. It is specified in HumanAnnotationConfig when user starts a labeling task. Maximum of 10000 characters.

        :return: The description of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.

        Output only. The description of the AnnotatedDataset. It is specified in HumanAnnotationConfig when user starts a labeling task. Maximum of 10000 characters.

        :param description: The description of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.

        Output only. The display name of the AnnotatedDataset. It is specified in HumanAnnotationConfig when user starts a labeling task. Maximum of 64 characters.

        :return: The display_name of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.

        Output only. The display name of the AnnotatedDataset. It is specified in HumanAnnotationConfig when user starts a labeling task. Maximum of 64 characters.

        :param display_name: The display_name of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def example_count(self):
        """Gets the example_count of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.

        Output only. Number of examples in the annotated dataset.

        :return: The example_count of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :rtype: str
        """
        return self._example_count

    @example_count.setter
    def example_count(self, example_count):
        """Sets the example_count of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.

        Output only. Number of examples in the annotated dataset.

        :param example_count: The example_count of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :type example_count: str
        """

        self._example_count = example_count

    @property
    def label_stats(self):
        """Gets the label_stats of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.


        :return: The label_stats of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :rtype: GoogleCloudDatalabelingV1beta1LabelStats
        """
        return self._label_stats

    @label_stats.setter
    def label_stats(self, label_stats):
        """Sets the label_stats of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.


        :param label_stats: The label_stats of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :type label_stats: GoogleCloudDatalabelingV1beta1LabelStats
        """

        self._label_stats = label_stats

    @property
    def metadata(self):
        """Gets the metadata of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.


        :return: The metadata of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :rtype: GoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.


        :param metadata: The metadata of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :type metadata: GoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata
        """

        self._metadata = metadata

    @property
    def name(self):
        """Gets the name of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.

        Output only. AnnotatedDataset resource name in format of: projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/ {annotated_dataset_id}

        :return: The name of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.

        Output only. AnnotatedDataset resource name in format of: projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/ {annotated_dataset_id}

        :param name: The name of this GoogleCloudDatalabelingV1beta1AnnotatedDataset.
        :type name: str
        """

        self._name = name
