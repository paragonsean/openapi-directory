# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_datalabeling_v1beta1_human_annotation_config import GoogleCloudDatalabelingV1beta1HumanAnnotationConfig
from openapi_server.models.google_cloud_datalabeling_v1beta1_text_classification_config import GoogleCloudDatalabelingV1beta1TextClassificationConfig
from openapi_server.models.google_cloud_datalabeling_v1beta1_text_entity_extraction_config import GoogleCloudDatalabelingV1beta1TextEntityExtractionConfig
from openapi_server import util


class GoogleCloudDatalabelingV1beta1LabelTextRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, basic_config: GoogleCloudDatalabelingV1beta1HumanAnnotationConfig=None, feature: str=None, text_classification_config: GoogleCloudDatalabelingV1beta1TextClassificationConfig=None, text_entity_extraction_config: GoogleCloudDatalabelingV1beta1TextEntityExtractionConfig=None):
        """GoogleCloudDatalabelingV1beta1LabelTextRequest - a model defined in OpenAPI

        :param basic_config: The basic_config of this GoogleCloudDatalabelingV1beta1LabelTextRequest.
        :param feature: The feature of this GoogleCloudDatalabelingV1beta1LabelTextRequest.
        :param text_classification_config: The text_classification_config of this GoogleCloudDatalabelingV1beta1LabelTextRequest.
        :param text_entity_extraction_config: The text_entity_extraction_config of this GoogleCloudDatalabelingV1beta1LabelTextRequest.
        """
        self.openapi_types = {
            'basic_config': GoogleCloudDatalabelingV1beta1HumanAnnotationConfig,
            'feature': str,
            'text_classification_config': GoogleCloudDatalabelingV1beta1TextClassificationConfig,
            'text_entity_extraction_config': GoogleCloudDatalabelingV1beta1TextEntityExtractionConfig
        }

        self.attribute_map = {
            'basic_config': 'basicConfig',
            'feature': 'feature',
            'text_classification_config': 'textClassificationConfig',
            'text_entity_extraction_config': 'textEntityExtractionConfig'
        }

        self._basic_config = basic_config
        self._feature = feature
        self._text_classification_config = text_classification_config
        self._text_entity_extraction_config = text_entity_extraction_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatalabelingV1beta1LabelTextRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatalabelingV1beta1LabelTextRequest of this GoogleCloudDatalabelingV1beta1LabelTextRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def basic_config(self):
        """Gets the basic_config of this GoogleCloudDatalabelingV1beta1LabelTextRequest.


        :return: The basic_config of this GoogleCloudDatalabelingV1beta1LabelTextRequest.
        :rtype: GoogleCloudDatalabelingV1beta1HumanAnnotationConfig
        """
        return self._basic_config

    @basic_config.setter
    def basic_config(self, basic_config):
        """Sets the basic_config of this GoogleCloudDatalabelingV1beta1LabelTextRequest.


        :param basic_config: The basic_config of this GoogleCloudDatalabelingV1beta1LabelTextRequest.
        :type basic_config: GoogleCloudDatalabelingV1beta1HumanAnnotationConfig
        """

        self._basic_config = basic_config

    @property
    def feature(self):
        """Gets the feature of this GoogleCloudDatalabelingV1beta1LabelTextRequest.

        Required. The type of text labeling task.

        :return: The feature of this GoogleCloudDatalabelingV1beta1LabelTextRequest.
        :rtype: str
        """
        return self._feature

    @feature.setter
    def feature(self, feature):
        """Sets the feature of this GoogleCloudDatalabelingV1beta1LabelTextRequest.

        Required. The type of text labeling task.

        :param feature: The feature of this GoogleCloudDatalabelingV1beta1LabelTextRequest.
        :type feature: str
        """
        allowed_values = ["FEATURE_UNSPECIFIED", "TEXT_CLASSIFICATION", "TEXT_ENTITY_EXTRACTION"]  # noqa: E501
        if feature not in allowed_values:
            raise ValueError(
                "Invalid value for `feature` ({0}), must be one of {1}"
                .format(feature, allowed_values)
            )

        self._feature = feature

    @property
    def text_classification_config(self):
        """Gets the text_classification_config of this GoogleCloudDatalabelingV1beta1LabelTextRequest.


        :return: The text_classification_config of this GoogleCloudDatalabelingV1beta1LabelTextRequest.
        :rtype: GoogleCloudDatalabelingV1beta1TextClassificationConfig
        """
        return self._text_classification_config

    @text_classification_config.setter
    def text_classification_config(self, text_classification_config):
        """Sets the text_classification_config of this GoogleCloudDatalabelingV1beta1LabelTextRequest.


        :param text_classification_config: The text_classification_config of this GoogleCloudDatalabelingV1beta1LabelTextRequest.
        :type text_classification_config: GoogleCloudDatalabelingV1beta1TextClassificationConfig
        """

        self._text_classification_config = text_classification_config

    @property
    def text_entity_extraction_config(self):
        """Gets the text_entity_extraction_config of this GoogleCloudDatalabelingV1beta1LabelTextRequest.


        :return: The text_entity_extraction_config of this GoogleCloudDatalabelingV1beta1LabelTextRequest.
        :rtype: GoogleCloudDatalabelingV1beta1TextEntityExtractionConfig
        """
        return self._text_entity_extraction_config

    @text_entity_extraction_config.setter
    def text_entity_extraction_config(self, text_entity_extraction_config):
        """Sets the text_entity_extraction_config of this GoogleCloudDatalabelingV1beta1LabelTextRequest.


        :param text_entity_extraction_config: The text_entity_extraction_config of this GoogleCloudDatalabelingV1beta1LabelTextRequest.
        :type text_entity_extraction_config: GoogleCloudDatalabelingV1beta1TextEntityExtractionConfig
        """

        self._text_entity_extraction_config = text_entity_extraction_config
