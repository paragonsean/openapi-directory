# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_datalabeling_v1beta1_row import GoogleCloudDatalabelingV1beta1Row
from openapi_server import util


class GoogleCloudDatalabelingV1beta1ConfusionMatrix(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, row: List[GoogleCloudDatalabelingV1beta1Row]=None):
        """GoogleCloudDatalabelingV1beta1ConfusionMatrix - a model defined in OpenAPI

        :param row: The row of this GoogleCloudDatalabelingV1beta1ConfusionMatrix.
        """
        self.openapi_types = {
            'row': List[GoogleCloudDatalabelingV1beta1Row]
        }

        self.attribute_map = {
            'row': 'row'
        }

        self._row = row

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatalabelingV1beta1ConfusionMatrix':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatalabelingV1beta1ConfusionMatrix of this GoogleCloudDatalabelingV1beta1ConfusionMatrix.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def row(self):
        """Gets the row of this GoogleCloudDatalabelingV1beta1ConfusionMatrix.


        :return: The row of this GoogleCloudDatalabelingV1beta1ConfusionMatrix.
        :rtype: List[GoogleCloudDatalabelingV1beta1Row]
        """
        return self._row

    @row.setter
    def row(self, row):
        """Sets the row of this GoogleCloudDatalabelingV1beta1ConfusionMatrix.


        :param row: The row of this GoogleCloudDatalabelingV1beta1ConfusionMatrix.
        :type row: List[GoogleCloudDatalabelingV1beta1Row]
        """

        self._row = row
