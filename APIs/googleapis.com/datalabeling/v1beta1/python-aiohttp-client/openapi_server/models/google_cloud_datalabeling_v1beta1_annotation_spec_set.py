# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_datalabeling_v1beta1_annotation_spec import GoogleCloudDatalabelingV1beta1AnnotationSpec
from openapi_server import util


class GoogleCloudDatalabelingV1beta1AnnotationSpecSet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotation_specs: List[GoogleCloudDatalabelingV1beta1AnnotationSpec]=None, blocking_resources: List[str]=None, description: str=None, display_name: str=None, name: str=None):
        """GoogleCloudDatalabelingV1beta1AnnotationSpecSet - a model defined in OpenAPI

        :param annotation_specs: The annotation_specs of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.
        :param blocking_resources: The blocking_resources of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.
        :param description: The description of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.
        :param display_name: The display_name of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.
        :param name: The name of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.
        """
        self.openapi_types = {
            'annotation_specs': List[GoogleCloudDatalabelingV1beta1AnnotationSpec],
            'blocking_resources': List[str],
            'description': str,
            'display_name': str,
            'name': str
        }

        self.attribute_map = {
            'annotation_specs': 'annotationSpecs',
            'blocking_resources': 'blockingResources',
            'description': 'description',
            'display_name': 'displayName',
            'name': 'name'
        }

        self._annotation_specs = annotation_specs
        self._blocking_resources = blocking_resources
        self._description = description
        self._display_name = display_name
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatalabelingV1beta1AnnotationSpecSet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatalabelingV1beta1AnnotationSpecSet of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotation_specs(self):
        """Gets the annotation_specs of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.

        Required. The array of AnnotationSpecs that you define when you create the AnnotationSpecSet. These are the possible labels for the labeling task.

        :return: The annotation_specs of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.
        :rtype: List[GoogleCloudDatalabelingV1beta1AnnotationSpec]
        """
        return self._annotation_specs

    @annotation_specs.setter
    def annotation_specs(self, annotation_specs):
        """Sets the annotation_specs of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.

        Required. The array of AnnotationSpecs that you define when you create the AnnotationSpecSet. These are the possible labels for the labeling task.

        :param annotation_specs: The annotation_specs of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.
        :type annotation_specs: List[GoogleCloudDatalabelingV1beta1AnnotationSpec]
        """

        self._annotation_specs = annotation_specs

    @property
    def blocking_resources(self):
        """Gets the blocking_resources of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.

        Output only. The names of any related resources that are blocking changes to the annotation spec set.

        :return: The blocking_resources of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.
        :rtype: List[str]
        """
        return self._blocking_resources

    @blocking_resources.setter
    def blocking_resources(self, blocking_resources):
        """Sets the blocking_resources of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.

        Output only. The names of any related resources that are blocking changes to the annotation spec set.

        :param blocking_resources: The blocking_resources of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.
        :type blocking_resources: List[str]
        """

        self._blocking_resources = blocking_resources

    @property
    def description(self):
        """Gets the description of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.

        Optional. User-provided description of the annotation specification set. The description can be up to 10,000 characters long.

        :return: The description of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.

        Optional. User-provided description of the annotation specification set. The description can be up to 10,000 characters long.

        :param description: The description of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.

        Required. The display name for AnnotationSpecSet that you define when you create it. Maximum of 64 characters.

        :return: The display_name of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.

        Required. The display name for AnnotationSpecSet that you define when you create it. Maximum of 64 characters.

        :param display_name: The display_name of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def name(self):
        """Gets the name of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.

        Output only. The AnnotationSpecSet resource name in the following format: \"projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}\"

        :return: The name of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.

        Output only. The AnnotationSpecSet resource name in the following format: \"projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}\"

        :param name: The name of this GoogleCloudDatalabelingV1beta1AnnotationSpecSet.
        :type name: str
        """

        self._name = name
