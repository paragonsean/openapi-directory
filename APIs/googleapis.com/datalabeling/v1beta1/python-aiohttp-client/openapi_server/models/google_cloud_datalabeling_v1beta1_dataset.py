# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_datalabeling_v1beta1_input_config import GoogleCloudDatalabelingV1beta1InputConfig
from openapi_server import util


class GoogleCloudDatalabelingV1beta1Dataset(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blocking_resources: List[str]=None, create_time: str=None, data_item_count: str=None, description: str=None, display_name: str=None, input_configs: List[GoogleCloudDatalabelingV1beta1InputConfig]=None, last_migrate_time: str=None, name: str=None):
        """GoogleCloudDatalabelingV1beta1Dataset - a model defined in OpenAPI

        :param blocking_resources: The blocking_resources of this GoogleCloudDatalabelingV1beta1Dataset.
        :param create_time: The create_time of this GoogleCloudDatalabelingV1beta1Dataset.
        :param data_item_count: The data_item_count of this GoogleCloudDatalabelingV1beta1Dataset.
        :param description: The description of this GoogleCloudDatalabelingV1beta1Dataset.
        :param display_name: The display_name of this GoogleCloudDatalabelingV1beta1Dataset.
        :param input_configs: The input_configs of this GoogleCloudDatalabelingV1beta1Dataset.
        :param last_migrate_time: The last_migrate_time of this GoogleCloudDatalabelingV1beta1Dataset.
        :param name: The name of this GoogleCloudDatalabelingV1beta1Dataset.
        """
        self.openapi_types = {
            'blocking_resources': List[str],
            'create_time': str,
            'data_item_count': str,
            'description': str,
            'display_name': str,
            'input_configs': List[GoogleCloudDatalabelingV1beta1InputConfig],
            'last_migrate_time': str,
            'name': str
        }

        self.attribute_map = {
            'blocking_resources': 'blockingResources',
            'create_time': 'createTime',
            'data_item_count': 'dataItemCount',
            'description': 'description',
            'display_name': 'displayName',
            'input_configs': 'inputConfigs',
            'last_migrate_time': 'lastMigrateTime',
            'name': 'name'
        }

        self._blocking_resources = blocking_resources
        self._create_time = create_time
        self._data_item_count = data_item_count
        self._description = description
        self._display_name = display_name
        self._input_configs = input_configs
        self._last_migrate_time = last_migrate_time
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatalabelingV1beta1Dataset':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatalabelingV1beta1Dataset of this GoogleCloudDatalabelingV1beta1Dataset.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blocking_resources(self):
        """Gets the blocking_resources of this GoogleCloudDatalabelingV1beta1Dataset.

        Output only. The names of any related resources that are blocking changes to the dataset.

        :return: The blocking_resources of this GoogleCloudDatalabelingV1beta1Dataset.
        :rtype: List[str]
        """
        return self._blocking_resources

    @blocking_resources.setter
    def blocking_resources(self, blocking_resources):
        """Sets the blocking_resources of this GoogleCloudDatalabelingV1beta1Dataset.

        Output only. The names of any related resources that are blocking changes to the dataset.

        :param blocking_resources: The blocking_resources of this GoogleCloudDatalabelingV1beta1Dataset.
        :type blocking_resources: List[str]
        """

        self._blocking_resources = blocking_resources

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudDatalabelingV1beta1Dataset.

        Output only. Time the dataset is created.

        :return: The create_time of this GoogleCloudDatalabelingV1beta1Dataset.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudDatalabelingV1beta1Dataset.

        Output only. Time the dataset is created.

        :param create_time: The create_time of this GoogleCloudDatalabelingV1beta1Dataset.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def data_item_count(self):
        """Gets the data_item_count of this GoogleCloudDatalabelingV1beta1Dataset.

        Output only. The number of data items in the dataset.

        :return: The data_item_count of this GoogleCloudDatalabelingV1beta1Dataset.
        :rtype: str
        """
        return self._data_item_count

    @data_item_count.setter
    def data_item_count(self, data_item_count):
        """Sets the data_item_count of this GoogleCloudDatalabelingV1beta1Dataset.

        Output only. The number of data items in the dataset.

        :param data_item_count: The data_item_count of this GoogleCloudDatalabelingV1beta1Dataset.
        :type data_item_count: str
        """

        self._data_item_count = data_item_count

    @property
    def description(self):
        """Gets the description of this GoogleCloudDatalabelingV1beta1Dataset.

        Optional. User-provided description of the annotation specification set. The description can be up to 10000 characters long.

        :return: The description of this GoogleCloudDatalabelingV1beta1Dataset.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudDatalabelingV1beta1Dataset.

        Optional. User-provided description of the annotation specification set. The description can be up to 10000 characters long.

        :param description: The description of this GoogleCloudDatalabelingV1beta1Dataset.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudDatalabelingV1beta1Dataset.

        Required. The display name of the dataset. Maximum of 64 characters.

        :return: The display_name of this GoogleCloudDatalabelingV1beta1Dataset.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudDatalabelingV1beta1Dataset.

        Required. The display name of the dataset. Maximum of 64 characters.

        :param display_name: The display_name of this GoogleCloudDatalabelingV1beta1Dataset.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def input_configs(self):
        """Gets the input_configs of this GoogleCloudDatalabelingV1beta1Dataset.

        Output only. This is populated with the original input configs where ImportData is called. It is available only after the clients import data to this dataset.

        :return: The input_configs of this GoogleCloudDatalabelingV1beta1Dataset.
        :rtype: List[GoogleCloudDatalabelingV1beta1InputConfig]
        """
        return self._input_configs

    @input_configs.setter
    def input_configs(self, input_configs):
        """Sets the input_configs of this GoogleCloudDatalabelingV1beta1Dataset.

        Output only. This is populated with the original input configs where ImportData is called. It is available only after the clients import data to this dataset.

        :param input_configs: The input_configs of this GoogleCloudDatalabelingV1beta1Dataset.
        :type input_configs: List[GoogleCloudDatalabelingV1beta1InputConfig]
        """

        self._input_configs = input_configs

    @property
    def last_migrate_time(self):
        """Gets the last_migrate_time of this GoogleCloudDatalabelingV1beta1Dataset.

        Last time that the Dataset is migrated to AI Platform V2. If any of the AnnotatedDataset is migrated, the last_migration_time in Dataset is also updated.

        :return: The last_migrate_time of this GoogleCloudDatalabelingV1beta1Dataset.
        :rtype: str
        """
        return self._last_migrate_time

    @last_migrate_time.setter
    def last_migrate_time(self, last_migrate_time):
        """Sets the last_migrate_time of this GoogleCloudDatalabelingV1beta1Dataset.

        Last time that the Dataset is migrated to AI Platform V2. If any of the AnnotatedDataset is migrated, the last_migration_time in Dataset is also updated.

        :param last_migrate_time: The last_migrate_time of this GoogleCloudDatalabelingV1beta1Dataset.
        :type last_migrate_time: str
        """

        self._last_migrate_time = last_migrate_time

    @property
    def name(self):
        """Gets the name of this GoogleCloudDatalabelingV1beta1Dataset.

        Output only. Dataset resource name, format is: projects/{project_id}/datasets/{dataset_id}

        :return: The name of this GoogleCloudDatalabelingV1beta1Dataset.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDatalabelingV1beta1Dataset.

        Output only. Dataset resource name, format is: projects/{project_id}/datasets/{dataset_id}

        :param name: The name of this GoogleCloudDatalabelingV1beta1Dataset.
        :type name: str
        """

        self._name = name
