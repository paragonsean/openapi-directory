# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_datalabeling_v1beta1_event_config import GoogleCloudDatalabelingV1beta1EventConfig
from openapi_server.models.google_cloud_datalabeling_v1beta1_human_annotation_config import GoogleCloudDatalabelingV1beta1HumanAnnotationConfig
from openapi_server.models.google_cloud_datalabeling_v1beta1_object_detection_config import GoogleCloudDatalabelingV1beta1ObjectDetectionConfig
from openapi_server.models.google_cloud_datalabeling_v1beta1_object_tracking_config import GoogleCloudDatalabelingV1beta1ObjectTrackingConfig
from openapi_server.models.google_cloud_datalabeling_v1beta1_video_classification_config import GoogleCloudDatalabelingV1beta1VideoClassificationConfig
from openapi_server import util


class GoogleCloudDatalabelingV1beta1LabelVideoRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, basic_config: GoogleCloudDatalabelingV1beta1HumanAnnotationConfig=None, event_config: GoogleCloudDatalabelingV1beta1EventConfig=None, feature: str=None, object_detection_config: GoogleCloudDatalabelingV1beta1ObjectDetectionConfig=None, object_tracking_config: GoogleCloudDatalabelingV1beta1ObjectTrackingConfig=None, video_classification_config: GoogleCloudDatalabelingV1beta1VideoClassificationConfig=None):
        """GoogleCloudDatalabelingV1beta1LabelVideoRequest - a model defined in OpenAPI

        :param basic_config: The basic_config of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.
        :param event_config: The event_config of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.
        :param feature: The feature of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.
        :param object_detection_config: The object_detection_config of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.
        :param object_tracking_config: The object_tracking_config of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.
        :param video_classification_config: The video_classification_config of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.
        """
        self.openapi_types = {
            'basic_config': GoogleCloudDatalabelingV1beta1HumanAnnotationConfig,
            'event_config': GoogleCloudDatalabelingV1beta1EventConfig,
            'feature': str,
            'object_detection_config': GoogleCloudDatalabelingV1beta1ObjectDetectionConfig,
            'object_tracking_config': GoogleCloudDatalabelingV1beta1ObjectTrackingConfig,
            'video_classification_config': GoogleCloudDatalabelingV1beta1VideoClassificationConfig
        }

        self.attribute_map = {
            'basic_config': 'basicConfig',
            'event_config': 'eventConfig',
            'feature': 'feature',
            'object_detection_config': 'objectDetectionConfig',
            'object_tracking_config': 'objectTrackingConfig',
            'video_classification_config': 'videoClassificationConfig'
        }

        self._basic_config = basic_config
        self._event_config = event_config
        self._feature = feature
        self._object_detection_config = object_detection_config
        self._object_tracking_config = object_tracking_config
        self._video_classification_config = video_classification_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatalabelingV1beta1LabelVideoRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatalabelingV1beta1LabelVideoRequest of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def basic_config(self):
        """Gets the basic_config of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.


        :return: The basic_config of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.
        :rtype: GoogleCloudDatalabelingV1beta1HumanAnnotationConfig
        """
        return self._basic_config

    @basic_config.setter
    def basic_config(self, basic_config):
        """Sets the basic_config of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.


        :param basic_config: The basic_config of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.
        :type basic_config: GoogleCloudDatalabelingV1beta1HumanAnnotationConfig
        """

        self._basic_config = basic_config

    @property
    def event_config(self):
        """Gets the event_config of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.


        :return: The event_config of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.
        :rtype: GoogleCloudDatalabelingV1beta1EventConfig
        """
        return self._event_config

    @event_config.setter
    def event_config(self, event_config):
        """Sets the event_config of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.


        :param event_config: The event_config of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.
        :type event_config: GoogleCloudDatalabelingV1beta1EventConfig
        """

        self._event_config = event_config

    @property
    def feature(self):
        """Gets the feature of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.

        Required. The type of video labeling task.

        :return: The feature of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.
        :rtype: str
        """
        return self._feature

    @feature.setter
    def feature(self, feature):
        """Sets the feature of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.

        Required. The type of video labeling task.

        :param feature: The feature of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.
        :type feature: str
        """
        allowed_values = ["FEATURE_UNSPECIFIED", "CLASSIFICATION", "OBJECT_DETECTION", "OBJECT_TRACKING", "EVENT"]  # noqa: E501
        if feature not in allowed_values:
            raise ValueError(
                "Invalid value for `feature` ({0}), must be one of {1}"
                .format(feature, allowed_values)
            )

        self._feature = feature

    @property
    def object_detection_config(self):
        """Gets the object_detection_config of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.


        :return: The object_detection_config of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.
        :rtype: GoogleCloudDatalabelingV1beta1ObjectDetectionConfig
        """
        return self._object_detection_config

    @object_detection_config.setter
    def object_detection_config(self, object_detection_config):
        """Sets the object_detection_config of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.


        :param object_detection_config: The object_detection_config of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.
        :type object_detection_config: GoogleCloudDatalabelingV1beta1ObjectDetectionConfig
        """

        self._object_detection_config = object_detection_config

    @property
    def object_tracking_config(self):
        """Gets the object_tracking_config of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.


        :return: The object_tracking_config of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.
        :rtype: GoogleCloudDatalabelingV1beta1ObjectTrackingConfig
        """
        return self._object_tracking_config

    @object_tracking_config.setter
    def object_tracking_config(self, object_tracking_config):
        """Sets the object_tracking_config of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.


        :param object_tracking_config: The object_tracking_config of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.
        :type object_tracking_config: GoogleCloudDatalabelingV1beta1ObjectTrackingConfig
        """

        self._object_tracking_config = object_tracking_config

    @property
    def video_classification_config(self):
        """Gets the video_classification_config of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.


        :return: The video_classification_config of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.
        :rtype: GoogleCloudDatalabelingV1beta1VideoClassificationConfig
        """
        return self._video_classification_config

    @video_classification_config.setter
    def video_classification_config(self, video_classification_config):
        """Sets the video_classification_config of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.


        :param video_classification_config: The video_classification_config of this GoogleCloudDatalabelingV1beta1LabelVideoRequest.
        :type video_classification_config: GoogleCloudDatalabelingV1beta1VideoClassificationConfig
        """

        self._video_classification_config = video_classification_config
