# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDatalabelingV1beta1VideoThumbnail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, thumbnail: str=None, time_offset: str=None):
        """GoogleCloudDatalabelingV1beta1VideoThumbnail - a model defined in OpenAPI

        :param thumbnail: The thumbnail of this GoogleCloudDatalabelingV1beta1VideoThumbnail.
        :param time_offset: The time_offset of this GoogleCloudDatalabelingV1beta1VideoThumbnail.
        """
        self.openapi_types = {
            'thumbnail': str,
            'time_offset': str
        }

        self.attribute_map = {
            'thumbnail': 'thumbnail',
            'time_offset': 'timeOffset'
        }

        self._thumbnail = thumbnail
        self._time_offset = time_offset

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatalabelingV1beta1VideoThumbnail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatalabelingV1beta1VideoThumbnail of this GoogleCloudDatalabelingV1beta1VideoThumbnail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def thumbnail(self):
        """Gets the thumbnail of this GoogleCloudDatalabelingV1beta1VideoThumbnail.

        A byte string of the video frame.

        :return: The thumbnail of this GoogleCloudDatalabelingV1beta1VideoThumbnail.
        :rtype: str
        """
        return self._thumbnail

    @thumbnail.setter
    def thumbnail(self, thumbnail):
        """Sets the thumbnail of this GoogleCloudDatalabelingV1beta1VideoThumbnail.

        A byte string of the video frame.

        :param thumbnail: The thumbnail of this GoogleCloudDatalabelingV1beta1VideoThumbnail.
        :type thumbnail: str
        """

        self._thumbnail = thumbnail

    @property
    def time_offset(self):
        """Gets the time_offset of this GoogleCloudDatalabelingV1beta1VideoThumbnail.

        Time offset relative to the beginning of the video, corresponding to the video frame where the thumbnail has been extracted from.

        :return: The time_offset of this GoogleCloudDatalabelingV1beta1VideoThumbnail.
        :rtype: str
        """
        return self._time_offset

    @time_offset.setter
    def time_offset(self, time_offset):
        """Sets the time_offset of this GoogleCloudDatalabelingV1beta1VideoThumbnail.

        Time offset relative to the beginning of the video, corresponding to the video frame where the thumbnail has been extracted from.

        :param time_offset: The time_offset of this GoogleCloudDatalabelingV1beta1VideoThumbnail.
        :type time_offset: str
        """

        self._time_offset = time_offset
