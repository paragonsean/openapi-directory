# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email: str=None, min_acceptable_mean_average_precision: float=None):
        """GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfig - a model defined in OpenAPI

        :param email: The email of this GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfig.
        :param min_acceptable_mean_average_precision: The min_acceptable_mean_average_precision of this GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfig.
        """
        self.openapi_types = {
            'email': str,
            'min_acceptable_mean_average_precision': float
        }

        self.attribute_map = {
            'email': 'email',
            'min_acceptable_mean_average_precision': 'minAcceptableMeanAveragePrecision'
        }

        self._email = email
        self._min_acceptable_mean_average_precision = min_acceptable_mean_average_precision

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfig of this GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfig.

        Required. An email address to send alerts to.

        :return: The email of this GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfig.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfig.

        Required. An email address to send alerts to.

        :param email: The email of this GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfig.
        :type email: str
        """

        self._email = email

    @property
    def min_acceptable_mean_average_precision(self):
        """Gets the min_acceptable_mean_average_precision of this GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfig.

        Required. A number between 0 and 1 that describes a minimum mean average precision threshold. When the evaluation job runs, if it calculates that your model version's predictions from the recent interval have meanAveragePrecision below this threshold, then it sends an alert to your specified email.

        :return: The min_acceptable_mean_average_precision of this GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfig.
        :rtype: float
        """
        return self._min_acceptable_mean_average_precision

    @min_acceptable_mean_average_precision.setter
    def min_acceptable_mean_average_precision(self, min_acceptable_mean_average_precision):
        """Sets the min_acceptable_mean_average_precision of this GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfig.

        Required. A number between 0 and 1 that describes a minimum mean average precision threshold. When the evaluation job runs, if it calculates that your model version's predictions from the recent interval have meanAveragePrecision below this threshold, then it sends an alert to your specified email.

        :param min_acceptable_mean_average_precision: The min_acceptable_mean_average_precision of this GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfig.
        :type min_acceptable_mean_average_precision: float
        """

        self._min_acceptable_mean_average_precision = min_acceptable_mean_average_precision
