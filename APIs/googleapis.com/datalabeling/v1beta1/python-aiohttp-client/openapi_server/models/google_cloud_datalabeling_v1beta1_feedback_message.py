# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDatalabelingV1beta1FeedbackMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body: str=None, create_time: str=None, image: str=None, name: str=None, operator_feedback_metadata: object=None, requester_feedback_metadata: object=None):
        """GoogleCloudDatalabelingV1beta1FeedbackMessage - a model defined in OpenAPI

        :param body: The body of this GoogleCloudDatalabelingV1beta1FeedbackMessage.
        :param create_time: The create_time of this GoogleCloudDatalabelingV1beta1FeedbackMessage.
        :param image: The image of this GoogleCloudDatalabelingV1beta1FeedbackMessage.
        :param name: The name of this GoogleCloudDatalabelingV1beta1FeedbackMessage.
        :param operator_feedback_metadata: The operator_feedback_metadata of this GoogleCloudDatalabelingV1beta1FeedbackMessage.
        :param requester_feedback_metadata: The requester_feedback_metadata of this GoogleCloudDatalabelingV1beta1FeedbackMessage.
        """
        self.openapi_types = {
            'body': str,
            'create_time': str,
            'image': str,
            'name': str,
            'operator_feedback_metadata': object,
            'requester_feedback_metadata': object
        }

        self.attribute_map = {
            'body': 'body',
            'create_time': 'createTime',
            'image': 'image',
            'name': 'name',
            'operator_feedback_metadata': 'operatorFeedbackMetadata',
            'requester_feedback_metadata': 'requesterFeedbackMetadata'
        }

        self._body = body
        self._create_time = create_time
        self._image = image
        self._name = name
        self._operator_feedback_metadata = operator_feedback_metadata
        self._requester_feedback_metadata = requester_feedback_metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatalabelingV1beta1FeedbackMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatalabelingV1beta1FeedbackMessage of this GoogleCloudDatalabelingV1beta1FeedbackMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body(self):
        """Gets the body of this GoogleCloudDatalabelingV1beta1FeedbackMessage.

        String content of the feedback. Maximum of 10000 characters.

        :return: The body of this GoogleCloudDatalabelingV1beta1FeedbackMessage.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this GoogleCloudDatalabelingV1beta1FeedbackMessage.

        String content of the feedback. Maximum of 10000 characters.

        :param body: The body of this GoogleCloudDatalabelingV1beta1FeedbackMessage.
        :type body: str
        """

        self._body = body

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudDatalabelingV1beta1FeedbackMessage.

        Create time.

        :return: The create_time of this GoogleCloudDatalabelingV1beta1FeedbackMessage.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudDatalabelingV1beta1FeedbackMessage.

        Create time.

        :param create_time: The create_time of this GoogleCloudDatalabelingV1beta1FeedbackMessage.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def image(self):
        """Gets the image of this GoogleCloudDatalabelingV1beta1FeedbackMessage.

        The image storing this feedback if the feedback is an image representing operator's comments.

        :return: The image of this GoogleCloudDatalabelingV1beta1FeedbackMessage.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this GoogleCloudDatalabelingV1beta1FeedbackMessage.

        The image storing this feedback if the feedback is an image representing operator's comments.

        :param image: The image of this GoogleCloudDatalabelingV1beta1FeedbackMessage.
        :type image: str
        """

        self._image = image

    @property
    def name(self):
        """Gets the name of this GoogleCloudDatalabelingV1beta1FeedbackMessage.

        Name of the feedback message in a feedback thread. Format: 'project/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}/feedbackMessage/{feedback_message_id}'

        :return: The name of this GoogleCloudDatalabelingV1beta1FeedbackMessage.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDatalabelingV1beta1FeedbackMessage.

        Name of the feedback message in a feedback thread. Format: 'project/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}/feedbackMessage/{feedback_message_id}'

        :param name: The name of this GoogleCloudDatalabelingV1beta1FeedbackMessage.
        :type name: str
        """

        self._name = name

    @property
    def operator_feedback_metadata(self):
        """Gets the operator_feedback_metadata of this GoogleCloudDatalabelingV1beta1FeedbackMessage.

        Metadata describing the feedback from the operator.

        :return: The operator_feedback_metadata of this GoogleCloudDatalabelingV1beta1FeedbackMessage.
        :rtype: object
        """
        return self._operator_feedback_metadata

    @operator_feedback_metadata.setter
    def operator_feedback_metadata(self, operator_feedback_metadata):
        """Sets the operator_feedback_metadata of this GoogleCloudDatalabelingV1beta1FeedbackMessage.

        Metadata describing the feedback from the operator.

        :param operator_feedback_metadata: The operator_feedback_metadata of this GoogleCloudDatalabelingV1beta1FeedbackMessage.
        :type operator_feedback_metadata: object
        """

        self._operator_feedback_metadata = operator_feedback_metadata

    @property
    def requester_feedback_metadata(self):
        """Gets the requester_feedback_metadata of this GoogleCloudDatalabelingV1beta1FeedbackMessage.

        Metadata describing the feedback from the labeling task requester.

        :return: The requester_feedback_metadata of this GoogleCloudDatalabelingV1beta1FeedbackMessage.
        :rtype: object
        """
        return self._requester_feedback_metadata

    @requester_feedback_metadata.setter
    def requester_feedback_metadata(self, requester_feedback_metadata):
        """Sets the requester_feedback_metadata of this GoogleCloudDatalabelingV1beta1FeedbackMessage.

        Metadata describing the feedback from the labeling task requester.

        :param requester_feedback_metadata: The requester_feedback_metadata of this GoogleCloudDatalabelingV1beta1FeedbackMessage.
        :type requester_feedback_metadata: object
        """

        self._requester_feedback_metadata = requester_feedback_metadata
