# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDatalabelingV1p1alpha1ImportDataOperationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dataset: str=None, import_count: int=None, total_count: int=None):
        """GoogleCloudDatalabelingV1p1alpha1ImportDataOperationResponse - a model defined in OpenAPI

        :param dataset: The dataset of this GoogleCloudDatalabelingV1p1alpha1ImportDataOperationResponse.
        :param import_count: The import_count of this GoogleCloudDatalabelingV1p1alpha1ImportDataOperationResponse.
        :param total_count: The total_count of this GoogleCloudDatalabelingV1p1alpha1ImportDataOperationResponse.
        """
        self.openapi_types = {
            'dataset': str,
            'import_count': int,
            'total_count': int
        }

        self.attribute_map = {
            'dataset': 'dataset',
            'import_count': 'importCount',
            'total_count': 'totalCount'
        }

        self._dataset = dataset
        self._import_count = import_count
        self._total_count = total_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatalabelingV1p1alpha1ImportDataOperationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatalabelingV1p1alpha1ImportDataOperationResponse of this GoogleCloudDatalabelingV1p1alpha1ImportDataOperationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dataset(self):
        """Gets the dataset of this GoogleCloudDatalabelingV1p1alpha1ImportDataOperationResponse.

        Ouptut only. The name of imported dataset.

        :return: The dataset of this GoogleCloudDatalabelingV1p1alpha1ImportDataOperationResponse.
        :rtype: str
        """
        return self._dataset

    @dataset.setter
    def dataset(self, dataset):
        """Sets the dataset of this GoogleCloudDatalabelingV1p1alpha1ImportDataOperationResponse.

        Ouptut only. The name of imported dataset.

        :param dataset: The dataset of this GoogleCloudDatalabelingV1p1alpha1ImportDataOperationResponse.
        :type dataset: str
        """

        self._dataset = dataset

    @property
    def import_count(self):
        """Gets the import_count of this GoogleCloudDatalabelingV1p1alpha1ImportDataOperationResponse.

        Output only. Number of examples imported successfully.

        :return: The import_count of this GoogleCloudDatalabelingV1p1alpha1ImportDataOperationResponse.
        :rtype: int
        """
        return self._import_count

    @import_count.setter
    def import_count(self, import_count):
        """Sets the import_count of this GoogleCloudDatalabelingV1p1alpha1ImportDataOperationResponse.

        Output only. Number of examples imported successfully.

        :param import_count: The import_count of this GoogleCloudDatalabelingV1p1alpha1ImportDataOperationResponse.
        :type import_count: int
        """

        self._import_count = import_count

    @property
    def total_count(self):
        """Gets the total_count of this GoogleCloudDatalabelingV1p1alpha1ImportDataOperationResponse.

        Output only. Total number of examples requested to import

        :return: The total_count of this GoogleCloudDatalabelingV1p1alpha1ImportDataOperationResponse.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count):
        """Sets the total_count of this GoogleCloudDatalabelingV1p1alpha1ImportDataOperationResponse.

        Output only. Total number of examples requested to import

        :param total_count: The total_count of this GoogleCloudDatalabelingV1p1alpha1ImportDataOperationResponse.
        :type total_count: int
        """

        self._total_count = total_count
