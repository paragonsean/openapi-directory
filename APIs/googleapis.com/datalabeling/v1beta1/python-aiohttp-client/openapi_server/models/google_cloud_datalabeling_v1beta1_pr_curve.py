# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_datalabeling_v1beta1_annotation_spec import GoogleCloudDatalabelingV1beta1AnnotationSpec
from openapi_server.models.google_cloud_datalabeling_v1beta1_confidence_metrics_entry import GoogleCloudDatalabelingV1beta1ConfidenceMetricsEntry
from openapi_server import util


class GoogleCloudDatalabelingV1beta1PrCurve(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotation_spec: GoogleCloudDatalabelingV1beta1AnnotationSpec=None, area_under_curve: float=None, confidence_metrics_entries: List[GoogleCloudDatalabelingV1beta1ConfidenceMetricsEntry]=None, mean_average_precision: float=None):
        """GoogleCloudDatalabelingV1beta1PrCurve - a model defined in OpenAPI

        :param annotation_spec: The annotation_spec of this GoogleCloudDatalabelingV1beta1PrCurve.
        :param area_under_curve: The area_under_curve of this GoogleCloudDatalabelingV1beta1PrCurve.
        :param confidence_metrics_entries: The confidence_metrics_entries of this GoogleCloudDatalabelingV1beta1PrCurve.
        :param mean_average_precision: The mean_average_precision of this GoogleCloudDatalabelingV1beta1PrCurve.
        """
        self.openapi_types = {
            'annotation_spec': GoogleCloudDatalabelingV1beta1AnnotationSpec,
            'area_under_curve': float,
            'confidence_metrics_entries': List[GoogleCloudDatalabelingV1beta1ConfidenceMetricsEntry],
            'mean_average_precision': float
        }

        self.attribute_map = {
            'annotation_spec': 'annotationSpec',
            'area_under_curve': 'areaUnderCurve',
            'confidence_metrics_entries': 'confidenceMetricsEntries',
            'mean_average_precision': 'meanAveragePrecision'
        }

        self._annotation_spec = annotation_spec
        self._area_under_curve = area_under_curve
        self._confidence_metrics_entries = confidence_metrics_entries
        self._mean_average_precision = mean_average_precision

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatalabelingV1beta1PrCurve':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatalabelingV1beta1PrCurve of this GoogleCloudDatalabelingV1beta1PrCurve.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotation_spec(self):
        """Gets the annotation_spec of this GoogleCloudDatalabelingV1beta1PrCurve.


        :return: The annotation_spec of this GoogleCloudDatalabelingV1beta1PrCurve.
        :rtype: GoogleCloudDatalabelingV1beta1AnnotationSpec
        """
        return self._annotation_spec

    @annotation_spec.setter
    def annotation_spec(self, annotation_spec):
        """Sets the annotation_spec of this GoogleCloudDatalabelingV1beta1PrCurve.


        :param annotation_spec: The annotation_spec of this GoogleCloudDatalabelingV1beta1PrCurve.
        :type annotation_spec: GoogleCloudDatalabelingV1beta1AnnotationSpec
        """

        self._annotation_spec = annotation_spec

    @property
    def area_under_curve(self):
        """Gets the area_under_curve of this GoogleCloudDatalabelingV1beta1PrCurve.

        Area under the precision-recall curve. Not to be confused with area under a receiver operating characteristic (ROC) curve.

        :return: The area_under_curve of this GoogleCloudDatalabelingV1beta1PrCurve.
        :rtype: float
        """
        return self._area_under_curve

    @area_under_curve.setter
    def area_under_curve(self, area_under_curve):
        """Sets the area_under_curve of this GoogleCloudDatalabelingV1beta1PrCurve.

        Area under the precision-recall curve. Not to be confused with area under a receiver operating characteristic (ROC) curve.

        :param area_under_curve: The area_under_curve of this GoogleCloudDatalabelingV1beta1PrCurve.
        :type area_under_curve: float
        """

        self._area_under_curve = area_under_curve

    @property
    def confidence_metrics_entries(self):
        """Gets the confidence_metrics_entries of this GoogleCloudDatalabelingV1beta1PrCurve.

        Entries that make up the precision-recall graph. Each entry is a \"point\" on the graph drawn for a different `confidence_threshold`.

        :return: The confidence_metrics_entries of this GoogleCloudDatalabelingV1beta1PrCurve.
        :rtype: List[GoogleCloudDatalabelingV1beta1ConfidenceMetricsEntry]
        """
        return self._confidence_metrics_entries

    @confidence_metrics_entries.setter
    def confidence_metrics_entries(self, confidence_metrics_entries):
        """Sets the confidence_metrics_entries of this GoogleCloudDatalabelingV1beta1PrCurve.

        Entries that make up the precision-recall graph. Each entry is a \"point\" on the graph drawn for a different `confidence_threshold`.

        :param confidence_metrics_entries: The confidence_metrics_entries of this GoogleCloudDatalabelingV1beta1PrCurve.
        :type confidence_metrics_entries: List[GoogleCloudDatalabelingV1beta1ConfidenceMetricsEntry]
        """

        self._confidence_metrics_entries = confidence_metrics_entries

    @property
    def mean_average_precision(self):
        """Gets the mean_average_precision of this GoogleCloudDatalabelingV1beta1PrCurve.

        Mean average prcision of this curve.

        :return: The mean_average_precision of this GoogleCloudDatalabelingV1beta1PrCurve.
        :rtype: float
        """
        return self._mean_average_precision

    @mean_average_precision.setter
    def mean_average_precision(self, mean_average_precision):
        """Sets the mean_average_precision of this GoogleCloudDatalabelingV1beta1PrCurve.

        Mean average prcision of this curve.

        :param mean_average_precision: The mean_average_precision of this GoogleCloudDatalabelingV1beta1PrCurve.
        :type mean_average_precision: float
        """

        self._mean_average_precision = mean_average_precision
