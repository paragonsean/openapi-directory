# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_datalabeling_v1beta1_csv_instruction import GoogleCloudDatalabelingV1beta1CsvInstruction
from openapi_server.models.google_cloud_datalabeling_v1beta1_pdf_instruction import GoogleCloudDatalabelingV1beta1PdfInstruction
from openapi_server import util


class GoogleCloudDatalabelingV1beta1Instruction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blocking_resources: List[str]=None, create_time: str=None, csv_instruction: GoogleCloudDatalabelingV1beta1CsvInstruction=None, data_type: str=None, description: str=None, display_name: str=None, name: str=None, pdf_instruction: GoogleCloudDatalabelingV1beta1PdfInstruction=None, update_time: str=None):
        """GoogleCloudDatalabelingV1beta1Instruction - a model defined in OpenAPI

        :param blocking_resources: The blocking_resources of this GoogleCloudDatalabelingV1beta1Instruction.
        :param create_time: The create_time of this GoogleCloudDatalabelingV1beta1Instruction.
        :param csv_instruction: The csv_instruction of this GoogleCloudDatalabelingV1beta1Instruction.
        :param data_type: The data_type of this GoogleCloudDatalabelingV1beta1Instruction.
        :param description: The description of this GoogleCloudDatalabelingV1beta1Instruction.
        :param display_name: The display_name of this GoogleCloudDatalabelingV1beta1Instruction.
        :param name: The name of this GoogleCloudDatalabelingV1beta1Instruction.
        :param pdf_instruction: The pdf_instruction of this GoogleCloudDatalabelingV1beta1Instruction.
        :param update_time: The update_time of this GoogleCloudDatalabelingV1beta1Instruction.
        """
        self.openapi_types = {
            'blocking_resources': List[str],
            'create_time': str,
            'csv_instruction': GoogleCloudDatalabelingV1beta1CsvInstruction,
            'data_type': str,
            'description': str,
            'display_name': str,
            'name': str,
            'pdf_instruction': GoogleCloudDatalabelingV1beta1PdfInstruction,
            'update_time': str
        }

        self.attribute_map = {
            'blocking_resources': 'blockingResources',
            'create_time': 'createTime',
            'csv_instruction': 'csvInstruction',
            'data_type': 'dataType',
            'description': 'description',
            'display_name': 'displayName',
            'name': 'name',
            'pdf_instruction': 'pdfInstruction',
            'update_time': 'updateTime'
        }

        self._blocking_resources = blocking_resources
        self._create_time = create_time
        self._csv_instruction = csv_instruction
        self._data_type = data_type
        self._description = description
        self._display_name = display_name
        self._name = name
        self._pdf_instruction = pdf_instruction
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatalabelingV1beta1Instruction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatalabelingV1beta1Instruction of this GoogleCloudDatalabelingV1beta1Instruction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blocking_resources(self):
        """Gets the blocking_resources of this GoogleCloudDatalabelingV1beta1Instruction.

        Output only. The names of any related resources that are blocking changes to the instruction.

        :return: The blocking_resources of this GoogleCloudDatalabelingV1beta1Instruction.
        :rtype: List[str]
        """
        return self._blocking_resources

    @blocking_resources.setter
    def blocking_resources(self, blocking_resources):
        """Sets the blocking_resources of this GoogleCloudDatalabelingV1beta1Instruction.

        Output only. The names of any related resources that are blocking changes to the instruction.

        :param blocking_resources: The blocking_resources of this GoogleCloudDatalabelingV1beta1Instruction.
        :type blocking_resources: List[str]
        """

        self._blocking_resources = blocking_resources

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudDatalabelingV1beta1Instruction.

        Output only. Creation time of instruction.

        :return: The create_time of this GoogleCloudDatalabelingV1beta1Instruction.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudDatalabelingV1beta1Instruction.

        Output only. Creation time of instruction.

        :param create_time: The create_time of this GoogleCloudDatalabelingV1beta1Instruction.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def csv_instruction(self):
        """Gets the csv_instruction of this GoogleCloudDatalabelingV1beta1Instruction.


        :return: The csv_instruction of this GoogleCloudDatalabelingV1beta1Instruction.
        :rtype: GoogleCloudDatalabelingV1beta1CsvInstruction
        """
        return self._csv_instruction

    @csv_instruction.setter
    def csv_instruction(self, csv_instruction):
        """Sets the csv_instruction of this GoogleCloudDatalabelingV1beta1Instruction.


        :param csv_instruction: The csv_instruction of this GoogleCloudDatalabelingV1beta1Instruction.
        :type csv_instruction: GoogleCloudDatalabelingV1beta1CsvInstruction
        """

        self._csv_instruction = csv_instruction

    @property
    def data_type(self):
        """Gets the data_type of this GoogleCloudDatalabelingV1beta1Instruction.

        Required. The data type of this instruction.

        :return: The data_type of this GoogleCloudDatalabelingV1beta1Instruction.
        :rtype: str
        """
        return self._data_type

    @data_type.setter
    def data_type(self, data_type):
        """Sets the data_type of this GoogleCloudDatalabelingV1beta1Instruction.

        Required. The data type of this instruction.

        :param data_type: The data_type of this GoogleCloudDatalabelingV1beta1Instruction.
        :type data_type: str
        """
        allowed_values = ["DATA_TYPE_UNSPECIFIED", "IMAGE", "VIDEO", "TEXT", "GENERAL_DATA"]  # noqa: E501
        if data_type not in allowed_values:
            raise ValueError(
                "Invalid value for `data_type` ({0}), must be one of {1}"
                .format(data_type, allowed_values)
            )

        self._data_type = data_type

    @property
    def description(self):
        """Gets the description of this GoogleCloudDatalabelingV1beta1Instruction.

        Optional. User-provided description of the instruction. The description can be up to 10000 characters long.

        :return: The description of this GoogleCloudDatalabelingV1beta1Instruction.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudDatalabelingV1beta1Instruction.

        Optional. User-provided description of the instruction. The description can be up to 10000 characters long.

        :param description: The description of this GoogleCloudDatalabelingV1beta1Instruction.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudDatalabelingV1beta1Instruction.

        Required. The display name of the instruction. Maximum of 64 characters.

        :return: The display_name of this GoogleCloudDatalabelingV1beta1Instruction.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudDatalabelingV1beta1Instruction.

        Required. The display name of the instruction. Maximum of 64 characters.

        :param display_name: The display_name of this GoogleCloudDatalabelingV1beta1Instruction.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def name(self):
        """Gets the name of this GoogleCloudDatalabelingV1beta1Instruction.

        Output only. Instruction resource name, format: projects/{project_id}/instructions/{instruction_id}

        :return: The name of this GoogleCloudDatalabelingV1beta1Instruction.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDatalabelingV1beta1Instruction.

        Output only. Instruction resource name, format: projects/{project_id}/instructions/{instruction_id}

        :param name: The name of this GoogleCloudDatalabelingV1beta1Instruction.
        :type name: str
        """

        self._name = name

    @property
    def pdf_instruction(self):
        """Gets the pdf_instruction of this GoogleCloudDatalabelingV1beta1Instruction.


        :return: The pdf_instruction of this GoogleCloudDatalabelingV1beta1Instruction.
        :rtype: GoogleCloudDatalabelingV1beta1PdfInstruction
        """
        return self._pdf_instruction

    @pdf_instruction.setter
    def pdf_instruction(self, pdf_instruction):
        """Sets the pdf_instruction of this GoogleCloudDatalabelingV1beta1Instruction.


        :param pdf_instruction: The pdf_instruction of this GoogleCloudDatalabelingV1beta1Instruction.
        :type pdf_instruction: GoogleCloudDatalabelingV1beta1PdfInstruction
        """

        self._pdf_instruction = pdf_instruction

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudDatalabelingV1beta1Instruction.

        Output only. Last update time of instruction.

        :return: The update_time of this GoogleCloudDatalabelingV1beta1Instruction.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudDatalabelingV1beta1Instruction.

        Output only. Last update time of instruction.

        :param update_time: The update_time of this GoogleCloudDatalabelingV1beta1Instruction.
        :type update_time: str
        """

        self._update_time = update_time
