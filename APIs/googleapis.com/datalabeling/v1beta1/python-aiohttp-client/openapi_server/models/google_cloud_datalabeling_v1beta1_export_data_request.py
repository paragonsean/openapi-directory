# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_datalabeling_v1beta1_output_config import GoogleCloudDatalabelingV1beta1OutputConfig
from openapi_server import util


class GoogleCloudDatalabelingV1beta1ExportDataRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotated_dataset: str=None, filter: str=None, output_config: GoogleCloudDatalabelingV1beta1OutputConfig=None, user_email_address: str=None):
        """GoogleCloudDatalabelingV1beta1ExportDataRequest - a model defined in OpenAPI

        :param annotated_dataset: The annotated_dataset of this GoogleCloudDatalabelingV1beta1ExportDataRequest.
        :param filter: The filter of this GoogleCloudDatalabelingV1beta1ExportDataRequest.
        :param output_config: The output_config of this GoogleCloudDatalabelingV1beta1ExportDataRequest.
        :param user_email_address: The user_email_address of this GoogleCloudDatalabelingV1beta1ExportDataRequest.
        """
        self.openapi_types = {
            'annotated_dataset': str,
            'filter': str,
            'output_config': GoogleCloudDatalabelingV1beta1OutputConfig,
            'user_email_address': str
        }

        self.attribute_map = {
            'annotated_dataset': 'annotatedDataset',
            'filter': 'filter',
            'output_config': 'outputConfig',
            'user_email_address': 'userEmailAddress'
        }

        self._annotated_dataset = annotated_dataset
        self._filter = filter
        self._output_config = output_config
        self._user_email_address = user_email_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatalabelingV1beta1ExportDataRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatalabelingV1beta1ExportDataRequest of this GoogleCloudDatalabelingV1beta1ExportDataRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotated_dataset(self):
        """Gets the annotated_dataset of this GoogleCloudDatalabelingV1beta1ExportDataRequest.

        Required. Annotated dataset resource name. DataItem in Dataset and their annotations in specified annotated dataset will be exported. It's in format of projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/ {annotated_dataset_id}

        :return: The annotated_dataset of this GoogleCloudDatalabelingV1beta1ExportDataRequest.
        :rtype: str
        """
        return self._annotated_dataset

    @annotated_dataset.setter
    def annotated_dataset(self, annotated_dataset):
        """Sets the annotated_dataset of this GoogleCloudDatalabelingV1beta1ExportDataRequest.

        Required. Annotated dataset resource name. DataItem in Dataset and their annotations in specified annotated dataset will be exported. It's in format of projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/ {annotated_dataset_id}

        :param annotated_dataset: The annotated_dataset of this GoogleCloudDatalabelingV1beta1ExportDataRequest.
        :type annotated_dataset: str
        """

        self._annotated_dataset = annotated_dataset

    @property
    def filter(self):
        """Gets the filter of this GoogleCloudDatalabelingV1beta1ExportDataRequest.

        Optional. Filter is not supported at this moment.

        :return: The filter of this GoogleCloudDatalabelingV1beta1ExportDataRequest.
        :rtype: str
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this GoogleCloudDatalabelingV1beta1ExportDataRequest.

        Optional. Filter is not supported at this moment.

        :param filter: The filter of this GoogleCloudDatalabelingV1beta1ExportDataRequest.
        :type filter: str
        """

        self._filter = filter

    @property
    def output_config(self):
        """Gets the output_config of this GoogleCloudDatalabelingV1beta1ExportDataRequest.


        :return: The output_config of this GoogleCloudDatalabelingV1beta1ExportDataRequest.
        :rtype: GoogleCloudDatalabelingV1beta1OutputConfig
        """
        return self._output_config

    @output_config.setter
    def output_config(self, output_config):
        """Sets the output_config of this GoogleCloudDatalabelingV1beta1ExportDataRequest.


        :param output_config: The output_config of this GoogleCloudDatalabelingV1beta1ExportDataRequest.
        :type output_config: GoogleCloudDatalabelingV1beta1OutputConfig
        """

        self._output_config = output_config

    @property
    def user_email_address(self):
        """Gets the user_email_address of this GoogleCloudDatalabelingV1beta1ExportDataRequest.

        Email of the user who started the export task and should be notified by email. If empty no notification will be sent.

        :return: The user_email_address of this GoogleCloudDatalabelingV1beta1ExportDataRequest.
        :rtype: str
        """
        return self._user_email_address

    @user_email_address.setter
    def user_email_address(self, user_email_address):
        """Sets the user_email_address of this GoogleCloudDatalabelingV1beta1ExportDataRequest.

        Email of the user who started the export task and should be notified by email. If empty no notification will be sent.

        :param user_email_address: The user_email_address of this GoogleCloudDatalabelingV1beta1ExportDataRequest.
        :type user_email_address: str
        """

        self._user_email_address = user_email_address
