# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_datalabeling_v1beta1_video_thumbnail import GoogleCloudDatalabelingV1beta1VideoThumbnail
from openapi_server import util


class GoogleCloudDatalabelingV1beta1VideoPayload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, frame_rate: float=None, mime_type: str=None, signed_uri: str=None, video_thumbnails: List[GoogleCloudDatalabelingV1beta1VideoThumbnail]=None, video_uri: str=None):
        """GoogleCloudDatalabelingV1beta1VideoPayload - a model defined in OpenAPI

        :param frame_rate: The frame_rate of this GoogleCloudDatalabelingV1beta1VideoPayload.
        :param mime_type: The mime_type of this GoogleCloudDatalabelingV1beta1VideoPayload.
        :param signed_uri: The signed_uri of this GoogleCloudDatalabelingV1beta1VideoPayload.
        :param video_thumbnails: The video_thumbnails of this GoogleCloudDatalabelingV1beta1VideoPayload.
        :param video_uri: The video_uri of this GoogleCloudDatalabelingV1beta1VideoPayload.
        """
        self.openapi_types = {
            'frame_rate': float,
            'mime_type': str,
            'signed_uri': str,
            'video_thumbnails': List[GoogleCloudDatalabelingV1beta1VideoThumbnail],
            'video_uri': str
        }

        self.attribute_map = {
            'frame_rate': 'frameRate',
            'mime_type': 'mimeType',
            'signed_uri': 'signedUri',
            'video_thumbnails': 'videoThumbnails',
            'video_uri': 'videoUri'
        }

        self._frame_rate = frame_rate
        self._mime_type = mime_type
        self._signed_uri = signed_uri
        self._video_thumbnails = video_thumbnails
        self._video_uri = video_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatalabelingV1beta1VideoPayload':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatalabelingV1beta1VideoPayload of this GoogleCloudDatalabelingV1beta1VideoPayload.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def frame_rate(self):
        """Gets the frame_rate of this GoogleCloudDatalabelingV1beta1VideoPayload.

        FPS of the video.

        :return: The frame_rate of this GoogleCloudDatalabelingV1beta1VideoPayload.
        :rtype: float
        """
        return self._frame_rate

    @frame_rate.setter
    def frame_rate(self, frame_rate):
        """Sets the frame_rate of this GoogleCloudDatalabelingV1beta1VideoPayload.

        FPS of the video.

        :param frame_rate: The frame_rate of this GoogleCloudDatalabelingV1beta1VideoPayload.
        :type frame_rate: float
        """

        self._frame_rate = frame_rate

    @property
    def mime_type(self):
        """Gets the mime_type of this GoogleCloudDatalabelingV1beta1VideoPayload.

        Video format.

        :return: The mime_type of this GoogleCloudDatalabelingV1beta1VideoPayload.
        :rtype: str
        """
        return self._mime_type

    @mime_type.setter
    def mime_type(self, mime_type):
        """Sets the mime_type of this GoogleCloudDatalabelingV1beta1VideoPayload.

        Video format.

        :param mime_type: The mime_type of this GoogleCloudDatalabelingV1beta1VideoPayload.
        :type mime_type: str
        """

        self._mime_type = mime_type

    @property
    def signed_uri(self):
        """Gets the signed_uri of this GoogleCloudDatalabelingV1beta1VideoPayload.

        Signed uri of the video file in the service bucket.

        :return: The signed_uri of this GoogleCloudDatalabelingV1beta1VideoPayload.
        :rtype: str
        """
        return self._signed_uri

    @signed_uri.setter
    def signed_uri(self, signed_uri):
        """Sets the signed_uri of this GoogleCloudDatalabelingV1beta1VideoPayload.

        Signed uri of the video file in the service bucket.

        :param signed_uri: The signed_uri of this GoogleCloudDatalabelingV1beta1VideoPayload.
        :type signed_uri: str
        """

        self._signed_uri = signed_uri

    @property
    def video_thumbnails(self):
        """Gets the video_thumbnails of this GoogleCloudDatalabelingV1beta1VideoPayload.

        The list of video thumbnails.

        :return: The video_thumbnails of this GoogleCloudDatalabelingV1beta1VideoPayload.
        :rtype: List[GoogleCloudDatalabelingV1beta1VideoThumbnail]
        """
        return self._video_thumbnails

    @video_thumbnails.setter
    def video_thumbnails(self, video_thumbnails):
        """Sets the video_thumbnails of this GoogleCloudDatalabelingV1beta1VideoPayload.

        The list of video thumbnails.

        :param video_thumbnails: The video_thumbnails of this GoogleCloudDatalabelingV1beta1VideoPayload.
        :type video_thumbnails: List[GoogleCloudDatalabelingV1beta1VideoThumbnail]
        """

        self._video_thumbnails = video_thumbnails

    @property
    def video_uri(self):
        """Gets the video_uri of this GoogleCloudDatalabelingV1beta1VideoPayload.

        Video uri from the user bucket.

        :return: The video_uri of this GoogleCloudDatalabelingV1beta1VideoPayload.
        :rtype: str
        """
        return self._video_uri

    @video_uri.setter
    def video_uri(self, video_uri):
        """Sets the video_uri of this GoogleCloudDatalabelingV1beta1VideoPayload.

        Video uri from the user bucket.

        :param video_uri: The video_uri of this GoogleCloudDatalabelingV1beta1VideoPayload.
        :type video_uri: str
        """

        self._video_uri = video_uri
