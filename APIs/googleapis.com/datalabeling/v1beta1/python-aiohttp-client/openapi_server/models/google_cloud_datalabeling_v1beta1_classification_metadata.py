# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDatalabelingV1beta1ClassificationMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_multi_label: bool=None):
        """GoogleCloudDatalabelingV1beta1ClassificationMetadata - a model defined in OpenAPI

        :param is_multi_label: The is_multi_label of this GoogleCloudDatalabelingV1beta1ClassificationMetadata.
        """
        self.openapi_types = {
            'is_multi_label': bool
        }

        self.attribute_map = {
            'is_multi_label': 'isMultiLabel'
        }

        self._is_multi_label = is_multi_label

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatalabelingV1beta1ClassificationMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatalabelingV1beta1ClassificationMetadata of this GoogleCloudDatalabelingV1beta1ClassificationMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_multi_label(self):
        """Gets the is_multi_label of this GoogleCloudDatalabelingV1beta1ClassificationMetadata.

        Whether the classification task is multi-label or not.

        :return: The is_multi_label of this GoogleCloudDatalabelingV1beta1ClassificationMetadata.
        :rtype: bool
        """
        return self._is_multi_label

    @is_multi_label.setter
    def is_multi_label(self, is_multi_label):
        """Sets the is_multi_label of this GoogleCloudDatalabelingV1beta1ClassificationMetadata.

        Whether the classification task is multi-label or not.

        :param is_multi_label: The is_multi_label of this GoogleCloudDatalabelingV1beta1ClassificationMetadata.
        :type is_multi_label: bool
        """

        self._is_multi_label = is_multi_label
