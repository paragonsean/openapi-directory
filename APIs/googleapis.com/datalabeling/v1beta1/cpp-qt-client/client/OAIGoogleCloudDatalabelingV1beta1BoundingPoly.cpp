/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatalabelingV1beta1BoundingPoly.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatalabelingV1beta1BoundingPoly::OAIGoogleCloudDatalabelingV1beta1BoundingPoly(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatalabelingV1beta1BoundingPoly::OAIGoogleCloudDatalabelingV1beta1BoundingPoly() {
    this->initializeModel();
}

OAIGoogleCloudDatalabelingV1beta1BoundingPoly::~OAIGoogleCloudDatalabelingV1beta1BoundingPoly() {}

void OAIGoogleCloudDatalabelingV1beta1BoundingPoly::initializeModel() {

    m_vertices_isSet = false;
    m_vertices_isValid = false;
}

void OAIGoogleCloudDatalabelingV1beta1BoundingPoly::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatalabelingV1beta1BoundingPoly::fromJsonObject(QJsonObject json) {

    m_vertices_isValid = ::OpenAPI::fromJsonValue(m_vertices, json[QString("vertices")]);
    m_vertices_isSet = !json[QString("vertices")].isNull() && m_vertices_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1BoundingPoly::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatalabelingV1beta1BoundingPoly::asJsonObject() const {
    QJsonObject obj;
    if (m_vertices.size() > 0) {
        obj.insert(QString("vertices"), ::OpenAPI::toJsonValue(m_vertices));
    }
    return obj;
}

QList<OAIGoogleCloudDatalabelingV1beta1Vertex> OAIGoogleCloudDatalabelingV1beta1BoundingPoly::getVertices() const {
    return m_vertices;
}
void OAIGoogleCloudDatalabelingV1beta1BoundingPoly::setVertices(const QList<OAIGoogleCloudDatalabelingV1beta1Vertex> &vertices) {
    m_vertices = vertices;
    m_vertices_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1BoundingPoly::is_vertices_Set() const{
    return m_vertices_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1BoundingPoly::is_vertices_Valid() const{
    return m_vertices_isValid;
}

bool OAIGoogleCloudDatalabelingV1beta1BoundingPoly::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_vertices.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatalabelingV1beta1BoundingPoly::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
