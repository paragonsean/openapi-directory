/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatalabelingV1beta1EvaluationJob.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatalabelingV1beta1EvaluationJob::OAIGoogleCloudDatalabelingV1beta1EvaluationJob(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatalabelingV1beta1EvaluationJob::OAIGoogleCloudDatalabelingV1beta1EvaluationJob() {
    this->initializeModel();
}

OAIGoogleCloudDatalabelingV1beta1EvaluationJob::~OAIGoogleCloudDatalabelingV1beta1EvaluationJob() {}

void OAIGoogleCloudDatalabelingV1beta1EvaluationJob::initializeModel() {

    m_annotation_spec_set_isSet = false;
    m_annotation_spec_set_isValid = false;

    m_attempts_isSet = false;
    m_attempts_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_evaluation_job_config_isSet = false;
    m_evaluation_job_config_isValid = false;

    m_label_missing_ground_truth_isSet = false;
    m_label_missing_ground_truth_isValid = false;

    m_model_version_isSet = false;
    m_model_version_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_schedule_isSet = false;
    m_schedule_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIGoogleCloudDatalabelingV1beta1EvaluationJob::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatalabelingV1beta1EvaluationJob::fromJsonObject(QJsonObject json) {

    m_annotation_spec_set_isValid = ::OpenAPI::fromJsonValue(m_annotation_spec_set, json[QString("annotationSpecSet")]);
    m_annotation_spec_set_isSet = !json[QString("annotationSpecSet")].isNull() && m_annotation_spec_set_isValid;

    m_attempts_isValid = ::OpenAPI::fromJsonValue(m_attempts, json[QString("attempts")]);
    m_attempts_isSet = !json[QString("attempts")].isNull() && m_attempts_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_evaluation_job_config_isValid = ::OpenAPI::fromJsonValue(m_evaluation_job_config, json[QString("evaluationJobConfig")]);
    m_evaluation_job_config_isSet = !json[QString("evaluationJobConfig")].isNull() && m_evaluation_job_config_isValid;

    m_label_missing_ground_truth_isValid = ::OpenAPI::fromJsonValue(m_label_missing_ground_truth, json[QString("labelMissingGroundTruth")]);
    m_label_missing_ground_truth_isSet = !json[QString("labelMissingGroundTruth")].isNull() && m_label_missing_ground_truth_isValid;

    m_model_version_isValid = ::OpenAPI::fromJsonValue(m_model_version, json[QString("modelVersion")]);
    m_model_version_isSet = !json[QString("modelVersion")].isNull() && m_model_version_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_schedule_isValid = ::OpenAPI::fromJsonValue(m_schedule, json[QString("schedule")]);
    m_schedule_isSet = !json[QString("schedule")].isNull() && m_schedule_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1EvaluationJob::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatalabelingV1beta1EvaluationJob::asJsonObject() const {
    QJsonObject obj;
    if (m_annotation_spec_set_isSet) {
        obj.insert(QString("annotationSpecSet"), ::OpenAPI::toJsonValue(m_annotation_spec_set));
    }
    if (m_attempts.size() > 0) {
        obj.insert(QString("attempts"), ::OpenAPI::toJsonValue(m_attempts));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_evaluation_job_config.isSet()) {
        obj.insert(QString("evaluationJobConfig"), ::OpenAPI::toJsonValue(m_evaluation_job_config));
    }
    if (m_label_missing_ground_truth_isSet) {
        obj.insert(QString("labelMissingGroundTruth"), ::OpenAPI::toJsonValue(m_label_missing_ground_truth));
    }
    if (m_model_version_isSet) {
        obj.insert(QString("modelVersion"), ::OpenAPI::toJsonValue(m_model_version));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_schedule_isSet) {
        obj.insert(QString("schedule"), ::OpenAPI::toJsonValue(m_schedule));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QString OAIGoogleCloudDatalabelingV1beta1EvaluationJob::getAnnotationSpecSet() const {
    return m_annotation_spec_set;
}
void OAIGoogleCloudDatalabelingV1beta1EvaluationJob::setAnnotationSpecSet(const QString &annotation_spec_set) {
    m_annotation_spec_set = annotation_spec_set;
    m_annotation_spec_set_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1EvaluationJob::is_annotation_spec_set_Set() const{
    return m_annotation_spec_set_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1EvaluationJob::is_annotation_spec_set_Valid() const{
    return m_annotation_spec_set_isValid;
}

QList<OAIGoogleCloudDatalabelingV1beta1Attempt> OAIGoogleCloudDatalabelingV1beta1EvaluationJob::getAttempts() const {
    return m_attempts;
}
void OAIGoogleCloudDatalabelingV1beta1EvaluationJob::setAttempts(const QList<OAIGoogleCloudDatalabelingV1beta1Attempt> &attempts) {
    m_attempts = attempts;
    m_attempts_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1EvaluationJob::is_attempts_Set() const{
    return m_attempts_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1EvaluationJob::is_attempts_Valid() const{
    return m_attempts_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1EvaluationJob::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDatalabelingV1beta1EvaluationJob::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1EvaluationJob::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1EvaluationJob::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1EvaluationJob::getDescription() const {
    return m_description;
}
void OAIGoogleCloudDatalabelingV1beta1EvaluationJob::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1EvaluationJob::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1EvaluationJob::is_description_Valid() const{
    return m_description_isValid;
}

OAIGoogleCloudDatalabelingV1beta1EvaluationJobConfig OAIGoogleCloudDatalabelingV1beta1EvaluationJob::getEvaluationJobConfig() const {
    return m_evaluation_job_config;
}
void OAIGoogleCloudDatalabelingV1beta1EvaluationJob::setEvaluationJobConfig(const OAIGoogleCloudDatalabelingV1beta1EvaluationJobConfig &evaluation_job_config) {
    m_evaluation_job_config = evaluation_job_config;
    m_evaluation_job_config_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1EvaluationJob::is_evaluation_job_config_Set() const{
    return m_evaluation_job_config_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1EvaluationJob::is_evaluation_job_config_Valid() const{
    return m_evaluation_job_config_isValid;
}

bool OAIGoogleCloudDatalabelingV1beta1EvaluationJob::isLabelMissingGroundTruth() const {
    return m_label_missing_ground_truth;
}
void OAIGoogleCloudDatalabelingV1beta1EvaluationJob::setLabelMissingGroundTruth(const bool &label_missing_ground_truth) {
    m_label_missing_ground_truth = label_missing_ground_truth;
    m_label_missing_ground_truth_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1EvaluationJob::is_label_missing_ground_truth_Set() const{
    return m_label_missing_ground_truth_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1EvaluationJob::is_label_missing_ground_truth_Valid() const{
    return m_label_missing_ground_truth_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1EvaluationJob::getModelVersion() const {
    return m_model_version;
}
void OAIGoogleCloudDatalabelingV1beta1EvaluationJob::setModelVersion(const QString &model_version) {
    m_model_version = model_version;
    m_model_version_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1EvaluationJob::is_model_version_Set() const{
    return m_model_version_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1EvaluationJob::is_model_version_Valid() const{
    return m_model_version_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1EvaluationJob::getName() const {
    return m_name;
}
void OAIGoogleCloudDatalabelingV1beta1EvaluationJob::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1EvaluationJob::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1EvaluationJob::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1EvaluationJob::getSchedule() const {
    return m_schedule;
}
void OAIGoogleCloudDatalabelingV1beta1EvaluationJob::setSchedule(const QString &schedule) {
    m_schedule = schedule;
    m_schedule_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1EvaluationJob::is_schedule_Set() const{
    return m_schedule_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1EvaluationJob::is_schedule_Valid() const{
    return m_schedule_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1EvaluationJob::getState() const {
    return m_state;
}
void OAIGoogleCloudDatalabelingV1beta1EvaluationJob::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1EvaluationJob::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1EvaluationJob::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIGoogleCloudDatalabelingV1beta1EvaluationJob::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_annotation_spec_set_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attempts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_evaluation_job_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_missing_ground_truth_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_schedule_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatalabelingV1beta1EvaluationJob::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
