/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatalabelingV1beta1ExampleComparison.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatalabelingV1beta1ExampleComparison::OAIGoogleCloudDatalabelingV1beta1ExampleComparison(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatalabelingV1beta1ExampleComparison::OAIGoogleCloudDatalabelingV1beta1ExampleComparison() {
    this->initializeModel();
}

OAIGoogleCloudDatalabelingV1beta1ExampleComparison::~OAIGoogleCloudDatalabelingV1beta1ExampleComparison() {}

void OAIGoogleCloudDatalabelingV1beta1ExampleComparison::initializeModel() {

    m_ground_truth_example_isSet = false;
    m_ground_truth_example_isValid = false;

    m_model_created_examples_isSet = false;
    m_model_created_examples_isValid = false;
}

void OAIGoogleCloudDatalabelingV1beta1ExampleComparison::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatalabelingV1beta1ExampleComparison::fromJsonObject(QJsonObject json) {

    m_ground_truth_example_isValid = ::OpenAPI::fromJsonValue(m_ground_truth_example, json[QString("groundTruthExample")]);
    m_ground_truth_example_isSet = !json[QString("groundTruthExample")].isNull() && m_ground_truth_example_isValid;

    m_model_created_examples_isValid = ::OpenAPI::fromJsonValue(m_model_created_examples, json[QString("modelCreatedExamples")]);
    m_model_created_examples_isSet = !json[QString("modelCreatedExamples")].isNull() && m_model_created_examples_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1ExampleComparison::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatalabelingV1beta1ExampleComparison::asJsonObject() const {
    QJsonObject obj;
    if (m_ground_truth_example.isSet()) {
        obj.insert(QString("groundTruthExample"), ::OpenAPI::toJsonValue(m_ground_truth_example));
    }
    if (m_model_created_examples.size() > 0) {
        obj.insert(QString("modelCreatedExamples"), ::OpenAPI::toJsonValue(m_model_created_examples));
    }
    return obj;
}

OAIGoogleCloudDatalabelingV1beta1Example OAIGoogleCloudDatalabelingV1beta1ExampleComparison::getGroundTruthExample() const {
    return m_ground_truth_example;
}
void OAIGoogleCloudDatalabelingV1beta1ExampleComparison::setGroundTruthExample(const OAIGoogleCloudDatalabelingV1beta1Example &ground_truth_example) {
    m_ground_truth_example = ground_truth_example;
    m_ground_truth_example_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1ExampleComparison::is_ground_truth_example_Set() const{
    return m_ground_truth_example_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1ExampleComparison::is_ground_truth_example_Valid() const{
    return m_ground_truth_example_isValid;
}

QList<OAIGoogleCloudDatalabelingV1beta1Example> OAIGoogleCloudDatalabelingV1beta1ExampleComparison::getModelCreatedExamples() const {
    return m_model_created_examples;
}
void OAIGoogleCloudDatalabelingV1beta1ExampleComparison::setModelCreatedExamples(const QList<OAIGoogleCloudDatalabelingV1beta1Example> &model_created_examples) {
    m_model_created_examples = model_created_examples;
    m_model_created_examples_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1ExampleComparison::is_model_created_examples_Set() const{
    return m_model_created_examples_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1ExampleComparison::is_model_created_examples_Valid() const{
    return m_model_created_examples_isValid;
}

bool OAIGoogleCloudDatalabelingV1beta1ExampleComparison::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ground_truth_example.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_created_examples.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatalabelingV1beta1ExampleComparison::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
