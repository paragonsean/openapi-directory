/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatalabelingV1beta1Annotation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatalabelingV1beta1Annotation::OAIGoogleCloudDatalabelingV1beta1Annotation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatalabelingV1beta1Annotation::OAIGoogleCloudDatalabelingV1beta1Annotation() {
    this->initializeModel();
}

OAIGoogleCloudDatalabelingV1beta1Annotation::~OAIGoogleCloudDatalabelingV1beta1Annotation() {}

void OAIGoogleCloudDatalabelingV1beta1Annotation::initializeModel() {

    m_annotation_metadata_isSet = false;
    m_annotation_metadata_isValid = false;

    m_annotation_sentiment_isSet = false;
    m_annotation_sentiment_isValid = false;

    m_annotation_source_isSet = false;
    m_annotation_source_isValid = false;

    m_annotation_value_isSet = false;
    m_annotation_value_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIGoogleCloudDatalabelingV1beta1Annotation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatalabelingV1beta1Annotation::fromJsonObject(QJsonObject json) {

    m_annotation_metadata_isValid = ::OpenAPI::fromJsonValue(m_annotation_metadata, json[QString("annotationMetadata")]);
    m_annotation_metadata_isSet = !json[QString("annotationMetadata")].isNull() && m_annotation_metadata_isValid;

    m_annotation_sentiment_isValid = ::OpenAPI::fromJsonValue(m_annotation_sentiment, json[QString("annotationSentiment")]);
    m_annotation_sentiment_isSet = !json[QString("annotationSentiment")].isNull() && m_annotation_sentiment_isValid;

    m_annotation_source_isValid = ::OpenAPI::fromJsonValue(m_annotation_source, json[QString("annotationSource")]);
    m_annotation_source_isSet = !json[QString("annotationSource")].isNull() && m_annotation_source_isValid;

    m_annotation_value_isValid = ::OpenAPI::fromJsonValue(m_annotation_value, json[QString("annotationValue")]);
    m_annotation_value_isSet = !json[QString("annotationValue")].isNull() && m_annotation_value_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1Annotation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatalabelingV1beta1Annotation::asJsonObject() const {
    QJsonObject obj;
    if (m_annotation_metadata.isSet()) {
        obj.insert(QString("annotationMetadata"), ::OpenAPI::toJsonValue(m_annotation_metadata));
    }
    if (m_annotation_sentiment_isSet) {
        obj.insert(QString("annotationSentiment"), ::OpenAPI::toJsonValue(m_annotation_sentiment));
    }
    if (m_annotation_source_isSet) {
        obj.insert(QString("annotationSource"), ::OpenAPI::toJsonValue(m_annotation_source));
    }
    if (m_annotation_value.isSet()) {
        obj.insert(QString("annotationValue"), ::OpenAPI::toJsonValue(m_annotation_value));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

OAIGoogleCloudDatalabelingV1beta1AnnotationMetadata OAIGoogleCloudDatalabelingV1beta1Annotation::getAnnotationMetadata() const {
    return m_annotation_metadata;
}
void OAIGoogleCloudDatalabelingV1beta1Annotation::setAnnotationMetadata(const OAIGoogleCloudDatalabelingV1beta1AnnotationMetadata &annotation_metadata) {
    m_annotation_metadata = annotation_metadata;
    m_annotation_metadata_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Annotation::is_annotation_metadata_Set() const{
    return m_annotation_metadata_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Annotation::is_annotation_metadata_Valid() const{
    return m_annotation_metadata_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1Annotation::getAnnotationSentiment() const {
    return m_annotation_sentiment;
}
void OAIGoogleCloudDatalabelingV1beta1Annotation::setAnnotationSentiment(const QString &annotation_sentiment) {
    m_annotation_sentiment = annotation_sentiment;
    m_annotation_sentiment_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Annotation::is_annotation_sentiment_Set() const{
    return m_annotation_sentiment_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Annotation::is_annotation_sentiment_Valid() const{
    return m_annotation_sentiment_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1Annotation::getAnnotationSource() const {
    return m_annotation_source;
}
void OAIGoogleCloudDatalabelingV1beta1Annotation::setAnnotationSource(const QString &annotation_source) {
    m_annotation_source = annotation_source;
    m_annotation_source_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Annotation::is_annotation_source_Set() const{
    return m_annotation_source_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Annotation::is_annotation_source_Valid() const{
    return m_annotation_source_isValid;
}

OAIGoogleCloudDatalabelingV1beta1AnnotationValue OAIGoogleCloudDatalabelingV1beta1Annotation::getAnnotationValue() const {
    return m_annotation_value;
}
void OAIGoogleCloudDatalabelingV1beta1Annotation::setAnnotationValue(const OAIGoogleCloudDatalabelingV1beta1AnnotationValue &annotation_value) {
    m_annotation_value = annotation_value;
    m_annotation_value_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Annotation::is_annotation_value_Set() const{
    return m_annotation_value_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Annotation::is_annotation_value_Valid() const{
    return m_annotation_value_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1Annotation::getName() const {
    return m_name;
}
void OAIGoogleCloudDatalabelingV1beta1Annotation::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Annotation::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Annotation::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGoogleCloudDatalabelingV1beta1Annotation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_annotation_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_annotation_sentiment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_annotation_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_annotation_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatalabelingV1beta1Annotation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
