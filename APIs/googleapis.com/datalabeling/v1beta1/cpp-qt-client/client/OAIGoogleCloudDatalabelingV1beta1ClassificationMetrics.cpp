/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatalabelingV1beta1ClassificationMetrics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatalabelingV1beta1ClassificationMetrics::OAIGoogleCloudDatalabelingV1beta1ClassificationMetrics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatalabelingV1beta1ClassificationMetrics::OAIGoogleCloudDatalabelingV1beta1ClassificationMetrics() {
    this->initializeModel();
}

OAIGoogleCloudDatalabelingV1beta1ClassificationMetrics::~OAIGoogleCloudDatalabelingV1beta1ClassificationMetrics() {}

void OAIGoogleCloudDatalabelingV1beta1ClassificationMetrics::initializeModel() {

    m_confusion_matrix_isSet = false;
    m_confusion_matrix_isValid = false;

    m_pr_curve_isSet = false;
    m_pr_curve_isValid = false;
}

void OAIGoogleCloudDatalabelingV1beta1ClassificationMetrics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatalabelingV1beta1ClassificationMetrics::fromJsonObject(QJsonObject json) {

    m_confusion_matrix_isValid = ::OpenAPI::fromJsonValue(m_confusion_matrix, json[QString("confusionMatrix")]);
    m_confusion_matrix_isSet = !json[QString("confusionMatrix")].isNull() && m_confusion_matrix_isValid;

    m_pr_curve_isValid = ::OpenAPI::fromJsonValue(m_pr_curve, json[QString("prCurve")]);
    m_pr_curve_isSet = !json[QString("prCurve")].isNull() && m_pr_curve_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1ClassificationMetrics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatalabelingV1beta1ClassificationMetrics::asJsonObject() const {
    QJsonObject obj;
    if (m_confusion_matrix.isSet()) {
        obj.insert(QString("confusionMatrix"), ::OpenAPI::toJsonValue(m_confusion_matrix));
    }
    if (m_pr_curve.isSet()) {
        obj.insert(QString("prCurve"), ::OpenAPI::toJsonValue(m_pr_curve));
    }
    return obj;
}

OAIGoogleCloudDatalabelingV1beta1ConfusionMatrix OAIGoogleCloudDatalabelingV1beta1ClassificationMetrics::getConfusionMatrix() const {
    return m_confusion_matrix;
}
void OAIGoogleCloudDatalabelingV1beta1ClassificationMetrics::setConfusionMatrix(const OAIGoogleCloudDatalabelingV1beta1ConfusionMatrix &confusion_matrix) {
    m_confusion_matrix = confusion_matrix;
    m_confusion_matrix_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1ClassificationMetrics::is_confusion_matrix_Set() const{
    return m_confusion_matrix_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1ClassificationMetrics::is_confusion_matrix_Valid() const{
    return m_confusion_matrix_isValid;
}

OAIGoogleCloudDatalabelingV1beta1PrCurve OAIGoogleCloudDatalabelingV1beta1ClassificationMetrics::getPrCurve() const {
    return m_pr_curve;
}
void OAIGoogleCloudDatalabelingV1beta1ClassificationMetrics::setPrCurve(const OAIGoogleCloudDatalabelingV1beta1PrCurve &pr_curve) {
    m_pr_curve = pr_curve;
    m_pr_curve_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1ClassificationMetrics::is_pr_curve_Set() const{
    return m_pr_curve_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1ClassificationMetrics::is_pr_curve_Valid() const{
    return m_pr_curve_isValid;
}

bool OAIGoogleCloudDatalabelingV1beta1ClassificationMetrics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_confusion_matrix.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pr_curve.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatalabelingV1beta1ClassificationMetrics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
