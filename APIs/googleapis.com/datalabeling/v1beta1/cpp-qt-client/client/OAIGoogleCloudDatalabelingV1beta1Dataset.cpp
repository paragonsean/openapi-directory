/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatalabelingV1beta1Dataset.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatalabelingV1beta1Dataset::OAIGoogleCloudDatalabelingV1beta1Dataset(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatalabelingV1beta1Dataset::OAIGoogleCloudDatalabelingV1beta1Dataset() {
    this->initializeModel();
}

OAIGoogleCloudDatalabelingV1beta1Dataset::~OAIGoogleCloudDatalabelingV1beta1Dataset() {}

void OAIGoogleCloudDatalabelingV1beta1Dataset::initializeModel() {

    m_blocking_resources_isSet = false;
    m_blocking_resources_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_data_item_count_isSet = false;
    m_data_item_count_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_input_configs_isSet = false;
    m_input_configs_isValid = false;

    m_last_migrate_time_isSet = false;
    m_last_migrate_time_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIGoogleCloudDatalabelingV1beta1Dataset::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatalabelingV1beta1Dataset::fromJsonObject(QJsonObject json) {

    m_blocking_resources_isValid = ::OpenAPI::fromJsonValue(m_blocking_resources, json[QString("blockingResources")]);
    m_blocking_resources_isSet = !json[QString("blockingResources")].isNull() && m_blocking_resources_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_data_item_count_isValid = ::OpenAPI::fromJsonValue(m_data_item_count, json[QString("dataItemCount")]);
    m_data_item_count_isSet = !json[QString("dataItemCount")].isNull() && m_data_item_count_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_input_configs_isValid = ::OpenAPI::fromJsonValue(m_input_configs, json[QString("inputConfigs")]);
    m_input_configs_isSet = !json[QString("inputConfigs")].isNull() && m_input_configs_isValid;

    m_last_migrate_time_isValid = ::OpenAPI::fromJsonValue(m_last_migrate_time, json[QString("lastMigrateTime")]);
    m_last_migrate_time_isSet = !json[QString("lastMigrateTime")].isNull() && m_last_migrate_time_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1Dataset::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatalabelingV1beta1Dataset::asJsonObject() const {
    QJsonObject obj;
    if (m_blocking_resources.size() > 0) {
        obj.insert(QString("blockingResources"), ::OpenAPI::toJsonValue(m_blocking_resources));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_data_item_count_isSet) {
        obj.insert(QString("dataItemCount"), ::OpenAPI::toJsonValue(m_data_item_count));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_input_configs.size() > 0) {
        obj.insert(QString("inputConfigs"), ::OpenAPI::toJsonValue(m_input_configs));
    }
    if (m_last_migrate_time_isSet) {
        obj.insert(QString("lastMigrateTime"), ::OpenAPI::toJsonValue(m_last_migrate_time));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QList<QString> OAIGoogleCloudDatalabelingV1beta1Dataset::getBlockingResources() const {
    return m_blocking_resources;
}
void OAIGoogleCloudDatalabelingV1beta1Dataset::setBlockingResources(const QList<QString> &blocking_resources) {
    m_blocking_resources = blocking_resources;
    m_blocking_resources_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Dataset::is_blocking_resources_Set() const{
    return m_blocking_resources_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Dataset::is_blocking_resources_Valid() const{
    return m_blocking_resources_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1Dataset::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDatalabelingV1beta1Dataset::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Dataset::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Dataset::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1Dataset::getDataItemCount() const {
    return m_data_item_count;
}
void OAIGoogleCloudDatalabelingV1beta1Dataset::setDataItemCount(const QString &data_item_count) {
    m_data_item_count = data_item_count;
    m_data_item_count_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Dataset::is_data_item_count_Set() const{
    return m_data_item_count_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Dataset::is_data_item_count_Valid() const{
    return m_data_item_count_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1Dataset::getDescription() const {
    return m_description;
}
void OAIGoogleCloudDatalabelingV1beta1Dataset::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Dataset::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Dataset::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1Dataset::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDatalabelingV1beta1Dataset::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Dataset::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Dataset::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QList<OAIGoogleCloudDatalabelingV1beta1InputConfig> OAIGoogleCloudDatalabelingV1beta1Dataset::getInputConfigs() const {
    return m_input_configs;
}
void OAIGoogleCloudDatalabelingV1beta1Dataset::setInputConfigs(const QList<OAIGoogleCloudDatalabelingV1beta1InputConfig> &input_configs) {
    m_input_configs = input_configs;
    m_input_configs_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Dataset::is_input_configs_Set() const{
    return m_input_configs_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Dataset::is_input_configs_Valid() const{
    return m_input_configs_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1Dataset::getLastMigrateTime() const {
    return m_last_migrate_time;
}
void OAIGoogleCloudDatalabelingV1beta1Dataset::setLastMigrateTime(const QString &last_migrate_time) {
    m_last_migrate_time = last_migrate_time;
    m_last_migrate_time_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Dataset::is_last_migrate_time_Set() const{
    return m_last_migrate_time_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Dataset::is_last_migrate_time_Valid() const{
    return m_last_migrate_time_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1Dataset::getName() const {
    return m_name;
}
void OAIGoogleCloudDatalabelingV1beta1Dataset::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Dataset::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Dataset::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGoogleCloudDatalabelingV1beta1Dataset::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_blocking_resources.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_item_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_configs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_migrate_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatalabelingV1beta1Dataset::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
