/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatalabelingV1beta1Instruction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatalabelingV1beta1Instruction::OAIGoogleCloudDatalabelingV1beta1Instruction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatalabelingV1beta1Instruction::OAIGoogleCloudDatalabelingV1beta1Instruction() {
    this->initializeModel();
}

OAIGoogleCloudDatalabelingV1beta1Instruction::~OAIGoogleCloudDatalabelingV1beta1Instruction() {}

void OAIGoogleCloudDatalabelingV1beta1Instruction::initializeModel() {

    m_blocking_resources_isSet = false;
    m_blocking_resources_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_csv_instruction_isSet = false;
    m_csv_instruction_isValid = false;

    m_data_type_isSet = false;
    m_data_type_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_pdf_instruction_isSet = false;
    m_pdf_instruction_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudDatalabelingV1beta1Instruction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatalabelingV1beta1Instruction::fromJsonObject(QJsonObject json) {

    m_blocking_resources_isValid = ::OpenAPI::fromJsonValue(m_blocking_resources, json[QString("blockingResources")]);
    m_blocking_resources_isSet = !json[QString("blockingResources")].isNull() && m_blocking_resources_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_csv_instruction_isValid = ::OpenAPI::fromJsonValue(m_csv_instruction, json[QString("csvInstruction")]);
    m_csv_instruction_isSet = !json[QString("csvInstruction")].isNull() && m_csv_instruction_isValid;

    m_data_type_isValid = ::OpenAPI::fromJsonValue(m_data_type, json[QString("dataType")]);
    m_data_type_isSet = !json[QString("dataType")].isNull() && m_data_type_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_pdf_instruction_isValid = ::OpenAPI::fromJsonValue(m_pdf_instruction, json[QString("pdfInstruction")]);
    m_pdf_instruction_isSet = !json[QString("pdfInstruction")].isNull() && m_pdf_instruction_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1Instruction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatalabelingV1beta1Instruction::asJsonObject() const {
    QJsonObject obj;
    if (m_blocking_resources.size() > 0) {
        obj.insert(QString("blockingResources"), ::OpenAPI::toJsonValue(m_blocking_resources));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_csv_instruction.isSet()) {
        obj.insert(QString("csvInstruction"), ::OpenAPI::toJsonValue(m_csv_instruction));
    }
    if (m_data_type_isSet) {
        obj.insert(QString("dataType"), ::OpenAPI::toJsonValue(m_data_type));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_pdf_instruction.isSet()) {
        obj.insert(QString("pdfInstruction"), ::OpenAPI::toJsonValue(m_pdf_instruction));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QList<QString> OAIGoogleCloudDatalabelingV1beta1Instruction::getBlockingResources() const {
    return m_blocking_resources;
}
void OAIGoogleCloudDatalabelingV1beta1Instruction::setBlockingResources(const QList<QString> &blocking_resources) {
    m_blocking_resources = blocking_resources;
    m_blocking_resources_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Instruction::is_blocking_resources_Set() const{
    return m_blocking_resources_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Instruction::is_blocking_resources_Valid() const{
    return m_blocking_resources_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1Instruction::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDatalabelingV1beta1Instruction::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Instruction::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Instruction::is_create_time_Valid() const{
    return m_create_time_isValid;
}

OAIGoogleCloudDatalabelingV1beta1CsvInstruction OAIGoogleCloudDatalabelingV1beta1Instruction::getCsvInstruction() const {
    return m_csv_instruction;
}
void OAIGoogleCloudDatalabelingV1beta1Instruction::setCsvInstruction(const OAIGoogleCloudDatalabelingV1beta1CsvInstruction &csv_instruction) {
    m_csv_instruction = csv_instruction;
    m_csv_instruction_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Instruction::is_csv_instruction_Set() const{
    return m_csv_instruction_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Instruction::is_csv_instruction_Valid() const{
    return m_csv_instruction_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1Instruction::getDataType() const {
    return m_data_type;
}
void OAIGoogleCloudDatalabelingV1beta1Instruction::setDataType(const QString &data_type) {
    m_data_type = data_type;
    m_data_type_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Instruction::is_data_type_Set() const{
    return m_data_type_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Instruction::is_data_type_Valid() const{
    return m_data_type_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1Instruction::getDescription() const {
    return m_description;
}
void OAIGoogleCloudDatalabelingV1beta1Instruction::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Instruction::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Instruction::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1Instruction::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDatalabelingV1beta1Instruction::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Instruction::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Instruction::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1Instruction::getName() const {
    return m_name;
}
void OAIGoogleCloudDatalabelingV1beta1Instruction::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Instruction::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Instruction::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudDatalabelingV1beta1PdfInstruction OAIGoogleCloudDatalabelingV1beta1Instruction::getPdfInstruction() const {
    return m_pdf_instruction;
}
void OAIGoogleCloudDatalabelingV1beta1Instruction::setPdfInstruction(const OAIGoogleCloudDatalabelingV1beta1PdfInstruction &pdf_instruction) {
    m_pdf_instruction = pdf_instruction;
    m_pdf_instruction_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Instruction::is_pdf_instruction_Set() const{
    return m_pdf_instruction_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Instruction::is_pdf_instruction_Valid() const{
    return m_pdf_instruction_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1Instruction::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudDatalabelingV1beta1Instruction::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Instruction::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Instruction::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudDatalabelingV1beta1Instruction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_blocking_resources.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_csv_instruction.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pdf_instruction.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatalabelingV1beta1Instruction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
