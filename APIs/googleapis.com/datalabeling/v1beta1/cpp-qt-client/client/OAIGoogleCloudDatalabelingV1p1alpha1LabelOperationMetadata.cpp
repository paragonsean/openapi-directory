/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata() {
    this->initializeModel();
}

OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::~OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata() {}

void OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::initializeModel() {

    m_annotated_dataset_isSet = false;
    m_annotated_dataset_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_dataset_isSet = false;
    m_dataset_isValid = false;

    m_image_bounding_box_details_isSet = false;
    m_image_bounding_box_details_isValid = false;

    m_image_bounding_poly_details_isSet = false;
    m_image_bounding_poly_details_isValid = false;

    m_image_classification_details_isSet = false;
    m_image_classification_details_isValid = false;

    m_image_oriented_bounding_box_details_isSet = false;
    m_image_oriented_bounding_box_details_isValid = false;

    m_image_polyline_details_isSet = false;
    m_image_polyline_details_isValid = false;

    m_image_segmentation_details_isSet = false;
    m_image_segmentation_details_isValid = false;

    m_partial_failures_isSet = false;
    m_partial_failures_isValid = false;

    m_progress_percent_isSet = false;
    m_progress_percent_isValid = false;

    m_text_classification_details_isSet = false;
    m_text_classification_details_isValid = false;

    m_text_entity_extraction_details_isSet = false;
    m_text_entity_extraction_details_isValid = false;

    m_video_classification_details_isSet = false;
    m_video_classification_details_isValid = false;

    m_video_event_details_isSet = false;
    m_video_event_details_isValid = false;

    m_video_object_detection_details_isSet = false;
    m_video_object_detection_details_isValid = false;

    m_video_object_tracking_details_isSet = false;
    m_video_object_tracking_details_isValid = false;
}

void OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::fromJsonObject(QJsonObject json) {

    m_annotated_dataset_isValid = ::OpenAPI::fromJsonValue(m_annotated_dataset, json[QString("annotatedDataset")]);
    m_annotated_dataset_isSet = !json[QString("annotatedDataset")].isNull() && m_annotated_dataset_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_dataset_isValid = ::OpenAPI::fromJsonValue(m_dataset, json[QString("dataset")]);
    m_dataset_isSet = !json[QString("dataset")].isNull() && m_dataset_isValid;

    m_image_bounding_box_details_isValid = ::OpenAPI::fromJsonValue(m_image_bounding_box_details, json[QString("imageBoundingBoxDetails")]);
    m_image_bounding_box_details_isSet = !json[QString("imageBoundingBoxDetails")].isNull() && m_image_bounding_box_details_isValid;

    m_image_bounding_poly_details_isValid = ::OpenAPI::fromJsonValue(m_image_bounding_poly_details, json[QString("imageBoundingPolyDetails")]);
    m_image_bounding_poly_details_isSet = !json[QString("imageBoundingPolyDetails")].isNull() && m_image_bounding_poly_details_isValid;

    m_image_classification_details_isValid = ::OpenAPI::fromJsonValue(m_image_classification_details, json[QString("imageClassificationDetails")]);
    m_image_classification_details_isSet = !json[QString("imageClassificationDetails")].isNull() && m_image_classification_details_isValid;

    m_image_oriented_bounding_box_details_isValid = ::OpenAPI::fromJsonValue(m_image_oriented_bounding_box_details, json[QString("imageOrientedBoundingBoxDetails")]);
    m_image_oriented_bounding_box_details_isSet = !json[QString("imageOrientedBoundingBoxDetails")].isNull() && m_image_oriented_bounding_box_details_isValid;

    m_image_polyline_details_isValid = ::OpenAPI::fromJsonValue(m_image_polyline_details, json[QString("imagePolylineDetails")]);
    m_image_polyline_details_isSet = !json[QString("imagePolylineDetails")].isNull() && m_image_polyline_details_isValid;

    m_image_segmentation_details_isValid = ::OpenAPI::fromJsonValue(m_image_segmentation_details, json[QString("imageSegmentationDetails")]);
    m_image_segmentation_details_isSet = !json[QString("imageSegmentationDetails")].isNull() && m_image_segmentation_details_isValid;

    m_partial_failures_isValid = ::OpenAPI::fromJsonValue(m_partial_failures, json[QString("partialFailures")]);
    m_partial_failures_isSet = !json[QString("partialFailures")].isNull() && m_partial_failures_isValid;

    m_progress_percent_isValid = ::OpenAPI::fromJsonValue(m_progress_percent, json[QString("progressPercent")]);
    m_progress_percent_isSet = !json[QString("progressPercent")].isNull() && m_progress_percent_isValid;

    m_text_classification_details_isValid = ::OpenAPI::fromJsonValue(m_text_classification_details, json[QString("textClassificationDetails")]);
    m_text_classification_details_isSet = !json[QString("textClassificationDetails")].isNull() && m_text_classification_details_isValid;

    m_text_entity_extraction_details_isValid = ::OpenAPI::fromJsonValue(m_text_entity_extraction_details, json[QString("textEntityExtractionDetails")]);
    m_text_entity_extraction_details_isSet = !json[QString("textEntityExtractionDetails")].isNull() && m_text_entity_extraction_details_isValid;

    m_video_classification_details_isValid = ::OpenAPI::fromJsonValue(m_video_classification_details, json[QString("videoClassificationDetails")]);
    m_video_classification_details_isSet = !json[QString("videoClassificationDetails")].isNull() && m_video_classification_details_isValid;

    m_video_event_details_isValid = ::OpenAPI::fromJsonValue(m_video_event_details, json[QString("videoEventDetails")]);
    m_video_event_details_isSet = !json[QString("videoEventDetails")].isNull() && m_video_event_details_isValid;

    m_video_object_detection_details_isValid = ::OpenAPI::fromJsonValue(m_video_object_detection_details, json[QString("videoObjectDetectionDetails")]);
    m_video_object_detection_details_isSet = !json[QString("videoObjectDetectionDetails")].isNull() && m_video_object_detection_details_isValid;

    m_video_object_tracking_details_isValid = ::OpenAPI::fromJsonValue(m_video_object_tracking_details, json[QString("videoObjectTrackingDetails")]);
    m_video_object_tracking_details_isSet = !json[QString("videoObjectTrackingDetails")].isNull() && m_video_object_tracking_details_isValid;
}

QString OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_annotated_dataset_isSet) {
        obj.insert(QString("annotatedDataset"), ::OpenAPI::toJsonValue(m_annotated_dataset));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_dataset_isSet) {
        obj.insert(QString("dataset"), ::OpenAPI::toJsonValue(m_dataset));
    }
    if (m_image_bounding_box_details.isSet()) {
        obj.insert(QString("imageBoundingBoxDetails"), ::OpenAPI::toJsonValue(m_image_bounding_box_details));
    }
    if (m_image_bounding_poly_details.isSet()) {
        obj.insert(QString("imageBoundingPolyDetails"), ::OpenAPI::toJsonValue(m_image_bounding_poly_details));
    }
    if (m_image_classification_details.isSet()) {
        obj.insert(QString("imageClassificationDetails"), ::OpenAPI::toJsonValue(m_image_classification_details));
    }
    if (m_image_oriented_bounding_box_details.isSet()) {
        obj.insert(QString("imageOrientedBoundingBoxDetails"), ::OpenAPI::toJsonValue(m_image_oriented_bounding_box_details));
    }
    if (m_image_polyline_details.isSet()) {
        obj.insert(QString("imagePolylineDetails"), ::OpenAPI::toJsonValue(m_image_polyline_details));
    }
    if (m_image_segmentation_details.isSet()) {
        obj.insert(QString("imageSegmentationDetails"), ::OpenAPI::toJsonValue(m_image_segmentation_details));
    }
    if (m_partial_failures.size() > 0) {
        obj.insert(QString("partialFailures"), ::OpenAPI::toJsonValue(m_partial_failures));
    }
    if (m_progress_percent_isSet) {
        obj.insert(QString("progressPercent"), ::OpenAPI::toJsonValue(m_progress_percent));
    }
    if (m_text_classification_details.isSet()) {
        obj.insert(QString("textClassificationDetails"), ::OpenAPI::toJsonValue(m_text_classification_details));
    }
    if (m_text_entity_extraction_details.isSet()) {
        obj.insert(QString("textEntityExtractionDetails"), ::OpenAPI::toJsonValue(m_text_entity_extraction_details));
    }
    if (m_video_classification_details.isSet()) {
        obj.insert(QString("videoClassificationDetails"), ::OpenAPI::toJsonValue(m_video_classification_details));
    }
    if (m_video_event_details.isSet()) {
        obj.insert(QString("videoEventDetails"), ::OpenAPI::toJsonValue(m_video_event_details));
    }
    if (m_video_object_detection_details.isSet()) {
        obj.insert(QString("videoObjectDetectionDetails"), ::OpenAPI::toJsonValue(m_video_object_detection_details));
    }
    if (m_video_object_tracking_details.isSet()) {
        obj.insert(QString("videoObjectTrackingDetails"), ::OpenAPI::toJsonValue(m_video_object_tracking_details));
    }
    return obj;
}

QString OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::getAnnotatedDataset() const {
    return m_annotated_dataset;
}
void OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::setAnnotatedDataset(const QString &annotated_dataset) {
    m_annotated_dataset = annotated_dataset;
    m_annotated_dataset_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_annotated_dataset_Set() const{
    return m_annotated_dataset_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_annotated_dataset_Valid() const{
    return m_annotated_dataset_isValid;
}

QString OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::getDataset() const {
    return m_dataset;
}
void OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::setDataset(const QString &dataset) {
    m_dataset = dataset;
    m_dataset_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_dataset_Set() const{
    return m_dataset_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_dataset_Valid() const{
    return m_dataset_isValid;
}

OAIGoogleCloudDatalabelingV1p1alpha1LabelImageBoundingBoxOperationMetadata OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::getImageBoundingBoxDetails() const {
    return m_image_bounding_box_details;
}
void OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::setImageBoundingBoxDetails(const OAIGoogleCloudDatalabelingV1p1alpha1LabelImageBoundingBoxOperationMetadata &image_bounding_box_details) {
    m_image_bounding_box_details = image_bounding_box_details;
    m_image_bounding_box_details_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_image_bounding_box_details_Set() const{
    return m_image_bounding_box_details_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_image_bounding_box_details_Valid() const{
    return m_image_bounding_box_details_isValid;
}

OAIGoogleCloudDatalabelingV1p1alpha1LabelImageBoundingPolyOperationMetadata OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::getImageBoundingPolyDetails() const {
    return m_image_bounding_poly_details;
}
void OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::setImageBoundingPolyDetails(const OAIGoogleCloudDatalabelingV1p1alpha1LabelImageBoundingPolyOperationMetadata &image_bounding_poly_details) {
    m_image_bounding_poly_details = image_bounding_poly_details;
    m_image_bounding_poly_details_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_image_bounding_poly_details_Set() const{
    return m_image_bounding_poly_details_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_image_bounding_poly_details_Valid() const{
    return m_image_bounding_poly_details_isValid;
}

OAIGoogleCloudDatalabelingV1p1alpha1LabelImageClassificationOperationMetadata OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::getImageClassificationDetails() const {
    return m_image_classification_details;
}
void OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::setImageClassificationDetails(const OAIGoogleCloudDatalabelingV1p1alpha1LabelImageClassificationOperationMetadata &image_classification_details) {
    m_image_classification_details = image_classification_details;
    m_image_classification_details_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_image_classification_details_Set() const{
    return m_image_classification_details_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_image_classification_details_Valid() const{
    return m_image_classification_details_isValid;
}

OAIGoogleCloudDatalabelingV1p1alpha1LabelImageOrientedBoundingBoxOperationMetadata OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::getImageOrientedBoundingBoxDetails() const {
    return m_image_oriented_bounding_box_details;
}
void OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::setImageOrientedBoundingBoxDetails(const OAIGoogleCloudDatalabelingV1p1alpha1LabelImageOrientedBoundingBoxOperationMetadata &image_oriented_bounding_box_details) {
    m_image_oriented_bounding_box_details = image_oriented_bounding_box_details;
    m_image_oriented_bounding_box_details_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_image_oriented_bounding_box_details_Set() const{
    return m_image_oriented_bounding_box_details_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_image_oriented_bounding_box_details_Valid() const{
    return m_image_oriented_bounding_box_details_isValid;
}

OAIGoogleCloudDatalabelingV1p1alpha1LabelImagePolylineOperationMetadata OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::getImagePolylineDetails() const {
    return m_image_polyline_details;
}
void OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::setImagePolylineDetails(const OAIGoogleCloudDatalabelingV1p1alpha1LabelImagePolylineOperationMetadata &image_polyline_details) {
    m_image_polyline_details = image_polyline_details;
    m_image_polyline_details_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_image_polyline_details_Set() const{
    return m_image_polyline_details_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_image_polyline_details_Valid() const{
    return m_image_polyline_details_isValid;
}

OAIGoogleCloudDatalabelingV1p1alpha1LabelImageSegmentationOperationMetadata OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::getImageSegmentationDetails() const {
    return m_image_segmentation_details;
}
void OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::setImageSegmentationDetails(const OAIGoogleCloudDatalabelingV1p1alpha1LabelImageSegmentationOperationMetadata &image_segmentation_details) {
    m_image_segmentation_details = image_segmentation_details;
    m_image_segmentation_details_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_image_segmentation_details_Set() const{
    return m_image_segmentation_details_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_image_segmentation_details_Valid() const{
    return m_image_segmentation_details_isValid;
}

QList<OAIGoogleRpcStatus> OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::getPartialFailures() const {
    return m_partial_failures;
}
void OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::setPartialFailures(const QList<OAIGoogleRpcStatus> &partial_failures) {
    m_partial_failures = partial_failures;
    m_partial_failures_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_partial_failures_Set() const{
    return m_partial_failures_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_partial_failures_Valid() const{
    return m_partial_failures_isValid;
}

qint32 OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::getProgressPercent() const {
    return m_progress_percent;
}
void OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::setProgressPercent(const qint32 &progress_percent) {
    m_progress_percent = progress_percent;
    m_progress_percent_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_progress_percent_Set() const{
    return m_progress_percent_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_progress_percent_Valid() const{
    return m_progress_percent_isValid;
}

OAIGoogleCloudDatalabelingV1p1alpha1LabelTextClassificationOperationMetadata OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::getTextClassificationDetails() const {
    return m_text_classification_details;
}
void OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::setTextClassificationDetails(const OAIGoogleCloudDatalabelingV1p1alpha1LabelTextClassificationOperationMetadata &text_classification_details) {
    m_text_classification_details = text_classification_details;
    m_text_classification_details_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_text_classification_details_Set() const{
    return m_text_classification_details_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_text_classification_details_Valid() const{
    return m_text_classification_details_isValid;
}

OAIGoogleCloudDatalabelingV1p1alpha1LabelTextEntityExtractionOperationMetadata OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::getTextEntityExtractionDetails() const {
    return m_text_entity_extraction_details;
}
void OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::setTextEntityExtractionDetails(const OAIGoogleCloudDatalabelingV1p1alpha1LabelTextEntityExtractionOperationMetadata &text_entity_extraction_details) {
    m_text_entity_extraction_details = text_entity_extraction_details;
    m_text_entity_extraction_details_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_text_entity_extraction_details_Set() const{
    return m_text_entity_extraction_details_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_text_entity_extraction_details_Valid() const{
    return m_text_entity_extraction_details_isValid;
}

OAIGoogleCloudDatalabelingV1p1alpha1LabelVideoClassificationOperationMetadata OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::getVideoClassificationDetails() const {
    return m_video_classification_details;
}
void OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::setVideoClassificationDetails(const OAIGoogleCloudDatalabelingV1p1alpha1LabelVideoClassificationOperationMetadata &video_classification_details) {
    m_video_classification_details = video_classification_details;
    m_video_classification_details_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_video_classification_details_Set() const{
    return m_video_classification_details_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_video_classification_details_Valid() const{
    return m_video_classification_details_isValid;
}

OAIGoogleCloudDatalabelingV1p1alpha1LabelVideoEventOperationMetadata OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::getVideoEventDetails() const {
    return m_video_event_details;
}
void OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::setVideoEventDetails(const OAIGoogleCloudDatalabelingV1p1alpha1LabelVideoEventOperationMetadata &video_event_details) {
    m_video_event_details = video_event_details;
    m_video_event_details_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_video_event_details_Set() const{
    return m_video_event_details_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_video_event_details_Valid() const{
    return m_video_event_details_isValid;
}

OAIGoogleCloudDatalabelingV1p1alpha1LabelVideoObjectDetectionOperationMetadata OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::getVideoObjectDetectionDetails() const {
    return m_video_object_detection_details;
}
void OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::setVideoObjectDetectionDetails(const OAIGoogleCloudDatalabelingV1p1alpha1LabelVideoObjectDetectionOperationMetadata &video_object_detection_details) {
    m_video_object_detection_details = video_object_detection_details;
    m_video_object_detection_details_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_video_object_detection_details_Set() const{
    return m_video_object_detection_details_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_video_object_detection_details_Valid() const{
    return m_video_object_detection_details_isValid;
}

OAIGoogleCloudDatalabelingV1p1alpha1LabelVideoObjectTrackingOperationMetadata OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::getVideoObjectTrackingDetails() const {
    return m_video_object_tracking_details;
}
void OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::setVideoObjectTrackingDetails(const OAIGoogleCloudDatalabelingV1p1alpha1LabelVideoObjectTrackingOperationMetadata &video_object_tracking_details) {
    m_video_object_tracking_details = video_object_tracking_details;
    m_video_object_tracking_details_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_video_object_tracking_details_Set() const{
    return m_video_object_tracking_details_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::is_video_object_tracking_details_Valid() const{
    return m_video_object_tracking_details_isValid;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_annotated_dataset_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dataset_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_bounding_box_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_bounding_poly_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_classification_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_oriented_bounding_box_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_polyline_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_segmentation_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_partial_failures.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_progress_percent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_classification_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_entity_extraction_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_classification_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_event_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_object_detection_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_object_tracking_details.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
