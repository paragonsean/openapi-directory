/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata() {
    this->initializeModel();
}

OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::~OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata() {}

void OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_last_update_time_isSet = false;
    m_last_update_time_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_thumbnail_isSet = false;
    m_thumbnail_isValid = false;
}

void OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_last_update_time_isValid = ::OpenAPI::fromJsonValue(m_last_update_time, json[QString("lastUpdateTime")]);
    m_last_update_time_isSet = !json[QString("lastUpdateTime")].isNull() && m_last_update_time_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_thumbnail_isValid = ::OpenAPI::fromJsonValue(m_thumbnail, json[QString("thumbnail")]);
    m_thumbnail_isSet = !json[QString("thumbnail")].isNull() && m_thumbnail_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_last_update_time_isSet) {
        obj.insert(QString("lastUpdateTime"), ::OpenAPI::toJsonValue(m_last_update_time));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_thumbnail_isSet) {
        obj.insert(QString("thumbnail"), ::OpenAPI::toJsonValue(m_thumbnail));
    }
    return obj;
}

QString OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::getLastUpdateTime() const {
    return m_last_update_time;
}
void OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::setLastUpdateTime(const QString &last_update_time) {
    m_last_update_time = last_update_time;
    m_last_update_time_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::is_last_update_time_Set() const{
    return m_last_update_time_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::is_last_update_time_Valid() const{
    return m_last_update_time_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::getStatus() const {
    return m_status;
}
void OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::is_status_Set() const{
    return m_status_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::is_status_Valid() const{
    return m_status_isValid;
}

QByteArray OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::getThumbnail() const {
    return m_thumbnail;
}
void OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::setThumbnail(const QByteArray &thumbnail) {
    m_thumbnail = thumbnail;
    m_thumbnail_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::is_thumbnail_Set() const{
    return m_thumbnail_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::is_thumbnail_Valid() const{
    return m_thumbnail_isValid;
}

bool OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_thumbnail_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatalabelingV1beta1FeedbackThreadMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
