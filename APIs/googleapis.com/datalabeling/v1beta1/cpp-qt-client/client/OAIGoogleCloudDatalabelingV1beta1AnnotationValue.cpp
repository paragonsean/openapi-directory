/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatalabelingV1beta1AnnotationValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatalabelingV1beta1AnnotationValue::OAIGoogleCloudDatalabelingV1beta1AnnotationValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatalabelingV1beta1AnnotationValue::OAIGoogleCloudDatalabelingV1beta1AnnotationValue() {
    this->initializeModel();
}

OAIGoogleCloudDatalabelingV1beta1AnnotationValue::~OAIGoogleCloudDatalabelingV1beta1AnnotationValue() {}

void OAIGoogleCloudDatalabelingV1beta1AnnotationValue::initializeModel() {

    m_image_bounding_poly_annotation_isSet = false;
    m_image_bounding_poly_annotation_isValid = false;

    m_image_classification_annotation_isSet = false;
    m_image_classification_annotation_isValid = false;

    m_image_polyline_annotation_isSet = false;
    m_image_polyline_annotation_isValid = false;

    m_image_segmentation_annotation_isSet = false;
    m_image_segmentation_annotation_isValid = false;

    m_text_classification_annotation_isSet = false;
    m_text_classification_annotation_isValid = false;

    m_text_entity_extraction_annotation_isSet = false;
    m_text_entity_extraction_annotation_isValid = false;

    m_video_classification_annotation_isSet = false;
    m_video_classification_annotation_isValid = false;

    m_video_event_annotation_isSet = false;
    m_video_event_annotation_isValid = false;

    m_video_object_tracking_annotation_isSet = false;
    m_video_object_tracking_annotation_isValid = false;
}

void OAIGoogleCloudDatalabelingV1beta1AnnotationValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatalabelingV1beta1AnnotationValue::fromJsonObject(QJsonObject json) {

    m_image_bounding_poly_annotation_isValid = ::OpenAPI::fromJsonValue(m_image_bounding_poly_annotation, json[QString("imageBoundingPolyAnnotation")]);
    m_image_bounding_poly_annotation_isSet = !json[QString("imageBoundingPolyAnnotation")].isNull() && m_image_bounding_poly_annotation_isValid;

    m_image_classification_annotation_isValid = ::OpenAPI::fromJsonValue(m_image_classification_annotation, json[QString("imageClassificationAnnotation")]);
    m_image_classification_annotation_isSet = !json[QString("imageClassificationAnnotation")].isNull() && m_image_classification_annotation_isValid;

    m_image_polyline_annotation_isValid = ::OpenAPI::fromJsonValue(m_image_polyline_annotation, json[QString("imagePolylineAnnotation")]);
    m_image_polyline_annotation_isSet = !json[QString("imagePolylineAnnotation")].isNull() && m_image_polyline_annotation_isValid;

    m_image_segmentation_annotation_isValid = ::OpenAPI::fromJsonValue(m_image_segmentation_annotation, json[QString("imageSegmentationAnnotation")]);
    m_image_segmentation_annotation_isSet = !json[QString("imageSegmentationAnnotation")].isNull() && m_image_segmentation_annotation_isValid;

    m_text_classification_annotation_isValid = ::OpenAPI::fromJsonValue(m_text_classification_annotation, json[QString("textClassificationAnnotation")]);
    m_text_classification_annotation_isSet = !json[QString("textClassificationAnnotation")].isNull() && m_text_classification_annotation_isValid;

    m_text_entity_extraction_annotation_isValid = ::OpenAPI::fromJsonValue(m_text_entity_extraction_annotation, json[QString("textEntityExtractionAnnotation")]);
    m_text_entity_extraction_annotation_isSet = !json[QString("textEntityExtractionAnnotation")].isNull() && m_text_entity_extraction_annotation_isValid;

    m_video_classification_annotation_isValid = ::OpenAPI::fromJsonValue(m_video_classification_annotation, json[QString("videoClassificationAnnotation")]);
    m_video_classification_annotation_isSet = !json[QString("videoClassificationAnnotation")].isNull() && m_video_classification_annotation_isValid;

    m_video_event_annotation_isValid = ::OpenAPI::fromJsonValue(m_video_event_annotation, json[QString("videoEventAnnotation")]);
    m_video_event_annotation_isSet = !json[QString("videoEventAnnotation")].isNull() && m_video_event_annotation_isValid;

    m_video_object_tracking_annotation_isValid = ::OpenAPI::fromJsonValue(m_video_object_tracking_annotation, json[QString("videoObjectTrackingAnnotation")]);
    m_video_object_tracking_annotation_isSet = !json[QString("videoObjectTrackingAnnotation")].isNull() && m_video_object_tracking_annotation_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1AnnotationValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatalabelingV1beta1AnnotationValue::asJsonObject() const {
    QJsonObject obj;
    if (m_image_bounding_poly_annotation.isSet()) {
        obj.insert(QString("imageBoundingPolyAnnotation"), ::OpenAPI::toJsonValue(m_image_bounding_poly_annotation));
    }
    if (m_image_classification_annotation.isSet()) {
        obj.insert(QString("imageClassificationAnnotation"), ::OpenAPI::toJsonValue(m_image_classification_annotation));
    }
    if (m_image_polyline_annotation.isSet()) {
        obj.insert(QString("imagePolylineAnnotation"), ::OpenAPI::toJsonValue(m_image_polyline_annotation));
    }
    if (m_image_segmentation_annotation.isSet()) {
        obj.insert(QString("imageSegmentationAnnotation"), ::OpenAPI::toJsonValue(m_image_segmentation_annotation));
    }
    if (m_text_classification_annotation.isSet()) {
        obj.insert(QString("textClassificationAnnotation"), ::OpenAPI::toJsonValue(m_text_classification_annotation));
    }
    if (m_text_entity_extraction_annotation.isSet()) {
        obj.insert(QString("textEntityExtractionAnnotation"), ::OpenAPI::toJsonValue(m_text_entity_extraction_annotation));
    }
    if (m_video_classification_annotation.isSet()) {
        obj.insert(QString("videoClassificationAnnotation"), ::OpenAPI::toJsonValue(m_video_classification_annotation));
    }
    if (m_video_event_annotation.isSet()) {
        obj.insert(QString("videoEventAnnotation"), ::OpenAPI::toJsonValue(m_video_event_annotation));
    }
    if (m_video_object_tracking_annotation.isSet()) {
        obj.insert(QString("videoObjectTrackingAnnotation"), ::OpenAPI::toJsonValue(m_video_object_tracking_annotation));
    }
    return obj;
}

OAIGoogleCloudDatalabelingV1beta1ImageBoundingPolyAnnotation OAIGoogleCloudDatalabelingV1beta1AnnotationValue::getImageBoundingPolyAnnotation() const {
    return m_image_bounding_poly_annotation;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotationValue::setImageBoundingPolyAnnotation(const OAIGoogleCloudDatalabelingV1beta1ImageBoundingPolyAnnotation &image_bounding_poly_annotation) {
    m_image_bounding_poly_annotation = image_bounding_poly_annotation;
    m_image_bounding_poly_annotation_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotationValue::is_image_bounding_poly_annotation_Set() const{
    return m_image_bounding_poly_annotation_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotationValue::is_image_bounding_poly_annotation_Valid() const{
    return m_image_bounding_poly_annotation_isValid;
}

OAIGoogleCloudDatalabelingV1beta1ImageClassificationAnnotation OAIGoogleCloudDatalabelingV1beta1AnnotationValue::getImageClassificationAnnotation() const {
    return m_image_classification_annotation;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotationValue::setImageClassificationAnnotation(const OAIGoogleCloudDatalabelingV1beta1ImageClassificationAnnotation &image_classification_annotation) {
    m_image_classification_annotation = image_classification_annotation;
    m_image_classification_annotation_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotationValue::is_image_classification_annotation_Set() const{
    return m_image_classification_annotation_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotationValue::is_image_classification_annotation_Valid() const{
    return m_image_classification_annotation_isValid;
}

OAIGoogleCloudDatalabelingV1beta1ImagePolylineAnnotation OAIGoogleCloudDatalabelingV1beta1AnnotationValue::getImagePolylineAnnotation() const {
    return m_image_polyline_annotation;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotationValue::setImagePolylineAnnotation(const OAIGoogleCloudDatalabelingV1beta1ImagePolylineAnnotation &image_polyline_annotation) {
    m_image_polyline_annotation = image_polyline_annotation;
    m_image_polyline_annotation_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotationValue::is_image_polyline_annotation_Set() const{
    return m_image_polyline_annotation_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotationValue::is_image_polyline_annotation_Valid() const{
    return m_image_polyline_annotation_isValid;
}

OAIGoogleCloudDatalabelingV1beta1ImageSegmentationAnnotation OAIGoogleCloudDatalabelingV1beta1AnnotationValue::getImageSegmentationAnnotation() const {
    return m_image_segmentation_annotation;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotationValue::setImageSegmentationAnnotation(const OAIGoogleCloudDatalabelingV1beta1ImageSegmentationAnnotation &image_segmentation_annotation) {
    m_image_segmentation_annotation = image_segmentation_annotation;
    m_image_segmentation_annotation_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotationValue::is_image_segmentation_annotation_Set() const{
    return m_image_segmentation_annotation_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotationValue::is_image_segmentation_annotation_Valid() const{
    return m_image_segmentation_annotation_isValid;
}

OAIGoogleCloudDatalabelingV1beta1TextClassificationAnnotation OAIGoogleCloudDatalabelingV1beta1AnnotationValue::getTextClassificationAnnotation() const {
    return m_text_classification_annotation;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotationValue::setTextClassificationAnnotation(const OAIGoogleCloudDatalabelingV1beta1TextClassificationAnnotation &text_classification_annotation) {
    m_text_classification_annotation = text_classification_annotation;
    m_text_classification_annotation_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotationValue::is_text_classification_annotation_Set() const{
    return m_text_classification_annotation_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotationValue::is_text_classification_annotation_Valid() const{
    return m_text_classification_annotation_isValid;
}

OAIGoogleCloudDatalabelingV1beta1TextEntityExtractionAnnotation OAIGoogleCloudDatalabelingV1beta1AnnotationValue::getTextEntityExtractionAnnotation() const {
    return m_text_entity_extraction_annotation;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotationValue::setTextEntityExtractionAnnotation(const OAIGoogleCloudDatalabelingV1beta1TextEntityExtractionAnnotation &text_entity_extraction_annotation) {
    m_text_entity_extraction_annotation = text_entity_extraction_annotation;
    m_text_entity_extraction_annotation_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotationValue::is_text_entity_extraction_annotation_Set() const{
    return m_text_entity_extraction_annotation_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotationValue::is_text_entity_extraction_annotation_Valid() const{
    return m_text_entity_extraction_annotation_isValid;
}

OAIGoogleCloudDatalabelingV1beta1VideoClassificationAnnotation OAIGoogleCloudDatalabelingV1beta1AnnotationValue::getVideoClassificationAnnotation() const {
    return m_video_classification_annotation;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotationValue::setVideoClassificationAnnotation(const OAIGoogleCloudDatalabelingV1beta1VideoClassificationAnnotation &video_classification_annotation) {
    m_video_classification_annotation = video_classification_annotation;
    m_video_classification_annotation_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotationValue::is_video_classification_annotation_Set() const{
    return m_video_classification_annotation_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotationValue::is_video_classification_annotation_Valid() const{
    return m_video_classification_annotation_isValid;
}

OAIGoogleCloudDatalabelingV1beta1VideoEventAnnotation OAIGoogleCloudDatalabelingV1beta1AnnotationValue::getVideoEventAnnotation() const {
    return m_video_event_annotation;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotationValue::setVideoEventAnnotation(const OAIGoogleCloudDatalabelingV1beta1VideoEventAnnotation &video_event_annotation) {
    m_video_event_annotation = video_event_annotation;
    m_video_event_annotation_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotationValue::is_video_event_annotation_Set() const{
    return m_video_event_annotation_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotationValue::is_video_event_annotation_Valid() const{
    return m_video_event_annotation_isValid;
}

OAIGoogleCloudDatalabelingV1beta1VideoObjectTrackingAnnotation OAIGoogleCloudDatalabelingV1beta1AnnotationValue::getVideoObjectTrackingAnnotation() const {
    return m_video_object_tracking_annotation;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotationValue::setVideoObjectTrackingAnnotation(const OAIGoogleCloudDatalabelingV1beta1VideoObjectTrackingAnnotation &video_object_tracking_annotation) {
    m_video_object_tracking_annotation = video_object_tracking_annotation;
    m_video_object_tracking_annotation_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotationValue::is_video_object_tracking_annotation_Set() const{
    return m_video_object_tracking_annotation_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotationValue::is_video_object_tracking_annotation_Valid() const{
    return m_video_object_tracking_annotation_isValid;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotationValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_image_bounding_poly_annotation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_classification_annotation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_polyline_annotation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_segmentation_annotation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_classification_annotation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_entity_extraction_annotation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_classification_annotation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_event_annotation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_object_tracking_annotation.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotationValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
