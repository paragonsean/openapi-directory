/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatalabelingV1beta1DataItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatalabelingV1beta1DataItem::OAIGoogleCloudDatalabelingV1beta1DataItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatalabelingV1beta1DataItem::OAIGoogleCloudDatalabelingV1beta1DataItem() {
    this->initializeModel();
}

OAIGoogleCloudDatalabelingV1beta1DataItem::~OAIGoogleCloudDatalabelingV1beta1DataItem() {}

void OAIGoogleCloudDatalabelingV1beta1DataItem::initializeModel() {

    m_image_payload_isSet = false;
    m_image_payload_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_text_payload_isSet = false;
    m_text_payload_isValid = false;

    m_video_payload_isSet = false;
    m_video_payload_isValid = false;
}

void OAIGoogleCloudDatalabelingV1beta1DataItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatalabelingV1beta1DataItem::fromJsonObject(QJsonObject json) {

    m_image_payload_isValid = ::OpenAPI::fromJsonValue(m_image_payload, json[QString("imagePayload")]);
    m_image_payload_isSet = !json[QString("imagePayload")].isNull() && m_image_payload_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_text_payload_isValid = ::OpenAPI::fromJsonValue(m_text_payload, json[QString("textPayload")]);
    m_text_payload_isSet = !json[QString("textPayload")].isNull() && m_text_payload_isValid;

    m_video_payload_isValid = ::OpenAPI::fromJsonValue(m_video_payload, json[QString("videoPayload")]);
    m_video_payload_isSet = !json[QString("videoPayload")].isNull() && m_video_payload_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1DataItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatalabelingV1beta1DataItem::asJsonObject() const {
    QJsonObject obj;
    if (m_image_payload.isSet()) {
        obj.insert(QString("imagePayload"), ::OpenAPI::toJsonValue(m_image_payload));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_text_payload.isSet()) {
        obj.insert(QString("textPayload"), ::OpenAPI::toJsonValue(m_text_payload));
    }
    if (m_video_payload.isSet()) {
        obj.insert(QString("videoPayload"), ::OpenAPI::toJsonValue(m_video_payload));
    }
    return obj;
}

OAIGoogleCloudDatalabelingV1beta1ImagePayload OAIGoogleCloudDatalabelingV1beta1DataItem::getImagePayload() const {
    return m_image_payload;
}
void OAIGoogleCloudDatalabelingV1beta1DataItem::setImagePayload(const OAIGoogleCloudDatalabelingV1beta1ImagePayload &image_payload) {
    m_image_payload = image_payload;
    m_image_payload_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1DataItem::is_image_payload_Set() const{
    return m_image_payload_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1DataItem::is_image_payload_Valid() const{
    return m_image_payload_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1DataItem::getName() const {
    return m_name;
}
void OAIGoogleCloudDatalabelingV1beta1DataItem::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1DataItem::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1DataItem::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudDatalabelingV1beta1TextPayload OAIGoogleCloudDatalabelingV1beta1DataItem::getTextPayload() const {
    return m_text_payload;
}
void OAIGoogleCloudDatalabelingV1beta1DataItem::setTextPayload(const OAIGoogleCloudDatalabelingV1beta1TextPayload &text_payload) {
    m_text_payload = text_payload;
    m_text_payload_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1DataItem::is_text_payload_Set() const{
    return m_text_payload_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1DataItem::is_text_payload_Valid() const{
    return m_text_payload_isValid;
}

OAIGoogleCloudDatalabelingV1beta1VideoPayload OAIGoogleCloudDatalabelingV1beta1DataItem::getVideoPayload() const {
    return m_video_payload;
}
void OAIGoogleCloudDatalabelingV1beta1DataItem::setVideoPayload(const OAIGoogleCloudDatalabelingV1beta1VideoPayload &video_payload) {
    m_video_payload = video_payload;
    m_video_payload_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1DataItem::is_video_payload_Set() const{
    return m_video_payload_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1DataItem::is_video_payload_Valid() const{
    return m_video_payload_isValid;
}

bool OAIGoogleCloudDatalabelingV1beta1DataItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_image_payload.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_payload.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_payload.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatalabelingV1beta1DataItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
