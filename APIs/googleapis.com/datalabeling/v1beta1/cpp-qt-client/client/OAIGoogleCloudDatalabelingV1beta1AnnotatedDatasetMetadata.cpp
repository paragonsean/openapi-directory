/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata() {
    this->initializeModel();
}

OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::~OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata() {}

void OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::initializeModel() {

    m_bounding_poly_config_isSet = false;
    m_bounding_poly_config_isValid = false;

    m_event_config_isSet = false;
    m_event_config_isValid = false;

    m_human_annotation_config_isSet = false;
    m_human_annotation_config_isValid = false;

    m_image_classification_config_isSet = false;
    m_image_classification_config_isValid = false;

    m_object_detection_config_isSet = false;
    m_object_detection_config_isValid = false;

    m_object_tracking_config_isSet = false;
    m_object_tracking_config_isValid = false;

    m_polyline_config_isSet = false;
    m_polyline_config_isValid = false;

    m_segmentation_config_isSet = false;
    m_segmentation_config_isValid = false;

    m_text_classification_config_isSet = false;
    m_text_classification_config_isValid = false;

    m_text_entity_extraction_config_isSet = false;
    m_text_entity_extraction_config_isValid = false;

    m_video_classification_config_isSet = false;
    m_video_classification_config_isValid = false;
}

void OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::fromJsonObject(QJsonObject json) {

    m_bounding_poly_config_isValid = ::OpenAPI::fromJsonValue(m_bounding_poly_config, json[QString("boundingPolyConfig")]);
    m_bounding_poly_config_isSet = !json[QString("boundingPolyConfig")].isNull() && m_bounding_poly_config_isValid;

    m_event_config_isValid = ::OpenAPI::fromJsonValue(m_event_config, json[QString("eventConfig")]);
    m_event_config_isSet = !json[QString("eventConfig")].isNull() && m_event_config_isValid;

    m_human_annotation_config_isValid = ::OpenAPI::fromJsonValue(m_human_annotation_config, json[QString("humanAnnotationConfig")]);
    m_human_annotation_config_isSet = !json[QString("humanAnnotationConfig")].isNull() && m_human_annotation_config_isValid;

    m_image_classification_config_isValid = ::OpenAPI::fromJsonValue(m_image_classification_config, json[QString("imageClassificationConfig")]);
    m_image_classification_config_isSet = !json[QString("imageClassificationConfig")].isNull() && m_image_classification_config_isValid;

    m_object_detection_config_isValid = ::OpenAPI::fromJsonValue(m_object_detection_config, json[QString("objectDetectionConfig")]);
    m_object_detection_config_isSet = !json[QString("objectDetectionConfig")].isNull() && m_object_detection_config_isValid;

    m_object_tracking_config_isValid = ::OpenAPI::fromJsonValue(m_object_tracking_config, json[QString("objectTrackingConfig")]);
    m_object_tracking_config_isSet = !json[QString("objectTrackingConfig")].isNull() && m_object_tracking_config_isValid;

    m_polyline_config_isValid = ::OpenAPI::fromJsonValue(m_polyline_config, json[QString("polylineConfig")]);
    m_polyline_config_isSet = !json[QString("polylineConfig")].isNull() && m_polyline_config_isValid;

    m_segmentation_config_isValid = ::OpenAPI::fromJsonValue(m_segmentation_config, json[QString("segmentationConfig")]);
    m_segmentation_config_isSet = !json[QString("segmentationConfig")].isNull() && m_segmentation_config_isValid;

    m_text_classification_config_isValid = ::OpenAPI::fromJsonValue(m_text_classification_config, json[QString("textClassificationConfig")]);
    m_text_classification_config_isSet = !json[QString("textClassificationConfig")].isNull() && m_text_classification_config_isValid;

    m_text_entity_extraction_config_isValid = ::OpenAPI::fromJsonValue(m_text_entity_extraction_config, json[QString("textEntityExtractionConfig")]);
    m_text_entity_extraction_config_isSet = !json[QString("textEntityExtractionConfig")].isNull() && m_text_entity_extraction_config_isValid;

    m_video_classification_config_isValid = ::OpenAPI::fromJsonValue(m_video_classification_config, json[QString("videoClassificationConfig")]);
    m_video_classification_config_isSet = !json[QString("videoClassificationConfig")].isNull() && m_video_classification_config_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_bounding_poly_config.isSet()) {
        obj.insert(QString("boundingPolyConfig"), ::OpenAPI::toJsonValue(m_bounding_poly_config));
    }
    if (m_event_config.isSet()) {
        obj.insert(QString("eventConfig"), ::OpenAPI::toJsonValue(m_event_config));
    }
    if (m_human_annotation_config.isSet()) {
        obj.insert(QString("humanAnnotationConfig"), ::OpenAPI::toJsonValue(m_human_annotation_config));
    }
    if (m_image_classification_config.isSet()) {
        obj.insert(QString("imageClassificationConfig"), ::OpenAPI::toJsonValue(m_image_classification_config));
    }
    if (m_object_detection_config.isSet()) {
        obj.insert(QString("objectDetectionConfig"), ::OpenAPI::toJsonValue(m_object_detection_config));
    }
    if (m_object_tracking_config.isSet()) {
        obj.insert(QString("objectTrackingConfig"), ::OpenAPI::toJsonValue(m_object_tracking_config));
    }
    if (m_polyline_config.isSet()) {
        obj.insert(QString("polylineConfig"), ::OpenAPI::toJsonValue(m_polyline_config));
    }
    if (m_segmentation_config.isSet()) {
        obj.insert(QString("segmentationConfig"), ::OpenAPI::toJsonValue(m_segmentation_config));
    }
    if (m_text_classification_config.isSet()) {
        obj.insert(QString("textClassificationConfig"), ::OpenAPI::toJsonValue(m_text_classification_config));
    }
    if (m_text_entity_extraction_config.isSet()) {
        obj.insert(QString("textEntityExtractionConfig"), ::OpenAPI::toJsonValue(m_text_entity_extraction_config));
    }
    if (m_video_classification_config.isSet()) {
        obj.insert(QString("videoClassificationConfig"), ::OpenAPI::toJsonValue(m_video_classification_config));
    }
    return obj;
}

OAIGoogleCloudDatalabelingV1beta1BoundingPolyConfig OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::getBoundingPolyConfig() const {
    return m_bounding_poly_config;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::setBoundingPolyConfig(const OAIGoogleCloudDatalabelingV1beta1BoundingPolyConfig &bounding_poly_config) {
    m_bounding_poly_config = bounding_poly_config;
    m_bounding_poly_config_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::is_bounding_poly_config_Set() const{
    return m_bounding_poly_config_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::is_bounding_poly_config_Valid() const{
    return m_bounding_poly_config_isValid;
}

OAIGoogleCloudDatalabelingV1beta1EventConfig OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::getEventConfig() const {
    return m_event_config;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::setEventConfig(const OAIGoogleCloudDatalabelingV1beta1EventConfig &event_config) {
    m_event_config = event_config;
    m_event_config_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::is_event_config_Set() const{
    return m_event_config_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::is_event_config_Valid() const{
    return m_event_config_isValid;
}

OAIGoogleCloudDatalabelingV1beta1HumanAnnotationConfig OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::getHumanAnnotationConfig() const {
    return m_human_annotation_config;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::setHumanAnnotationConfig(const OAIGoogleCloudDatalabelingV1beta1HumanAnnotationConfig &human_annotation_config) {
    m_human_annotation_config = human_annotation_config;
    m_human_annotation_config_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::is_human_annotation_config_Set() const{
    return m_human_annotation_config_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::is_human_annotation_config_Valid() const{
    return m_human_annotation_config_isValid;
}

OAIGoogleCloudDatalabelingV1beta1ImageClassificationConfig OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::getImageClassificationConfig() const {
    return m_image_classification_config;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::setImageClassificationConfig(const OAIGoogleCloudDatalabelingV1beta1ImageClassificationConfig &image_classification_config) {
    m_image_classification_config = image_classification_config;
    m_image_classification_config_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::is_image_classification_config_Set() const{
    return m_image_classification_config_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::is_image_classification_config_Valid() const{
    return m_image_classification_config_isValid;
}

OAIGoogleCloudDatalabelingV1beta1ObjectDetectionConfig OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::getObjectDetectionConfig() const {
    return m_object_detection_config;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::setObjectDetectionConfig(const OAIGoogleCloudDatalabelingV1beta1ObjectDetectionConfig &object_detection_config) {
    m_object_detection_config = object_detection_config;
    m_object_detection_config_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::is_object_detection_config_Set() const{
    return m_object_detection_config_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::is_object_detection_config_Valid() const{
    return m_object_detection_config_isValid;
}

OAIGoogleCloudDatalabelingV1beta1ObjectTrackingConfig OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::getObjectTrackingConfig() const {
    return m_object_tracking_config;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::setObjectTrackingConfig(const OAIGoogleCloudDatalabelingV1beta1ObjectTrackingConfig &object_tracking_config) {
    m_object_tracking_config = object_tracking_config;
    m_object_tracking_config_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::is_object_tracking_config_Set() const{
    return m_object_tracking_config_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::is_object_tracking_config_Valid() const{
    return m_object_tracking_config_isValid;
}

OAIGoogleCloudDatalabelingV1beta1PolylineConfig OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::getPolylineConfig() const {
    return m_polyline_config;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::setPolylineConfig(const OAIGoogleCloudDatalabelingV1beta1PolylineConfig &polyline_config) {
    m_polyline_config = polyline_config;
    m_polyline_config_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::is_polyline_config_Set() const{
    return m_polyline_config_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::is_polyline_config_Valid() const{
    return m_polyline_config_isValid;
}

OAIGoogleCloudDatalabelingV1beta1SegmentationConfig OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::getSegmentationConfig() const {
    return m_segmentation_config;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::setSegmentationConfig(const OAIGoogleCloudDatalabelingV1beta1SegmentationConfig &segmentation_config) {
    m_segmentation_config = segmentation_config;
    m_segmentation_config_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::is_segmentation_config_Set() const{
    return m_segmentation_config_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::is_segmentation_config_Valid() const{
    return m_segmentation_config_isValid;
}

OAIGoogleCloudDatalabelingV1beta1TextClassificationConfig OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::getTextClassificationConfig() const {
    return m_text_classification_config;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::setTextClassificationConfig(const OAIGoogleCloudDatalabelingV1beta1TextClassificationConfig &text_classification_config) {
    m_text_classification_config = text_classification_config;
    m_text_classification_config_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::is_text_classification_config_Set() const{
    return m_text_classification_config_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::is_text_classification_config_Valid() const{
    return m_text_classification_config_isValid;
}

OAIGoogleCloudDatalabelingV1beta1TextEntityExtractionConfig OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::getTextEntityExtractionConfig() const {
    return m_text_entity_extraction_config;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::setTextEntityExtractionConfig(const OAIGoogleCloudDatalabelingV1beta1TextEntityExtractionConfig &text_entity_extraction_config) {
    m_text_entity_extraction_config = text_entity_extraction_config;
    m_text_entity_extraction_config_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::is_text_entity_extraction_config_Set() const{
    return m_text_entity_extraction_config_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::is_text_entity_extraction_config_Valid() const{
    return m_text_entity_extraction_config_isValid;
}

OAIGoogleCloudDatalabelingV1beta1VideoClassificationConfig OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::getVideoClassificationConfig() const {
    return m_video_classification_config;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::setVideoClassificationConfig(const OAIGoogleCloudDatalabelingV1beta1VideoClassificationConfig &video_classification_config) {
    m_video_classification_config = video_classification_config;
    m_video_classification_config_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::is_video_classification_config_Set() const{
    return m_video_classification_config_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::is_video_classification_config_Valid() const{
    return m_video_classification_config_isValid;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bounding_poly_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_event_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_human_annotation_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_classification_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_detection_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_tracking_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_polyline_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_segmentation_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_classification_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_entity_extraction_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_classification_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
