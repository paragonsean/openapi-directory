/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig() {
    this->initializeModel();
}

OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::~OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig() {}

void OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::initializeModel() {

    m_annotated_dataset_description_isSet = false;
    m_annotated_dataset_description_isValid = false;

    m_annotated_dataset_display_name_isSet = false;
    m_annotated_dataset_display_name_isValid = false;

    m_contributor_emails_isSet = false;
    m_contributor_emails_isValid = false;

    m_instruction_isSet = false;
    m_instruction_isValid = false;

    m_label_group_isSet = false;
    m_label_group_isValid = false;

    m_language_code_isSet = false;
    m_language_code_isValid = false;

    m_question_duration_isSet = false;
    m_question_duration_isValid = false;

    m_replica_count_isSet = false;
    m_replica_count_isValid = false;

    m_user_email_address_isSet = false;
    m_user_email_address_isValid = false;
}

void OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::fromJsonObject(QJsonObject json) {

    m_annotated_dataset_description_isValid = ::OpenAPI::fromJsonValue(m_annotated_dataset_description, json[QString("annotatedDatasetDescription")]);
    m_annotated_dataset_description_isSet = !json[QString("annotatedDatasetDescription")].isNull() && m_annotated_dataset_description_isValid;

    m_annotated_dataset_display_name_isValid = ::OpenAPI::fromJsonValue(m_annotated_dataset_display_name, json[QString("annotatedDatasetDisplayName")]);
    m_annotated_dataset_display_name_isSet = !json[QString("annotatedDatasetDisplayName")].isNull() && m_annotated_dataset_display_name_isValid;

    m_contributor_emails_isValid = ::OpenAPI::fromJsonValue(m_contributor_emails, json[QString("contributorEmails")]);
    m_contributor_emails_isSet = !json[QString("contributorEmails")].isNull() && m_contributor_emails_isValid;

    m_instruction_isValid = ::OpenAPI::fromJsonValue(m_instruction, json[QString("instruction")]);
    m_instruction_isSet = !json[QString("instruction")].isNull() && m_instruction_isValid;

    m_label_group_isValid = ::OpenAPI::fromJsonValue(m_label_group, json[QString("labelGroup")]);
    m_label_group_isSet = !json[QString("labelGroup")].isNull() && m_label_group_isValid;

    m_language_code_isValid = ::OpenAPI::fromJsonValue(m_language_code, json[QString("languageCode")]);
    m_language_code_isSet = !json[QString("languageCode")].isNull() && m_language_code_isValid;

    m_question_duration_isValid = ::OpenAPI::fromJsonValue(m_question_duration, json[QString("questionDuration")]);
    m_question_duration_isSet = !json[QString("questionDuration")].isNull() && m_question_duration_isValid;

    m_replica_count_isValid = ::OpenAPI::fromJsonValue(m_replica_count, json[QString("replicaCount")]);
    m_replica_count_isSet = !json[QString("replicaCount")].isNull() && m_replica_count_isValid;

    m_user_email_address_isValid = ::OpenAPI::fromJsonValue(m_user_email_address, json[QString("userEmailAddress")]);
    m_user_email_address_isSet = !json[QString("userEmailAddress")].isNull() && m_user_email_address_isValid;
}

QString OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_annotated_dataset_description_isSet) {
        obj.insert(QString("annotatedDatasetDescription"), ::OpenAPI::toJsonValue(m_annotated_dataset_description));
    }
    if (m_annotated_dataset_display_name_isSet) {
        obj.insert(QString("annotatedDatasetDisplayName"), ::OpenAPI::toJsonValue(m_annotated_dataset_display_name));
    }
    if (m_contributor_emails.size() > 0) {
        obj.insert(QString("contributorEmails"), ::OpenAPI::toJsonValue(m_contributor_emails));
    }
    if (m_instruction_isSet) {
        obj.insert(QString("instruction"), ::OpenAPI::toJsonValue(m_instruction));
    }
    if (m_label_group_isSet) {
        obj.insert(QString("labelGroup"), ::OpenAPI::toJsonValue(m_label_group));
    }
    if (m_language_code_isSet) {
        obj.insert(QString("languageCode"), ::OpenAPI::toJsonValue(m_language_code));
    }
    if (m_question_duration_isSet) {
        obj.insert(QString("questionDuration"), ::OpenAPI::toJsonValue(m_question_duration));
    }
    if (m_replica_count_isSet) {
        obj.insert(QString("replicaCount"), ::OpenAPI::toJsonValue(m_replica_count));
    }
    if (m_user_email_address_isSet) {
        obj.insert(QString("userEmailAddress"), ::OpenAPI::toJsonValue(m_user_email_address));
    }
    return obj;
}

QString OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::getAnnotatedDatasetDescription() const {
    return m_annotated_dataset_description;
}
void OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::setAnnotatedDatasetDescription(const QString &annotated_dataset_description) {
    m_annotated_dataset_description = annotated_dataset_description;
    m_annotated_dataset_description_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::is_annotated_dataset_description_Set() const{
    return m_annotated_dataset_description_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::is_annotated_dataset_description_Valid() const{
    return m_annotated_dataset_description_isValid;
}

QString OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::getAnnotatedDatasetDisplayName() const {
    return m_annotated_dataset_display_name;
}
void OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::setAnnotatedDatasetDisplayName(const QString &annotated_dataset_display_name) {
    m_annotated_dataset_display_name = annotated_dataset_display_name;
    m_annotated_dataset_display_name_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::is_annotated_dataset_display_name_Set() const{
    return m_annotated_dataset_display_name_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::is_annotated_dataset_display_name_Valid() const{
    return m_annotated_dataset_display_name_isValid;
}

QList<QString> OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::getContributorEmails() const {
    return m_contributor_emails;
}
void OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::setContributorEmails(const QList<QString> &contributor_emails) {
    m_contributor_emails = contributor_emails;
    m_contributor_emails_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::is_contributor_emails_Set() const{
    return m_contributor_emails_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::is_contributor_emails_Valid() const{
    return m_contributor_emails_isValid;
}

QString OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::getInstruction() const {
    return m_instruction;
}
void OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::setInstruction(const QString &instruction) {
    m_instruction = instruction;
    m_instruction_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::is_instruction_Set() const{
    return m_instruction_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::is_instruction_Valid() const{
    return m_instruction_isValid;
}

QString OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::getLabelGroup() const {
    return m_label_group;
}
void OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::setLabelGroup(const QString &label_group) {
    m_label_group = label_group;
    m_label_group_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::is_label_group_Set() const{
    return m_label_group_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::is_label_group_Valid() const{
    return m_label_group_isValid;
}

QString OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::getLanguageCode() const {
    return m_language_code;
}
void OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::setLanguageCode(const QString &language_code) {
    m_language_code = language_code;
    m_language_code_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::is_language_code_Set() const{
    return m_language_code_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::is_language_code_Valid() const{
    return m_language_code_isValid;
}

QString OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::getQuestionDuration() const {
    return m_question_duration;
}
void OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::setQuestionDuration(const QString &question_duration) {
    m_question_duration = question_duration;
    m_question_duration_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::is_question_duration_Set() const{
    return m_question_duration_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::is_question_duration_Valid() const{
    return m_question_duration_isValid;
}

qint32 OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::getReplicaCount() const {
    return m_replica_count;
}
void OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::setReplicaCount(const qint32 &replica_count) {
    m_replica_count = replica_count;
    m_replica_count_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::is_replica_count_Set() const{
    return m_replica_count_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::is_replica_count_Valid() const{
    return m_replica_count_isValid;
}

QString OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::getUserEmailAddress() const {
    return m_user_email_address;
}
void OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::setUserEmailAddress(const QString &user_email_address) {
    m_user_email_address = user_email_address;
    m_user_email_address_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::is_user_email_address_Set() const{
    return m_user_email_address_isSet;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::is_user_email_address_Valid() const{
    return m_user_email_address_isValid;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_annotated_dataset_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_annotated_dataset_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contributor_emails.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_instruction_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_group_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_question_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_replica_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
