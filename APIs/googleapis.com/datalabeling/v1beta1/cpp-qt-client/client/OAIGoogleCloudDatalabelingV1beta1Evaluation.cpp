/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatalabelingV1beta1Evaluation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatalabelingV1beta1Evaluation::OAIGoogleCloudDatalabelingV1beta1Evaluation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatalabelingV1beta1Evaluation::OAIGoogleCloudDatalabelingV1beta1Evaluation() {
    this->initializeModel();
}

OAIGoogleCloudDatalabelingV1beta1Evaluation::~OAIGoogleCloudDatalabelingV1beta1Evaluation() {}

void OAIGoogleCloudDatalabelingV1beta1Evaluation::initializeModel() {

    m_annotation_type_isSet = false;
    m_annotation_type_isValid = false;

    m_config_isSet = false;
    m_config_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_evaluated_item_count_isSet = false;
    m_evaluated_item_count_isValid = false;

    m_evaluation_job_run_time_isSet = false;
    m_evaluation_job_run_time_isValid = false;

    m_evaluation_metrics_isSet = false;
    m_evaluation_metrics_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIGoogleCloudDatalabelingV1beta1Evaluation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatalabelingV1beta1Evaluation::fromJsonObject(QJsonObject json) {

    m_annotation_type_isValid = ::OpenAPI::fromJsonValue(m_annotation_type, json[QString("annotationType")]);
    m_annotation_type_isSet = !json[QString("annotationType")].isNull() && m_annotation_type_isValid;

    m_config_isValid = ::OpenAPI::fromJsonValue(m_config, json[QString("config")]);
    m_config_isSet = !json[QString("config")].isNull() && m_config_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_evaluated_item_count_isValid = ::OpenAPI::fromJsonValue(m_evaluated_item_count, json[QString("evaluatedItemCount")]);
    m_evaluated_item_count_isSet = !json[QString("evaluatedItemCount")].isNull() && m_evaluated_item_count_isValid;

    m_evaluation_job_run_time_isValid = ::OpenAPI::fromJsonValue(m_evaluation_job_run_time, json[QString("evaluationJobRunTime")]);
    m_evaluation_job_run_time_isSet = !json[QString("evaluationJobRunTime")].isNull() && m_evaluation_job_run_time_isValid;

    m_evaluation_metrics_isValid = ::OpenAPI::fromJsonValue(m_evaluation_metrics, json[QString("evaluationMetrics")]);
    m_evaluation_metrics_isSet = !json[QString("evaluationMetrics")].isNull() && m_evaluation_metrics_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1Evaluation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatalabelingV1beta1Evaluation::asJsonObject() const {
    QJsonObject obj;
    if (m_annotation_type_isSet) {
        obj.insert(QString("annotationType"), ::OpenAPI::toJsonValue(m_annotation_type));
    }
    if (m_config.isSet()) {
        obj.insert(QString("config"), ::OpenAPI::toJsonValue(m_config));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_evaluated_item_count_isSet) {
        obj.insert(QString("evaluatedItemCount"), ::OpenAPI::toJsonValue(m_evaluated_item_count));
    }
    if (m_evaluation_job_run_time_isSet) {
        obj.insert(QString("evaluationJobRunTime"), ::OpenAPI::toJsonValue(m_evaluation_job_run_time));
    }
    if (m_evaluation_metrics.isSet()) {
        obj.insert(QString("evaluationMetrics"), ::OpenAPI::toJsonValue(m_evaluation_metrics));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIGoogleCloudDatalabelingV1beta1Evaluation::getAnnotationType() const {
    return m_annotation_type;
}
void OAIGoogleCloudDatalabelingV1beta1Evaluation::setAnnotationType(const QString &annotation_type) {
    m_annotation_type = annotation_type;
    m_annotation_type_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Evaluation::is_annotation_type_Set() const{
    return m_annotation_type_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Evaluation::is_annotation_type_Valid() const{
    return m_annotation_type_isValid;
}

OAIGoogleCloudDatalabelingV1beta1EvaluationConfig OAIGoogleCloudDatalabelingV1beta1Evaluation::getConfig() const {
    return m_config;
}
void OAIGoogleCloudDatalabelingV1beta1Evaluation::setConfig(const OAIGoogleCloudDatalabelingV1beta1EvaluationConfig &config) {
    m_config = config;
    m_config_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Evaluation::is_config_Set() const{
    return m_config_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Evaluation::is_config_Valid() const{
    return m_config_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1Evaluation::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDatalabelingV1beta1Evaluation::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Evaluation::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Evaluation::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1Evaluation::getEvaluatedItemCount() const {
    return m_evaluated_item_count;
}
void OAIGoogleCloudDatalabelingV1beta1Evaluation::setEvaluatedItemCount(const QString &evaluated_item_count) {
    m_evaluated_item_count = evaluated_item_count;
    m_evaluated_item_count_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Evaluation::is_evaluated_item_count_Set() const{
    return m_evaluated_item_count_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Evaluation::is_evaluated_item_count_Valid() const{
    return m_evaluated_item_count_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1Evaluation::getEvaluationJobRunTime() const {
    return m_evaluation_job_run_time;
}
void OAIGoogleCloudDatalabelingV1beta1Evaluation::setEvaluationJobRunTime(const QString &evaluation_job_run_time) {
    m_evaluation_job_run_time = evaluation_job_run_time;
    m_evaluation_job_run_time_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Evaluation::is_evaluation_job_run_time_Set() const{
    return m_evaluation_job_run_time_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Evaluation::is_evaluation_job_run_time_Valid() const{
    return m_evaluation_job_run_time_isValid;
}

OAIGoogleCloudDatalabelingV1beta1EvaluationMetrics OAIGoogleCloudDatalabelingV1beta1Evaluation::getEvaluationMetrics() const {
    return m_evaluation_metrics;
}
void OAIGoogleCloudDatalabelingV1beta1Evaluation::setEvaluationMetrics(const OAIGoogleCloudDatalabelingV1beta1EvaluationMetrics &evaluation_metrics) {
    m_evaluation_metrics = evaluation_metrics;
    m_evaluation_metrics_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Evaluation::is_evaluation_metrics_Set() const{
    return m_evaluation_metrics_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Evaluation::is_evaluation_metrics_Valid() const{
    return m_evaluation_metrics_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1Evaluation::getName() const {
    return m_name;
}
void OAIGoogleCloudDatalabelingV1beta1Evaluation::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1Evaluation::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1Evaluation::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGoogleCloudDatalabelingV1beta1Evaluation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_annotation_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_evaluated_item_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_evaluation_job_run_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_evaluation_metrics.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatalabelingV1beta1Evaluation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
