/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest() {
    this->initializeModel();
}

OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::~OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest() {}

void OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::initializeModel() {

    m_basic_config_isSet = false;
    m_basic_config_isValid = false;

    m_event_config_isSet = false;
    m_event_config_isValid = false;

    m_feature_isSet = false;
    m_feature_isValid = false;

    m_object_detection_config_isSet = false;
    m_object_detection_config_isValid = false;

    m_object_tracking_config_isSet = false;
    m_object_tracking_config_isValid = false;

    m_video_classification_config_isSet = false;
    m_video_classification_config_isValid = false;
}

void OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::fromJsonObject(QJsonObject json) {

    m_basic_config_isValid = ::OpenAPI::fromJsonValue(m_basic_config, json[QString("basicConfig")]);
    m_basic_config_isSet = !json[QString("basicConfig")].isNull() && m_basic_config_isValid;

    m_event_config_isValid = ::OpenAPI::fromJsonValue(m_event_config, json[QString("eventConfig")]);
    m_event_config_isSet = !json[QString("eventConfig")].isNull() && m_event_config_isValid;

    m_feature_isValid = ::OpenAPI::fromJsonValue(m_feature, json[QString("feature")]);
    m_feature_isSet = !json[QString("feature")].isNull() && m_feature_isValid;

    m_object_detection_config_isValid = ::OpenAPI::fromJsonValue(m_object_detection_config, json[QString("objectDetectionConfig")]);
    m_object_detection_config_isSet = !json[QString("objectDetectionConfig")].isNull() && m_object_detection_config_isValid;

    m_object_tracking_config_isValid = ::OpenAPI::fromJsonValue(m_object_tracking_config, json[QString("objectTrackingConfig")]);
    m_object_tracking_config_isSet = !json[QString("objectTrackingConfig")].isNull() && m_object_tracking_config_isValid;

    m_video_classification_config_isValid = ::OpenAPI::fromJsonValue(m_video_classification_config, json[QString("videoClassificationConfig")]);
    m_video_classification_config_isSet = !json[QString("videoClassificationConfig")].isNull() && m_video_classification_config_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_basic_config.isSet()) {
        obj.insert(QString("basicConfig"), ::OpenAPI::toJsonValue(m_basic_config));
    }
    if (m_event_config.isSet()) {
        obj.insert(QString("eventConfig"), ::OpenAPI::toJsonValue(m_event_config));
    }
    if (m_feature_isSet) {
        obj.insert(QString("feature"), ::OpenAPI::toJsonValue(m_feature));
    }
    if (m_object_detection_config.isSet()) {
        obj.insert(QString("objectDetectionConfig"), ::OpenAPI::toJsonValue(m_object_detection_config));
    }
    if (m_object_tracking_config.isSet()) {
        obj.insert(QString("objectTrackingConfig"), ::OpenAPI::toJsonValue(m_object_tracking_config));
    }
    if (m_video_classification_config.isSet()) {
        obj.insert(QString("videoClassificationConfig"), ::OpenAPI::toJsonValue(m_video_classification_config));
    }
    return obj;
}

OAIGoogleCloudDatalabelingV1beta1HumanAnnotationConfig OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::getBasicConfig() const {
    return m_basic_config;
}
void OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::setBasicConfig(const OAIGoogleCloudDatalabelingV1beta1HumanAnnotationConfig &basic_config) {
    m_basic_config = basic_config;
    m_basic_config_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::is_basic_config_Set() const{
    return m_basic_config_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::is_basic_config_Valid() const{
    return m_basic_config_isValid;
}

OAIGoogleCloudDatalabelingV1beta1EventConfig OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::getEventConfig() const {
    return m_event_config;
}
void OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::setEventConfig(const OAIGoogleCloudDatalabelingV1beta1EventConfig &event_config) {
    m_event_config = event_config;
    m_event_config_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::is_event_config_Set() const{
    return m_event_config_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::is_event_config_Valid() const{
    return m_event_config_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::getFeature() const {
    return m_feature;
}
void OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::setFeature(const QString &feature) {
    m_feature = feature;
    m_feature_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::is_feature_Set() const{
    return m_feature_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::is_feature_Valid() const{
    return m_feature_isValid;
}

OAIGoogleCloudDatalabelingV1beta1ObjectDetectionConfig OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::getObjectDetectionConfig() const {
    return m_object_detection_config;
}
void OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::setObjectDetectionConfig(const OAIGoogleCloudDatalabelingV1beta1ObjectDetectionConfig &object_detection_config) {
    m_object_detection_config = object_detection_config;
    m_object_detection_config_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::is_object_detection_config_Set() const{
    return m_object_detection_config_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::is_object_detection_config_Valid() const{
    return m_object_detection_config_isValid;
}

OAIGoogleCloudDatalabelingV1beta1ObjectTrackingConfig OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::getObjectTrackingConfig() const {
    return m_object_tracking_config;
}
void OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::setObjectTrackingConfig(const OAIGoogleCloudDatalabelingV1beta1ObjectTrackingConfig &object_tracking_config) {
    m_object_tracking_config = object_tracking_config;
    m_object_tracking_config_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::is_object_tracking_config_Set() const{
    return m_object_tracking_config_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::is_object_tracking_config_Valid() const{
    return m_object_tracking_config_isValid;
}

OAIGoogleCloudDatalabelingV1beta1VideoClassificationConfig OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::getVideoClassificationConfig() const {
    return m_video_classification_config;
}
void OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::setVideoClassificationConfig(const OAIGoogleCloudDatalabelingV1beta1VideoClassificationConfig &video_classification_config) {
    m_video_classification_config = video_classification_config;
    m_video_classification_config_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::is_video_classification_config_Set() const{
    return m_video_classification_config_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::is_video_classification_config_Valid() const{
    return m_video_classification_config_isValid;
}

bool OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_basic_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_event_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_feature_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_detection_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_tracking_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_classification_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatalabelingV1beta1LabelVideoRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
