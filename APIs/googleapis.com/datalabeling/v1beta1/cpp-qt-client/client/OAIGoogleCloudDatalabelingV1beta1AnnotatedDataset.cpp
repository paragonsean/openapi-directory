/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset() {
    this->initializeModel();
}

OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::~OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset() {}

void OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::initializeModel() {

    m_annotation_source_isSet = false;
    m_annotation_source_isValid = false;

    m_annotation_type_isSet = false;
    m_annotation_type_isValid = false;

    m_blocking_resources_isSet = false;
    m_blocking_resources_isValid = false;

    m_completed_example_count_isSet = false;
    m_completed_example_count_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_example_count_isSet = false;
    m_example_count_isValid = false;

    m_label_stats_isSet = false;
    m_label_stats_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::fromJsonObject(QJsonObject json) {

    m_annotation_source_isValid = ::OpenAPI::fromJsonValue(m_annotation_source, json[QString("annotationSource")]);
    m_annotation_source_isSet = !json[QString("annotationSource")].isNull() && m_annotation_source_isValid;

    m_annotation_type_isValid = ::OpenAPI::fromJsonValue(m_annotation_type, json[QString("annotationType")]);
    m_annotation_type_isSet = !json[QString("annotationType")].isNull() && m_annotation_type_isValid;

    m_blocking_resources_isValid = ::OpenAPI::fromJsonValue(m_blocking_resources, json[QString("blockingResources")]);
    m_blocking_resources_isSet = !json[QString("blockingResources")].isNull() && m_blocking_resources_isValid;

    m_completed_example_count_isValid = ::OpenAPI::fromJsonValue(m_completed_example_count, json[QString("completedExampleCount")]);
    m_completed_example_count_isSet = !json[QString("completedExampleCount")].isNull() && m_completed_example_count_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_example_count_isValid = ::OpenAPI::fromJsonValue(m_example_count, json[QString("exampleCount")]);
    m_example_count_isSet = !json[QString("exampleCount")].isNull() && m_example_count_isValid;

    m_label_stats_isValid = ::OpenAPI::fromJsonValue(m_label_stats, json[QString("labelStats")]);
    m_label_stats_isSet = !json[QString("labelStats")].isNull() && m_label_stats_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::asJsonObject() const {
    QJsonObject obj;
    if (m_annotation_source_isSet) {
        obj.insert(QString("annotationSource"), ::OpenAPI::toJsonValue(m_annotation_source));
    }
    if (m_annotation_type_isSet) {
        obj.insert(QString("annotationType"), ::OpenAPI::toJsonValue(m_annotation_type));
    }
    if (m_blocking_resources.size() > 0) {
        obj.insert(QString("blockingResources"), ::OpenAPI::toJsonValue(m_blocking_resources));
    }
    if (m_completed_example_count_isSet) {
        obj.insert(QString("completedExampleCount"), ::OpenAPI::toJsonValue(m_completed_example_count));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_example_count_isSet) {
        obj.insert(QString("exampleCount"), ::OpenAPI::toJsonValue(m_example_count));
    }
    if (m_label_stats.isSet()) {
        obj.insert(QString("labelStats"), ::OpenAPI::toJsonValue(m_label_stats));
    }
    if (m_metadata.isSet()) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::getAnnotationSource() const {
    return m_annotation_source;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::setAnnotationSource(const QString &annotation_source) {
    m_annotation_source = annotation_source;
    m_annotation_source_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::is_annotation_source_Set() const{
    return m_annotation_source_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::is_annotation_source_Valid() const{
    return m_annotation_source_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::getAnnotationType() const {
    return m_annotation_type;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::setAnnotationType(const QString &annotation_type) {
    m_annotation_type = annotation_type;
    m_annotation_type_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::is_annotation_type_Set() const{
    return m_annotation_type_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::is_annotation_type_Valid() const{
    return m_annotation_type_isValid;
}

QList<QString> OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::getBlockingResources() const {
    return m_blocking_resources;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::setBlockingResources(const QList<QString> &blocking_resources) {
    m_blocking_resources = blocking_resources;
    m_blocking_resources_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::is_blocking_resources_Set() const{
    return m_blocking_resources_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::is_blocking_resources_Valid() const{
    return m_blocking_resources_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::getCompletedExampleCount() const {
    return m_completed_example_count;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::setCompletedExampleCount(const QString &completed_example_count) {
    m_completed_example_count = completed_example_count;
    m_completed_example_count_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::is_completed_example_count_Set() const{
    return m_completed_example_count_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::is_completed_example_count_Valid() const{
    return m_completed_example_count_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::getDescription() const {
    return m_description;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::getExampleCount() const {
    return m_example_count;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::setExampleCount(const QString &example_count) {
    m_example_count = example_count;
    m_example_count_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::is_example_count_Set() const{
    return m_example_count_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::is_example_count_Valid() const{
    return m_example_count_isValid;
}

OAIGoogleCloudDatalabelingV1beta1LabelStats OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::getLabelStats() const {
    return m_label_stats;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::setLabelStats(const OAIGoogleCloudDatalabelingV1beta1LabelStats &label_stats) {
    m_label_stats = label_stats;
    m_label_stats_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::is_label_stats_Set() const{
    return m_label_stats_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::is_label_stats_Valid() const{
    return m_label_stats_isValid;
}

OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::getMetadata() const {
    return m_metadata;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::setMetadata(const OAIGoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QString OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::getName() const {
    return m_name;
}
void OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_annotation_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_annotation_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_blocking_resources.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_completed_example_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_example_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_stats.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatalabelingV1beta1AnnotatedDataset::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
