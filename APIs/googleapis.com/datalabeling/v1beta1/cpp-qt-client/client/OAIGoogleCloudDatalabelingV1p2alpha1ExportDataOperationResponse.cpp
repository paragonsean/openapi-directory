/**
 * Data Labeling API
 * Public API for Google Cloud AI Data Labeling Service.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse() {
    this->initializeModel();
}

OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::~OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse() {}

void OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::initializeModel() {

    m_annotated_dataset_isSet = false;
    m_annotated_dataset_isValid = false;

    m_dataset_isSet = false;
    m_dataset_isValid = false;

    m_export_count_isSet = false;
    m_export_count_isValid = false;

    m_label_stats_isSet = false;
    m_label_stats_isValid = false;

    m_output_config_isSet = false;
    m_output_config_isValid = false;

    m_total_count_isSet = false;
    m_total_count_isValid = false;
}

void OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::fromJsonObject(QJsonObject json) {

    m_annotated_dataset_isValid = ::OpenAPI::fromJsonValue(m_annotated_dataset, json[QString("annotatedDataset")]);
    m_annotated_dataset_isSet = !json[QString("annotatedDataset")].isNull() && m_annotated_dataset_isValid;

    m_dataset_isValid = ::OpenAPI::fromJsonValue(m_dataset, json[QString("dataset")]);
    m_dataset_isSet = !json[QString("dataset")].isNull() && m_dataset_isValid;

    m_export_count_isValid = ::OpenAPI::fromJsonValue(m_export_count, json[QString("exportCount")]);
    m_export_count_isSet = !json[QString("exportCount")].isNull() && m_export_count_isValid;

    m_label_stats_isValid = ::OpenAPI::fromJsonValue(m_label_stats, json[QString("labelStats")]);
    m_label_stats_isSet = !json[QString("labelStats")].isNull() && m_label_stats_isValid;

    m_output_config_isValid = ::OpenAPI::fromJsonValue(m_output_config, json[QString("outputConfig")]);
    m_output_config_isSet = !json[QString("outputConfig")].isNull() && m_output_config_isValid;

    m_total_count_isValid = ::OpenAPI::fromJsonValue(m_total_count, json[QString("totalCount")]);
    m_total_count_isSet = !json[QString("totalCount")].isNull() && m_total_count_isValid;
}

QString OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_annotated_dataset_isSet) {
        obj.insert(QString("annotatedDataset"), ::OpenAPI::toJsonValue(m_annotated_dataset));
    }
    if (m_dataset_isSet) {
        obj.insert(QString("dataset"), ::OpenAPI::toJsonValue(m_dataset));
    }
    if (m_export_count_isSet) {
        obj.insert(QString("exportCount"), ::OpenAPI::toJsonValue(m_export_count));
    }
    if (m_label_stats.isSet()) {
        obj.insert(QString("labelStats"), ::OpenAPI::toJsonValue(m_label_stats));
    }
    if (m_output_config.isSet()) {
        obj.insert(QString("outputConfig"), ::OpenAPI::toJsonValue(m_output_config));
    }
    if (m_total_count_isSet) {
        obj.insert(QString("totalCount"), ::OpenAPI::toJsonValue(m_total_count));
    }
    return obj;
}

QString OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::getAnnotatedDataset() const {
    return m_annotated_dataset;
}
void OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::setAnnotatedDataset(const QString &annotated_dataset) {
    m_annotated_dataset = annotated_dataset;
    m_annotated_dataset_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::is_annotated_dataset_Set() const{
    return m_annotated_dataset_isSet;
}

bool OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::is_annotated_dataset_Valid() const{
    return m_annotated_dataset_isValid;
}

QString OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::getDataset() const {
    return m_dataset;
}
void OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::setDataset(const QString &dataset) {
    m_dataset = dataset;
    m_dataset_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::is_dataset_Set() const{
    return m_dataset_isSet;
}

bool OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::is_dataset_Valid() const{
    return m_dataset_isValid;
}

qint32 OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::getExportCount() const {
    return m_export_count;
}
void OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::setExportCount(const qint32 &export_count) {
    m_export_count = export_count;
    m_export_count_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::is_export_count_Set() const{
    return m_export_count_isSet;
}

bool OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::is_export_count_Valid() const{
    return m_export_count_isValid;
}

OAIGoogleCloudDatalabelingV1p2alpha1LabelStats OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::getLabelStats() const {
    return m_label_stats;
}
void OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::setLabelStats(const OAIGoogleCloudDatalabelingV1p2alpha1LabelStats &label_stats) {
    m_label_stats = label_stats;
    m_label_stats_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::is_label_stats_Set() const{
    return m_label_stats_isSet;
}

bool OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::is_label_stats_Valid() const{
    return m_label_stats_isValid;
}

OAIGoogleCloudDatalabelingV1p2alpha1OutputConfig OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::getOutputConfig() const {
    return m_output_config;
}
void OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::setOutputConfig(const OAIGoogleCloudDatalabelingV1p2alpha1OutputConfig &output_config) {
    m_output_config = output_config;
    m_output_config_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::is_output_config_Set() const{
    return m_output_config_isSet;
}

bool OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::is_output_config_Valid() const{
    return m_output_config_isValid;
}

qint32 OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::getTotalCount() const {
    return m_total_count;
}
void OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::setTotalCount(const qint32 &total_count) {
    m_total_count = total_count;
    m_total_count_isSet = true;
}

bool OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::is_total_count_Set() const{
    return m_total_count_isSet;
}

bool OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::is_total_count_Valid() const{
    return m_total_count_isValid;
}

bool OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_annotated_dataset_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dataset_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_export_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_stats.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
