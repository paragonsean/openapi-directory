# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LocalizedString(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: str=None, locale: str=None, value: str=None):
        """LocalizedString - a model defined in OpenAPI

        :param kind: The kind of this LocalizedString.
        :param locale: The locale of this LocalizedString.
        :param value: The value of this LocalizedString.
        """
        self.openapi_types = {
            'kind': str,
            'locale': str,
            'value': str
        }

        self.attribute_map = {
            'kind': 'kind',
            'locale': 'locale',
            'value': 'value'
        }

        self._kind = kind
        self._locale = locale
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LocalizedString':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LocalizedString of this LocalizedString.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this LocalizedString.

        Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#localizedString`.

        :return: The kind of this LocalizedString.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this LocalizedString.

        Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#localizedString`.

        :param kind: The kind of this LocalizedString.
        :type kind: str
        """

        self._kind = kind

    @property
    def locale(self):
        """Gets the locale of this LocalizedString.

        The locale string.

        :return: The locale of this LocalizedString.
        :rtype: str
        """
        return self._locale

    @locale.setter
    def locale(self, locale):
        """Sets the locale of this LocalizedString.

        The locale string.

        :param locale: The locale of this LocalizedString.
        :type locale: str
        """

        self._locale = locale

    @property
    def value(self):
        """Gets the value of this LocalizedString.

        The string value.

        :return: The value of this LocalizedString.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this LocalizedString.

        The string value.

        :param value: The value of this LocalizedString.
        :type value: str
        """

        self._value = value
