# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.localized_string_bundle import LocalizedStringBundle
from openapi_server import util


class GamesNumberAffixConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, few: LocalizedStringBundle=None, many: LocalizedStringBundle=None, one: LocalizedStringBundle=None, other: LocalizedStringBundle=None, two: LocalizedStringBundle=None, zero: LocalizedStringBundle=None):
        """GamesNumberAffixConfiguration - a model defined in OpenAPI

        :param few: The few of this GamesNumberAffixConfiguration.
        :param many: The many of this GamesNumberAffixConfiguration.
        :param one: The one of this GamesNumberAffixConfiguration.
        :param other: The other of this GamesNumberAffixConfiguration.
        :param two: The two of this GamesNumberAffixConfiguration.
        :param zero: The zero of this GamesNumberAffixConfiguration.
        """
        self.openapi_types = {
            'few': LocalizedStringBundle,
            'many': LocalizedStringBundle,
            'one': LocalizedStringBundle,
            'other': LocalizedStringBundle,
            'two': LocalizedStringBundle,
            'zero': LocalizedStringBundle
        }

        self.attribute_map = {
            'few': 'few',
            'many': 'many',
            'one': 'one',
            'other': 'other',
            'two': 'two',
            'zero': 'zero'
        }

        self._few = few
        self._many = many
        self._one = one
        self._other = other
        self._two = two
        self._zero = zero

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GamesNumberAffixConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GamesNumberAffixConfiguration of this GamesNumberAffixConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def few(self):
        """Gets the few of this GamesNumberAffixConfiguration.


        :return: The few of this GamesNumberAffixConfiguration.
        :rtype: LocalizedStringBundle
        """
        return self._few

    @few.setter
    def few(self, few):
        """Sets the few of this GamesNumberAffixConfiguration.


        :param few: The few of this GamesNumberAffixConfiguration.
        :type few: LocalizedStringBundle
        """

        self._few = few

    @property
    def many(self):
        """Gets the many of this GamesNumberAffixConfiguration.


        :return: The many of this GamesNumberAffixConfiguration.
        :rtype: LocalizedStringBundle
        """
        return self._many

    @many.setter
    def many(self, many):
        """Sets the many of this GamesNumberAffixConfiguration.


        :param many: The many of this GamesNumberAffixConfiguration.
        :type many: LocalizedStringBundle
        """

        self._many = many

    @property
    def one(self):
        """Gets the one of this GamesNumberAffixConfiguration.


        :return: The one of this GamesNumberAffixConfiguration.
        :rtype: LocalizedStringBundle
        """
        return self._one

    @one.setter
    def one(self, one):
        """Sets the one of this GamesNumberAffixConfiguration.


        :param one: The one of this GamesNumberAffixConfiguration.
        :type one: LocalizedStringBundle
        """

        self._one = one

    @property
    def other(self):
        """Gets the other of this GamesNumberAffixConfiguration.


        :return: The other of this GamesNumberAffixConfiguration.
        :rtype: LocalizedStringBundle
        """
        return self._other

    @other.setter
    def other(self, other):
        """Sets the other of this GamesNumberAffixConfiguration.


        :param other: The other of this GamesNumberAffixConfiguration.
        :type other: LocalizedStringBundle
        """

        self._other = other

    @property
    def two(self):
        """Gets the two of this GamesNumberAffixConfiguration.


        :return: The two of this GamesNumberAffixConfiguration.
        :rtype: LocalizedStringBundle
        """
        return self._two

    @two.setter
    def two(self, two):
        """Sets the two of this GamesNumberAffixConfiguration.


        :param two: The two of this GamesNumberAffixConfiguration.
        :type two: LocalizedStringBundle
        """

        self._two = two

    @property
    def zero(self):
        """Gets the zero of this GamesNumberAffixConfiguration.


        :return: The zero of this GamesNumberAffixConfiguration.
        :rtype: LocalizedStringBundle
        """
        return self._zero

    @zero.setter
    def zero(self, zero):
        """Sets the zero of this GamesNumberAffixConfiguration.


        :param zero: The zero of this GamesNumberAffixConfiguration.
        :type zero: LocalizedStringBundle
        """

        self._zero = zero
