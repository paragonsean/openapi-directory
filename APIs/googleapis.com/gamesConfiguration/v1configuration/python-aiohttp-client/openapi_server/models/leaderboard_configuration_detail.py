# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.games_number_format_configuration import GamesNumberFormatConfiguration
from openapi_server.models.localized_string_bundle import LocalizedStringBundle
from openapi_server import util


class LeaderboardConfigurationDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, icon_url: str=None, kind: str=None, name: LocalizedStringBundle=None, score_format: GamesNumberFormatConfiguration=None, sort_rank: int=None):
        """LeaderboardConfigurationDetail - a model defined in OpenAPI

        :param icon_url: The icon_url of this LeaderboardConfigurationDetail.
        :param kind: The kind of this LeaderboardConfigurationDetail.
        :param name: The name of this LeaderboardConfigurationDetail.
        :param score_format: The score_format of this LeaderboardConfigurationDetail.
        :param sort_rank: The sort_rank of this LeaderboardConfigurationDetail.
        """
        self.openapi_types = {
            'icon_url': str,
            'kind': str,
            'name': LocalizedStringBundle,
            'score_format': GamesNumberFormatConfiguration,
            'sort_rank': int
        }

        self.attribute_map = {
            'icon_url': 'iconUrl',
            'kind': 'kind',
            'name': 'name',
            'score_format': 'scoreFormat',
            'sort_rank': 'sortRank'
        }

        self._icon_url = icon_url
        self._kind = kind
        self._name = name
        self._score_format = score_format
        self._sort_rank = sort_rank

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LeaderboardConfigurationDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LeaderboardConfigurationDetail of this LeaderboardConfigurationDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def icon_url(self):
        """Gets the icon_url of this LeaderboardConfigurationDetail.

        The icon url of this leaderboard. Writes to this field are ignored.

        :return: The icon_url of this LeaderboardConfigurationDetail.
        :rtype: str
        """
        return self._icon_url

    @icon_url.setter
    def icon_url(self, icon_url):
        """Sets the icon_url of this LeaderboardConfigurationDetail.

        The icon url of this leaderboard. Writes to this field are ignored.

        :param icon_url: The icon_url of this LeaderboardConfigurationDetail.
        :type icon_url: str
        """

        self._icon_url = icon_url

    @property
    def kind(self):
        """Gets the kind of this LeaderboardConfigurationDetail.

        Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#leaderboardConfigurationDetail`.

        :return: The kind of this LeaderboardConfigurationDetail.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this LeaderboardConfigurationDetail.

        Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#leaderboardConfigurationDetail`.

        :param kind: The kind of this LeaderboardConfigurationDetail.
        :type kind: str
        """

        self._kind = kind

    @property
    def name(self):
        """Gets the name of this LeaderboardConfigurationDetail.


        :return: The name of this LeaderboardConfigurationDetail.
        :rtype: LocalizedStringBundle
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this LeaderboardConfigurationDetail.


        :param name: The name of this LeaderboardConfigurationDetail.
        :type name: LocalizedStringBundle
        """

        self._name = name

    @property
    def score_format(self):
        """Gets the score_format of this LeaderboardConfigurationDetail.


        :return: The score_format of this LeaderboardConfigurationDetail.
        :rtype: GamesNumberFormatConfiguration
        """
        return self._score_format

    @score_format.setter
    def score_format(self, score_format):
        """Sets the score_format of this LeaderboardConfigurationDetail.


        :param score_format: The score_format of this LeaderboardConfigurationDetail.
        :type score_format: GamesNumberFormatConfiguration
        """

        self._score_format = score_format

    @property
    def sort_rank(self):
        """Gets the sort_rank of this LeaderboardConfigurationDetail.

        The sort rank of this leaderboard. Writes to this field are ignored.

        :return: The sort_rank of this LeaderboardConfigurationDetail.
        :rtype: int
        """
        return self._sort_rank

    @sort_rank.setter
    def sort_rank(self, sort_rank):
        """Sets the sort_rank of this LeaderboardConfigurationDetail.

        The sort rank of this leaderboard. Writes to this field are ignored.

        :param sort_rank: The sort_rank of this LeaderboardConfigurationDetail.
        :type sort_rank: int
        """

        self._sort_rank = sort_rank
