/**
 * Google Play Game Services Publishing API
 * The Google Play Game Services Publishing API allows developers to configure their games in Game Services.
 *
 * The version of the OpenAPI document: v1configuration
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AchievementConfiguration from './model/AchievementConfiguration';
import AchievementConfigurationDetail from './model/AchievementConfigurationDetail';
import AchievementConfigurationListResponse from './model/AchievementConfigurationListResponse';
import GamesNumberAffixConfiguration from './model/GamesNumberAffixConfiguration';
import GamesNumberFormatConfiguration from './model/GamesNumberFormatConfiguration';
import LeaderboardConfiguration from './model/LeaderboardConfiguration';
import LeaderboardConfigurationDetail from './model/LeaderboardConfigurationDetail';
import LeaderboardConfigurationListResponse from './model/LeaderboardConfigurationListResponse';
import LocalizedString from './model/LocalizedString';
import LocalizedStringBundle from './model/LocalizedStringBundle';
import AchievementConfigurationsApi from './api/AchievementConfigurationsApi';
import LeaderboardConfigurationsApi from './api/LeaderboardConfigurationsApi';


/**
* The Google Play Game Services Publishing API allows developers to configure their games in Game Services..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var GooglePlayGameServicesPublishingApi = require('index'); // See note below*.
* var xxxSvc = new GooglePlayGameServicesPublishingApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new GooglePlayGameServicesPublishingApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new GooglePlayGameServicesPublishingApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new GooglePlayGameServicesPublishingApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1configuration
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AchievementConfiguration model constructor.
     * @property {module:model/AchievementConfiguration}
     */
    AchievementConfiguration,

    /**
     * The AchievementConfigurationDetail model constructor.
     * @property {module:model/AchievementConfigurationDetail}
     */
    AchievementConfigurationDetail,

    /**
     * The AchievementConfigurationListResponse model constructor.
     * @property {module:model/AchievementConfigurationListResponse}
     */
    AchievementConfigurationListResponse,

    /**
     * The GamesNumberAffixConfiguration model constructor.
     * @property {module:model/GamesNumberAffixConfiguration}
     */
    GamesNumberAffixConfiguration,

    /**
     * The GamesNumberFormatConfiguration model constructor.
     * @property {module:model/GamesNumberFormatConfiguration}
     */
    GamesNumberFormatConfiguration,

    /**
     * The LeaderboardConfiguration model constructor.
     * @property {module:model/LeaderboardConfiguration}
     */
    LeaderboardConfiguration,

    /**
     * The LeaderboardConfigurationDetail model constructor.
     * @property {module:model/LeaderboardConfigurationDetail}
     */
    LeaderboardConfigurationDetail,

    /**
     * The LeaderboardConfigurationListResponse model constructor.
     * @property {module:model/LeaderboardConfigurationListResponse}
     */
    LeaderboardConfigurationListResponse,

    /**
     * The LocalizedString model constructor.
     * @property {module:model/LocalizedString}
     */
    LocalizedString,

    /**
     * The LocalizedStringBundle model constructor.
     * @property {module:model/LocalizedStringBundle}
     */
    LocalizedStringBundle,

    /**
    * The AchievementConfigurationsApi service constructor.
    * @property {module:api/AchievementConfigurationsApi}
    */
    AchievementConfigurationsApi,

    /**
    * The LeaderboardConfigurationsApi service constructor.
    * @property {module:api/LeaderboardConfigurationsApi}
    */
    LeaderboardConfigurationsApi
};
