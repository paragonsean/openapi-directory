/**
 * Google Play Game Services Publishing API
 * The Google Play Game Services Publishing API allows developers to configure their games in Game Services.
 *
 * The version of the OpenAPI document: v1configuration
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGamesNumberFormatConfiguration.h
 *
 * A number format resource.
 */

#ifndef OAIGamesNumberFormatConfiguration_H
#define OAIGamesNumberFormatConfiguration_H

#include <QJsonObject>

#include "OAIGamesNumberAffixConfiguration.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGamesNumberAffixConfiguration;

class OAIGamesNumberFormatConfiguration : public OAIObject {
public:
    OAIGamesNumberFormatConfiguration();
    OAIGamesNumberFormatConfiguration(QString json);
    ~OAIGamesNumberFormatConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCurrencyCode() const;
    void setCurrencyCode(const QString &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    qint32 getNumDecimalPlaces() const;
    void setNumDecimalPlaces(const qint32 &num_decimal_places);
    bool is_num_decimal_places_Set() const;
    bool is_num_decimal_places_Valid() const;

    QString getNumberFormatType() const;
    void setNumberFormatType(const QString &number_format_type);
    bool is_number_format_type_Set() const;
    bool is_number_format_type_Valid() const;

    OAIGamesNumberAffixConfiguration getSuffix() const;
    void setSuffix(const OAIGamesNumberAffixConfiguration &suffix);
    bool is_suffix_Set() const;
    bool is_suffix_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    qint32 m_num_decimal_places;
    bool m_num_decimal_places_isSet;
    bool m_num_decimal_places_isValid;

    QString m_number_format_type;
    bool m_number_format_type_isSet;
    bool m_number_format_type_isValid;

    OAIGamesNumberAffixConfiguration m_suffix;
    bool m_suffix_isSet;
    bool m_suffix_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGamesNumberFormatConfiguration)

#endif // OAIGamesNumberFormatConfiguration_H
