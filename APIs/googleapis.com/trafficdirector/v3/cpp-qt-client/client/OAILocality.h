/**
 * Traffic Director API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILocality.h
 *
 * Identifies location of where either Envoy runs or where upstream hosts run.
 */

#ifndef OAILocality_H
#define OAILocality_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILocality : public OAIObject {
public:
    OAILocality();
    OAILocality(QString json);
    ~OAILocality() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    QString getSubZone() const;
    void setSubZone(const QString &sub_zone);
    bool is_sub_zone_Set() const;
    bool is_sub_zone_Valid() const;

    QString getZone() const;
    void setZone(const QString &zone);
    bool is_zone_Set() const;
    bool is_zone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    QString m_sub_zone;
    bool m_sub_zone_isSet;
    bool m_sub_zone_isValid;

    QString m_zone;
    bool m_zone_isSet;
    bool m_zone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILocality)

#endif // OAILocality_H
