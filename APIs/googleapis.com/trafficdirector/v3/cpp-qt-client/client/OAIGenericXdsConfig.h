/**
 * Traffic Director API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGenericXdsConfig.h
 *
 * GenericXdsConfig is used to specify the config status and the dump of any xDS resource identified by their type URL. It is the generalized version of the now deprecated ListenersConfigDump, ClustersConfigDump etc [#next-free-field: 10]
 */

#ifndef OAIGenericXdsConfig_H
#define OAIGenericXdsConfig_H

#include <QJsonObject>

#include "OAIUpdateFailureState.h"
#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateFailureState;

class OAIGenericXdsConfig : public OAIObject {
public:
    OAIGenericXdsConfig();
    OAIGenericXdsConfig(QString json);
    ~OAIGenericXdsConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientStatus() const;
    void setClientStatus(const QString &client_status);
    bool is_client_status_Set() const;
    bool is_client_status_Valid() const;

    QString getConfigStatus() const;
    void setConfigStatus(const QString &config_status);
    bool is_config_status_Set() const;
    bool is_config_status_Valid() const;

    OAIUpdateFailureState getErrorState() const;
    void setErrorState(const OAIUpdateFailureState &error_state);
    bool is_error_state_Set() const;
    bool is_error_state_Valid() const;

    bool isIsStaticResource() const;
    void setIsStaticResource(const bool &is_static_resource);
    bool is_is_static_resource_Set() const;
    bool is_is_static_resource_Valid() const;

    QString getLastUpdated() const;
    void setLastUpdated(const QString &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getTypeUrl() const;
    void setTypeUrl(const QString &type_url);
    bool is_type_url_Set() const;
    bool is_type_url_Valid() const;

    QString getVersionInfo() const;
    void setVersionInfo(const QString &version_info);
    bool is_version_info_Set() const;
    bool is_version_info_Valid() const;

    QMap<QString, QJsonValue> getXdsConfig() const;
    void setXdsConfig(const QMap<QString, QJsonValue> &xds_config);
    bool is_xds_config_Set() const;
    bool is_xds_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_status;
    bool m_client_status_isSet;
    bool m_client_status_isValid;

    QString m_config_status;
    bool m_config_status_isSet;
    bool m_config_status_isValid;

    OAIUpdateFailureState m_error_state;
    bool m_error_state_isSet;
    bool m_error_state_isValid;

    bool m_is_static_resource;
    bool m_is_static_resource_isSet;
    bool m_is_static_resource_isValid;

    QString m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_type_url;
    bool m_type_url_isSet;
    bool m_type_url_isValid;

    QString m_version_info;
    bool m_version_info_isSet;
    bool m_version_info_isValid;

    QMap<QString, QJsonValue> m_xds_config;
    bool m_xds_config_isSet;
    bool m_xds_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGenericXdsConfig)

#endif // OAIGenericXdsConfig_H
