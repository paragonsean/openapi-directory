/**
 * Traffic Director API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEndpointsConfigDump.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEndpointsConfigDump::OAIEndpointsConfigDump(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEndpointsConfigDump::OAIEndpointsConfigDump() {
    this->initializeModel();
}

OAIEndpointsConfigDump::~OAIEndpointsConfigDump() {}

void OAIEndpointsConfigDump::initializeModel() {

    m_dynamic_endpoint_configs_isSet = false;
    m_dynamic_endpoint_configs_isValid = false;

    m_static_endpoint_configs_isSet = false;
    m_static_endpoint_configs_isValid = false;
}

void OAIEndpointsConfigDump::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEndpointsConfigDump::fromJsonObject(QJsonObject json) {

    m_dynamic_endpoint_configs_isValid = ::OpenAPI::fromJsonValue(m_dynamic_endpoint_configs, json[QString("dynamicEndpointConfigs")]);
    m_dynamic_endpoint_configs_isSet = !json[QString("dynamicEndpointConfigs")].isNull() && m_dynamic_endpoint_configs_isValid;

    m_static_endpoint_configs_isValid = ::OpenAPI::fromJsonValue(m_static_endpoint_configs, json[QString("staticEndpointConfigs")]);
    m_static_endpoint_configs_isSet = !json[QString("staticEndpointConfigs")].isNull() && m_static_endpoint_configs_isValid;
}

QString OAIEndpointsConfigDump::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEndpointsConfigDump::asJsonObject() const {
    QJsonObject obj;
    if (m_dynamic_endpoint_configs.size() > 0) {
        obj.insert(QString("dynamicEndpointConfigs"), ::OpenAPI::toJsonValue(m_dynamic_endpoint_configs));
    }
    if (m_static_endpoint_configs.size() > 0) {
        obj.insert(QString("staticEndpointConfigs"), ::OpenAPI::toJsonValue(m_static_endpoint_configs));
    }
    return obj;
}

QList<OAIDynamicEndpointConfig> OAIEndpointsConfigDump::getDynamicEndpointConfigs() const {
    return m_dynamic_endpoint_configs;
}
void OAIEndpointsConfigDump::setDynamicEndpointConfigs(const QList<OAIDynamicEndpointConfig> &dynamic_endpoint_configs) {
    m_dynamic_endpoint_configs = dynamic_endpoint_configs;
    m_dynamic_endpoint_configs_isSet = true;
}

bool OAIEndpointsConfigDump::is_dynamic_endpoint_configs_Set() const{
    return m_dynamic_endpoint_configs_isSet;
}

bool OAIEndpointsConfigDump::is_dynamic_endpoint_configs_Valid() const{
    return m_dynamic_endpoint_configs_isValid;
}

QList<OAIStaticEndpointConfig> OAIEndpointsConfigDump::getStaticEndpointConfigs() const {
    return m_static_endpoint_configs;
}
void OAIEndpointsConfigDump::setStaticEndpointConfigs(const QList<OAIStaticEndpointConfig> &static_endpoint_configs) {
    m_static_endpoint_configs = static_endpoint_configs;
    m_static_endpoint_configs_isSet = true;
}

bool OAIEndpointsConfigDump::is_static_endpoint_configs_Set() const{
    return m_static_endpoint_configs_isSet;
}

bool OAIEndpointsConfigDump::is_static_endpoint_configs_Valid() const{
    return m_static_endpoint_configs_isValid;
}

bool OAIEndpointsConfigDump::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dynamic_endpoint_configs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_static_endpoint_configs.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEndpointsConfigDump::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
