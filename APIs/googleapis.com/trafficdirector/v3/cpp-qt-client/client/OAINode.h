/**
 * Traffic Director API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINode.h
 *
 * Identifies a specific Envoy instance. The node identifier is presented to the management server, which may use this identifier to distinguish per Envoy configuration for serving. [#next-free-field: 13]
 */

#ifndef OAINode_H
#define OAINode_H

#include <QJsonObject>

#include "OAIAddress.h"
#include "OAIBuildVersion.h"
#include "OAIContextParams.h"
#include "OAIExtension.h"
#include "OAILocality.h"
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContextParams;
class OAIExtension;
class OAIAddress;
class OAILocality;
class OAIBuildVersion;

class OAINode : public OAIObject {
public:
    OAINode();
    OAINode(QString json);
    ~OAINode() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getClientFeatures() const;
    void setClientFeatures(const QList<QString> &client_features);
    bool is_client_features_Set() const;
    bool is_client_features_Valid() const;

    QString getCluster() const;
    void setCluster(const QString &cluster);
    bool is_cluster_Set() const;
    bool is_cluster_Valid() const;

    QMap<QString, OAIContextParams> getDynamicParameters() const;
    void setDynamicParameters(const QMap<QString, OAIContextParams> &dynamic_parameters);
    bool is_dynamic_parameters_Set() const;
    bool is_dynamic_parameters_Valid() const;

    QList<OAIExtension> getExtensions() const;
    void setExtensions(const QList<OAIExtension> &extensions);
    bool is_extensions_Set() const;
    bool is_extensions_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    Q_DECL_DEPRECATED QList<OAIAddress> getListeningAddresses() const;
    Q_DECL_DEPRECATED void setListeningAddresses(const QList<OAIAddress> &listening_addresses);
    Q_DECL_DEPRECATED bool is_listening_addresses_Set() const;
    Q_DECL_DEPRECATED bool is_listening_addresses_Valid() const;

    OAILocality getLocality() const;
    void setLocality(const OAILocality &locality);
    bool is_locality_Set() const;
    bool is_locality_Valid() const;

    QMap<QString, QJsonValue> getMetadata() const;
    void setMetadata(const QMap<QString, QJsonValue> &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    OAIBuildVersion getUserAgentBuildVersion() const;
    void setUserAgentBuildVersion(const OAIBuildVersion &user_agent_build_version);
    bool is_user_agent_build_version_Set() const;
    bool is_user_agent_build_version_Valid() const;

    QString getUserAgentName() const;
    void setUserAgentName(const QString &user_agent_name);
    bool is_user_agent_name_Set() const;
    bool is_user_agent_name_Valid() const;

    QString getUserAgentVersion() const;
    void setUserAgentVersion(const QString &user_agent_version);
    bool is_user_agent_version_Set() const;
    bool is_user_agent_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_client_features;
    bool m_client_features_isSet;
    bool m_client_features_isValid;

    QString m_cluster;
    bool m_cluster_isSet;
    bool m_cluster_isValid;

    QMap<QString, OAIContextParams> m_dynamic_parameters;
    bool m_dynamic_parameters_isSet;
    bool m_dynamic_parameters_isValid;

    QList<OAIExtension> m_extensions;
    bool m_extensions_isSet;
    bool m_extensions_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<OAIAddress> m_listening_addresses;
    bool m_listening_addresses_isSet;
    bool m_listening_addresses_isValid;

    OAILocality m_locality;
    bool m_locality_isSet;
    bool m_locality_isValid;

    QMap<QString, QJsonValue> m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    OAIBuildVersion m_user_agent_build_version;
    bool m_user_agent_build_version_isSet;
    bool m_user_agent_build_version_isValid;

    QString m_user_agent_name;
    bool m_user_agent_name_isSet;
    bool m_user_agent_name_isValid;

    QString m_user_agent_version;
    bool m_user_agent_version_isSet;
    bool m_user_agent_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINode)

#endif // OAINode_H
