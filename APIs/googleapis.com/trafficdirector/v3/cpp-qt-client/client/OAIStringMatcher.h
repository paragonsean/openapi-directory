/**
 * Traffic Director API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStringMatcher.h
 *
 * Specifies the way to match a string. [#next-free-field: 8]
 */

#ifndef OAIStringMatcher_H
#define OAIStringMatcher_H

#include <QJsonObject>

#include "OAIRegexMatcher.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRegexMatcher;

class OAIStringMatcher : public OAIObject {
public:
    OAIStringMatcher();
    OAIStringMatcher(QString json);
    ~OAIStringMatcher() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContains() const;
    void setContains(const QString &contains);
    bool is_contains_Set() const;
    bool is_contains_Valid() const;

    QString getExact() const;
    void setExact(const QString &exact);
    bool is_exact_Set() const;
    bool is_exact_Valid() const;

    bool isIgnoreCase() const;
    void setIgnoreCase(const bool &ignore_case);
    bool is_ignore_case_Set() const;
    bool is_ignore_case_Valid() const;

    QString getPrefix() const;
    void setPrefix(const QString &prefix);
    bool is_prefix_Set() const;
    bool is_prefix_Valid() const;

    OAIRegexMatcher getSafeRegex() const;
    void setSafeRegex(const OAIRegexMatcher &safe_regex);
    bool is_safe_regex_Set() const;
    bool is_safe_regex_Valid() const;

    QString getSuffix() const;
    void setSuffix(const QString &suffix);
    bool is_suffix_Set() const;
    bool is_suffix_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_contains;
    bool m_contains_isSet;
    bool m_contains_isValid;

    QString m_exact;
    bool m_exact_isSet;
    bool m_exact_isValid;

    bool m_ignore_case;
    bool m_ignore_case_isSet;
    bool m_ignore_case_isValid;

    QString m_prefix;
    bool m_prefix_isSet;
    bool m_prefix_isValid;

    OAIRegexMatcher m_safe_regex;
    bool m_safe_regex_isSet;
    bool m_safe_regex_isValid;

    QString m_suffix;
    bool m_suffix_isSet;
    bool m_suffix_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStringMatcher)

#endif // OAIStringMatcher_H
