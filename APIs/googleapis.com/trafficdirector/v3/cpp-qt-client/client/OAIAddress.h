/**
 * Traffic Director API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAddress.h
 *
 * Addresses specify either a logical or physical address and port, which are used to tell Envoy where to bind/listen, connect to upstream and find management servers.
 */

#ifndef OAIAddress_H
#define OAIAddress_H

#include <QJsonObject>

#include "OAIEnvoyInternalAddress.h"
#include "OAIPipe.h"
#include "OAISocketAddress.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEnvoyInternalAddress;
class OAIPipe;
class OAISocketAddress;

class OAIAddress : public OAIObject {
public:
    OAIAddress();
    OAIAddress(QString json);
    ~OAIAddress() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIEnvoyInternalAddress getEnvoyInternalAddress() const;
    void setEnvoyInternalAddress(const OAIEnvoyInternalAddress &envoy_internal_address);
    bool is_envoy_internal_address_Set() const;
    bool is_envoy_internal_address_Valid() const;

    OAIPipe getPipe() const;
    void setPipe(const OAIPipe &pipe);
    bool is_pipe_Set() const;
    bool is_pipe_Valid() const;

    OAISocketAddress getSocketAddress() const;
    void setSocketAddress(const OAISocketAddress &socket_address);
    bool is_socket_address_Set() const;
    bool is_socket_address_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIEnvoyInternalAddress m_envoy_internal_address;
    bool m_envoy_internal_address_isSet;
    bool m_envoy_internal_address_isValid;

    OAIPipe m_pipe;
    bool m_pipe_isSet;
    bool m_pipe_isValid;

    OAISocketAddress m_socket_address;
    bool m_socket_address_isSet;
    bool m_socket_address_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAddress)

#endif // OAIAddress_H
