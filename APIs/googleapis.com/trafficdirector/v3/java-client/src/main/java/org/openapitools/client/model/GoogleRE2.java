/*
 * Traffic Director API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Google&#39;s &#x60;RE2 &#x60;_ regex engine. The regex string must adhere to the documented &#x60;syntax &#x60;_. The engine is designed to complete execution in linear time as well as limit the amount of memory used. Envoy supports program size checking via runtime. The runtime keys &#x60;&#x60;re2.max_program_size.error_level&#x60;&#x60; and &#x60;&#x60;re2.max_program_size.warn_level&#x60;&#x60; can be set to integers as the maximum program size or complexity that a compiled regex can have before an exception is thrown or a warning is logged, respectively. &#x60;&#x60;re2.max_program_size.error_level&#x60;&#x60; defaults to 100, and &#x60;&#x60;re2.max_program_size.warn_level&#x60;&#x60; has no default if unset (will not check/log a warning). Envoy emits two stats for tracking the program size of regexes: the histogram &#x60;&#x60;re2.program_size&#x60;&#x60;, which records the program size, and the counter &#x60;&#x60;re2.exceeded_warn_level&#x60;&#x60;, which is incremented each time the program size exceeds the warn level threshold.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:31.211238-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleRE2 {
  public static final String SERIALIZED_NAME_MAX_PROGRAM_SIZE = "maxProgramSize";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_MAX_PROGRAM_SIZE)
  private Integer maxProgramSize;

  public GoogleRE2() {
  }

  @Deprecated
  public GoogleRE2 maxProgramSize(Integer maxProgramSize) {
    this.maxProgramSize = maxProgramSize;
    return this;
  }

  /**
   * This field controls the RE2 \&quot;program size\&quot; which is a rough estimate of how complex a compiled regex is to evaluate. A regex that has a program size greater than the configured value will fail to compile. In this case, the configured max program size can be increased or the regex can be simplified. If not specified, the default is 100. This field is deprecated; regexp validation should be performed on the management server instead of being done by each individual client. .. note:: Although this field is deprecated, the program size will still be checked against the global &#x60;&#x60;re2.max_program_size.error_level&#x60;&#x60; runtime value.
   * @return maxProgramSize
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Integer getMaxProgramSize() {
    return maxProgramSize;
  }

  @Deprecated
  public void setMaxProgramSize(Integer maxProgramSize) {
    this.maxProgramSize = maxProgramSize;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleRE2 googleRE2 = (GoogleRE2) o;
    return Objects.equals(this.maxProgramSize, googleRE2.maxProgramSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxProgramSize);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleRE2 {\n");
    sb.append("    maxProgramSize: ").append(toIndentedString(maxProgramSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("maxProgramSize");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleRE2
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleRE2.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleRE2 is not found in the empty JSON string", GoogleRE2.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleRE2.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleRE2` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleRE2.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleRE2' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleRE2> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleRE2.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleRE2>() {
           @Override
           public void write(JsonWriter out, GoogleRE2 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleRE2 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleRE2 given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleRE2
   * @throws IOException if the JSON string is invalid with respect to GoogleRE2
   */
  public static GoogleRE2 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleRE2.class);
  }

  /**
   * Convert an instance of GoogleRE2 to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

