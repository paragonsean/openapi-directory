# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.envoy_internal_address import EnvoyInternalAddress
from openapi_server.models.pipe import Pipe
from openapi_server.models.socket_address import SocketAddress
from openapi_server import util


class Address(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, envoy_internal_address: EnvoyInternalAddress=None, pipe: Pipe=None, socket_address: SocketAddress=None):
        """Address - a model defined in OpenAPI

        :param envoy_internal_address: The envoy_internal_address of this Address.
        :param pipe: The pipe of this Address.
        :param socket_address: The socket_address of this Address.
        """
        self.openapi_types = {
            'envoy_internal_address': EnvoyInternalAddress,
            'pipe': Pipe,
            'socket_address': SocketAddress
        }

        self.attribute_map = {
            'envoy_internal_address': 'envoyInternalAddress',
            'pipe': 'pipe',
            'socket_address': 'socketAddress'
        }

        self._envoy_internal_address = envoy_internal_address
        self._pipe = pipe
        self._socket_address = socket_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Address':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Address of this Address.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def envoy_internal_address(self):
        """Gets the envoy_internal_address of this Address.


        :return: The envoy_internal_address of this Address.
        :rtype: EnvoyInternalAddress
        """
        return self._envoy_internal_address

    @envoy_internal_address.setter
    def envoy_internal_address(self, envoy_internal_address):
        """Sets the envoy_internal_address of this Address.


        :param envoy_internal_address: The envoy_internal_address of this Address.
        :type envoy_internal_address: EnvoyInternalAddress
        """

        self._envoy_internal_address = envoy_internal_address

    @property
    def pipe(self):
        """Gets the pipe of this Address.


        :return: The pipe of this Address.
        :rtype: Pipe
        """
        return self._pipe

    @pipe.setter
    def pipe(self, pipe):
        """Sets the pipe of this Address.


        :param pipe: The pipe of this Address.
        :type pipe: Pipe
        """

        self._pipe = pipe

    @property
    def socket_address(self):
        """Gets the socket_address of this Address.


        :return: The socket_address of this Address.
        :rtype: SocketAddress
        """
        return self._socket_address

    @socket_address.setter
    def socket_address(self, socket_address):
        """Sets the socket_address of this Address.


        :param socket_address: The socket_address of this Address.
        :type socket_address: SocketAddress
        """

        self._socket_address = socket_address
