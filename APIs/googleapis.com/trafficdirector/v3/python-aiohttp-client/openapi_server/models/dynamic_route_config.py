# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_failure_state import UpdateFailureState
from openapi_server import util


class DynamicRouteConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_status: str=None, error_state: UpdateFailureState=None, last_updated: str=None, route_config: Dict[str, object]=None, version_info: str=None):
        """DynamicRouteConfig - a model defined in OpenAPI

        :param client_status: The client_status of this DynamicRouteConfig.
        :param error_state: The error_state of this DynamicRouteConfig.
        :param last_updated: The last_updated of this DynamicRouteConfig.
        :param route_config: The route_config of this DynamicRouteConfig.
        :param version_info: The version_info of this DynamicRouteConfig.
        """
        self.openapi_types = {
            'client_status': str,
            'error_state': UpdateFailureState,
            'last_updated': str,
            'route_config': Dict[str, object],
            'version_info': str
        }

        self.attribute_map = {
            'client_status': 'clientStatus',
            'error_state': 'errorState',
            'last_updated': 'lastUpdated',
            'route_config': 'routeConfig',
            'version_info': 'versionInfo'
        }

        self._client_status = client_status
        self._error_state = error_state
        self._last_updated = last_updated
        self._route_config = route_config
        self._version_info = version_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DynamicRouteConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DynamicRouteConfig of this DynamicRouteConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_status(self):
        """Gets the client_status of this DynamicRouteConfig.

        The client status of this resource. [#not-implemented-hide:]

        :return: The client_status of this DynamicRouteConfig.
        :rtype: str
        """
        return self._client_status

    @client_status.setter
    def client_status(self, client_status):
        """Sets the client_status of this DynamicRouteConfig.

        The client status of this resource. [#not-implemented-hide:]

        :param client_status: The client_status of this DynamicRouteConfig.
        :type client_status: str
        """
        allowed_values = ["UNKNOWN", "REQUESTED", "DOES_NOT_EXIST", "ACKED", "NACKED"]  # noqa: E501
        if client_status not in allowed_values:
            raise ValueError(
                "Invalid value for `client_status` ({0}), must be one of {1}"
                .format(client_status, allowed_values)
            )

        self._client_status = client_status

    @property
    def error_state(self):
        """Gets the error_state of this DynamicRouteConfig.


        :return: The error_state of this DynamicRouteConfig.
        :rtype: UpdateFailureState
        """
        return self._error_state

    @error_state.setter
    def error_state(self, error_state):
        """Sets the error_state of this DynamicRouteConfig.


        :param error_state: The error_state of this DynamicRouteConfig.
        :type error_state: UpdateFailureState
        """

        self._error_state = error_state

    @property
    def last_updated(self):
        """Gets the last_updated of this DynamicRouteConfig.

        The timestamp when the Route was last updated.

        :return: The last_updated of this DynamicRouteConfig.
        :rtype: str
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated):
        """Sets the last_updated of this DynamicRouteConfig.

        The timestamp when the Route was last updated.

        :param last_updated: The last_updated of this DynamicRouteConfig.
        :type last_updated: str
        """

        self._last_updated = last_updated

    @property
    def route_config(self):
        """Gets the route_config of this DynamicRouteConfig.

        The route config.

        :return: The route_config of this DynamicRouteConfig.
        :rtype: Dict[str, object]
        """
        return self._route_config

    @route_config.setter
    def route_config(self, route_config):
        """Sets the route_config of this DynamicRouteConfig.

        The route config.

        :param route_config: The route_config of this DynamicRouteConfig.
        :type route_config: Dict[str, object]
        """

        self._route_config = route_config

    @property
    def version_info(self):
        """Gets the version_info of this DynamicRouteConfig.

        This is the per-resource version information. This version is currently taken from the :ref:`version_info ` field at the time that the route configuration was loaded.

        :return: The version_info of this DynamicRouteConfig.
        :rtype: str
        """
        return self._version_info

    @version_info.setter
    def version_info(self, version_info):
        """Sets the version_info of this DynamicRouteConfig.

        This is the per-resource version information. This version is currently taken from the :ref:`version_info ` field at the time that the route configuration was loaded.

        :param version_info: The version_info of this DynamicRouteConfig.
        :type version_info: str
        """

        self._version_info = version_info
