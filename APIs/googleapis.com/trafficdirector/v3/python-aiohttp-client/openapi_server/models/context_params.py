# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContextParams(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, params: Dict[str, str]=None):
        """ContextParams - a model defined in OpenAPI

        :param params: The params of this ContextParams.
        """
        self.openapi_types = {
            'params': Dict[str, str]
        }

        self.attribute_map = {
            'params': 'params'
        }

        self._params = params

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContextParams':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContextParams of this ContextParams.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def params(self):
        """Gets the params of this ContextParams.


        :return: The params of this ContextParams.
        :rtype: Dict[str, str]
        """
        return self._params

    @params.setter
    def params(self, params):
        """Sets the params of this ContextParams.


        :param params: The params of this ContextParams.
        :type params: Dict[str, str]
        """

        self._params = params
