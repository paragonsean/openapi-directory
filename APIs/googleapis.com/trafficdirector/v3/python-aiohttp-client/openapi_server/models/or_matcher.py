# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.value_matcher import ValueMatcher
from openapi_server import util


class OrMatcher(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, value_matchers: List[ValueMatcher]=None):
        """OrMatcher - a model defined in OpenAPI

        :param value_matchers: The value_matchers of this OrMatcher.
        """
        self.openapi_types = {
            'value_matchers': List[ValueMatcher]
        }

        self.attribute_map = {
            'value_matchers': 'valueMatchers'
        }

        self._value_matchers = value_matchers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrMatcher':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrMatcher of this OrMatcher.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def value_matchers(self):
        """Gets the value_matchers of this OrMatcher.


        :return: The value_matchers of this OrMatcher.
        :rtype: List[ValueMatcher]
        """
        return self._value_matchers

    @value_matchers.setter
    def value_matchers(self, value_matchers):
        """Sets the value_matchers of this OrMatcher.


        :param value_matchers: The value_matchers of this OrMatcher.
        :type value_matchers: List[ValueMatcher]
        """

        self._value_matchers = value_matchers
