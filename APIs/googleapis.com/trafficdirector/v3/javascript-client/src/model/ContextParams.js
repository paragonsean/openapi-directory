/**
 * Traffic Director API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContextParams model module.
 * @module model/ContextParams
 * @version v3
 */
class ContextParams {
    /**
     * Constructs a new <code>ContextParams</code>.
     * Additional parameters that can be used to select resource variants. These include any global context parameters, per-resource type client feature capabilities and per-resource type functional attributes. All per-resource type attributes will be &#x60;xds.resource.&#x60; prefixed and some of these are documented below: &#x60;xds.resource.listening_address&#x60;: The value is \&quot;IP:port\&quot; (e.g. \&quot;10.1.1.3:8080\&quot;) which is the listening address of a Listener. Used in a Listener resource query.
     * @alias module:model/ContextParams
     */
    constructor() { 
        
        ContextParams.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContextParams</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContextParams} obj Optional instance to populate.
     * @return {module:model/ContextParams} The populated <code>ContextParams</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContextParams();

            if (data.hasOwnProperty('params')) {
                obj['params'] = ApiClient.convertToType(data['params'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContextParams</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContextParams</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Object.<String, String>} params
 */
ContextParams.prototype['params'] = undefined;






export default ContextParams;

