/**
 * Traffic Director API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateFailureState from './UpdateFailureState';

/**
 * The DynamicRouteConfig model module.
 * @module model/DynamicRouteConfig
 * @version v3
 */
class DynamicRouteConfig {
    /**
     * Constructs a new <code>DynamicRouteConfig</code>.
     * [#next-free-field: 6]
     * @alias module:model/DynamicRouteConfig
     */
    constructor() { 
        
        DynamicRouteConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DynamicRouteConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DynamicRouteConfig} obj Optional instance to populate.
     * @return {module:model/DynamicRouteConfig} The populated <code>DynamicRouteConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DynamicRouteConfig();

            if (data.hasOwnProperty('clientStatus')) {
                obj['clientStatus'] = ApiClient.convertToType(data['clientStatus'], 'String');
            }
            if (data.hasOwnProperty('errorState')) {
                obj['errorState'] = UpdateFailureState.constructFromObject(data['errorState']);
            }
            if (data.hasOwnProperty('lastUpdated')) {
                obj['lastUpdated'] = ApiClient.convertToType(data['lastUpdated'], 'String');
            }
            if (data.hasOwnProperty('routeConfig')) {
                obj['routeConfig'] = ApiClient.convertToType(data['routeConfig'], {'String': Object});
            }
            if (data.hasOwnProperty('versionInfo')) {
                obj['versionInfo'] = ApiClient.convertToType(data['versionInfo'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DynamicRouteConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DynamicRouteConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['clientStatus'] && !(typeof data['clientStatus'] === 'string' || data['clientStatus'] instanceof String)) {
            throw new Error("Expected the field `clientStatus` to be a primitive type in the JSON string but got " + data['clientStatus']);
        }
        // validate the optional field `errorState`
        if (data['errorState']) { // data not null
          UpdateFailureState.validateJSON(data['errorState']);
        }
        // ensure the json data is a string
        if (data['lastUpdated'] && !(typeof data['lastUpdated'] === 'string' || data['lastUpdated'] instanceof String)) {
            throw new Error("Expected the field `lastUpdated` to be a primitive type in the JSON string but got " + data['lastUpdated']);
        }
        // ensure the json data is a string
        if (data['versionInfo'] && !(typeof data['versionInfo'] === 'string' || data['versionInfo'] instanceof String)) {
            throw new Error("Expected the field `versionInfo` to be a primitive type in the JSON string but got " + data['versionInfo']);
        }

        return true;
    }


}



/**
 * The client status of this resource. [#not-implemented-hide:]
 * @member {module:model/DynamicRouteConfig.ClientStatusEnum} clientStatus
 */
DynamicRouteConfig.prototype['clientStatus'] = undefined;

/**
 * @member {module:model/UpdateFailureState} errorState
 */
DynamicRouteConfig.prototype['errorState'] = undefined;

/**
 * The timestamp when the Route was last updated.
 * @member {String} lastUpdated
 */
DynamicRouteConfig.prototype['lastUpdated'] = undefined;

/**
 * The route config.
 * @member {Object.<String, Object>} routeConfig
 */
DynamicRouteConfig.prototype['routeConfig'] = undefined;

/**
 * This is the per-resource version information. This version is currently taken from the :ref:`version_info ` field at the time that the route configuration was loaded.
 * @member {String} versionInfo
 */
DynamicRouteConfig.prototype['versionInfo'] = undefined;





/**
 * Allowed values for the <code>clientStatus</code> property.
 * @enum {String}
 * @readonly
 */
DynamicRouteConfig['ClientStatusEnum'] = {

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",

    /**
     * value: "REQUESTED"
     * @const
     */
    "REQUESTED": "REQUESTED",

    /**
     * value: "DOES_NOT_EXIST"
     * @const
     */
    "DOES_NOT_EXIST": "DOES_NOT_EXIST",

    /**
     * value: "ACKED"
     * @const
     */
    "ACKED": "ACKED",

    /**
     * value: "NACKED"
     * @const
     */
    "NACKED": "NACKED"
};



export default DynamicRouteConfig;

