/**
 * Traffic Director API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EnvoyInternalAddress model module.
 * @module model/EnvoyInternalAddress
 * @version v3
 */
class EnvoyInternalAddress {
    /**
     * Constructs a new <code>EnvoyInternalAddress</code>.
     * The address represents an envoy internal listener. [#comment: 
     * @alias module:model/EnvoyInternalAddress
     */
    constructor() { 
        
        EnvoyInternalAddress.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EnvoyInternalAddress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnvoyInternalAddress} obj Optional instance to populate.
     * @return {module:model/EnvoyInternalAddress} The populated <code>EnvoyInternalAddress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnvoyInternalAddress();

            if (data.hasOwnProperty('endpointId')) {
                obj['endpointId'] = ApiClient.convertToType(data['endpointId'], 'String');
            }
            if (data.hasOwnProperty('serverListenerName')) {
                obj['serverListenerName'] = ApiClient.convertToType(data['serverListenerName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnvoyInternalAddress</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnvoyInternalAddress</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['endpointId'] && !(typeof data['endpointId'] === 'string' || data['endpointId'] instanceof String)) {
            throw new Error("Expected the field `endpointId` to be a primitive type in the JSON string but got " + data['endpointId']);
        }
        // ensure the json data is a string
        if (data['serverListenerName'] && !(typeof data['serverListenerName'] === 'string' || data['serverListenerName'] instanceof String)) {
            throw new Error("Expected the field `serverListenerName` to be a primitive type in the JSON string but got " + data['serverListenerName']);
        }

        return true;
    }


}



/**
 * Specifies an endpoint identifier to distinguish between multiple endpoints for the same internal listener in a single upstream pool. Only used in the upstream addresses for tracking changes to individual endpoints. This, for example, may be set to the final destination IP for the target internal listener.
 * @member {String} endpointId
 */
EnvoyInternalAddress.prototype['endpointId'] = undefined;

/**
 * Specifies the :ref:`name ` of the internal listener.
 * @member {String} serverListenerName
 */
EnvoyInternalAddress.prototype['serverListenerName'] = undefined;






export default EnvoyInternalAddress;

