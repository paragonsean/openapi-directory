# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DynamicCluster(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster: Dict[str, object]=None, last_updated: str=None, version_info: str=None):
        """DynamicCluster - a model defined in OpenAPI

        :param cluster: The cluster of this DynamicCluster.
        :param last_updated: The last_updated of this DynamicCluster.
        :param version_info: The version_info of this DynamicCluster.
        """
        self.openapi_types = {
            'cluster': Dict[str, object],
            'last_updated': str,
            'version_info': str
        }

        self.attribute_map = {
            'cluster': 'cluster',
            'last_updated': 'lastUpdated',
            'version_info': 'versionInfo'
        }

        self._cluster = cluster
        self._last_updated = last_updated
        self._version_info = version_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DynamicCluster':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DynamicCluster of this DynamicCluster.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster(self):
        """Gets the cluster of this DynamicCluster.

        The cluster config.

        :return: The cluster of this DynamicCluster.
        :rtype: Dict[str, object]
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this DynamicCluster.

        The cluster config.

        :param cluster: The cluster of this DynamicCluster.
        :type cluster: Dict[str, object]
        """

        self._cluster = cluster

    @property
    def last_updated(self):
        """Gets the last_updated of this DynamicCluster.

        The timestamp when the Cluster was last updated.

        :return: The last_updated of this DynamicCluster.
        :rtype: str
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated):
        """Sets the last_updated of this DynamicCluster.

        The timestamp when the Cluster was last updated.

        :param last_updated: The last_updated of this DynamicCluster.
        :type last_updated: str
        """

        self._last_updated = last_updated

    @property
    def version_info(self):
        """Gets the version_info of this DynamicCluster.

        This is the per-resource version information. This version is currently taken from the :ref:`version_info ` field at the time that the cluster was loaded. In the future, discrete per-cluster versions may be supported by the API.

        :return: The version_info of this DynamicCluster.
        :rtype: str
        """
        return self._version_info

    @version_info.setter
    def version_info(self, version_info):
        """Sets the version_info of this DynamicCluster.

        This is the per-resource version information. This version is currently taken from the :ref:`version_info ` field at the time that the cluster was loaded. In the future, discrete per-cluster versions may be supported by the API.

        :param version_info: The version_info of this DynamicCluster.
        :type version_info: str
        """

        self._version_info = version_info
