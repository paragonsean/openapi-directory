# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.value_matcher import ValueMatcher
from openapi_server import util


class ListMatcher(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, one_of: ValueMatcher=None):
        """ListMatcher - a model defined in OpenAPI

        :param one_of: The one_of of this ListMatcher.
        """
        self.openapi_types = {
            'one_of': ValueMatcher
        }

        self.attribute_map = {
            'one_of': 'oneOf'
        }

        self._one_of = one_of

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListMatcher':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListMatcher of this ListMatcher.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def one_of(self):
        """Gets the one_of of this ListMatcher.


        :return: The one_of of this ListMatcher.
        :rtype: ValueMatcher
        """
        return self._one_of

    @one_of.setter
    def one_of(self, one_of):
        """Sets the one_of of this ListMatcher.


        :param one_of: The one_of of this ListMatcher.
        :type one_of: ValueMatcher
        """

        self._one_of = one_of
