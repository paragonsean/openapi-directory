/**
 * Traffic Director API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDynamicListener.h
 *
 * Describes a dynamically loaded listener via the LDS API. [#next-free-field: 6]
 */

#ifndef OAIDynamicListener_H
#define OAIDynamicListener_H

#include <QJsonObject>

#include "OAIDynamicListenerState.h"
#include "OAIUpdateFailureState.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDynamicListenerState;
class OAIUpdateFailureState;

class OAIDynamicListener : public OAIObject {
public:
    OAIDynamicListener();
    OAIDynamicListener(QString json);
    ~OAIDynamicListener() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDynamicListenerState getActiveState() const;
    void setActiveState(const OAIDynamicListenerState &active_state);
    bool is_active_state_Set() const;
    bool is_active_state_Valid() const;

    OAIDynamicListenerState getDrainingState() const;
    void setDrainingState(const OAIDynamicListenerState &draining_state);
    bool is_draining_state_Set() const;
    bool is_draining_state_Valid() const;

    OAIUpdateFailureState getErrorState() const;
    void setErrorState(const OAIUpdateFailureState &error_state);
    bool is_error_state_Set() const;
    bool is_error_state_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIDynamicListenerState getWarmingState() const;
    void setWarmingState(const OAIDynamicListenerState &warming_state);
    bool is_warming_state_Set() const;
    bool is_warming_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDynamicListenerState m_active_state;
    bool m_active_state_isSet;
    bool m_active_state_isValid;

    OAIDynamicListenerState m_draining_state;
    bool m_draining_state_isSet;
    bool m_draining_state_isValid;

    OAIUpdateFailureState m_error_state;
    bool m_error_state_isSet;
    bool m_error_state_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIDynamicListenerState m_warming_state;
    bool m_warming_state_isSet;
    bool m_warming_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDynamicListener)

#endif // OAIDynamicListener_H
