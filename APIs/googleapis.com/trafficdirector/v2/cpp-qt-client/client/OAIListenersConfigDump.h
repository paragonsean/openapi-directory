/**
 * Traffic Director API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListenersConfigDump.h
 *
 * Envoy&#39;s listener manager fills this message with all currently known listeners. Listener configuration information can be used to recreate an Envoy configuration by populating all listeners as static listeners or by returning them in a LDS response.
 */

#ifndef OAIListenersConfigDump_H
#define OAIListenersConfigDump_H

#include <QJsonObject>

#include "OAIDynamicListener.h"
#include "OAIStaticListener.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDynamicListener;
class OAIStaticListener;

class OAIListenersConfigDump : public OAIObject {
public:
    OAIListenersConfigDump();
    OAIListenersConfigDump(QString json);
    ~OAIListenersConfigDump() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDynamicListener> getDynamicListeners() const;
    void setDynamicListeners(const QList<OAIDynamicListener> &dynamic_listeners);
    bool is_dynamic_listeners_Set() const;
    bool is_dynamic_listeners_Valid() const;

    QList<OAIStaticListener> getStaticListeners() const;
    void setStaticListeners(const QList<OAIStaticListener> &static_listeners);
    bool is_static_listeners_Set() const;
    bool is_static_listeners_Valid() const;

    QString getVersionInfo() const;
    void setVersionInfo(const QString &version_info);
    bool is_version_info_Set() const;
    bool is_version_info_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDynamicListener> m_dynamic_listeners;
    bool m_dynamic_listeners_isSet;
    bool m_dynamic_listeners_isValid;

    QList<OAIStaticListener> m_static_listeners;
    bool m_static_listeners_isSet;
    bool m_static_listeners_isValid;

    QString m_version_info;
    bool m_version_info_isSet;
    bool m_version_info_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListenersConfigDump)

#endif // OAIListenersConfigDump_H
