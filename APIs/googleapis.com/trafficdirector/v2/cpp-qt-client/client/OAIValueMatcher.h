/**
 * Traffic Director API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIValueMatcher.h
 *
 * Specifies the way to match a ProtobufWkt::Value. Primitive values and ListValue are supported. StructValue is not supported and is always not matched. [#next-free-field: 7]
 */

#ifndef OAIValueMatcher_H
#define OAIValueMatcher_H

#include <QJsonObject>

#include "OAIDoubleMatcher.h"
#include "OAIListMatcher.h"
#include "OAIObject.h"
#include "OAIStringMatcher.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDoubleMatcher;
class OAIListMatcher;
class OAIStringMatcher;

class OAIValueMatcher : public OAIObject {
public:
    OAIValueMatcher();
    OAIValueMatcher(QString json);
    ~OAIValueMatcher() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isBoolMatch() const;
    void setBoolMatch(const bool &bool_match);
    bool is_bool_match_Set() const;
    bool is_bool_match_Valid() const;

    OAIDoubleMatcher getDoubleMatch() const;
    void setDoubleMatch(const OAIDoubleMatcher &double_match);
    bool is_double_match_Set() const;
    bool is_double_match_Valid() const;

    OAIListMatcher getListMatch() const;
    void setListMatch(const OAIListMatcher &list_match);
    bool is_list_match_Set() const;
    bool is_list_match_Valid() const;

    OAIObject getNullMatch() const;
    void setNullMatch(const OAIObject &null_match);
    bool is_null_match_Set() const;
    bool is_null_match_Valid() const;

    bool isPresentMatch() const;
    void setPresentMatch(const bool &present_match);
    bool is_present_match_Set() const;
    bool is_present_match_Valid() const;

    OAIStringMatcher getStringMatch() const;
    void setStringMatch(const OAIStringMatcher &string_match);
    bool is_string_match_Set() const;
    bool is_string_match_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_bool_match;
    bool m_bool_match_isSet;
    bool m_bool_match_isValid;

    OAIDoubleMatcher m_double_match;
    bool m_double_match_isSet;
    bool m_double_match_isValid;

    OAIListMatcher m_list_match;
    bool m_list_match_isSet;
    bool m_list_match_isValid;

    OAIObject m_null_match;
    bool m_null_match_isSet;
    bool m_null_match_isValid;

    bool m_present_match;
    bool m_present_match_isSet;
    bool m_present_match_isValid;

    OAIStringMatcher m_string_match;
    bool m_string_match_isSet;
    bool m_string_match_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIValueMatcher)

#endif // OAIValueMatcher_H
