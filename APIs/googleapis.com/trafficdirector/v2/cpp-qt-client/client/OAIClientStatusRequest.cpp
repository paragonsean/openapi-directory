/**
 * Traffic Director API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClientStatusRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClientStatusRequest::OAIClientStatusRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClientStatusRequest::OAIClientStatusRequest() {
    this->initializeModel();
}

OAIClientStatusRequest::~OAIClientStatusRequest() {}

void OAIClientStatusRequest::initializeModel() {

    m_node_matchers_isSet = false;
    m_node_matchers_isValid = false;
}

void OAIClientStatusRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClientStatusRequest::fromJsonObject(QJsonObject json) {

    m_node_matchers_isValid = ::OpenAPI::fromJsonValue(m_node_matchers, json[QString("nodeMatchers")]);
    m_node_matchers_isSet = !json[QString("nodeMatchers")].isNull() && m_node_matchers_isValid;
}

QString OAIClientStatusRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClientStatusRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_node_matchers.size() > 0) {
        obj.insert(QString("nodeMatchers"), ::OpenAPI::toJsonValue(m_node_matchers));
    }
    return obj;
}

QList<OAINodeMatcher> OAIClientStatusRequest::getNodeMatchers() const {
    return m_node_matchers;
}
void OAIClientStatusRequest::setNodeMatchers(const QList<OAINodeMatcher> &node_matchers) {
    m_node_matchers = node_matchers;
    m_node_matchers_isSet = true;
}

bool OAIClientStatusRequest::is_node_matchers_Set() const{
    return m_node_matchers_isSet;
}

bool OAIClientStatusRequest::is_node_matchers_Valid() const{
    return m_node_matchers_isValid;
}

bool OAIClientStatusRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_node_matchers.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClientStatusRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
