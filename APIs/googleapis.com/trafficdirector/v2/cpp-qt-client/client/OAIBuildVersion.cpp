/**
 * Traffic Director API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBuildVersion.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBuildVersion::OAIBuildVersion(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBuildVersion::OAIBuildVersion() {
    this->initializeModel();
}

OAIBuildVersion::~OAIBuildVersion() {}

void OAIBuildVersion::initializeModel() {

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAIBuildVersion::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBuildVersion::fromJsonObject(QJsonObject json) {

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;
}

QString OAIBuildVersion::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBuildVersion::asJsonObject() const {
    QJsonObject obj;
    if (m_metadata.size() > 0) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_version.isSet()) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

QMap<QString, QJsonValue> OAIBuildVersion::getMetadata() const {
    return m_metadata;
}
void OAIBuildVersion::setMetadata(const QMap<QString, QJsonValue> &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIBuildVersion::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIBuildVersion::is_metadata_Valid() const{
    return m_metadata_isValid;
}

OAISemanticVersion OAIBuildVersion::getVersion() const {
    return m_version;
}
void OAIBuildVersion::setVersion(const OAISemanticVersion &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIBuildVersion::is_version_Set() const{
    return m_version_isSet;
}

bool OAIBuildVersion::is_version_Valid() const{
    return m_version_isValid;
}

bool OAIBuildVersion::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_metadata.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_version.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBuildVersion::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
