/**
 * Traffic Director API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Pipe from './Pipe';
import SocketAddress from './SocketAddress';

/**
 * The Address model module.
 * @module model/Address
 * @version v2
 */
class Address {
    /**
     * Constructs a new <code>Address</code>.
     * Addresses specify either a logical or physical address and port, which are used to tell Envoy where to bind/listen, connect to upstream and find management servers.
     * @alias module:model/Address
     */
    constructor() { 
        
        Address.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Address</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Address} obj Optional instance to populate.
     * @return {module:model/Address} The populated <code>Address</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Address();

            if (data.hasOwnProperty('pipe')) {
                obj['pipe'] = Pipe.constructFromObject(data['pipe']);
            }
            if (data.hasOwnProperty('socketAddress')) {
                obj['socketAddress'] = SocketAddress.constructFromObject(data['socketAddress']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Address</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Address</code>.
     */
    static validateJSON(data) {
        // validate the optional field `pipe`
        if (data['pipe']) { // data not null
          Pipe.validateJSON(data['pipe']);
        }
        // validate the optional field `socketAddress`
        if (data['socketAddress']) { // data not null
          SocketAddress.validateJSON(data['socketAddress']);
        }

        return true;
    }


}



/**
 * @member {module:model/Pipe} pipe
 */
Address.prototype['pipe'] = undefined;

/**
 * @member {module:model/SocketAddress} socketAddress
 */
Address.prototype['socketAddress'] = undefined;






export default Address;

