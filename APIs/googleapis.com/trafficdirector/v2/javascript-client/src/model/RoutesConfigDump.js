/**
 * Traffic Director API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DynamicRouteConfig from './DynamicRouteConfig';
import StaticRouteConfig from './StaticRouteConfig';

/**
 * The RoutesConfigDump model module.
 * @module model/RoutesConfigDump
 * @version v2
 */
class RoutesConfigDump {
    /**
     * Constructs a new <code>RoutesConfigDump</code>.
     * Envoy&#39;s RDS implementation fills this message with all currently loaded routes, as described by their RouteConfiguration objects. Static routes that are either defined in the bootstrap configuration or defined inline while configuring listeners are separated from those configured dynamically via RDS. Route configuration information can be used to recreate an Envoy configuration by populating all routes as static routes or by returning them in RDS responses.
     * @alias module:model/RoutesConfigDump
     */
    constructor() { 
        
        RoutesConfigDump.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RoutesConfigDump</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RoutesConfigDump} obj Optional instance to populate.
     * @return {module:model/RoutesConfigDump} The populated <code>RoutesConfigDump</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RoutesConfigDump();

            if (data.hasOwnProperty('dynamicRouteConfigs')) {
                obj['dynamicRouteConfigs'] = ApiClient.convertToType(data['dynamicRouteConfigs'], [DynamicRouteConfig]);
            }
            if (data.hasOwnProperty('staticRouteConfigs')) {
                obj['staticRouteConfigs'] = ApiClient.convertToType(data['staticRouteConfigs'], [StaticRouteConfig]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RoutesConfigDump</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RoutesConfigDump</code>.
     */
    static validateJSON(data) {
        if (data['dynamicRouteConfigs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['dynamicRouteConfigs'])) {
                throw new Error("Expected the field `dynamicRouteConfigs` to be an array in the JSON data but got " + data['dynamicRouteConfigs']);
            }
            // validate the optional field `dynamicRouteConfigs` (array)
            for (const item of data['dynamicRouteConfigs']) {
                DynamicRouteConfig.validateJSON(item);
            };
        }
        if (data['staticRouteConfigs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['staticRouteConfigs'])) {
                throw new Error("Expected the field `staticRouteConfigs` to be an array in the JSON data but got " + data['staticRouteConfigs']);
            }
            // validate the optional field `staticRouteConfigs` (array)
            for (const item of data['staticRouteConfigs']) {
                StaticRouteConfig.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The dynamically loaded route configs.
 * @member {Array.<module:model/DynamicRouteConfig>} dynamicRouteConfigs
 */
RoutesConfigDump.prototype['dynamicRouteConfigs'] = undefined;

/**
 * The statically loaded route configs.
 * @member {Array.<module:model/StaticRouteConfig>} staticRouteConfigs
 */
RoutesConfigDump.prototype['staticRouteConfigs'] = undefined;






export default RoutesConfigDump;

