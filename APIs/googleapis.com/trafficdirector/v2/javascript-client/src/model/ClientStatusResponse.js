/**
 * Traffic Director API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClientConfig from './ClientConfig';

/**
 * The ClientStatusResponse model module.
 * @module model/ClientStatusResponse
 * @version v2
 */
class ClientStatusResponse {
    /**
     * Constructs a new <code>ClientStatusResponse</code>.
     * @alias module:model/ClientStatusResponse
     */
    constructor() { 
        
        ClientStatusResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClientStatusResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClientStatusResponse} obj Optional instance to populate.
     * @return {module:model/ClientStatusResponse} The populated <code>ClientStatusResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClientStatusResponse();

            if (data.hasOwnProperty('config')) {
                obj['config'] = ApiClient.convertToType(data['config'], [ClientConfig]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClientStatusResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClientStatusResponse</code>.
     */
    static validateJSON(data) {
        if (data['config']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['config'])) {
                throw new Error("Expected the field `config` to be an array in the JSON data but got " + data['config']);
            }
            // validate the optional field `config` (array)
            for (const item of data['config']) {
                ClientConfig.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Client configs for the clients specified in the ClientStatusRequest.
 * @member {Array.<module:model/ClientConfig>} config
 */
ClientStatusResponse.prototype['config'] = undefined;






export default ClientStatusResponse;

