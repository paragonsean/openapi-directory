/**
 * Traffic Director API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DoubleMatcher from './DoubleMatcher';
import ListMatcher from './ListMatcher';
import StringMatcher from './StringMatcher';

/**
 * The ValueMatcher model module.
 * @module model/ValueMatcher
 * @version v2
 */
class ValueMatcher {
    /**
     * Constructs a new <code>ValueMatcher</code>.
     * Specifies the way to match a ProtobufWkt::Value. Primitive values and ListValue are supported. StructValue is not supported and is always not matched. [#next-free-field: 7]
     * @alias module:model/ValueMatcher
     */
    constructor() { 
        
        ValueMatcher.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ValueMatcher</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ValueMatcher} obj Optional instance to populate.
     * @return {module:model/ValueMatcher} The populated <code>ValueMatcher</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ValueMatcher();

            if (data.hasOwnProperty('boolMatch')) {
                obj['boolMatch'] = ApiClient.convertToType(data['boolMatch'], 'Boolean');
            }
            if (data.hasOwnProperty('doubleMatch')) {
                obj['doubleMatch'] = DoubleMatcher.constructFromObject(data['doubleMatch']);
            }
            if (data.hasOwnProperty('listMatch')) {
                obj['listMatch'] = ListMatcher.constructFromObject(data['listMatch']);
            }
            if (data.hasOwnProperty('nullMatch')) {
                obj['nullMatch'] = ApiClient.convertToType(data['nullMatch'], Object);
            }
            if (data.hasOwnProperty('presentMatch')) {
                obj['presentMatch'] = ApiClient.convertToType(data['presentMatch'], 'Boolean');
            }
            if (data.hasOwnProperty('stringMatch')) {
                obj['stringMatch'] = StringMatcher.constructFromObject(data['stringMatch']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ValueMatcher</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ValueMatcher</code>.
     */
    static validateJSON(data) {
        // validate the optional field `doubleMatch`
        if (data['doubleMatch']) { // data not null
          DoubleMatcher.validateJSON(data['doubleMatch']);
        }
        // validate the optional field `listMatch`
        if (data['listMatch']) { // data not null
          ListMatcher.validateJSON(data['listMatch']);
        }
        // validate the optional field `stringMatch`
        if (data['stringMatch']) { // data not null
          StringMatcher.validateJSON(data['stringMatch']);
        }

        return true;
    }


}



/**
 * If specified, a match occurs if and only if the target value is a bool value and is equal to this field.
 * @member {Boolean} boolMatch
 */
ValueMatcher.prototype['boolMatch'] = undefined;

/**
 * @member {module:model/DoubleMatcher} doubleMatch
 */
ValueMatcher.prototype['doubleMatch'] = undefined;

/**
 * @member {module:model/ListMatcher} listMatch
 */
ValueMatcher.prototype['listMatch'] = undefined;

/**
 * NullMatch is an empty message to specify a null value.
 * @member {Object} nullMatch
 */
ValueMatcher.prototype['nullMatch'] = undefined;

/**
 * If specified, value match will be performed based on whether the path is referring to a valid primitive value in the metadata. If the path is referring to a non-primitive value, the result is always not matched.
 * @member {Boolean} presentMatch
 */
ValueMatcher.prototype['presentMatch'] = undefined;

/**
 * @member {module:model/StringMatcher} stringMatch
 */
ValueMatcher.prototype['stringMatch'] = undefined;






export default ValueMatcher;

