/**
 * Traffic Director API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleRE2 from './GoogleRE2';

/**
 * The RegexMatcher model module.
 * @module model/RegexMatcher
 * @version v2
 */
class RegexMatcher {
    /**
     * Constructs a new <code>RegexMatcher</code>.
     * A regex matcher designed for safety when used with untrusted input.
     * @alias module:model/RegexMatcher
     */
    constructor() { 
        
        RegexMatcher.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RegexMatcher</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RegexMatcher} obj Optional instance to populate.
     * @return {module:model/RegexMatcher} The populated <code>RegexMatcher</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RegexMatcher();

            if (data.hasOwnProperty('googleRe2')) {
                obj['googleRe2'] = GoogleRE2.constructFromObject(data['googleRe2']);
            }
            if (data.hasOwnProperty('regex')) {
                obj['regex'] = ApiClient.convertToType(data['regex'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RegexMatcher</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RegexMatcher</code>.
     */
    static validateJSON(data) {
        // validate the optional field `googleRe2`
        if (data['googleRe2']) { // data not null
          GoogleRE2.validateJSON(data['googleRe2']);
        }
        // ensure the json data is a string
        if (data['regex'] && !(typeof data['regex'] === 'string' || data['regex'] instanceof String)) {
            throw new Error("Expected the field `regex` to be a primitive type in the JSON string but got " + data['regex']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleRE2} googleRe2
 */
RegexMatcher.prototype['googleRe2'] = undefined;

/**
 * The regex match string. The string must be supported by the configured engine.
 * @member {String} regex
 */
RegexMatcher.prototype['regex'] = undefined;






export default RegexMatcher;

