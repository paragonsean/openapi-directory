/**
 * Traffic Director API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleRE2 model module.
 * @module model/GoogleRE2
 * @version v2
 */
class GoogleRE2 {
    /**
     * Constructs a new <code>GoogleRE2</code>.
     * Google&#39;s &#x60;RE2 &#x60;_ regex engine. The regex string must adhere to the documented &#x60;syntax &#x60;_. The engine is designed to complete execution in linear time as well as limit the amount of memory used. Envoy supports program size checking via runtime. The runtime keys &#x60;&#x60;re2.max_program_size.error_level&#x60;&#x60; and &#x60;&#x60;re2.max_program_size.warn_level&#x60;&#x60; can be set to integers as the maximum program size or complexity that a compiled regex can have before an exception is thrown or a warning is logged, respectively. &#x60;&#x60;re2.max_program_size.error_level&#x60;&#x60; defaults to 100, and &#x60;&#x60;re2.max_program_size.warn_level&#x60;&#x60; has no default if unset (will not check/log a warning). Envoy emits two stats for tracking the program size of regexes: the histogram &#x60;re2.program_size&#x60;, which records the program size, and the counter &#x60;re2.exceeded_warn_level&#x60;, which is incremented each time the program size exceeds the warn level threshold.
     * @alias module:model/GoogleRE2
     */
    constructor() { 
        
        GoogleRE2.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleRE2</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleRE2} obj Optional instance to populate.
     * @return {module:model/GoogleRE2} The populated <code>GoogleRE2</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleRE2();

            if (data.hasOwnProperty('maxProgramSize')) {
                obj['maxProgramSize'] = ApiClient.convertToType(data['maxProgramSize'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleRE2</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleRE2</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * This field controls the RE2 \"program size\" which is a rough estimate of how complex a compiled regex is to evaluate. A regex that has a program size greater than the configured value will fail to compile. In this case, the configured max program size can be increased or the regex can be simplified. If not specified, the default is 100. This field is deprecated; regexp validation should be performed on the management server instead of being done by each individual client.
 * @member {Number} maxProgramSize
 */
GoogleRE2.prototype['maxProgramSize'] = undefined;






export default GoogleRE2;

