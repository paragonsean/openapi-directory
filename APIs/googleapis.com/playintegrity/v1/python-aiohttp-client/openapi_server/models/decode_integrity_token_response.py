# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.token_payload_external import TokenPayloadExternal
from openapi_server import util


class DecodeIntegrityTokenResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, token_payload_external: TokenPayloadExternal=None):
        """DecodeIntegrityTokenResponse - a model defined in OpenAPI

        :param token_payload_external: The token_payload_external of this DecodeIntegrityTokenResponse.
        """
        self.openapi_types = {
            'token_payload_external': TokenPayloadExternal
        }

        self.attribute_map = {
            'token_payload_external': 'tokenPayloadExternal'
        }

        self._token_payload_external = token_payload_external

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DecodeIntegrityTokenResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DecodeIntegrityTokenResponse of this DecodeIntegrityTokenResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def token_payload_external(self):
        """Gets the token_payload_external of this DecodeIntegrityTokenResponse.


        :return: The token_payload_external of this DecodeIntegrityTokenResponse.
        :rtype: TokenPayloadExternal
        """
        return self._token_payload_external

    @token_payload_external.setter
    def token_payload_external(self, token_payload_external):
        """Sets the token_payload_external of this DecodeIntegrityTokenResponse.


        :param token_payload_external: The token_payload_external of this DecodeIntegrityTokenResponse.
        :type token_payload_external: TokenPayloadExternal
        """

        self._token_payload_external = token_payload_external
