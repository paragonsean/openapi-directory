# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TestingDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_testing_response: bool=None):
        """TestingDetails - a model defined in OpenAPI

        :param is_testing_response: The is_testing_response of this TestingDetails.
        """
        self.openapi_types = {
            'is_testing_response': bool
        }

        self.attribute_map = {
            'is_testing_response': 'isTestingResponse'
        }

        self._is_testing_response = is_testing_response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestingDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TestingDetails of this TestingDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_testing_response(self):
        """Gets the is_testing_response of this TestingDetails.

        Required. Indicates that the information contained in this payload is a testing response that is statically overridden for a tester.

        :return: The is_testing_response of this TestingDetails.
        :rtype: bool
        """
        return self._is_testing_response

    @is_testing_response.setter
    def is_testing_response(self, is_testing_response):
        """Sets the is_testing_response of this TestingDetails.

        Required. Indicates that the information contained in this payload is a testing response that is statically overridden for a tester.

        :param is_testing_response: The is_testing_response of this TestingDetails.
        :type is_testing_response: bool
        """

        self._is_testing_response = is_testing_response
