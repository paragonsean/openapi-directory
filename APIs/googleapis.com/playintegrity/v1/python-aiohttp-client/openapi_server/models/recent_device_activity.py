# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RecentDeviceActivity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_activity_level: str=None):
        """RecentDeviceActivity - a model defined in OpenAPI

        :param device_activity_level: The device_activity_level of this RecentDeviceActivity.
        """
        self.openapi_types = {
            'device_activity_level': str
        }

        self.attribute_map = {
            'device_activity_level': 'deviceActivityLevel'
        }

        self._device_activity_level = device_activity_level

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecentDeviceActivity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecentDeviceActivity of this RecentDeviceActivity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_activity_level(self):
        """Gets the device_activity_level of this RecentDeviceActivity.

        Required. Indicates the activity level of the device.

        :return: The device_activity_level of this RecentDeviceActivity.
        :rtype: str
        """
        return self._device_activity_level

    @device_activity_level.setter
    def device_activity_level(self, device_activity_level):
        """Sets the device_activity_level of this RecentDeviceActivity.

        Required. Indicates the activity level of the device.

        :param device_activity_level: The device_activity_level of this RecentDeviceActivity.
        :type device_activity_level: str
        """
        allowed_values = ["DEVICE_ACTIVITY_LEVEL_UNSPECIFIED", "UNEVALUATED", "LEVEL_1", "LEVEL_2", "LEVEL_3", "LEVEL_4"]  # noqa: E501
        if device_activity_level not in allowed_values:
            raise ValueError(
                "Invalid value for `device_activity_level` ({0}), must be one of {1}"
                .format(device_activity_level, allowed_values)
            )

        self._device_activity_level = device_activity_level
