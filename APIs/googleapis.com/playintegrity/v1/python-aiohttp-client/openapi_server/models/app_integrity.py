# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AppIntegrity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_recognition_verdict: str=None, certificate_sha256_digest: List[str]=None, package_name: str=None, version_code: str=None):
        """AppIntegrity - a model defined in OpenAPI

        :param app_recognition_verdict: The app_recognition_verdict of this AppIntegrity.
        :param certificate_sha256_digest: The certificate_sha256_digest of this AppIntegrity.
        :param package_name: The package_name of this AppIntegrity.
        :param version_code: The version_code of this AppIntegrity.
        """
        self.openapi_types = {
            'app_recognition_verdict': str,
            'certificate_sha256_digest': List[str],
            'package_name': str,
            'version_code': str
        }

        self.attribute_map = {
            'app_recognition_verdict': 'appRecognitionVerdict',
            'certificate_sha256_digest': 'certificateSha256Digest',
            'package_name': 'packageName',
            'version_code': 'versionCode'
        }

        self._app_recognition_verdict = app_recognition_verdict
        self._certificate_sha256_digest = certificate_sha256_digest
        self._package_name = package_name
        self._version_code = version_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppIntegrity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppIntegrity of this AppIntegrity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_recognition_verdict(self):
        """Gets the app_recognition_verdict of this AppIntegrity.

        Required. Details about the app recognition verdict

        :return: The app_recognition_verdict of this AppIntegrity.
        :rtype: str
        """
        return self._app_recognition_verdict

    @app_recognition_verdict.setter
    def app_recognition_verdict(self, app_recognition_verdict):
        """Sets the app_recognition_verdict of this AppIntegrity.

        Required. Details about the app recognition verdict

        :param app_recognition_verdict: The app_recognition_verdict of this AppIntegrity.
        :type app_recognition_verdict: str
        """
        allowed_values = ["UNKNOWN", "PLAY_RECOGNIZED", "UNRECOGNIZED_VERSION", "UNEVALUATED"]  # noqa: E501
        if app_recognition_verdict not in allowed_values:
            raise ValueError(
                "Invalid value for `app_recognition_verdict` ({0}), must be one of {1}"
                .format(app_recognition_verdict, allowed_values)
            )

        self._app_recognition_verdict = app_recognition_verdict

    @property
    def certificate_sha256_digest(self):
        """Gets the certificate_sha256_digest of this AppIntegrity.

        The SHA256 hash of the requesting app's signing certificates (base64 web-safe encoded). Set iff app_recognition_verdict != UNEVALUATED.

        :return: The certificate_sha256_digest of this AppIntegrity.
        :rtype: List[str]
        """
        return self._certificate_sha256_digest

    @certificate_sha256_digest.setter
    def certificate_sha256_digest(self, certificate_sha256_digest):
        """Sets the certificate_sha256_digest of this AppIntegrity.

        The SHA256 hash of the requesting app's signing certificates (base64 web-safe encoded). Set iff app_recognition_verdict != UNEVALUATED.

        :param certificate_sha256_digest: The certificate_sha256_digest of this AppIntegrity.
        :type certificate_sha256_digest: List[str]
        """

        self._certificate_sha256_digest = certificate_sha256_digest

    @property
    def package_name(self):
        """Gets the package_name of this AppIntegrity.

        Package name of the application under attestation. Set iff app_recognition_verdict != UNEVALUATED.

        :return: The package_name of this AppIntegrity.
        :rtype: str
        """
        return self._package_name

    @package_name.setter
    def package_name(self, package_name):
        """Sets the package_name of this AppIntegrity.

        Package name of the application under attestation. Set iff app_recognition_verdict != UNEVALUATED.

        :param package_name: The package_name of this AppIntegrity.
        :type package_name: str
        """

        self._package_name = package_name

    @property
    def version_code(self):
        """Gets the version_code of this AppIntegrity.

        Version code of the application. Set iff app_recognition_verdict != UNEVALUATED.

        :return: The version_code of this AppIntegrity.
        :rtype: str
        """
        return self._version_code

    @version_code.setter
    def version_code(self, version_code):
        """Sets the version_code of this AppIntegrity.

        Version code of the application. Set iff app_recognition_verdict != UNEVALUATED.

        :param version_code: The version_code of this AppIntegrity.
        :type version_code: str
        """

        self._version_code = version_code
