# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RequestDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, nonce: str=None, request_hash: str=None, request_package_name: str=None, timestamp_millis: str=None):
        """RequestDetails - a model defined in OpenAPI

        :param nonce: The nonce of this RequestDetails.
        :param request_hash: The request_hash of this RequestDetails.
        :param request_package_name: The request_package_name of this RequestDetails.
        :param timestamp_millis: The timestamp_millis of this RequestDetails.
        """
        self.openapi_types = {
            'nonce': str,
            'request_hash': str,
            'request_package_name': str,
            'timestamp_millis': str
        }

        self.attribute_map = {
            'nonce': 'nonce',
            'request_hash': 'requestHash',
            'request_package_name': 'requestPackageName',
            'timestamp_millis': 'timestampMillis'
        }

        self._nonce = nonce
        self._request_hash = request_hash
        self._request_package_name = request_package_name
        self._timestamp_millis = timestamp_millis

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RequestDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RequestDetails of this RequestDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nonce(self):
        """Gets the nonce of this RequestDetails.

        Nonce that was provided in the request (which is base64 web-safe no-wrap).

        :return: The nonce of this RequestDetails.
        :rtype: str
        """
        return self._nonce

    @nonce.setter
    def nonce(self, nonce):
        """Sets the nonce of this RequestDetails.

        Nonce that was provided in the request (which is base64 web-safe no-wrap).

        :param nonce: The nonce of this RequestDetails.
        :type nonce: str
        """

        self._nonce = nonce

    @property
    def request_hash(self):
        """Gets the request_hash of this RequestDetails.

        Request hash that was provided in the request.

        :return: The request_hash of this RequestDetails.
        :rtype: str
        """
        return self._request_hash

    @request_hash.setter
    def request_hash(self, request_hash):
        """Sets the request_hash of this RequestDetails.

        Request hash that was provided in the request.

        :param request_hash: The request_hash of this RequestDetails.
        :type request_hash: str
        """

        self._request_hash = request_hash

    @property
    def request_package_name(self):
        """Gets the request_package_name of this RequestDetails.

        Required. Application package name this attestation was requested for. Note: This field makes no guarantees or promises on the caller integrity. For details on application integrity, check application_integrity.

        :return: The request_package_name of this RequestDetails.
        :rtype: str
        """
        return self._request_package_name

    @request_package_name.setter
    def request_package_name(self, request_package_name):
        """Sets the request_package_name of this RequestDetails.

        Required. Application package name this attestation was requested for. Note: This field makes no guarantees or promises on the caller integrity. For details on application integrity, check application_integrity.

        :param request_package_name: The request_package_name of this RequestDetails.
        :type request_package_name: str
        """

        self._request_package_name = request_package_name

    @property
    def timestamp_millis(self):
        """Gets the timestamp_millis of this RequestDetails.

        Required. Timestamp, in milliseconds, of the integrity application request.

        :return: The timestamp_millis of this RequestDetails.
        :rtype: str
        """
        return self._timestamp_millis

    @timestamp_millis.setter
    def timestamp_millis(self, timestamp_millis):
        """Sets the timestamp_millis of this RequestDetails.

        Required. Timestamp, in milliseconds, of the integrity application request.

        :param timestamp_millis: The timestamp_millis of this RequestDetails.
        :type timestamp_millis: str
        """

        self._timestamp_millis = timestamp_millis
