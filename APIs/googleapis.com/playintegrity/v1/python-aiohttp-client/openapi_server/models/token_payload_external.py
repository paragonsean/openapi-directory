# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_details import AccountDetails
from openapi_server.models.app_integrity import AppIntegrity
from openapi_server.models.device_integrity import DeviceIntegrity
from openapi_server.models.environment_details import EnvironmentDetails
from openapi_server.models.request_details import RequestDetails
from openapi_server.models.testing_details import TestingDetails
from openapi_server import util


class TokenPayloadExternal(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_details: AccountDetails=None, app_integrity: AppIntegrity=None, device_integrity: DeviceIntegrity=None, environment_details: EnvironmentDetails=None, request_details: RequestDetails=None, testing_details: TestingDetails=None):
        """TokenPayloadExternal - a model defined in OpenAPI

        :param account_details: The account_details of this TokenPayloadExternal.
        :param app_integrity: The app_integrity of this TokenPayloadExternal.
        :param device_integrity: The device_integrity of this TokenPayloadExternal.
        :param environment_details: The environment_details of this TokenPayloadExternal.
        :param request_details: The request_details of this TokenPayloadExternal.
        :param testing_details: The testing_details of this TokenPayloadExternal.
        """
        self.openapi_types = {
            'account_details': AccountDetails,
            'app_integrity': AppIntegrity,
            'device_integrity': DeviceIntegrity,
            'environment_details': EnvironmentDetails,
            'request_details': RequestDetails,
            'testing_details': TestingDetails
        }

        self.attribute_map = {
            'account_details': 'accountDetails',
            'app_integrity': 'appIntegrity',
            'device_integrity': 'deviceIntegrity',
            'environment_details': 'environmentDetails',
            'request_details': 'requestDetails',
            'testing_details': 'testingDetails'
        }

        self._account_details = account_details
        self._app_integrity = app_integrity
        self._device_integrity = device_integrity
        self._environment_details = environment_details
        self._request_details = request_details
        self._testing_details = testing_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TokenPayloadExternal':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TokenPayloadExternal of this TokenPayloadExternal.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_details(self):
        """Gets the account_details of this TokenPayloadExternal.


        :return: The account_details of this TokenPayloadExternal.
        :rtype: AccountDetails
        """
        return self._account_details

    @account_details.setter
    def account_details(self, account_details):
        """Sets the account_details of this TokenPayloadExternal.


        :param account_details: The account_details of this TokenPayloadExternal.
        :type account_details: AccountDetails
        """

        self._account_details = account_details

    @property
    def app_integrity(self):
        """Gets the app_integrity of this TokenPayloadExternal.


        :return: The app_integrity of this TokenPayloadExternal.
        :rtype: AppIntegrity
        """
        return self._app_integrity

    @app_integrity.setter
    def app_integrity(self, app_integrity):
        """Sets the app_integrity of this TokenPayloadExternal.


        :param app_integrity: The app_integrity of this TokenPayloadExternal.
        :type app_integrity: AppIntegrity
        """

        self._app_integrity = app_integrity

    @property
    def device_integrity(self):
        """Gets the device_integrity of this TokenPayloadExternal.


        :return: The device_integrity of this TokenPayloadExternal.
        :rtype: DeviceIntegrity
        """
        return self._device_integrity

    @device_integrity.setter
    def device_integrity(self, device_integrity):
        """Sets the device_integrity of this TokenPayloadExternal.


        :param device_integrity: The device_integrity of this TokenPayloadExternal.
        :type device_integrity: DeviceIntegrity
        """

        self._device_integrity = device_integrity

    @property
    def environment_details(self):
        """Gets the environment_details of this TokenPayloadExternal.


        :return: The environment_details of this TokenPayloadExternal.
        :rtype: EnvironmentDetails
        """
        return self._environment_details

    @environment_details.setter
    def environment_details(self, environment_details):
        """Sets the environment_details of this TokenPayloadExternal.


        :param environment_details: The environment_details of this TokenPayloadExternal.
        :type environment_details: EnvironmentDetails
        """

        self._environment_details = environment_details

    @property
    def request_details(self):
        """Gets the request_details of this TokenPayloadExternal.


        :return: The request_details of this TokenPayloadExternal.
        :rtype: RequestDetails
        """
        return self._request_details

    @request_details.setter
    def request_details(self, request_details):
        """Sets the request_details of this TokenPayloadExternal.


        :param request_details: The request_details of this TokenPayloadExternal.
        :type request_details: RequestDetails
        """

        self._request_details = request_details

    @property
    def testing_details(self):
        """Gets the testing_details of this TokenPayloadExternal.


        :return: The testing_details of this TokenPayloadExternal.
        :rtype: TestingDetails
        """
        return self._testing_details

    @testing_details.setter
    def testing_details(self, testing_details):
        """Sets the testing_details of this TokenPayloadExternal.


        :param testing_details: The testing_details of this TokenPayloadExternal.
        :type testing_details: TestingDetails
        """

        self._testing_details = testing_details
