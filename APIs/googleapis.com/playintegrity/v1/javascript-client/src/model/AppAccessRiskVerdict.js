/**
 * Google Play Integrity API
 * The Play Integrity API helps you check that you're interacting with your genuine app on a genuine Android device powered by Google Play services. The Play Integrity API has replaced SafetyNet Attestation and Android Device Verification.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AppAccessRiskVerdict model module.
 * @module model/AppAccessRiskVerdict
 * @version v1
 */
class AppAccessRiskVerdict {
    /**
     * Constructs a new <code>AppAccessRiskVerdict</code>.
     * Contains signals about others apps on the device which could be used to access or control the requesting app.
     * @alias module:model/AppAccessRiskVerdict
     */
    constructor() { 
        
        AppAccessRiskVerdict.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AppAccessRiskVerdict</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppAccessRiskVerdict} obj Optional instance to populate.
     * @return {module:model/AppAccessRiskVerdict} The populated <code>AppAccessRiskVerdict</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppAccessRiskVerdict();

            if (data.hasOwnProperty('otherApps')) {
                obj['otherApps'] = ApiClient.convertToType(data['otherApps'], 'String');
            }
            if (data.hasOwnProperty('playOrSystemApps')) {
                obj['playOrSystemApps'] = ApiClient.convertToType(data['playOrSystemApps'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppAccessRiskVerdict</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppAccessRiskVerdict</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['otherApps'] && !(typeof data['otherApps'] === 'string' || data['otherApps'] instanceof String)) {
            throw new Error("Expected the field `otherApps` to be a primitive type in the JSON string but got " + data['otherApps']);
        }
        // ensure the json data is a string
        if (data['playOrSystemApps'] && !(typeof data['playOrSystemApps'] === 'string' || data['playOrSystemApps'] instanceof String)) {
            throw new Error("Expected the field `playOrSystemApps` to be a primitive type in the JSON string but got " + data['playOrSystemApps']);
        }

        return true;
    }


}



/**
 * Required. App access risk verdict related to apps that are not installed by Google Play, and are not preloaded on the system image by the device manufacturer.
 * @member {module:model/AppAccessRiskVerdict.OtherAppsEnum} otherApps
 */
AppAccessRiskVerdict.prototype['otherApps'] = undefined;

/**
 * Required. App access risk verdict related to apps that are not installed by the Google Play Store, and are not preloaded on the system image by the device manufacturer.
 * @member {module:model/AppAccessRiskVerdict.PlayOrSystemAppsEnum} playOrSystemApps
 */
AppAccessRiskVerdict.prototype['playOrSystemApps'] = undefined;





/**
 * Allowed values for the <code>otherApps</code> property.
 * @enum {String}
 * @readonly
 */
AppAccessRiskVerdict['OtherAppsEnum'] = {

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",

    /**
     * value: "UNEVALUATED"
     * @const
     */
    "UNEVALUATED": "UNEVALUATED",

    /**
     * value: "NOT_INSTALLED"
     * @const
     */
    "NOT_INSTALLED": "NOT_INSTALLED",

    /**
     * value: "INSTALLED"
     * @const
     */
    "INSTALLED": "INSTALLED",

    /**
     * value: "CAPTURING"
     * @const
     */
    "CAPTURING": "CAPTURING",

    /**
     * value: "CONTROLLING"
     * @const
     */
    "CONTROLLING": "CONTROLLING"
};


/**
 * Allowed values for the <code>playOrSystemApps</code> property.
 * @enum {String}
 * @readonly
 */
AppAccessRiskVerdict['PlayOrSystemAppsEnum'] = {

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",

    /**
     * value: "UNEVALUATED"
     * @const
     */
    "UNEVALUATED": "UNEVALUATED",

    /**
     * value: "NOT_INSTALLED"
     * @const
     */
    "NOT_INSTALLED": "NOT_INSTALLED",

    /**
     * value: "INSTALLED"
     * @const
     */
    "INSTALLED": "INSTALLED",

    /**
     * value: "CAPTURING"
     * @const
     */
    "CAPTURING": "CAPTURING",

    /**
     * value: "CONTROLLING"
     * @const
     */
    "CONTROLLING": "CONTROLLING"
};



export default AppAccessRiskVerdict;

