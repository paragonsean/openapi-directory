/**
 * Google Play Integrity API
 * The Play Integrity API helps you check that you're interacting with your genuine app on a genuine Android device powered by Google Play services. The Play Integrity API has replaced SafetyNet Attestation and Android Device Verification.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccountActivity from './AccountActivity';

/**
 * The AccountDetails model module.
 * @module model/AccountDetails
 * @version v1
 */
class AccountDetails {
    /**
     * Constructs a new <code>AccountDetails</code>.
     * Contains the account information such as the licensing status for the user in the scope.
     * @alias module:model/AccountDetails
     */
    constructor() { 
        
        AccountDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AccountDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccountDetails} obj Optional instance to populate.
     * @return {module:model/AccountDetails} The populated <code>AccountDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccountDetails();

            if (data.hasOwnProperty('accountActivity')) {
                obj['accountActivity'] = AccountActivity.constructFromObject(data['accountActivity']);
            }
            if (data.hasOwnProperty('appLicensingVerdict')) {
                obj['appLicensingVerdict'] = ApiClient.convertToType(data['appLicensingVerdict'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccountDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccountDetails</code>.
     */
    static validateJSON(data) {
        // validate the optional field `accountActivity`
        if (data['accountActivity']) { // data not null
          AccountActivity.validateJSON(data['accountActivity']);
        }
        // ensure the json data is a string
        if (data['appLicensingVerdict'] && !(typeof data['appLicensingVerdict'] === 'string' || data['appLicensingVerdict'] instanceof String)) {
            throw new Error("Expected the field `appLicensingVerdict` to be a primitive type in the JSON string but got " + data['appLicensingVerdict']);
        }

        return true;
    }


}



/**
 * @member {module:model/AccountActivity} accountActivity
 */
AccountDetails.prototype['accountActivity'] = undefined;

/**
 * Required. Details about the licensing status of the user for the app in the scope.
 * @member {module:model/AccountDetails.AppLicensingVerdictEnum} appLicensingVerdict
 */
AccountDetails.prototype['appLicensingVerdict'] = undefined;





/**
 * Allowed values for the <code>appLicensingVerdict</code> property.
 * @enum {String}
 * @readonly
 */
AccountDetails['AppLicensingVerdictEnum'] = {

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",

    /**
     * value: "LICENSED"
     * @const
     */
    "LICENSED": "LICENSED",

    /**
     * value: "UNLICENSED"
     * @const
     */
    "UNLICENSED": "UNLICENSED",

    /**
     * value: "UNEVALUATED"
     * @const
     */
    "UNEVALUATED": "UNEVALUATED"
};



export default AccountDetails;

