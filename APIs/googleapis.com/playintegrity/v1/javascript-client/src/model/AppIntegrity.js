/**
 * Google Play Integrity API
 * The Play Integrity API helps you check that you're interacting with your genuine app on a genuine Android device powered by Google Play services. The Play Integrity API has replaced SafetyNet Attestation and Android Device Verification.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AppIntegrity model module.
 * @module model/AppIntegrity
 * @version v1
 */
class AppIntegrity {
    /**
     * Constructs a new <code>AppIntegrity</code>.
     * Contains the application integrity information.
     * @alias module:model/AppIntegrity
     */
    constructor() { 
        
        AppIntegrity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AppIntegrity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppIntegrity} obj Optional instance to populate.
     * @return {module:model/AppIntegrity} The populated <code>AppIntegrity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppIntegrity();

            if (data.hasOwnProperty('appRecognitionVerdict')) {
                obj['appRecognitionVerdict'] = ApiClient.convertToType(data['appRecognitionVerdict'], 'String');
            }
            if (data.hasOwnProperty('certificateSha256Digest')) {
                obj['certificateSha256Digest'] = ApiClient.convertToType(data['certificateSha256Digest'], ['String']);
            }
            if (data.hasOwnProperty('packageName')) {
                obj['packageName'] = ApiClient.convertToType(data['packageName'], 'String');
            }
            if (data.hasOwnProperty('versionCode')) {
                obj['versionCode'] = ApiClient.convertToType(data['versionCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppIntegrity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppIntegrity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['appRecognitionVerdict'] && !(typeof data['appRecognitionVerdict'] === 'string' || data['appRecognitionVerdict'] instanceof String)) {
            throw new Error("Expected the field `appRecognitionVerdict` to be a primitive type in the JSON string but got " + data['appRecognitionVerdict']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['certificateSha256Digest'])) {
            throw new Error("Expected the field `certificateSha256Digest` to be an array in the JSON data but got " + data['certificateSha256Digest']);
        }
        // ensure the json data is a string
        if (data['packageName'] && !(typeof data['packageName'] === 'string' || data['packageName'] instanceof String)) {
            throw new Error("Expected the field `packageName` to be a primitive type in the JSON string but got " + data['packageName']);
        }
        // ensure the json data is a string
        if (data['versionCode'] && !(typeof data['versionCode'] === 'string' || data['versionCode'] instanceof String)) {
            throw new Error("Expected the field `versionCode` to be a primitive type in the JSON string but got " + data['versionCode']);
        }

        return true;
    }


}



/**
 * Required. Details about the app recognition verdict
 * @member {module:model/AppIntegrity.AppRecognitionVerdictEnum} appRecognitionVerdict
 */
AppIntegrity.prototype['appRecognitionVerdict'] = undefined;

/**
 * The SHA256 hash of the requesting app's signing certificates (base64 web-safe encoded). Set iff app_recognition_verdict != UNEVALUATED.
 * @member {Array.<String>} certificateSha256Digest
 */
AppIntegrity.prototype['certificateSha256Digest'] = undefined;

/**
 * Package name of the application under attestation. Set iff app_recognition_verdict != UNEVALUATED.
 * @member {String} packageName
 */
AppIntegrity.prototype['packageName'] = undefined;

/**
 * Version code of the application. Set iff app_recognition_verdict != UNEVALUATED.
 * @member {String} versionCode
 */
AppIntegrity.prototype['versionCode'] = undefined;





/**
 * Allowed values for the <code>appRecognitionVerdict</code> property.
 * @enum {String}
 * @readonly
 */
AppIntegrity['AppRecognitionVerdictEnum'] = {

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",

    /**
     * value: "PLAY_RECOGNIZED"
     * @const
     */
    "PLAY_RECOGNIZED": "PLAY_RECOGNIZED",

    /**
     * value: "UNRECOGNIZED_VERSION"
     * @const
     */
    "UNRECOGNIZED_VERSION": "UNRECOGNIZED_VERSION",

    /**
     * value: "UNEVALUATED"
     * @const
     */
    "UNEVALUATED": "UNEVALUATED"
};



export default AppIntegrity;

