/**
 * Google Play Integrity API
 * The Play Integrity API helps you check that you're interacting with your genuine app on a genuine Android device powered by Google Play services. The Play Integrity API has replaced SafetyNet Attestation and Android Device Verification.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AccountActivity model module.
 * @module model/AccountActivity
 * @version v1
 */
class AccountActivity {
    /**
     * Constructs a new <code>AccountActivity</code>.
     * (Restricted Access) Contains a signal helping apps differentiating between likely genuine and likely non-genuine user traffic.
     * @alias module:model/AccountActivity
     */
    constructor() { 
        
        AccountActivity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AccountActivity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccountActivity} obj Optional instance to populate.
     * @return {module:model/AccountActivity} The populated <code>AccountActivity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccountActivity();

            if (data.hasOwnProperty('activityLevel')) {
                obj['activityLevel'] = ApiClient.convertToType(data['activityLevel'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccountActivity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccountActivity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['activityLevel'] && !(typeof data['activityLevel'] === 'string' || data['activityLevel'] instanceof String)) {
            throw new Error("Expected the field `activityLevel` to be a primitive type in the JSON string but got " + data['activityLevel']);
        }

        return true;
    }


}



/**
 * Required. Indicates the activity level of the account.
 * @member {module:model/AccountActivity.ActivityLevelEnum} activityLevel
 */
AccountActivity.prototype['activityLevel'] = undefined;





/**
 * Allowed values for the <code>activityLevel</code> property.
 * @enum {String}
 * @readonly
 */
AccountActivity['ActivityLevelEnum'] = {

    /**
     * value: "ACTIVITY_LEVEL_UNSPECIFIED"
     * @const
     */
    "ACTIVITY_LEVEL_UNSPECIFIED": "ACTIVITY_LEVEL_UNSPECIFIED",

    /**
     * value: "UNEVALUATED"
     * @const
     */
    "UNEVALUATED": "UNEVALUATED",

    /**
     * value: "UNUSUAL"
     * @const
     */
    "UNUSUAL": "UNUSUAL",

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",

    /**
     * value: "TYPICAL_BASIC"
     * @const
     */
    "TYPICAL_BASIC": "TYPICAL_BASIC",

    /**
     * value: "TYPICAL_STRONG"
     * @const
     */
    "TYPICAL_STRONG": "TYPICAL_STRONG"
};



export default AccountActivity;

