/**
 * Google Play Integrity API
 * The Play Integrity API helps you check that you're interacting with your genuine app on a genuine Android device powered by Google Play services. The Play Integrity API has replaced SafetyNet Attestation and Android Device Verification.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AccountActivity from './model/AccountActivity';
import AccountDetails from './model/AccountDetails';
import AppAccessRiskVerdict from './model/AppAccessRiskVerdict';
import AppIntegrity from './model/AppIntegrity';
import DecodeIntegrityTokenRequest from './model/DecodeIntegrityTokenRequest';
import DecodeIntegrityTokenResponse from './model/DecodeIntegrityTokenResponse';
import DeviceIntegrity from './model/DeviceIntegrity';
import EnvironmentDetails from './model/EnvironmentDetails';
import RecentDeviceActivity from './model/RecentDeviceActivity';
import RequestDetails from './model/RequestDetails';
import TestingDetails from './model/TestingDetails';
import TokenPayloadExternal from './model/TokenPayloadExternal';
import V1Api from './api/V1Api';


/**
* The Play Integrity API helps you check that you&#39;re interacting with your genuine app on a genuine Android device powered by Google Play services. The Play Integrity API has replaced SafetyNet Attestation and Android Device Verification..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var GooglePlayIntegrityApi = require('index'); // See note below*.
* var xxxSvc = new GooglePlayIntegrityApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new GooglePlayIntegrityApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new GooglePlayIntegrityApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new GooglePlayIntegrityApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AccountActivity model constructor.
     * @property {module:model/AccountActivity}
     */
    AccountActivity,

    /**
     * The AccountDetails model constructor.
     * @property {module:model/AccountDetails}
     */
    AccountDetails,

    /**
     * The AppAccessRiskVerdict model constructor.
     * @property {module:model/AppAccessRiskVerdict}
     */
    AppAccessRiskVerdict,

    /**
     * The AppIntegrity model constructor.
     * @property {module:model/AppIntegrity}
     */
    AppIntegrity,

    /**
     * The DecodeIntegrityTokenRequest model constructor.
     * @property {module:model/DecodeIntegrityTokenRequest}
     */
    DecodeIntegrityTokenRequest,

    /**
     * The DecodeIntegrityTokenResponse model constructor.
     * @property {module:model/DecodeIntegrityTokenResponse}
     */
    DecodeIntegrityTokenResponse,

    /**
     * The DeviceIntegrity model constructor.
     * @property {module:model/DeviceIntegrity}
     */
    DeviceIntegrity,

    /**
     * The EnvironmentDetails model constructor.
     * @property {module:model/EnvironmentDetails}
     */
    EnvironmentDetails,

    /**
     * The RecentDeviceActivity model constructor.
     * @property {module:model/RecentDeviceActivity}
     */
    RecentDeviceActivity,

    /**
     * The RequestDetails model constructor.
     * @property {module:model/RequestDetails}
     */
    RequestDetails,

    /**
     * The TestingDetails model constructor.
     * @property {module:model/TestingDetails}
     */
    TestingDetails,

    /**
     * The TokenPayloadExternal model constructor.
     * @property {module:model/TokenPayloadExternal}
     */
    TokenPayloadExternal,

    /**
    * The V1Api service constructor.
    * @property {module:api/V1Api}
    */
    V1Api
};
