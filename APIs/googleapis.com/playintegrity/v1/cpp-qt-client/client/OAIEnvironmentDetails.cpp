/**
 * Google Play Integrity API
 * The Play Integrity API helps you check that you're interacting with your genuine app on a genuine Android device powered by Google Play services. The Play Integrity API has replaced SafetyNet Attestation and Android Device Verification.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnvironmentDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnvironmentDetails::OAIEnvironmentDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnvironmentDetails::OAIEnvironmentDetails() {
    this->initializeModel();
}

OAIEnvironmentDetails::~OAIEnvironmentDetails() {}

void OAIEnvironmentDetails::initializeModel() {

    m_app_access_risk_verdict_isSet = false;
    m_app_access_risk_verdict_isValid = false;

    m_play_protect_verdict_isSet = false;
    m_play_protect_verdict_isValid = false;
}

void OAIEnvironmentDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnvironmentDetails::fromJsonObject(QJsonObject json) {

    m_app_access_risk_verdict_isValid = ::OpenAPI::fromJsonValue(m_app_access_risk_verdict, json[QString("appAccessRiskVerdict")]);
    m_app_access_risk_verdict_isSet = !json[QString("appAccessRiskVerdict")].isNull() && m_app_access_risk_verdict_isValid;

    m_play_protect_verdict_isValid = ::OpenAPI::fromJsonValue(m_play_protect_verdict, json[QString("playProtectVerdict")]);
    m_play_protect_verdict_isSet = !json[QString("playProtectVerdict")].isNull() && m_play_protect_verdict_isValid;
}

QString OAIEnvironmentDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnvironmentDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_app_access_risk_verdict.isSet()) {
        obj.insert(QString("appAccessRiskVerdict"), ::OpenAPI::toJsonValue(m_app_access_risk_verdict));
    }
    if (m_play_protect_verdict_isSet) {
        obj.insert(QString("playProtectVerdict"), ::OpenAPI::toJsonValue(m_play_protect_verdict));
    }
    return obj;
}

OAIAppAccessRiskVerdict OAIEnvironmentDetails::getAppAccessRiskVerdict() const {
    return m_app_access_risk_verdict;
}
void OAIEnvironmentDetails::setAppAccessRiskVerdict(const OAIAppAccessRiskVerdict &app_access_risk_verdict) {
    m_app_access_risk_verdict = app_access_risk_verdict;
    m_app_access_risk_verdict_isSet = true;
}

bool OAIEnvironmentDetails::is_app_access_risk_verdict_Set() const{
    return m_app_access_risk_verdict_isSet;
}

bool OAIEnvironmentDetails::is_app_access_risk_verdict_Valid() const{
    return m_app_access_risk_verdict_isValid;
}

QString OAIEnvironmentDetails::getPlayProtectVerdict() const {
    return m_play_protect_verdict;
}
void OAIEnvironmentDetails::setPlayProtectVerdict(const QString &play_protect_verdict) {
    m_play_protect_verdict = play_protect_verdict;
    m_play_protect_verdict_isSet = true;
}

bool OAIEnvironmentDetails::is_play_protect_verdict_Set() const{
    return m_play_protect_verdict_isSet;
}

bool OAIEnvironmentDetails::is_play_protect_verdict_Valid() const{
    return m_play_protect_verdict_isValid;
}

bool OAIEnvironmentDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_access_risk_verdict.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_play_protect_verdict_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnvironmentDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
