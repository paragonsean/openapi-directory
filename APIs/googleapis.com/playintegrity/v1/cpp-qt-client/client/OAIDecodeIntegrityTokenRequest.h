/**
 * Google Play Integrity API
 * The Play Integrity API helps you check that you're interacting with your genuine app on a genuine Android device powered by Google Play services. The Play Integrity API has replaced SafetyNet Attestation and Android Device Verification.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDecodeIntegrityTokenRequest.h
 *
 * Request to decode the integrity token.
 */

#ifndef OAIDecodeIntegrityTokenRequest_H
#define OAIDecodeIntegrityTokenRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDecodeIntegrityTokenRequest : public OAIObject {
public:
    OAIDecodeIntegrityTokenRequest();
    OAIDecodeIntegrityTokenRequest(QString json);
    ~OAIDecodeIntegrityTokenRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIntegrityToken() const;
    void setIntegrityToken(const QString &integrity_token);
    bool is_integrity_token_Set() const;
    bool is_integrity_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_integrity_token;
    bool m_integrity_token_isSet;
    bool m_integrity_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDecodeIntegrityTokenRequest)

#endif // OAIDecodeIntegrityTokenRequest_H
