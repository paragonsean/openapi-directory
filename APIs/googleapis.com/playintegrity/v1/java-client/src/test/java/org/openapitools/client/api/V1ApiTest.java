/*
 * Google Play Integrity API
 * The Play Integrity API helps you check that you're interacting with your genuine app on a genuine Android device powered by Google Play services. The Play Integrity API has replaced SafetyNet Attestation and Android Device Verification.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DecodeIntegrityTokenRequest;
import org.openapitools.client.model.DecodeIntegrityTokenResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for V1Api
 */
@Disabled
public class V1ApiTest {

    private final V1Api api = new V1Api();

    /**
     * Decodes the integrity token and returns the token payload.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playintegrityDecodeIntegrityTokenTest() throws ApiException {
        String packageName = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        DecodeIntegrityTokenRequest decodeIntegrityTokenRequest = null;
        DecodeIntegrityTokenResponse response = api.playintegrityDecodeIntegrityToken(packageName, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, decodeIntegrityTokenRequest);
        // TODO: test validations
    }

}
