/**
 * Chrome Policy API
 * The Chrome Policy API is a suite of services that allows Chrome administrators to control the policies applied to their managed Chrome OS devices and Chrome browsers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ChromePolicyApi);
  }
}(this, function(expect, ChromePolicyApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ChromePolicyApi.CustomersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CustomersApi', function() {
    describe('chromepolicyCustomersPoliciesGroupsBatchDelete', function() {
      it('should call chromepolicyCustomersPoliciesGroupsBatchDelete successfully', function(done) {
        //uncomment below and update the code to test chromepolicyCustomersPoliciesGroupsBatchDelete
        //instance.chromepolicyCustomersPoliciesGroupsBatchDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('chromepolicyCustomersPoliciesGroupsBatchModify', function() {
      it('should call chromepolicyCustomersPoliciesGroupsBatchModify successfully', function(done) {
        //uncomment below and update the code to test chromepolicyCustomersPoliciesGroupsBatchModify
        //instance.chromepolicyCustomersPoliciesGroupsBatchModify(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('chromepolicyCustomersPoliciesGroupsListGroupPriorityOrdering', function() {
      it('should call chromepolicyCustomersPoliciesGroupsListGroupPriorityOrdering successfully', function(done) {
        //uncomment below and update the code to test chromepolicyCustomersPoliciesGroupsListGroupPriorityOrdering
        //instance.chromepolicyCustomersPoliciesGroupsListGroupPriorityOrdering(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('chromepolicyCustomersPoliciesGroupsUpdateGroupPriorityOrdering', function() {
      it('should call chromepolicyCustomersPoliciesGroupsUpdateGroupPriorityOrdering successfully', function(done) {
        //uncomment below and update the code to test chromepolicyCustomersPoliciesGroupsUpdateGroupPriorityOrdering
        //instance.chromepolicyCustomersPoliciesGroupsUpdateGroupPriorityOrdering(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('chromepolicyCustomersPoliciesNetworksDefineCertificate', function() {
      it('should call chromepolicyCustomersPoliciesNetworksDefineCertificate successfully', function(done) {
        //uncomment below and update the code to test chromepolicyCustomersPoliciesNetworksDefineCertificate
        //instance.chromepolicyCustomersPoliciesNetworksDefineCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('chromepolicyCustomersPoliciesNetworksDefineNetwork', function() {
      it('should call chromepolicyCustomersPoliciesNetworksDefineNetwork successfully', function(done) {
        //uncomment below and update the code to test chromepolicyCustomersPoliciesNetworksDefineNetwork
        //instance.chromepolicyCustomersPoliciesNetworksDefineNetwork(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('chromepolicyCustomersPoliciesNetworksRemoveCertificate', function() {
      it('should call chromepolicyCustomersPoliciesNetworksRemoveCertificate successfully', function(done) {
        //uncomment below and update the code to test chromepolicyCustomersPoliciesNetworksRemoveCertificate
        //instance.chromepolicyCustomersPoliciesNetworksRemoveCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('chromepolicyCustomersPoliciesNetworksRemoveNetwork', function() {
      it('should call chromepolicyCustomersPoliciesNetworksRemoveNetwork successfully', function(done) {
        //uncomment below and update the code to test chromepolicyCustomersPoliciesNetworksRemoveNetwork
        //instance.chromepolicyCustomersPoliciesNetworksRemoveNetwork(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('chromepolicyCustomersPoliciesOrgunitsBatchInherit', function() {
      it('should call chromepolicyCustomersPoliciesOrgunitsBatchInherit successfully', function(done) {
        //uncomment below and update the code to test chromepolicyCustomersPoliciesOrgunitsBatchInherit
        //instance.chromepolicyCustomersPoliciesOrgunitsBatchInherit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('chromepolicyCustomersPoliciesOrgunitsBatchModify', function() {
      it('should call chromepolicyCustomersPoliciesOrgunitsBatchModify successfully', function(done) {
        //uncomment below and update the code to test chromepolicyCustomersPoliciesOrgunitsBatchModify
        //instance.chromepolicyCustomersPoliciesOrgunitsBatchModify(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('chromepolicyCustomersPoliciesResolve', function() {
      it('should call chromepolicyCustomersPoliciesResolve successfully', function(done) {
        //uncomment below and update the code to test chromepolicyCustomersPoliciesResolve
        //instance.chromepolicyCustomersPoliciesResolve(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('chromepolicyCustomersPolicySchemasGet', function() {
      it('should call chromepolicyCustomersPolicySchemasGet successfully', function(done) {
        //uncomment below and update the code to test chromepolicyCustomersPolicySchemasGet
        //instance.chromepolicyCustomersPolicySchemasGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('chromepolicyCustomersPolicySchemasList', function() {
      it('should call chromepolicyCustomersPolicySchemasList successfully', function(done) {
        //uncomment below and update the code to test chromepolicyCustomersPolicySchemasList
        //instance.chromepolicyCustomersPolicySchemasList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
