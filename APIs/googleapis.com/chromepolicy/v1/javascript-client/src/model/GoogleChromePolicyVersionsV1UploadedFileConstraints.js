/**
 * Chrome Policy API
 * The Chrome Policy API is a suite of services that allows Chrome administrators to control the policies applied to their managed Chrome OS devices and Chrome browsers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleChromePolicyVersionsV1UploadedFileConstraints model module.
 * @module model/GoogleChromePolicyVersionsV1UploadedFileConstraints
 * @version v1
 */
class GoogleChromePolicyVersionsV1UploadedFileConstraints {
    /**
     * Constructs a new <code>GoogleChromePolicyVersionsV1UploadedFileConstraints</code>.
     * Constraints on the uploaded file of a file policy.
     * @alias module:model/GoogleChromePolicyVersionsV1UploadedFileConstraints
     */
    constructor() { 
        
        GoogleChromePolicyVersionsV1UploadedFileConstraints.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleChromePolicyVersionsV1UploadedFileConstraints</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleChromePolicyVersionsV1UploadedFileConstraints} obj Optional instance to populate.
     * @return {module:model/GoogleChromePolicyVersionsV1UploadedFileConstraints} The populated <code>GoogleChromePolicyVersionsV1UploadedFileConstraints</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleChromePolicyVersionsV1UploadedFileConstraints();

            if (data.hasOwnProperty('sizeLimitBytes')) {
                obj['sizeLimitBytes'] = ApiClient.convertToType(data['sizeLimitBytes'], 'String');
            }
            if (data.hasOwnProperty('supportedContentTypes')) {
                obj['supportedContentTypes'] = ApiClient.convertToType(data['supportedContentTypes'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleChromePolicyVersionsV1UploadedFileConstraints</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleChromePolicyVersionsV1UploadedFileConstraints</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['sizeLimitBytes'] && !(typeof data['sizeLimitBytes'] === 'string' || data['sizeLimitBytes'] instanceof String)) {
            throw new Error("Expected the field `sizeLimitBytes` to be a primitive type in the JSON string but got " + data['sizeLimitBytes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['supportedContentTypes'])) {
            throw new Error("Expected the field `supportedContentTypes` to be an array in the JSON data but got " + data['supportedContentTypes']);
        }

        return true;
    }


}



/**
 * The size limit of uploaded files for a setting, in bytes.
 * @member {String} sizeLimitBytes
 */
GoogleChromePolicyVersionsV1UploadedFileConstraints.prototype['sizeLimitBytes'] = undefined;

/**
 * File types that can be uploaded for a setting.
 * @member {Array.<module:model/GoogleChromePolicyVersionsV1UploadedFileConstraints.SupportedContentTypesEnum>} supportedContentTypes
 */
GoogleChromePolicyVersionsV1UploadedFileConstraints.prototype['supportedContentTypes'] = undefined;





/**
 * Allowed values for the <code>supportedContentTypes</code> property.
 * @enum {String}
 * @readonly
 */
GoogleChromePolicyVersionsV1UploadedFileConstraints['SupportedContentTypesEnum'] = {

    /**
     * value: "CONTENT_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "CONTENT_TYPE_UNSPECIFIED",

    /**
     * value: "CONTENT_TYPE_PLAIN_TEXT"
     * @const
     */
    "PLAIN_TEXT": "CONTENT_TYPE_PLAIN_TEXT",

    /**
     * value: "CONTENT_TYPE_HTML"
     * @const
     */
    "HTML": "CONTENT_TYPE_HTML",

    /**
     * value: "CONTENT_TYPE_IMAGE_JPEG"
     * @const
     */
    "IMAGE_JPEG": "CONTENT_TYPE_IMAGE_JPEG",

    /**
     * value: "CONTENT_TYPE_IMAGE_GIF"
     * @const
     */
    "IMAGE_GIF": "CONTENT_TYPE_IMAGE_GIF",

    /**
     * value: "CONTENT_TYPE_IMAGE_PNG"
     * @const
     */
    "IMAGE_PNG": "CONTENT_TYPE_IMAGE_PNG",

    /**
     * value: "CONTENT_TYPE_JSON"
     * @const
     */
    "JSON": "CONTENT_TYPE_JSON",

    /**
     * value: "CONTENT_TYPE_ZIP"
     * @const
     */
    "ZIP": "CONTENT_TYPE_ZIP",

    /**
     * value: "CONTENT_TYPE_GZIP"
     * @const
     */
    "GZIP": "CONTENT_TYPE_GZIP",

    /**
     * value: "CONTENT_TYPE_CSV"
     * @const
     */
    "CSV": "CONTENT_TYPE_CSV",

    /**
     * value: "CONTENT_TYPE_YAML"
     * @const
     */
    "YAML": "CONTENT_TYPE_YAML",

    /**
     * value: "CONTENT_TYPE_IMAGE_WEBP"
     * @const
     */
    "IMAGE_WEBP": "CONTENT_TYPE_IMAGE_WEBP"
};



export default GoogleChromePolicyVersionsV1UploadedFileConstraints;

