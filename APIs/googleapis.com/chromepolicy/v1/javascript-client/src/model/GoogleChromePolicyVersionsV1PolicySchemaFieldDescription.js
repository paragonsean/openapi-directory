/**
 * Chrome Policy API
 * The Chrome Policy API is a suite of services that allows Chrome administrators to control the policies applied to their managed Chrome OS devices and Chrome browsers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleChromePolicyVersionsV1FieldConstraints from './GoogleChromePolicyVersionsV1FieldConstraints';
import GoogleChromePolicyVersionsV1PolicySchemaFieldDependencies from './GoogleChromePolicyVersionsV1PolicySchemaFieldDependencies';
import GoogleChromePolicyVersionsV1PolicySchemaFieldKnownValueDescription from './GoogleChromePolicyVersionsV1PolicySchemaFieldKnownValueDescription';
import GoogleChromePolicyVersionsV1PolicySchemaRequiredItems from './GoogleChromePolicyVersionsV1PolicySchemaRequiredItems';

/**
 * The GoogleChromePolicyVersionsV1PolicySchemaFieldDescription model module.
 * @module model/GoogleChromePolicyVersionsV1PolicySchemaFieldDescription
 * @version v1
 */
class GoogleChromePolicyVersionsV1PolicySchemaFieldDescription {
    /**
     * Constructs a new <code>GoogleChromePolicyVersionsV1PolicySchemaFieldDescription</code>.
     * Provides detailed information for a particular field that is part of a PolicySchema.
     * @alias module:model/GoogleChromePolicyVersionsV1PolicySchemaFieldDescription
     */
    constructor() { 
        
        GoogleChromePolicyVersionsV1PolicySchemaFieldDescription.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleChromePolicyVersionsV1PolicySchemaFieldDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleChromePolicyVersionsV1PolicySchemaFieldDescription} obj Optional instance to populate.
     * @return {module:model/GoogleChromePolicyVersionsV1PolicySchemaFieldDescription} The populated <code>GoogleChromePolicyVersionsV1PolicySchemaFieldDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleChromePolicyVersionsV1PolicySchemaFieldDescription();

            if (data.hasOwnProperty('defaultValue')) {
                obj['defaultValue'] = ApiClient.convertToType(data['defaultValue'], Object);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('field')) {
                obj['field'] = ApiClient.convertToType(data['field'], 'String');
            }
            if (data.hasOwnProperty('fieldConstraints')) {
                obj['fieldConstraints'] = GoogleChromePolicyVersionsV1FieldConstraints.constructFromObject(data['fieldConstraints']);
            }
            if (data.hasOwnProperty('fieldDependencies')) {
                obj['fieldDependencies'] = ApiClient.convertToType(data['fieldDependencies'], [GoogleChromePolicyVersionsV1PolicySchemaFieldDependencies]);
            }
            if (data.hasOwnProperty('fieldDescription')) {
                obj['fieldDescription'] = ApiClient.convertToType(data['fieldDescription'], 'String');
            }
            if (data.hasOwnProperty('inputConstraint')) {
                obj['inputConstraint'] = ApiClient.convertToType(data['inputConstraint'], 'String');
            }
            if (data.hasOwnProperty('knownValueDescriptions')) {
                obj['knownValueDescriptions'] = ApiClient.convertToType(data['knownValueDescriptions'], [GoogleChromePolicyVersionsV1PolicySchemaFieldKnownValueDescription]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('nestedFieldDescriptions')) {
                obj['nestedFieldDescriptions'] = ApiClient.convertToType(data['nestedFieldDescriptions'], [GoogleChromePolicyVersionsV1PolicySchemaFieldDescription]);
            }
            if (data.hasOwnProperty('requiredItems')) {
                obj['requiredItems'] = ApiClient.convertToType(data['requiredItems'], [GoogleChromePolicyVersionsV1PolicySchemaRequiredItems]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleChromePolicyVersionsV1PolicySchemaFieldDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleChromePolicyVersionsV1PolicySchemaFieldDescription</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['field'] && !(typeof data['field'] === 'string' || data['field'] instanceof String)) {
            throw new Error("Expected the field `field` to be a primitive type in the JSON string but got " + data['field']);
        }
        // validate the optional field `fieldConstraints`
        if (data['fieldConstraints']) { // data not null
          GoogleChromePolicyVersionsV1FieldConstraints.validateJSON(data['fieldConstraints']);
        }
        if (data['fieldDependencies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['fieldDependencies'])) {
                throw new Error("Expected the field `fieldDependencies` to be an array in the JSON data but got " + data['fieldDependencies']);
            }
            // validate the optional field `fieldDependencies` (array)
            for (const item of data['fieldDependencies']) {
                GoogleChromePolicyVersionsV1PolicySchemaFieldDependencies.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['fieldDescription'] && !(typeof data['fieldDescription'] === 'string' || data['fieldDescription'] instanceof String)) {
            throw new Error("Expected the field `fieldDescription` to be a primitive type in the JSON string but got " + data['fieldDescription']);
        }
        // ensure the json data is a string
        if (data['inputConstraint'] && !(typeof data['inputConstraint'] === 'string' || data['inputConstraint'] instanceof String)) {
            throw new Error("Expected the field `inputConstraint` to be a primitive type in the JSON string but got " + data['inputConstraint']);
        }
        if (data['knownValueDescriptions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['knownValueDescriptions'])) {
                throw new Error("Expected the field `knownValueDescriptions` to be an array in the JSON data but got " + data['knownValueDescriptions']);
            }
            // validate the optional field `knownValueDescriptions` (array)
            for (const item of data['knownValueDescriptions']) {
                GoogleChromePolicyVersionsV1PolicySchemaFieldKnownValueDescription.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['nestedFieldDescriptions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['nestedFieldDescriptions'])) {
                throw new Error("Expected the field `nestedFieldDescriptions` to be an array in the JSON data but got " + data['nestedFieldDescriptions']);
            }
            // validate the optional field `nestedFieldDescriptions` (array)
            for (const item of data['nestedFieldDescriptions']) {
                GoogleChromePolicyVersionsV1PolicySchemaFieldDescription.validateJSON(item);
            };
        }
        if (data['requiredItems']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['requiredItems'])) {
                throw new Error("Expected the field `requiredItems` to be an array in the JSON data but got " + data['requiredItems']);
            }
            // validate the optional field `requiredItems` (array)
            for (const item of data['requiredItems']) {
                GoogleChromePolicyVersionsV1PolicySchemaRequiredItems.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Output only. Client default if the policy is unset.
 * @member {Object} defaultValue
 */
GoogleChromePolicyVersionsV1PolicySchemaFieldDescription.prototype['defaultValue'] = undefined;

/**
 * Deprecated. Use name and field_description instead. The description for the field.
 * @member {String} description
 */
GoogleChromePolicyVersionsV1PolicySchemaFieldDescription.prototype['description'] = undefined;

/**
 * Output only. The name of the field for associated with this description.
 * @member {String} field
 */
GoogleChromePolicyVersionsV1PolicySchemaFieldDescription.prototype['field'] = undefined;

/**
 * @member {module:model/GoogleChromePolicyVersionsV1FieldConstraints} fieldConstraints
 */
GoogleChromePolicyVersionsV1PolicySchemaFieldDescription.prototype['fieldConstraints'] = undefined;

/**
 * Output only. Provides a list of fields and values. At least one of the fields must have the corresponding value in order for this field to be allowed to be set.
 * @member {Array.<module:model/GoogleChromePolicyVersionsV1PolicySchemaFieldDependencies>} fieldDependencies
 */
GoogleChromePolicyVersionsV1PolicySchemaFieldDescription.prototype['fieldDependencies'] = undefined;

/**
 * Output only. The description of the field.
 * @member {String} fieldDescription
 */
GoogleChromePolicyVersionsV1PolicySchemaFieldDescription.prototype['fieldDescription'] = undefined;

/**
 * Output only. Any input constraints associated on the values for the field.
 * @member {String} inputConstraint
 */
GoogleChromePolicyVersionsV1PolicySchemaFieldDescription.prototype['inputConstraint'] = undefined;

/**
 * Output only. If the field has a set of known values, this field will provide a description for these values.
 * @member {Array.<module:model/GoogleChromePolicyVersionsV1PolicySchemaFieldKnownValueDescription>} knownValueDescriptions
 */
GoogleChromePolicyVersionsV1PolicySchemaFieldDescription.prototype['knownValueDescriptions'] = undefined;

/**
 * Output only. The name of the field.
 * @member {String} name
 */
GoogleChromePolicyVersionsV1PolicySchemaFieldDescription.prototype['name'] = undefined;

/**
 * Output only. Provides the description of the fields nested in this field, if the field is a message type that defines multiple fields. Fields are suggested to be displayed by the ordering in this list, not by field number.
 * @member {Array.<module:model/GoogleChromePolicyVersionsV1PolicySchemaFieldDescription>} nestedFieldDescriptions
 */
GoogleChromePolicyVersionsV1PolicySchemaFieldDescription.prototype['nestedFieldDescriptions'] = undefined;

/**
 * Output only. Provides a list of fields that are required to be set if this field has a certain value.
 * @member {Array.<module:model/GoogleChromePolicyVersionsV1PolicySchemaRequiredItems>} requiredItems
 */
GoogleChromePolicyVersionsV1PolicySchemaFieldDescription.prototype['requiredItems'] = undefined;






export default GoogleChromePolicyVersionsV1PolicySchemaFieldDescription;

