/**
 * Chrome Policy API
 * The Chrome Policy API is a suite of services that allows Chrome administrators to control the policies applied to their managed Chrome OS devices and Chrome browsers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleChromePolicyVersionsV1PolicyTargetKey from './GoogleChromePolicyVersionsV1PolicyTargetKey';

/**
 * The GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest model module.
 * @module model/GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest
 * @version v1
 */
class GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest {
    /**
     * Constructs a new <code>GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest</code>.
     * Request message for updating the group priority ordering of an app.
     * @alias module:model/GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest
     */
    constructor() { 
        
        GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest} obj Optional instance to populate.
     * @return {module:model/GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest} The populated <code>GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest();

            if (data.hasOwnProperty('groupIds')) {
                obj['groupIds'] = ApiClient.convertToType(data['groupIds'], ['String']);
            }
            if (data.hasOwnProperty('policyNamespace')) {
                obj['policyNamespace'] = ApiClient.convertToType(data['policyNamespace'], 'String');
            }
            if (data.hasOwnProperty('policySchema')) {
                obj['policySchema'] = ApiClient.convertToType(data['policySchema'], 'String');
            }
            if (data.hasOwnProperty('policyTargetKey')) {
                obj['policyTargetKey'] = GoogleChromePolicyVersionsV1PolicyTargetKey.constructFromObject(data['policyTargetKey']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['groupIds'])) {
            throw new Error("Expected the field `groupIds` to be an array in the JSON data but got " + data['groupIds']);
        }
        // ensure the json data is a string
        if (data['policyNamespace'] && !(typeof data['policyNamespace'] === 'string' || data['policyNamespace'] instanceof String)) {
            throw new Error("Expected the field `policyNamespace` to be a primitive type in the JSON string but got " + data['policyNamespace']);
        }
        // ensure the json data is a string
        if (data['policySchema'] && !(typeof data['policySchema'] === 'string' || data['policySchema'] instanceof String)) {
            throw new Error("Expected the field `policySchema` to be a primitive type in the JSON string but got " + data['policySchema']);
        }
        // validate the optional field `policyTargetKey`
        if (data['policyTargetKey']) { // data not null
          GoogleChromePolicyVersionsV1PolicyTargetKey.validateJSON(data['policyTargetKey']);
        }

        return true;
    }


}



/**
 * Required. The group IDs, in desired priority ordering.
 * @member {Array.<String>} groupIds
 */
GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest.prototype['groupIds'] = undefined;

/**
 * The namespace of the policy type for the request.
 * @member {String} policyNamespace
 */
GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest.prototype['policyNamespace'] = undefined;

/**
 * The schema name of the policy for the request.
 * @member {String} policySchema
 */
GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest.prototype['policySchema'] = undefined;

/**
 * @member {module:model/GoogleChromePolicyVersionsV1PolicyTargetKey} policyTargetKey
 */
GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest.prototype['policyTargetKey'] = undefined;






export default GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest;

