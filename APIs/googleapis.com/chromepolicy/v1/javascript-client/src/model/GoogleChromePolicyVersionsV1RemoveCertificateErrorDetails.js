/**
 * Chrome Policy API
 * The Chrome Policy API is a suite of services that allows Chrome administrators to control the policies applied to their managed Chrome OS devices and Chrome browsers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleChromePolicyVersionsV1CertificateReference from './GoogleChromePolicyVersionsV1CertificateReference';

/**
 * The GoogleChromePolicyVersionsV1RemoveCertificateErrorDetails model module.
 * @module model/GoogleChromePolicyVersionsV1RemoveCertificateErrorDetails
 * @version v1
 */
class GoogleChromePolicyVersionsV1RemoveCertificateErrorDetails {
    /**
     * Constructs a new <code>GoogleChromePolicyVersionsV1RemoveCertificateErrorDetails</code>.
     * Details of the errors encountered during a remove certificate request. This message will be returned as part of the details of a google.rpc.Status returned to the user when there is an error in their request.
     * @alias module:model/GoogleChromePolicyVersionsV1RemoveCertificateErrorDetails
     */
    constructor() { 
        
        GoogleChromePolicyVersionsV1RemoveCertificateErrorDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleChromePolicyVersionsV1RemoveCertificateErrorDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleChromePolicyVersionsV1RemoveCertificateErrorDetails} obj Optional instance to populate.
     * @return {module:model/GoogleChromePolicyVersionsV1RemoveCertificateErrorDetails} The populated <code>GoogleChromePolicyVersionsV1RemoveCertificateErrorDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleChromePolicyVersionsV1RemoveCertificateErrorDetails();

            if (data.hasOwnProperty('certificateReferences')) {
                obj['certificateReferences'] = ApiClient.convertToType(data['certificateReferences'], [GoogleChromePolicyVersionsV1CertificateReference]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleChromePolicyVersionsV1RemoveCertificateErrorDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleChromePolicyVersionsV1RemoveCertificateErrorDetails</code>.
     */
    static validateJSON(data) {
        if (data['certificateReferences']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['certificateReferences'])) {
                throw new Error("Expected the field `certificateReferences` to be an array in the JSON data but got " + data['certificateReferences']);
            }
            // validate the optional field `certificateReferences` (array)
            for (const item of data['certificateReferences']) {
                GoogleChromePolicyVersionsV1CertificateReference.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Output only. If the certificate was not removed, a list of references to the certificate that prevented it from being removed. Only unreferenced certificates can be removed.
 * @member {Array.<module:model/GoogleChromePolicyVersionsV1CertificateReference>} certificateReferences
 */
GoogleChromePolicyVersionsV1RemoveCertificateErrorDetails.prototype['certificateReferences'] = undefined;






export default GoogleChromePolicyVersionsV1RemoveCertificateErrorDetails;

