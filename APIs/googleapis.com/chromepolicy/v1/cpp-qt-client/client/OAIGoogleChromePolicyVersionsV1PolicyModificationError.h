/**
 * Chrome Policy API
 * The Chrome Policy API is a suite of services that allows Chrome administrators to control the policies applied to their managed Chrome OS devices and Chrome browsers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromePolicyVersionsV1PolicyModificationError.h
 *
 * Error information for a modification request of a specific policy on a specific target.
 */

#ifndef OAIGoogleChromePolicyVersionsV1PolicyModificationError_H
#define OAIGoogleChromePolicyVersionsV1PolicyModificationError_H

#include <QJsonObject>

#include "OAIGoogleChromePolicyVersionsV1PolicyModificationFieldError.h"
#include "OAIGoogleChromePolicyVersionsV1PolicyTargetKey.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleChromePolicyVersionsV1PolicyModificationFieldError;
class OAIGoogleChromePolicyVersionsV1PolicyTargetKey;

class OAIGoogleChromePolicyVersionsV1PolicyModificationError : public OAIObject {
public:
    OAIGoogleChromePolicyVersionsV1PolicyModificationError();
    OAIGoogleChromePolicyVersionsV1PolicyModificationError(QString json);
    ~OAIGoogleChromePolicyVersionsV1PolicyModificationError() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getErrors() const;
    void setErrors(const QList<QString> &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    QList<OAIGoogleChromePolicyVersionsV1PolicyModificationFieldError> getFieldErrors() const;
    void setFieldErrors(const QList<OAIGoogleChromePolicyVersionsV1PolicyModificationFieldError> &field_errors);
    bool is_field_errors_Set() const;
    bool is_field_errors_Valid() const;

    QString getPolicySchema() const;
    void setPolicySchema(const QString &policy_schema);
    bool is_policy_schema_Set() const;
    bool is_policy_schema_Valid() const;

    OAIGoogleChromePolicyVersionsV1PolicyTargetKey getPolicyTargetKey() const;
    void setPolicyTargetKey(const OAIGoogleChromePolicyVersionsV1PolicyTargetKey &policy_target_key);
    bool is_policy_target_key_Set() const;
    bool is_policy_target_key_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;

    QList<OAIGoogleChromePolicyVersionsV1PolicyModificationFieldError> m_field_errors;
    bool m_field_errors_isSet;
    bool m_field_errors_isValid;

    QString m_policy_schema;
    bool m_policy_schema_isSet;
    bool m_policy_schema_isValid;

    OAIGoogleChromePolicyVersionsV1PolicyTargetKey m_policy_target_key;
    bool m_policy_target_key_isSet;
    bool m_policy_target_key_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromePolicyVersionsV1PolicyModificationError)

#endif // OAIGoogleChromePolicyVersionsV1PolicyModificationError_H
