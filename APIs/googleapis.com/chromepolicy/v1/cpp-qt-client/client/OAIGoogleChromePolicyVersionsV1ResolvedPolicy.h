/**
 * Chrome Policy API
 * The Chrome Policy API is a suite of services that allows Chrome administrators to control the policies applied to their managed Chrome OS devices and Chrome browsers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromePolicyVersionsV1ResolvedPolicy.h
 *
 * The resolved value of a policy for a given target.
 */

#ifndef OAIGoogleChromePolicyVersionsV1ResolvedPolicy_H
#define OAIGoogleChromePolicyVersionsV1ResolvedPolicy_H

#include <QJsonObject>

#include "OAIGoogleChromePolicyVersionsV1PolicyTargetKey.h"
#include "OAIGoogleChromePolicyVersionsV1PolicyValue.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleChromePolicyVersionsV1PolicyTargetKey;
class OAIGoogleChromePolicyVersionsV1PolicyValue;

class OAIGoogleChromePolicyVersionsV1ResolvedPolicy : public OAIObject {
public:
    OAIGoogleChromePolicyVersionsV1ResolvedPolicy();
    OAIGoogleChromePolicyVersionsV1ResolvedPolicy(QString json);
    ~OAIGoogleChromePolicyVersionsV1ResolvedPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleChromePolicyVersionsV1PolicyTargetKey getAddedSourceKey() const;
    void setAddedSourceKey(const OAIGoogleChromePolicyVersionsV1PolicyTargetKey &added_source_key);
    bool is_added_source_key_Set() const;
    bool is_added_source_key_Valid() const;

    OAIGoogleChromePolicyVersionsV1PolicyTargetKey getSourceKey() const;
    void setSourceKey(const OAIGoogleChromePolicyVersionsV1PolicyTargetKey &source_key);
    bool is_source_key_Set() const;
    bool is_source_key_Valid() const;

    OAIGoogleChromePolicyVersionsV1PolicyTargetKey getTargetKey() const;
    void setTargetKey(const OAIGoogleChromePolicyVersionsV1PolicyTargetKey &target_key);
    bool is_target_key_Set() const;
    bool is_target_key_Valid() const;

    OAIGoogleChromePolicyVersionsV1PolicyValue getValue() const;
    void setValue(const OAIGoogleChromePolicyVersionsV1PolicyValue &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleChromePolicyVersionsV1PolicyTargetKey m_added_source_key;
    bool m_added_source_key_isSet;
    bool m_added_source_key_isValid;

    OAIGoogleChromePolicyVersionsV1PolicyTargetKey m_source_key;
    bool m_source_key_isSet;
    bool m_source_key_isValid;

    OAIGoogleChromePolicyVersionsV1PolicyTargetKey m_target_key;
    bool m_target_key_isSet;
    bool m_target_key_isValid;

    OAIGoogleChromePolicyVersionsV1PolicyValue m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromePolicyVersionsV1ResolvedPolicy)

#endif // OAIGoogleChromePolicyVersionsV1ResolvedPolicy_H
