/**
 * Chrome Policy API
 * The Chrome Policy API is a suite of services that allows Chrome administrators to control the policies applied to their managed Chrome OS devices and Chrome browsers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName::OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName::OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName() {
    this->initializeModel();
}

OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName::~OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName() {}

void OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName::initializeModel() {

    m_key_isSet = false;
    m_key_isValid = false;

    m_key_description_isSet = false;
    m_key_description_isValid = false;
}

void OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName::fromJsonObject(QJsonObject json) {

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;

    m_key_description_isValid = ::OpenAPI::fromJsonValue(m_key_description, json[QString("keyDescription")]);
    m_key_description_isSet = !json[QString("keyDescription")].isNull() && m_key_description_isValid;
}

QString OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName::asJsonObject() const {
    QJsonObject obj;
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_key_description_isSet) {
        obj.insert(QString("keyDescription"), ::OpenAPI::toJsonValue(m_key_description));
    }
    return obj;
}

QString OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName::getKey() const {
    return m_key;
}
void OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName::is_key_Set() const{
    return m_key_isSet;
}

bool OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName::is_key_Valid() const{
    return m_key_isValid;
}

QString OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName::getKeyDescription() const {
    return m_key_description;
}
void OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName::setKeyDescription(const QString &key_description) {
    m_key_description = key_description;
    m_key_description_isSet = true;
}

bool OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName::is_key_description_Set() const{
    return m_key_description_isSet;
}

bool OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName::is_key_description_Valid() const{
    return m_key_description_isValid;
}

bool OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_description_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
