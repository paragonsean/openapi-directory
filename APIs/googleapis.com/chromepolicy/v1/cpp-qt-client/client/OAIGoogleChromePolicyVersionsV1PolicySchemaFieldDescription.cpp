/**
 * Chrome Policy API
 * The Chrome Policy API is a suite of services that allows Chrome administrators to control the policies applied to their managed Chrome OS devices and Chrome browsers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription() {
    this->initializeModel();
}

OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::~OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription() {}

void OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::initializeModel() {

    m_default_value_isSet = false;
    m_default_value_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_field_isSet = false;
    m_field_isValid = false;

    m_field_constraints_isSet = false;
    m_field_constraints_isValid = false;

    m_field_dependencies_isSet = false;
    m_field_dependencies_isValid = false;

    m_field_description_isSet = false;
    m_field_description_isValid = false;

    m_input_constraint_isSet = false;
    m_input_constraint_isValid = false;

    m_known_value_descriptions_isSet = false;
    m_known_value_descriptions_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_nested_field_descriptions_isSet = false;
    m_nested_field_descriptions_isValid = false;

    m_required_items_isSet = false;
    m_required_items_isValid = false;
}

void OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::fromJsonObject(QJsonObject json) {

    m_default_value_isValid = ::OpenAPI::fromJsonValue(m_default_value, json[QString("defaultValue")]);
    m_default_value_isSet = !json[QString("defaultValue")].isNull() && m_default_value_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_field_isValid = ::OpenAPI::fromJsonValue(m_field, json[QString("field")]);
    m_field_isSet = !json[QString("field")].isNull() && m_field_isValid;

    m_field_constraints_isValid = ::OpenAPI::fromJsonValue(m_field_constraints, json[QString("fieldConstraints")]);
    m_field_constraints_isSet = !json[QString("fieldConstraints")].isNull() && m_field_constraints_isValid;

    m_field_dependencies_isValid = ::OpenAPI::fromJsonValue(m_field_dependencies, json[QString("fieldDependencies")]);
    m_field_dependencies_isSet = !json[QString("fieldDependencies")].isNull() && m_field_dependencies_isValid;

    m_field_description_isValid = ::OpenAPI::fromJsonValue(m_field_description, json[QString("fieldDescription")]);
    m_field_description_isSet = !json[QString("fieldDescription")].isNull() && m_field_description_isValid;

    m_input_constraint_isValid = ::OpenAPI::fromJsonValue(m_input_constraint, json[QString("inputConstraint")]);
    m_input_constraint_isSet = !json[QString("inputConstraint")].isNull() && m_input_constraint_isValid;

    m_known_value_descriptions_isValid = ::OpenAPI::fromJsonValue(m_known_value_descriptions, json[QString("knownValueDescriptions")]);
    m_known_value_descriptions_isSet = !json[QString("knownValueDescriptions")].isNull() && m_known_value_descriptions_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_nested_field_descriptions_isValid = ::OpenAPI::fromJsonValue(m_nested_field_descriptions, json[QString("nestedFieldDescriptions")]);
    m_nested_field_descriptions_isSet = !json[QString("nestedFieldDescriptions")].isNull() && m_nested_field_descriptions_isValid;

    m_required_items_isValid = ::OpenAPI::fromJsonValue(m_required_items, json[QString("requiredItems")]);
    m_required_items_isSet = !json[QString("requiredItems")].isNull() && m_required_items_isValid;
}

QString OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::asJsonObject() const {
    QJsonObject obj;
    if (m_default_value_isSet) {
        obj.insert(QString("defaultValue"), ::OpenAPI::toJsonValue(m_default_value));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_field_isSet) {
        obj.insert(QString("field"), ::OpenAPI::toJsonValue(m_field));
    }
    if (m_field_constraints.isSet()) {
        obj.insert(QString("fieldConstraints"), ::OpenAPI::toJsonValue(m_field_constraints));
    }
    if (m_field_dependencies.size() > 0) {
        obj.insert(QString("fieldDependencies"), ::OpenAPI::toJsonValue(m_field_dependencies));
    }
    if (m_field_description_isSet) {
        obj.insert(QString("fieldDescription"), ::OpenAPI::toJsonValue(m_field_description));
    }
    if (m_input_constraint_isSet) {
        obj.insert(QString("inputConstraint"), ::OpenAPI::toJsonValue(m_input_constraint));
    }
    if (m_known_value_descriptions.size() > 0) {
        obj.insert(QString("knownValueDescriptions"), ::OpenAPI::toJsonValue(m_known_value_descriptions));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_nested_field_descriptions.size() > 0) {
        obj.insert(QString("nestedFieldDescriptions"), ::OpenAPI::toJsonValue(m_nested_field_descriptions));
    }
    if (m_required_items.size() > 0) {
        obj.insert(QString("requiredItems"), ::OpenAPI::toJsonValue(m_required_items));
    }
    return obj;
}

QJsonValue OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::getDefaultValue() const {
    return m_default_value;
}
void OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::setDefaultValue(const QJsonValue &default_value) {
    m_default_value = default_value;
    m_default_value_isSet = true;
}

bool OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::is_default_value_Set() const{
    return m_default_value_isSet;
}

bool OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::is_default_value_Valid() const{
    return m_default_value_isValid;
}

QString OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::getDescription() const {
    return m_description;
}
void OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::getField() const {
    return m_field;
}
void OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::setField(const QString &field) {
    m_field = field;
    m_field_isSet = true;
}

bool OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::is_field_Set() const{
    return m_field_isSet;
}

bool OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::is_field_Valid() const{
    return m_field_isValid;
}

OAIGoogleChromePolicyVersionsV1FieldConstraints OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::getFieldConstraints() const {
    return m_field_constraints;
}
void OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::setFieldConstraints(const OAIGoogleChromePolicyVersionsV1FieldConstraints &field_constraints) {
    m_field_constraints = field_constraints;
    m_field_constraints_isSet = true;
}

bool OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::is_field_constraints_Set() const{
    return m_field_constraints_isSet;
}

bool OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::is_field_constraints_Valid() const{
    return m_field_constraints_isValid;
}

QList<OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDependencies> OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::getFieldDependencies() const {
    return m_field_dependencies;
}
void OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::setFieldDependencies(const QList<OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDependencies> &field_dependencies) {
    m_field_dependencies = field_dependencies;
    m_field_dependencies_isSet = true;
}

bool OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::is_field_dependencies_Set() const{
    return m_field_dependencies_isSet;
}

bool OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::is_field_dependencies_Valid() const{
    return m_field_dependencies_isValid;
}

QString OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::getFieldDescription() const {
    return m_field_description;
}
void OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::setFieldDescription(const QString &field_description) {
    m_field_description = field_description;
    m_field_description_isSet = true;
}

bool OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::is_field_description_Set() const{
    return m_field_description_isSet;
}

bool OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::is_field_description_Valid() const{
    return m_field_description_isValid;
}

QString OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::getInputConstraint() const {
    return m_input_constraint;
}
void OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::setInputConstraint(const QString &input_constraint) {
    m_input_constraint = input_constraint;
    m_input_constraint_isSet = true;
}

bool OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::is_input_constraint_Set() const{
    return m_input_constraint_isSet;
}

bool OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::is_input_constraint_Valid() const{
    return m_input_constraint_isValid;
}

QList<OAIGoogleChromePolicyVersionsV1PolicySchemaFieldKnownValueDescription> OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::getKnownValueDescriptions() const {
    return m_known_value_descriptions;
}
void OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::setKnownValueDescriptions(const QList<OAIGoogleChromePolicyVersionsV1PolicySchemaFieldKnownValueDescription> &known_value_descriptions) {
    m_known_value_descriptions = known_value_descriptions;
    m_known_value_descriptions_isSet = true;
}

bool OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::is_known_value_descriptions_Set() const{
    return m_known_value_descriptions_isSet;
}

bool OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::is_known_value_descriptions_Valid() const{
    return m_known_value_descriptions_isValid;
}

QString OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::getName() const {
    return m_name;
}
void OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription> OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::getNestedFieldDescriptions() const {
    return m_nested_field_descriptions;
}
void OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::setNestedFieldDescriptions(const QList<OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription> &nested_field_descriptions) {
    m_nested_field_descriptions = nested_field_descriptions;
    m_nested_field_descriptions_isSet = true;
}

bool OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::is_nested_field_descriptions_Set() const{
    return m_nested_field_descriptions_isSet;
}

bool OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::is_nested_field_descriptions_Valid() const{
    return m_nested_field_descriptions_isValid;
}

QList<OAIGoogleChromePolicyVersionsV1PolicySchemaRequiredItems> OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::getRequiredItems() const {
    return m_required_items;
}
void OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::setRequiredItems(const QList<OAIGoogleChromePolicyVersionsV1PolicySchemaRequiredItems> &required_items) {
    m_required_items = required_items;
    m_required_items_isSet = true;
}

bool OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::is_required_items_Set() const{
    return m_required_items_isSet;
}

bool OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::is_required_items_Valid() const{
    return m_required_items_isValid;
}

bool OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_default_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_constraints.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_dependencies.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_constraint_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_known_value_descriptions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nested_field_descriptions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_required_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
