/**
 * Chrome Policy API
 * The Chrome Policy API is a suite of services that allows Chrome administrators to control the policies applied to their managed Chrome OS devices and Chrome browsers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProto2FieldDescriptorProto.h
 *
 * Describes a field within a message.
 */

#ifndef OAIProto2FieldDescriptorProto_H
#define OAIProto2FieldDescriptorProto_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProto2FieldDescriptorProto : public OAIObject {
public:
    OAIProto2FieldDescriptorProto();
    OAIProto2FieldDescriptorProto(QString json);
    ~OAIProto2FieldDescriptorProto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDefaultValue() const;
    void setDefaultValue(const QString &default_value);
    bool is_default_value_Set() const;
    bool is_default_value_Valid() const;

    QString getJsonName() const;
    void setJsonName(const QString &json_name);
    bool is_json_name_Set() const;
    bool is_json_name_Valid() const;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getNumber() const;
    void setNumber(const qint32 &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    qint32 getOneofIndex() const;
    void setOneofIndex(const qint32 &oneof_index);
    bool is_oneof_index_Set() const;
    bool is_oneof_index_Valid() const;

    bool isProto3Optional() const;
    void setProto3Optional(const bool &proto3_optional);
    bool is_proto3_optional_Set() const;
    bool is_proto3_optional_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getTypeName() const;
    void setTypeName(const QString &type_name);
    bool is_type_name_Set() const;
    bool is_type_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_default_value;
    bool m_default_value_isSet;
    bool m_default_value_isValid;

    QString m_json_name;
    bool m_json_name_isSet;
    bool m_json_name_isValid;

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    qint32 m_oneof_index;
    bool m_oneof_index_isSet;
    bool m_oneof_index_isValid;

    bool m_proto3_optional;
    bool m_proto3_optional_isSet;
    bool m_proto3_optional_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_type_name;
    bool m_type_name_isSet;
    bool m_type_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProto2FieldDescriptorProto)

#endif // OAIProto2FieldDescriptorProto_H
