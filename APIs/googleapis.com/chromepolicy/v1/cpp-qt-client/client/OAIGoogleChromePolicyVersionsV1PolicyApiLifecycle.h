/**
 * Chrome Policy API
 * The Chrome Policy API is a suite of services that allows Chrome administrators to control the policies applied to their managed Chrome OS devices and Chrome browsers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromePolicyVersionsV1PolicyApiLifecycle.h
 *
 * Lifecycle information.
 */

#ifndef OAIGoogleChromePolicyVersionsV1PolicyApiLifecycle_H
#define OAIGoogleChromePolicyVersionsV1PolicyApiLifecycle_H

#include <QJsonObject>

#include "OAIGoogleTypeDate.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleTypeDate;

class OAIGoogleChromePolicyVersionsV1PolicyApiLifecycle : public OAIObject {
public:
    OAIGoogleChromePolicyVersionsV1PolicyApiLifecycle();
    OAIGoogleChromePolicyVersionsV1PolicyApiLifecycle(QString json);
    ~OAIGoogleChromePolicyVersionsV1PolicyApiLifecycle() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getDeprecatedInFavorOf() const;
    void setDeprecatedInFavorOf(const QList<QString> &deprecated_in_favor_of);
    bool is_deprecated_in_favor_of_Set() const;
    bool is_deprecated_in_favor_of_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIGoogleTypeDate getEndSupport() const;
    void setEndSupport(const OAIGoogleTypeDate &end_support);
    bool is_end_support_Set() const;
    bool is_end_support_Valid() const;

    QString getPolicyApiLifecycleStage() const;
    void setPolicyApiLifecycleStage(const QString &policy_api_lifecycle_stage);
    bool is_policy_api_lifecycle_stage_Set() const;
    bool is_policy_api_lifecycle_stage_Valid() const;

    QList<QString> getScheduledToDeprecatePolicies() const;
    void setScheduledToDeprecatePolicies(const QList<QString> &scheduled_to_deprecate_policies);
    bool is_scheduled_to_deprecate_policies_Set() const;
    bool is_scheduled_to_deprecate_policies_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_deprecated_in_favor_of;
    bool m_deprecated_in_favor_of_isSet;
    bool m_deprecated_in_favor_of_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIGoogleTypeDate m_end_support;
    bool m_end_support_isSet;
    bool m_end_support_isValid;

    QString m_policy_api_lifecycle_stage;
    bool m_policy_api_lifecycle_stage_isSet;
    bool m_policy_api_lifecycle_stage_isValid;

    QList<QString> m_scheduled_to_deprecate_policies;
    bool m_scheduled_to_deprecate_policies_isSet;
    bool m_scheduled_to_deprecate_policies_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromePolicyVersionsV1PolicyApiLifecycle)

#endif // OAIGoogleChromePolicyVersionsV1PolicyApiLifecycle_H
