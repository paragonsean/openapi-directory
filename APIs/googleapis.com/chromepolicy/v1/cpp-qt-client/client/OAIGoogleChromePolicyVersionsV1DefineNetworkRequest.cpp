/**
 * Chrome Policy API
 * The Chrome Policy API is a suite of services that allows Chrome administrators to control the policies applied to their managed Chrome OS devices and Chrome browsers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleChromePolicyVersionsV1DefineNetworkRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleChromePolicyVersionsV1DefineNetworkRequest::OAIGoogleChromePolicyVersionsV1DefineNetworkRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleChromePolicyVersionsV1DefineNetworkRequest::OAIGoogleChromePolicyVersionsV1DefineNetworkRequest() {
    this->initializeModel();
}

OAIGoogleChromePolicyVersionsV1DefineNetworkRequest::~OAIGoogleChromePolicyVersionsV1DefineNetworkRequest() {}

void OAIGoogleChromePolicyVersionsV1DefineNetworkRequest::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_settings_isSet = false;
    m_settings_isValid = false;

    m_target_resource_isSet = false;
    m_target_resource_isValid = false;
}

void OAIGoogleChromePolicyVersionsV1DefineNetworkRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleChromePolicyVersionsV1DefineNetworkRequest::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_settings_isValid = ::OpenAPI::fromJsonValue(m_settings, json[QString("settings")]);
    m_settings_isSet = !json[QString("settings")].isNull() && m_settings_isValid;

    m_target_resource_isValid = ::OpenAPI::fromJsonValue(m_target_resource, json[QString("targetResource")]);
    m_target_resource_isSet = !json[QString("targetResource")].isNull() && m_target_resource_isValid;
}

QString OAIGoogleChromePolicyVersionsV1DefineNetworkRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleChromePolicyVersionsV1DefineNetworkRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_settings.size() > 0) {
        obj.insert(QString("settings"), ::OpenAPI::toJsonValue(m_settings));
    }
    if (m_target_resource_isSet) {
        obj.insert(QString("targetResource"), ::OpenAPI::toJsonValue(m_target_resource));
    }
    return obj;
}

QString OAIGoogleChromePolicyVersionsV1DefineNetworkRequest::getName() const {
    return m_name;
}
void OAIGoogleChromePolicyVersionsV1DefineNetworkRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleChromePolicyVersionsV1DefineNetworkRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleChromePolicyVersionsV1DefineNetworkRequest::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIGoogleChromePolicyVersionsV1NetworkSetting> OAIGoogleChromePolicyVersionsV1DefineNetworkRequest::getSettings() const {
    return m_settings;
}
void OAIGoogleChromePolicyVersionsV1DefineNetworkRequest::setSettings(const QList<OAIGoogleChromePolicyVersionsV1NetworkSetting> &settings) {
    m_settings = settings;
    m_settings_isSet = true;
}

bool OAIGoogleChromePolicyVersionsV1DefineNetworkRequest::is_settings_Set() const{
    return m_settings_isSet;
}

bool OAIGoogleChromePolicyVersionsV1DefineNetworkRequest::is_settings_Valid() const{
    return m_settings_isValid;
}

QString OAIGoogleChromePolicyVersionsV1DefineNetworkRequest::getTargetResource() const {
    return m_target_resource;
}
void OAIGoogleChromePolicyVersionsV1DefineNetworkRequest::setTargetResource(const QString &target_resource) {
    m_target_resource = target_resource;
    m_target_resource_isSet = true;
}

bool OAIGoogleChromePolicyVersionsV1DefineNetworkRequest::is_target_resource_Set() const{
    return m_target_resource_isSet;
}

bool OAIGoogleChromePolicyVersionsV1DefineNetworkRequest::is_target_resource_Valid() const{
    return m_target_resource_isValid;
}

bool OAIGoogleChromePolicyVersionsV1DefineNetworkRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_settings.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_resource_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleChromePolicyVersionsV1DefineNetworkRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
