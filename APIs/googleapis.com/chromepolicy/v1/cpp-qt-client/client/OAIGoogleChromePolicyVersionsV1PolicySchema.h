/**
 * Chrome Policy API
 * The Chrome Policy API is a suite of services that allows Chrome administrators to control the policies applied to their managed Chrome OS devices and Chrome browsers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromePolicyVersionsV1PolicySchema.h
 *
 * Resource representing a policy schema.
 */

#ifndef OAIGoogleChromePolicyVersionsV1PolicySchema_H
#define OAIGoogleChromePolicyVersionsV1PolicySchema_H

#include <QJsonObject>

#include "OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName.h"
#include "OAIGoogleChromePolicyVersionsV1PolicyApiLifecycle.h"
#include "OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription.h"
#include "OAIGoogleChromePolicyVersionsV1PolicySchemaNoticeDescription.h"
#include "OAIProto2FileDescriptorProto.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName;
class OAIProto2FileDescriptorProto;
class OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription;
class OAIGoogleChromePolicyVersionsV1PolicySchemaNoticeDescription;
class OAIGoogleChromePolicyVersionsV1PolicyApiLifecycle;

class OAIGoogleChromePolicyVersionsV1PolicySchema : public OAIObject {
public:
    OAIGoogleChromePolicyVersionsV1PolicySchema();
    OAIGoogleChromePolicyVersionsV1PolicySchema(QString json);
    ~OAIGoogleChromePolicyVersionsV1PolicySchema() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAccessRestrictions() const;
    void setAccessRestrictions(const QList<QString> &access_restrictions);
    bool is_access_restrictions_Set() const;
    bool is_access_restrictions_Valid() const;

    QList<OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName> getAdditionalTargetKeyNames() const;
    void setAdditionalTargetKeyNames(const QList<OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName> &additional_target_key_names);
    bool is_additional_target_key_names_Set() const;
    bool is_additional_target_key_names_Valid() const;

    QString getCategoryTitle() const;
    void setCategoryTitle(const QString &category_title);
    bool is_category_title_Set() const;
    bool is_category_title_Valid() const;

    OAIProto2FileDescriptorProto getDefinition() const;
    void setDefinition(const OAIProto2FileDescriptorProto &definition);
    bool is_definition_Set() const;
    bool is_definition_Valid() const;

    QList<OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription> getFieldDescriptions() const;
    void setFieldDescriptions(const QList<OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription> &field_descriptions);
    bool is_field_descriptions_Set() const;
    bool is_field_descriptions_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIGoogleChromePolicyVersionsV1PolicySchemaNoticeDescription> getNotices() const;
    void setNotices(const QList<OAIGoogleChromePolicyVersionsV1PolicySchemaNoticeDescription> &notices);
    bool is_notices_Set() const;
    bool is_notices_Valid() const;

    OAIGoogleChromePolicyVersionsV1PolicyApiLifecycle getPolicyApiLifecycle() const;
    void setPolicyApiLifecycle(const OAIGoogleChromePolicyVersionsV1PolicyApiLifecycle &policy_api_lifecycle);
    bool is_policy_api_lifecycle_Set() const;
    bool is_policy_api_lifecycle_Valid() const;

    QString getPolicyDescription() const;
    void setPolicyDescription(const QString &policy_description);
    bool is_policy_description_Set() const;
    bool is_policy_description_Valid() const;

    QString getSchemaName() const;
    void setSchemaName(const QString &schema_name);
    bool is_schema_name_Set() const;
    bool is_schema_name_Valid() const;

    QString getSupportUri() const;
    void setSupportUri(const QString &support_uri);
    bool is_support_uri_Set() const;
    bool is_support_uri_Valid() const;

    QList<QString> getSupportedPlatforms() const;
    void setSupportedPlatforms(const QList<QString> &supported_platforms);
    bool is_supported_platforms_Set() const;
    bool is_supported_platforms_Valid() const;

    QList<QString> getValidTargetResources() const;
    void setValidTargetResources(const QList<QString> &valid_target_resources);
    bool is_valid_target_resources_Set() const;
    bool is_valid_target_resources_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_access_restrictions;
    bool m_access_restrictions_isSet;
    bool m_access_restrictions_isValid;

    QList<OAIGoogleChromePolicyVersionsV1AdditionalTargetKeyName> m_additional_target_key_names;
    bool m_additional_target_key_names_isSet;
    bool m_additional_target_key_names_isValid;

    QString m_category_title;
    bool m_category_title_isSet;
    bool m_category_title_isValid;

    OAIProto2FileDescriptorProto m_definition;
    bool m_definition_isSet;
    bool m_definition_isValid;

    QList<OAIGoogleChromePolicyVersionsV1PolicySchemaFieldDescription> m_field_descriptions;
    bool m_field_descriptions_isSet;
    bool m_field_descriptions_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIGoogleChromePolicyVersionsV1PolicySchemaNoticeDescription> m_notices;
    bool m_notices_isSet;
    bool m_notices_isValid;

    OAIGoogleChromePolicyVersionsV1PolicyApiLifecycle m_policy_api_lifecycle;
    bool m_policy_api_lifecycle_isSet;
    bool m_policy_api_lifecycle_isValid;

    QString m_policy_description;
    bool m_policy_description_isSet;
    bool m_policy_description_isValid;

    QString m_schema_name;
    bool m_schema_name_isSet;
    bool m_schema_name_isValid;

    QString m_support_uri;
    bool m_support_uri_isSet;
    bool m_support_uri_isValid;

    QList<QString> m_supported_platforms;
    bool m_supported_platforms_isSet;
    bool m_supported_platforms_isValid;

    QList<QString> m_valid_target_resources;
    bool m_valid_target_resources_isSet;
    bool m_valid_target_resources_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromePolicyVersionsV1PolicySchema)

#endif // OAIGoogleChromePolicyVersionsV1PolicySchema_H
