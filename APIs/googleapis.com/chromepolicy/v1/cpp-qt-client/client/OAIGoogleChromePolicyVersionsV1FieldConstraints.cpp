/**
 * Chrome Policy API
 * The Chrome Policy API is a suite of services that allows Chrome administrators to control the policies applied to their managed Chrome OS devices and Chrome browsers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleChromePolicyVersionsV1FieldConstraints.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleChromePolicyVersionsV1FieldConstraints::OAIGoogleChromePolicyVersionsV1FieldConstraints(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleChromePolicyVersionsV1FieldConstraints::OAIGoogleChromePolicyVersionsV1FieldConstraints() {
    this->initializeModel();
}

OAIGoogleChromePolicyVersionsV1FieldConstraints::~OAIGoogleChromePolicyVersionsV1FieldConstraints() {}

void OAIGoogleChromePolicyVersionsV1FieldConstraints::initializeModel() {

    m_numeric_range_constraint_isSet = false;
    m_numeric_range_constraint_isValid = false;

    m_uploaded_file_constraints_isSet = false;
    m_uploaded_file_constraints_isValid = false;
}

void OAIGoogleChromePolicyVersionsV1FieldConstraints::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleChromePolicyVersionsV1FieldConstraints::fromJsonObject(QJsonObject json) {

    m_numeric_range_constraint_isValid = ::OpenAPI::fromJsonValue(m_numeric_range_constraint, json[QString("numericRangeConstraint")]);
    m_numeric_range_constraint_isSet = !json[QString("numericRangeConstraint")].isNull() && m_numeric_range_constraint_isValid;

    m_uploaded_file_constraints_isValid = ::OpenAPI::fromJsonValue(m_uploaded_file_constraints, json[QString("uploadedFileConstraints")]);
    m_uploaded_file_constraints_isSet = !json[QString("uploadedFileConstraints")].isNull() && m_uploaded_file_constraints_isValid;
}

QString OAIGoogleChromePolicyVersionsV1FieldConstraints::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleChromePolicyVersionsV1FieldConstraints::asJsonObject() const {
    QJsonObject obj;
    if (m_numeric_range_constraint.isSet()) {
        obj.insert(QString("numericRangeConstraint"), ::OpenAPI::toJsonValue(m_numeric_range_constraint));
    }
    if (m_uploaded_file_constraints.isSet()) {
        obj.insert(QString("uploadedFileConstraints"), ::OpenAPI::toJsonValue(m_uploaded_file_constraints));
    }
    return obj;
}

OAIGoogleChromePolicyVersionsV1NumericRangeConstraint OAIGoogleChromePolicyVersionsV1FieldConstraints::getNumericRangeConstraint() const {
    return m_numeric_range_constraint;
}
void OAIGoogleChromePolicyVersionsV1FieldConstraints::setNumericRangeConstraint(const OAIGoogleChromePolicyVersionsV1NumericRangeConstraint &numeric_range_constraint) {
    m_numeric_range_constraint = numeric_range_constraint;
    m_numeric_range_constraint_isSet = true;
}

bool OAIGoogleChromePolicyVersionsV1FieldConstraints::is_numeric_range_constraint_Set() const{
    return m_numeric_range_constraint_isSet;
}

bool OAIGoogleChromePolicyVersionsV1FieldConstraints::is_numeric_range_constraint_Valid() const{
    return m_numeric_range_constraint_isValid;
}

OAIGoogleChromePolicyVersionsV1UploadedFileConstraints OAIGoogleChromePolicyVersionsV1FieldConstraints::getUploadedFileConstraints() const {
    return m_uploaded_file_constraints;
}
void OAIGoogleChromePolicyVersionsV1FieldConstraints::setUploadedFileConstraints(const OAIGoogleChromePolicyVersionsV1UploadedFileConstraints &uploaded_file_constraints) {
    m_uploaded_file_constraints = uploaded_file_constraints;
    m_uploaded_file_constraints_isSet = true;
}

bool OAIGoogleChromePolicyVersionsV1FieldConstraints::is_uploaded_file_constraints_Set() const{
    return m_uploaded_file_constraints_isSet;
}

bool OAIGoogleChromePolicyVersionsV1FieldConstraints::is_uploaded_file_constraints_Valid() const{
    return m_uploaded_file_constraints_isValid;
}

bool OAIGoogleChromePolicyVersionsV1FieldConstraints::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_numeric_range_constraint.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_uploaded_file_constraints.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleChromePolicyVersionsV1FieldConstraints::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
