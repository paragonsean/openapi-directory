/**
 * Chrome Policy API
 * The Chrome Policy API is a suite of services that allows Chrome administrators to control the policies applied to their managed Chrome OS devices and Chrome browsers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromePolicyVersionsV1ResolveRequest.h
 *
 * Request message for getting the resolved policy value for a specific target.
 */

#ifndef OAIGoogleChromePolicyVersionsV1ResolveRequest_H
#define OAIGoogleChromePolicyVersionsV1ResolveRequest_H

#include <QJsonObject>

#include "OAIGoogleChromePolicyVersionsV1PolicyTargetKey.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleChromePolicyVersionsV1PolicyTargetKey;

class OAIGoogleChromePolicyVersionsV1ResolveRequest : public OAIObject {
public:
    OAIGoogleChromePolicyVersionsV1ResolveRequest();
    OAIGoogleChromePolicyVersionsV1ResolveRequest(QString json);
    ~OAIGoogleChromePolicyVersionsV1ResolveRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getPageSize() const;
    void setPageSize(const qint32 &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    QString getPageToken() const;
    void setPageToken(const QString &page_token);
    bool is_page_token_Set() const;
    bool is_page_token_Valid() const;

    QString getPolicySchemaFilter() const;
    void setPolicySchemaFilter(const QString &policy_schema_filter);
    bool is_policy_schema_filter_Set() const;
    bool is_policy_schema_filter_Valid() const;

    OAIGoogleChromePolicyVersionsV1PolicyTargetKey getPolicyTargetKey() const;
    void setPolicyTargetKey(const OAIGoogleChromePolicyVersionsV1PolicyTargetKey &policy_target_key);
    bool is_policy_target_key_Set() const;
    bool is_policy_target_key_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;

    QString m_page_token;
    bool m_page_token_isSet;
    bool m_page_token_isValid;

    QString m_policy_schema_filter;
    bool m_policy_schema_filter_isSet;
    bool m_policy_schema_filter_isValid;

    OAIGoogleChromePolicyVersionsV1PolicyTargetKey m_policy_target_key;
    bool m_policy_target_key_isSet;
    bool m_policy_target_key_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromePolicyVersionsV1ResolveRequest)

#endif // OAIGoogleChromePolicyVersionsV1ResolveRequest_H
