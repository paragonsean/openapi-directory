/**
 * Chrome Policy API
 * The Chrome Policy API is a suite of services that allows Chrome administrators to control the policies applied to their managed Chrome OS devices and Chrome browsers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleChromePolicyVersionsV1ListGroupPriorityOrderingResponse.h
 *
 * Response message for listing the group priority ordering of an app.
 */

#ifndef OAIGoogleChromePolicyVersionsV1ListGroupPriorityOrderingResponse_H
#define OAIGoogleChromePolicyVersionsV1ListGroupPriorityOrderingResponse_H

#include <QJsonObject>

#include "OAIGoogleChromePolicyVersionsV1PolicyTargetKey.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleChromePolicyVersionsV1PolicyTargetKey;

class OAIGoogleChromePolicyVersionsV1ListGroupPriorityOrderingResponse : public OAIObject {
public:
    OAIGoogleChromePolicyVersionsV1ListGroupPriorityOrderingResponse();
    OAIGoogleChromePolicyVersionsV1ListGroupPriorityOrderingResponse(QString json);
    ~OAIGoogleChromePolicyVersionsV1ListGroupPriorityOrderingResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getGroupIds() const;
    void setGroupIds(const QList<QString> &group_ids);
    bool is_group_ids_Set() const;
    bool is_group_ids_Valid() const;

    QString getPolicyNamespace() const;
    void setPolicyNamespace(const QString &policy_namespace);
    bool is_policy_namespace_Set() const;
    bool is_policy_namespace_Valid() const;

    QString getPolicySchema() const;
    void setPolicySchema(const QString &policy_schema);
    bool is_policy_schema_Set() const;
    bool is_policy_schema_Valid() const;

    OAIGoogleChromePolicyVersionsV1PolicyTargetKey getPolicyTargetKey() const;
    void setPolicyTargetKey(const OAIGoogleChromePolicyVersionsV1PolicyTargetKey &policy_target_key);
    bool is_policy_target_key_Set() const;
    bool is_policy_target_key_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_group_ids;
    bool m_group_ids_isSet;
    bool m_group_ids_isValid;

    QString m_policy_namespace;
    bool m_policy_namespace_isSet;
    bool m_policy_namespace_isValid;

    QString m_policy_schema;
    bool m_policy_schema_isSet;
    bool m_policy_schema_isValid;

    OAIGoogleChromePolicyVersionsV1PolicyTargetKey m_policy_target_key;
    bool m_policy_target_key_isSet;
    bool m_policy_target_key_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleChromePolicyVersionsV1ListGroupPriorityOrderingResponse)

#endif // OAIGoogleChromePolicyVersionsV1ListGroupPriorityOrderingResponse_H
