/*
 * Chrome Policy API
 * The Chrome Policy API is a suite of services that allows Chrome administrators to control the policies applied to their managed Chrome OS devices and Chrome browsers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleChromePolicyVersionsV1FieldConstraints;
import org.openapitools.client.model.GoogleChromePolicyVersionsV1PolicySchemaFieldDependencies;
import org.openapitools.client.model.GoogleChromePolicyVersionsV1PolicySchemaFieldKnownValueDescription;
import org.openapitools.client.model.GoogleChromePolicyVersionsV1PolicySchemaRequiredItems;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Provides detailed information for a particular field that is part of a PolicySchema.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:43:19.062447-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleChromePolicyVersionsV1PolicySchemaFieldDescription {
  public static final String SERIALIZED_NAME_DEFAULT_VALUE = "defaultValue";
  @SerializedName(SERIALIZED_NAME_DEFAULT_VALUE)
  private Object defaultValue = null;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_FIELD = "field";
  @SerializedName(SERIALIZED_NAME_FIELD)
  private String field;

  public static final String SERIALIZED_NAME_FIELD_CONSTRAINTS = "fieldConstraints";
  @SerializedName(SERIALIZED_NAME_FIELD_CONSTRAINTS)
  private GoogleChromePolicyVersionsV1FieldConstraints fieldConstraints;

  public static final String SERIALIZED_NAME_FIELD_DEPENDENCIES = "fieldDependencies";
  @SerializedName(SERIALIZED_NAME_FIELD_DEPENDENCIES)
  private List<GoogleChromePolicyVersionsV1PolicySchemaFieldDependencies> fieldDependencies = new ArrayList<>();

  public static final String SERIALIZED_NAME_FIELD_DESCRIPTION = "fieldDescription";
  @SerializedName(SERIALIZED_NAME_FIELD_DESCRIPTION)
  private String fieldDescription;

  public static final String SERIALIZED_NAME_INPUT_CONSTRAINT = "inputConstraint";
  @SerializedName(SERIALIZED_NAME_INPUT_CONSTRAINT)
  private String inputConstraint;

  public static final String SERIALIZED_NAME_KNOWN_VALUE_DESCRIPTIONS = "knownValueDescriptions";
  @SerializedName(SERIALIZED_NAME_KNOWN_VALUE_DESCRIPTIONS)
  private List<GoogleChromePolicyVersionsV1PolicySchemaFieldKnownValueDescription> knownValueDescriptions = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NESTED_FIELD_DESCRIPTIONS = "nestedFieldDescriptions";
  @SerializedName(SERIALIZED_NAME_NESTED_FIELD_DESCRIPTIONS)
  private List<GoogleChromePolicyVersionsV1PolicySchemaFieldDescription> nestedFieldDescriptions = new ArrayList<>();

  public static final String SERIALIZED_NAME_REQUIRED_ITEMS = "requiredItems";
  @SerializedName(SERIALIZED_NAME_REQUIRED_ITEMS)
  private List<GoogleChromePolicyVersionsV1PolicySchemaRequiredItems> requiredItems = new ArrayList<>();

  public GoogleChromePolicyVersionsV1PolicySchemaFieldDescription() {
  }

  public GoogleChromePolicyVersionsV1PolicySchemaFieldDescription(
     Object defaultValue, 
     String field, 
     List<GoogleChromePolicyVersionsV1PolicySchemaFieldDependencies> fieldDependencies, 
     String fieldDescription, 
     String inputConstraint, 
     List<GoogleChromePolicyVersionsV1PolicySchemaFieldKnownValueDescription> knownValueDescriptions, 
     String name, 
     List<GoogleChromePolicyVersionsV1PolicySchemaFieldDescription> nestedFieldDescriptions, 
     List<GoogleChromePolicyVersionsV1PolicySchemaRequiredItems> requiredItems
  ) {
    this();
    this.defaultValue = defaultValue;
    this.field = field;
    this.fieldDependencies = fieldDependencies;
    this.fieldDescription = fieldDescription;
    this.inputConstraint = inputConstraint;
    this.knownValueDescriptions = knownValueDescriptions;
    this.name = name;
    this.nestedFieldDescriptions = nestedFieldDescriptions;
    this.requiredItems = requiredItems;
  }

  /**
   * Output only. Client default if the policy is unset.
   * @return defaultValue
   */
  @javax.annotation.Nullable
  public Object getDefaultValue() {
    return defaultValue;
  }



  @Deprecated
  public GoogleChromePolicyVersionsV1PolicySchemaFieldDescription description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Deprecated. Use name and field_description instead. The description for the field.
   * @return description
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  @Deprecated
  public void setDescription(String description) {
    this.description = description;
  }


  /**
   * Output only. The name of the field for associated with this description.
   * @return field
   */
  @javax.annotation.Nullable
  public String getField() {
    return field;
  }



  public GoogleChromePolicyVersionsV1PolicySchemaFieldDescription fieldConstraints(GoogleChromePolicyVersionsV1FieldConstraints fieldConstraints) {
    this.fieldConstraints = fieldConstraints;
    return this;
  }

  /**
   * Get fieldConstraints
   * @return fieldConstraints
   */
  @javax.annotation.Nullable
  public GoogleChromePolicyVersionsV1FieldConstraints getFieldConstraints() {
    return fieldConstraints;
  }

  public void setFieldConstraints(GoogleChromePolicyVersionsV1FieldConstraints fieldConstraints) {
    this.fieldConstraints = fieldConstraints;
  }


  /**
   * Output only. Provides a list of fields and values. At least one of the fields must have the corresponding value in order for this field to be allowed to be set.
   * @return fieldDependencies
   */
  @javax.annotation.Nullable
  public List<GoogleChromePolicyVersionsV1PolicySchemaFieldDependencies> getFieldDependencies() {
    return fieldDependencies;
  }



  /**
   * Output only. The description of the field.
   * @return fieldDescription
   */
  @javax.annotation.Nullable
  public String getFieldDescription() {
    return fieldDescription;
  }



  /**
   * Output only. Any input constraints associated on the values for the field.
   * @return inputConstraint
   */
  @javax.annotation.Nullable
  public String getInputConstraint() {
    return inputConstraint;
  }



  /**
   * Output only. If the field has a set of known values, this field will provide a description for these values.
   * @return knownValueDescriptions
   */
  @javax.annotation.Nullable
  public List<GoogleChromePolicyVersionsV1PolicySchemaFieldKnownValueDescription> getKnownValueDescriptions() {
    return knownValueDescriptions;
  }



  /**
   * Output only. The name of the field.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  /**
   * Output only. Provides the description of the fields nested in this field, if the field is a message type that defines multiple fields. Fields are suggested to be displayed by the ordering in this list, not by field number.
   * @return nestedFieldDescriptions
   */
  @javax.annotation.Nullable
  public List<GoogleChromePolicyVersionsV1PolicySchemaFieldDescription> getNestedFieldDescriptions() {
    return nestedFieldDescriptions;
  }



  /**
   * Output only. Provides a list of fields that are required to be set if this field has a certain value.
   * @return requiredItems
   */
  @javax.annotation.Nullable
  public List<GoogleChromePolicyVersionsV1PolicySchemaRequiredItems> getRequiredItems() {
    return requiredItems;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleChromePolicyVersionsV1PolicySchemaFieldDescription googleChromePolicyVersionsV1PolicySchemaFieldDescription = (GoogleChromePolicyVersionsV1PolicySchemaFieldDescription) o;
    return Objects.equals(this.defaultValue, googleChromePolicyVersionsV1PolicySchemaFieldDescription.defaultValue) &&
        Objects.equals(this.description, googleChromePolicyVersionsV1PolicySchemaFieldDescription.description) &&
        Objects.equals(this.field, googleChromePolicyVersionsV1PolicySchemaFieldDescription.field) &&
        Objects.equals(this.fieldConstraints, googleChromePolicyVersionsV1PolicySchemaFieldDescription.fieldConstraints) &&
        Objects.equals(this.fieldDependencies, googleChromePolicyVersionsV1PolicySchemaFieldDescription.fieldDependencies) &&
        Objects.equals(this.fieldDescription, googleChromePolicyVersionsV1PolicySchemaFieldDescription.fieldDescription) &&
        Objects.equals(this.inputConstraint, googleChromePolicyVersionsV1PolicySchemaFieldDescription.inputConstraint) &&
        Objects.equals(this.knownValueDescriptions, googleChromePolicyVersionsV1PolicySchemaFieldDescription.knownValueDescriptions) &&
        Objects.equals(this.name, googleChromePolicyVersionsV1PolicySchemaFieldDescription.name) &&
        Objects.equals(this.nestedFieldDescriptions, googleChromePolicyVersionsV1PolicySchemaFieldDescription.nestedFieldDescriptions) &&
        Objects.equals(this.requiredItems, googleChromePolicyVersionsV1PolicySchemaFieldDescription.requiredItems);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultValue, description, field, fieldConstraints, fieldDependencies, fieldDescription, inputConstraint, knownValueDescriptions, name, nestedFieldDescriptions, requiredItems);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleChromePolicyVersionsV1PolicySchemaFieldDescription {\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    field: ").append(toIndentedString(field)).append("\n");
    sb.append("    fieldConstraints: ").append(toIndentedString(fieldConstraints)).append("\n");
    sb.append("    fieldDependencies: ").append(toIndentedString(fieldDependencies)).append("\n");
    sb.append("    fieldDescription: ").append(toIndentedString(fieldDescription)).append("\n");
    sb.append("    inputConstraint: ").append(toIndentedString(inputConstraint)).append("\n");
    sb.append("    knownValueDescriptions: ").append(toIndentedString(knownValueDescriptions)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nestedFieldDescriptions: ").append(toIndentedString(nestedFieldDescriptions)).append("\n");
    sb.append("    requiredItems: ").append(toIndentedString(requiredItems)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("defaultValue");
    openapiFields.add("description");
    openapiFields.add("field");
    openapiFields.add("fieldConstraints");
    openapiFields.add("fieldDependencies");
    openapiFields.add("fieldDescription");
    openapiFields.add("inputConstraint");
    openapiFields.add("knownValueDescriptions");
    openapiFields.add("name");
    openapiFields.add("nestedFieldDescriptions");
    openapiFields.add("requiredItems");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleChromePolicyVersionsV1PolicySchemaFieldDescription
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleChromePolicyVersionsV1PolicySchemaFieldDescription.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleChromePolicyVersionsV1PolicySchemaFieldDescription is not found in the empty JSON string", GoogleChromePolicyVersionsV1PolicySchemaFieldDescription.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleChromePolicyVersionsV1PolicySchemaFieldDescription.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleChromePolicyVersionsV1PolicySchemaFieldDescription` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("field") != null && !jsonObj.get("field").isJsonNull()) && !jsonObj.get("field").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `field` to be a primitive type in the JSON string but got `%s`", jsonObj.get("field").toString()));
      }
      // validate the optional field `fieldConstraints`
      if (jsonObj.get("fieldConstraints") != null && !jsonObj.get("fieldConstraints").isJsonNull()) {
        GoogleChromePolicyVersionsV1FieldConstraints.validateJsonElement(jsonObj.get("fieldConstraints"));
      }
      if (jsonObj.get("fieldDependencies") != null && !jsonObj.get("fieldDependencies").isJsonNull()) {
        JsonArray jsonArrayfieldDependencies = jsonObj.getAsJsonArray("fieldDependencies");
        if (jsonArrayfieldDependencies != null) {
          // ensure the json data is an array
          if (!jsonObj.get("fieldDependencies").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `fieldDependencies` to be an array in the JSON string but got `%s`", jsonObj.get("fieldDependencies").toString()));
          }

          // validate the optional field `fieldDependencies` (array)
          for (int i = 0; i < jsonArrayfieldDependencies.size(); i++) {
            GoogleChromePolicyVersionsV1PolicySchemaFieldDependencies.validateJsonElement(jsonArrayfieldDependencies.get(i));
          };
        }
      }
      if ((jsonObj.get("fieldDescription") != null && !jsonObj.get("fieldDescription").isJsonNull()) && !jsonObj.get("fieldDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fieldDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fieldDescription").toString()));
      }
      if ((jsonObj.get("inputConstraint") != null && !jsonObj.get("inputConstraint").isJsonNull()) && !jsonObj.get("inputConstraint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inputConstraint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inputConstraint").toString()));
      }
      if (jsonObj.get("knownValueDescriptions") != null && !jsonObj.get("knownValueDescriptions").isJsonNull()) {
        JsonArray jsonArrayknownValueDescriptions = jsonObj.getAsJsonArray("knownValueDescriptions");
        if (jsonArrayknownValueDescriptions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("knownValueDescriptions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `knownValueDescriptions` to be an array in the JSON string but got `%s`", jsonObj.get("knownValueDescriptions").toString()));
          }

          // validate the optional field `knownValueDescriptions` (array)
          for (int i = 0; i < jsonArrayknownValueDescriptions.size(); i++) {
            GoogleChromePolicyVersionsV1PolicySchemaFieldKnownValueDescription.validateJsonElement(jsonArrayknownValueDescriptions.get(i));
          };
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("nestedFieldDescriptions") != null && !jsonObj.get("nestedFieldDescriptions").isJsonNull()) {
        JsonArray jsonArraynestedFieldDescriptions = jsonObj.getAsJsonArray("nestedFieldDescriptions");
        if (jsonArraynestedFieldDescriptions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("nestedFieldDescriptions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `nestedFieldDescriptions` to be an array in the JSON string but got `%s`", jsonObj.get("nestedFieldDescriptions").toString()));
          }

          // validate the optional field `nestedFieldDescriptions` (array)
          for (int i = 0; i < jsonArraynestedFieldDescriptions.size(); i++) {
            GoogleChromePolicyVersionsV1PolicySchemaFieldDescription.validateJsonElement(jsonArraynestedFieldDescriptions.get(i));
          };
        }
      }
      if (jsonObj.get("requiredItems") != null && !jsonObj.get("requiredItems").isJsonNull()) {
        JsonArray jsonArrayrequiredItems = jsonObj.getAsJsonArray("requiredItems");
        if (jsonArrayrequiredItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("requiredItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `requiredItems` to be an array in the JSON string but got `%s`", jsonObj.get("requiredItems").toString()));
          }

          // validate the optional field `requiredItems` (array)
          for (int i = 0; i < jsonArrayrequiredItems.size(); i++) {
            GoogleChromePolicyVersionsV1PolicySchemaRequiredItems.validateJsonElement(jsonArrayrequiredItems.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleChromePolicyVersionsV1PolicySchemaFieldDescription.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleChromePolicyVersionsV1PolicySchemaFieldDescription' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleChromePolicyVersionsV1PolicySchemaFieldDescription> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleChromePolicyVersionsV1PolicySchemaFieldDescription.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleChromePolicyVersionsV1PolicySchemaFieldDescription>() {
           @Override
           public void write(JsonWriter out, GoogleChromePolicyVersionsV1PolicySchemaFieldDescription value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleChromePolicyVersionsV1PolicySchemaFieldDescription read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleChromePolicyVersionsV1PolicySchemaFieldDescription given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleChromePolicyVersionsV1PolicySchemaFieldDescription
   * @throws IOException if the JSON string is invalid with respect to GoogleChromePolicyVersionsV1PolicySchemaFieldDescription
   */
  public static GoogleChromePolicyVersionsV1PolicySchemaFieldDescription fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleChromePolicyVersionsV1PolicySchemaFieldDescription.class);
  }

  /**
   * Convert an instance of GoogleChromePolicyVersionsV1PolicySchemaFieldDescription to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

