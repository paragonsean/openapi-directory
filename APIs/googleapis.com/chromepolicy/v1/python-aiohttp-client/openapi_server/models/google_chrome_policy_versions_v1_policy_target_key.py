# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleChromePolicyVersionsV1PolicyTargetKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_target_keys: Dict[str, str]=None, target_resource: str=None):
        """GoogleChromePolicyVersionsV1PolicyTargetKey - a model defined in OpenAPI

        :param additional_target_keys: The additional_target_keys of this GoogleChromePolicyVersionsV1PolicyTargetKey.
        :param target_resource: The target_resource of this GoogleChromePolicyVersionsV1PolicyTargetKey.
        """
        self.openapi_types = {
            'additional_target_keys': Dict[str, str],
            'target_resource': str
        }

        self.attribute_map = {
            'additional_target_keys': 'additionalTargetKeys',
            'target_resource': 'targetResource'
        }

        self._additional_target_keys = additional_target_keys
        self._target_resource = target_resource

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleChromePolicyVersionsV1PolicyTargetKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleChromePolicyVersionsV1PolicyTargetKey of this GoogleChromePolicyVersionsV1PolicyTargetKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_target_keys(self):
        """Gets the additional_target_keys of this GoogleChromePolicyVersionsV1PolicyTargetKey.

        Map containing the additional target key name and value pairs used to further identify the target of the policy.

        :return: The additional_target_keys of this GoogleChromePolicyVersionsV1PolicyTargetKey.
        :rtype: Dict[str, str]
        """
        return self._additional_target_keys

    @additional_target_keys.setter
    def additional_target_keys(self, additional_target_keys):
        """Sets the additional_target_keys of this GoogleChromePolicyVersionsV1PolicyTargetKey.

        Map containing the additional target key name and value pairs used to further identify the target of the policy.

        :param additional_target_keys: The additional_target_keys of this GoogleChromePolicyVersionsV1PolicyTargetKey.
        :type additional_target_keys: Dict[str, str]
        """

        self._additional_target_keys = additional_target_keys

    @property
    def target_resource(self):
        """Gets the target_resource of this GoogleChromePolicyVersionsV1PolicyTargetKey.

        The target resource on which this policy is applied. The following resources are supported: * Organizational Unit (\"orgunits/{orgunit_id}\") * Group (\"groups/{group_id}\")

        :return: The target_resource of this GoogleChromePolicyVersionsV1PolicyTargetKey.
        :rtype: str
        """
        return self._target_resource

    @target_resource.setter
    def target_resource(self, target_resource):
        """Sets the target_resource of this GoogleChromePolicyVersionsV1PolicyTargetKey.

        The target resource on which this policy is applied. The following resources are supported: * Organizational Unit (\"orgunits/{orgunit_id}\") * Group (\"groups/{group_id}\")

        :param target_resource: The target_resource of this GoogleChromePolicyVersionsV1PolicyTargetKey.
        :type target_resource: str
        """

        self._target_resource = target_resource
