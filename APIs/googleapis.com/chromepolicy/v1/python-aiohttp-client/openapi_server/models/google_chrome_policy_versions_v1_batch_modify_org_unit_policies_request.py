# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_chrome_policy_versions_v1_modify_org_unit_policy_request import GoogleChromePolicyVersionsV1ModifyOrgUnitPolicyRequest
from openapi_server import util


class GoogleChromePolicyVersionsV1BatchModifyOrgUnitPoliciesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, requests: List[GoogleChromePolicyVersionsV1ModifyOrgUnitPolicyRequest]=None):
        """GoogleChromePolicyVersionsV1BatchModifyOrgUnitPoliciesRequest - a model defined in OpenAPI

        :param requests: The requests of this GoogleChromePolicyVersionsV1BatchModifyOrgUnitPoliciesRequest.
        """
        self.openapi_types = {
            'requests': List[GoogleChromePolicyVersionsV1ModifyOrgUnitPolicyRequest]
        }

        self.attribute_map = {
            'requests': 'requests'
        }

        self._requests = requests

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleChromePolicyVersionsV1BatchModifyOrgUnitPoliciesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleChromePolicyVersionsV1BatchModifyOrgUnitPoliciesRequest of this GoogleChromePolicyVersionsV1BatchModifyOrgUnitPoliciesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def requests(self):
        """Gets the requests of this GoogleChromePolicyVersionsV1BatchModifyOrgUnitPoliciesRequest.

        List of policies to modify as defined by the `requests`. All requests in the list must follow these restrictions: 1. All schemas in the list must have the same root namespace. 2. All `policyTargetKey.targetResource` values must point to an org unit resource. 3. All `policyTargetKey` values must have the same key names in the ` additionalTargetKeys`. This also means if one of the targets has an empty `additionalTargetKeys` map, all of the targets must have an empty `additionalTargetKeys` map. 4. No two modification requests can reference the same `policySchema` + ` policyTargetKey` pair. 

        :return: The requests of this GoogleChromePolicyVersionsV1BatchModifyOrgUnitPoliciesRequest.
        :rtype: List[GoogleChromePolicyVersionsV1ModifyOrgUnitPolicyRequest]
        """
        return self._requests

    @requests.setter
    def requests(self, requests):
        """Sets the requests of this GoogleChromePolicyVersionsV1BatchModifyOrgUnitPoliciesRequest.

        List of policies to modify as defined by the `requests`. All requests in the list must follow these restrictions: 1. All schemas in the list must have the same root namespace. 2. All `policyTargetKey.targetResource` values must point to an org unit resource. 3. All `policyTargetKey` values must have the same key names in the ` additionalTargetKeys`. This also means if one of the targets has an empty `additionalTargetKeys` map, all of the targets must have an empty `additionalTargetKeys` map. 4. No two modification requests can reference the same `policySchema` + ` policyTargetKey` pair. 

        :param requests: The requests of this GoogleChromePolicyVersionsV1BatchModifyOrgUnitPoliciesRequest.
        :type requests: List[GoogleChromePolicyVersionsV1ModifyOrgUnitPolicyRequest]
        """

        self._requests = requests
