# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_chrome_policy_versions_v1_additional_target_key_name import GoogleChromePolicyVersionsV1AdditionalTargetKeyName
from openapi_server.models.google_chrome_policy_versions_v1_policy_api_lifecycle import GoogleChromePolicyVersionsV1PolicyApiLifecycle
from openapi_server.models.google_chrome_policy_versions_v1_policy_schema_field_description import GoogleChromePolicyVersionsV1PolicySchemaFieldDescription
from openapi_server.models.google_chrome_policy_versions_v1_policy_schema_notice_description import GoogleChromePolicyVersionsV1PolicySchemaNoticeDescription
from openapi_server.models.proto2_file_descriptor_proto import Proto2FileDescriptorProto
from openapi_server import util


class GoogleChromePolicyVersionsV1PolicySchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_restrictions: List[str]=None, additional_target_key_names: List[GoogleChromePolicyVersionsV1AdditionalTargetKeyName]=None, category_title: str=None, definition: Proto2FileDescriptorProto=None, field_descriptions: List[GoogleChromePolicyVersionsV1PolicySchemaFieldDescription]=None, name: str=None, notices: List[GoogleChromePolicyVersionsV1PolicySchemaNoticeDescription]=None, policy_api_lifecycle: GoogleChromePolicyVersionsV1PolicyApiLifecycle=None, policy_description: str=None, schema_name: str=None, support_uri: str=None, supported_platforms: List[str]=None, valid_target_resources: List[str]=None):
        """GoogleChromePolicyVersionsV1PolicySchema - a model defined in OpenAPI

        :param access_restrictions: The access_restrictions of this GoogleChromePolicyVersionsV1PolicySchema.
        :param additional_target_key_names: The additional_target_key_names of this GoogleChromePolicyVersionsV1PolicySchema.
        :param category_title: The category_title of this GoogleChromePolicyVersionsV1PolicySchema.
        :param definition: The definition of this GoogleChromePolicyVersionsV1PolicySchema.
        :param field_descriptions: The field_descriptions of this GoogleChromePolicyVersionsV1PolicySchema.
        :param name: The name of this GoogleChromePolicyVersionsV1PolicySchema.
        :param notices: The notices of this GoogleChromePolicyVersionsV1PolicySchema.
        :param policy_api_lifecycle: The policy_api_lifecycle of this GoogleChromePolicyVersionsV1PolicySchema.
        :param policy_description: The policy_description of this GoogleChromePolicyVersionsV1PolicySchema.
        :param schema_name: The schema_name of this GoogleChromePolicyVersionsV1PolicySchema.
        :param support_uri: The support_uri of this GoogleChromePolicyVersionsV1PolicySchema.
        :param supported_platforms: The supported_platforms of this GoogleChromePolicyVersionsV1PolicySchema.
        :param valid_target_resources: The valid_target_resources of this GoogleChromePolicyVersionsV1PolicySchema.
        """
        self.openapi_types = {
            'access_restrictions': List[str],
            'additional_target_key_names': List[GoogleChromePolicyVersionsV1AdditionalTargetKeyName],
            'category_title': str,
            'definition': Proto2FileDescriptorProto,
            'field_descriptions': List[GoogleChromePolicyVersionsV1PolicySchemaFieldDescription],
            'name': str,
            'notices': List[GoogleChromePolicyVersionsV1PolicySchemaNoticeDescription],
            'policy_api_lifecycle': GoogleChromePolicyVersionsV1PolicyApiLifecycle,
            'policy_description': str,
            'schema_name': str,
            'support_uri': str,
            'supported_platforms': List[str],
            'valid_target_resources': List[str]
        }

        self.attribute_map = {
            'access_restrictions': 'accessRestrictions',
            'additional_target_key_names': 'additionalTargetKeyNames',
            'category_title': 'categoryTitle',
            'definition': 'definition',
            'field_descriptions': 'fieldDescriptions',
            'name': 'name',
            'notices': 'notices',
            'policy_api_lifecycle': 'policyApiLifecycle',
            'policy_description': 'policyDescription',
            'schema_name': 'schemaName',
            'support_uri': 'supportUri',
            'supported_platforms': 'supportedPlatforms',
            'valid_target_resources': 'validTargetResources'
        }

        self._access_restrictions = access_restrictions
        self._additional_target_key_names = additional_target_key_names
        self._category_title = category_title
        self._definition = definition
        self._field_descriptions = field_descriptions
        self._name = name
        self._notices = notices
        self._policy_api_lifecycle = policy_api_lifecycle
        self._policy_description = policy_description
        self._schema_name = schema_name
        self._support_uri = support_uri
        self._supported_platforms = supported_platforms
        self._valid_target_resources = valid_target_resources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleChromePolicyVersionsV1PolicySchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleChromePolicyVersionsV1PolicySchema of this GoogleChromePolicyVersionsV1PolicySchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_restrictions(self):
        """Gets the access_restrictions of this GoogleChromePolicyVersionsV1PolicySchema.

        Output only. Specific access restrictions related to this policy.

        :return: The access_restrictions of this GoogleChromePolicyVersionsV1PolicySchema.
        :rtype: List[str]
        """
        return self._access_restrictions

    @access_restrictions.setter
    def access_restrictions(self, access_restrictions):
        """Sets the access_restrictions of this GoogleChromePolicyVersionsV1PolicySchema.

        Output only. Specific access restrictions related to this policy.

        :param access_restrictions: The access_restrictions of this GoogleChromePolicyVersionsV1PolicySchema.
        :type access_restrictions: List[str]
        """

        self._access_restrictions = access_restrictions

    @property
    def additional_target_key_names(self):
        """Gets the additional_target_key_names of this GoogleChromePolicyVersionsV1PolicySchema.

        Output only. Additional key names that will be used to identify the target of the policy value. When specifying a `policyTargetKey`, each of the additional keys specified here will have to be included in the `additionalTargetKeys` map.

        :return: The additional_target_key_names of this GoogleChromePolicyVersionsV1PolicySchema.
        :rtype: List[GoogleChromePolicyVersionsV1AdditionalTargetKeyName]
        """
        return self._additional_target_key_names

    @additional_target_key_names.setter
    def additional_target_key_names(self, additional_target_key_names):
        """Sets the additional_target_key_names of this GoogleChromePolicyVersionsV1PolicySchema.

        Output only. Additional key names that will be used to identify the target of the policy value. When specifying a `policyTargetKey`, each of the additional keys specified here will have to be included in the `additionalTargetKeys` map.

        :param additional_target_key_names: The additional_target_key_names of this GoogleChromePolicyVersionsV1PolicySchema.
        :type additional_target_key_names: List[GoogleChromePolicyVersionsV1AdditionalTargetKeyName]
        """

        self._additional_target_key_names = additional_target_key_names

    @property
    def category_title(self):
        """Gets the category_title of this GoogleChromePolicyVersionsV1PolicySchema.

        Title of the category in which a setting belongs.

        :return: The category_title of this GoogleChromePolicyVersionsV1PolicySchema.
        :rtype: str
        """
        return self._category_title

    @category_title.setter
    def category_title(self, category_title):
        """Sets the category_title of this GoogleChromePolicyVersionsV1PolicySchema.

        Title of the category in which a setting belongs.

        :param category_title: The category_title of this GoogleChromePolicyVersionsV1PolicySchema.
        :type category_title: str
        """

        self._category_title = category_title

    @property
    def definition(self):
        """Gets the definition of this GoogleChromePolicyVersionsV1PolicySchema.


        :return: The definition of this GoogleChromePolicyVersionsV1PolicySchema.
        :rtype: Proto2FileDescriptorProto
        """
        return self._definition

    @definition.setter
    def definition(self, definition):
        """Sets the definition of this GoogleChromePolicyVersionsV1PolicySchema.


        :param definition: The definition of this GoogleChromePolicyVersionsV1PolicySchema.
        :type definition: Proto2FileDescriptorProto
        """

        self._definition = definition

    @property
    def field_descriptions(self):
        """Gets the field_descriptions of this GoogleChromePolicyVersionsV1PolicySchema.

        Output only. Detailed description of each field that is part of the schema. Fields are suggested to be displayed by the ordering in this list, not by field number.

        :return: The field_descriptions of this GoogleChromePolicyVersionsV1PolicySchema.
        :rtype: List[GoogleChromePolicyVersionsV1PolicySchemaFieldDescription]
        """
        return self._field_descriptions

    @field_descriptions.setter
    def field_descriptions(self, field_descriptions):
        """Sets the field_descriptions of this GoogleChromePolicyVersionsV1PolicySchema.

        Output only. Detailed description of each field that is part of the schema. Fields are suggested to be displayed by the ordering in this list, not by field number.

        :param field_descriptions: The field_descriptions of this GoogleChromePolicyVersionsV1PolicySchema.
        :type field_descriptions: List[GoogleChromePolicyVersionsV1PolicySchemaFieldDescription]
        """

        self._field_descriptions = field_descriptions

    @property
    def name(self):
        """Gets the name of this GoogleChromePolicyVersionsV1PolicySchema.

        Format: name=customers/{customer}/policySchemas/{schema_namespace}

        :return: The name of this GoogleChromePolicyVersionsV1PolicySchema.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleChromePolicyVersionsV1PolicySchema.

        Format: name=customers/{customer}/policySchemas/{schema_namespace}

        :param name: The name of this GoogleChromePolicyVersionsV1PolicySchema.
        :type name: str
        """

        self._name = name

    @property
    def notices(self):
        """Gets the notices of this GoogleChromePolicyVersionsV1PolicySchema.

        Output only. Special notice messages related to setting certain values in certain fields in the schema.

        :return: The notices of this GoogleChromePolicyVersionsV1PolicySchema.
        :rtype: List[GoogleChromePolicyVersionsV1PolicySchemaNoticeDescription]
        """
        return self._notices

    @notices.setter
    def notices(self, notices):
        """Sets the notices of this GoogleChromePolicyVersionsV1PolicySchema.

        Output only. Special notice messages related to setting certain values in certain fields in the schema.

        :param notices: The notices of this GoogleChromePolicyVersionsV1PolicySchema.
        :type notices: List[GoogleChromePolicyVersionsV1PolicySchemaNoticeDescription]
        """

        self._notices = notices

    @property
    def policy_api_lifecycle(self):
        """Gets the policy_api_lifecycle of this GoogleChromePolicyVersionsV1PolicySchema.


        :return: The policy_api_lifecycle of this GoogleChromePolicyVersionsV1PolicySchema.
        :rtype: GoogleChromePolicyVersionsV1PolicyApiLifecycle
        """
        return self._policy_api_lifecycle

    @policy_api_lifecycle.setter
    def policy_api_lifecycle(self, policy_api_lifecycle):
        """Sets the policy_api_lifecycle of this GoogleChromePolicyVersionsV1PolicySchema.


        :param policy_api_lifecycle: The policy_api_lifecycle of this GoogleChromePolicyVersionsV1PolicySchema.
        :type policy_api_lifecycle: GoogleChromePolicyVersionsV1PolicyApiLifecycle
        """

        self._policy_api_lifecycle = policy_api_lifecycle

    @property
    def policy_description(self):
        """Gets the policy_description of this GoogleChromePolicyVersionsV1PolicySchema.

        Output only. Description about the policy schema for user consumption.

        :return: The policy_description of this GoogleChromePolicyVersionsV1PolicySchema.
        :rtype: str
        """
        return self._policy_description

    @policy_description.setter
    def policy_description(self, policy_description):
        """Sets the policy_description of this GoogleChromePolicyVersionsV1PolicySchema.

        Output only. Description about the policy schema for user consumption.

        :param policy_description: The policy_description of this GoogleChromePolicyVersionsV1PolicySchema.
        :type policy_description: str
        """

        self._policy_description = policy_description

    @property
    def schema_name(self):
        """Gets the schema_name of this GoogleChromePolicyVersionsV1PolicySchema.

        Output only. The fully qualified name of the policy schema. This value is used to fill the field `policy_schema` in PolicyValue when calling BatchInheritOrgUnitPolicies BatchModifyOrgUnitPolicies BatchModifyGroupPolicies or BatchDeleteGroupPolicies.

        :return: The schema_name of this GoogleChromePolicyVersionsV1PolicySchema.
        :rtype: str
        """
        return self._schema_name

    @schema_name.setter
    def schema_name(self, schema_name):
        """Sets the schema_name of this GoogleChromePolicyVersionsV1PolicySchema.

        Output only. The fully qualified name of the policy schema. This value is used to fill the field `policy_schema` in PolicyValue when calling BatchInheritOrgUnitPolicies BatchModifyOrgUnitPolicies BatchModifyGroupPolicies or BatchDeleteGroupPolicies.

        :param schema_name: The schema_name of this GoogleChromePolicyVersionsV1PolicySchema.
        :type schema_name: str
        """

        self._schema_name = schema_name

    @property
    def support_uri(self):
        """Gets the support_uri of this GoogleChromePolicyVersionsV1PolicySchema.

        Output only. URI to related support article for this schema.

        :return: The support_uri of this GoogleChromePolicyVersionsV1PolicySchema.
        :rtype: str
        """
        return self._support_uri

    @support_uri.setter
    def support_uri(self, support_uri):
        """Sets the support_uri of this GoogleChromePolicyVersionsV1PolicySchema.

        Output only. URI to related support article for this schema.

        :param support_uri: The support_uri of this GoogleChromePolicyVersionsV1PolicySchema.
        :type support_uri: str
        """

        self._support_uri = support_uri

    @property
    def supported_platforms(self):
        """Gets the supported_platforms of this GoogleChromePolicyVersionsV1PolicySchema.

        Output only. List indicates that the policy will only apply to devices/users on these platforms.

        :return: The supported_platforms of this GoogleChromePolicyVersionsV1PolicySchema.
        :rtype: List[str]
        """
        return self._supported_platforms

    @supported_platforms.setter
    def supported_platforms(self, supported_platforms):
        """Sets the supported_platforms of this GoogleChromePolicyVersionsV1PolicySchema.

        Output only. List indicates that the policy will only apply to devices/users on these platforms.

        :param supported_platforms: The supported_platforms of this GoogleChromePolicyVersionsV1PolicySchema.
        :type supported_platforms: List[str]
        """
        allowed_values = ["PLATFORM_UNSPECIFIED", "CHROME_OS", "CHROME_BROWSER", "CHROME_BROWSER_FOR_ANDROID", "CHROME_BROWSER_FOR_IOS"]  # noqa: E501
        if not set(supported_platforms).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `supported_platforms` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(supported_platforms) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._supported_platforms = supported_platforms

    @property
    def valid_target_resources(self):
        """Gets the valid_target_resources of this GoogleChromePolicyVersionsV1PolicySchema.

        Output only. Information about applicable target resources for the policy.

        :return: The valid_target_resources of this GoogleChromePolicyVersionsV1PolicySchema.
        :rtype: List[str]
        """
        return self._valid_target_resources

    @valid_target_resources.setter
    def valid_target_resources(self, valid_target_resources):
        """Sets the valid_target_resources of this GoogleChromePolicyVersionsV1PolicySchema.

        Output only. Information about applicable target resources for the policy.

        :param valid_target_resources: The valid_target_resources of this GoogleChromePolicyVersionsV1PolicySchema.
        :type valid_target_resources: List[str]
        """
        allowed_values = ["TARGET_RESOURCE_UNSPECIFIED", "ORG_UNIT", "GROUP"]  # noqa: E501
        if not set(valid_target_resources).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `valid_target_resources` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(valid_target_resources) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._valid_target_resources = valid_target_resources
