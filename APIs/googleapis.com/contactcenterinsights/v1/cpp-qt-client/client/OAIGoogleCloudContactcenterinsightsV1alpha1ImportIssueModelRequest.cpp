/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest::OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest::OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest::~OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest() {}

void OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest::initializeModel() {

    m_create_new_model_isSet = false;
    m_create_new_model_isValid = false;

    m_gcs_source_isSet = false;
    m_gcs_source_isValid = false;

    m_parent_isSet = false;
    m_parent_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest::fromJsonObject(QJsonObject json) {

    m_create_new_model_isValid = ::OpenAPI::fromJsonValue(m_create_new_model, json[QString("createNewModel")]);
    m_create_new_model_isSet = !json[QString("createNewModel")].isNull() && m_create_new_model_isValid;

    m_gcs_source_isValid = ::OpenAPI::fromJsonValue(m_gcs_source, json[QString("gcsSource")]);
    m_gcs_source_isSet = !json[QString("gcsSource")].isNull() && m_gcs_source_isValid;

    m_parent_isValid = ::OpenAPI::fromJsonValue(m_parent, json[QString("parent")]);
    m_parent_isSet = !json[QString("parent")].isNull() && m_parent_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_create_new_model_isSet) {
        obj.insert(QString("createNewModel"), ::OpenAPI::toJsonValue(m_create_new_model));
    }
    if (m_gcs_source.isSet()) {
        obj.insert(QString("gcsSource"), ::OpenAPI::toJsonValue(m_gcs_source));
    }
    if (m_parent_isSet) {
        obj.insert(QString("parent"), ::OpenAPI::toJsonValue(m_parent));
    }
    return obj;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest::isCreateNewModel() const {
    return m_create_new_model;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest::setCreateNewModel(const bool &create_new_model) {
    m_create_new_model = create_new_model;
    m_create_new_model_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest::is_create_new_model_Set() const{
    return m_create_new_model_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest::is_create_new_model_Valid() const{
    return m_create_new_model_isValid;
}

OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest::getGcsSource() const {
    return m_gcs_source;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest::setGcsSource(const OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequestGcsSource &gcs_source) {
    m_gcs_source = gcs_source;
    m_gcs_source_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest::is_gcs_source_Set() const{
    return m_gcs_source_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest::is_gcs_source_Valid() const{
    return m_gcs_source_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest::getParent() const {
    return m_parent;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest::setParent(const QString &parent) {
    m_parent = parent;
    m_parent_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest::is_parent_Set() const{
    return m_parent_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest::is_parent_Valid() const{
    return m_parent_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_new_model_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gcs_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ImportIssueModelRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
