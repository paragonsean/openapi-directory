/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries::OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries::OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries::~OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries() {}

void OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries::initializeModel() {

    m_interval_duration_isSet = false;
    m_interval_duration_isValid = false;

    m_points_isSet = false;
    m_points_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries::fromJsonObject(QJsonObject json) {

    m_interval_duration_isValid = ::OpenAPI::fromJsonValue(m_interval_duration, json[QString("intervalDuration")]);
    m_interval_duration_isSet = !json[QString("intervalDuration")].isNull() && m_interval_duration_isValid;

    m_points_isValid = ::OpenAPI::fromJsonValue(m_points, json[QString("points")]);
    m_points_isSet = !json[QString("points")].isNull() && m_points_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries::asJsonObject() const {
    QJsonObject obj;
    if (m_interval_duration_isSet) {
        obj.insert(QString("intervalDuration"), ::OpenAPI::toJsonValue(m_interval_duration));
    }
    if (m_points.size() > 0) {
        obj.insert(QString("points"), ::OpenAPI::toJsonValue(m_points));
    }
    return obj;
}

QString OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries::getIntervalDuration() const {
    return m_interval_duration;
}
void OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries::setIntervalDuration(const QString &interval_duration) {
    m_interval_duration = interval_duration;
    m_interval_duration_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries::is_interval_duration_Set() const{
    return m_interval_duration_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries::is_interval_duration_Valid() const{
    return m_interval_duration_isValid;
}

QList<OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval> OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries::getPoints() const {
    return m_points;
}
void OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries::setPoints(const QList<OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval> &points) {
    m_points = points;
    m_points_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries::is_points_Set() const{
    return m_points_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries::is_points_Valid() const{
    return m_points_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_interval_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_points.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
