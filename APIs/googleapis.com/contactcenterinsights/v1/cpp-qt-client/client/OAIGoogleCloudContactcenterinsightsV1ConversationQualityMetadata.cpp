/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::~OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata() {}

void OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::initializeModel() {

    m_agent_info_isSet = false;
    m_agent_info_isValid = false;

    m_customer_satisfaction_rating_isSet = false;
    m_customer_satisfaction_rating_isValid = false;

    m_menu_path_isSet = false;
    m_menu_path_isValid = false;

    m_wait_duration_isSet = false;
    m_wait_duration_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::fromJsonObject(QJsonObject json) {

    m_agent_info_isValid = ::OpenAPI::fromJsonValue(m_agent_info, json[QString("agentInfo")]);
    m_agent_info_isSet = !json[QString("agentInfo")].isNull() && m_agent_info_isValid;

    m_customer_satisfaction_rating_isValid = ::OpenAPI::fromJsonValue(m_customer_satisfaction_rating, json[QString("customerSatisfactionRating")]);
    m_customer_satisfaction_rating_isSet = !json[QString("customerSatisfactionRating")].isNull() && m_customer_satisfaction_rating_isValid;

    m_menu_path_isValid = ::OpenAPI::fromJsonValue(m_menu_path, json[QString("menuPath")]);
    m_menu_path_isSet = !json[QString("menuPath")].isNull() && m_menu_path_isValid;

    m_wait_duration_isValid = ::OpenAPI::fromJsonValue(m_wait_duration, json[QString("waitDuration")]);
    m_wait_duration_isSet = !json[QString("waitDuration")].isNull() && m_wait_duration_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_agent_info.size() > 0) {
        obj.insert(QString("agentInfo"), ::OpenAPI::toJsonValue(m_agent_info));
    }
    if (m_customer_satisfaction_rating_isSet) {
        obj.insert(QString("customerSatisfactionRating"), ::OpenAPI::toJsonValue(m_customer_satisfaction_rating));
    }
    if (m_menu_path_isSet) {
        obj.insert(QString("menuPath"), ::OpenAPI::toJsonValue(m_menu_path));
    }
    if (m_wait_duration_isSet) {
        obj.insert(QString("waitDuration"), ::OpenAPI::toJsonValue(m_wait_duration));
    }
    return obj;
}

QList<OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo> OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::getAgentInfo() const {
    return m_agent_info;
}
void OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::setAgentInfo(const QList<OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo> &agent_info) {
    m_agent_info = agent_info;
    m_agent_info_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::is_agent_info_Set() const{
    return m_agent_info_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::is_agent_info_Valid() const{
    return m_agent_info_isValid;
}

qint32 OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::getCustomerSatisfactionRating() const {
    return m_customer_satisfaction_rating;
}
void OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::setCustomerSatisfactionRating(const qint32 &customer_satisfaction_rating) {
    m_customer_satisfaction_rating = customer_satisfaction_rating;
    m_customer_satisfaction_rating_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::is_customer_satisfaction_rating_Set() const{
    return m_customer_satisfaction_rating_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::is_customer_satisfaction_rating_Valid() const{
    return m_customer_satisfaction_rating_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::getMenuPath() const {
    return m_menu_path;
}
void OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::setMenuPath(const QString &menu_path) {
    m_menu_path = menu_path;
    m_menu_path_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::is_menu_path_Set() const{
    return m_menu_path_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::is_menu_path_Valid() const{
    return m_menu_path_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::getWaitDuration() const {
    return m_wait_duration;
}
void OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::setWaitDuration(const QString &wait_duration) {
    m_wait_duration = wait_duration;
    m_wait_duration_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::is_wait_duration_Set() const{
    return m_wait_duration_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::is_wait_duration_Valid() const{
    return m_wait_duration_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_agent_info.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_satisfaction_rating_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_menu_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_wait_duration_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
