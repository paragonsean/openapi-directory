/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::~OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata() {}

void OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::initializeModel() {

    m_annotations_isSet = false;
    m_annotations_isValid = false;

    m_entities_isSet = false;
    m_entities_isValid = false;

    m_intents_isSet = false;
    m_intents_isValid = false;

    m_issue_model_result_isSet = false;
    m_issue_model_result_isValid = false;

    m_phrase_matchers_isSet = false;
    m_phrase_matchers_isValid = false;

    m_sentiments_isSet = false;
    m_sentiments_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::fromJsonObject(QJsonObject json) {

    m_annotations_isValid = ::OpenAPI::fromJsonValue(m_annotations, json[QString("annotations")]);
    m_annotations_isSet = !json[QString("annotations")].isNull() && m_annotations_isValid;

    m_entities_isValid = ::OpenAPI::fromJsonValue(m_entities, json[QString("entities")]);
    m_entities_isSet = !json[QString("entities")].isNull() && m_entities_isValid;

    m_intents_isValid = ::OpenAPI::fromJsonValue(m_intents, json[QString("intents")]);
    m_intents_isSet = !json[QString("intents")].isNull() && m_intents_isValid;

    m_issue_model_result_isValid = ::OpenAPI::fromJsonValue(m_issue_model_result, json[QString("issueModelResult")]);
    m_issue_model_result_isSet = !json[QString("issueModelResult")].isNull() && m_issue_model_result_isValid;

    m_phrase_matchers_isValid = ::OpenAPI::fromJsonValue(m_phrase_matchers, json[QString("phraseMatchers")]);
    m_phrase_matchers_isSet = !json[QString("phraseMatchers")].isNull() && m_phrase_matchers_isValid;

    m_sentiments_isValid = ::OpenAPI::fromJsonValue(m_sentiments, json[QString("sentiments")]);
    m_sentiments_isSet = !json[QString("sentiments")].isNull() && m_sentiments_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_annotations.size() > 0) {
        obj.insert(QString("annotations"), ::OpenAPI::toJsonValue(m_annotations));
    }
    if (m_entities.size() > 0) {
        obj.insert(QString("entities"), ::OpenAPI::toJsonValue(m_entities));
    }
    if (m_intents.size() > 0) {
        obj.insert(QString("intents"), ::OpenAPI::toJsonValue(m_intents));
    }
    if (m_issue_model_result.isSet()) {
        obj.insert(QString("issueModelResult"), ::OpenAPI::toJsonValue(m_issue_model_result));
    }
    if (m_phrase_matchers.size() > 0) {
        obj.insert(QString("phraseMatchers"), ::OpenAPI::toJsonValue(m_phrase_matchers));
    }
    if (m_sentiments.size() > 0) {
        obj.insert(QString("sentiments"), ::OpenAPI::toJsonValue(m_sentiments));
    }
    return obj;
}

QList<OAIGoogleCloudContactcenterinsightsV1CallAnnotation> OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::getAnnotations() const {
    return m_annotations;
}
void OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::setAnnotations(const QList<OAIGoogleCloudContactcenterinsightsV1CallAnnotation> &annotations) {
    m_annotations = annotations;
    m_annotations_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::is_annotations_Set() const{
    return m_annotations_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::is_annotations_Valid() const{
    return m_annotations_isValid;
}

QMap<QString, OAIGoogleCloudContactcenterinsightsV1Entity> OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::getEntities() const {
    return m_entities;
}
void OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::setEntities(const QMap<QString, OAIGoogleCloudContactcenterinsightsV1Entity> &entities) {
    m_entities = entities;
    m_entities_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::is_entities_Set() const{
    return m_entities_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::is_entities_Valid() const{
    return m_entities_isValid;
}

QMap<QString, OAIGoogleCloudContactcenterinsightsV1Intent> OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::getIntents() const {
    return m_intents;
}
void OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::setIntents(const QMap<QString, OAIGoogleCloudContactcenterinsightsV1Intent> &intents) {
    m_intents = intents;
    m_intents_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::is_intents_Set() const{
    return m_intents_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::is_intents_Valid() const{
    return m_intents_isValid;
}

OAIGoogleCloudContactcenterinsightsV1IssueModelResult OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::getIssueModelResult() const {
    return m_issue_model_result;
}
void OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::setIssueModelResult(const OAIGoogleCloudContactcenterinsightsV1IssueModelResult &issue_model_result) {
    m_issue_model_result = issue_model_result;
    m_issue_model_result_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::is_issue_model_result_Set() const{
    return m_issue_model_result_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::is_issue_model_result_Valid() const{
    return m_issue_model_result_isValid;
}

QMap<QString, OAIGoogleCloudContactcenterinsightsV1PhraseMatchData> OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::getPhraseMatchers() const {
    return m_phrase_matchers;
}
void OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::setPhraseMatchers(const QMap<QString, OAIGoogleCloudContactcenterinsightsV1PhraseMatchData> &phrase_matchers) {
    m_phrase_matchers = phrase_matchers;
    m_phrase_matchers_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::is_phrase_matchers_Set() const{
    return m_phrase_matchers_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::is_phrase_matchers_Valid() const{
    return m_phrase_matchers_isValid;
}

QList<OAIGoogleCloudContactcenterinsightsV1ConversationLevelSentiment> OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::getSentiments() const {
    return m_sentiments;
}
void OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::setSentiments(const QList<OAIGoogleCloudContactcenterinsightsV1ConversationLevelSentiment> &sentiments) {
    m_sentiments = sentiments;
    m_sentiments_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::is_sentiments_Set() const{
    return m_sentiments_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::is_sentiments_Valid() const{
    return m_sentiments_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_annotations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_entities.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_intents.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_issue_model_result.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_phrase_matchers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sentiments.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
