/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1ConversationLevelSentiment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1ConversationLevelSentiment::OAIGoogleCloudContactcenterinsightsV1ConversationLevelSentiment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1ConversationLevelSentiment::OAIGoogleCloudContactcenterinsightsV1ConversationLevelSentiment() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1ConversationLevelSentiment::~OAIGoogleCloudContactcenterinsightsV1ConversationLevelSentiment() {}

void OAIGoogleCloudContactcenterinsightsV1ConversationLevelSentiment::initializeModel() {

    m_channel_tag_isSet = false;
    m_channel_tag_isValid = false;

    m_sentiment_data_isSet = false;
    m_sentiment_data_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1ConversationLevelSentiment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1ConversationLevelSentiment::fromJsonObject(QJsonObject json) {

    m_channel_tag_isValid = ::OpenAPI::fromJsonValue(m_channel_tag, json[QString("channelTag")]);
    m_channel_tag_isSet = !json[QString("channelTag")].isNull() && m_channel_tag_isValid;

    m_sentiment_data_isValid = ::OpenAPI::fromJsonValue(m_sentiment_data, json[QString("sentimentData")]);
    m_sentiment_data_isSet = !json[QString("sentimentData")].isNull() && m_sentiment_data_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1ConversationLevelSentiment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1ConversationLevelSentiment::asJsonObject() const {
    QJsonObject obj;
    if (m_channel_tag_isSet) {
        obj.insert(QString("channelTag"), ::OpenAPI::toJsonValue(m_channel_tag));
    }
    if (m_sentiment_data.isSet()) {
        obj.insert(QString("sentimentData"), ::OpenAPI::toJsonValue(m_sentiment_data));
    }
    return obj;
}

qint32 OAIGoogleCloudContactcenterinsightsV1ConversationLevelSentiment::getChannelTag() const {
    return m_channel_tag;
}
void OAIGoogleCloudContactcenterinsightsV1ConversationLevelSentiment::setChannelTag(const qint32 &channel_tag) {
    m_channel_tag = channel_tag;
    m_channel_tag_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationLevelSentiment::is_channel_tag_Set() const{
    return m_channel_tag_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationLevelSentiment::is_channel_tag_Valid() const{
    return m_channel_tag_isValid;
}

OAIGoogleCloudContactcenterinsightsV1SentimentData OAIGoogleCloudContactcenterinsightsV1ConversationLevelSentiment::getSentimentData() const {
    return m_sentiment_data;
}
void OAIGoogleCloudContactcenterinsightsV1ConversationLevelSentiment::setSentimentData(const OAIGoogleCloudContactcenterinsightsV1SentimentData &sentiment_data) {
    m_sentiment_data = sentiment_data;
    m_sentiment_data_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationLevelSentiment::is_sentiment_data_Set() const{
    return m_sentiment_data_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationLevelSentiment::is_sentiment_data_Valid() const{
    return m_sentiment_data_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationLevelSentiment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_channel_tag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sentiment_data.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationLevelSentiment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
