/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats.h
 *
 * Aggregated statistics about an issue model.
 */

#ifndef OAIGoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats_H
#define OAIGoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats_H

#include <QJsonObject>

#include "OAIGoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats;

class OAIGoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats : public OAIObject {
public:
    OAIGoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats();
    OAIGoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats(QString json);
    ~OAIGoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAnalyzedConversationsCount() const;
    void setAnalyzedConversationsCount(const QString &analyzed_conversations_count);
    bool is_analyzed_conversations_count_Set() const;
    bool is_analyzed_conversations_count_Valid() const;

    QMap<QString, OAIGoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats> getIssueStats() const;
    void setIssueStats(const QMap<QString, OAIGoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats> &issue_stats);
    bool is_issue_stats_Set() const;
    bool is_issue_stats_Valid() const;

    QString getUnclassifiedConversationsCount() const;
    void setUnclassifiedConversationsCount(const QString &unclassified_conversations_count);
    bool is_unclassified_conversations_count_Set() const;
    bool is_unclassified_conversations_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_analyzed_conversations_count;
    bool m_analyzed_conversations_count_isSet;
    bool m_analyzed_conversations_count_isValid;

    QMap<QString, OAIGoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats> m_issue_stats;
    bool m_issue_stats_isSet;
    bool m_issue_stats_isValid;

    QString m_unclassified_conversations_count;
    bool m_unclassified_conversations_count_isSet;
    bool m_unclassified_conversations_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats)

#endif // OAIGoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats_H
