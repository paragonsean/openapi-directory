/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1PhraseMatcher.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::OAIGoogleCloudContactcenterinsightsV1PhraseMatcher(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::OAIGoogleCloudContactcenterinsightsV1PhraseMatcher() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::~OAIGoogleCloudContactcenterinsightsV1PhraseMatcher() {}

void OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::initializeModel() {

    m_activation_update_time_isSet = false;
    m_activation_update_time_isValid = false;

    m_active_isSet = false;
    m_active_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_phrase_match_rule_groups_isSet = false;
    m_phrase_match_rule_groups_isValid = false;

    m_revision_create_time_isSet = false;
    m_revision_create_time_isValid = false;

    m_revision_id_isSet = false;
    m_revision_id_isValid = false;

    m_role_match_isSet = false;
    m_role_match_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;

    m_version_tag_isSet = false;
    m_version_tag_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::fromJsonObject(QJsonObject json) {

    m_activation_update_time_isValid = ::OpenAPI::fromJsonValue(m_activation_update_time, json[QString("activationUpdateTime")]);
    m_activation_update_time_isSet = !json[QString("activationUpdateTime")].isNull() && m_activation_update_time_isValid;

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("active")]);
    m_active_isSet = !json[QString("active")].isNull() && m_active_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_phrase_match_rule_groups_isValid = ::OpenAPI::fromJsonValue(m_phrase_match_rule_groups, json[QString("phraseMatchRuleGroups")]);
    m_phrase_match_rule_groups_isSet = !json[QString("phraseMatchRuleGroups")].isNull() && m_phrase_match_rule_groups_isValid;

    m_revision_create_time_isValid = ::OpenAPI::fromJsonValue(m_revision_create_time, json[QString("revisionCreateTime")]);
    m_revision_create_time_isSet = !json[QString("revisionCreateTime")].isNull() && m_revision_create_time_isValid;

    m_revision_id_isValid = ::OpenAPI::fromJsonValue(m_revision_id, json[QString("revisionId")]);
    m_revision_id_isSet = !json[QString("revisionId")].isNull() && m_revision_id_isValid;

    m_role_match_isValid = ::OpenAPI::fromJsonValue(m_role_match, json[QString("roleMatch")]);
    m_role_match_isSet = !json[QString("roleMatch")].isNull() && m_role_match_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;

    m_version_tag_isValid = ::OpenAPI::fromJsonValue(m_version_tag, json[QString("versionTag")]);
    m_version_tag_isSet = !json[QString("versionTag")].isNull() && m_version_tag_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::asJsonObject() const {
    QJsonObject obj;
    if (m_activation_update_time_isSet) {
        obj.insert(QString("activationUpdateTime"), ::OpenAPI::toJsonValue(m_activation_update_time));
    }
    if (m_active_isSet) {
        obj.insert(QString("active"), ::OpenAPI::toJsonValue(m_active));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_phrase_match_rule_groups.size() > 0) {
        obj.insert(QString("phraseMatchRuleGroups"), ::OpenAPI::toJsonValue(m_phrase_match_rule_groups));
    }
    if (m_revision_create_time_isSet) {
        obj.insert(QString("revisionCreateTime"), ::OpenAPI::toJsonValue(m_revision_create_time));
    }
    if (m_revision_id_isSet) {
        obj.insert(QString("revisionId"), ::OpenAPI::toJsonValue(m_revision_id));
    }
    if (m_role_match_isSet) {
        obj.insert(QString("roleMatch"), ::OpenAPI::toJsonValue(m_role_match));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    if (m_version_tag_isSet) {
        obj.insert(QString("versionTag"), ::OpenAPI::toJsonValue(m_version_tag));
    }
    return obj;
}

QString OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::getActivationUpdateTime() const {
    return m_activation_update_time;
}
void OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::setActivationUpdateTime(const QString &activation_update_time) {
    m_activation_update_time = activation_update_time;
    m_activation_update_time_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::is_activation_update_time_Set() const{
    return m_activation_update_time_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::is_activation_update_time_Valid() const{
    return m_activation_update_time_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::isActive() const {
    return m_active;
}
void OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::setActive(const bool &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::is_active_Set() const{
    return m_active_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::is_active_Valid() const{
    return m_active_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::getName() const {
    return m_name;
}
void OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIGoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup> OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::getPhraseMatchRuleGroups() const {
    return m_phrase_match_rule_groups;
}
void OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::setPhraseMatchRuleGroups(const QList<OAIGoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup> &phrase_match_rule_groups) {
    m_phrase_match_rule_groups = phrase_match_rule_groups;
    m_phrase_match_rule_groups_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::is_phrase_match_rule_groups_Set() const{
    return m_phrase_match_rule_groups_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::is_phrase_match_rule_groups_Valid() const{
    return m_phrase_match_rule_groups_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::getRevisionCreateTime() const {
    return m_revision_create_time;
}
void OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::setRevisionCreateTime(const QString &revision_create_time) {
    m_revision_create_time = revision_create_time;
    m_revision_create_time_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::is_revision_create_time_Set() const{
    return m_revision_create_time_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::is_revision_create_time_Valid() const{
    return m_revision_create_time_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::getRevisionId() const {
    return m_revision_id;
}
void OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::setRevisionId(const QString &revision_id) {
    m_revision_id = revision_id;
    m_revision_id_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::is_revision_id_Set() const{
    return m_revision_id_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::is_revision_id_Valid() const{
    return m_revision_id_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::getRoleMatch() const {
    return m_role_match;
}
void OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::setRoleMatch(const QString &role_match) {
    m_role_match = role_match;
    m_role_match_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::is_role_match_Set() const{
    return m_role_match_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::is_role_match_Valid() const{
    return m_role_match_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::getType() const {
    return m_type;
}
void OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::is_update_time_Valid() const{
    return m_update_time_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::getVersionTag() const {
    return m_version_tag;
}
void OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::setVersionTag(const QString &version_tag) {
    m_version_tag = version_tag;
    m_version_tag_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::is_version_tag_Set() const{
    return m_version_tag_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::is_version_tag_Valid() const{
    return m_version_tag_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activation_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phrase_match_rule_groups.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_revision_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_revision_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_match_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_tag_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1PhraseMatcher::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
