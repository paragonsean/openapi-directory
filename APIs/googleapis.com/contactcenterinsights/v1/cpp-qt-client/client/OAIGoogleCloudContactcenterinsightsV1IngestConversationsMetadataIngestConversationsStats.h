/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats.h
 *
 * Statistics for IngestConversations operation.
 */

#ifndef OAIGoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats_H
#define OAIGoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats : public OAIObject {
public:
    OAIGoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats();
    OAIGoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats(QString json);
    ~OAIGoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDuplicatesSkippedCount() const;
    void setDuplicatesSkippedCount(const qint32 &duplicates_skipped_count);
    bool is_duplicates_skipped_count_Set() const;
    bool is_duplicates_skipped_count_Valid() const;

    qint32 getFailedIngestCount() const;
    void setFailedIngestCount(const qint32 &failed_ingest_count);
    bool is_failed_ingest_count_Set() const;
    bool is_failed_ingest_count_Valid() const;

    qint32 getProcessedObjectCount() const;
    void setProcessedObjectCount(const qint32 &processed_object_count);
    bool is_processed_object_count_Set() const;
    bool is_processed_object_count_Valid() const;

    qint32 getSuccessfulIngestCount() const;
    void setSuccessfulIngestCount(const qint32 &successful_ingest_count);
    bool is_successful_ingest_count_Set() const;
    bool is_successful_ingest_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_duplicates_skipped_count;
    bool m_duplicates_skipped_count_isSet;
    bool m_duplicates_skipped_count_isValid;

    qint32 m_failed_ingest_count;
    bool m_failed_ingest_count_isSet;
    bool m_failed_ingest_count_isValid;

    qint32 m_processed_object_count;
    bool m_processed_object_count_isSet;
    bool m_processed_object_count_isValid;

    qint32 m_successful_ingest_count;
    bool m_successful_ingest_count_isSet;
    bool m_successful_ingest_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats)

#endif // OAIGoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats_H
