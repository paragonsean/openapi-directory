/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::~OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant() {}

void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::initializeModel() {

    m_dialogflow_participant_isSet = false;
    m_dialogflow_participant_isValid = false;

    m_dialogflow_participant_name_isSet = false;
    m_dialogflow_participant_name_isValid = false;

    m_obfuscated_external_user_id_isSet = false;
    m_obfuscated_external_user_id_isValid = false;

    m_role_isSet = false;
    m_role_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::fromJsonObject(QJsonObject json) {

    m_dialogflow_participant_isValid = ::OpenAPI::fromJsonValue(m_dialogflow_participant, json[QString("dialogflowParticipant")]);
    m_dialogflow_participant_isSet = !json[QString("dialogflowParticipant")].isNull() && m_dialogflow_participant_isValid;

    m_dialogflow_participant_name_isValid = ::OpenAPI::fromJsonValue(m_dialogflow_participant_name, json[QString("dialogflowParticipantName")]);
    m_dialogflow_participant_name_isSet = !json[QString("dialogflowParticipantName")].isNull() && m_dialogflow_participant_name_isValid;

    m_obfuscated_external_user_id_isValid = ::OpenAPI::fromJsonValue(m_obfuscated_external_user_id, json[QString("obfuscatedExternalUserId")]);
    m_obfuscated_external_user_id_isSet = !json[QString("obfuscatedExternalUserId")].isNull() && m_obfuscated_external_user_id_isValid;

    m_role_isValid = ::OpenAPI::fromJsonValue(m_role, json[QString("role")]);
    m_role_isSet = !json[QString("role")].isNull() && m_role_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("userId")]);
    m_user_id_isSet = !json[QString("userId")].isNull() && m_user_id_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::asJsonObject() const {
    QJsonObject obj;
    if (m_dialogflow_participant_isSet) {
        obj.insert(QString("dialogflowParticipant"), ::OpenAPI::toJsonValue(m_dialogflow_participant));
    }
    if (m_dialogflow_participant_name_isSet) {
        obj.insert(QString("dialogflowParticipantName"), ::OpenAPI::toJsonValue(m_dialogflow_participant_name));
    }
    if (m_obfuscated_external_user_id_isSet) {
        obj.insert(QString("obfuscatedExternalUserId"), ::OpenAPI::toJsonValue(m_obfuscated_external_user_id));
    }
    if (m_role_isSet) {
        obj.insert(QString("role"), ::OpenAPI::toJsonValue(m_role));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("userId"), ::OpenAPI::toJsonValue(m_user_id));
    }
    return obj;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::getDialogflowParticipant() const {
    return m_dialogflow_participant;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::setDialogflowParticipant(const QString &dialogflow_participant) {
    m_dialogflow_participant = dialogflow_participant;
    m_dialogflow_participant_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::is_dialogflow_participant_Set() const{
    return m_dialogflow_participant_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::is_dialogflow_participant_Valid() const{
    return m_dialogflow_participant_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::getDialogflowParticipantName() const {
    return m_dialogflow_participant_name;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::setDialogflowParticipantName(const QString &dialogflow_participant_name) {
    m_dialogflow_participant_name = dialogflow_participant_name;
    m_dialogflow_participant_name_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::is_dialogflow_participant_name_Set() const{
    return m_dialogflow_participant_name_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::is_dialogflow_participant_name_Valid() const{
    return m_dialogflow_participant_name_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::getObfuscatedExternalUserId() const {
    return m_obfuscated_external_user_id;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::setObfuscatedExternalUserId(const QString &obfuscated_external_user_id) {
    m_obfuscated_external_user_id = obfuscated_external_user_id;
    m_obfuscated_external_user_id_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::is_obfuscated_external_user_id_Set() const{
    return m_obfuscated_external_user_id_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::is_obfuscated_external_user_id_Valid() const{
    return m_obfuscated_external_user_id_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::getRole() const {
    return m_role;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::setRole(const QString &role) {
    m_role = role;
    m_role_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::is_role_Set() const{
    return m_role_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::is_role_Valid() const{
    return m_role_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::getUserId() const {
    return m_user_id;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::setUserId(const QString &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::is_user_id_Valid() const{
    return m_user_id_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dialogflow_participant_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dialogflow_participant_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_obfuscated_external_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
