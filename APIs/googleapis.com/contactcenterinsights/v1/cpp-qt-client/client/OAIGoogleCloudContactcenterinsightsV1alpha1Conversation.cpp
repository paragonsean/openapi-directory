/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1alpha1Conversation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::OAIGoogleCloudContactcenterinsightsV1alpha1Conversation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::OAIGoogleCloudContactcenterinsightsV1alpha1Conversation() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::~OAIGoogleCloudContactcenterinsightsV1alpha1Conversation() {}

void OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::initializeModel() {

    m_agent_id_isSet = false;
    m_agent_id_isValid = false;

    m_call_metadata_isSet = false;
    m_call_metadata_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_data_source_isSet = false;
    m_data_source_isValid = false;

    m_dialogflow_intents_isSet = false;
    m_dialogflow_intents_isValid = false;

    m_duration_isSet = false;
    m_duration_isValid = false;

    m_expire_time_isSet = false;
    m_expire_time_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_language_code_isSet = false;
    m_language_code_isValid = false;

    m_latest_analysis_isSet = false;
    m_latest_analysis_isValid = false;

    m_latest_summary_isSet = false;
    m_latest_summary_isValid = false;

    m_medium_isSet = false;
    m_medium_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_obfuscated_user_id_isSet = false;
    m_obfuscated_user_id_isValid = false;

    m_quality_metadata_isSet = false;
    m_quality_metadata_isValid = false;

    m_runtime_annotations_isSet = false;
    m_runtime_annotations_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_transcript_isSet = false;
    m_transcript_isValid = false;

    m_ttl_isSet = false;
    m_ttl_isValid = false;

    m_turn_count_isSet = false;
    m_turn_count_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::fromJsonObject(QJsonObject json) {

    m_agent_id_isValid = ::OpenAPI::fromJsonValue(m_agent_id, json[QString("agentId")]);
    m_agent_id_isSet = !json[QString("agentId")].isNull() && m_agent_id_isValid;

    m_call_metadata_isValid = ::OpenAPI::fromJsonValue(m_call_metadata, json[QString("callMetadata")]);
    m_call_metadata_isSet = !json[QString("callMetadata")].isNull() && m_call_metadata_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_data_source_isValid = ::OpenAPI::fromJsonValue(m_data_source, json[QString("dataSource")]);
    m_data_source_isSet = !json[QString("dataSource")].isNull() && m_data_source_isValid;

    m_dialogflow_intents_isValid = ::OpenAPI::fromJsonValue(m_dialogflow_intents, json[QString("dialogflowIntents")]);
    m_dialogflow_intents_isSet = !json[QString("dialogflowIntents")].isNull() && m_dialogflow_intents_isValid;

    m_duration_isValid = ::OpenAPI::fromJsonValue(m_duration, json[QString("duration")]);
    m_duration_isSet = !json[QString("duration")].isNull() && m_duration_isValid;

    m_expire_time_isValid = ::OpenAPI::fromJsonValue(m_expire_time, json[QString("expireTime")]);
    m_expire_time_isSet = !json[QString("expireTime")].isNull() && m_expire_time_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_language_code_isValid = ::OpenAPI::fromJsonValue(m_language_code, json[QString("languageCode")]);
    m_language_code_isSet = !json[QString("languageCode")].isNull() && m_language_code_isValid;

    m_latest_analysis_isValid = ::OpenAPI::fromJsonValue(m_latest_analysis, json[QString("latestAnalysis")]);
    m_latest_analysis_isSet = !json[QString("latestAnalysis")].isNull() && m_latest_analysis_isValid;

    m_latest_summary_isValid = ::OpenAPI::fromJsonValue(m_latest_summary, json[QString("latestSummary")]);
    m_latest_summary_isSet = !json[QString("latestSummary")].isNull() && m_latest_summary_isValid;

    m_medium_isValid = ::OpenAPI::fromJsonValue(m_medium, json[QString("medium")]);
    m_medium_isSet = !json[QString("medium")].isNull() && m_medium_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_obfuscated_user_id_isValid = ::OpenAPI::fromJsonValue(m_obfuscated_user_id, json[QString("obfuscatedUserId")]);
    m_obfuscated_user_id_isSet = !json[QString("obfuscatedUserId")].isNull() && m_obfuscated_user_id_isValid;

    m_quality_metadata_isValid = ::OpenAPI::fromJsonValue(m_quality_metadata, json[QString("qualityMetadata")]);
    m_quality_metadata_isSet = !json[QString("qualityMetadata")].isNull() && m_quality_metadata_isValid;

    m_runtime_annotations_isValid = ::OpenAPI::fromJsonValue(m_runtime_annotations, json[QString("runtimeAnnotations")]);
    m_runtime_annotations_isSet = !json[QString("runtimeAnnotations")].isNull() && m_runtime_annotations_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_transcript_isValid = ::OpenAPI::fromJsonValue(m_transcript, json[QString("transcript")]);
    m_transcript_isSet = !json[QString("transcript")].isNull() && m_transcript_isValid;

    m_ttl_isValid = ::OpenAPI::fromJsonValue(m_ttl, json[QString("ttl")]);
    m_ttl_isSet = !json[QString("ttl")].isNull() && m_ttl_isValid;

    m_turn_count_isValid = ::OpenAPI::fromJsonValue(m_turn_count, json[QString("turnCount")]);
    m_turn_count_isSet = !json[QString("turnCount")].isNull() && m_turn_count_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::asJsonObject() const {
    QJsonObject obj;
    if (m_agent_id_isSet) {
        obj.insert(QString("agentId"), ::OpenAPI::toJsonValue(m_agent_id));
    }
    if (m_call_metadata.isSet()) {
        obj.insert(QString("callMetadata"), ::OpenAPI::toJsonValue(m_call_metadata));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_data_source.isSet()) {
        obj.insert(QString("dataSource"), ::OpenAPI::toJsonValue(m_data_source));
    }
    if (m_dialogflow_intents.size() > 0) {
        obj.insert(QString("dialogflowIntents"), ::OpenAPI::toJsonValue(m_dialogflow_intents));
    }
    if (m_duration_isSet) {
        obj.insert(QString("duration"), ::OpenAPI::toJsonValue(m_duration));
    }
    if (m_expire_time_isSet) {
        obj.insert(QString("expireTime"), ::OpenAPI::toJsonValue(m_expire_time));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_language_code_isSet) {
        obj.insert(QString("languageCode"), ::OpenAPI::toJsonValue(m_language_code));
    }
    if (m_latest_analysis.isSet()) {
        obj.insert(QString("latestAnalysis"), ::OpenAPI::toJsonValue(m_latest_analysis));
    }
    if (m_latest_summary.isSet()) {
        obj.insert(QString("latestSummary"), ::OpenAPI::toJsonValue(m_latest_summary));
    }
    if (m_medium_isSet) {
        obj.insert(QString("medium"), ::OpenAPI::toJsonValue(m_medium));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_obfuscated_user_id_isSet) {
        obj.insert(QString("obfuscatedUserId"), ::OpenAPI::toJsonValue(m_obfuscated_user_id));
    }
    if (m_quality_metadata.isSet()) {
        obj.insert(QString("qualityMetadata"), ::OpenAPI::toJsonValue(m_quality_metadata));
    }
    if (m_runtime_annotations.size() > 0) {
        obj.insert(QString("runtimeAnnotations"), ::OpenAPI::toJsonValue(m_runtime_annotations));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_transcript.isSet()) {
        obj.insert(QString("transcript"), ::OpenAPI::toJsonValue(m_transcript));
    }
    if (m_ttl_isSet) {
        obj.insert(QString("ttl"), ::OpenAPI::toJsonValue(m_ttl));
    }
    if (m_turn_count_isSet) {
        obj.insert(QString("turnCount"), ::OpenAPI::toJsonValue(m_turn_count));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::getAgentId() const {
    return m_agent_id;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::setAgentId(const QString &agent_id) {
    m_agent_id = agent_id;
    m_agent_id_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_agent_id_Set() const{
    return m_agent_id_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_agent_id_Valid() const{
    return m_agent_id_isValid;
}

OAIGoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::getCallMetadata() const {
    return m_call_metadata;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::setCallMetadata(const OAIGoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata &call_metadata) {
    m_call_metadata = call_metadata;
    m_call_metadata_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_call_metadata_Set() const{
    return m_call_metadata_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_call_metadata_Valid() const{
    return m_call_metadata_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_create_time_Valid() const{
    return m_create_time_isValid;
}

OAIGoogleCloudContactcenterinsightsV1alpha1ConversationDataSource OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::getDataSource() const {
    return m_data_source;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::setDataSource(const OAIGoogleCloudContactcenterinsightsV1alpha1ConversationDataSource &data_source) {
    m_data_source = data_source;
    m_data_source_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_data_source_Set() const{
    return m_data_source_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_data_source_Valid() const{
    return m_data_source_isValid;
}

QMap<QString, OAIGoogleCloudContactcenterinsightsV1alpha1DialogflowIntent> OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::getDialogflowIntents() const {
    return m_dialogflow_intents;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::setDialogflowIntents(const QMap<QString, OAIGoogleCloudContactcenterinsightsV1alpha1DialogflowIntent> &dialogflow_intents) {
    m_dialogflow_intents = dialogflow_intents;
    m_dialogflow_intents_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_dialogflow_intents_Set() const{
    return m_dialogflow_intents_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_dialogflow_intents_Valid() const{
    return m_dialogflow_intents_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::getDuration() const {
    return m_duration;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::setDuration(const QString &duration) {
    m_duration = duration;
    m_duration_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_duration_Valid() const{
    return m_duration_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::getExpireTime() const {
    return m_expire_time;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::setExpireTime(const QString &expire_time) {
    m_expire_time = expire_time;
    m_expire_time_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_expire_time_Set() const{
    return m_expire_time_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_expire_time_Valid() const{
    return m_expire_time_isValid;
}

QMap<QString, QString> OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::getLabels() const {
    return m_labels;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::getLanguageCode() const {
    return m_language_code;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::setLanguageCode(const QString &language_code) {
    m_language_code = language_code;
    m_language_code_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_language_code_Set() const{
    return m_language_code_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_language_code_Valid() const{
    return m_language_code_isValid;
}

OAIGoogleCloudContactcenterinsightsV1alpha1Analysis OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::getLatestAnalysis() const {
    return m_latest_analysis;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::setLatestAnalysis(const OAIGoogleCloudContactcenterinsightsV1alpha1Analysis &latest_analysis) {
    m_latest_analysis = latest_analysis;
    m_latest_analysis_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_latest_analysis_Set() const{
    return m_latest_analysis_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_latest_analysis_Valid() const{
    return m_latest_analysis_isValid;
}

OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::getLatestSummary() const {
    return m_latest_summary;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::setLatestSummary(const OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData &latest_summary) {
    m_latest_summary = latest_summary;
    m_latest_summary_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_latest_summary_Set() const{
    return m_latest_summary_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_latest_summary_Valid() const{
    return m_latest_summary_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::getMedium() const {
    return m_medium;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::setMedium(const QString &medium) {
    m_medium = medium;
    m_medium_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_medium_Set() const{
    return m_medium_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_medium_Valid() const{
    return m_medium_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::getName() const {
    return m_name;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::getObfuscatedUserId() const {
    return m_obfuscated_user_id;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::setObfuscatedUserId(const QString &obfuscated_user_id) {
    m_obfuscated_user_id = obfuscated_user_id;
    m_obfuscated_user_id_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_obfuscated_user_id_Set() const{
    return m_obfuscated_user_id_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_obfuscated_user_id_Valid() const{
    return m_obfuscated_user_id_isValid;
}

OAIGoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::getQualityMetadata() const {
    return m_quality_metadata;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::setQualityMetadata(const OAIGoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata &quality_metadata) {
    m_quality_metadata = quality_metadata;
    m_quality_metadata_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_quality_metadata_Set() const{
    return m_quality_metadata_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_quality_metadata_Valid() const{
    return m_quality_metadata_isValid;
}

QList<OAIGoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation> OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::getRuntimeAnnotations() const {
    return m_runtime_annotations;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::setRuntimeAnnotations(const QList<OAIGoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation> &runtime_annotations) {
    m_runtime_annotations = runtime_annotations;
    m_runtime_annotations_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_runtime_annotations_Set() const{
    return m_runtime_annotations_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_runtime_annotations_Valid() const{
    return m_runtime_annotations_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::getStartTime() const {
    return m_start_time;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_start_time_Valid() const{
    return m_start_time_isValid;
}

OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscript OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::getTranscript() const {
    return m_transcript;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::setTranscript(const OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscript &transcript) {
    m_transcript = transcript;
    m_transcript_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_transcript_Set() const{
    return m_transcript_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_transcript_Valid() const{
    return m_transcript_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::getTtl() const {
    return m_ttl;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::setTtl(const QString &ttl) {
    m_ttl = ttl;
    m_ttl_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_ttl_Set() const{
    return m_ttl_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_ttl_Valid() const{
    return m_ttl_isValid;
}

qint32 OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::getTurnCount() const {
    return m_turn_count;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::setTurnCount(const qint32 &turn_count) {
    m_turn_count = turn_count;
    m_turn_count_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_turn_count_Set() const{
    return m_turn_count_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_turn_count_Valid() const{
    return m_turn_count_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_agent_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_call_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dialogflow_intents.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expire_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latest_analysis.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_latest_summary.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_medium_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_obfuscated_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quality_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_runtime_annotations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transcript.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ttl_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_turn_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Conversation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
