/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse.h
 *
 * The response for calculating conversation statistics.
 */

#ifndef OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse_H
#define OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse_H

#include <QJsonObject>

#include "OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries.h"
#include "OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries;
class OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats;

class OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse : public OAIObject {
public:
    OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse();
    OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse(QString json);
    ~OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAverageDuration() const;
    void setAverageDuration(const QString &average_duration);
    bool is_average_duration_Set() const;
    bool is_average_duration_Valid() const;

    qint32 getAverageTurnCount() const;
    void setAverageTurnCount(const qint32 &average_turn_count);
    bool is_average_turn_count_Set() const;
    bool is_average_turn_count_Valid() const;

    qint32 getConversationCount() const;
    void setConversationCount(const qint32 &conversation_count);
    bool is_conversation_count_Set() const;
    bool is_conversation_count_Valid() const;

    OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries getConversationCountTimeSeries() const;
    void setConversationCountTimeSeries(const OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries &conversation_count_time_series);
    bool is_conversation_count_time_series_Set() const;
    bool is_conversation_count_time_series_Valid() const;

    QMap<QString, qint32> getCustomHighlighterMatches() const;
    void setCustomHighlighterMatches(const QMap<QString, qint32> &custom_highlighter_matches);
    bool is_custom_highlighter_matches_Set() const;
    bool is_custom_highlighter_matches_Valid() const;

    Q_DECL_DEPRECATED QMap<QString, qint32> getIssueMatches() const;
    Q_DECL_DEPRECATED void setIssueMatches(const QMap<QString, qint32> &issue_matches);
    Q_DECL_DEPRECATED bool is_issue_matches_Set() const;
    Q_DECL_DEPRECATED bool is_issue_matches_Valid() const;

    QMap<QString, OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats> getIssueMatchesStats() const;
    void setIssueMatchesStats(const QMap<QString, OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats> &issue_matches_stats);
    bool is_issue_matches_stats_Set() const;
    bool is_issue_matches_stats_Valid() const;

    QMap<QString, qint32> getSmartHighlighterMatches() const;
    void setSmartHighlighterMatches(const QMap<QString, qint32> &smart_highlighter_matches);
    bool is_smart_highlighter_matches_Set() const;
    bool is_smart_highlighter_matches_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_average_duration;
    bool m_average_duration_isSet;
    bool m_average_duration_isValid;

    qint32 m_average_turn_count;
    bool m_average_turn_count_isSet;
    bool m_average_turn_count_isValid;

    qint32 m_conversation_count;
    bool m_conversation_count_isSet;
    bool m_conversation_count_isValid;

    OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries m_conversation_count_time_series;
    bool m_conversation_count_time_series_isSet;
    bool m_conversation_count_time_series_isValid;

    QMap<QString, qint32> m_custom_highlighter_matches;
    bool m_custom_highlighter_matches_isSet;
    bool m_custom_highlighter_matches_isValid;

    QMap<QString, qint32> m_issue_matches;
    bool m_issue_matches_isSet;
    bool m_issue_matches_isValid;

    QMap<QString, OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats> m_issue_matches_stats;
    bool m_issue_matches_stats_isSet;
    bool m_issue_matches_stats_isValid;

    QMap<QString, qint32> m_smart_highlighter_matches;
    bool m_smart_highlighter_matches_isSet;
    bool m_smart_highlighter_matches_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse)

#endif // OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse_H
