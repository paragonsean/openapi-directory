/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::~OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation() {}

void OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::initializeModel() {

    m_annotation_id_isSet = false;
    m_annotation_id_isValid = false;

    m_answer_feedback_isSet = false;
    m_answer_feedback_isValid = false;

    m_article_suggestion_isSet = false;
    m_article_suggestion_isValid = false;

    m_conversation_summarization_suggestion_isSet = false;
    m_conversation_summarization_suggestion_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_dialogflow_interaction_isSet = false;
    m_dialogflow_interaction_isValid = false;

    m_end_boundary_isSet = false;
    m_end_boundary_isValid = false;

    m_faq_answer_isSet = false;
    m_faq_answer_isValid = false;

    m_smart_compose_suggestion_isSet = false;
    m_smart_compose_suggestion_isValid = false;

    m_smart_reply_isSet = false;
    m_smart_reply_isValid = false;

    m_start_boundary_isSet = false;
    m_start_boundary_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::fromJsonObject(QJsonObject json) {

    m_annotation_id_isValid = ::OpenAPI::fromJsonValue(m_annotation_id, json[QString("annotationId")]);
    m_annotation_id_isSet = !json[QString("annotationId")].isNull() && m_annotation_id_isValid;

    m_answer_feedback_isValid = ::OpenAPI::fromJsonValue(m_answer_feedback, json[QString("answerFeedback")]);
    m_answer_feedback_isSet = !json[QString("answerFeedback")].isNull() && m_answer_feedback_isValid;

    m_article_suggestion_isValid = ::OpenAPI::fromJsonValue(m_article_suggestion, json[QString("articleSuggestion")]);
    m_article_suggestion_isSet = !json[QString("articleSuggestion")].isNull() && m_article_suggestion_isValid;

    m_conversation_summarization_suggestion_isValid = ::OpenAPI::fromJsonValue(m_conversation_summarization_suggestion, json[QString("conversationSummarizationSuggestion")]);
    m_conversation_summarization_suggestion_isSet = !json[QString("conversationSummarizationSuggestion")].isNull() && m_conversation_summarization_suggestion_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_dialogflow_interaction_isValid = ::OpenAPI::fromJsonValue(m_dialogflow_interaction, json[QString("dialogflowInteraction")]);
    m_dialogflow_interaction_isSet = !json[QString("dialogflowInteraction")].isNull() && m_dialogflow_interaction_isValid;

    m_end_boundary_isValid = ::OpenAPI::fromJsonValue(m_end_boundary, json[QString("endBoundary")]);
    m_end_boundary_isSet = !json[QString("endBoundary")].isNull() && m_end_boundary_isValid;

    m_faq_answer_isValid = ::OpenAPI::fromJsonValue(m_faq_answer, json[QString("faqAnswer")]);
    m_faq_answer_isSet = !json[QString("faqAnswer")].isNull() && m_faq_answer_isValid;

    m_smart_compose_suggestion_isValid = ::OpenAPI::fromJsonValue(m_smart_compose_suggestion, json[QString("smartComposeSuggestion")]);
    m_smart_compose_suggestion_isSet = !json[QString("smartComposeSuggestion")].isNull() && m_smart_compose_suggestion_isValid;

    m_smart_reply_isValid = ::OpenAPI::fromJsonValue(m_smart_reply, json[QString("smartReply")]);
    m_smart_reply_isSet = !json[QString("smartReply")].isNull() && m_smart_reply_isValid;

    m_start_boundary_isValid = ::OpenAPI::fromJsonValue(m_start_boundary, json[QString("startBoundary")]);
    m_start_boundary_isSet = !json[QString("startBoundary")].isNull() && m_start_boundary_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::asJsonObject() const {
    QJsonObject obj;
    if (m_annotation_id_isSet) {
        obj.insert(QString("annotationId"), ::OpenAPI::toJsonValue(m_annotation_id));
    }
    if (m_answer_feedback.isSet()) {
        obj.insert(QString("answerFeedback"), ::OpenAPI::toJsonValue(m_answer_feedback));
    }
    if (m_article_suggestion.isSet()) {
        obj.insert(QString("articleSuggestion"), ::OpenAPI::toJsonValue(m_article_suggestion));
    }
    if (m_conversation_summarization_suggestion.isSet()) {
        obj.insert(QString("conversationSummarizationSuggestion"), ::OpenAPI::toJsonValue(m_conversation_summarization_suggestion));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_dialogflow_interaction.isSet()) {
        obj.insert(QString("dialogflowInteraction"), ::OpenAPI::toJsonValue(m_dialogflow_interaction));
    }
    if (m_end_boundary.isSet()) {
        obj.insert(QString("endBoundary"), ::OpenAPI::toJsonValue(m_end_boundary));
    }
    if (m_faq_answer.isSet()) {
        obj.insert(QString("faqAnswer"), ::OpenAPI::toJsonValue(m_faq_answer));
    }
    if (m_smart_compose_suggestion.isSet()) {
        obj.insert(QString("smartComposeSuggestion"), ::OpenAPI::toJsonValue(m_smart_compose_suggestion));
    }
    if (m_smart_reply.isSet()) {
        obj.insert(QString("smartReply"), ::OpenAPI::toJsonValue(m_smart_reply));
    }
    if (m_start_boundary.isSet()) {
        obj.insert(QString("startBoundary"), ::OpenAPI::toJsonValue(m_start_boundary));
    }
    return obj;
}

QString OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::getAnnotationId() const {
    return m_annotation_id;
}
void OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::setAnnotationId(const QString &annotation_id) {
    m_annotation_id = annotation_id;
    m_annotation_id_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::is_annotation_id_Set() const{
    return m_annotation_id_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::is_annotation_id_Valid() const{
    return m_annotation_id_isValid;
}

OAIGoogleCloudContactcenterinsightsV1AnswerFeedback OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::getAnswerFeedback() const {
    return m_answer_feedback;
}
void OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::setAnswerFeedback(const OAIGoogleCloudContactcenterinsightsV1AnswerFeedback &answer_feedback) {
    m_answer_feedback = answer_feedback;
    m_answer_feedback_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::is_answer_feedback_Set() const{
    return m_answer_feedback_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::is_answer_feedback_Valid() const{
    return m_answer_feedback_isValid;
}

OAIGoogleCloudContactcenterinsightsV1ArticleSuggestionData OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::getArticleSuggestion() const {
    return m_article_suggestion;
}
void OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::setArticleSuggestion(const OAIGoogleCloudContactcenterinsightsV1ArticleSuggestionData &article_suggestion) {
    m_article_suggestion = article_suggestion;
    m_article_suggestion_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::is_article_suggestion_Set() const{
    return m_article_suggestion_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::is_article_suggestion_Valid() const{
    return m_article_suggestion_isValid;
}

OAIGoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::getConversationSummarizationSuggestion() const {
    return m_conversation_summarization_suggestion;
}
void OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::setConversationSummarizationSuggestion(const OAIGoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData &conversation_summarization_suggestion) {
    m_conversation_summarization_suggestion = conversation_summarization_suggestion;
    m_conversation_summarization_suggestion_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::is_conversation_summarization_suggestion_Set() const{
    return m_conversation_summarization_suggestion_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::is_conversation_summarization_suggestion_Valid() const{
    return m_conversation_summarization_suggestion_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::is_create_time_Valid() const{
    return m_create_time_isValid;
}

OAIGoogleCloudContactcenterinsightsV1DialogflowInteractionData OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::getDialogflowInteraction() const {
    return m_dialogflow_interaction;
}
void OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::setDialogflowInteraction(const OAIGoogleCloudContactcenterinsightsV1DialogflowInteractionData &dialogflow_interaction) {
    m_dialogflow_interaction = dialogflow_interaction;
    m_dialogflow_interaction_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::is_dialogflow_interaction_Set() const{
    return m_dialogflow_interaction_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::is_dialogflow_interaction_Valid() const{
    return m_dialogflow_interaction_isValid;
}

OAIGoogleCloudContactcenterinsightsV1AnnotationBoundary OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::getEndBoundary() const {
    return m_end_boundary;
}
void OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::setEndBoundary(const OAIGoogleCloudContactcenterinsightsV1AnnotationBoundary &end_boundary) {
    m_end_boundary = end_boundary;
    m_end_boundary_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::is_end_boundary_Set() const{
    return m_end_boundary_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::is_end_boundary_Valid() const{
    return m_end_boundary_isValid;
}

OAIGoogleCloudContactcenterinsightsV1FaqAnswerData OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::getFaqAnswer() const {
    return m_faq_answer;
}
void OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::setFaqAnswer(const OAIGoogleCloudContactcenterinsightsV1FaqAnswerData &faq_answer) {
    m_faq_answer = faq_answer;
    m_faq_answer_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::is_faq_answer_Set() const{
    return m_faq_answer_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::is_faq_answer_Valid() const{
    return m_faq_answer_isValid;
}

OAIGoogleCloudContactcenterinsightsV1SmartComposeSuggestionData OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::getSmartComposeSuggestion() const {
    return m_smart_compose_suggestion;
}
void OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::setSmartComposeSuggestion(const OAIGoogleCloudContactcenterinsightsV1SmartComposeSuggestionData &smart_compose_suggestion) {
    m_smart_compose_suggestion = smart_compose_suggestion;
    m_smart_compose_suggestion_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::is_smart_compose_suggestion_Set() const{
    return m_smart_compose_suggestion_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::is_smart_compose_suggestion_Valid() const{
    return m_smart_compose_suggestion_isValid;
}

OAIGoogleCloudContactcenterinsightsV1SmartReplyData OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::getSmartReply() const {
    return m_smart_reply;
}
void OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::setSmartReply(const OAIGoogleCloudContactcenterinsightsV1SmartReplyData &smart_reply) {
    m_smart_reply = smart_reply;
    m_smart_reply_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::is_smart_reply_Set() const{
    return m_smart_reply_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::is_smart_reply_Valid() const{
    return m_smart_reply_isValid;
}

OAIGoogleCloudContactcenterinsightsV1AnnotationBoundary OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::getStartBoundary() const {
    return m_start_boundary;
}
void OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::setStartBoundary(const OAIGoogleCloudContactcenterinsightsV1AnnotationBoundary &start_boundary) {
    m_start_boundary = start_boundary;
    m_start_boundary_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::is_start_boundary_Set() const{
    return m_start_boundary_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::is_start_boundary_Valid() const{
    return m_start_boundary_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_annotation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_answer_feedback.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_article_suggestion.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversation_summarization_suggestion.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dialogflow_interaction.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_boundary.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_faq_answer.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_smart_compose_suggestion.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_smart_reply.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_boundary.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1RuntimeAnnotation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
