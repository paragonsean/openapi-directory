/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1alpha1GcsSource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1alpha1GcsSource::OAIGoogleCloudContactcenterinsightsV1alpha1GcsSource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1alpha1GcsSource::OAIGoogleCloudContactcenterinsightsV1alpha1GcsSource() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1alpha1GcsSource::~OAIGoogleCloudContactcenterinsightsV1alpha1GcsSource() {}

void OAIGoogleCloudContactcenterinsightsV1alpha1GcsSource::initializeModel() {

    m_audio_uri_isSet = false;
    m_audio_uri_isValid = false;

    m_transcript_uri_isSet = false;
    m_transcript_uri_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1alpha1GcsSource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1alpha1GcsSource::fromJsonObject(QJsonObject json) {

    m_audio_uri_isValid = ::OpenAPI::fromJsonValue(m_audio_uri, json[QString("audioUri")]);
    m_audio_uri_isSet = !json[QString("audioUri")].isNull() && m_audio_uri_isValid;

    m_transcript_uri_isValid = ::OpenAPI::fromJsonValue(m_transcript_uri, json[QString("transcriptUri")]);
    m_transcript_uri_isSet = !json[QString("transcriptUri")].isNull() && m_transcript_uri_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1GcsSource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1alpha1GcsSource::asJsonObject() const {
    QJsonObject obj;
    if (m_audio_uri_isSet) {
        obj.insert(QString("audioUri"), ::OpenAPI::toJsonValue(m_audio_uri));
    }
    if (m_transcript_uri_isSet) {
        obj.insert(QString("transcriptUri"), ::OpenAPI::toJsonValue(m_transcript_uri));
    }
    return obj;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1GcsSource::getAudioUri() const {
    return m_audio_uri;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1GcsSource::setAudioUri(const QString &audio_uri) {
    m_audio_uri = audio_uri;
    m_audio_uri_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1GcsSource::is_audio_uri_Set() const{
    return m_audio_uri_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1GcsSource::is_audio_uri_Valid() const{
    return m_audio_uri_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1GcsSource::getTranscriptUri() const {
    return m_transcript_uri;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1GcsSource::setTranscriptUri(const QString &transcript_uri) {
    m_transcript_uri = transcript_uri;
    m_transcript_uri_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1GcsSource::is_transcript_uri_Set() const{
    return m_transcript_uri_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1GcsSource::is_transcript_uri_Valid() const{
    return m_transcript_uri_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1GcsSource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_audio_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transcript_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1GcsSource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
