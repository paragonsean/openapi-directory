/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::~OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse() {}

void OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::initializeModel() {

    m_average_duration_isSet = false;
    m_average_duration_isValid = false;

    m_average_turn_count_isSet = false;
    m_average_turn_count_isValid = false;

    m_conversation_count_isSet = false;
    m_conversation_count_isValid = false;

    m_conversation_count_time_series_isSet = false;
    m_conversation_count_time_series_isValid = false;

    m_custom_highlighter_matches_isSet = false;
    m_custom_highlighter_matches_isValid = false;

    m_issue_matches_isSet = false;
    m_issue_matches_isValid = false;

    m_issue_matches_stats_isSet = false;
    m_issue_matches_stats_isValid = false;

    m_smart_highlighter_matches_isSet = false;
    m_smart_highlighter_matches_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::fromJsonObject(QJsonObject json) {

    m_average_duration_isValid = ::OpenAPI::fromJsonValue(m_average_duration, json[QString("averageDuration")]);
    m_average_duration_isSet = !json[QString("averageDuration")].isNull() && m_average_duration_isValid;

    m_average_turn_count_isValid = ::OpenAPI::fromJsonValue(m_average_turn_count, json[QString("averageTurnCount")]);
    m_average_turn_count_isSet = !json[QString("averageTurnCount")].isNull() && m_average_turn_count_isValid;

    m_conversation_count_isValid = ::OpenAPI::fromJsonValue(m_conversation_count, json[QString("conversationCount")]);
    m_conversation_count_isSet = !json[QString("conversationCount")].isNull() && m_conversation_count_isValid;

    m_conversation_count_time_series_isValid = ::OpenAPI::fromJsonValue(m_conversation_count_time_series, json[QString("conversationCountTimeSeries")]);
    m_conversation_count_time_series_isSet = !json[QString("conversationCountTimeSeries")].isNull() && m_conversation_count_time_series_isValid;

    m_custom_highlighter_matches_isValid = ::OpenAPI::fromJsonValue(m_custom_highlighter_matches, json[QString("customHighlighterMatches")]);
    m_custom_highlighter_matches_isSet = !json[QString("customHighlighterMatches")].isNull() && m_custom_highlighter_matches_isValid;

    m_issue_matches_isValid = ::OpenAPI::fromJsonValue(m_issue_matches, json[QString("issueMatches")]);
    m_issue_matches_isSet = !json[QString("issueMatches")].isNull() && m_issue_matches_isValid;

    m_issue_matches_stats_isValid = ::OpenAPI::fromJsonValue(m_issue_matches_stats, json[QString("issueMatchesStats")]);
    m_issue_matches_stats_isSet = !json[QString("issueMatchesStats")].isNull() && m_issue_matches_stats_isValid;

    m_smart_highlighter_matches_isValid = ::OpenAPI::fromJsonValue(m_smart_highlighter_matches, json[QString("smartHighlighterMatches")]);
    m_smart_highlighter_matches_isSet = !json[QString("smartHighlighterMatches")].isNull() && m_smart_highlighter_matches_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_average_duration_isSet) {
        obj.insert(QString("averageDuration"), ::OpenAPI::toJsonValue(m_average_duration));
    }
    if (m_average_turn_count_isSet) {
        obj.insert(QString("averageTurnCount"), ::OpenAPI::toJsonValue(m_average_turn_count));
    }
    if (m_conversation_count_isSet) {
        obj.insert(QString("conversationCount"), ::OpenAPI::toJsonValue(m_conversation_count));
    }
    if (m_conversation_count_time_series.isSet()) {
        obj.insert(QString("conversationCountTimeSeries"), ::OpenAPI::toJsonValue(m_conversation_count_time_series));
    }
    if (m_custom_highlighter_matches.size() > 0) {
        obj.insert(QString("customHighlighterMatches"), ::OpenAPI::toJsonValue(m_custom_highlighter_matches));
    }
    if (m_issue_matches.size() > 0) {
        obj.insert(QString("issueMatches"), ::OpenAPI::toJsonValue(m_issue_matches));
    }
    if (m_issue_matches_stats.size() > 0) {
        obj.insert(QString("issueMatchesStats"), ::OpenAPI::toJsonValue(m_issue_matches_stats));
    }
    if (m_smart_highlighter_matches.size() > 0) {
        obj.insert(QString("smartHighlighterMatches"), ::OpenAPI::toJsonValue(m_smart_highlighter_matches));
    }
    return obj;
}

QString OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::getAverageDuration() const {
    return m_average_duration;
}
void OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::setAverageDuration(const QString &average_duration) {
    m_average_duration = average_duration;
    m_average_duration_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::is_average_duration_Set() const{
    return m_average_duration_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::is_average_duration_Valid() const{
    return m_average_duration_isValid;
}

qint32 OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::getAverageTurnCount() const {
    return m_average_turn_count;
}
void OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::setAverageTurnCount(const qint32 &average_turn_count) {
    m_average_turn_count = average_turn_count;
    m_average_turn_count_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::is_average_turn_count_Set() const{
    return m_average_turn_count_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::is_average_turn_count_Valid() const{
    return m_average_turn_count_isValid;
}

qint32 OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::getConversationCount() const {
    return m_conversation_count;
}
void OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::setConversationCount(const qint32 &conversation_count) {
    m_conversation_count = conversation_count;
    m_conversation_count_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::is_conversation_count_Set() const{
    return m_conversation_count_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::is_conversation_count_Valid() const{
    return m_conversation_count_isValid;
}

OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::getConversationCountTimeSeries() const {
    return m_conversation_count_time_series;
}
void OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::setConversationCountTimeSeries(const OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries &conversation_count_time_series) {
    m_conversation_count_time_series = conversation_count_time_series;
    m_conversation_count_time_series_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::is_conversation_count_time_series_Set() const{
    return m_conversation_count_time_series_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::is_conversation_count_time_series_Valid() const{
    return m_conversation_count_time_series_isValid;
}

QMap<QString, qint32> OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::getCustomHighlighterMatches() const {
    return m_custom_highlighter_matches;
}
void OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::setCustomHighlighterMatches(const QMap<QString, qint32> &custom_highlighter_matches) {
    m_custom_highlighter_matches = custom_highlighter_matches;
    m_custom_highlighter_matches_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::is_custom_highlighter_matches_Set() const{
    return m_custom_highlighter_matches_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::is_custom_highlighter_matches_Valid() const{
    return m_custom_highlighter_matches_isValid;
}

QMap<QString, qint32> OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::getIssueMatches() const {
    return m_issue_matches;
}
void OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::setIssueMatches(const QMap<QString, qint32> &issue_matches) {
    m_issue_matches = issue_matches;
    m_issue_matches_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::is_issue_matches_Set() const{
    return m_issue_matches_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::is_issue_matches_Valid() const{
    return m_issue_matches_isValid;
}

QMap<QString, OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats> OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::getIssueMatchesStats() const {
    return m_issue_matches_stats;
}
void OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::setIssueMatchesStats(const QMap<QString, OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats> &issue_matches_stats) {
    m_issue_matches_stats = issue_matches_stats;
    m_issue_matches_stats_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::is_issue_matches_stats_Set() const{
    return m_issue_matches_stats_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::is_issue_matches_stats_Valid() const{
    return m_issue_matches_stats_isValid;
}

QMap<QString, qint32> OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::getSmartHighlighterMatches() const {
    return m_smart_highlighter_matches;
}
void OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::setSmartHighlighterMatches(const QMap<QString, qint32> &smart_highlighter_matches) {
    m_smart_highlighter_matches = smart_highlighter_matches;
    m_smart_highlighter_matches_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::is_smart_highlighter_matches_Set() const{
    return m_smart_highlighter_matches_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::is_smart_highlighter_matches_Valid() const{
    return m_smart_highlighter_matches_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_average_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_average_turn_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversation_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversation_count_time_series.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_highlighter_matches.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_issue_matches.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_issue_matches_stats.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_smart_highlighter_matches.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1CalculateStatsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
