/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest.h
 *
 * Request to upload a conversation.
 */

#ifndef OAIGoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest_H
#define OAIGoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest_H

#include <QJsonObject>

#include "OAIGoogleCloudContactcenterinsightsV1alpha1Conversation.h"
#include "OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig.h"
#include "OAIGoogleCloudContactcenterinsightsV1alpha1SpeechConfig.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudContactcenterinsightsV1alpha1Conversation;
class OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig;
class OAIGoogleCloudContactcenterinsightsV1alpha1SpeechConfig;

class OAIGoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest : public OAIObject {
public:
    OAIGoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest();
    OAIGoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest(QString json);
    ~OAIGoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleCloudContactcenterinsightsV1alpha1Conversation getConversation() const;
    void setConversation(const OAIGoogleCloudContactcenterinsightsV1alpha1Conversation &conversation);
    bool is_conversation_Set() const;
    bool is_conversation_Valid() const;

    QString getConversationId() const;
    void setConversationId(const QString &conversation_id);
    bool is_conversation_id_Set() const;
    bool is_conversation_id_Valid() const;

    QString getParent() const;
    void setParent(const QString &parent);
    bool is_parent_Set() const;
    bool is_parent_Valid() const;

    OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig getRedactionConfig() const;
    void setRedactionConfig(const OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig &redaction_config);
    bool is_redaction_config_Set() const;
    bool is_redaction_config_Valid() const;

    OAIGoogleCloudContactcenterinsightsV1alpha1SpeechConfig getSpeechConfig() const;
    void setSpeechConfig(const OAIGoogleCloudContactcenterinsightsV1alpha1SpeechConfig &speech_config);
    bool is_speech_config_Set() const;
    bool is_speech_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleCloudContactcenterinsightsV1alpha1Conversation m_conversation;
    bool m_conversation_isSet;
    bool m_conversation_isValid;

    QString m_conversation_id;
    bool m_conversation_id_isSet;
    bool m_conversation_id_isValid;

    QString m_parent;
    bool m_parent_isSet;
    bool m_parent_isValid;

    OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig m_redaction_config;
    bool m_redaction_config_isSet;
    bool m_redaction_config_isValid;

    OAIGoogleCloudContactcenterinsightsV1alpha1SpeechConfig m_speech_config;
    bool m_speech_config_isSet;
    bool m_speech_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest)

#endif // OAIGoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest_H
