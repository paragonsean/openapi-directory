/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::~OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData() {}

void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::initializeModel() {

    m_answer_record_isSet = false;
    m_answer_record_isValid = false;

    m_confidence_isSet = false;
    m_confidence_isValid = false;

    m_conversation_model_isSet = false;
    m_conversation_model_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;

    m_text_sections_isSet = false;
    m_text_sections_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::fromJsonObject(QJsonObject json) {

    m_answer_record_isValid = ::OpenAPI::fromJsonValue(m_answer_record, json[QString("answerRecord")]);
    m_answer_record_isSet = !json[QString("answerRecord")].isNull() && m_answer_record_isValid;

    m_confidence_isValid = ::OpenAPI::fromJsonValue(m_confidence, json[QString("confidence")]);
    m_confidence_isSet = !json[QString("confidence")].isNull() && m_confidence_isValid;

    m_conversation_model_isValid = ::OpenAPI::fromJsonValue(m_conversation_model, json[QString("conversationModel")]);
    m_conversation_model_isSet = !json[QString("conversationModel")].isNull() && m_conversation_model_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;

    m_text_sections_isValid = ::OpenAPI::fromJsonValue(m_text_sections, json[QString("textSections")]);
    m_text_sections_isSet = !json[QString("textSections")].isNull() && m_text_sections_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::asJsonObject() const {
    QJsonObject obj;
    if (m_answer_record_isSet) {
        obj.insert(QString("answerRecord"), ::OpenAPI::toJsonValue(m_answer_record));
    }
    if (m_confidence_isSet) {
        obj.insert(QString("confidence"), ::OpenAPI::toJsonValue(m_confidence));
    }
    if (m_conversation_model_isSet) {
        obj.insert(QString("conversationModel"), ::OpenAPI::toJsonValue(m_conversation_model));
    }
    if (m_metadata.size() > 0) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_text_isSet) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    if (m_text_sections.size() > 0) {
        obj.insert(QString("textSections"), ::OpenAPI::toJsonValue(m_text_sections));
    }
    return obj;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::getAnswerRecord() const {
    return m_answer_record;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::setAnswerRecord(const QString &answer_record) {
    m_answer_record = answer_record;
    m_answer_record_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::is_answer_record_Set() const{
    return m_answer_record_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::is_answer_record_Valid() const{
    return m_answer_record_isValid;
}

float OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::getConfidence() const {
    return m_confidence;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::setConfidence(const float &confidence) {
    m_confidence = confidence;
    m_confidence_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::is_confidence_Set() const{
    return m_confidence_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::is_confidence_Valid() const{
    return m_confidence_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::getConversationModel() const {
    return m_conversation_model;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::setConversationModel(const QString &conversation_model) {
    m_conversation_model = conversation_model;
    m_conversation_model_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::is_conversation_model_Set() const{
    return m_conversation_model_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::is_conversation_model_Valid() const{
    return m_conversation_model_isValid;
}

QMap<QString, QString> OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::getMetadata() const {
    return m_metadata;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::setMetadata(const QMap<QString, QString> &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::getText() const {
    return m_text;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::setText(const QString &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::is_text_Set() const{
    return m_text_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::is_text_Valid() const{
    return m_text_isValid;
}

QMap<QString, QString> OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::getTextSections() const {
    return m_text_sections;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::setTextSections(const QMap<QString, QString> &text_sections) {
    m_text_sections = text_sections;
    m_text_sections_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::is_text_sections_Set() const{
    return m_text_sections_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::is_text_sections_Valid() const{
    return m_text_sections_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_answer_record_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_confidence_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversation_model_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_sections.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
