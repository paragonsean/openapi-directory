/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::~OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest() {}

void OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::initializeModel() {

    m_analysis_percentage_isSet = false;
    m_analysis_percentage_isValid = false;

    m_annotator_selector_isSet = false;
    m_annotator_selector_isValid = false;

    m_filter_isSet = false;
    m_filter_isValid = false;

    m_parent_isSet = false;
    m_parent_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::fromJsonObject(QJsonObject json) {

    m_analysis_percentage_isValid = ::OpenAPI::fromJsonValue(m_analysis_percentage, json[QString("analysisPercentage")]);
    m_analysis_percentage_isSet = !json[QString("analysisPercentage")].isNull() && m_analysis_percentage_isValid;

    m_annotator_selector_isValid = ::OpenAPI::fromJsonValue(m_annotator_selector, json[QString("annotatorSelector")]);
    m_annotator_selector_isSet = !json[QString("annotatorSelector")].isNull() && m_annotator_selector_isValid;

    m_filter_isValid = ::OpenAPI::fromJsonValue(m_filter, json[QString("filter")]);
    m_filter_isSet = !json[QString("filter")].isNull() && m_filter_isValid;

    m_parent_isValid = ::OpenAPI::fromJsonValue(m_parent, json[QString("parent")]);
    m_parent_isSet = !json[QString("parent")].isNull() && m_parent_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_analysis_percentage_isSet) {
        obj.insert(QString("analysisPercentage"), ::OpenAPI::toJsonValue(m_analysis_percentage));
    }
    if (m_annotator_selector.isSet()) {
        obj.insert(QString("annotatorSelector"), ::OpenAPI::toJsonValue(m_annotator_selector));
    }
    if (m_filter_isSet) {
        obj.insert(QString("filter"), ::OpenAPI::toJsonValue(m_filter));
    }
    if (m_parent_isSet) {
        obj.insert(QString("parent"), ::OpenAPI::toJsonValue(m_parent));
    }
    return obj;
}

float OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::getAnalysisPercentage() const {
    return m_analysis_percentage;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::setAnalysisPercentage(const float &analysis_percentage) {
    m_analysis_percentage = analysis_percentage;
    m_analysis_percentage_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::is_analysis_percentage_Set() const{
    return m_analysis_percentage_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::is_analysis_percentage_Valid() const{
    return m_analysis_percentage_isValid;
}

OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::getAnnotatorSelector() const {
    return m_annotator_selector;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::setAnnotatorSelector(const OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector &annotator_selector) {
    m_annotator_selector = annotator_selector;
    m_annotator_selector_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::is_annotator_selector_Set() const{
    return m_annotator_selector_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::is_annotator_selector_Valid() const{
    return m_annotator_selector_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::getFilter() const {
    return m_filter;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::setFilter(const QString &filter) {
    m_filter = filter;
    m_filter_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::is_filter_Set() const{
    return m_filter_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::is_filter_Valid() const{
    return m_filter_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::getParent() const {
    return m_parent;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::setParent(const QString &parent) {
    m_parent = parent;
    m_parent_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::is_parent_Set() const{
    return m_parent_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::is_parent_Valid() const{
    return m_parent_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_analysis_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_annotator_selector.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_filter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
