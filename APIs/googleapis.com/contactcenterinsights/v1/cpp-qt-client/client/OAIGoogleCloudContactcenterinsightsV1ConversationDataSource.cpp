/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1ConversationDataSource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1ConversationDataSource::OAIGoogleCloudContactcenterinsightsV1ConversationDataSource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1ConversationDataSource::OAIGoogleCloudContactcenterinsightsV1ConversationDataSource() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1ConversationDataSource::~OAIGoogleCloudContactcenterinsightsV1ConversationDataSource() {}

void OAIGoogleCloudContactcenterinsightsV1ConversationDataSource::initializeModel() {

    m_dialogflow_source_isSet = false;
    m_dialogflow_source_isValid = false;

    m_gcs_source_isSet = false;
    m_gcs_source_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1ConversationDataSource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1ConversationDataSource::fromJsonObject(QJsonObject json) {

    m_dialogflow_source_isValid = ::OpenAPI::fromJsonValue(m_dialogflow_source, json[QString("dialogflowSource")]);
    m_dialogflow_source_isSet = !json[QString("dialogflowSource")].isNull() && m_dialogflow_source_isValid;

    m_gcs_source_isValid = ::OpenAPI::fromJsonValue(m_gcs_source, json[QString("gcsSource")]);
    m_gcs_source_isSet = !json[QString("gcsSource")].isNull() && m_gcs_source_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1ConversationDataSource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1ConversationDataSource::asJsonObject() const {
    QJsonObject obj;
    if (m_dialogflow_source.isSet()) {
        obj.insert(QString("dialogflowSource"), ::OpenAPI::toJsonValue(m_dialogflow_source));
    }
    if (m_gcs_source.isSet()) {
        obj.insert(QString("gcsSource"), ::OpenAPI::toJsonValue(m_gcs_source));
    }
    return obj;
}

OAIGoogleCloudContactcenterinsightsV1DialogflowSource OAIGoogleCloudContactcenterinsightsV1ConversationDataSource::getDialogflowSource() const {
    return m_dialogflow_source;
}
void OAIGoogleCloudContactcenterinsightsV1ConversationDataSource::setDialogflowSource(const OAIGoogleCloudContactcenterinsightsV1DialogflowSource &dialogflow_source) {
    m_dialogflow_source = dialogflow_source;
    m_dialogflow_source_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationDataSource::is_dialogflow_source_Set() const{
    return m_dialogflow_source_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationDataSource::is_dialogflow_source_Valid() const{
    return m_dialogflow_source_isValid;
}

OAIGoogleCloudContactcenterinsightsV1GcsSource OAIGoogleCloudContactcenterinsightsV1ConversationDataSource::getGcsSource() const {
    return m_gcs_source;
}
void OAIGoogleCloudContactcenterinsightsV1ConversationDataSource::setGcsSource(const OAIGoogleCloudContactcenterinsightsV1GcsSource &gcs_source) {
    m_gcs_source = gcs_source;
    m_gcs_source_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationDataSource::is_gcs_source_Set() const{
    return m_gcs_source_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationDataSource::is_gcs_source_Valid() const{
    return m_gcs_source_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationDataSource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dialogflow_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_gcs_source.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationDataSource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
