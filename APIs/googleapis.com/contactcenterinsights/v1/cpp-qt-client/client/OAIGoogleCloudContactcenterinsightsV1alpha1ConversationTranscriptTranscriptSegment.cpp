/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::~OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment() {}

void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::initializeModel() {

    m_channel_tag_isSet = false;
    m_channel_tag_isValid = false;

    m_confidence_isSet = false;
    m_confidence_isValid = false;

    m_dialogflow_segment_metadata_isSet = false;
    m_dialogflow_segment_metadata_isValid = false;

    m_language_code_isSet = false;
    m_language_code_isValid = false;

    m_message_time_isSet = false;
    m_message_time_isValid = false;

    m_segment_participant_isSet = false;
    m_segment_participant_isValid = false;

    m_sentiment_isSet = false;
    m_sentiment_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;

    m_words_isSet = false;
    m_words_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::fromJsonObject(QJsonObject json) {

    m_channel_tag_isValid = ::OpenAPI::fromJsonValue(m_channel_tag, json[QString("channelTag")]);
    m_channel_tag_isSet = !json[QString("channelTag")].isNull() && m_channel_tag_isValid;

    m_confidence_isValid = ::OpenAPI::fromJsonValue(m_confidence, json[QString("confidence")]);
    m_confidence_isSet = !json[QString("confidence")].isNull() && m_confidence_isValid;

    m_dialogflow_segment_metadata_isValid = ::OpenAPI::fromJsonValue(m_dialogflow_segment_metadata, json[QString("dialogflowSegmentMetadata")]);
    m_dialogflow_segment_metadata_isSet = !json[QString("dialogflowSegmentMetadata")].isNull() && m_dialogflow_segment_metadata_isValid;

    m_language_code_isValid = ::OpenAPI::fromJsonValue(m_language_code, json[QString("languageCode")]);
    m_language_code_isSet = !json[QString("languageCode")].isNull() && m_language_code_isValid;

    m_message_time_isValid = ::OpenAPI::fromJsonValue(m_message_time, json[QString("messageTime")]);
    m_message_time_isSet = !json[QString("messageTime")].isNull() && m_message_time_isValid;

    m_segment_participant_isValid = ::OpenAPI::fromJsonValue(m_segment_participant, json[QString("segmentParticipant")]);
    m_segment_participant_isSet = !json[QString("segmentParticipant")].isNull() && m_segment_participant_isValid;

    m_sentiment_isValid = ::OpenAPI::fromJsonValue(m_sentiment, json[QString("sentiment")]);
    m_sentiment_isSet = !json[QString("sentiment")].isNull() && m_sentiment_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;

    m_words_isValid = ::OpenAPI::fromJsonValue(m_words, json[QString("words")]);
    m_words_isSet = !json[QString("words")].isNull() && m_words_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::asJsonObject() const {
    QJsonObject obj;
    if (m_channel_tag_isSet) {
        obj.insert(QString("channelTag"), ::OpenAPI::toJsonValue(m_channel_tag));
    }
    if (m_confidence_isSet) {
        obj.insert(QString("confidence"), ::OpenAPI::toJsonValue(m_confidence));
    }
    if (m_dialogflow_segment_metadata.isSet()) {
        obj.insert(QString("dialogflowSegmentMetadata"), ::OpenAPI::toJsonValue(m_dialogflow_segment_metadata));
    }
    if (m_language_code_isSet) {
        obj.insert(QString("languageCode"), ::OpenAPI::toJsonValue(m_language_code));
    }
    if (m_message_time_isSet) {
        obj.insert(QString("messageTime"), ::OpenAPI::toJsonValue(m_message_time));
    }
    if (m_segment_participant.isSet()) {
        obj.insert(QString("segmentParticipant"), ::OpenAPI::toJsonValue(m_segment_participant));
    }
    if (m_sentiment.isSet()) {
        obj.insert(QString("sentiment"), ::OpenAPI::toJsonValue(m_sentiment));
    }
    if (m_text_isSet) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    if (m_words.size() > 0) {
        obj.insert(QString("words"), ::OpenAPI::toJsonValue(m_words));
    }
    return obj;
}

qint32 OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::getChannelTag() const {
    return m_channel_tag;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::setChannelTag(const qint32 &channel_tag) {
    m_channel_tag = channel_tag;
    m_channel_tag_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::is_channel_tag_Set() const{
    return m_channel_tag_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::is_channel_tag_Valid() const{
    return m_channel_tag_isValid;
}

float OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::getConfidence() const {
    return m_confidence;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::setConfidence(const float &confidence) {
    m_confidence = confidence;
    m_confidence_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::is_confidence_Set() const{
    return m_confidence_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::is_confidence_Valid() const{
    return m_confidence_isValid;
}

OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::getDialogflowSegmentMetadata() const {
    return m_dialogflow_segment_metadata;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::setDialogflowSegmentMetadata(const OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata &dialogflow_segment_metadata) {
    m_dialogflow_segment_metadata = dialogflow_segment_metadata;
    m_dialogflow_segment_metadata_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::is_dialogflow_segment_metadata_Set() const{
    return m_dialogflow_segment_metadata_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::is_dialogflow_segment_metadata_Valid() const{
    return m_dialogflow_segment_metadata_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::getLanguageCode() const {
    return m_language_code;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::setLanguageCode(const QString &language_code) {
    m_language_code = language_code;
    m_language_code_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::is_language_code_Set() const{
    return m_language_code_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::is_language_code_Valid() const{
    return m_language_code_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::getMessageTime() const {
    return m_message_time;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::setMessageTime(const QString &message_time) {
    m_message_time = message_time;
    m_message_time_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::is_message_time_Set() const{
    return m_message_time_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::is_message_time_Valid() const{
    return m_message_time_isValid;
}

OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::getSegmentParticipant() const {
    return m_segment_participant;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::setSegmentParticipant(const OAIGoogleCloudContactcenterinsightsV1alpha1ConversationParticipant &segment_participant) {
    m_segment_participant = segment_participant;
    m_segment_participant_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::is_segment_participant_Set() const{
    return m_segment_participant_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::is_segment_participant_Valid() const{
    return m_segment_participant_isValid;
}

OAIGoogleCloudContactcenterinsightsV1alpha1SentimentData OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::getSentiment() const {
    return m_sentiment;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::setSentiment(const OAIGoogleCloudContactcenterinsightsV1alpha1SentimentData &sentiment) {
    m_sentiment = sentiment;
    m_sentiment_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::is_sentiment_Set() const{
    return m_sentiment_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::is_sentiment_Valid() const{
    return m_sentiment_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::getText() const {
    return m_text;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::setText(const QString &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::is_text_Set() const{
    return m_text_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::is_text_Valid() const{
    return m_text_isValid;
}

QList<OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo> OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::getWords() const {
    return m_words;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::setWords(const QList<OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo> &words) {
    m_words = words;
    m_words_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::is_words_Set() const{
    return m_words_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::is_words_Valid() const{
    return m_words_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_channel_tag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_confidence_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dialogflow_segment_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_segment_participant.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sentiment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_words.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
