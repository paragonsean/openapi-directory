/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats::OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats::OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats::~OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats() {}

void OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats::initializeModel() {

    m_analyzed_conversations_count_isSet = false;
    m_analyzed_conversations_count_isValid = false;

    m_issue_stats_isSet = false;
    m_issue_stats_isValid = false;

    m_unclassified_conversations_count_isSet = false;
    m_unclassified_conversations_count_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats::fromJsonObject(QJsonObject json) {

    m_analyzed_conversations_count_isValid = ::OpenAPI::fromJsonValue(m_analyzed_conversations_count, json[QString("analyzedConversationsCount")]);
    m_analyzed_conversations_count_isSet = !json[QString("analyzedConversationsCount")].isNull() && m_analyzed_conversations_count_isValid;

    m_issue_stats_isValid = ::OpenAPI::fromJsonValue(m_issue_stats, json[QString("issueStats")]);
    m_issue_stats_isSet = !json[QString("issueStats")].isNull() && m_issue_stats_isValid;

    m_unclassified_conversations_count_isValid = ::OpenAPI::fromJsonValue(m_unclassified_conversations_count, json[QString("unclassifiedConversationsCount")]);
    m_unclassified_conversations_count_isSet = !json[QString("unclassifiedConversationsCount")].isNull() && m_unclassified_conversations_count_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats::asJsonObject() const {
    QJsonObject obj;
    if (m_analyzed_conversations_count_isSet) {
        obj.insert(QString("analyzedConversationsCount"), ::OpenAPI::toJsonValue(m_analyzed_conversations_count));
    }
    if (m_issue_stats.size() > 0) {
        obj.insert(QString("issueStats"), ::OpenAPI::toJsonValue(m_issue_stats));
    }
    if (m_unclassified_conversations_count_isSet) {
        obj.insert(QString("unclassifiedConversationsCount"), ::OpenAPI::toJsonValue(m_unclassified_conversations_count));
    }
    return obj;
}

QString OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats::getAnalyzedConversationsCount() const {
    return m_analyzed_conversations_count;
}
void OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats::setAnalyzedConversationsCount(const QString &analyzed_conversations_count) {
    m_analyzed_conversations_count = analyzed_conversations_count;
    m_analyzed_conversations_count_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats::is_analyzed_conversations_count_Set() const{
    return m_analyzed_conversations_count_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats::is_analyzed_conversations_count_Valid() const{
    return m_analyzed_conversations_count_isValid;
}

QMap<QString, OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats> OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats::getIssueStats() const {
    return m_issue_stats;
}
void OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats::setIssueStats(const QMap<QString, OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats> &issue_stats) {
    m_issue_stats = issue_stats;
    m_issue_stats_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats::is_issue_stats_Set() const{
    return m_issue_stats_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats::is_issue_stats_Valid() const{
    return m_issue_stats_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats::getUnclassifiedConversationsCount() const {
    return m_unclassified_conversations_count;
}
void OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats::setUnclassifiedConversationsCount(const QString &unclassified_conversations_count) {
    m_unclassified_conversations_count = unclassified_conversations_count;
    m_unclassified_conversations_count_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats::is_unclassified_conversations_count_Set() const{
    return m_unclassified_conversations_count_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats::is_unclassified_conversations_count_Valid() const{
    return m_unclassified_conversations_count_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_analyzed_conversations_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_issue_stats.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_unclassified_conversations_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1IssueModelLabelStats::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
