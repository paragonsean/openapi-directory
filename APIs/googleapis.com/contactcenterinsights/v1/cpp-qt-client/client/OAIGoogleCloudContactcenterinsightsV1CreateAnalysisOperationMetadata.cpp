/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::~OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata() {}

void OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::initializeModel() {

    m_annotator_selector_isSet = false;
    m_annotator_selector_isValid = false;

    m_conversation_isSet = false;
    m_conversation_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::fromJsonObject(QJsonObject json) {

    m_annotator_selector_isValid = ::OpenAPI::fromJsonValue(m_annotator_selector, json[QString("annotatorSelector")]);
    m_annotator_selector_isSet = !json[QString("annotatorSelector")].isNull() && m_annotator_selector_isValid;

    m_conversation_isValid = ::OpenAPI::fromJsonValue(m_conversation, json[QString("conversation")]);
    m_conversation_isSet = !json[QString("conversation")].isNull() && m_conversation_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_annotator_selector.isSet()) {
        obj.insert(QString("annotatorSelector"), ::OpenAPI::toJsonValue(m_annotator_selector));
    }
    if (m_conversation_isSet) {
        obj.insert(QString("conversation"), ::OpenAPI::toJsonValue(m_conversation));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    return obj;
}

OAIGoogleCloudContactcenterinsightsV1AnnotatorSelector OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::getAnnotatorSelector() const {
    return m_annotator_selector;
}
void OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::setAnnotatorSelector(const OAIGoogleCloudContactcenterinsightsV1AnnotatorSelector &annotator_selector) {
    m_annotator_selector = annotator_selector;
    m_annotator_selector_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::is_annotator_selector_Set() const{
    return m_annotator_selector_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::is_annotator_selector_Valid() const{
    return m_annotator_selector_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::getConversation() const {
    return m_conversation;
}
void OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::setConversation(const QString &conversation) {
    m_conversation = conversation;
    m_conversation_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::is_conversation_Set() const{
    return m_conversation_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::is_conversation_Valid() const{
    return m_conversation_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::getEndTime() const {
    return m_end_time;
}
void OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::is_end_time_Valid() const{
    return m_end_time_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_annotator_selector.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
