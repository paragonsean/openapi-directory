/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1alpha1Analysis.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::OAIGoogleCloudContactcenterinsightsV1alpha1Analysis(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::OAIGoogleCloudContactcenterinsightsV1alpha1Analysis() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::~OAIGoogleCloudContactcenterinsightsV1alpha1Analysis() {}

void OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::initializeModel() {

    m_analysis_result_isSet = false;
    m_analysis_result_isValid = false;

    m_annotator_selector_isSet = false;
    m_annotator_selector_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_request_time_isSet = false;
    m_request_time_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::fromJsonObject(QJsonObject json) {

    m_analysis_result_isValid = ::OpenAPI::fromJsonValue(m_analysis_result, json[QString("analysisResult")]);
    m_analysis_result_isSet = !json[QString("analysisResult")].isNull() && m_analysis_result_isValid;

    m_annotator_selector_isValid = ::OpenAPI::fromJsonValue(m_annotator_selector, json[QString("annotatorSelector")]);
    m_annotator_selector_isSet = !json[QString("annotatorSelector")].isNull() && m_annotator_selector_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_request_time_isValid = ::OpenAPI::fromJsonValue(m_request_time, json[QString("requestTime")]);
    m_request_time_isSet = !json[QString("requestTime")].isNull() && m_request_time_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::asJsonObject() const {
    QJsonObject obj;
    if (m_analysis_result.isSet()) {
        obj.insert(QString("analysisResult"), ::OpenAPI::toJsonValue(m_analysis_result));
    }
    if (m_annotator_selector.isSet()) {
        obj.insert(QString("annotatorSelector"), ::OpenAPI::toJsonValue(m_annotator_selector));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_request_time_isSet) {
        obj.insert(QString("requestTime"), ::OpenAPI::toJsonValue(m_request_time));
    }
    return obj;
}

OAIGoogleCloudContactcenterinsightsV1alpha1AnalysisResult OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::getAnalysisResult() const {
    return m_analysis_result;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::setAnalysisResult(const OAIGoogleCloudContactcenterinsightsV1alpha1AnalysisResult &analysis_result) {
    m_analysis_result = analysis_result;
    m_analysis_result_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::is_analysis_result_Set() const{
    return m_analysis_result_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::is_analysis_result_Valid() const{
    return m_analysis_result_isValid;
}

OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::getAnnotatorSelector() const {
    return m_annotator_selector;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::setAnnotatorSelector(const OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector &annotator_selector) {
    m_annotator_selector = annotator_selector;
    m_annotator_selector_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::is_annotator_selector_Set() const{
    return m_annotator_selector_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::is_annotator_selector_Valid() const{
    return m_annotator_selector_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::getName() const {
    return m_name;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::getRequestTime() const {
    return m_request_time;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::setRequestTime(const QString &request_time) {
    m_request_time = request_time;
    m_request_time_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::is_request_time_Set() const{
    return m_request_time_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::is_request_time_Valid() const{
    return m_request_time_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_analysis_result.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_annotator_selector.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1Analysis::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
