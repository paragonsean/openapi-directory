/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudContactcenterinsightsV1ArticleSuggestionData.h
 *
 * Agent Assist Article Suggestion data.
 */

#ifndef OAIGoogleCloudContactcenterinsightsV1ArticleSuggestionData_H
#define OAIGoogleCloudContactcenterinsightsV1ArticleSuggestionData_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudContactcenterinsightsV1ArticleSuggestionData : public OAIObject {
public:
    OAIGoogleCloudContactcenterinsightsV1ArticleSuggestionData();
    OAIGoogleCloudContactcenterinsightsV1ArticleSuggestionData(QString json);
    ~OAIGoogleCloudContactcenterinsightsV1ArticleSuggestionData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    float getConfidenceScore() const;
    void setConfidenceScore(const float &confidence_score);
    bool is_confidence_score_Set() const;
    bool is_confidence_score_Valid() const;

    QMap<QString, QString> getMetadata() const;
    void setMetadata(const QMap<QString, QString> &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getQueryRecord() const;
    void setQueryRecord(const QString &query_record);
    bool is_query_record_Set() const;
    bool is_query_record_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    float m_confidence_score;
    bool m_confidence_score_isSet;
    bool m_confidence_score_isValid;

    QMap<QString, QString> m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_query_record;
    bool m_query_record_isSet;
    bool m_query_record_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudContactcenterinsightsV1ArticleSuggestionData)

#endif // OAIGoogleCloudContactcenterinsightsV1ArticleSuggestionData_H
