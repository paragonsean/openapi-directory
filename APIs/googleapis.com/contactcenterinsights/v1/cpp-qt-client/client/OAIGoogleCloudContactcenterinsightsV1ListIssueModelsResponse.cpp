/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1ListIssueModelsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1ListIssueModelsResponse::OAIGoogleCloudContactcenterinsightsV1ListIssueModelsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1ListIssueModelsResponse::OAIGoogleCloudContactcenterinsightsV1ListIssueModelsResponse() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1ListIssueModelsResponse::~OAIGoogleCloudContactcenterinsightsV1ListIssueModelsResponse() {}

void OAIGoogleCloudContactcenterinsightsV1ListIssueModelsResponse::initializeModel() {

    m_issue_models_isSet = false;
    m_issue_models_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1ListIssueModelsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1ListIssueModelsResponse::fromJsonObject(QJsonObject json) {

    m_issue_models_isValid = ::OpenAPI::fromJsonValue(m_issue_models, json[QString("issueModels")]);
    m_issue_models_isSet = !json[QString("issueModels")].isNull() && m_issue_models_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1ListIssueModelsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1ListIssueModelsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_issue_models.size() > 0) {
        obj.insert(QString("issueModels"), ::OpenAPI::toJsonValue(m_issue_models));
    }
    return obj;
}

QList<OAIGoogleCloudContactcenterinsightsV1IssueModel> OAIGoogleCloudContactcenterinsightsV1ListIssueModelsResponse::getIssueModels() const {
    return m_issue_models;
}
void OAIGoogleCloudContactcenterinsightsV1ListIssueModelsResponse::setIssueModels(const QList<OAIGoogleCloudContactcenterinsightsV1IssueModel> &issue_models) {
    m_issue_models = issue_models;
    m_issue_models_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1ListIssueModelsResponse::is_issue_models_Set() const{
    return m_issue_models_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1ListIssueModelsResponse::is_issue_models_Valid() const{
    return m_issue_models_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1ListIssueModelsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_issue_models.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1ListIssueModelsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
