/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::~OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo() {}

void OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::initializeModel() {

    m_agent_id_isSet = false;
    m_agent_id_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_disposition_code_isSet = false;
    m_disposition_code_isValid = false;

    m_team_isSet = false;
    m_team_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::fromJsonObject(QJsonObject json) {

    m_agent_id_isValid = ::OpenAPI::fromJsonValue(m_agent_id, json[QString("agentId")]);
    m_agent_id_isSet = !json[QString("agentId")].isNull() && m_agent_id_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_disposition_code_isValid = ::OpenAPI::fromJsonValue(m_disposition_code, json[QString("dispositionCode")]);
    m_disposition_code_isSet = !json[QString("dispositionCode")].isNull() && m_disposition_code_isValid;

    m_team_isValid = ::OpenAPI::fromJsonValue(m_team, json[QString("team")]);
    m_team_isSet = !json[QString("team")].isNull() && m_team_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_agent_id_isSet) {
        obj.insert(QString("agentId"), ::OpenAPI::toJsonValue(m_agent_id));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_disposition_code_isSet) {
        obj.insert(QString("dispositionCode"), ::OpenAPI::toJsonValue(m_disposition_code));
    }
    if (m_team_isSet) {
        obj.insert(QString("team"), ::OpenAPI::toJsonValue(m_team));
    }
    return obj;
}

QString OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::getAgentId() const {
    return m_agent_id;
}
void OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::setAgentId(const QString &agent_id) {
    m_agent_id = agent_id;
    m_agent_id_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::is_agent_id_Set() const{
    return m_agent_id_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::is_agent_id_Valid() const{
    return m_agent_id_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::getDispositionCode() const {
    return m_disposition_code;
}
void OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::setDispositionCode(const QString &disposition_code) {
    m_disposition_code = disposition_code;
    m_disposition_code_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::is_disposition_code_Set() const{
    return m_disposition_code_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::is_disposition_code_Valid() const{
    return m_disposition_code_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::getTeam() const {
    return m_team;
}
void OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::setTeam(const QString &team) {
    m_team = team;
    m_team_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::is_team_Set() const{
    return m_team_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::is_team_Valid() const{
    return m_team_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_agent_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_disposition_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_team_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
