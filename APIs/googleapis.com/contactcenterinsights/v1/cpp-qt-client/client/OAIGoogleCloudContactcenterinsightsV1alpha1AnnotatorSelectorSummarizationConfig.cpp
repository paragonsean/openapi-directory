/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig::OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig::OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig::~OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig() {}

void OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig::initializeModel() {

    m_conversation_profile_isSet = false;
    m_conversation_profile_isValid = false;

    m_summarization_model_isSet = false;
    m_summarization_model_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig::fromJsonObject(QJsonObject json) {

    m_conversation_profile_isValid = ::OpenAPI::fromJsonValue(m_conversation_profile, json[QString("conversationProfile")]);
    m_conversation_profile_isSet = !json[QString("conversationProfile")].isNull() && m_conversation_profile_isValid;

    m_summarization_model_isValid = ::OpenAPI::fromJsonValue(m_summarization_model, json[QString("summarizationModel")]);
    m_summarization_model_isSet = !json[QString("summarizationModel")].isNull() && m_summarization_model_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_conversation_profile_isSet) {
        obj.insert(QString("conversationProfile"), ::OpenAPI::toJsonValue(m_conversation_profile));
    }
    if (m_summarization_model_isSet) {
        obj.insert(QString("summarizationModel"), ::OpenAPI::toJsonValue(m_summarization_model));
    }
    return obj;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig::getConversationProfile() const {
    return m_conversation_profile;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig::setConversationProfile(const QString &conversation_profile) {
    m_conversation_profile = conversation_profile;
    m_conversation_profile_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig::is_conversation_profile_Set() const{
    return m_conversation_profile_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig::is_conversation_profile_Valid() const{
    return m_conversation_profile_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig::getSummarizationModel() const {
    return m_summarization_model;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig::setSummarizationModel(const QString &summarization_model) {
    m_summarization_model = summarization_model;
    m_summarization_model_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig::is_summarization_model_Set() const{
    return m_summarization_model_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig::is_summarization_model_Valid() const{
    return m_summarization_model_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_conversation_profile_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_summarization_model_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
