/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig::OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig::OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig::~OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig() {}

void OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig::initializeModel() {

    m_deidentify_template_isSet = false;
    m_deidentify_template_isValid = false;

    m_inspect_template_isSet = false;
    m_inspect_template_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig::fromJsonObject(QJsonObject json) {

    m_deidentify_template_isValid = ::OpenAPI::fromJsonValue(m_deidentify_template, json[QString("deidentifyTemplate")]);
    m_deidentify_template_isSet = !json[QString("deidentifyTemplate")].isNull() && m_deidentify_template_isValid;

    m_inspect_template_isValid = ::OpenAPI::fromJsonValue(m_inspect_template, json[QString("inspectTemplate")]);
    m_inspect_template_isSet = !json[QString("inspectTemplate")].isNull() && m_inspect_template_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_deidentify_template_isSet) {
        obj.insert(QString("deidentifyTemplate"), ::OpenAPI::toJsonValue(m_deidentify_template));
    }
    if (m_inspect_template_isSet) {
        obj.insert(QString("inspectTemplate"), ::OpenAPI::toJsonValue(m_inspect_template));
    }
    return obj;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig::getDeidentifyTemplate() const {
    return m_deidentify_template;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig::setDeidentifyTemplate(const QString &deidentify_template) {
    m_deidentify_template = deidentify_template;
    m_deidentify_template_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig::is_deidentify_template_Set() const{
    return m_deidentify_template_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig::is_deidentify_template_Valid() const{
    return m_deidentify_template_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig::getInspectTemplate() const {
    return m_inspect_template;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig::setInspectTemplate(const QString &inspect_template) {
    m_inspect_template = inspect_template;
    m_inspect_template_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig::is_inspect_template_Set() const{
    return m_inspect_template_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig::is_inspect_template_Valid() const{
    return m_inspect_template_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_deidentify_template_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inspect_template_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
