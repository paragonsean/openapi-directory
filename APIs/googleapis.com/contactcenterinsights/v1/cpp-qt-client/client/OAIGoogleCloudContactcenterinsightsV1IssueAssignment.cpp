/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1IssueAssignment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1IssueAssignment::OAIGoogleCloudContactcenterinsightsV1IssueAssignment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1IssueAssignment::OAIGoogleCloudContactcenterinsightsV1IssueAssignment() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1IssueAssignment::~OAIGoogleCloudContactcenterinsightsV1IssueAssignment() {}

void OAIGoogleCloudContactcenterinsightsV1IssueAssignment::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_issue_isSet = false;
    m_issue_isValid = false;

    m_score_isSet = false;
    m_score_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1IssueAssignment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1IssueAssignment::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_issue_isValid = ::OpenAPI::fromJsonValue(m_issue, json[QString("issue")]);
    m_issue_isSet = !json[QString("issue")].isNull() && m_issue_isValid;

    m_score_isValid = ::OpenAPI::fromJsonValue(m_score, json[QString("score")]);
    m_score_isSet = !json[QString("score")].isNull() && m_score_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1IssueAssignment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1IssueAssignment::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_issue_isSet) {
        obj.insert(QString("issue"), ::OpenAPI::toJsonValue(m_issue));
    }
    if (m_score_isSet) {
        obj.insert(QString("score"), ::OpenAPI::toJsonValue(m_score));
    }
    return obj;
}

QString OAIGoogleCloudContactcenterinsightsV1IssueAssignment::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudContactcenterinsightsV1IssueAssignment::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1IssueAssignment::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1IssueAssignment::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1IssueAssignment::getIssue() const {
    return m_issue;
}
void OAIGoogleCloudContactcenterinsightsV1IssueAssignment::setIssue(const QString &issue) {
    m_issue = issue;
    m_issue_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1IssueAssignment::is_issue_Set() const{
    return m_issue_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1IssueAssignment::is_issue_Valid() const{
    return m_issue_isValid;
}

double OAIGoogleCloudContactcenterinsightsV1IssueAssignment::getScore() const {
    return m_score;
}
void OAIGoogleCloudContactcenterinsightsV1IssueAssignment::setScore(const double &score) {
    m_score = score;
    m_score_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1IssueAssignment::is_score_Set() const{
    return m_score_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1IssueAssignment::is_score_Valid() const{
    return m_score_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1IssueAssignment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_issue_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_score_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1IssueAssignment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
