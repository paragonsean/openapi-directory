/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse.h
 *
 * The response of listing phrase matchers.
 */

#ifndef OAIGoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse_H
#define OAIGoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse_H

#include <QJsonObject>

#include "OAIGoogleCloudContactcenterinsightsV1PhraseMatcher.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudContactcenterinsightsV1PhraseMatcher;

class OAIGoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse : public OAIObject {
public:
    OAIGoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse();
    OAIGoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse(QString json);
    ~OAIGoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    QList<OAIGoogleCloudContactcenterinsightsV1PhraseMatcher> getPhraseMatchers() const;
    void setPhraseMatchers(const QList<OAIGoogleCloudContactcenterinsightsV1PhraseMatcher> &phrase_matchers);
    bool is_phrase_matchers_Set() const;
    bool is_phrase_matchers_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;

    QList<OAIGoogleCloudContactcenterinsightsV1PhraseMatcher> m_phrase_matchers;
    bool m_phrase_matchers_isSet;
    bool m_phrase_matchers_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse)

#endif // OAIGoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse_H
