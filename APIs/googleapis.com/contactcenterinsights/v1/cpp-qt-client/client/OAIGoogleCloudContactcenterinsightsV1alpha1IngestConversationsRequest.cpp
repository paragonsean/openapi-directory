/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::~OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest() {}

void OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::initializeModel() {

    m_conversation_config_isSet = false;
    m_conversation_config_isValid = false;

    m_gcs_source_isSet = false;
    m_gcs_source_isValid = false;

    m_parent_isSet = false;
    m_parent_isValid = false;

    m_redaction_config_isSet = false;
    m_redaction_config_isValid = false;

    m_speech_config_isSet = false;
    m_speech_config_isValid = false;

    m_transcript_object_config_isSet = false;
    m_transcript_object_config_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::fromJsonObject(QJsonObject json) {

    m_conversation_config_isValid = ::OpenAPI::fromJsonValue(m_conversation_config, json[QString("conversationConfig")]);
    m_conversation_config_isSet = !json[QString("conversationConfig")].isNull() && m_conversation_config_isValid;

    m_gcs_source_isValid = ::OpenAPI::fromJsonValue(m_gcs_source, json[QString("gcsSource")]);
    m_gcs_source_isSet = !json[QString("gcsSource")].isNull() && m_gcs_source_isValid;

    m_parent_isValid = ::OpenAPI::fromJsonValue(m_parent, json[QString("parent")]);
    m_parent_isSet = !json[QString("parent")].isNull() && m_parent_isValid;

    m_redaction_config_isValid = ::OpenAPI::fromJsonValue(m_redaction_config, json[QString("redactionConfig")]);
    m_redaction_config_isSet = !json[QString("redactionConfig")].isNull() && m_redaction_config_isValid;

    m_speech_config_isValid = ::OpenAPI::fromJsonValue(m_speech_config, json[QString("speechConfig")]);
    m_speech_config_isSet = !json[QString("speechConfig")].isNull() && m_speech_config_isValid;

    m_transcript_object_config_isValid = ::OpenAPI::fromJsonValue(m_transcript_object_config, json[QString("transcriptObjectConfig")]);
    m_transcript_object_config_isSet = !json[QString("transcriptObjectConfig")].isNull() && m_transcript_object_config_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_conversation_config.isSet()) {
        obj.insert(QString("conversationConfig"), ::OpenAPI::toJsonValue(m_conversation_config));
    }
    if (m_gcs_source.isSet()) {
        obj.insert(QString("gcsSource"), ::OpenAPI::toJsonValue(m_gcs_source));
    }
    if (m_parent_isSet) {
        obj.insert(QString("parent"), ::OpenAPI::toJsonValue(m_parent));
    }
    if (m_redaction_config.isSet()) {
        obj.insert(QString("redactionConfig"), ::OpenAPI::toJsonValue(m_redaction_config));
    }
    if (m_speech_config.isSet()) {
        obj.insert(QString("speechConfig"), ::OpenAPI::toJsonValue(m_speech_config));
    }
    if (m_transcript_object_config.isSet()) {
        obj.insert(QString("transcriptObjectConfig"), ::OpenAPI::toJsonValue(m_transcript_object_config));
    }
    return obj;
}

OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::getConversationConfig() const {
    return m_conversation_config;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::setConversationConfig(const OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig &conversation_config) {
    m_conversation_config = conversation_config;
    m_conversation_config_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::is_conversation_config_Set() const{
    return m_conversation_config_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::is_conversation_config_Valid() const{
    return m_conversation_config_isValid;
}

OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::getGcsSource() const {
    return m_gcs_source;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::setGcsSource(const OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource &gcs_source) {
    m_gcs_source = gcs_source;
    m_gcs_source_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::is_gcs_source_Set() const{
    return m_gcs_source_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::is_gcs_source_Valid() const{
    return m_gcs_source_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::getParent() const {
    return m_parent;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::setParent(const QString &parent) {
    m_parent = parent;
    m_parent_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::is_parent_Set() const{
    return m_parent_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::is_parent_Valid() const{
    return m_parent_isValid;
}

OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::getRedactionConfig() const {
    return m_redaction_config;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::setRedactionConfig(const OAIGoogleCloudContactcenterinsightsV1alpha1RedactionConfig &redaction_config) {
    m_redaction_config = redaction_config;
    m_redaction_config_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::is_redaction_config_Set() const{
    return m_redaction_config_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::is_redaction_config_Valid() const{
    return m_redaction_config_isValid;
}

OAIGoogleCloudContactcenterinsightsV1alpha1SpeechConfig OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::getSpeechConfig() const {
    return m_speech_config;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::setSpeechConfig(const OAIGoogleCloudContactcenterinsightsV1alpha1SpeechConfig &speech_config) {
    m_speech_config = speech_config;
    m_speech_config_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::is_speech_config_Set() const{
    return m_speech_config_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::is_speech_config_Valid() const{
    return m_speech_config_isValid;
}

OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::getTranscriptObjectConfig() const {
    return m_transcript_object_config;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::setTranscriptObjectConfig(const OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig &transcript_object_config) {
    m_transcript_object_config = transcript_object_config;
    m_transcript_object_config_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::is_transcript_object_config_Set() const{
    return m_transcript_object_config_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::is_transcript_object_config_Valid() const{
    return m_transcript_object_config_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_conversation_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_gcs_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_redaction_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_speech_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_transcript_object_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
