/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig::OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig::OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig::~OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig() {}

void OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig::initializeModel() {

    m_filter_isSet = false;
    m_filter_isValid = false;

    m_medium_isSet = false;
    m_medium_isValid = false;

    m_training_conversations_count_isSet = false;
    m_training_conversations_count_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig::fromJsonObject(QJsonObject json) {

    m_filter_isValid = ::OpenAPI::fromJsonValue(m_filter, json[QString("filter")]);
    m_filter_isSet = !json[QString("filter")].isNull() && m_filter_isValid;

    m_medium_isValid = ::OpenAPI::fromJsonValue(m_medium, json[QString("medium")]);
    m_medium_isSet = !json[QString("medium")].isNull() && m_medium_isValid;

    m_training_conversations_count_isValid = ::OpenAPI::fromJsonValue(m_training_conversations_count, json[QString("trainingConversationsCount")]);
    m_training_conversations_count_isSet = !json[QString("trainingConversationsCount")].isNull() && m_training_conversations_count_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_filter_isSet) {
        obj.insert(QString("filter"), ::OpenAPI::toJsonValue(m_filter));
    }
    if (m_medium_isSet) {
        obj.insert(QString("medium"), ::OpenAPI::toJsonValue(m_medium));
    }
    if (m_training_conversations_count_isSet) {
        obj.insert(QString("trainingConversationsCount"), ::OpenAPI::toJsonValue(m_training_conversations_count));
    }
    return obj;
}

QString OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig::getFilter() const {
    return m_filter;
}
void OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig::setFilter(const QString &filter) {
    m_filter = filter;
    m_filter_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig::is_filter_Set() const{
    return m_filter_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig::is_filter_Valid() const{
    return m_filter_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig::getMedium() const {
    return m_medium;
}
void OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig::setMedium(const QString &medium) {
    m_medium = medium;
    m_medium_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig::is_medium_Set() const{
    return m_medium_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig::is_medium_Valid() const{
    return m_medium_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig::getTrainingConversationsCount() const {
    return m_training_conversations_count;
}
void OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig::setTrainingConversationsCount(const QString &training_conversations_count) {
    m_training_conversations_count = training_conversations_count;
    m_training_conversations_count_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig::is_training_conversations_count_Set() const{
    return m_training_conversations_count_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig::is_training_conversations_count_Valid() const{
    return m_training_conversations_count_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_filter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_medium_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_training_conversations_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1IssueModelInputDataConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
