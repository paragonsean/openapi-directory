/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary::OAIGoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary::OAIGoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary() {
    this->initializeModel();
}

OAIGoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary::~OAIGoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary() {}

void OAIGoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary::initializeModel() {

    m_transcript_index_isSet = false;
    m_transcript_index_isValid = false;

    m_word_index_isSet = false;
    m_word_index_isValid = false;
}

void OAIGoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary::fromJsonObject(QJsonObject json) {

    m_transcript_index_isValid = ::OpenAPI::fromJsonValue(m_transcript_index, json[QString("transcriptIndex")]);
    m_transcript_index_isSet = !json[QString("transcriptIndex")].isNull() && m_transcript_index_isValid;

    m_word_index_isValid = ::OpenAPI::fromJsonValue(m_word_index, json[QString("wordIndex")]);
    m_word_index_isSet = !json[QString("wordIndex")].isNull() && m_word_index_isValid;
}

QString OAIGoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary::asJsonObject() const {
    QJsonObject obj;
    if (m_transcript_index_isSet) {
        obj.insert(QString("transcriptIndex"), ::OpenAPI::toJsonValue(m_transcript_index));
    }
    if (m_word_index_isSet) {
        obj.insert(QString("wordIndex"), ::OpenAPI::toJsonValue(m_word_index));
    }
    return obj;
}

qint32 OAIGoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary::getTranscriptIndex() const {
    return m_transcript_index;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary::setTranscriptIndex(const qint32 &transcript_index) {
    m_transcript_index = transcript_index;
    m_transcript_index_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary::is_transcript_index_Set() const{
    return m_transcript_index_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary::is_transcript_index_Valid() const{
    return m_transcript_index_isValid;
}

qint32 OAIGoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary::getWordIndex() const {
    return m_word_index;
}
void OAIGoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary::setWordIndex(const qint32 &word_index) {
    m_word_index = word_index;
    m_word_index_isSet = true;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary::is_word_index_Set() const{
    return m_word_index_isSet;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary::is_word_index_Valid() const{
    return m_word_index_isValid;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_transcript_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_word_index_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
