# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_contactcenterinsights_v1_phrase_match_rule import GoogleCloudContactcenterinsightsV1PhraseMatchRule
from openapi_server import util


class GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, phrase_match_rules: List[GoogleCloudContactcenterinsightsV1PhraseMatchRule]=None, type: str=None):
        """GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup - a model defined in OpenAPI

        :param phrase_match_rules: The phrase_match_rules of this GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup.
        :param type: The type of this GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup.
        """
        self.openapi_types = {
            'phrase_match_rules': List[GoogleCloudContactcenterinsightsV1PhraseMatchRule],
            'type': str
        }

        self.attribute_map = {
            'phrase_match_rules': 'phraseMatchRules',
            'type': 'type'
        }

        self._phrase_match_rules = phrase_match_rules
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup of this GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def phrase_match_rules(self):
        """Gets the phrase_match_rules of this GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup.

        A list of phrase match rules that are included in this group.

        :return: The phrase_match_rules of this GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup.
        :rtype: List[GoogleCloudContactcenterinsightsV1PhraseMatchRule]
        """
        return self._phrase_match_rules

    @phrase_match_rules.setter
    def phrase_match_rules(self, phrase_match_rules):
        """Sets the phrase_match_rules of this GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup.

        A list of phrase match rules that are included in this group.

        :param phrase_match_rules: The phrase_match_rules of this GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup.
        :type phrase_match_rules: List[GoogleCloudContactcenterinsightsV1PhraseMatchRule]
        """

        self._phrase_match_rules = phrase_match_rules

    @property
    def type(self):
        """Gets the type of this GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup.

        Required. The type of this phrase match rule group.

        :return: The type of this GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup.

        Required. The type of this phrase match rule group.

        :param type: The type of this GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup.
        :type type: str
        """
        allowed_values = ["PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED", "ALL_OF", "ANY_OF"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
