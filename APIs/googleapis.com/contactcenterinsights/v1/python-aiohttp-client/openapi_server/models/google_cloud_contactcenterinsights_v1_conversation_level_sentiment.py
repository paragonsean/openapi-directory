# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_contactcenterinsights_v1_sentiment_data import GoogleCloudContactcenterinsightsV1SentimentData
from openapi_server import util


class GoogleCloudContactcenterinsightsV1ConversationLevelSentiment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel_tag: int=None, sentiment_data: GoogleCloudContactcenterinsightsV1SentimentData=None):
        """GoogleCloudContactcenterinsightsV1ConversationLevelSentiment - a model defined in OpenAPI

        :param channel_tag: The channel_tag of this GoogleCloudContactcenterinsightsV1ConversationLevelSentiment.
        :param sentiment_data: The sentiment_data of this GoogleCloudContactcenterinsightsV1ConversationLevelSentiment.
        """
        self.openapi_types = {
            'channel_tag': int,
            'sentiment_data': GoogleCloudContactcenterinsightsV1SentimentData
        }

        self.attribute_map = {
            'channel_tag': 'channelTag',
            'sentiment_data': 'sentimentData'
        }

        self._channel_tag = channel_tag
        self._sentiment_data = sentiment_data

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudContactcenterinsightsV1ConversationLevelSentiment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudContactcenterinsightsV1ConversationLevelSentiment of this GoogleCloudContactcenterinsightsV1ConversationLevelSentiment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel_tag(self):
        """Gets the channel_tag of this GoogleCloudContactcenterinsightsV1ConversationLevelSentiment.

        The channel of the audio that the data applies to.

        :return: The channel_tag of this GoogleCloudContactcenterinsightsV1ConversationLevelSentiment.
        :rtype: int
        """
        return self._channel_tag

    @channel_tag.setter
    def channel_tag(self, channel_tag):
        """Sets the channel_tag of this GoogleCloudContactcenterinsightsV1ConversationLevelSentiment.

        The channel of the audio that the data applies to.

        :param channel_tag: The channel_tag of this GoogleCloudContactcenterinsightsV1ConversationLevelSentiment.
        :type channel_tag: int
        """

        self._channel_tag = channel_tag

    @property
    def sentiment_data(self):
        """Gets the sentiment_data of this GoogleCloudContactcenterinsightsV1ConversationLevelSentiment.


        :return: The sentiment_data of this GoogleCloudContactcenterinsightsV1ConversationLevelSentiment.
        :rtype: GoogleCloudContactcenterinsightsV1SentimentData
        """
        return self._sentiment_data

    @sentiment_data.setter
    def sentiment_data(self, sentiment_data):
        """Sets the sentiment_data of this GoogleCloudContactcenterinsightsV1ConversationLevelSentiment.


        :param sentiment_data: The sentiment_data of this GoogleCloudContactcenterinsightsV1ConversationLevelSentiment.
        :type sentiment_data: GoogleCloudContactcenterinsightsV1SentimentData
        """

        self._sentiment_data = sentiment_data
