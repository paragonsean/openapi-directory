# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_contactcenterinsights_v1_calculate_stats_response_time_series import GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries
from openapi_server.models.google_cloud_contactcenterinsights_v1_issue_model_label_stats_issue_stats import GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
from openapi_server import util


class GoogleCloudContactcenterinsightsV1CalculateStatsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, average_duration: str=None, average_turn_count: int=None, conversation_count: int=None, conversation_count_time_series: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries=None, custom_highlighter_matches: Dict[str, int]=None, issue_matches: Dict[str, int]=None, issue_matches_stats: Dict[str, GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats]=None, smart_highlighter_matches: Dict[str, int]=None):
        """GoogleCloudContactcenterinsightsV1CalculateStatsResponse - a model defined in OpenAPI

        :param average_duration: The average_duration of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
        :param average_turn_count: The average_turn_count of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
        :param conversation_count: The conversation_count of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
        :param conversation_count_time_series: The conversation_count_time_series of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
        :param custom_highlighter_matches: The custom_highlighter_matches of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
        :param issue_matches: The issue_matches of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
        :param issue_matches_stats: The issue_matches_stats of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
        :param smart_highlighter_matches: The smart_highlighter_matches of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
        """
        self.openapi_types = {
            'average_duration': str,
            'average_turn_count': int,
            'conversation_count': int,
            'conversation_count_time_series': GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries,
            'custom_highlighter_matches': Dict[str, int],
            'issue_matches': Dict[str, int],
            'issue_matches_stats': Dict[str, GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats],
            'smart_highlighter_matches': Dict[str, int]
        }

        self.attribute_map = {
            'average_duration': 'averageDuration',
            'average_turn_count': 'averageTurnCount',
            'conversation_count': 'conversationCount',
            'conversation_count_time_series': 'conversationCountTimeSeries',
            'custom_highlighter_matches': 'customHighlighterMatches',
            'issue_matches': 'issueMatches',
            'issue_matches_stats': 'issueMatchesStats',
            'smart_highlighter_matches': 'smartHighlighterMatches'
        }

        self._average_duration = average_duration
        self._average_turn_count = average_turn_count
        self._conversation_count = conversation_count
        self._conversation_count_time_series = conversation_count_time_series
        self._custom_highlighter_matches = custom_highlighter_matches
        self._issue_matches = issue_matches
        self._issue_matches_stats = issue_matches_stats
        self._smart_highlighter_matches = smart_highlighter_matches

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudContactcenterinsightsV1CalculateStatsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudContactcenterinsightsV1CalculateStatsResponse of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def average_duration(self):
        """Gets the average_duration of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.

        The average duration of all conversations. The average is calculated using only conversations that have a time duration.

        :return: The average_duration of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
        :rtype: str
        """
        return self._average_duration

    @average_duration.setter
    def average_duration(self, average_duration):
        """Sets the average_duration of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.

        The average duration of all conversations. The average is calculated using only conversations that have a time duration.

        :param average_duration: The average_duration of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
        :type average_duration: str
        """

        self._average_duration = average_duration

    @property
    def average_turn_count(self):
        """Gets the average_turn_count of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.

        The average number of turns per conversation.

        :return: The average_turn_count of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
        :rtype: int
        """
        return self._average_turn_count

    @average_turn_count.setter
    def average_turn_count(self, average_turn_count):
        """Sets the average_turn_count of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.

        The average number of turns per conversation.

        :param average_turn_count: The average_turn_count of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
        :type average_turn_count: int
        """

        self._average_turn_count = average_turn_count

    @property
    def conversation_count(self):
        """Gets the conversation_count of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.

        The total number of conversations.

        :return: The conversation_count of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
        :rtype: int
        """
        return self._conversation_count

    @conversation_count.setter
    def conversation_count(self, conversation_count):
        """Sets the conversation_count of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.

        The total number of conversations.

        :param conversation_count: The conversation_count of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
        :type conversation_count: int
        """

        self._conversation_count = conversation_count

    @property
    def conversation_count_time_series(self):
        """Gets the conversation_count_time_series of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.


        :return: The conversation_count_time_series of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
        :rtype: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries
        """
        return self._conversation_count_time_series

    @conversation_count_time_series.setter
    def conversation_count_time_series(self, conversation_count_time_series):
        """Sets the conversation_count_time_series of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.


        :param conversation_count_time_series: The conversation_count_time_series of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
        :type conversation_count_time_series: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries
        """

        self._conversation_count_time_series = conversation_count_time_series

    @property
    def custom_highlighter_matches(self):
        """Gets the custom_highlighter_matches of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.

        A map associating each custom highlighter resource name with its respective number of matches in the set of conversations.

        :return: The custom_highlighter_matches of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
        :rtype: Dict[str, int]
        """
        return self._custom_highlighter_matches

    @custom_highlighter_matches.setter
    def custom_highlighter_matches(self, custom_highlighter_matches):
        """Sets the custom_highlighter_matches of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.

        A map associating each custom highlighter resource name with its respective number of matches in the set of conversations.

        :param custom_highlighter_matches: The custom_highlighter_matches of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
        :type custom_highlighter_matches: Dict[str, int]
        """

        self._custom_highlighter_matches = custom_highlighter_matches

    @property
    def issue_matches(self):
        """Gets the issue_matches of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.

        A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/` Deprecated, use `issue_matches_stats` field instead.

        :return: The issue_matches of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
        :rtype: Dict[str, int]
        """
        return self._issue_matches

    @issue_matches.setter
    def issue_matches(self, issue_matches):
        """Sets the issue_matches of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.

        A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/` Deprecated, use `issue_matches_stats` field instead.

        :param issue_matches: The issue_matches of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
        :type issue_matches: Dict[str, int]
        """

        self._issue_matches = issue_matches

    @property
    def issue_matches_stats(self):
        """Gets the issue_matches_stats of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.

        A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/`

        :return: The issue_matches_stats of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
        :rtype: Dict[str, GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats]
        """
        return self._issue_matches_stats

    @issue_matches_stats.setter
    def issue_matches_stats(self, issue_matches_stats):
        """Sets the issue_matches_stats of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.

        A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/`

        :param issue_matches_stats: The issue_matches_stats of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
        :type issue_matches_stats: Dict[str, GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats]
        """

        self._issue_matches_stats = issue_matches_stats

    @property
    def smart_highlighter_matches(self):
        """Gets the smart_highlighter_matches of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.

        A map associating each smart highlighter display name with its respective number of matches in the set of conversations.

        :return: The smart_highlighter_matches of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
        :rtype: Dict[str, int]
        """
        return self._smart_highlighter_matches

    @smart_highlighter_matches.setter
    def smart_highlighter_matches(self, smart_highlighter_matches):
        """Sets the smart_highlighter_matches of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.

        A map associating each smart highlighter display name with its respective number of matches in the set of conversations.

        :param smart_highlighter_matches: The smart_highlighter_matches of this GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
        :type smart_highlighter_matches: Dict[str, int]
        """

        self._smart_highlighter_matches = smart_highlighter_matches
