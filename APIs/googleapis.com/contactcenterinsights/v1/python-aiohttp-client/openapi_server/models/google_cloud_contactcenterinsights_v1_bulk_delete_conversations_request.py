# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filter: str=None, force: bool=None, max_delete_count: int=None, parent: str=None):
        """GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest - a model defined in OpenAPI

        :param filter: The filter of this GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest.
        :param force: The force of this GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest.
        :param max_delete_count: The max_delete_count of this GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest.
        :param parent: The parent of this GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest.
        """
        self.openapi_types = {
            'filter': str,
            'force': bool,
            'max_delete_count': int,
            'parent': str
        }

        self.attribute_map = {
            'filter': 'filter',
            'force': 'force',
            'max_delete_count': 'maxDeleteCount',
            'parent': 'parent'
        }

        self._filter = filter
        self._force = force
        self._max_delete_count = max_delete_count
        self._parent = parent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest of this GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filter(self):
        """Gets the filter of this GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest.

        Filter used to select the subset of conversations to delete.

        :return: The filter of this GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest.
        :rtype: str
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest.

        Filter used to select the subset of conversations to delete.

        :param filter: The filter of this GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest.
        :type filter: str
        """

        self._filter = filter

    @property
    def force(self):
        """Gets the force of this GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest.

        If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses.

        :return: The force of this GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest.
        :rtype: bool
        """
        return self._force

    @force.setter
    def force(self, force):
        """Sets the force of this GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest.

        If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses.

        :param force: The force of this GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest.
        :type force: bool
        """

        self._force = force

    @property
    def max_delete_count(self):
        """Gets the max_delete_count of this GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest.

        Maximum number of conversations to delete.

        :return: The max_delete_count of this GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest.
        :rtype: int
        """
        return self._max_delete_count

    @max_delete_count.setter
    def max_delete_count(self, max_delete_count):
        """Sets the max_delete_count of this GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest.

        Maximum number of conversations to delete.

        :param max_delete_count: The max_delete_count of this GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest.
        :type max_delete_count: int
        """

        self._max_delete_count = max_delete_count

    @property
    def parent(self):
        """Gets the parent of this GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest.

        Required. The parent resource to delete conversations from. Format: projects/{project}/locations/{location}

        :return: The parent of this GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest.
        :rtype: str
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest.

        Required. The parent resource to delete conversations from. Format: projects/{project}/locations/{location}

        :param parent: The parent of this GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest.
        :type parent: str
        """

        self._parent = parent
