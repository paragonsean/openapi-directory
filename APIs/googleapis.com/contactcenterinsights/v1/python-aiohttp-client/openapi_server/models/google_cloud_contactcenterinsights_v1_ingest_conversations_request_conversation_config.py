# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent_channel: int=None, agent_id: str=None, customer_channel: int=None):
        """GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig - a model defined in OpenAPI

        :param agent_channel: The agent_channel of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig.
        :param agent_id: The agent_id of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig.
        :param customer_channel: The customer_channel of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig.
        """
        self.openapi_types = {
            'agent_channel': int,
            'agent_id': str,
            'customer_channel': int
        }

        self.attribute_map = {
            'agent_channel': 'agentChannel',
            'agent_id': 'agentId',
            'customer_channel': 'customerChannel'
        }

        self._agent_channel = agent_channel
        self._agent_id = agent_id
        self._customer_channel = customer_channel

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent_channel(self):
        """Gets the agent_channel of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig.

        Optional. Indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for conversations to be properly displayed and analyzed.

        :return: The agent_channel of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig.
        :rtype: int
        """
        return self._agent_channel

    @agent_channel.setter
    def agent_channel(self, agent_channel):
        """Sets the agent_channel of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig.

        Optional. Indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for conversations to be properly displayed and analyzed.

        :param agent_channel: The agent_channel of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig.
        :type agent_channel: int
        """

        self._agent_channel = agent_channel

    @property
    def agent_id(self):
        """Gets the agent_id of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig.

        An opaque, user-specified string representing the human agent who handled the conversations.

        :return: The agent_id of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig.
        :rtype: str
        """
        return self._agent_id

    @agent_id.setter
    def agent_id(self, agent_id):
        """Sets the agent_id of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig.

        An opaque, user-specified string representing the human agent who handled the conversations.

        :param agent_id: The agent_id of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig.
        :type agent_id: str
        """

        self._agent_id = agent_id

    @property
    def customer_channel(self):
        """Gets the customer_channel of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig.

        Optional. Indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for conversations to be properly displayed and analyzed.

        :return: The customer_channel of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig.
        :rtype: int
        """
        return self._customer_channel

    @customer_channel.setter
    def customer_channel(self, customer_channel):
        """Sets the customer_channel of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig.

        Optional. Indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for conversations to be properly displayed and analyzed.

        :param customer_channel: The customer_channel of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig.
        :type customer_channel: int
        """

        self._customer_channel = customer_channel
