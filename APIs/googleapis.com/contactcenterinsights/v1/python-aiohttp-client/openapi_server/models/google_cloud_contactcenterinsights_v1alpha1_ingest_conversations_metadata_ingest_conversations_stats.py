# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duplicates_skipped_count: int=None, failed_ingest_count: int=None, processed_object_count: int=None, successful_ingest_count: int=None):
        """GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats - a model defined in OpenAPI

        :param duplicates_skipped_count: The duplicates_skipped_count of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats.
        :param failed_ingest_count: The failed_ingest_count of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats.
        :param processed_object_count: The processed_object_count of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats.
        :param successful_ingest_count: The successful_ingest_count of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats.
        """
        self.openapi_types = {
            'duplicates_skipped_count': int,
            'failed_ingest_count': int,
            'processed_object_count': int,
            'successful_ingest_count': int
        }

        self.attribute_map = {
            'duplicates_skipped_count': 'duplicatesSkippedCount',
            'failed_ingest_count': 'failedIngestCount',
            'processed_object_count': 'processedObjectCount',
            'successful_ingest_count': 'successfulIngestCount'
        }

        self._duplicates_skipped_count = duplicates_skipped_count
        self._failed_ingest_count = failed_ingest_count
        self._processed_object_count = processed_object_count
        self._successful_ingest_count = successful_ingest_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duplicates_skipped_count(self):
        """Gets the duplicates_skipped_count of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats.

        Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.

        :return: The duplicates_skipped_count of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats.
        :rtype: int
        """
        return self._duplicates_skipped_count

    @duplicates_skipped_count.setter
    def duplicates_skipped_count(self, duplicates_skipped_count):
        """Sets the duplicates_skipped_count of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats.

        Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.

        :param duplicates_skipped_count: The duplicates_skipped_count of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats.
        :type duplicates_skipped_count: int
        """

        self._duplicates_skipped_count = duplicates_skipped_count

    @property
    def failed_ingest_count(self):
        """Gets the failed_ingest_count of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats.

        Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.

        :return: The failed_ingest_count of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats.
        :rtype: int
        """
        return self._failed_ingest_count

    @failed_ingest_count.setter
    def failed_ingest_count(self, failed_ingest_count):
        """Sets the failed_ingest_count of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats.

        Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.

        :param failed_ingest_count: The failed_ingest_count of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats.
        :type failed_ingest_count: int
        """

        self._failed_ingest_count = failed_ingest_count

    @property
    def processed_object_count(self):
        """Gets the processed_object_count of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats.

        Output only. The number of objects processed during the ingest operation.

        :return: The processed_object_count of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats.
        :rtype: int
        """
        return self._processed_object_count

    @processed_object_count.setter
    def processed_object_count(self, processed_object_count):
        """Sets the processed_object_count of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats.

        Output only. The number of objects processed during the ingest operation.

        :param processed_object_count: The processed_object_count of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats.
        :type processed_object_count: int
        """

        self._processed_object_count = processed_object_count

    @property
    def successful_ingest_count(self):
        """Gets the successful_ingest_count of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats.

        Output only. The number of new conversations added during this ingest operation.

        :return: The successful_ingest_count of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats.
        :rtype: int
        """
        return self._successful_ingest_count

    @successful_ingest_count.setter
    def successful_ingest_count(self, successful_ingest_count):
        """Sets the successful_ingest_count of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats.

        Output only. The number of new conversations added during this ingest operation.

        :param successful_ingest_count: The successful_ingest_count of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats.
        :type successful_ingest_count: int
        """

        self._successful_ingest_count = successful_ingest_count
