# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_contactcenterinsights_v1_sentiment_data import GoogleCloudContactcenterinsightsV1SentimentData
from openapi_server import util


class GoogleCloudContactcenterinsightsV1Entity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, metadata: Dict[str, str]=None, salience: float=None, sentiment: GoogleCloudContactcenterinsightsV1SentimentData=None, type: str=None):
        """GoogleCloudContactcenterinsightsV1Entity - a model defined in OpenAPI

        :param display_name: The display_name of this GoogleCloudContactcenterinsightsV1Entity.
        :param metadata: The metadata of this GoogleCloudContactcenterinsightsV1Entity.
        :param salience: The salience of this GoogleCloudContactcenterinsightsV1Entity.
        :param sentiment: The sentiment of this GoogleCloudContactcenterinsightsV1Entity.
        :param type: The type of this GoogleCloudContactcenterinsightsV1Entity.
        """
        self.openapi_types = {
            'display_name': str,
            'metadata': Dict[str, str],
            'salience': float,
            'sentiment': GoogleCloudContactcenterinsightsV1SentimentData,
            'type': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'metadata': 'metadata',
            'salience': 'salience',
            'sentiment': 'sentiment',
            'type': 'type'
        }

        self._display_name = display_name
        self._metadata = metadata
        self._salience = salience
        self._sentiment = sentiment
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudContactcenterinsightsV1Entity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudContactcenterinsightsV1Entity of this GoogleCloudContactcenterinsightsV1Entity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudContactcenterinsightsV1Entity.

        The representative name for the entity.

        :return: The display_name of this GoogleCloudContactcenterinsightsV1Entity.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudContactcenterinsightsV1Entity.

        The representative name for the entity.

        :param display_name: The display_name of this GoogleCloudContactcenterinsightsV1Entity.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def metadata(self):
        """Gets the metadata of this GoogleCloudContactcenterinsightsV1Entity.

        Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.

        :return: The metadata of this GoogleCloudContactcenterinsightsV1Entity.
        :rtype: Dict[str, str]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this GoogleCloudContactcenterinsightsV1Entity.

        Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.

        :param metadata: The metadata of this GoogleCloudContactcenterinsightsV1Entity.
        :type metadata: Dict[str, str]
        """

        self._metadata = metadata

    @property
    def salience(self):
        """Gets the salience of this GoogleCloudContactcenterinsightsV1Entity.

        The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.

        :return: The salience of this GoogleCloudContactcenterinsightsV1Entity.
        :rtype: float
        """
        return self._salience

    @salience.setter
    def salience(self, salience):
        """Sets the salience of this GoogleCloudContactcenterinsightsV1Entity.

        The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.

        :param salience: The salience of this GoogleCloudContactcenterinsightsV1Entity.
        :type salience: float
        """

        self._salience = salience

    @property
    def sentiment(self):
        """Gets the sentiment of this GoogleCloudContactcenterinsightsV1Entity.


        :return: The sentiment of this GoogleCloudContactcenterinsightsV1Entity.
        :rtype: GoogleCloudContactcenterinsightsV1SentimentData
        """
        return self._sentiment

    @sentiment.setter
    def sentiment(self, sentiment):
        """Sets the sentiment of this GoogleCloudContactcenterinsightsV1Entity.


        :param sentiment: The sentiment of this GoogleCloudContactcenterinsightsV1Entity.
        :type sentiment: GoogleCloudContactcenterinsightsV1SentimentData
        """

        self._sentiment = sentiment

    @property
    def type(self):
        """Gets the type of this GoogleCloudContactcenterinsightsV1Entity.

        The entity type.

        :return: The type of this GoogleCloudContactcenterinsightsV1Entity.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleCloudContactcenterinsightsV1Entity.

        The entity type.

        :param type: The type of this GoogleCloudContactcenterinsightsV1Entity.
        :type type: str
        """
        allowed_values = ["TYPE_UNSPECIFIED", "PERSON", "LOCATION", "ORGANIZATION", "EVENT", "WORK_OF_ART", "CONSUMER_GOOD", "OTHER", "PHONE_NUMBER", "ADDRESS", "DATE", "NUMBER", "PRICE"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
