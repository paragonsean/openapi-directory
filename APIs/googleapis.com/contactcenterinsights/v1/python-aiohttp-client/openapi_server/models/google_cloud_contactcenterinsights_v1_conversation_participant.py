# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudContactcenterinsightsV1ConversationParticipant(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dialogflow_participant: str=None, dialogflow_participant_name: str=None, obfuscated_external_user_id: str=None, role: str=None, user_id: str=None):
        """GoogleCloudContactcenterinsightsV1ConversationParticipant - a model defined in OpenAPI

        :param dialogflow_participant: The dialogflow_participant of this GoogleCloudContactcenterinsightsV1ConversationParticipant.
        :param dialogflow_participant_name: The dialogflow_participant_name of this GoogleCloudContactcenterinsightsV1ConversationParticipant.
        :param obfuscated_external_user_id: The obfuscated_external_user_id of this GoogleCloudContactcenterinsightsV1ConversationParticipant.
        :param role: The role of this GoogleCloudContactcenterinsightsV1ConversationParticipant.
        :param user_id: The user_id of this GoogleCloudContactcenterinsightsV1ConversationParticipant.
        """
        self.openapi_types = {
            'dialogflow_participant': str,
            'dialogflow_participant_name': str,
            'obfuscated_external_user_id': str,
            'role': str,
            'user_id': str
        }

        self.attribute_map = {
            'dialogflow_participant': 'dialogflowParticipant',
            'dialogflow_participant_name': 'dialogflowParticipantName',
            'obfuscated_external_user_id': 'obfuscatedExternalUserId',
            'role': 'role',
            'user_id': 'userId'
        }

        self._dialogflow_participant = dialogflow_participant
        self._dialogflow_participant_name = dialogflow_participant_name
        self._obfuscated_external_user_id = obfuscated_external_user_id
        self._role = role
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudContactcenterinsightsV1ConversationParticipant':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudContactcenterinsightsV1ConversationParticipant of this GoogleCloudContactcenterinsightsV1ConversationParticipant.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dialogflow_participant(self):
        """Gets the dialogflow_participant of this GoogleCloudContactcenterinsightsV1ConversationParticipant.

        Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}

        :return: The dialogflow_participant of this GoogleCloudContactcenterinsightsV1ConversationParticipant.
        :rtype: str
        """
        return self._dialogflow_participant

    @dialogflow_participant.setter
    def dialogflow_participant(self, dialogflow_participant):
        """Sets the dialogflow_participant of this GoogleCloudContactcenterinsightsV1ConversationParticipant.

        Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}

        :param dialogflow_participant: The dialogflow_participant of this GoogleCloudContactcenterinsightsV1ConversationParticipant.
        :type dialogflow_participant: str
        """

        self._dialogflow_participant = dialogflow_participant

    @property
    def dialogflow_participant_name(self):
        """Gets the dialogflow_participant_name of this GoogleCloudContactcenterinsightsV1ConversationParticipant.

        The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}

        :return: The dialogflow_participant_name of this GoogleCloudContactcenterinsightsV1ConversationParticipant.
        :rtype: str
        """
        return self._dialogflow_participant_name

    @dialogflow_participant_name.setter
    def dialogflow_participant_name(self, dialogflow_participant_name):
        """Sets the dialogflow_participant_name of this GoogleCloudContactcenterinsightsV1ConversationParticipant.

        The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}

        :param dialogflow_participant_name: The dialogflow_participant_name of this GoogleCloudContactcenterinsightsV1ConversationParticipant.
        :type dialogflow_participant_name: str
        """

        self._dialogflow_participant_name = dialogflow_participant_name

    @property
    def obfuscated_external_user_id(self):
        """Gets the obfuscated_external_user_id of this GoogleCloudContactcenterinsightsV1ConversationParticipant.

        Obfuscated user ID from Dialogflow.

        :return: The obfuscated_external_user_id of this GoogleCloudContactcenterinsightsV1ConversationParticipant.
        :rtype: str
        """
        return self._obfuscated_external_user_id

    @obfuscated_external_user_id.setter
    def obfuscated_external_user_id(self, obfuscated_external_user_id):
        """Sets the obfuscated_external_user_id of this GoogleCloudContactcenterinsightsV1ConversationParticipant.

        Obfuscated user ID from Dialogflow.

        :param obfuscated_external_user_id: The obfuscated_external_user_id of this GoogleCloudContactcenterinsightsV1ConversationParticipant.
        :type obfuscated_external_user_id: str
        """

        self._obfuscated_external_user_id = obfuscated_external_user_id

    @property
    def role(self):
        """Gets the role of this GoogleCloudContactcenterinsightsV1ConversationParticipant.

        The role of the participant.

        :return: The role of this GoogleCloudContactcenterinsightsV1ConversationParticipant.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role):
        """Sets the role of this GoogleCloudContactcenterinsightsV1ConversationParticipant.

        The role of the participant.

        :param role: The role of this GoogleCloudContactcenterinsightsV1ConversationParticipant.
        :type role: str
        """
        allowed_values = ["ROLE_UNSPECIFIED", "HUMAN_AGENT", "AUTOMATED_AGENT", "END_USER", "ANY_AGENT"]  # noqa: E501
        if role not in allowed_values:
            raise ValueError(
                "Invalid value for `role` ({0}), must be one of {1}"
                .format(role, allowed_values)
            )

        self._role = role

    @property
    def user_id(self):
        """Gets the user_id of this GoogleCloudContactcenterinsightsV1ConversationParticipant.

        A user-specified ID representing the participant.

        :return: The user_id of this GoogleCloudContactcenterinsightsV1ConversationParticipant.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this GoogleCloudContactcenterinsightsV1ConversationParticipant.

        A user-specified ID representing the participant.

        :param user_id: The user_id of this GoogleCloudContactcenterinsightsV1ConversationParticipant.
        :type user_id: str
        """

        self._user_id = user_id
