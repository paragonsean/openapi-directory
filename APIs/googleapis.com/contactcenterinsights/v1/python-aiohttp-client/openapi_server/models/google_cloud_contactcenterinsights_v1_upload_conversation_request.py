# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_contactcenterinsights_v1_conversation import GoogleCloudContactcenterinsightsV1Conversation
from openapi_server.models.google_cloud_contactcenterinsights_v1_redaction_config import GoogleCloudContactcenterinsightsV1RedactionConfig
from openapi_server.models.google_cloud_contactcenterinsights_v1_speech_config import GoogleCloudContactcenterinsightsV1SpeechConfig
from openapi_server import util


class GoogleCloudContactcenterinsightsV1UploadConversationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conversation: GoogleCloudContactcenterinsightsV1Conversation=None, conversation_id: str=None, parent: str=None, redaction_config: GoogleCloudContactcenterinsightsV1RedactionConfig=None, speech_config: GoogleCloudContactcenterinsightsV1SpeechConfig=None):
        """GoogleCloudContactcenterinsightsV1UploadConversationRequest - a model defined in OpenAPI

        :param conversation: The conversation of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.
        :param conversation_id: The conversation_id of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.
        :param parent: The parent of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.
        :param redaction_config: The redaction_config of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.
        :param speech_config: The speech_config of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.
        """
        self.openapi_types = {
            'conversation': GoogleCloudContactcenterinsightsV1Conversation,
            'conversation_id': str,
            'parent': str,
            'redaction_config': GoogleCloudContactcenterinsightsV1RedactionConfig,
            'speech_config': GoogleCloudContactcenterinsightsV1SpeechConfig
        }

        self.attribute_map = {
            'conversation': 'conversation',
            'conversation_id': 'conversationId',
            'parent': 'parent',
            'redaction_config': 'redactionConfig',
            'speech_config': 'speechConfig'
        }

        self._conversation = conversation
        self._conversation_id = conversation_id
        self._parent = parent
        self._redaction_config = redaction_config
        self._speech_config = speech_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudContactcenterinsightsV1UploadConversationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudContactcenterinsightsV1UploadConversationRequest of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conversation(self):
        """Gets the conversation of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.


        :return: The conversation of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.
        :rtype: GoogleCloudContactcenterinsightsV1Conversation
        """
        return self._conversation

    @conversation.setter
    def conversation(self, conversation):
        """Sets the conversation of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.


        :param conversation: The conversation of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.
        :type conversation: GoogleCloudContactcenterinsightsV1Conversation
        """

        self._conversation = conversation

    @property
    def conversation_id(self):
        """Gets the conversation_id of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.

        Optional. A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`

        :return: The conversation_id of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.
        :rtype: str
        """
        return self._conversation_id

    @conversation_id.setter
    def conversation_id(self, conversation_id):
        """Sets the conversation_id of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.

        Optional. A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`

        :param conversation_id: The conversation_id of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.
        :type conversation_id: str
        """

        self._conversation_id = conversation_id

    @property
    def parent(self):
        """Gets the parent of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.

        Required. The parent resource of the conversation.

        :return: The parent of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.
        :rtype: str
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.

        Required. The parent resource of the conversation.

        :param parent: The parent of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.
        :type parent: str
        """

        self._parent = parent

    @property
    def redaction_config(self):
        """Gets the redaction_config of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.


        :return: The redaction_config of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.
        :rtype: GoogleCloudContactcenterinsightsV1RedactionConfig
        """
        return self._redaction_config

    @redaction_config.setter
    def redaction_config(self, redaction_config):
        """Sets the redaction_config of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.


        :param redaction_config: The redaction_config of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.
        :type redaction_config: GoogleCloudContactcenterinsightsV1RedactionConfig
        """

        self._redaction_config = redaction_config

    @property
    def speech_config(self):
        """Gets the speech_config of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.


        :return: The speech_config of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.
        :rtype: GoogleCloudContactcenterinsightsV1SpeechConfig
        """
        return self._speech_config

    @speech_config.setter
    def speech_config(self, speech_config):
        """Sets the speech_config of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.


        :param speech_config: The speech_config of this GoogleCloudContactcenterinsightsV1UploadConversationRequest.
        :type speech_config: GoogleCloudContactcenterinsightsV1SpeechConfig
        """

        self._speech_config = speech_config
