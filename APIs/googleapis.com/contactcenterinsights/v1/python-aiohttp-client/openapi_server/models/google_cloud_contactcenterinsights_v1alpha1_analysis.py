# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_contactcenterinsights_v1alpha1_analysis_result import GoogleCloudContactcenterinsightsV1alpha1AnalysisResult
from openapi_server.models.google_cloud_contactcenterinsights_v1alpha1_annotator_selector import GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
from openapi_server import util


class GoogleCloudContactcenterinsightsV1alpha1Analysis(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, analysis_result: GoogleCloudContactcenterinsightsV1alpha1AnalysisResult=None, annotator_selector: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector=None, create_time: str=None, name: str=None, request_time: str=None):
        """GoogleCloudContactcenterinsightsV1alpha1Analysis - a model defined in OpenAPI

        :param analysis_result: The analysis_result of this GoogleCloudContactcenterinsightsV1alpha1Analysis.
        :param annotator_selector: The annotator_selector of this GoogleCloudContactcenterinsightsV1alpha1Analysis.
        :param create_time: The create_time of this GoogleCloudContactcenterinsightsV1alpha1Analysis.
        :param name: The name of this GoogleCloudContactcenterinsightsV1alpha1Analysis.
        :param request_time: The request_time of this GoogleCloudContactcenterinsightsV1alpha1Analysis.
        """
        self.openapi_types = {
            'analysis_result': GoogleCloudContactcenterinsightsV1alpha1AnalysisResult,
            'annotator_selector': GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector,
            'create_time': str,
            'name': str,
            'request_time': str
        }

        self.attribute_map = {
            'analysis_result': 'analysisResult',
            'annotator_selector': 'annotatorSelector',
            'create_time': 'createTime',
            'name': 'name',
            'request_time': 'requestTime'
        }

        self._analysis_result = analysis_result
        self._annotator_selector = annotator_selector
        self._create_time = create_time
        self._name = name
        self._request_time = request_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudContactcenterinsightsV1alpha1Analysis':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudContactcenterinsightsV1alpha1Analysis of this GoogleCloudContactcenterinsightsV1alpha1Analysis.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def analysis_result(self):
        """Gets the analysis_result of this GoogleCloudContactcenterinsightsV1alpha1Analysis.


        :return: The analysis_result of this GoogleCloudContactcenterinsightsV1alpha1Analysis.
        :rtype: GoogleCloudContactcenterinsightsV1alpha1AnalysisResult
        """
        return self._analysis_result

    @analysis_result.setter
    def analysis_result(self, analysis_result):
        """Sets the analysis_result of this GoogleCloudContactcenterinsightsV1alpha1Analysis.


        :param analysis_result: The analysis_result of this GoogleCloudContactcenterinsightsV1alpha1Analysis.
        :type analysis_result: GoogleCloudContactcenterinsightsV1alpha1AnalysisResult
        """

        self._analysis_result = analysis_result

    @property
    def annotator_selector(self):
        """Gets the annotator_selector of this GoogleCloudContactcenterinsightsV1alpha1Analysis.


        :return: The annotator_selector of this GoogleCloudContactcenterinsightsV1alpha1Analysis.
        :rtype: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
        """
        return self._annotator_selector

    @annotator_selector.setter
    def annotator_selector(self, annotator_selector):
        """Sets the annotator_selector of this GoogleCloudContactcenterinsightsV1alpha1Analysis.


        :param annotator_selector: The annotator_selector of this GoogleCloudContactcenterinsightsV1alpha1Analysis.
        :type annotator_selector: GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
        """

        self._annotator_selector = annotator_selector

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudContactcenterinsightsV1alpha1Analysis.

        Output only. The time at which the analysis was created, which occurs when the long-running operation completes.

        :return: The create_time of this GoogleCloudContactcenterinsightsV1alpha1Analysis.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudContactcenterinsightsV1alpha1Analysis.

        Output only. The time at which the analysis was created, which occurs when the long-running operation completes.

        :param create_time: The create_time of this GoogleCloudContactcenterinsightsV1alpha1Analysis.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def name(self):
        """Gets the name of this GoogleCloudContactcenterinsightsV1alpha1Analysis.

        Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}

        :return: The name of this GoogleCloudContactcenterinsightsV1alpha1Analysis.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudContactcenterinsightsV1alpha1Analysis.

        Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}

        :param name: The name of this GoogleCloudContactcenterinsightsV1alpha1Analysis.
        :type name: str
        """

        self._name = name

    @property
    def request_time(self):
        """Gets the request_time of this GoogleCloudContactcenterinsightsV1alpha1Analysis.

        Output only. The time at which the analysis was requested.

        :return: The request_time of this GoogleCloudContactcenterinsightsV1alpha1Analysis.
        :rtype: str
        """
        return self._request_time

    @request_time.setter
    def request_time(self, request_time):
        """Sets the request_time of this GoogleCloudContactcenterinsightsV1alpha1Analysis.

        Output only. The time at which the analysis was requested.

        :param request_time: The request_time of this GoogleCloudContactcenterinsightsV1alpha1Analysis.
        :type request_time: str
        """

        self._request_time = request_time
