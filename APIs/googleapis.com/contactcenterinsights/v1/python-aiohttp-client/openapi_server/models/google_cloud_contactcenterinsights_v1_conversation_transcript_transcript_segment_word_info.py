# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, confidence: float=None, end_offset: str=None, start_offset: str=None, word: str=None):
        """GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo - a model defined in OpenAPI

        :param confidence: The confidence of this GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo.
        :param end_offset: The end_offset of this GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo.
        :param start_offset: The start_offset of this GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo.
        :param word: The word of this GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo.
        """
        self.openapi_types = {
            'confidence': float,
            'end_offset': str,
            'start_offset': str,
            'word': str
        }

        self.attribute_map = {
            'confidence': 'confidence',
            'end_offset': 'endOffset',
            'start_offset': 'startOffset',
            'word': 'word'
        }

        self._confidence = confidence
        self._end_offset = end_offset
        self._start_offset = start_offset
        self._word = word

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo of this GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def confidence(self):
        """Gets the confidence of this GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo.

        A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.

        :return: The confidence of this GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo.
        :rtype: float
        """
        return self._confidence

    @confidence.setter
    def confidence(self, confidence):
        """Sets the confidence of this GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo.

        A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.

        :param confidence: The confidence of this GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo.
        :type confidence: float
        """

        self._confidence = confidence

    @property
    def end_offset(self):
        """Gets the end_offset of this GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo.

        Time offset of the end of this word relative to the beginning of the total conversation.

        :return: The end_offset of this GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo.
        :rtype: str
        """
        return self._end_offset

    @end_offset.setter
    def end_offset(self, end_offset):
        """Sets the end_offset of this GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo.

        Time offset of the end of this word relative to the beginning of the total conversation.

        :param end_offset: The end_offset of this GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo.
        :type end_offset: str
        """

        self._end_offset = end_offset

    @property
    def start_offset(self):
        """Gets the start_offset of this GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo.

        Time offset of the start of this word relative to the beginning of the total conversation.

        :return: The start_offset of this GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo.
        :rtype: str
        """
        return self._start_offset

    @start_offset.setter
    def start_offset(self, start_offset):
        """Sets the start_offset of this GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo.

        Time offset of the start of this word relative to the beginning of the total conversation.

        :param start_offset: The start_offset of this GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo.
        :type start_offset: str
        """

        self._start_offset = start_offset

    @property
    def word(self):
        """Gets the word of this GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo.

        The word itself. Includes punctuation marks that surround the word.

        :return: The word of this GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo.
        :rtype: str
        """
        return self._word

    @word.setter
    def word(self, word):
        """Sets the word of this GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo.

        The word itself. Includes punctuation marks that surround the word.

        :param word: The word of this GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo.
        :type word: str
        """

        self._word = word
