# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_contactcenterinsights_v1alpha1_issue_model_input_data_config import GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig
from openapi_server.models.google_cloud_contactcenterinsights_v1alpha1_issue_model_label_stats import GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats
from openapi_server import util


class GoogleCloudContactcenterinsightsV1alpha1IssueModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, display_name: str=None, input_data_config: GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig=None, issue_count: str=None, language_code: str=None, model_type: str=None, name: str=None, state: str=None, training_stats: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats=None, update_time: str=None):
        """GoogleCloudContactcenterinsightsV1alpha1IssueModel - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :param display_name: The display_name of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :param input_data_config: The input_data_config of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :param issue_count: The issue_count of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :param language_code: The language_code of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :param model_type: The model_type of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :param name: The name of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :param state: The state of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :param training_stats: The training_stats of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :param update_time: The update_time of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        """
        self.openapi_types = {
            'create_time': str,
            'display_name': str,
            'input_data_config': GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig,
            'issue_count': str,
            'language_code': str,
            'model_type': str,
            'name': str,
            'state': str,
            'training_stats': GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats,
            'update_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'display_name': 'displayName',
            'input_data_config': 'inputDataConfig',
            'issue_count': 'issueCount',
            'language_code': 'languageCode',
            'model_type': 'modelType',
            'name': 'name',
            'state': 'state',
            'training_stats': 'trainingStats',
            'update_time': 'updateTime'
        }

        self._create_time = create_time
        self._display_name = display_name
        self._input_data_config = input_data_config
        self._issue_count = issue_count
        self._language_code = language_code
        self._model_type = model_type
        self._name = name
        self._state = state
        self._training_stats = training_stats
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudContactcenterinsightsV1alpha1IssueModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudContactcenterinsightsV1alpha1IssueModel of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.

        Output only. The time at which this issue model was created.

        :return: The create_time of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.

        Output only. The time at which this issue model was created.

        :param create_time: The create_time of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.

        The representative name for the issue model.

        :return: The display_name of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.

        The representative name for the issue model.

        :param display_name: The display_name of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def input_data_config(self):
        """Gets the input_data_config of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.


        :return: The input_data_config of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :rtype: GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig
        """
        return self._input_data_config

    @input_data_config.setter
    def input_data_config(self, input_data_config):
        """Sets the input_data_config of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.


        :param input_data_config: The input_data_config of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :type input_data_config: GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig
        """

        self._input_data_config = input_data_config

    @property
    def issue_count(self):
        """Gets the issue_count of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.

        Output only. Number of issues in this issue model.

        :return: The issue_count of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :rtype: str
        """
        return self._issue_count

    @issue_count.setter
    def issue_count(self, issue_count):
        """Sets the issue_count of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.

        Output only. Number of issues in this issue model.

        :param issue_count: The issue_count of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :type issue_count: str
        """

        self._issue_count = issue_count

    @property
    def language_code(self):
        """Gets the language_code of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.

        Language of the model.

        :return: The language_code of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.

        Language of the model.

        :param language_code: The language_code of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :type language_code: str
        """

        self._language_code = language_code

    @property
    def model_type(self):
        """Gets the model_type of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.

        Type of the model.

        :return: The model_type of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :rtype: str
        """
        return self._model_type

    @model_type.setter
    def model_type(self, model_type):
        """Sets the model_type of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.

        Type of the model.

        :param model_type: The model_type of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :type model_type: str
        """
        allowed_values = ["MODEL_TYPE_UNSPECIFIED", "TYPE_V1", "TYPE_V2"]  # noqa: E501
        if model_type not in allowed_values:
            raise ValueError(
                "Invalid value for `model_type` ({0}), must be one of {1}"
                .format(model_type, allowed_values)
            )

        self._model_type = model_type

    @property
    def name(self):
        """Gets the name of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.

        Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}

        :return: The name of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.

        Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}

        :param name: The name of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :type name: str
        """

        self._name = name

    @property
    def state(self):
        """Gets the state of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.

        Output only. State of the model.

        :return: The state of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.

        Output only. State of the model.

        :param state: The state of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "UNDEPLOYED", "DEPLOYING", "DEPLOYED", "UNDEPLOYING", "DELETING"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def training_stats(self):
        """Gets the training_stats of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.


        :return: The training_stats of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :rtype: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats
        """
        return self._training_stats

    @training_stats.setter
    def training_stats(self, training_stats):
        """Sets the training_stats of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.


        :param training_stats: The training_stats of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :type training_stats: GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats
        """

        self._training_stats = training_stats

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.

        Output only. The most recent time at which the issue model was updated.

        :return: The update_time of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.

        Output only. The most recent time at which the issue model was updated.

        :param update_time: The update_time of this GoogleCloudContactcenterinsightsV1alpha1IssueModel.
        :type update_time: str
        """

        self._update_time = update_time
