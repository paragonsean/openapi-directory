# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, answer: str=None, confidence_score: float=None, metadata: Dict[str, str]=None, query_record: str=None, question: str=None, source: str=None):
        """GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData - a model defined in OpenAPI

        :param answer: The answer of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.
        :param confidence_score: The confidence_score of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.
        :param metadata: The metadata of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.
        :param query_record: The query_record of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.
        :param question: The question of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.
        :param source: The source of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.
        """
        self.openapi_types = {
            'answer': str,
            'confidence_score': float,
            'metadata': Dict[str, str],
            'query_record': str,
            'question': str,
            'source': str
        }

        self.attribute_map = {
            'answer': 'answer',
            'confidence_score': 'confidenceScore',
            'metadata': 'metadata',
            'query_record': 'queryRecord',
            'question': 'question',
            'source': 'source'
        }

        self._answer = answer
        self._confidence_score = confidence_score
        self._metadata = metadata
        self._query_record = query_record
        self._question = question
        self._source = source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def answer(self):
        """Gets the answer of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.

        The piece of text from the `source` knowledge base document.

        :return: The answer of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.
        :rtype: str
        """
        return self._answer

    @answer.setter
    def answer(self, answer):
        """Sets the answer of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.

        The piece of text from the `source` knowledge base document.

        :param answer: The answer of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.
        :type answer: str
        """

        self._answer = answer

    @property
    def confidence_score(self):
        """Gets the confidence_score of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.

        The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).

        :return: The confidence_score of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.
        :rtype: float
        """
        return self._confidence_score

    @confidence_score.setter
    def confidence_score(self, confidence_score):
        """Sets the confidence_score of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.

        The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).

        :param confidence_score: The confidence_score of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.
        :type confidence_score: float
        """

        self._confidence_score = confidence_score

    @property
    def metadata(self):
        """Gets the metadata of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.

        Map that contains metadata about the FAQ answer and the document that it originates from.

        :return: The metadata of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.
        :rtype: Dict[str, str]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.

        Map that contains metadata about the FAQ answer and the document that it originates from.

        :param metadata: The metadata of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.
        :type metadata: Dict[str, str]
        """

        self._metadata = metadata

    @property
    def query_record(self):
        """Gets the query_record of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.

        The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}

        :return: The query_record of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.
        :rtype: str
        """
        return self._query_record

    @query_record.setter
    def query_record(self, query_record):
        """Sets the query_record of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.

        The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}

        :param query_record: The query_record of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.
        :type query_record: str
        """

        self._query_record = query_record

    @property
    def question(self):
        """Gets the question of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.

        The corresponding FAQ question.

        :return: The question of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.
        :rtype: str
        """
        return self._question

    @question.setter
    def question(self, question):
        """Sets the question of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.

        The corresponding FAQ question.

        :param question: The question of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.
        :type question: str
        """

        self._question = question

    @property
    def source(self):
        """Gets the source of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.

        The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.

        :return: The source of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.

        The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.

        :param source: The source of this GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.
        :type source: str
        """

        self._source = source
