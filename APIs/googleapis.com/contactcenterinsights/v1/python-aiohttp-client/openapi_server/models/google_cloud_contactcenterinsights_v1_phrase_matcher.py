# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_contactcenterinsights_v1_phrase_match_rule_group import GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup
from openapi_server import util


class GoogleCloudContactcenterinsightsV1PhraseMatcher(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activation_update_time: str=None, active: bool=None, display_name: str=None, name: str=None, phrase_match_rule_groups: List[GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup]=None, revision_create_time: str=None, revision_id: str=None, role_match: str=None, type: str=None, update_time: str=None, version_tag: str=None):
        """GoogleCloudContactcenterinsightsV1PhraseMatcher - a model defined in OpenAPI

        :param activation_update_time: The activation_update_time of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :param active: The active of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :param display_name: The display_name of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :param name: The name of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :param phrase_match_rule_groups: The phrase_match_rule_groups of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :param revision_create_time: The revision_create_time of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :param revision_id: The revision_id of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :param role_match: The role_match of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :param type: The type of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :param update_time: The update_time of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :param version_tag: The version_tag of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        """
        self.openapi_types = {
            'activation_update_time': str,
            'active': bool,
            'display_name': str,
            'name': str,
            'phrase_match_rule_groups': List[GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup],
            'revision_create_time': str,
            'revision_id': str,
            'role_match': str,
            'type': str,
            'update_time': str,
            'version_tag': str
        }

        self.attribute_map = {
            'activation_update_time': 'activationUpdateTime',
            'active': 'active',
            'display_name': 'displayName',
            'name': 'name',
            'phrase_match_rule_groups': 'phraseMatchRuleGroups',
            'revision_create_time': 'revisionCreateTime',
            'revision_id': 'revisionId',
            'role_match': 'roleMatch',
            'type': 'type',
            'update_time': 'updateTime',
            'version_tag': 'versionTag'
        }

        self._activation_update_time = activation_update_time
        self._active = active
        self._display_name = display_name
        self._name = name
        self._phrase_match_rule_groups = phrase_match_rule_groups
        self._revision_create_time = revision_create_time
        self._revision_id = revision_id
        self._role_match = role_match
        self._type = type
        self._update_time = update_time
        self._version_tag = version_tag

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudContactcenterinsightsV1PhraseMatcher':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudContactcenterinsightsV1PhraseMatcher of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activation_update_time(self):
        """Gets the activation_update_time of this GoogleCloudContactcenterinsightsV1PhraseMatcher.

        Output only. The most recent time at which the activation status was updated.

        :return: The activation_update_time of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :rtype: str
        """
        return self._activation_update_time

    @activation_update_time.setter
    def activation_update_time(self, activation_update_time):
        """Sets the activation_update_time of this GoogleCloudContactcenterinsightsV1PhraseMatcher.

        Output only. The most recent time at which the activation status was updated.

        :param activation_update_time: The activation_update_time of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :type activation_update_time: str
        """

        self._activation_update_time = activation_update_time

    @property
    def active(self):
        """Gets the active of this GoogleCloudContactcenterinsightsV1PhraseMatcher.

        Applies the phrase matcher only when it is active.

        :return: The active of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this GoogleCloudContactcenterinsightsV1PhraseMatcher.

        Applies the phrase matcher only when it is active.

        :param active: The active of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :type active: bool
        """

        self._active = active

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudContactcenterinsightsV1PhraseMatcher.

        The human-readable name of the phrase matcher.

        :return: The display_name of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudContactcenterinsightsV1PhraseMatcher.

        The human-readable name of the phrase matcher.

        :param display_name: The display_name of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def name(self):
        """Gets the name of this GoogleCloudContactcenterinsightsV1PhraseMatcher.

        The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}

        :return: The name of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudContactcenterinsightsV1PhraseMatcher.

        The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}

        :param name: The name of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :type name: str
        """

        self._name = name

    @property
    def phrase_match_rule_groups(self):
        """Gets the phrase_match_rule_groups of this GoogleCloudContactcenterinsightsV1PhraseMatcher.

        A list of phase match rule groups that are included in this matcher.

        :return: The phrase_match_rule_groups of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :rtype: List[GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup]
        """
        return self._phrase_match_rule_groups

    @phrase_match_rule_groups.setter
    def phrase_match_rule_groups(self, phrase_match_rule_groups):
        """Sets the phrase_match_rule_groups of this GoogleCloudContactcenterinsightsV1PhraseMatcher.

        A list of phase match rule groups that are included in this matcher.

        :param phrase_match_rule_groups: The phrase_match_rule_groups of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :type phrase_match_rule_groups: List[GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup]
        """

        self._phrase_match_rule_groups = phrase_match_rule_groups

    @property
    def revision_create_time(self):
        """Gets the revision_create_time of this GoogleCloudContactcenterinsightsV1PhraseMatcher.

        Output only. The timestamp of when the revision was created. It is also the create time when a new matcher is added.

        :return: The revision_create_time of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :rtype: str
        """
        return self._revision_create_time

    @revision_create_time.setter
    def revision_create_time(self, revision_create_time):
        """Sets the revision_create_time of this GoogleCloudContactcenterinsightsV1PhraseMatcher.

        Output only. The timestamp of when the revision was created. It is also the create time when a new matcher is added.

        :param revision_create_time: The revision_create_time of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :type revision_create_time: str
        """

        self._revision_create_time = revision_create_time

    @property
    def revision_id(self):
        """Gets the revision_id of this GoogleCloudContactcenterinsightsV1PhraseMatcher.

        Output only. Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567

        :return: The revision_id of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :rtype: str
        """
        return self._revision_id

    @revision_id.setter
    def revision_id(self, revision_id):
        """Sets the revision_id of this GoogleCloudContactcenterinsightsV1PhraseMatcher.

        Output only. Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567

        :param revision_id: The revision_id of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :type revision_id: str
        """

        self._revision_id = revision_id

    @property
    def role_match(self):
        """Gets the role_match of this GoogleCloudContactcenterinsightsV1PhraseMatcher.

        The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.

        :return: The role_match of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :rtype: str
        """
        return self._role_match

    @role_match.setter
    def role_match(self, role_match):
        """Sets the role_match of this GoogleCloudContactcenterinsightsV1PhraseMatcher.

        The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.

        :param role_match: The role_match of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :type role_match: str
        """
        allowed_values = ["ROLE_UNSPECIFIED", "HUMAN_AGENT", "AUTOMATED_AGENT", "END_USER", "ANY_AGENT"]  # noqa: E501
        if role_match not in allowed_values:
            raise ValueError(
                "Invalid value for `role_match` ({0}), must be one of {1}"
                .format(role_match, allowed_values)
            )

        self._role_match = role_match

    @property
    def type(self):
        """Gets the type of this GoogleCloudContactcenterinsightsV1PhraseMatcher.

        Required. The type of this phrase matcher.

        :return: The type of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleCloudContactcenterinsightsV1PhraseMatcher.

        Required. The type of this phrase matcher.

        :param type: The type of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :type type: str
        """
        allowed_values = ["PHRASE_MATCHER_TYPE_UNSPECIFIED", "ALL_OF", "ANY_OF"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudContactcenterinsightsV1PhraseMatcher.

        Output only. The most recent time at which the phrase matcher was updated.

        :return: The update_time of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudContactcenterinsightsV1PhraseMatcher.

        Output only. The most recent time at which the phrase matcher was updated.

        :param update_time: The update_time of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :type update_time: str
        """

        self._update_time = update_time

    @property
    def version_tag(self):
        """Gets the version_tag of this GoogleCloudContactcenterinsightsV1PhraseMatcher.

        The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`.

        :return: The version_tag of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :rtype: str
        """
        return self._version_tag

    @version_tag.setter
    def version_tag(self, version_tag):
        """Sets the version_tag of this GoogleCloudContactcenterinsightsV1PhraseMatcher.

        The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`.

        :param version_tag: The version_tag of this GoogleCloudContactcenterinsightsV1PhraseMatcher.
        :type version_tag: str
        """

        self._version_tag = version_tag
