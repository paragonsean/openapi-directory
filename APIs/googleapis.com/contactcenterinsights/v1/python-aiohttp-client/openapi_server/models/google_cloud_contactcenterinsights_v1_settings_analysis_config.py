# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_contactcenterinsights_v1_annotator_selector import GoogleCloudContactcenterinsightsV1AnnotatorSelector
from openapi_server import util


class GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotator_selector: GoogleCloudContactcenterinsightsV1AnnotatorSelector=None, runtime_integration_analysis_percentage: float=None, upload_conversation_analysis_percentage: float=None):
        """GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig - a model defined in OpenAPI

        :param annotator_selector: The annotator_selector of this GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig.
        :param runtime_integration_analysis_percentage: The runtime_integration_analysis_percentage of this GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig.
        :param upload_conversation_analysis_percentage: The upload_conversation_analysis_percentage of this GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig.
        """
        self.openapi_types = {
            'annotator_selector': GoogleCloudContactcenterinsightsV1AnnotatorSelector,
            'runtime_integration_analysis_percentage': float,
            'upload_conversation_analysis_percentage': float
        }

        self.attribute_map = {
            'annotator_selector': 'annotatorSelector',
            'runtime_integration_analysis_percentage': 'runtimeIntegrationAnalysisPercentage',
            'upload_conversation_analysis_percentage': 'uploadConversationAnalysisPercentage'
        }

        self._annotator_selector = annotator_selector
        self._runtime_integration_analysis_percentage = runtime_integration_analysis_percentage
        self._upload_conversation_analysis_percentage = upload_conversation_analysis_percentage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig of this GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotator_selector(self):
        """Gets the annotator_selector of this GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig.


        :return: The annotator_selector of this GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig.
        :rtype: GoogleCloudContactcenterinsightsV1AnnotatorSelector
        """
        return self._annotator_selector

    @annotator_selector.setter
    def annotator_selector(self, annotator_selector):
        """Sets the annotator_selector of this GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig.


        :param annotator_selector: The annotator_selector of this GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig.
        :type annotator_selector: GoogleCloudContactcenterinsightsV1AnnotatorSelector
        """

        self._annotator_selector = annotator_selector

    @property
    def runtime_integration_analysis_percentage(self):
        """Gets the runtime_integration_analysis_percentage of this GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig.

        Percentage of conversations created using Dialogflow runtime integration to analyze automatically, between [0, 100].

        :return: The runtime_integration_analysis_percentage of this GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig.
        :rtype: float
        """
        return self._runtime_integration_analysis_percentage

    @runtime_integration_analysis_percentage.setter
    def runtime_integration_analysis_percentage(self, runtime_integration_analysis_percentage):
        """Sets the runtime_integration_analysis_percentage of this GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig.

        Percentage of conversations created using Dialogflow runtime integration to analyze automatically, between [0, 100].

        :param runtime_integration_analysis_percentage: The runtime_integration_analysis_percentage of this GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig.
        :type runtime_integration_analysis_percentage: float
        """

        self._runtime_integration_analysis_percentage = runtime_integration_analysis_percentage

    @property
    def upload_conversation_analysis_percentage(self):
        """Gets the upload_conversation_analysis_percentage of this GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig.

        Percentage of conversations created using the UploadConversation endpoint to analyze automatically, between [0, 100].

        :return: The upload_conversation_analysis_percentage of this GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig.
        :rtype: float
        """
        return self._upload_conversation_analysis_percentage

    @upload_conversation_analysis_percentage.setter
    def upload_conversation_analysis_percentage(self, upload_conversation_analysis_percentage):
        """Sets the upload_conversation_analysis_percentage of this GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig.

        Percentage of conversations created using the UploadConversation endpoint to analyze automatically, between [0, 100].

        :param upload_conversation_analysis_percentage: The upload_conversation_analysis_percentage of this GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig.
        :type upload_conversation_analysis_percentage: float
        """

        self._upload_conversation_analysis_percentage = upload_conversation_analysis_percentage
