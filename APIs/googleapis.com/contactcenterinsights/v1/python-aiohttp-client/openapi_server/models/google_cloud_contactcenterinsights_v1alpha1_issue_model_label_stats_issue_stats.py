# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, issue: str=None, labeled_conversations_count: str=None):
        """GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats - a model defined in OpenAPI

        :param display_name: The display_name of this GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats.
        :param issue: The issue of this GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats.
        :param labeled_conversations_count: The labeled_conversations_count of this GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats.
        """
        self.openapi_types = {
            'display_name': str,
            'issue': str,
            'labeled_conversations_count': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'issue': 'issue',
            'labeled_conversations_count': 'labeledConversationsCount'
        }

        self._display_name = display_name
        self._issue = issue
        self._labeled_conversations_count = labeled_conversations_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats of this GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats.

        Display name of the issue.

        :return: The display_name of this GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats.

        Display name of the issue.

        :param display_name: The display_name of this GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def issue(self):
        """Gets the issue of this GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats.

        Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}

        :return: The issue of this GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats.
        :rtype: str
        """
        return self._issue

    @issue.setter
    def issue(self, issue):
        """Sets the issue of this GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats.

        Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}

        :param issue: The issue of this GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats.
        :type issue: str
        """

        self._issue = issue

    @property
    def labeled_conversations_count(self):
        """Gets the labeled_conversations_count of this GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats.

        Number of conversations attached to the issue at this point in time.

        :return: The labeled_conversations_count of this GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats.
        :rtype: str
        """
        return self._labeled_conversations_count

    @labeled_conversations_count.setter
    def labeled_conversations_count(self, labeled_conversations_count):
        """Sets the labeled_conversations_count of this GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats.

        Number of conversations attached to the issue at this point in time.

        :param labeled_conversations_count: The labeled_conversations_count of this GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats.
        :type labeled_conversations_count: str
        """

        self._labeled_conversations_count = labeled_conversations_count
