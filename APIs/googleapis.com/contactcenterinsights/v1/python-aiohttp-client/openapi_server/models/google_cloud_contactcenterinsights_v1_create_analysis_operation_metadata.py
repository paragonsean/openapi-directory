# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_contactcenterinsights_v1_annotator_selector import GoogleCloudContactcenterinsightsV1AnnotatorSelector
from openapi_server import util


class GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotator_selector: GoogleCloudContactcenterinsightsV1AnnotatorSelector=None, conversation: str=None, create_time: str=None, end_time: str=None):
        """GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata - a model defined in OpenAPI

        :param annotator_selector: The annotator_selector of this GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata.
        :param conversation: The conversation of this GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata.
        :param create_time: The create_time of this GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata.
        :param end_time: The end_time of this GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata.
        """
        self.openapi_types = {
            'annotator_selector': GoogleCloudContactcenterinsightsV1AnnotatorSelector,
            'conversation': str,
            'create_time': str,
            'end_time': str
        }

        self.attribute_map = {
            'annotator_selector': 'annotatorSelector',
            'conversation': 'conversation',
            'create_time': 'createTime',
            'end_time': 'endTime'
        }

        self._annotator_selector = annotator_selector
        self._conversation = conversation
        self._create_time = create_time
        self._end_time = end_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata of this GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotator_selector(self):
        """Gets the annotator_selector of this GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata.


        :return: The annotator_selector of this GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata.
        :rtype: GoogleCloudContactcenterinsightsV1AnnotatorSelector
        """
        return self._annotator_selector

    @annotator_selector.setter
    def annotator_selector(self, annotator_selector):
        """Sets the annotator_selector of this GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata.


        :param annotator_selector: The annotator_selector of this GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata.
        :type annotator_selector: GoogleCloudContactcenterinsightsV1AnnotatorSelector
        """

        self._annotator_selector = annotator_selector

    @property
    def conversation(self):
        """Gets the conversation of this GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata.

        Output only. The Conversation that this Analysis Operation belongs to.

        :return: The conversation of this GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata.
        :rtype: str
        """
        return self._conversation

    @conversation.setter
    def conversation(self, conversation):
        """Sets the conversation of this GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata.

        Output only. The Conversation that this Analysis Operation belongs to.

        :param conversation: The conversation of this GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata.
        :type conversation: str
        """

        self._conversation = conversation

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata.

        Output only. The time the operation was created.

        :return: The create_time of this GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata.

        Output only. The time the operation was created.

        :param create_time: The create_time of this GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def end_time(self):
        """Gets the end_time of this GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata.

        Output only. The time the operation finished running.

        :return: The end_time of this GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata.

        Output only. The time the operation finished running.

        :param end_time: The end_time of this GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata.
        :type end_time: str
        """

        self._end_time = end_time
