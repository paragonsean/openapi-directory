# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, medium: str=None):
        """GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig - a model defined in OpenAPI

        :param medium: The medium of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig.
        """
        self.openapi_types = {
            'medium': str
        }

        self.attribute_map = {
            'medium': 'medium'
        }

        self._medium = medium

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def medium(self):
        """Gets the medium of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig.

        Required. The medium transcript objects represent.

        :return: The medium of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig.
        :rtype: str
        """
        return self._medium

    @medium.setter
    def medium(self, medium):
        """Sets the medium of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig.

        Required. The medium transcript objects represent.

        :param medium: The medium of this GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig.
        :type medium: str
        """
        allowed_values = ["MEDIUM_UNSPECIFIED", "PHONE_CALL", "CHAT"]  # noqa: E501
        if medium not in allowed_values:
            raise ValueError(
                "Invalid value for `medium` ({0}), must be one of {1}"
                .format(medium, allowed_values)
            )

        self._medium = medium
