# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_contactcenterinsights_v1alpha1_issue_assignment import GoogleCloudContactcenterinsightsV1alpha1IssueAssignment
from openapi_server import util


class GoogleCloudContactcenterinsightsV1alpha1IssueModelResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, issue_model: str=None, issues: List[GoogleCloudContactcenterinsightsV1alpha1IssueAssignment]=None):
        """GoogleCloudContactcenterinsightsV1alpha1IssueModelResult - a model defined in OpenAPI

        :param issue_model: The issue_model of this GoogleCloudContactcenterinsightsV1alpha1IssueModelResult.
        :param issues: The issues of this GoogleCloudContactcenterinsightsV1alpha1IssueModelResult.
        """
        self.openapi_types = {
            'issue_model': str,
            'issues': List[GoogleCloudContactcenterinsightsV1alpha1IssueAssignment]
        }

        self.attribute_map = {
            'issue_model': 'issueModel',
            'issues': 'issues'
        }

        self._issue_model = issue_model
        self._issues = issues

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudContactcenterinsightsV1alpha1IssueModelResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudContactcenterinsightsV1alpha1IssueModelResult of this GoogleCloudContactcenterinsightsV1alpha1IssueModelResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def issue_model(self):
        """Gets the issue_model of this GoogleCloudContactcenterinsightsV1alpha1IssueModelResult.

        Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}

        :return: The issue_model of this GoogleCloudContactcenterinsightsV1alpha1IssueModelResult.
        :rtype: str
        """
        return self._issue_model

    @issue_model.setter
    def issue_model(self, issue_model):
        """Sets the issue_model of this GoogleCloudContactcenterinsightsV1alpha1IssueModelResult.

        Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}

        :param issue_model: The issue_model of this GoogleCloudContactcenterinsightsV1alpha1IssueModelResult.
        :type issue_model: str
        """

        self._issue_model = issue_model

    @property
    def issues(self):
        """Gets the issues of this GoogleCloudContactcenterinsightsV1alpha1IssueModelResult.

        All the matched issues.

        :return: The issues of this GoogleCloudContactcenterinsightsV1alpha1IssueModelResult.
        :rtype: List[GoogleCloudContactcenterinsightsV1alpha1IssueAssignment]
        """
        return self._issues

    @issues.setter
    def issues(self, issues):
        """Sets the issues of this GoogleCloudContactcenterinsightsV1alpha1IssueModelResult.

        All the matched issues.

        :param issues: The issues of this GoogleCloudContactcenterinsightsV1alpha1IssueModelResult.
        :type issues: List[GoogleCloudContactcenterinsightsV1alpha1IssueAssignment]
        """

        self._issues = issues
