# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_contactcenterinsights_v1_redaction_config import GoogleCloudContactcenterinsightsV1RedactionConfig
from openapi_server.models.google_cloud_contactcenterinsights_v1_settings_analysis_config import GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig
from openapi_server.models.google_cloud_contactcenterinsights_v1_speech_config import GoogleCloudContactcenterinsightsV1SpeechConfig
from openapi_server import util


class GoogleCloudContactcenterinsightsV1Settings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, analysis_config: GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig=None, conversation_ttl: str=None, create_time: str=None, language_code: str=None, name: str=None, pubsub_notification_settings: Dict[str, str]=None, redaction_config: GoogleCloudContactcenterinsightsV1RedactionConfig=None, speech_config: GoogleCloudContactcenterinsightsV1SpeechConfig=None, update_time: str=None):
        """GoogleCloudContactcenterinsightsV1Settings - a model defined in OpenAPI

        :param analysis_config: The analysis_config of this GoogleCloudContactcenterinsightsV1Settings.
        :param conversation_ttl: The conversation_ttl of this GoogleCloudContactcenterinsightsV1Settings.
        :param create_time: The create_time of this GoogleCloudContactcenterinsightsV1Settings.
        :param language_code: The language_code of this GoogleCloudContactcenterinsightsV1Settings.
        :param name: The name of this GoogleCloudContactcenterinsightsV1Settings.
        :param pubsub_notification_settings: The pubsub_notification_settings of this GoogleCloudContactcenterinsightsV1Settings.
        :param redaction_config: The redaction_config of this GoogleCloudContactcenterinsightsV1Settings.
        :param speech_config: The speech_config of this GoogleCloudContactcenterinsightsV1Settings.
        :param update_time: The update_time of this GoogleCloudContactcenterinsightsV1Settings.
        """
        self.openapi_types = {
            'analysis_config': GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig,
            'conversation_ttl': str,
            'create_time': str,
            'language_code': str,
            'name': str,
            'pubsub_notification_settings': Dict[str, str],
            'redaction_config': GoogleCloudContactcenterinsightsV1RedactionConfig,
            'speech_config': GoogleCloudContactcenterinsightsV1SpeechConfig,
            'update_time': str
        }

        self.attribute_map = {
            'analysis_config': 'analysisConfig',
            'conversation_ttl': 'conversationTtl',
            'create_time': 'createTime',
            'language_code': 'languageCode',
            'name': 'name',
            'pubsub_notification_settings': 'pubsubNotificationSettings',
            'redaction_config': 'redactionConfig',
            'speech_config': 'speechConfig',
            'update_time': 'updateTime'
        }

        self._analysis_config = analysis_config
        self._conversation_ttl = conversation_ttl
        self._create_time = create_time
        self._language_code = language_code
        self._name = name
        self._pubsub_notification_settings = pubsub_notification_settings
        self._redaction_config = redaction_config
        self._speech_config = speech_config
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudContactcenterinsightsV1Settings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudContactcenterinsightsV1Settings of this GoogleCloudContactcenterinsightsV1Settings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def analysis_config(self):
        """Gets the analysis_config of this GoogleCloudContactcenterinsightsV1Settings.


        :return: The analysis_config of this GoogleCloudContactcenterinsightsV1Settings.
        :rtype: GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig
        """
        return self._analysis_config

    @analysis_config.setter
    def analysis_config(self, analysis_config):
        """Sets the analysis_config of this GoogleCloudContactcenterinsightsV1Settings.


        :param analysis_config: The analysis_config of this GoogleCloudContactcenterinsightsV1Settings.
        :type analysis_config: GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig
        """

        self._analysis_config = analysis_config

    @property
    def conversation_ttl(self):
        """Gets the conversation_ttl of this GoogleCloudContactcenterinsightsV1Settings.

        The default TTL for newly-created conversations. If a conversation has a specified expiration, that value will be used instead. Changing this value will not change the expiration of existing conversations. Conversations with no expire time persist until they are deleted.

        :return: The conversation_ttl of this GoogleCloudContactcenterinsightsV1Settings.
        :rtype: str
        """
        return self._conversation_ttl

    @conversation_ttl.setter
    def conversation_ttl(self, conversation_ttl):
        """Sets the conversation_ttl of this GoogleCloudContactcenterinsightsV1Settings.

        The default TTL for newly-created conversations. If a conversation has a specified expiration, that value will be used instead. Changing this value will not change the expiration of existing conversations. Conversations with no expire time persist until they are deleted.

        :param conversation_ttl: The conversation_ttl of this GoogleCloudContactcenterinsightsV1Settings.
        :type conversation_ttl: str
        """

        self._conversation_ttl = conversation_ttl

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudContactcenterinsightsV1Settings.

        Output only. The time at which the settings was created.

        :return: The create_time of this GoogleCloudContactcenterinsightsV1Settings.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudContactcenterinsightsV1Settings.

        Output only. The time at which the settings was created.

        :param create_time: The create_time of this GoogleCloudContactcenterinsightsV1Settings.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def language_code(self):
        """Gets the language_code of this GoogleCloudContactcenterinsightsV1Settings.

        A language code to be applied to each transcript segment unless the segment already specifies a language code. Language code defaults to \"en-US\" if it is neither specified on the segment nor here.

        :return: The language_code of this GoogleCloudContactcenterinsightsV1Settings.
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this GoogleCloudContactcenterinsightsV1Settings.

        A language code to be applied to each transcript segment unless the segment already specifies a language code. Language code defaults to \"en-US\" if it is neither specified on the segment nor here.

        :param language_code: The language_code of this GoogleCloudContactcenterinsightsV1Settings.
        :type language_code: str
        """

        self._language_code = language_code

    @property
    def name(self):
        """Gets the name of this GoogleCloudContactcenterinsightsV1Settings.

        Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings

        :return: The name of this GoogleCloudContactcenterinsightsV1Settings.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudContactcenterinsightsV1Settings.

        Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings

        :param name: The name of this GoogleCloudContactcenterinsightsV1Settings.
        :type name: str
        """

        self._name = name

    @property
    def pubsub_notification_settings(self):
        """Gets the pubsub_notification_settings of this GoogleCloudContactcenterinsightsV1Settings.

        A map that maps a notification trigger to a Pub/Sub topic. Each time a specified trigger occurs, Insights will notify the corresponding Pub/Sub topic. Keys are notification triggers. Supported keys are: * \"all-triggers\": Notify each time any of the supported triggers occurs. * \"create-analysis\": Notify each time an analysis is created. * \"create-conversation\": Notify each time a conversation is created. * \"export-insights-data\": Notify each time an export is complete. * \"update-conversation\": Notify each time a conversation is updated via UpdateConversation. * \"upload-conversation\": Notify when an UploadConversation LRO completes. Values are Pub/Sub topics. The format of each Pub/Sub topic is: projects/{project}/topics/{topic}

        :return: The pubsub_notification_settings of this GoogleCloudContactcenterinsightsV1Settings.
        :rtype: Dict[str, str]
        """
        return self._pubsub_notification_settings

    @pubsub_notification_settings.setter
    def pubsub_notification_settings(self, pubsub_notification_settings):
        """Sets the pubsub_notification_settings of this GoogleCloudContactcenterinsightsV1Settings.

        A map that maps a notification trigger to a Pub/Sub topic. Each time a specified trigger occurs, Insights will notify the corresponding Pub/Sub topic. Keys are notification triggers. Supported keys are: * \"all-triggers\": Notify each time any of the supported triggers occurs. * \"create-analysis\": Notify each time an analysis is created. * \"create-conversation\": Notify each time a conversation is created. * \"export-insights-data\": Notify each time an export is complete. * \"update-conversation\": Notify each time a conversation is updated via UpdateConversation. * \"upload-conversation\": Notify when an UploadConversation LRO completes. Values are Pub/Sub topics. The format of each Pub/Sub topic is: projects/{project}/topics/{topic}

        :param pubsub_notification_settings: The pubsub_notification_settings of this GoogleCloudContactcenterinsightsV1Settings.
        :type pubsub_notification_settings: Dict[str, str]
        """

        self._pubsub_notification_settings = pubsub_notification_settings

    @property
    def redaction_config(self):
        """Gets the redaction_config of this GoogleCloudContactcenterinsightsV1Settings.


        :return: The redaction_config of this GoogleCloudContactcenterinsightsV1Settings.
        :rtype: GoogleCloudContactcenterinsightsV1RedactionConfig
        """
        return self._redaction_config

    @redaction_config.setter
    def redaction_config(self, redaction_config):
        """Sets the redaction_config of this GoogleCloudContactcenterinsightsV1Settings.


        :param redaction_config: The redaction_config of this GoogleCloudContactcenterinsightsV1Settings.
        :type redaction_config: GoogleCloudContactcenterinsightsV1RedactionConfig
        """

        self._redaction_config = redaction_config

    @property
    def speech_config(self):
        """Gets the speech_config of this GoogleCloudContactcenterinsightsV1Settings.


        :return: The speech_config of this GoogleCloudContactcenterinsightsV1Settings.
        :rtype: GoogleCloudContactcenterinsightsV1SpeechConfig
        """
        return self._speech_config

    @speech_config.setter
    def speech_config(self, speech_config):
        """Sets the speech_config of this GoogleCloudContactcenterinsightsV1Settings.


        :param speech_config: The speech_config of this GoogleCloudContactcenterinsightsV1Settings.
        :type speech_config: GoogleCloudContactcenterinsightsV1SpeechConfig
        """

        self._speech_config = speech_config

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudContactcenterinsightsV1Settings.

        Output only. The time at which the settings were last updated.

        :return: The update_time of this GoogleCloudContactcenterinsightsV1Settings.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudContactcenterinsightsV1Settings.

        Output only. The time at which the settings were last updated.

        :param update_time: The update_time of this GoogleCloudContactcenterinsightsV1Settings.
        :type update_time: str
        """

        self._update_time = update_time
