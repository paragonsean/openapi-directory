# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_contactcenterinsights_v1alpha1_redaction_config import GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
from openapi_server.models.google_cloud_contactcenterinsights_v1alpha1_upload_conversation_request import GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest
from openapi_server import util


class GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, analysis_operation: str=None, applied_redaction_config: GoogleCloudContactcenterinsightsV1alpha1RedactionConfig=None, create_time: str=None, end_time: str=None, request: GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest=None):
        """GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata - a model defined in OpenAPI

        :param analysis_operation: The analysis_operation of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.
        :param applied_redaction_config: The applied_redaction_config of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.
        :param create_time: The create_time of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.
        :param end_time: The end_time of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.
        :param request: The request of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.
        """
        self.openapi_types = {
            'analysis_operation': str,
            'applied_redaction_config': GoogleCloudContactcenterinsightsV1alpha1RedactionConfig,
            'create_time': str,
            'end_time': str,
            'request': GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest
        }

        self.attribute_map = {
            'analysis_operation': 'analysisOperation',
            'applied_redaction_config': 'appliedRedactionConfig',
            'create_time': 'createTime',
            'end_time': 'endTime',
            'request': 'request'
        }

        self._analysis_operation = analysis_operation
        self._applied_redaction_config = applied_redaction_config
        self._create_time = create_time
        self._end_time = end_time
        self._request = request

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def analysis_operation(self):
        """Gets the analysis_operation of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.

        Output only. The operation name for a successfully created analysis operation, if any.

        :return: The analysis_operation of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.
        :rtype: str
        """
        return self._analysis_operation

    @analysis_operation.setter
    def analysis_operation(self, analysis_operation):
        """Sets the analysis_operation of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.

        Output only. The operation name for a successfully created analysis operation, if any.

        :param analysis_operation: The analysis_operation of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.
        :type analysis_operation: str
        """

        self._analysis_operation = analysis_operation

    @property
    def applied_redaction_config(self):
        """Gets the applied_redaction_config of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.


        :return: The applied_redaction_config of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.
        :rtype: GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
        """
        return self._applied_redaction_config

    @applied_redaction_config.setter
    def applied_redaction_config(self, applied_redaction_config):
        """Sets the applied_redaction_config of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.


        :param applied_redaction_config: The applied_redaction_config of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.
        :type applied_redaction_config: GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
        """

        self._applied_redaction_config = applied_redaction_config

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.

        Output only. The time the operation was created.

        :return: The create_time of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.

        Output only. The time the operation was created.

        :param create_time: The create_time of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def end_time(self):
        """Gets the end_time of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.

        Output only. The time the operation finished running.

        :return: The end_time of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.

        Output only. The time the operation finished running.

        :param end_time: The end_time of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def request(self):
        """Gets the request of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.


        :return: The request of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.
        :rtype: GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest
        """
        return self._request

    @request.setter
    def request(self, request):
        """Sets the request of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.


        :param request: The request of this GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata.
        :type request: GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest
        """

        self._request = request
