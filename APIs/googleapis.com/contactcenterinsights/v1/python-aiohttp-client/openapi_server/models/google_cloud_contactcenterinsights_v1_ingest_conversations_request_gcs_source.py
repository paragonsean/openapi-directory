# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bucket_object_type: str=None, bucket_uri: str=None, custom_metadata_keys: List[str]=None, metadata_bucket_uri: str=None):
        """GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource - a model defined in OpenAPI

        :param bucket_object_type: The bucket_object_type of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource.
        :param bucket_uri: The bucket_uri of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource.
        :param custom_metadata_keys: The custom_metadata_keys of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource.
        :param metadata_bucket_uri: The metadata_bucket_uri of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource.
        """
        self.openapi_types = {
            'bucket_object_type': str,
            'bucket_uri': str,
            'custom_metadata_keys': List[str],
            'metadata_bucket_uri': str
        }

        self.attribute_map = {
            'bucket_object_type': 'bucketObjectType',
            'bucket_uri': 'bucketUri',
            'custom_metadata_keys': 'customMetadataKeys',
            'metadata_bucket_uri': 'metadataBucketUri'
        }

        self._bucket_object_type = bucket_object_type
        self._bucket_uri = bucket_uri
        self._custom_metadata_keys = custom_metadata_keys
        self._metadata_bucket_uri = metadata_bucket_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bucket_object_type(self):
        """Gets the bucket_object_type of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource.

        Optional. Specifies the type of the objects in `bucket_uri`.

        :return: The bucket_object_type of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource.
        :rtype: str
        """
        return self._bucket_object_type

    @bucket_object_type.setter
    def bucket_object_type(self, bucket_object_type):
        """Sets the bucket_object_type of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource.

        Optional. Specifies the type of the objects in `bucket_uri`.

        :param bucket_object_type: The bucket_object_type of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource.
        :type bucket_object_type: str
        """
        allowed_values = ["BUCKET_OBJECT_TYPE_UNSPECIFIED", "TRANSCRIPT", "AUDIO"]  # noqa: E501
        if bucket_object_type not in allowed_values:
            raise ValueError(
                "Invalid value for `bucket_object_type` ({0}), must be one of {1}"
                .format(bucket_object_type, allowed_values)
            )

        self._bucket_object_type = bucket_object_type

    @property
    def bucket_uri(self):
        """Gets the bucket_uri of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource.

        Required. The Cloud Storage bucket containing source objects.

        :return: The bucket_uri of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource.
        :rtype: str
        """
        return self._bucket_uri

    @bucket_uri.setter
    def bucket_uri(self, bucket_uri):
        """Sets the bucket_uri of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource.

        Required. The Cloud Storage bucket containing source objects.

        :param bucket_uri: The bucket_uri of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource.
        :type bucket_uri: str
        """

        self._bucket_uri = bucket_uri

    @property
    def custom_metadata_keys(self):
        """Gets the custom_metadata_keys of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource.

        Optional. Custom keys to extract as conversation labels from metadata files in `metadata_bucket_uri`. Keys not included in this field will be ignored. Note that there is a limit of 20 labels per conversation.

        :return: The custom_metadata_keys of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource.
        :rtype: List[str]
        """
        return self._custom_metadata_keys

    @custom_metadata_keys.setter
    def custom_metadata_keys(self, custom_metadata_keys):
        """Sets the custom_metadata_keys of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource.

        Optional. Custom keys to extract as conversation labels from metadata files in `metadata_bucket_uri`. Keys not included in this field will be ignored. Note that there is a limit of 20 labels per conversation.

        :param custom_metadata_keys: The custom_metadata_keys of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource.
        :type custom_metadata_keys: List[str]
        """

        self._custom_metadata_keys = custom_metadata_keys

    @property
    def metadata_bucket_uri(self):
        """Gets the metadata_bucket_uri of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource.

        Optional. The Cloud Storage path to the source object metadata. Note that: [1] metadata files are expected to be in JSON format [2] metadata and source objects must be in separate buckets [3] a source object's metadata object must share the same name to be properly ingested

        :return: The metadata_bucket_uri of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource.
        :rtype: str
        """
        return self._metadata_bucket_uri

    @metadata_bucket_uri.setter
    def metadata_bucket_uri(self, metadata_bucket_uri):
        """Sets the metadata_bucket_uri of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource.

        Optional. The Cloud Storage path to the source object metadata. Note that: [1] metadata files are expected to be in JSON format [2] metadata and source objects must be in separate buckets [3] a source object's metadata object must share the same name to be properly ingested

        :param metadata_bucket_uri: The metadata_bucket_uri of this GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource.
        :type metadata_bucket_uri: str
        """

        self._metadata_bucket_uri = metadata_bucket_uri
