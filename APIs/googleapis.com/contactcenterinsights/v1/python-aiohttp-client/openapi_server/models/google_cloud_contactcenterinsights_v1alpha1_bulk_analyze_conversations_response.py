# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, failed_analysis_count: int=None, successful_analysis_count: int=None):
        """GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse - a model defined in OpenAPI

        :param failed_analysis_count: The failed_analysis_count of this GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse.
        :param successful_analysis_count: The successful_analysis_count of this GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse.
        """
        self.openapi_types = {
            'failed_analysis_count': int,
            'successful_analysis_count': int
        }

        self.attribute_map = {
            'failed_analysis_count': 'failedAnalysisCount',
            'successful_analysis_count': 'successfulAnalysisCount'
        }

        self._failed_analysis_count = failed_analysis_count
        self._successful_analysis_count = successful_analysis_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse of this GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def failed_analysis_count(self):
        """Gets the failed_analysis_count of this GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse.

        Count of failed analyses.

        :return: The failed_analysis_count of this GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse.
        :rtype: int
        """
        return self._failed_analysis_count

    @failed_analysis_count.setter
    def failed_analysis_count(self, failed_analysis_count):
        """Sets the failed_analysis_count of this GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse.

        Count of failed analyses.

        :param failed_analysis_count: The failed_analysis_count of this GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse.
        :type failed_analysis_count: int
        """

        self._failed_analysis_count = failed_analysis_count

    @property
    def successful_analysis_count(self):
        """Gets the successful_analysis_count of this GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse.

        Count of successful analyses.

        :return: The successful_analysis_count of this GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse.
        :rtype: int
        """
        return self._successful_analysis_count

    @successful_analysis_count.setter
    def successful_analysis_count(self, successful_analysis_count):
        """Sets the successful_analysis_count of this GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse.

        Count of successful analyses.

        :param successful_analysis_count: The successful_analysis_count of this GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse.
        :type successful_analysis_count: int
        """

        self._successful_analysis_count = successful_analysis_count
