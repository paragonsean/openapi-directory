/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ContactCenterAiInsightsApi);
  }
}(this, function(expect, ContactCenterAiInsightsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector', function() {
    it('should create an instance of GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector', function() {
      // uncomment below and update the code to test GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
      //var instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector();
      //expect(instance).to.be.a(ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector);
    });

    it('should have the property issueModels (base name: "issueModels")', function() {
      // uncomment below and update the code to test the property issueModels
      //var instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector();
      //expect(instance).to.be();
    });

    it('should have the property phraseMatchers (base name: "phraseMatchers")', function() {
      // uncomment below and update the code to test the property phraseMatchers
      //var instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector();
      //expect(instance).to.be();
    });

    it('should have the property runEntityAnnotator (base name: "runEntityAnnotator")', function() {
      // uncomment below and update the code to test the property runEntityAnnotator
      //var instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector();
      //expect(instance).to.be();
    });

    it('should have the property runIntentAnnotator (base name: "runIntentAnnotator")', function() {
      // uncomment below and update the code to test the property runIntentAnnotator
      //var instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector();
      //expect(instance).to.be();
    });

    it('should have the property runInterruptionAnnotator (base name: "runInterruptionAnnotator")', function() {
      // uncomment below and update the code to test the property runInterruptionAnnotator
      //var instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector();
      //expect(instance).to.be();
    });

    it('should have the property runIssueModelAnnotator (base name: "runIssueModelAnnotator")', function() {
      // uncomment below and update the code to test the property runIssueModelAnnotator
      //var instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector();
      //expect(instance).to.be();
    });

    it('should have the property runPhraseMatcherAnnotator (base name: "runPhraseMatcherAnnotator")', function() {
      // uncomment below and update the code to test the property runPhraseMatcherAnnotator
      //var instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector();
      //expect(instance).to.be();
    });

    it('should have the property runSentimentAnnotator (base name: "runSentimentAnnotator")', function() {
      // uncomment below and update the code to test the property runSentimentAnnotator
      //var instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector();
      //expect(instance).to.be();
    });

    it('should have the property runSilenceAnnotator (base name: "runSilenceAnnotator")', function() {
      // uncomment below and update the code to test the property runSilenceAnnotator
      //var instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector();
      //expect(instance).to.be();
    });

    it('should have the property runSummarizationAnnotator (base name: "runSummarizationAnnotator")', function() {
      // uncomment below and update the code to test the property runSummarizationAnnotator
      //var instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector();
      //expect(instance).to.be();
    });

    it('should have the property summarizationConfig (base name: "summarizationConfig")', function() {
      // uncomment below and update the code to test the property summarizationConfig
      //var instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector();
      //expect(instance).to.be();
    });

  });

}));
