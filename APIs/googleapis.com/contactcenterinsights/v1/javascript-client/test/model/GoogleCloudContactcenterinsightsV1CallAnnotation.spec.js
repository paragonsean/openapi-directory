/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ContactCenterAiInsightsApi);
  }
}(this, function(expect, ContactCenterAiInsightsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1CallAnnotation();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GoogleCloudContactcenterinsightsV1CallAnnotation', function() {
    it('should create an instance of GoogleCloudContactcenterinsightsV1CallAnnotation', function() {
      // uncomment below and update the code to test GoogleCloudContactcenterinsightsV1CallAnnotation
      //var instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1CallAnnotation();
      //expect(instance).to.be.a(ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1CallAnnotation);
    });

    it('should have the property annotationEndBoundary (base name: "annotationEndBoundary")', function() {
      // uncomment below and update the code to test the property annotationEndBoundary
      //var instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1CallAnnotation();
      //expect(instance).to.be();
    });

    it('should have the property annotationStartBoundary (base name: "annotationStartBoundary")', function() {
      // uncomment below and update the code to test the property annotationStartBoundary
      //var instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1CallAnnotation();
      //expect(instance).to.be();
    });

    it('should have the property channelTag (base name: "channelTag")', function() {
      // uncomment below and update the code to test the property channelTag
      //var instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1CallAnnotation();
      //expect(instance).to.be();
    });

    it('should have the property entityMentionData (base name: "entityMentionData")', function() {
      // uncomment below and update the code to test the property entityMentionData
      //var instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1CallAnnotation();
      //expect(instance).to.be();
    });

    it('should have the property holdData (base name: "holdData")', function() {
      // uncomment below and update the code to test the property holdData
      //var instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1CallAnnotation();
      //expect(instance).to.be();
    });

    it('should have the property intentMatchData (base name: "intentMatchData")', function() {
      // uncomment below and update the code to test the property intentMatchData
      //var instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1CallAnnotation();
      //expect(instance).to.be();
    });

    it('should have the property interruptionData (base name: "interruptionData")', function() {
      // uncomment below and update the code to test the property interruptionData
      //var instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1CallAnnotation();
      //expect(instance).to.be();
    });

    it('should have the property issueMatchData (base name: "issueMatchData")', function() {
      // uncomment below and update the code to test the property issueMatchData
      //var instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1CallAnnotation();
      //expect(instance).to.be();
    });

    it('should have the property phraseMatchData (base name: "phraseMatchData")', function() {
      // uncomment below and update the code to test the property phraseMatchData
      //var instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1CallAnnotation();
      //expect(instance).to.be();
    });

    it('should have the property sentimentData (base name: "sentimentData")', function() {
      // uncomment below and update the code to test the property sentimentData
      //var instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1CallAnnotation();
      //expect(instance).to.be();
    });

    it('should have the property silenceData (base name: "silenceData")', function() {
      // uncomment below and update the code to test the property silenceData
      //var instance = new ContactCenterAiInsightsApi.GoogleCloudContactcenterinsightsV1CallAnnotation();
      //expect(instance).to.be();
    });

  });

}));
