/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant from './GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant';
import GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata from './GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata';
import GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo from './GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo';
import GoogleCloudContactcenterinsightsV1alpha1SentimentData from './GoogleCloudContactcenterinsightsV1alpha1SentimentData';

/**
 * The GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment model module.
 * @module model/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment
 * @version v1
 */
class GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment {
    /**
     * Constructs a new <code>GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment</code>.
     * A segment of a full transcript.
     * @alias module:model/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment
     */
    constructor() { 
        
        GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment} obj Optional instance to populate.
     * @return {module:model/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment} The populated <code>GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment();

            if (data.hasOwnProperty('channelTag')) {
                obj['channelTag'] = ApiClient.convertToType(data['channelTag'], 'Number');
            }
            if (data.hasOwnProperty('confidence')) {
                obj['confidence'] = ApiClient.convertToType(data['confidence'], 'Number');
            }
            if (data.hasOwnProperty('dialogflowSegmentMetadata')) {
                obj['dialogflowSegmentMetadata'] = GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata.constructFromObject(data['dialogflowSegmentMetadata']);
            }
            if (data.hasOwnProperty('languageCode')) {
                obj['languageCode'] = ApiClient.convertToType(data['languageCode'], 'String');
            }
            if (data.hasOwnProperty('messageTime')) {
                obj['messageTime'] = ApiClient.convertToType(data['messageTime'], 'String');
            }
            if (data.hasOwnProperty('segmentParticipant')) {
                obj['segmentParticipant'] = GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant.constructFromObject(data['segmentParticipant']);
            }
            if (data.hasOwnProperty('sentiment')) {
                obj['sentiment'] = GoogleCloudContactcenterinsightsV1alpha1SentimentData.constructFromObject(data['sentiment']);
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('words')) {
                obj['words'] = ApiClient.convertToType(data['words'], [GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment</code>.
     */
    static validateJSON(data) {
        // validate the optional field `dialogflowSegmentMetadata`
        if (data['dialogflowSegmentMetadata']) { // data not null
          GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata.validateJSON(data['dialogflowSegmentMetadata']);
        }
        // ensure the json data is a string
        if (data['languageCode'] && !(typeof data['languageCode'] === 'string' || data['languageCode'] instanceof String)) {
            throw new Error("Expected the field `languageCode` to be a primitive type in the JSON string but got " + data['languageCode']);
        }
        // ensure the json data is a string
        if (data['messageTime'] && !(typeof data['messageTime'] === 'string' || data['messageTime'] instanceof String)) {
            throw new Error("Expected the field `messageTime` to be a primitive type in the JSON string but got " + data['messageTime']);
        }
        // validate the optional field `segmentParticipant`
        if (data['segmentParticipant']) { // data not null
          GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant.validateJSON(data['segmentParticipant']);
        }
        // validate the optional field `sentiment`
        if (data['sentiment']) { // data not null
          GoogleCloudContactcenterinsightsV1alpha1SentimentData.validateJSON(data['sentiment']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }
        if (data['words']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['words'])) {
                throw new Error("Expected the field `words` to be an array in the JSON data but got " + data['words']);
            }
            // validate the optional field `words` (array)
            for (const item of data['words']) {
                GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono.
 * @member {Number} channelTag
 */
GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment.prototype['channelTag'] = undefined;

/**
 * A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.
 * @member {Number} confidence
 */
GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment.prototype['confidence'] = undefined;

/**
 * @member {module:model/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata} dialogflowSegmentMetadata
 */
GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment.prototype['dialogflowSegmentMetadata'] = undefined;

/**
 * The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\".
 * @member {String} languageCode
 */
GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment.prototype['languageCode'] = undefined;

/**
 * The time that the message occurred, if provided.
 * @member {String} messageTime
 */
GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment.prototype['messageTime'] = undefined;

/**
 * @member {module:model/GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant} segmentParticipant
 */
GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment.prototype['segmentParticipant'] = undefined;

/**
 * @member {module:model/GoogleCloudContactcenterinsightsV1alpha1SentimentData} sentiment
 */
GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment.prototype['sentiment'] = undefined;

/**
 * The text of this segment.
 * @member {String} text
 */
GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment.prototype['text'] = undefined;

/**
 * A list of the word-specific information for each word in the segment.
 * @member {Array.<module:model/GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo>} words
 */
GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment.prototype['words'] = undefined;






export default GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment;

