/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudContactcenterinsightsV1RedactionConfig model module.
 * @module model/GoogleCloudContactcenterinsightsV1RedactionConfig
 * @version v1
 */
class GoogleCloudContactcenterinsightsV1RedactionConfig {
    /**
     * Constructs a new <code>GoogleCloudContactcenterinsightsV1RedactionConfig</code>.
     * DLP resources used for redaction while ingesting conversations.
     * @alias module:model/GoogleCloudContactcenterinsightsV1RedactionConfig
     */
    constructor() { 
        
        GoogleCloudContactcenterinsightsV1RedactionConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudContactcenterinsightsV1RedactionConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudContactcenterinsightsV1RedactionConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudContactcenterinsightsV1RedactionConfig} The populated <code>GoogleCloudContactcenterinsightsV1RedactionConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudContactcenterinsightsV1RedactionConfig();

            if (data.hasOwnProperty('deidentifyTemplate')) {
                obj['deidentifyTemplate'] = ApiClient.convertToType(data['deidentifyTemplate'], 'String');
            }
            if (data.hasOwnProperty('inspectTemplate')) {
                obj['inspectTemplate'] = ApiClient.convertToType(data['inspectTemplate'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudContactcenterinsightsV1RedactionConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudContactcenterinsightsV1RedactionConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['deidentifyTemplate'] && !(typeof data['deidentifyTemplate'] === 'string' || data['deidentifyTemplate'] instanceof String)) {
            throw new Error("Expected the field `deidentifyTemplate` to be a primitive type in the JSON string but got " + data['deidentifyTemplate']);
        }
        // ensure the json data is a string
        if (data['inspectTemplate'] && !(typeof data['inspectTemplate'] === 'string' || data['inspectTemplate'] instanceof String)) {
            throw new Error("Expected the field `inspectTemplate` to be a primitive type in the JSON string but got " + data['inspectTemplate']);
        }

        return true;
    }


}



/**
 * The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`
 * @member {String} deidentifyTemplate
 */
GoogleCloudContactcenterinsightsV1RedactionConfig.prototype['deidentifyTemplate'] = undefined;

/**
 * The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`
 * @member {String} inspectTemplate
 */
GoogleCloudContactcenterinsightsV1RedactionConfig.prototype['inspectTemplate'] = undefined;






export default GoogleCloudContactcenterinsightsV1RedactionConfig;

