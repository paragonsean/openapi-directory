/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats model module.
 * @module model/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
 * @version v1
 */
class GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats {
    /**
     * Constructs a new <code>GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats</code>.
     * Aggregated statistics about an issue.
     * @alias module:model/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
     */
    constructor() { 
        
        GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats} obj Optional instance to populate.
     * @return {module:model/GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats} The populated <code>GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('issue')) {
                obj['issue'] = ApiClient.convertToType(data['issue'], 'String');
            }
            if (data.hasOwnProperty('labeledConversationsCount')) {
                obj['labeledConversationsCount'] = ApiClient.convertToType(data['labeledConversationsCount'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['issue'] && !(typeof data['issue'] === 'string' || data['issue'] instanceof String)) {
            throw new Error("Expected the field `issue` to be a primitive type in the JSON string but got " + data['issue']);
        }
        // ensure the json data is a string
        if (data['labeledConversationsCount'] && !(typeof data['labeledConversationsCount'] === 'string' || data['labeledConversationsCount'] instanceof String)) {
            throw new Error("Expected the field `labeledConversationsCount` to be a primitive type in the JSON string but got " + data['labeledConversationsCount']);
        }

        return true;
    }


}



/**
 * Display name of the issue.
 * @member {String} displayName
 */
GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats.prototype['displayName'] = undefined;

/**
 * Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
 * @member {String} issue
 */
GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats.prototype['issue'] = undefined;

/**
 * Number of conversations attached to the issue at this point in time.
 * @member {String} labeledConversationsCount
 */
GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats.prototype['labeledConversationsCount'] = undefined;






export default GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats;

