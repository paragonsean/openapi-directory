/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudContactcenterinsightsV1ConversationParticipant model module.
 * @module model/GoogleCloudContactcenterinsightsV1ConversationParticipant
 * @version v1
 */
class GoogleCloudContactcenterinsightsV1ConversationParticipant {
    /**
     * Constructs a new <code>GoogleCloudContactcenterinsightsV1ConversationParticipant</code>.
     * The call participant speaking for a given utterance.
     * @alias module:model/GoogleCloudContactcenterinsightsV1ConversationParticipant
     */
    constructor() { 
        
        GoogleCloudContactcenterinsightsV1ConversationParticipant.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudContactcenterinsightsV1ConversationParticipant</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudContactcenterinsightsV1ConversationParticipant} obj Optional instance to populate.
     * @return {module:model/GoogleCloudContactcenterinsightsV1ConversationParticipant} The populated <code>GoogleCloudContactcenterinsightsV1ConversationParticipant</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudContactcenterinsightsV1ConversationParticipant();

            if (data.hasOwnProperty('dialogflowParticipant')) {
                obj['dialogflowParticipant'] = ApiClient.convertToType(data['dialogflowParticipant'], 'String');
            }
            if (data.hasOwnProperty('dialogflowParticipantName')) {
                obj['dialogflowParticipantName'] = ApiClient.convertToType(data['dialogflowParticipantName'], 'String');
            }
            if (data.hasOwnProperty('obfuscatedExternalUserId')) {
                obj['obfuscatedExternalUserId'] = ApiClient.convertToType(data['obfuscatedExternalUserId'], 'String');
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'String');
            }
            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudContactcenterinsightsV1ConversationParticipant</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudContactcenterinsightsV1ConversationParticipant</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dialogflowParticipant'] && !(typeof data['dialogflowParticipant'] === 'string' || data['dialogflowParticipant'] instanceof String)) {
            throw new Error("Expected the field `dialogflowParticipant` to be a primitive type in the JSON string but got " + data['dialogflowParticipant']);
        }
        // ensure the json data is a string
        if (data['dialogflowParticipantName'] && !(typeof data['dialogflowParticipantName'] === 'string' || data['dialogflowParticipantName'] instanceof String)) {
            throw new Error("Expected the field `dialogflowParticipantName` to be a primitive type in the JSON string but got " + data['dialogflowParticipantName']);
        }
        // ensure the json data is a string
        if (data['obfuscatedExternalUserId'] && !(typeof data['obfuscatedExternalUserId'] === 'string' || data['obfuscatedExternalUserId'] instanceof String)) {
            throw new Error("Expected the field `obfuscatedExternalUserId` to be a primitive type in the JSON string but got " + data['obfuscatedExternalUserId']);
        }
        // ensure the json data is a string
        if (data['role'] && !(typeof data['role'] === 'string' || data['role'] instanceof String)) {
            throw new Error("Expected the field `role` to be a primitive type in the JSON string but got " + data['role']);
        }
        // ensure the json data is a string
        if (data['userId'] && !(typeof data['userId'] === 'string' || data['userId'] instanceof String)) {
            throw new Error("Expected the field `userId` to be a primitive type in the JSON string but got " + data['userId']);
        }

        return true;
    }


}



/**
 * Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
 * @member {String} dialogflowParticipant
 */
GoogleCloudContactcenterinsightsV1ConversationParticipant.prototype['dialogflowParticipant'] = undefined;

/**
 * The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
 * @member {String} dialogflowParticipantName
 */
GoogleCloudContactcenterinsightsV1ConversationParticipant.prototype['dialogflowParticipantName'] = undefined;

/**
 * Obfuscated user ID from Dialogflow.
 * @member {String} obfuscatedExternalUserId
 */
GoogleCloudContactcenterinsightsV1ConversationParticipant.prototype['obfuscatedExternalUserId'] = undefined;

/**
 * The role of the participant.
 * @member {module:model/GoogleCloudContactcenterinsightsV1ConversationParticipant.RoleEnum} role
 */
GoogleCloudContactcenterinsightsV1ConversationParticipant.prototype['role'] = undefined;

/**
 * A user-specified ID representing the participant.
 * @member {String} userId
 */
GoogleCloudContactcenterinsightsV1ConversationParticipant.prototype['userId'] = undefined;





/**
 * Allowed values for the <code>role</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudContactcenterinsightsV1ConversationParticipant['RoleEnum'] = {

    /**
     * value: "ROLE_UNSPECIFIED"
     * @const
     */
    "ROLE_UNSPECIFIED": "ROLE_UNSPECIFIED",

    /**
     * value: "HUMAN_AGENT"
     * @const
     */
    "HUMAN_AGENT": "HUMAN_AGENT",

    /**
     * value: "AUTOMATED_AGENT"
     * @const
     */
    "AUTOMATED_AGENT": "AUTOMATED_AGENT",

    /**
     * value: "END_USER"
     * @const
     */
    "END_USER": "END_USER",

    /**
     * value: "ANY_AGENT"
     * @const
     */
    "ANY_AGENT": "ANY_AGENT"
};



export default GoogleCloudContactcenterinsightsV1ConversationParticipant;

