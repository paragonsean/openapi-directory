/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudContactcenterinsightsV1SentimentData from './GoogleCloudContactcenterinsightsV1SentimentData';

/**
 * The GoogleCloudContactcenterinsightsV1EntityMentionData model module.
 * @module model/GoogleCloudContactcenterinsightsV1EntityMentionData
 * @version v1
 */
class GoogleCloudContactcenterinsightsV1EntityMentionData {
    /**
     * Constructs a new <code>GoogleCloudContactcenterinsightsV1EntityMentionData</code>.
     * The data for an entity mention annotation. This represents a mention of an &#x60;Entity&#x60; in the conversation.
     * @alias module:model/GoogleCloudContactcenterinsightsV1EntityMentionData
     */
    constructor() { 
        
        GoogleCloudContactcenterinsightsV1EntityMentionData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudContactcenterinsightsV1EntityMentionData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudContactcenterinsightsV1EntityMentionData} obj Optional instance to populate.
     * @return {module:model/GoogleCloudContactcenterinsightsV1EntityMentionData} The populated <code>GoogleCloudContactcenterinsightsV1EntityMentionData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudContactcenterinsightsV1EntityMentionData();

            if (data.hasOwnProperty('entityUniqueId')) {
                obj['entityUniqueId'] = ApiClient.convertToType(data['entityUniqueId'], 'String');
            }
            if (data.hasOwnProperty('sentiment')) {
                obj['sentiment'] = GoogleCloudContactcenterinsightsV1SentimentData.constructFromObject(data['sentiment']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudContactcenterinsightsV1EntityMentionData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudContactcenterinsightsV1EntityMentionData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['entityUniqueId'] && !(typeof data['entityUniqueId'] === 'string' || data['entityUniqueId'] instanceof String)) {
            throw new Error("Expected the field `entityUniqueId` to be a primitive type in the JSON string but got " + data['entityUniqueId']);
        }
        // validate the optional field `sentiment`
        if (data['sentiment']) { // data not null
          GoogleCloudContactcenterinsightsV1SentimentData.validateJSON(data['sentiment']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.
 * @member {String} entityUniqueId
 */
GoogleCloudContactcenterinsightsV1EntityMentionData.prototype['entityUniqueId'] = undefined;

/**
 * @member {module:model/GoogleCloudContactcenterinsightsV1SentimentData} sentiment
 */
GoogleCloudContactcenterinsightsV1EntityMentionData.prototype['sentiment'] = undefined;

/**
 * The type of the entity mention.
 * @member {module:model/GoogleCloudContactcenterinsightsV1EntityMentionData.TypeEnum} type
 */
GoogleCloudContactcenterinsightsV1EntityMentionData.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudContactcenterinsightsV1EntityMentionData['TypeEnum'] = {

    /**
     * value: "MENTION_TYPE_UNSPECIFIED"
     * @const
     */
    "MENTION_TYPE_UNSPECIFIED": "MENTION_TYPE_UNSPECIFIED",

    /**
     * value: "PROPER"
     * @const
     */
    "PROPER": "PROPER",

    /**
     * value: "COMMON"
     * @const
     */
    "COMMON": "COMMON"
};



export default GoogleCloudContactcenterinsightsV1EntityMentionData;

