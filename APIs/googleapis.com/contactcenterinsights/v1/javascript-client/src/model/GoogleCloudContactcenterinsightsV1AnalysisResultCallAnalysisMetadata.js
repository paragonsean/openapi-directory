/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudContactcenterinsightsV1CallAnnotation from './GoogleCloudContactcenterinsightsV1CallAnnotation';
import GoogleCloudContactcenterinsightsV1ConversationLevelSentiment from './GoogleCloudContactcenterinsightsV1ConversationLevelSentiment';
import GoogleCloudContactcenterinsightsV1Entity from './GoogleCloudContactcenterinsightsV1Entity';
import GoogleCloudContactcenterinsightsV1Intent from './GoogleCloudContactcenterinsightsV1Intent';
import GoogleCloudContactcenterinsightsV1IssueModelResult from './GoogleCloudContactcenterinsightsV1IssueModelResult';
import GoogleCloudContactcenterinsightsV1PhraseMatchData from './GoogleCloudContactcenterinsightsV1PhraseMatchData';

/**
 * The GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata model module.
 * @module model/GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata
 * @version v1
 */
class GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata {
    /**
     * Constructs a new <code>GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata</code>.
     * Call-specific metadata created during analysis.
     * @alias module:model/GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata
     */
    constructor() { 
        
        GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata} obj Optional instance to populate.
     * @return {module:model/GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata} The populated <code>GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata();

            if (data.hasOwnProperty('annotations')) {
                obj['annotations'] = ApiClient.convertToType(data['annotations'], [GoogleCloudContactcenterinsightsV1CallAnnotation]);
            }
            if (data.hasOwnProperty('entities')) {
                obj['entities'] = ApiClient.convertToType(data['entities'], {'String': GoogleCloudContactcenterinsightsV1Entity});
            }
            if (data.hasOwnProperty('intents')) {
                obj['intents'] = ApiClient.convertToType(data['intents'], {'String': GoogleCloudContactcenterinsightsV1Intent});
            }
            if (data.hasOwnProperty('issueModelResult')) {
                obj['issueModelResult'] = GoogleCloudContactcenterinsightsV1IssueModelResult.constructFromObject(data['issueModelResult']);
            }
            if (data.hasOwnProperty('phraseMatchers')) {
                obj['phraseMatchers'] = ApiClient.convertToType(data['phraseMatchers'], {'String': GoogleCloudContactcenterinsightsV1PhraseMatchData});
            }
            if (data.hasOwnProperty('sentiments')) {
                obj['sentiments'] = ApiClient.convertToType(data['sentiments'], [GoogleCloudContactcenterinsightsV1ConversationLevelSentiment]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata</code>.
     */
    static validateJSON(data) {
        if (data['annotations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['annotations'])) {
                throw new Error("Expected the field `annotations` to be an array in the JSON data but got " + data['annotations']);
            }
            // validate the optional field `annotations` (array)
            for (const item of data['annotations']) {
                GoogleCloudContactcenterinsightsV1CallAnnotation.validateJSON(item);
            };
        }
        // validate the optional field `issueModelResult`
        if (data['issueModelResult']) { // data not null
          GoogleCloudContactcenterinsightsV1IssueModelResult.validateJSON(data['issueModelResult']);
        }
        if (data['sentiments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['sentiments'])) {
                throw new Error("Expected the field `sentiments` to be an array in the JSON data but got " + data['sentiments']);
            }
            // validate the optional field `sentiments` (array)
            for (const item of data['sentiments']) {
                GoogleCloudContactcenterinsightsV1ConversationLevelSentiment.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * A list of call annotations that apply to this call.
 * @member {Array.<module:model/GoogleCloudContactcenterinsightsV1CallAnnotation>} annotations
 */
GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata.prototype['annotations'] = undefined;

/**
 * All the entities in the call.
 * @member {Object.<String, module:model/GoogleCloudContactcenterinsightsV1Entity>} entities
 */
GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata.prototype['entities'] = undefined;

/**
 * All the matched intents in the call.
 * @member {Object.<String, module:model/GoogleCloudContactcenterinsightsV1Intent>} intents
 */
GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata.prototype['intents'] = undefined;

/**
 * @member {module:model/GoogleCloudContactcenterinsightsV1IssueModelResult} issueModelResult
 */
GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata.prototype['issueModelResult'] = undefined;

/**
 * All the matched phrase matchers in the call.
 * @member {Object.<String, module:model/GoogleCloudContactcenterinsightsV1PhraseMatchData>} phraseMatchers
 */
GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata.prototype['phraseMatchers'] = undefined;

/**
 * Overall conversation-level sentiment for each channel of the call.
 * @member {Array.<module:model/GoogleCloudContactcenterinsightsV1ConversationLevelSentiment>} sentiments
 */
GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata.prototype['sentiments'] = undefined;






export default GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata;

