/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudContactcenterinsightsV1AnnotationBoundary from './GoogleCloudContactcenterinsightsV1AnnotationBoundary';
import GoogleCloudContactcenterinsightsV1AnswerFeedback from './GoogleCloudContactcenterinsightsV1AnswerFeedback';
import GoogleCloudContactcenterinsightsV1ArticleSuggestionData from './GoogleCloudContactcenterinsightsV1ArticleSuggestionData';
import GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData from './GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData';
import GoogleCloudContactcenterinsightsV1DialogflowInteractionData from './GoogleCloudContactcenterinsightsV1DialogflowInteractionData';
import GoogleCloudContactcenterinsightsV1FaqAnswerData from './GoogleCloudContactcenterinsightsV1FaqAnswerData';
import GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData from './GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData';
import GoogleCloudContactcenterinsightsV1SmartReplyData from './GoogleCloudContactcenterinsightsV1SmartReplyData';

/**
 * The GoogleCloudContactcenterinsightsV1RuntimeAnnotation model module.
 * @module model/GoogleCloudContactcenterinsightsV1RuntimeAnnotation
 * @version v1
 */
class GoogleCloudContactcenterinsightsV1RuntimeAnnotation {
    /**
     * Constructs a new <code>GoogleCloudContactcenterinsightsV1RuntimeAnnotation</code>.
     * An annotation that was generated during the customer and agent interaction.
     * @alias module:model/GoogleCloudContactcenterinsightsV1RuntimeAnnotation
     */
    constructor() { 
        
        GoogleCloudContactcenterinsightsV1RuntimeAnnotation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudContactcenterinsightsV1RuntimeAnnotation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudContactcenterinsightsV1RuntimeAnnotation} obj Optional instance to populate.
     * @return {module:model/GoogleCloudContactcenterinsightsV1RuntimeAnnotation} The populated <code>GoogleCloudContactcenterinsightsV1RuntimeAnnotation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudContactcenterinsightsV1RuntimeAnnotation();

            if (data.hasOwnProperty('annotationId')) {
                obj['annotationId'] = ApiClient.convertToType(data['annotationId'], 'String');
            }
            if (data.hasOwnProperty('answerFeedback')) {
                obj['answerFeedback'] = GoogleCloudContactcenterinsightsV1AnswerFeedback.constructFromObject(data['answerFeedback']);
            }
            if (data.hasOwnProperty('articleSuggestion')) {
                obj['articleSuggestion'] = GoogleCloudContactcenterinsightsV1ArticleSuggestionData.constructFromObject(data['articleSuggestion']);
            }
            if (data.hasOwnProperty('conversationSummarizationSuggestion')) {
                obj['conversationSummarizationSuggestion'] = GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData.constructFromObject(data['conversationSummarizationSuggestion']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('dialogflowInteraction')) {
                obj['dialogflowInteraction'] = GoogleCloudContactcenterinsightsV1DialogflowInteractionData.constructFromObject(data['dialogflowInteraction']);
            }
            if (data.hasOwnProperty('endBoundary')) {
                obj['endBoundary'] = GoogleCloudContactcenterinsightsV1AnnotationBoundary.constructFromObject(data['endBoundary']);
            }
            if (data.hasOwnProperty('faqAnswer')) {
                obj['faqAnswer'] = GoogleCloudContactcenterinsightsV1FaqAnswerData.constructFromObject(data['faqAnswer']);
            }
            if (data.hasOwnProperty('smartComposeSuggestion')) {
                obj['smartComposeSuggestion'] = GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData.constructFromObject(data['smartComposeSuggestion']);
            }
            if (data.hasOwnProperty('smartReply')) {
                obj['smartReply'] = GoogleCloudContactcenterinsightsV1SmartReplyData.constructFromObject(data['smartReply']);
            }
            if (data.hasOwnProperty('startBoundary')) {
                obj['startBoundary'] = GoogleCloudContactcenterinsightsV1AnnotationBoundary.constructFromObject(data['startBoundary']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudContactcenterinsightsV1RuntimeAnnotation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudContactcenterinsightsV1RuntimeAnnotation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['annotationId'] && !(typeof data['annotationId'] === 'string' || data['annotationId'] instanceof String)) {
            throw new Error("Expected the field `annotationId` to be a primitive type in the JSON string but got " + data['annotationId']);
        }
        // validate the optional field `answerFeedback`
        if (data['answerFeedback']) { // data not null
          GoogleCloudContactcenterinsightsV1AnswerFeedback.validateJSON(data['answerFeedback']);
        }
        // validate the optional field `articleSuggestion`
        if (data['articleSuggestion']) { // data not null
          GoogleCloudContactcenterinsightsV1ArticleSuggestionData.validateJSON(data['articleSuggestion']);
        }
        // validate the optional field `conversationSummarizationSuggestion`
        if (data['conversationSummarizationSuggestion']) { // data not null
          GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData.validateJSON(data['conversationSummarizationSuggestion']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // validate the optional field `dialogflowInteraction`
        if (data['dialogflowInteraction']) { // data not null
          GoogleCloudContactcenterinsightsV1DialogflowInteractionData.validateJSON(data['dialogflowInteraction']);
        }
        // validate the optional field `endBoundary`
        if (data['endBoundary']) { // data not null
          GoogleCloudContactcenterinsightsV1AnnotationBoundary.validateJSON(data['endBoundary']);
        }
        // validate the optional field `faqAnswer`
        if (data['faqAnswer']) { // data not null
          GoogleCloudContactcenterinsightsV1FaqAnswerData.validateJSON(data['faqAnswer']);
        }
        // validate the optional field `smartComposeSuggestion`
        if (data['smartComposeSuggestion']) { // data not null
          GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData.validateJSON(data['smartComposeSuggestion']);
        }
        // validate the optional field `smartReply`
        if (data['smartReply']) { // data not null
          GoogleCloudContactcenterinsightsV1SmartReplyData.validateJSON(data['smartReply']);
        }
        // validate the optional field `startBoundary`
        if (data['startBoundary']) { // data not null
          GoogleCloudContactcenterinsightsV1AnnotationBoundary.validateJSON(data['startBoundary']);
        }

        return true;
    }


}



/**
 * The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}
 * @member {String} annotationId
 */
GoogleCloudContactcenterinsightsV1RuntimeAnnotation.prototype['annotationId'] = undefined;

/**
 * @member {module:model/GoogleCloudContactcenterinsightsV1AnswerFeedback} answerFeedback
 */
GoogleCloudContactcenterinsightsV1RuntimeAnnotation.prototype['answerFeedback'] = undefined;

/**
 * @member {module:model/GoogleCloudContactcenterinsightsV1ArticleSuggestionData} articleSuggestion
 */
GoogleCloudContactcenterinsightsV1RuntimeAnnotation.prototype['articleSuggestion'] = undefined;

/**
 * @member {module:model/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData} conversationSummarizationSuggestion
 */
GoogleCloudContactcenterinsightsV1RuntimeAnnotation.prototype['conversationSummarizationSuggestion'] = undefined;

/**
 * The time at which this annotation was created.
 * @member {String} createTime
 */
GoogleCloudContactcenterinsightsV1RuntimeAnnotation.prototype['createTime'] = undefined;

/**
 * @member {module:model/GoogleCloudContactcenterinsightsV1DialogflowInteractionData} dialogflowInteraction
 */
GoogleCloudContactcenterinsightsV1RuntimeAnnotation.prototype['dialogflowInteraction'] = undefined;

/**
 * @member {module:model/GoogleCloudContactcenterinsightsV1AnnotationBoundary} endBoundary
 */
GoogleCloudContactcenterinsightsV1RuntimeAnnotation.prototype['endBoundary'] = undefined;

/**
 * @member {module:model/GoogleCloudContactcenterinsightsV1FaqAnswerData} faqAnswer
 */
GoogleCloudContactcenterinsightsV1RuntimeAnnotation.prototype['faqAnswer'] = undefined;

/**
 * @member {module:model/GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData} smartComposeSuggestion
 */
GoogleCloudContactcenterinsightsV1RuntimeAnnotation.prototype['smartComposeSuggestion'] = undefined;

/**
 * @member {module:model/GoogleCloudContactcenterinsightsV1SmartReplyData} smartReply
 */
GoogleCloudContactcenterinsightsV1RuntimeAnnotation.prototype['smartReply'] = undefined;

/**
 * @member {module:model/GoogleCloudContactcenterinsightsV1AnnotationBoundary} startBoundary
 */
GoogleCloudContactcenterinsightsV1RuntimeAnnotation.prototype['startBoundary'] = undefined;






export default GoogleCloudContactcenterinsightsV1RuntimeAnnotation;

