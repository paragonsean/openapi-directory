/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudContactcenterinsightsV1AnalysisResult from './GoogleCloudContactcenterinsightsV1AnalysisResult';
import GoogleCloudContactcenterinsightsV1AnnotatorSelector from './GoogleCloudContactcenterinsightsV1AnnotatorSelector';

/**
 * The GoogleCloudContactcenterinsightsV1Analysis model module.
 * @module model/GoogleCloudContactcenterinsightsV1Analysis
 * @version v1
 */
class GoogleCloudContactcenterinsightsV1Analysis {
    /**
     * Constructs a new <code>GoogleCloudContactcenterinsightsV1Analysis</code>.
     * The analysis resource.
     * @alias module:model/GoogleCloudContactcenterinsightsV1Analysis
     */
    constructor() { 
        
        GoogleCloudContactcenterinsightsV1Analysis.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudContactcenterinsightsV1Analysis</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudContactcenterinsightsV1Analysis} obj Optional instance to populate.
     * @return {module:model/GoogleCloudContactcenterinsightsV1Analysis} The populated <code>GoogleCloudContactcenterinsightsV1Analysis</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudContactcenterinsightsV1Analysis();

            if (data.hasOwnProperty('analysisResult')) {
                obj['analysisResult'] = GoogleCloudContactcenterinsightsV1AnalysisResult.constructFromObject(data['analysisResult']);
            }
            if (data.hasOwnProperty('annotatorSelector')) {
                obj['annotatorSelector'] = GoogleCloudContactcenterinsightsV1AnnotatorSelector.constructFromObject(data['annotatorSelector']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('requestTime')) {
                obj['requestTime'] = ApiClient.convertToType(data['requestTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudContactcenterinsightsV1Analysis</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudContactcenterinsightsV1Analysis</code>.
     */
    static validateJSON(data) {
        // validate the optional field `analysisResult`
        if (data['analysisResult']) { // data not null
          GoogleCloudContactcenterinsightsV1AnalysisResult.validateJSON(data['analysisResult']);
        }
        // validate the optional field `annotatorSelector`
        if (data['annotatorSelector']) { // data not null
          GoogleCloudContactcenterinsightsV1AnnotatorSelector.validateJSON(data['annotatorSelector']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['requestTime'] && !(typeof data['requestTime'] === 'string' || data['requestTime'] instanceof String)) {
            throw new Error("Expected the field `requestTime` to be a primitive type in the JSON string but got " + data['requestTime']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudContactcenterinsightsV1AnalysisResult} analysisResult
 */
GoogleCloudContactcenterinsightsV1Analysis.prototype['analysisResult'] = undefined;

/**
 * @member {module:model/GoogleCloudContactcenterinsightsV1AnnotatorSelector} annotatorSelector
 */
GoogleCloudContactcenterinsightsV1Analysis.prototype['annotatorSelector'] = undefined;

/**
 * Output only. The time at which the analysis was created, which occurs when the long-running operation completes.
 * @member {String} createTime
 */
GoogleCloudContactcenterinsightsV1Analysis.prototype['createTime'] = undefined;

/**
 * Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}
 * @member {String} name
 */
GoogleCloudContactcenterinsightsV1Analysis.prototype['name'] = undefined;

/**
 * Output only. The time at which the analysis was requested.
 * @member {String} requestTime
 */
GoogleCloudContactcenterinsightsV1Analysis.prototype['requestTime'] = undefined;






export default GoogleCloudContactcenterinsightsV1Analysis;

