/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig from './GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig';
import GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats from './GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats';

/**
 * The GoogleCloudContactcenterinsightsV1alpha1IssueModel model module.
 * @module model/GoogleCloudContactcenterinsightsV1alpha1IssueModel
 * @version v1
 */
class GoogleCloudContactcenterinsightsV1alpha1IssueModel {
    /**
     * Constructs a new <code>GoogleCloudContactcenterinsightsV1alpha1IssueModel</code>.
     * The issue model resource.
     * @alias module:model/GoogleCloudContactcenterinsightsV1alpha1IssueModel
     */
    constructor() { 
        
        GoogleCloudContactcenterinsightsV1alpha1IssueModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudContactcenterinsightsV1alpha1IssueModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudContactcenterinsightsV1alpha1IssueModel} obj Optional instance to populate.
     * @return {module:model/GoogleCloudContactcenterinsightsV1alpha1IssueModel} The populated <code>GoogleCloudContactcenterinsightsV1alpha1IssueModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudContactcenterinsightsV1alpha1IssueModel();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('inputDataConfig')) {
                obj['inputDataConfig'] = GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig.constructFromObject(data['inputDataConfig']);
            }
            if (data.hasOwnProperty('issueCount')) {
                obj['issueCount'] = ApiClient.convertToType(data['issueCount'], 'String');
            }
            if (data.hasOwnProperty('languageCode')) {
                obj['languageCode'] = ApiClient.convertToType(data['languageCode'], 'String');
            }
            if (data.hasOwnProperty('modelType')) {
                obj['modelType'] = ApiClient.convertToType(data['modelType'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('trainingStats')) {
                obj['trainingStats'] = GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats.constructFromObject(data['trainingStats']);
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudContactcenterinsightsV1alpha1IssueModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudContactcenterinsightsV1alpha1IssueModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `inputDataConfig`
        if (data['inputDataConfig']) { // data not null
          GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig.validateJSON(data['inputDataConfig']);
        }
        // ensure the json data is a string
        if (data['issueCount'] && !(typeof data['issueCount'] === 'string' || data['issueCount'] instanceof String)) {
            throw new Error("Expected the field `issueCount` to be a primitive type in the JSON string but got " + data['issueCount']);
        }
        // ensure the json data is a string
        if (data['languageCode'] && !(typeof data['languageCode'] === 'string' || data['languageCode'] instanceof String)) {
            throw new Error("Expected the field `languageCode` to be a primitive type in the JSON string but got " + data['languageCode']);
        }
        // ensure the json data is a string
        if (data['modelType'] && !(typeof data['modelType'] === 'string' || data['modelType'] instanceof String)) {
            throw new Error("Expected the field `modelType` to be a primitive type in the JSON string but got " + data['modelType']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // validate the optional field `trainingStats`
        if (data['trainingStats']) { // data not null
          GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats.validateJSON(data['trainingStats']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Output only. The time at which this issue model was created.
 * @member {String} createTime
 */
GoogleCloudContactcenterinsightsV1alpha1IssueModel.prototype['createTime'] = undefined;

/**
 * The representative name for the issue model.
 * @member {String} displayName
 */
GoogleCloudContactcenterinsightsV1alpha1IssueModel.prototype['displayName'] = undefined;

/**
 * @member {module:model/GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig} inputDataConfig
 */
GoogleCloudContactcenterinsightsV1alpha1IssueModel.prototype['inputDataConfig'] = undefined;

/**
 * Output only. Number of issues in this issue model.
 * @member {String} issueCount
 */
GoogleCloudContactcenterinsightsV1alpha1IssueModel.prototype['issueCount'] = undefined;

/**
 * Language of the model.
 * @member {String} languageCode
 */
GoogleCloudContactcenterinsightsV1alpha1IssueModel.prototype['languageCode'] = undefined;

/**
 * Type of the model.
 * @member {module:model/GoogleCloudContactcenterinsightsV1alpha1IssueModel.ModelTypeEnum} modelType
 */
GoogleCloudContactcenterinsightsV1alpha1IssueModel.prototype['modelType'] = undefined;

/**
 * Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}
 * @member {String} name
 */
GoogleCloudContactcenterinsightsV1alpha1IssueModel.prototype['name'] = undefined;

/**
 * Output only. State of the model.
 * @member {module:model/GoogleCloudContactcenterinsightsV1alpha1IssueModel.StateEnum} state
 */
GoogleCloudContactcenterinsightsV1alpha1IssueModel.prototype['state'] = undefined;

/**
 * @member {module:model/GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats} trainingStats
 */
GoogleCloudContactcenterinsightsV1alpha1IssueModel.prototype['trainingStats'] = undefined;

/**
 * Output only. The most recent time at which the issue model was updated.
 * @member {String} updateTime
 */
GoogleCloudContactcenterinsightsV1alpha1IssueModel.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>modelType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudContactcenterinsightsV1alpha1IssueModel['ModelTypeEnum'] = {

    /**
     * value: "MODEL_TYPE_UNSPECIFIED"
     * @const
     */
    "MODEL_TYPE_UNSPECIFIED": "MODEL_TYPE_UNSPECIFIED",

    /**
     * value: "TYPE_V1"
     * @const
     */
    "TYPE_V1": "TYPE_V1",

    /**
     * value: "TYPE_V2"
     * @const
     */
    "TYPE_V2": "TYPE_V2"
};


/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudContactcenterinsightsV1alpha1IssueModel['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "UNDEPLOYED"
     * @const
     */
    "UNDEPLOYED": "UNDEPLOYED",

    /**
     * value: "DEPLOYING"
     * @const
     */
    "DEPLOYING": "DEPLOYING",

    /**
     * value: "DEPLOYED"
     * @const
     */
    "DEPLOYED": "DEPLOYED",

    /**
     * value: "UNDEPLOYING"
     * @const
     */
    "UNDEPLOYING": "UNDEPLOYING",

    /**
     * value: "DELETING"
     * @const
     */
    "DELETING": "DELETING"
};



export default GoogleCloudContactcenterinsightsV1alpha1IssueModel;

