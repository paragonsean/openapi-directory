/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData model module.
 * @module model/GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData
 * @version v1
 */
class GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData {
    /**
     * Constructs a new <code>GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData</code>.
     * Agent Assist Smart Compose suggestion data.
     * @alias module:model/GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData
     */
    constructor() { 
        
        GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData} obj Optional instance to populate.
     * @return {module:model/GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData} The populated <code>GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData();

            if (data.hasOwnProperty('confidenceScore')) {
                obj['confidenceScore'] = ApiClient.convertToType(data['confidenceScore'], 'Number');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], {'String': 'String'});
            }
            if (data.hasOwnProperty('queryRecord')) {
                obj['queryRecord'] = ApiClient.convertToType(data['queryRecord'], 'String');
            }
            if (data.hasOwnProperty('suggestion')) {
                obj['suggestion'] = ApiClient.convertToType(data['suggestion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['queryRecord'] && !(typeof data['queryRecord'] === 'string' || data['queryRecord'] instanceof String)) {
            throw new Error("Expected the field `queryRecord` to be a primitive type in the JSON string but got " + data['queryRecord']);
        }
        // ensure the json data is a string
        if (data['suggestion'] && !(typeof data['suggestion'] === 'string' || data['suggestion'] instanceof String)) {
            throw new Error("Expected the field `suggestion` to be a primitive type in the JSON string but got " + data['suggestion']);
        }

        return true;
    }


}



/**
 * The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
 * @member {Number} confidenceScore
 */
GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData.prototype['confidenceScore'] = undefined;

/**
 * Map that contains metadata about the Smart Compose suggestion and the document from which it originates.
 * @member {Object.<String, String>} metadata
 */
GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData.prototype['metadata'] = undefined;

/**
 * The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
 * @member {String} queryRecord
 */
GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData.prototype['queryRecord'] = undefined;

/**
 * The content of the suggestion.
 * @member {String} suggestion
 */
GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData.prototype['suggestion'] = undefined;






export default GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData;

