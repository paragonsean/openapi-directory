/**
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig model module.
 * @module model/GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig
 * @version v1
 */
class GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig {
    /**
     * Constructs a new <code>GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig</code>.
     * Configs for the input data used to create the issue model.
     * @alias module:model/GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig
     */
    constructor() { 
        
        GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig} The populated <code>GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig();

            if (data.hasOwnProperty('filter')) {
                obj['filter'] = ApiClient.convertToType(data['filter'], 'String');
            }
            if (data.hasOwnProperty('medium')) {
                obj['medium'] = ApiClient.convertToType(data['medium'], 'String');
            }
            if (data.hasOwnProperty('trainingConversationsCount')) {
                obj['trainingConversationsCount'] = ApiClient.convertToType(data['trainingConversationsCount'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['filter'] && !(typeof data['filter'] === 'string' || data['filter'] instanceof String)) {
            throw new Error("Expected the field `filter` to be a primitive type in the JSON string but got " + data['filter']);
        }
        // ensure the json data is a string
        if (data['medium'] && !(typeof data['medium'] === 'string' || data['medium'] instanceof String)) {
            throw new Error("Expected the field `medium` to be a primitive type in the JSON string but got " + data['medium']);
        }
        // ensure the json data is a string
        if (data['trainingConversationsCount'] && !(typeof data['trainingConversationsCount'] === 'string' || data['trainingConversationsCount'] instanceof String)) {
            throw new Error("Expected the field `trainingConversationsCount` to be a primitive type in the JSON string but got " + data['trainingConversationsCount']);
        }

        return true;
    }


}



/**
 * A filter to reduce the conversations used for training the model to a specific subset.
 * @member {String} filter
 */
GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig.prototype['filter'] = undefined;

/**
 * Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.
 * @member {module:model/GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig.MediumEnum} medium
 */
GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig.prototype['medium'] = undefined;

/**
 * Output only. Number of conversations used in training. Output only.
 * @member {String} trainingConversationsCount
 */
GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig.prototype['trainingConversationsCount'] = undefined;





/**
 * Allowed values for the <code>medium</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig['MediumEnum'] = {

    /**
     * value: "MEDIUM_UNSPECIFIED"
     * @const
     */
    "MEDIUM_UNSPECIFIED": "MEDIUM_UNSPECIFIED",

    /**
     * value: "PHONE_CALL"
     * @const
     */
    "PHONE_CALL": "PHONE_CALL",

    /**
     * value: "CHAT"
     * @const
     */
    "CHAT": "CHAT"
};



export default GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig;

