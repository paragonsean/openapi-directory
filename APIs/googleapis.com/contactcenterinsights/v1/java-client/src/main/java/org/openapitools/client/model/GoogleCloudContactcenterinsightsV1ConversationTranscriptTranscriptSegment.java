/*
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudContactcenterinsightsV1ConversationParticipant;
import org.openapitools.client.model.GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata;
import org.openapitools.client.model.GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo;
import org.openapitools.client.model.GoogleCloudContactcenterinsightsV1SentimentData;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A segment of a full transcript.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:41.653092-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment {
  public static final String SERIALIZED_NAME_CHANNEL_TAG = "channelTag";
  @SerializedName(SERIALIZED_NAME_CHANNEL_TAG)
  private Integer channelTag;

  public static final String SERIALIZED_NAME_CONFIDENCE = "confidence";
  @SerializedName(SERIALIZED_NAME_CONFIDENCE)
  private Float confidence;

  public static final String SERIALIZED_NAME_DIALOGFLOW_SEGMENT_METADATA = "dialogflowSegmentMetadata";
  @SerializedName(SERIALIZED_NAME_DIALOGFLOW_SEGMENT_METADATA)
  private GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata dialogflowSegmentMetadata;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "languageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_MESSAGE_TIME = "messageTime";
  @SerializedName(SERIALIZED_NAME_MESSAGE_TIME)
  private String messageTime;

  public static final String SERIALIZED_NAME_SEGMENT_PARTICIPANT = "segmentParticipant";
  @SerializedName(SERIALIZED_NAME_SEGMENT_PARTICIPANT)
  private GoogleCloudContactcenterinsightsV1ConversationParticipant segmentParticipant;

  public static final String SERIALIZED_NAME_SENTIMENT = "sentiment";
  @SerializedName(SERIALIZED_NAME_SENTIMENT)
  private GoogleCloudContactcenterinsightsV1SentimentData sentiment;

  public static final String SERIALIZED_NAME_TEXT = "text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  private String text;

  public static final String SERIALIZED_NAME_WORDS = "words";
  @SerializedName(SERIALIZED_NAME_WORDS)
  private List<GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo> words = new ArrayList<>();

  public GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment() {
  }

  public GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment channelTag(Integer channelTag) {
    this.channelTag = channelTag;
    return this;
  }

  /**
   * For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount &#x3D; N, its output values can range from &#39;1&#39; to &#39;N&#39;. A channel tag of 0 indicates that the audio is mono.
   * @return channelTag
   */
  @javax.annotation.Nullable
  public Integer getChannelTag() {
    return channelTag;
  }

  public void setChannelTag(Integer channelTag) {
    this.channelTag = channelTag;
  }


  public GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment confidence(Float confidence) {
    this.confidence = confidence;
    return this;
  }

  /**
   * A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.
   * @return confidence
   */
  @javax.annotation.Nullable
  public Float getConfidence() {
    return confidence;
  }

  public void setConfidence(Float confidence) {
    this.confidence = confidence;
  }


  public GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment dialogflowSegmentMetadata(GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata dialogflowSegmentMetadata) {
    this.dialogflowSegmentMetadata = dialogflowSegmentMetadata;
    return this;
  }

  /**
   * Get dialogflowSegmentMetadata
   * @return dialogflowSegmentMetadata
   */
  @javax.annotation.Nullable
  public GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata getDialogflowSegmentMetadata() {
    return dialogflowSegmentMetadata;
  }

  public void setDialogflowSegmentMetadata(GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata dialogflowSegmentMetadata) {
    this.dialogflowSegmentMetadata = dialogflowSegmentMetadata;
  }


  public GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \&quot;en-US\&quot;.
   * @return languageCode
   */
  @javax.annotation.Nullable
  public String getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment messageTime(String messageTime) {
    this.messageTime = messageTime;
    return this;
  }

  /**
   * The time that the message occurred, if provided.
   * @return messageTime
   */
  @javax.annotation.Nullable
  public String getMessageTime() {
    return messageTime;
  }

  public void setMessageTime(String messageTime) {
    this.messageTime = messageTime;
  }


  public GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment segmentParticipant(GoogleCloudContactcenterinsightsV1ConversationParticipant segmentParticipant) {
    this.segmentParticipant = segmentParticipant;
    return this;
  }

  /**
   * Get segmentParticipant
   * @return segmentParticipant
   */
  @javax.annotation.Nullable
  public GoogleCloudContactcenterinsightsV1ConversationParticipant getSegmentParticipant() {
    return segmentParticipant;
  }

  public void setSegmentParticipant(GoogleCloudContactcenterinsightsV1ConversationParticipant segmentParticipant) {
    this.segmentParticipant = segmentParticipant;
  }


  public GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment sentiment(GoogleCloudContactcenterinsightsV1SentimentData sentiment) {
    this.sentiment = sentiment;
    return this;
  }

  /**
   * Get sentiment
   * @return sentiment
   */
  @javax.annotation.Nullable
  public GoogleCloudContactcenterinsightsV1SentimentData getSentiment() {
    return sentiment;
  }

  public void setSentiment(GoogleCloudContactcenterinsightsV1SentimentData sentiment) {
    this.sentiment = sentiment;
  }


  public GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment text(String text) {
    this.text = text;
    return this;
  }

  /**
   * The text of this segment.
   * @return text
   */
  @javax.annotation.Nullable
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }


  public GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment words(List<GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo> words) {
    this.words = words;
    return this;
  }

  public GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment addWordsItem(GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo wordsItem) {
    if (this.words == null) {
      this.words = new ArrayList<>();
    }
    this.words.add(wordsItem);
    return this;
  }

  /**
   * A list of the word-specific information for each word in the segment.
   * @return words
   */
  @javax.annotation.Nullable
  public List<GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo> getWords() {
    return words;
  }

  public void setWords(List<GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo> words) {
    this.words = words;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment googleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment = (GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment) o;
    return Objects.equals(this.channelTag, googleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment.channelTag) &&
        Objects.equals(this.confidence, googleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment.confidence) &&
        Objects.equals(this.dialogflowSegmentMetadata, googleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment.dialogflowSegmentMetadata) &&
        Objects.equals(this.languageCode, googleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment.languageCode) &&
        Objects.equals(this.messageTime, googleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment.messageTime) &&
        Objects.equals(this.segmentParticipant, googleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment.segmentParticipant) &&
        Objects.equals(this.sentiment, googleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment.sentiment) &&
        Objects.equals(this.text, googleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment.text) &&
        Objects.equals(this.words, googleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment.words);
  }

  @Override
  public int hashCode() {
    return Objects.hash(channelTag, confidence, dialogflowSegmentMetadata, languageCode, messageTime, segmentParticipant, sentiment, text, words);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment {\n");
    sb.append("    channelTag: ").append(toIndentedString(channelTag)).append("\n");
    sb.append("    confidence: ").append(toIndentedString(confidence)).append("\n");
    sb.append("    dialogflowSegmentMetadata: ").append(toIndentedString(dialogflowSegmentMetadata)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    messageTime: ").append(toIndentedString(messageTime)).append("\n");
    sb.append("    segmentParticipant: ").append(toIndentedString(segmentParticipant)).append("\n");
    sb.append("    sentiment: ").append(toIndentedString(sentiment)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    words: ").append(toIndentedString(words)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("channelTag");
    openapiFields.add("confidence");
    openapiFields.add("dialogflowSegmentMetadata");
    openapiFields.add("languageCode");
    openapiFields.add("messageTime");
    openapiFields.add("segmentParticipant");
    openapiFields.add("sentiment");
    openapiFields.add("text");
    openapiFields.add("words");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment is not found in the empty JSON string", GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `dialogflowSegmentMetadata`
      if (jsonObj.get("dialogflowSegmentMetadata") != null && !jsonObj.get("dialogflowSegmentMetadata").isJsonNull()) {
        GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata.validateJsonElement(jsonObj.get("dialogflowSegmentMetadata"));
      }
      if ((jsonObj.get("languageCode") != null && !jsonObj.get("languageCode").isJsonNull()) && !jsonObj.get("languageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `languageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("languageCode").toString()));
      }
      if ((jsonObj.get("messageTime") != null && !jsonObj.get("messageTime").isJsonNull()) && !jsonObj.get("messageTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `messageTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("messageTime").toString()));
      }
      // validate the optional field `segmentParticipant`
      if (jsonObj.get("segmentParticipant") != null && !jsonObj.get("segmentParticipant").isJsonNull()) {
        GoogleCloudContactcenterinsightsV1ConversationParticipant.validateJsonElement(jsonObj.get("segmentParticipant"));
      }
      // validate the optional field `sentiment`
      if (jsonObj.get("sentiment") != null && !jsonObj.get("sentiment").isJsonNull()) {
        GoogleCloudContactcenterinsightsV1SentimentData.validateJsonElement(jsonObj.get("sentiment"));
      }
      if ((jsonObj.get("text") != null && !jsonObj.get("text").isJsonNull()) && !jsonObj.get("text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text").toString()));
      }
      if (jsonObj.get("words") != null && !jsonObj.get("words").isJsonNull()) {
        JsonArray jsonArraywords = jsonObj.getAsJsonArray("words");
        if (jsonArraywords != null) {
          // ensure the json data is an array
          if (!jsonObj.get("words").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `words` to be an array in the JSON string but got `%s`", jsonObj.get("words").toString()));
          }

          // validate the optional field `words` (array)
          for (int i = 0; i < jsonArraywords.size(); i++) {
            GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo.validateJsonElement(jsonArraywords.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment>() {
           @Override
           public void write(JsonWriter out, GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment
   */
  public static GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment.class);
  }

  /**
   * Convert an instance of GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

