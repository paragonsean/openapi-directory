/*
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudContactcenterinsightsV1AnnotationBoundary;
import org.openapitools.client.model.GoogleCloudContactcenterinsightsV1EntityMentionData;
import org.openapitools.client.model.GoogleCloudContactcenterinsightsV1IntentMatchData;
import org.openapitools.client.model.GoogleCloudContactcenterinsightsV1IssueMatchData;
import org.openapitools.client.model.GoogleCloudContactcenterinsightsV1PhraseMatchData;
import org.openapitools.client.model.GoogleCloudContactcenterinsightsV1SentimentData;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A piece of metadata that applies to a window of a call.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:41.653092-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudContactcenterinsightsV1CallAnnotation {
  public static final String SERIALIZED_NAME_ANNOTATION_END_BOUNDARY = "annotationEndBoundary";
  @SerializedName(SERIALIZED_NAME_ANNOTATION_END_BOUNDARY)
  private GoogleCloudContactcenterinsightsV1AnnotationBoundary annotationEndBoundary;

  public static final String SERIALIZED_NAME_ANNOTATION_START_BOUNDARY = "annotationStartBoundary";
  @SerializedName(SERIALIZED_NAME_ANNOTATION_START_BOUNDARY)
  private GoogleCloudContactcenterinsightsV1AnnotationBoundary annotationStartBoundary;

  public static final String SERIALIZED_NAME_CHANNEL_TAG = "channelTag";
  @SerializedName(SERIALIZED_NAME_CHANNEL_TAG)
  private Integer channelTag;

  public static final String SERIALIZED_NAME_ENTITY_MENTION_DATA = "entityMentionData";
  @SerializedName(SERIALIZED_NAME_ENTITY_MENTION_DATA)
  private GoogleCloudContactcenterinsightsV1EntityMentionData entityMentionData;

  public static final String SERIALIZED_NAME_HOLD_DATA = "holdData";
  @SerializedName(SERIALIZED_NAME_HOLD_DATA)
  private Object holdData;

  public static final String SERIALIZED_NAME_INTENT_MATCH_DATA = "intentMatchData";
  @SerializedName(SERIALIZED_NAME_INTENT_MATCH_DATA)
  private GoogleCloudContactcenterinsightsV1IntentMatchData intentMatchData;

  public static final String SERIALIZED_NAME_INTERRUPTION_DATA = "interruptionData";
  @SerializedName(SERIALIZED_NAME_INTERRUPTION_DATA)
  private Object interruptionData;

  public static final String SERIALIZED_NAME_ISSUE_MATCH_DATA = "issueMatchData";
  @SerializedName(SERIALIZED_NAME_ISSUE_MATCH_DATA)
  private GoogleCloudContactcenterinsightsV1IssueMatchData issueMatchData;

  public static final String SERIALIZED_NAME_PHRASE_MATCH_DATA = "phraseMatchData";
  @SerializedName(SERIALIZED_NAME_PHRASE_MATCH_DATA)
  private GoogleCloudContactcenterinsightsV1PhraseMatchData phraseMatchData;

  public static final String SERIALIZED_NAME_SENTIMENT_DATA = "sentimentData";
  @SerializedName(SERIALIZED_NAME_SENTIMENT_DATA)
  private GoogleCloudContactcenterinsightsV1SentimentData sentimentData;

  public static final String SERIALIZED_NAME_SILENCE_DATA = "silenceData";
  @SerializedName(SERIALIZED_NAME_SILENCE_DATA)
  private Object silenceData;

  public GoogleCloudContactcenterinsightsV1CallAnnotation() {
  }

  public GoogleCloudContactcenterinsightsV1CallAnnotation annotationEndBoundary(GoogleCloudContactcenterinsightsV1AnnotationBoundary annotationEndBoundary) {
    this.annotationEndBoundary = annotationEndBoundary;
    return this;
  }

  /**
   * Get annotationEndBoundary
   * @return annotationEndBoundary
   */
  @javax.annotation.Nullable
  public GoogleCloudContactcenterinsightsV1AnnotationBoundary getAnnotationEndBoundary() {
    return annotationEndBoundary;
  }

  public void setAnnotationEndBoundary(GoogleCloudContactcenterinsightsV1AnnotationBoundary annotationEndBoundary) {
    this.annotationEndBoundary = annotationEndBoundary;
  }


  public GoogleCloudContactcenterinsightsV1CallAnnotation annotationStartBoundary(GoogleCloudContactcenterinsightsV1AnnotationBoundary annotationStartBoundary) {
    this.annotationStartBoundary = annotationStartBoundary;
    return this;
  }

  /**
   * Get annotationStartBoundary
   * @return annotationStartBoundary
   */
  @javax.annotation.Nullable
  public GoogleCloudContactcenterinsightsV1AnnotationBoundary getAnnotationStartBoundary() {
    return annotationStartBoundary;
  }

  public void setAnnotationStartBoundary(GoogleCloudContactcenterinsightsV1AnnotationBoundary annotationStartBoundary) {
    this.annotationStartBoundary = annotationStartBoundary;
  }


  public GoogleCloudContactcenterinsightsV1CallAnnotation channelTag(Integer channelTag) {
    this.channelTag = channelTag;
    return this;
  }

  /**
   * The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.
   * @return channelTag
   */
  @javax.annotation.Nullable
  public Integer getChannelTag() {
    return channelTag;
  }

  public void setChannelTag(Integer channelTag) {
    this.channelTag = channelTag;
  }


  public GoogleCloudContactcenterinsightsV1CallAnnotation entityMentionData(GoogleCloudContactcenterinsightsV1EntityMentionData entityMentionData) {
    this.entityMentionData = entityMentionData;
    return this;
  }

  /**
   * Get entityMentionData
   * @return entityMentionData
   */
  @javax.annotation.Nullable
  public GoogleCloudContactcenterinsightsV1EntityMentionData getEntityMentionData() {
    return entityMentionData;
  }

  public void setEntityMentionData(GoogleCloudContactcenterinsightsV1EntityMentionData entityMentionData) {
    this.entityMentionData = entityMentionData;
  }


  public GoogleCloudContactcenterinsightsV1CallAnnotation holdData(Object holdData) {
    this.holdData = holdData;
    return this;
  }

  /**
   * The data for a hold annotation.
   * @return holdData
   */
  @javax.annotation.Nullable
  public Object getHoldData() {
    return holdData;
  }

  public void setHoldData(Object holdData) {
    this.holdData = holdData;
  }


  public GoogleCloudContactcenterinsightsV1CallAnnotation intentMatchData(GoogleCloudContactcenterinsightsV1IntentMatchData intentMatchData) {
    this.intentMatchData = intentMatchData;
    return this;
  }

  /**
   * Get intentMatchData
   * @return intentMatchData
   */
  @javax.annotation.Nullable
  public GoogleCloudContactcenterinsightsV1IntentMatchData getIntentMatchData() {
    return intentMatchData;
  }

  public void setIntentMatchData(GoogleCloudContactcenterinsightsV1IntentMatchData intentMatchData) {
    this.intentMatchData = intentMatchData;
  }


  public GoogleCloudContactcenterinsightsV1CallAnnotation interruptionData(Object interruptionData) {
    this.interruptionData = interruptionData;
    return this;
  }

  /**
   * The data for an interruption annotation.
   * @return interruptionData
   */
  @javax.annotation.Nullable
  public Object getInterruptionData() {
    return interruptionData;
  }

  public void setInterruptionData(Object interruptionData) {
    this.interruptionData = interruptionData;
  }


  public GoogleCloudContactcenterinsightsV1CallAnnotation issueMatchData(GoogleCloudContactcenterinsightsV1IssueMatchData issueMatchData) {
    this.issueMatchData = issueMatchData;
    return this;
  }

  /**
   * Get issueMatchData
   * @return issueMatchData
   */
  @javax.annotation.Nullable
  public GoogleCloudContactcenterinsightsV1IssueMatchData getIssueMatchData() {
    return issueMatchData;
  }

  public void setIssueMatchData(GoogleCloudContactcenterinsightsV1IssueMatchData issueMatchData) {
    this.issueMatchData = issueMatchData;
  }


  public GoogleCloudContactcenterinsightsV1CallAnnotation phraseMatchData(GoogleCloudContactcenterinsightsV1PhraseMatchData phraseMatchData) {
    this.phraseMatchData = phraseMatchData;
    return this;
  }

  /**
   * Get phraseMatchData
   * @return phraseMatchData
   */
  @javax.annotation.Nullable
  public GoogleCloudContactcenterinsightsV1PhraseMatchData getPhraseMatchData() {
    return phraseMatchData;
  }

  public void setPhraseMatchData(GoogleCloudContactcenterinsightsV1PhraseMatchData phraseMatchData) {
    this.phraseMatchData = phraseMatchData;
  }


  public GoogleCloudContactcenterinsightsV1CallAnnotation sentimentData(GoogleCloudContactcenterinsightsV1SentimentData sentimentData) {
    this.sentimentData = sentimentData;
    return this;
  }

  /**
   * Get sentimentData
   * @return sentimentData
   */
  @javax.annotation.Nullable
  public GoogleCloudContactcenterinsightsV1SentimentData getSentimentData() {
    return sentimentData;
  }

  public void setSentimentData(GoogleCloudContactcenterinsightsV1SentimentData sentimentData) {
    this.sentimentData = sentimentData;
  }


  public GoogleCloudContactcenterinsightsV1CallAnnotation silenceData(Object silenceData) {
    this.silenceData = silenceData;
    return this;
  }

  /**
   * The data for a silence annotation.
   * @return silenceData
   */
  @javax.annotation.Nullable
  public Object getSilenceData() {
    return silenceData;
  }

  public void setSilenceData(Object silenceData) {
    this.silenceData = silenceData;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudContactcenterinsightsV1CallAnnotation googleCloudContactcenterinsightsV1CallAnnotation = (GoogleCloudContactcenterinsightsV1CallAnnotation) o;
    return Objects.equals(this.annotationEndBoundary, googleCloudContactcenterinsightsV1CallAnnotation.annotationEndBoundary) &&
        Objects.equals(this.annotationStartBoundary, googleCloudContactcenterinsightsV1CallAnnotation.annotationStartBoundary) &&
        Objects.equals(this.channelTag, googleCloudContactcenterinsightsV1CallAnnotation.channelTag) &&
        Objects.equals(this.entityMentionData, googleCloudContactcenterinsightsV1CallAnnotation.entityMentionData) &&
        Objects.equals(this.holdData, googleCloudContactcenterinsightsV1CallAnnotation.holdData) &&
        Objects.equals(this.intentMatchData, googleCloudContactcenterinsightsV1CallAnnotation.intentMatchData) &&
        Objects.equals(this.interruptionData, googleCloudContactcenterinsightsV1CallAnnotation.interruptionData) &&
        Objects.equals(this.issueMatchData, googleCloudContactcenterinsightsV1CallAnnotation.issueMatchData) &&
        Objects.equals(this.phraseMatchData, googleCloudContactcenterinsightsV1CallAnnotation.phraseMatchData) &&
        Objects.equals(this.sentimentData, googleCloudContactcenterinsightsV1CallAnnotation.sentimentData) &&
        Objects.equals(this.silenceData, googleCloudContactcenterinsightsV1CallAnnotation.silenceData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(annotationEndBoundary, annotationStartBoundary, channelTag, entityMentionData, holdData, intentMatchData, interruptionData, issueMatchData, phraseMatchData, sentimentData, silenceData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudContactcenterinsightsV1CallAnnotation {\n");
    sb.append("    annotationEndBoundary: ").append(toIndentedString(annotationEndBoundary)).append("\n");
    sb.append("    annotationStartBoundary: ").append(toIndentedString(annotationStartBoundary)).append("\n");
    sb.append("    channelTag: ").append(toIndentedString(channelTag)).append("\n");
    sb.append("    entityMentionData: ").append(toIndentedString(entityMentionData)).append("\n");
    sb.append("    holdData: ").append(toIndentedString(holdData)).append("\n");
    sb.append("    intentMatchData: ").append(toIndentedString(intentMatchData)).append("\n");
    sb.append("    interruptionData: ").append(toIndentedString(interruptionData)).append("\n");
    sb.append("    issueMatchData: ").append(toIndentedString(issueMatchData)).append("\n");
    sb.append("    phraseMatchData: ").append(toIndentedString(phraseMatchData)).append("\n");
    sb.append("    sentimentData: ").append(toIndentedString(sentimentData)).append("\n");
    sb.append("    silenceData: ").append(toIndentedString(silenceData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("annotationEndBoundary");
    openapiFields.add("annotationStartBoundary");
    openapiFields.add("channelTag");
    openapiFields.add("entityMentionData");
    openapiFields.add("holdData");
    openapiFields.add("intentMatchData");
    openapiFields.add("interruptionData");
    openapiFields.add("issueMatchData");
    openapiFields.add("phraseMatchData");
    openapiFields.add("sentimentData");
    openapiFields.add("silenceData");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudContactcenterinsightsV1CallAnnotation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudContactcenterinsightsV1CallAnnotation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudContactcenterinsightsV1CallAnnotation is not found in the empty JSON string", GoogleCloudContactcenterinsightsV1CallAnnotation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudContactcenterinsightsV1CallAnnotation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudContactcenterinsightsV1CallAnnotation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `annotationEndBoundary`
      if (jsonObj.get("annotationEndBoundary") != null && !jsonObj.get("annotationEndBoundary").isJsonNull()) {
        GoogleCloudContactcenterinsightsV1AnnotationBoundary.validateJsonElement(jsonObj.get("annotationEndBoundary"));
      }
      // validate the optional field `annotationStartBoundary`
      if (jsonObj.get("annotationStartBoundary") != null && !jsonObj.get("annotationStartBoundary").isJsonNull()) {
        GoogleCloudContactcenterinsightsV1AnnotationBoundary.validateJsonElement(jsonObj.get("annotationStartBoundary"));
      }
      // validate the optional field `entityMentionData`
      if (jsonObj.get("entityMentionData") != null && !jsonObj.get("entityMentionData").isJsonNull()) {
        GoogleCloudContactcenterinsightsV1EntityMentionData.validateJsonElement(jsonObj.get("entityMentionData"));
      }
      // validate the optional field `intentMatchData`
      if (jsonObj.get("intentMatchData") != null && !jsonObj.get("intentMatchData").isJsonNull()) {
        GoogleCloudContactcenterinsightsV1IntentMatchData.validateJsonElement(jsonObj.get("intentMatchData"));
      }
      // validate the optional field `issueMatchData`
      if (jsonObj.get("issueMatchData") != null && !jsonObj.get("issueMatchData").isJsonNull()) {
        GoogleCloudContactcenterinsightsV1IssueMatchData.validateJsonElement(jsonObj.get("issueMatchData"));
      }
      // validate the optional field `phraseMatchData`
      if (jsonObj.get("phraseMatchData") != null && !jsonObj.get("phraseMatchData").isJsonNull()) {
        GoogleCloudContactcenterinsightsV1PhraseMatchData.validateJsonElement(jsonObj.get("phraseMatchData"));
      }
      // validate the optional field `sentimentData`
      if (jsonObj.get("sentimentData") != null && !jsonObj.get("sentimentData").isJsonNull()) {
        GoogleCloudContactcenterinsightsV1SentimentData.validateJsonElement(jsonObj.get("sentimentData"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudContactcenterinsightsV1CallAnnotation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudContactcenterinsightsV1CallAnnotation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudContactcenterinsightsV1CallAnnotation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudContactcenterinsightsV1CallAnnotation.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudContactcenterinsightsV1CallAnnotation>() {
           @Override
           public void write(JsonWriter out, GoogleCloudContactcenterinsightsV1CallAnnotation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudContactcenterinsightsV1CallAnnotation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudContactcenterinsightsV1CallAnnotation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudContactcenterinsightsV1CallAnnotation
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudContactcenterinsightsV1CallAnnotation
   */
  public static GoogleCloudContactcenterinsightsV1CallAnnotation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudContactcenterinsightsV1CallAnnotation.class);
  }

  /**
   * Convert an instance of GoogleCloudContactcenterinsightsV1CallAnnotation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

