/*
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary;
import org.openapitools.client.model.GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback;
import org.openapitools.client.model.GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData;
import org.openapitools.client.model.GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData;
import org.openapitools.client.model.GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData;
import org.openapitools.client.model.GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData;
import org.openapitools.client.model.GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData;
import org.openapitools.client.model.GoogleCloudContactcenterinsightsV1alpha1SmartReplyData;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An annotation that was generated during the customer and agent interaction.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:41.653092-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation {
  public static final String SERIALIZED_NAME_ANNOTATION_ID = "annotationId";
  @SerializedName(SERIALIZED_NAME_ANNOTATION_ID)
  private String annotationId;

  public static final String SERIALIZED_NAME_ANSWER_FEEDBACK = "answerFeedback";
  @SerializedName(SERIALIZED_NAME_ANSWER_FEEDBACK)
  private GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback answerFeedback;

  public static final String SERIALIZED_NAME_ARTICLE_SUGGESTION = "articleSuggestion";
  @SerializedName(SERIALIZED_NAME_ARTICLE_SUGGESTION)
  private GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData articleSuggestion;

  public static final String SERIALIZED_NAME_CONVERSATION_SUMMARIZATION_SUGGESTION = "conversationSummarizationSuggestion";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_SUMMARIZATION_SUGGESTION)
  private GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData conversationSummarizationSuggestion;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DIALOGFLOW_INTERACTION = "dialogflowInteraction";
  @SerializedName(SERIALIZED_NAME_DIALOGFLOW_INTERACTION)
  private GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData dialogflowInteraction;

  public static final String SERIALIZED_NAME_END_BOUNDARY = "endBoundary";
  @SerializedName(SERIALIZED_NAME_END_BOUNDARY)
  private GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary endBoundary;

  public static final String SERIALIZED_NAME_FAQ_ANSWER = "faqAnswer";
  @SerializedName(SERIALIZED_NAME_FAQ_ANSWER)
  private GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData faqAnswer;

  public static final String SERIALIZED_NAME_SMART_COMPOSE_SUGGESTION = "smartComposeSuggestion";
  @SerializedName(SERIALIZED_NAME_SMART_COMPOSE_SUGGESTION)
  private GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData smartComposeSuggestion;

  public static final String SERIALIZED_NAME_SMART_REPLY = "smartReply";
  @SerializedName(SERIALIZED_NAME_SMART_REPLY)
  private GoogleCloudContactcenterinsightsV1alpha1SmartReplyData smartReply;

  public static final String SERIALIZED_NAME_START_BOUNDARY = "startBoundary";
  @SerializedName(SERIALIZED_NAME_START_BOUNDARY)
  private GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary startBoundary;

  public GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation() {
  }

  public GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation annotationId(String annotationId) {
    this.annotationId = annotationId;
    return this;
  }

  /**
   * The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}
   * @return annotationId
   */
  @javax.annotation.Nullable
  public String getAnnotationId() {
    return annotationId;
  }

  public void setAnnotationId(String annotationId) {
    this.annotationId = annotationId;
  }


  public GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation answerFeedback(GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback answerFeedback) {
    this.answerFeedback = answerFeedback;
    return this;
  }

  /**
   * Get answerFeedback
   * @return answerFeedback
   */
  @javax.annotation.Nullable
  public GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback getAnswerFeedback() {
    return answerFeedback;
  }

  public void setAnswerFeedback(GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback answerFeedback) {
    this.answerFeedback = answerFeedback;
  }


  public GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation articleSuggestion(GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData articleSuggestion) {
    this.articleSuggestion = articleSuggestion;
    return this;
  }

  /**
   * Get articleSuggestion
   * @return articleSuggestion
   */
  @javax.annotation.Nullable
  public GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData getArticleSuggestion() {
    return articleSuggestion;
  }

  public void setArticleSuggestion(GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData articleSuggestion) {
    this.articleSuggestion = articleSuggestion;
  }


  public GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation conversationSummarizationSuggestion(GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData conversationSummarizationSuggestion) {
    this.conversationSummarizationSuggestion = conversationSummarizationSuggestion;
    return this;
  }

  /**
   * Get conversationSummarizationSuggestion
   * @return conversationSummarizationSuggestion
   */
  @javax.annotation.Nullable
  public GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData getConversationSummarizationSuggestion() {
    return conversationSummarizationSuggestion;
  }

  public void setConversationSummarizationSuggestion(GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData conversationSummarizationSuggestion) {
    this.conversationSummarizationSuggestion = conversationSummarizationSuggestion;
  }


  public GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * The time at which this annotation was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }


  public GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation dialogflowInteraction(GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData dialogflowInteraction) {
    this.dialogflowInteraction = dialogflowInteraction;
    return this;
  }

  /**
   * Get dialogflowInteraction
   * @return dialogflowInteraction
   */
  @javax.annotation.Nullable
  public GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData getDialogflowInteraction() {
    return dialogflowInteraction;
  }

  public void setDialogflowInteraction(GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData dialogflowInteraction) {
    this.dialogflowInteraction = dialogflowInteraction;
  }


  public GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation endBoundary(GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary endBoundary) {
    this.endBoundary = endBoundary;
    return this;
  }

  /**
   * Get endBoundary
   * @return endBoundary
   */
  @javax.annotation.Nullable
  public GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary getEndBoundary() {
    return endBoundary;
  }

  public void setEndBoundary(GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary endBoundary) {
    this.endBoundary = endBoundary;
  }


  public GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation faqAnswer(GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData faqAnswer) {
    this.faqAnswer = faqAnswer;
    return this;
  }

  /**
   * Get faqAnswer
   * @return faqAnswer
   */
  @javax.annotation.Nullable
  public GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData getFaqAnswer() {
    return faqAnswer;
  }

  public void setFaqAnswer(GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData faqAnswer) {
    this.faqAnswer = faqAnswer;
  }


  public GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation smartComposeSuggestion(GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData smartComposeSuggestion) {
    this.smartComposeSuggestion = smartComposeSuggestion;
    return this;
  }

  /**
   * Get smartComposeSuggestion
   * @return smartComposeSuggestion
   */
  @javax.annotation.Nullable
  public GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData getSmartComposeSuggestion() {
    return smartComposeSuggestion;
  }

  public void setSmartComposeSuggestion(GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData smartComposeSuggestion) {
    this.smartComposeSuggestion = smartComposeSuggestion;
  }


  public GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation smartReply(GoogleCloudContactcenterinsightsV1alpha1SmartReplyData smartReply) {
    this.smartReply = smartReply;
    return this;
  }

  /**
   * Get smartReply
   * @return smartReply
   */
  @javax.annotation.Nullable
  public GoogleCloudContactcenterinsightsV1alpha1SmartReplyData getSmartReply() {
    return smartReply;
  }

  public void setSmartReply(GoogleCloudContactcenterinsightsV1alpha1SmartReplyData smartReply) {
    this.smartReply = smartReply;
  }


  public GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation startBoundary(GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary startBoundary) {
    this.startBoundary = startBoundary;
    return this;
  }

  /**
   * Get startBoundary
   * @return startBoundary
   */
  @javax.annotation.Nullable
  public GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary getStartBoundary() {
    return startBoundary;
  }

  public void setStartBoundary(GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary startBoundary) {
    this.startBoundary = startBoundary;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation googleCloudContactcenterinsightsV1alpha1RuntimeAnnotation = (GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation) o;
    return Objects.equals(this.annotationId, googleCloudContactcenterinsightsV1alpha1RuntimeAnnotation.annotationId) &&
        Objects.equals(this.answerFeedback, googleCloudContactcenterinsightsV1alpha1RuntimeAnnotation.answerFeedback) &&
        Objects.equals(this.articleSuggestion, googleCloudContactcenterinsightsV1alpha1RuntimeAnnotation.articleSuggestion) &&
        Objects.equals(this.conversationSummarizationSuggestion, googleCloudContactcenterinsightsV1alpha1RuntimeAnnotation.conversationSummarizationSuggestion) &&
        Objects.equals(this.createTime, googleCloudContactcenterinsightsV1alpha1RuntimeAnnotation.createTime) &&
        Objects.equals(this.dialogflowInteraction, googleCloudContactcenterinsightsV1alpha1RuntimeAnnotation.dialogflowInteraction) &&
        Objects.equals(this.endBoundary, googleCloudContactcenterinsightsV1alpha1RuntimeAnnotation.endBoundary) &&
        Objects.equals(this.faqAnswer, googleCloudContactcenterinsightsV1alpha1RuntimeAnnotation.faqAnswer) &&
        Objects.equals(this.smartComposeSuggestion, googleCloudContactcenterinsightsV1alpha1RuntimeAnnotation.smartComposeSuggestion) &&
        Objects.equals(this.smartReply, googleCloudContactcenterinsightsV1alpha1RuntimeAnnotation.smartReply) &&
        Objects.equals(this.startBoundary, googleCloudContactcenterinsightsV1alpha1RuntimeAnnotation.startBoundary);
  }

  @Override
  public int hashCode() {
    return Objects.hash(annotationId, answerFeedback, articleSuggestion, conversationSummarizationSuggestion, createTime, dialogflowInteraction, endBoundary, faqAnswer, smartComposeSuggestion, smartReply, startBoundary);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation {\n");
    sb.append("    annotationId: ").append(toIndentedString(annotationId)).append("\n");
    sb.append("    answerFeedback: ").append(toIndentedString(answerFeedback)).append("\n");
    sb.append("    articleSuggestion: ").append(toIndentedString(articleSuggestion)).append("\n");
    sb.append("    conversationSummarizationSuggestion: ").append(toIndentedString(conversationSummarizationSuggestion)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    dialogflowInteraction: ").append(toIndentedString(dialogflowInteraction)).append("\n");
    sb.append("    endBoundary: ").append(toIndentedString(endBoundary)).append("\n");
    sb.append("    faqAnswer: ").append(toIndentedString(faqAnswer)).append("\n");
    sb.append("    smartComposeSuggestion: ").append(toIndentedString(smartComposeSuggestion)).append("\n");
    sb.append("    smartReply: ").append(toIndentedString(smartReply)).append("\n");
    sb.append("    startBoundary: ").append(toIndentedString(startBoundary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("annotationId");
    openapiFields.add("answerFeedback");
    openapiFields.add("articleSuggestion");
    openapiFields.add("conversationSummarizationSuggestion");
    openapiFields.add("createTime");
    openapiFields.add("dialogflowInteraction");
    openapiFields.add("endBoundary");
    openapiFields.add("faqAnswer");
    openapiFields.add("smartComposeSuggestion");
    openapiFields.add("smartReply");
    openapiFields.add("startBoundary");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation is not found in the empty JSON string", GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("annotationId") != null && !jsonObj.get("annotationId").isJsonNull()) && !jsonObj.get("annotationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `annotationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("annotationId").toString()));
      }
      // validate the optional field `answerFeedback`
      if (jsonObj.get("answerFeedback") != null && !jsonObj.get("answerFeedback").isJsonNull()) {
        GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback.validateJsonElement(jsonObj.get("answerFeedback"));
      }
      // validate the optional field `articleSuggestion`
      if (jsonObj.get("articleSuggestion") != null && !jsonObj.get("articleSuggestion").isJsonNull()) {
        GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData.validateJsonElement(jsonObj.get("articleSuggestion"));
      }
      // validate the optional field `conversationSummarizationSuggestion`
      if (jsonObj.get("conversationSummarizationSuggestion") != null && !jsonObj.get("conversationSummarizationSuggestion").isJsonNull()) {
        GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData.validateJsonElement(jsonObj.get("conversationSummarizationSuggestion"));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      // validate the optional field `dialogflowInteraction`
      if (jsonObj.get("dialogflowInteraction") != null && !jsonObj.get("dialogflowInteraction").isJsonNull()) {
        GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData.validateJsonElement(jsonObj.get("dialogflowInteraction"));
      }
      // validate the optional field `endBoundary`
      if (jsonObj.get("endBoundary") != null && !jsonObj.get("endBoundary").isJsonNull()) {
        GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary.validateJsonElement(jsonObj.get("endBoundary"));
      }
      // validate the optional field `faqAnswer`
      if (jsonObj.get("faqAnswer") != null && !jsonObj.get("faqAnswer").isJsonNull()) {
        GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData.validateJsonElement(jsonObj.get("faqAnswer"));
      }
      // validate the optional field `smartComposeSuggestion`
      if (jsonObj.get("smartComposeSuggestion") != null && !jsonObj.get("smartComposeSuggestion").isJsonNull()) {
        GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData.validateJsonElement(jsonObj.get("smartComposeSuggestion"));
      }
      // validate the optional field `smartReply`
      if (jsonObj.get("smartReply") != null && !jsonObj.get("smartReply").isJsonNull()) {
        GoogleCloudContactcenterinsightsV1alpha1SmartReplyData.validateJsonElement(jsonObj.get("smartReply"));
      }
      // validate the optional field `startBoundary`
      if (jsonObj.get("startBoundary") != null && !jsonObj.get("startBoundary").isJsonNull()) {
        GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary.validateJsonElement(jsonObj.get("startBoundary"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation>() {
           @Override
           public void write(JsonWriter out, GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation
   */
  public static GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation.class);
  }

  /**
   * Convert an instance of GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

