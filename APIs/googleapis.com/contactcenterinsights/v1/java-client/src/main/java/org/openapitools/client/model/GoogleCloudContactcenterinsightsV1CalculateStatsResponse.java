/*
 * Contact Center AI Insights API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries;
import org.openapitools.client.model.GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The response for calculating conversation statistics.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:41.653092-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudContactcenterinsightsV1CalculateStatsResponse {
  public static final String SERIALIZED_NAME_AVERAGE_DURATION = "averageDuration";
  @SerializedName(SERIALIZED_NAME_AVERAGE_DURATION)
  private String averageDuration;

  public static final String SERIALIZED_NAME_AVERAGE_TURN_COUNT = "averageTurnCount";
  @SerializedName(SERIALIZED_NAME_AVERAGE_TURN_COUNT)
  private Integer averageTurnCount;

  public static final String SERIALIZED_NAME_CONVERSATION_COUNT = "conversationCount";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_COUNT)
  private Integer conversationCount;

  public static final String SERIALIZED_NAME_CONVERSATION_COUNT_TIME_SERIES = "conversationCountTimeSeries";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_COUNT_TIME_SERIES)
  private GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries conversationCountTimeSeries;

  public static final String SERIALIZED_NAME_CUSTOM_HIGHLIGHTER_MATCHES = "customHighlighterMatches";
  @SerializedName(SERIALIZED_NAME_CUSTOM_HIGHLIGHTER_MATCHES)
  private Map<String, Integer> customHighlighterMatches = new HashMap<>();

  public static final String SERIALIZED_NAME_ISSUE_MATCHES = "issueMatches";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_ISSUE_MATCHES)
  private Map<String, Integer> issueMatches = new HashMap<>();

  public static final String SERIALIZED_NAME_ISSUE_MATCHES_STATS = "issueMatchesStats";
  @SerializedName(SERIALIZED_NAME_ISSUE_MATCHES_STATS)
  private Map<String, GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats> issueMatchesStats = new HashMap<>();

  public static final String SERIALIZED_NAME_SMART_HIGHLIGHTER_MATCHES = "smartHighlighterMatches";
  @SerializedName(SERIALIZED_NAME_SMART_HIGHLIGHTER_MATCHES)
  private Map<String, Integer> smartHighlighterMatches = new HashMap<>();

  public GoogleCloudContactcenterinsightsV1CalculateStatsResponse() {
  }

  public GoogleCloudContactcenterinsightsV1CalculateStatsResponse averageDuration(String averageDuration) {
    this.averageDuration = averageDuration;
    return this;
  }

  /**
   * The average duration of all conversations. The average is calculated using only conversations that have a time duration.
   * @return averageDuration
   */
  @javax.annotation.Nullable
  public String getAverageDuration() {
    return averageDuration;
  }

  public void setAverageDuration(String averageDuration) {
    this.averageDuration = averageDuration;
  }


  public GoogleCloudContactcenterinsightsV1CalculateStatsResponse averageTurnCount(Integer averageTurnCount) {
    this.averageTurnCount = averageTurnCount;
    return this;
  }

  /**
   * The average number of turns per conversation.
   * @return averageTurnCount
   */
  @javax.annotation.Nullable
  public Integer getAverageTurnCount() {
    return averageTurnCount;
  }

  public void setAverageTurnCount(Integer averageTurnCount) {
    this.averageTurnCount = averageTurnCount;
  }


  public GoogleCloudContactcenterinsightsV1CalculateStatsResponse conversationCount(Integer conversationCount) {
    this.conversationCount = conversationCount;
    return this;
  }

  /**
   * The total number of conversations.
   * @return conversationCount
   */
  @javax.annotation.Nullable
  public Integer getConversationCount() {
    return conversationCount;
  }

  public void setConversationCount(Integer conversationCount) {
    this.conversationCount = conversationCount;
  }


  public GoogleCloudContactcenterinsightsV1CalculateStatsResponse conversationCountTimeSeries(GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries conversationCountTimeSeries) {
    this.conversationCountTimeSeries = conversationCountTimeSeries;
    return this;
  }

  /**
   * Get conversationCountTimeSeries
   * @return conversationCountTimeSeries
   */
  @javax.annotation.Nullable
  public GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries getConversationCountTimeSeries() {
    return conversationCountTimeSeries;
  }

  public void setConversationCountTimeSeries(GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries conversationCountTimeSeries) {
    this.conversationCountTimeSeries = conversationCountTimeSeries;
  }


  public GoogleCloudContactcenterinsightsV1CalculateStatsResponse customHighlighterMatches(Map<String, Integer> customHighlighterMatches) {
    this.customHighlighterMatches = customHighlighterMatches;
    return this;
  }

  public GoogleCloudContactcenterinsightsV1CalculateStatsResponse putCustomHighlighterMatchesItem(String key, Integer customHighlighterMatchesItem) {
    if (this.customHighlighterMatches == null) {
      this.customHighlighterMatches = new HashMap<>();
    }
    this.customHighlighterMatches.put(key, customHighlighterMatchesItem);
    return this;
  }

  /**
   * A map associating each custom highlighter resource name with its respective number of matches in the set of conversations.
   * @return customHighlighterMatches
   */
  @javax.annotation.Nullable
  public Map<String, Integer> getCustomHighlighterMatches() {
    return customHighlighterMatches;
  }

  public void setCustomHighlighterMatches(Map<String, Integer> customHighlighterMatches) {
    this.customHighlighterMatches = customHighlighterMatches;
  }


  @Deprecated
  public GoogleCloudContactcenterinsightsV1CalculateStatsResponse issueMatches(Map<String, Integer> issueMatches) {
    this.issueMatches = issueMatches;
    return this;
  }

  public GoogleCloudContactcenterinsightsV1CalculateStatsResponse putIssueMatchesItem(String key, Integer issueMatchesItem) {
    if (this.issueMatches == null) {
      this.issueMatches = new HashMap<>();
    }
    this.issueMatches.put(key, issueMatchesItem);
    return this;
  }

  /**
   * A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: &#x60;projects//locations//issueModels//issues/&#x60; Deprecated, use &#x60;issue_matches_stats&#x60; field instead.
   * @return issueMatches
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Map<String, Integer> getIssueMatches() {
    return issueMatches;
  }

  @Deprecated
  public void setIssueMatches(Map<String, Integer> issueMatches) {
    this.issueMatches = issueMatches;
  }


  public GoogleCloudContactcenterinsightsV1CalculateStatsResponse issueMatchesStats(Map<String, GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats> issueMatchesStats) {
    this.issueMatchesStats = issueMatchesStats;
    return this;
  }

  public GoogleCloudContactcenterinsightsV1CalculateStatsResponse putIssueMatchesStatsItem(String key, GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats issueMatchesStatsItem) {
    if (this.issueMatchesStats == null) {
      this.issueMatchesStats = new HashMap<>();
    }
    this.issueMatchesStats.put(key, issueMatchesStatsItem);
    return this;
  }

  /**
   * A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: &#x60;projects//locations//issueModels//issues/&#x60;
   * @return issueMatchesStats
   */
  @javax.annotation.Nullable
  public Map<String, GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats> getIssueMatchesStats() {
    return issueMatchesStats;
  }

  public void setIssueMatchesStats(Map<String, GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats> issueMatchesStats) {
    this.issueMatchesStats = issueMatchesStats;
  }


  public GoogleCloudContactcenterinsightsV1CalculateStatsResponse smartHighlighterMatches(Map<String, Integer> smartHighlighterMatches) {
    this.smartHighlighterMatches = smartHighlighterMatches;
    return this;
  }

  public GoogleCloudContactcenterinsightsV1CalculateStatsResponse putSmartHighlighterMatchesItem(String key, Integer smartHighlighterMatchesItem) {
    if (this.smartHighlighterMatches == null) {
      this.smartHighlighterMatches = new HashMap<>();
    }
    this.smartHighlighterMatches.put(key, smartHighlighterMatchesItem);
    return this;
  }

  /**
   * A map associating each smart highlighter display name with its respective number of matches in the set of conversations.
   * @return smartHighlighterMatches
   */
  @javax.annotation.Nullable
  public Map<String, Integer> getSmartHighlighterMatches() {
    return smartHighlighterMatches;
  }

  public void setSmartHighlighterMatches(Map<String, Integer> smartHighlighterMatches) {
    this.smartHighlighterMatches = smartHighlighterMatches;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudContactcenterinsightsV1CalculateStatsResponse googleCloudContactcenterinsightsV1CalculateStatsResponse = (GoogleCloudContactcenterinsightsV1CalculateStatsResponse) o;
    return Objects.equals(this.averageDuration, googleCloudContactcenterinsightsV1CalculateStatsResponse.averageDuration) &&
        Objects.equals(this.averageTurnCount, googleCloudContactcenterinsightsV1CalculateStatsResponse.averageTurnCount) &&
        Objects.equals(this.conversationCount, googleCloudContactcenterinsightsV1CalculateStatsResponse.conversationCount) &&
        Objects.equals(this.conversationCountTimeSeries, googleCloudContactcenterinsightsV1CalculateStatsResponse.conversationCountTimeSeries) &&
        Objects.equals(this.customHighlighterMatches, googleCloudContactcenterinsightsV1CalculateStatsResponse.customHighlighterMatches) &&
        Objects.equals(this.issueMatches, googleCloudContactcenterinsightsV1CalculateStatsResponse.issueMatches) &&
        Objects.equals(this.issueMatchesStats, googleCloudContactcenterinsightsV1CalculateStatsResponse.issueMatchesStats) &&
        Objects.equals(this.smartHighlighterMatches, googleCloudContactcenterinsightsV1CalculateStatsResponse.smartHighlighterMatches);
  }

  @Override
  public int hashCode() {
    return Objects.hash(averageDuration, averageTurnCount, conversationCount, conversationCountTimeSeries, customHighlighterMatches, issueMatches, issueMatchesStats, smartHighlighterMatches);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudContactcenterinsightsV1CalculateStatsResponse {\n");
    sb.append("    averageDuration: ").append(toIndentedString(averageDuration)).append("\n");
    sb.append("    averageTurnCount: ").append(toIndentedString(averageTurnCount)).append("\n");
    sb.append("    conversationCount: ").append(toIndentedString(conversationCount)).append("\n");
    sb.append("    conversationCountTimeSeries: ").append(toIndentedString(conversationCountTimeSeries)).append("\n");
    sb.append("    customHighlighterMatches: ").append(toIndentedString(customHighlighterMatches)).append("\n");
    sb.append("    issueMatches: ").append(toIndentedString(issueMatches)).append("\n");
    sb.append("    issueMatchesStats: ").append(toIndentedString(issueMatchesStats)).append("\n");
    sb.append("    smartHighlighterMatches: ").append(toIndentedString(smartHighlighterMatches)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("averageDuration");
    openapiFields.add("averageTurnCount");
    openapiFields.add("conversationCount");
    openapiFields.add("conversationCountTimeSeries");
    openapiFields.add("customHighlighterMatches");
    openapiFields.add("issueMatches");
    openapiFields.add("issueMatchesStats");
    openapiFields.add("smartHighlighterMatches");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudContactcenterinsightsV1CalculateStatsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudContactcenterinsightsV1CalculateStatsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudContactcenterinsightsV1CalculateStatsResponse is not found in the empty JSON string", GoogleCloudContactcenterinsightsV1CalculateStatsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudContactcenterinsightsV1CalculateStatsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudContactcenterinsightsV1CalculateStatsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("averageDuration") != null && !jsonObj.get("averageDuration").isJsonNull()) && !jsonObj.get("averageDuration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `averageDuration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("averageDuration").toString()));
      }
      // validate the optional field `conversationCountTimeSeries`
      if (jsonObj.get("conversationCountTimeSeries") != null && !jsonObj.get("conversationCountTimeSeries").isJsonNull()) {
        GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries.validateJsonElement(jsonObj.get("conversationCountTimeSeries"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudContactcenterinsightsV1CalculateStatsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudContactcenterinsightsV1CalculateStatsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudContactcenterinsightsV1CalculateStatsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudContactcenterinsightsV1CalculateStatsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudContactcenterinsightsV1CalculateStatsResponse>() {
           @Override
           public void write(JsonWriter out, GoogleCloudContactcenterinsightsV1CalculateStatsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudContactcenterinsightsV1CalculateStatsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudContactcenterinsightsV1CalculateStatsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudContactcenterinsightsV1CalculateStatsResponse
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudContactcenterinsightsV1CalculateStatsResponse
   */
  public static GoogleCloudContactcenterinsightsV1CalculateStatsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudContactcenterinsightsV1CalculateStatsResponse.class);
  }

  /**
   * Convert an instance of GoogleCloudContactcenterinsightsV1CalculateStatsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

