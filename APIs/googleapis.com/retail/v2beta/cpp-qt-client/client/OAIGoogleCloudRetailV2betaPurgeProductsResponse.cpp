/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2betaPurgeProductsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2betaPurgeProductsResponse::OAIGoogleCloudRetailV2betaPurgeProductsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2betaPurgeProductsResponse::OAIGoogleCloudRetailV2betaPurgeProductsResponse() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2betaPurgeProductsResponse::~OAIGoogleCloudRetailV2betaPurgeProductsResponse() {}

void OAIGoogleCloudRetailV2betaPurgeProductsResponse::initializeModel() {

    m_purge_count_isSet = false;
    m_purge_count_isValid = false;

    m_purge_sample_isSet = false;
    m_purge_sample_isValid = false;
}

void OAIGoogleCloudRetailV2betaPurgeProductsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2betaPurgeProductsResponse::fromJsonObject(QJsonObject json) {

    m_purge_count_isValid = ::OpenAPI::fromJsonValue(m_purge_count, json[QString("purgeCount")]);
    m_purge_count_isSet = !json[QString("purgeCount")].isNull() && m_purge_count_isValid;

    m_purge_sample_isValid = ::OpenAPI::fromJsonValue(m_purge_sample, json[QString("purgeSample")]);
    m_purge_sample_isSet = !json[QString("purgeSample")].isNull() && m_purge_sample_isValid;
}

QString OAIGoogleCloudRetailV2betaPurgeProductsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2betaPurgeProductsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_purge_count_isSet) {
        obj.insert(QString("purgeCount"), ::OpenAPI::toJsonValue(m_purge_count));
    }
    if (m_purge_sample.size() > 0) {
        obj.insert(QString("purgeSample"), ::OpenAPI::toJsonValue(m_purge_sample));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2betaPurgeProductsResponse::getPurgeCount() const {
    return m_purge_count;
}
void OAIGoogleCloudRetailV2betaPurgeProductsResponse::setPurgeCount(const QString &purge_count) {
    m_purge_count = purge_count;
    m_purge_count_isSet = true;
}

bool OAIGoogleCloudRetailV2betaPurgeProductsResponse::is_purge_count_Set() const{
    return m_purge_count_isSet;
}

bool OAIGoogleCloudRetailV2betaPurgeProductsResponse::is_purge_count_Valid() const{
    return m_purge_count_isValid;
}

QList<QString> OAIGoogleCloudRetailV2betaPurgeProductsResponse::getPurgeSample() const {
    return m_purge_sample;
}
void OAIGoogleCloudRetailV2betaPurgeProductsResponse::setPurgeSample(const QList<QString> &purge_sample) {
    m_purge_sample = purge_sample;
    m_purge_sample_isSet = true;
}

bool OAIGoogleCloudRetailV2betaPurgeProductsResponse::is_purge_sample_Set() const{
    return m_purge_sample_isSet;
}

bool OAIGoogleCloudRetailV2betaPurgeProductsResponse::is_purge_sample_Valid() const{
    return m_purge_sample_isValid;
}

bool OAIGoogleCloudRetailV2betaPurgeProductsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_purge_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_purge_sample.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2betaPurgeProductsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
