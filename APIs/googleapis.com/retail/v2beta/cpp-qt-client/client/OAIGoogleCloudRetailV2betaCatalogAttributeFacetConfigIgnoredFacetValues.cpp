/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues::OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues::OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues::~OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues() {}

void OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues::initializeModel() {

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_values_isSet = false;
    m_values_isValid = false;
}

void OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues::fromJsonObject(QJsonObject json) {

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_values_isValid = ::OpenAPI::fromJsonValue(m_values, json[QString("values")]);
    m_values_isSet = !json[QString("values")].isNull() && m_values_isValid;
}

QString OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues::asJsonObject() const {
    QJsonObject obj;
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_values.size() > 0) {
        obj.insert(QString("values"), ::OpenAPI::toJsonValue(m_values));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues::getEndTime() const {
    return m_end_time;
}
void OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues::getStartTime() const {
    return m_start_time;
}
void OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QList<QString> OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues::getValues() const {
    return m_values;
}
void OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues::setValues(const QList<QString> &values) {
    m_values = values;
    m_values_isSet = true;
}

bool OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues::is_values_Set() const{
    return m_values_isSet;
}

bool OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues::is_values_Valid() const{
    return m_values_isValid;
}

bool OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2betaCatalogAttributeFacetConfigIgnoredFacetValues::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
