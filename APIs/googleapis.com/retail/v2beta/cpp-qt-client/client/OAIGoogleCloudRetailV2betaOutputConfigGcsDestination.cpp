/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2betaOutputConfigGcsDestination.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2betaOutputConfigGcsDestination::OAIGoogleCloudRetailV2betaOutputConfigGcsDestination(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2betaOutputConfigGcsDestination::OAIGoogleCloudRetailV2betaOutputConfigGcsDestination() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2betaOutputConfigGcsDestination::~OAIGoogleCloudRetailV2betaOutputConfigGcsDestination() {}

void OAIGoogleCloudRetailV2betaOutputConfigGcsDestination::initializeModel() {

    m_output_uri_prefix_isSet = false;
    m_output_uri_prefix_isValid = false;
}

void OAIGoogleCloudRetailV2betaOutputConfigGcsDestination::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2betaOutputConfigGcsDestination::fromJsonObject(QJsonObject json) {

    m_output_uri_prefix_isValid = ::OpenAPI::fromJsonValue(m_output_uri_prefix, json[QString("outputUriPrefix")]);
    m_output_uri_prefix_isSet = !json[QString("outputUriPrefix")].isNull() && m_output_uri_prefix_isValid;
}

QString OAIGoogleCloudRetailV2betaOutputConfigGcsDestination::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2betaOutputConfigGcsDestination::asJsonObject() const {
    QJsonObject obj;
    if (m_output_uri_prefix_isSet) {
        obj.insert(QString("outputUriPrefix"), ::OpenAPI::toJsonValue(m_output_uri_prefix));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2betaOutputConfigGcsDestination::getOutputUriPrefix() const {
    return m_output_uri_prefix;
}
void OAIGoogleCloudRetailV2betaOutputConfigGcsDestination::setOutputUriPrefix(const QString &output_uri_prefix) {
    m_output_uri_prefix = output_uri_prefix;
    m_output_uri_prefix_isSet = true;
}

bool OAIGoogleCloudRetailV2betaOutputConfigGcsDestination::is_output_uri_prefix_Set() const{
    return m_output_uri_prefix_isSet;
}

bool OAIGoogleCloudRetailV2betaOutputConfigGcsDestination::is_output_uri_prefix_Valid() const{
    return m_output_uri_prefix_isValid;
}

bool OAIGoogleCloudRetailV2betaOutputConfigGcsDestination::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_output_uri_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2betaOutputConfigGcsDestination::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
