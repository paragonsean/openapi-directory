/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2betaCompleteQueryResponseRecentSearchResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2betaCompleteQueryResponseRecentSearchResult::OAIGoogleCloudRetailV2betaCompleteQueryResponseRecentSearchResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2betaCompleteQueryResponseRecentSearchResult::OAIGoogleCloudRetailV2betaCompleteQueryResponseRecentSearchResult() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2betaCompleteQueryResponseRecentSearchResult::~OAIGoogleCloudRetailV2betaCompleteQueryResponseRecentSearchResult() {}

void OAIGoogleCloudRetailV2betaCompleteQueryResponseRecentSearchResult::initializeModel() {

    m_recent_search_isSet = false;
    m_recent_search_isValid = false;
}

void OAIGoogleCloudRetailV2betaCompleteQueryResponseRecentSearchResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2betaCompleteQueryResponseRecentSearchResult::fromJsonObject(QJsonObject json) {

    m_recent_search_isValid = ::OpenAPI::fromJsonValue(m_recent_search, json[QString("recentSearch")]);
    m_recent_search_isSet = !json[QString("recentSearch")].isNull() && m_recent_search_isValid;
}

QString OAIGoogleCloudRetailV2betaCompleteQueryResponseRecentSearchResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2betaCompleteQueryResponseRecentSearchResult::asJsonObject() const {
    QJsonObject obj;
    if (m_recent_search_isSet) {
        obj.insert(QString("recentSearch"), ::OpenAPI::toJsonValue(m_recent_search));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2betaCompleteQueryResponseRecentSearchResult::getRecentSearch() const {
    return m_recent_search;
}
void OAIGoogleCloudRetailV2betaCompleteQueryResponseRecentSearchResult::setRecentSearch(const QString &recent_search) {
    m_recent_search = recent_search;
    m_recent_search_isSet = true;
}

bool OAIGoogleCloudRetailV2betaCompleteQueryResponseRecentSearchResult::is_recent_search_Set() const{
    return m_recent_search_isSet;
}

bool OAIGoogleCloudRetailV2betaCompleteQueryResponseRecentSearchResult::is_recent_search_Valid() const{
    return m_recent_search_isValid;
}

bool OAIGoogleCloudRetailV2betaCompleteQueryResponseRecentSearchResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_recent_search_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2betaCompleteQueryResponseRecentSearchResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
