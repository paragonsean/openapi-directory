/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2betaListServingConfigsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2betaListServingConfigsResponse::OAIGoogleCloudRetailV2betaListServingConfigsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2betaListServingConfigsResponse::OAIGoogleCloudRetailV2betaListServingConfigsResponse() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2betaListServingConfigsResponse::~OAIGoogleCloudRetailV2betaListServingConfigsResponse() {}

void OAIGoogleCloudRetailV2betaListServingConfigsResponse::initializeModel() {

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;

    m_serving_configs_isSet = false;
    m_serving_configs_isValid = false;
}

void OAIGoogleCloudRetailV2betaListServingConfigsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2betaListServingConfigsResponse::fromJsonObject(QJsonObject json) {

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;

    m_serving_configs_isValid = ::OpenAPI::fromJsonValue(m_serving_configs, json[QString("servingConfigs")]);
    m_serving_configs_isSet = !json[QString("servingConfigs")].isNull() && m_serving_configs_isValid;
}

QString OAIGoogleCloudRetailV2betaListServingConfigsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2betaListServingConfigsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    if (m_serving_configs.size() > 0) {
        obj.insert(QString("servingConfigs"), ::OpenAPI::toJsonValue(m_serving_configs));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2betaListServingConfigsResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIGoogleCloudRetailV2betaListServingConfigsResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIGoogleCloudRetailV2betaListServingConfigsResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIGoogleCloudRetailV2betaListServingConfigsResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

QList<OAIGoogleCloudRetailV2betaServingConfig> OAIGoogleCloudRetailV2betaListServingConfigsResponse::getServingConfigs() const {
    return m_serving_configs;
}
void OAIGoogleCloudRetailV2betaListServingConfigsResponse::setServingConfigs(const QList<OAIGoogleCloudRetailV2betaServingConfig> &serving_configs) {
    m_serving_configs = serving_configs;
    m_serving_configs_isSet = true;
}

bool OAIGoogleCloudRetailV2betaListServingConfigsResponse::is_serving_configs_Set() const{
    return m_serving_configs_isSet;
}

bool OAIGoogleCloudRetailV2betaListServingConfigsResponse::is_serving_configs_Valid() const{
    return m_serving_configs_isValid;
}

bool OAIGoogleCloudRetailV2betaListServingConfigsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_serving_configs.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2betaListServingConfigsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
