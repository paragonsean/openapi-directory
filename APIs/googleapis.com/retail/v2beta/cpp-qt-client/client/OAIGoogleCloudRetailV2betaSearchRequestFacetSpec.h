/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudRetailV2betaSearchRequestFacetSpec.h
 *
 * A facet specification to perform faceted search.
 */

#ifndef OAIGoogleCloudRetailV2betaSearchRequestFacetSpec_H
#define OAIGoogleCloudRetailV2betaSearchRequestFacetSpec_H

#include <QJsonObject>

#include "OAIGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey;

class OAIGoogleCloudRetailV2betaSearchRequestFacetSpec : public OAIObject {
public:
    OAIGoogleCloudRetailV2betaSearchRequestFacetSpec();
    OAIGoogleCloudRetailV2betaSearchRequestFacetSpec(QString json);
    ~OAIGoogleCloudRetailV2betaSearchRequestFacetSpec() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isEnableDynamicPosition() const;
    void setEnableDynamicPosition(const bool &enable_dynamic_position);
    bool is_enable_dynamic_position_Set() const;
    bool is_enable_dynamic_position_Valid() const;

    QList<QString> getExcludedFilterKeys() const;
    void setExcludedFilterKeys(const QList<QString> &excluded_filter_keys);
    bool is_excluded_filter_keys_Set() const;
    bool is_excluded_filter_keys_Valid() const;

    OAIGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey getFacetKey() const;
    void setFacetKey(const OAIGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey &facet_key);
    bool is_facet_key_Set() const;
    bool is_facet_key_Valid() const;

    qint32 getLimit() const;
    void setLimit(const qint32 &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_enable_dynamic_position;
    bool m_enable_dynamic_position_isSet;
    bool m_enable_dynamic_position_isValid;

    QList<QString> m_excluded_filter_keys;
    bool m_excluded_filter_keys_isSet;
    bool m_excluded_filter_keys_isValid;

    OAIGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey m_facet_key;
    bool m_facet_key_isSet;
    bool m_facet_key_isValid;

    qint32 m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudRetailV2betaSearchRequestFacetSpec)

#endif // OAIGoogleCloudRetailV2betaSearchRequestFacetSpec_H
