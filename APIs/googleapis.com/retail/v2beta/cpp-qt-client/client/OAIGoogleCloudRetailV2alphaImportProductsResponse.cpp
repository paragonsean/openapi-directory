/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaImportProductsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaImportProductsResponse::OAIGoogleCloudRetailV2alphaImportProductsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaImportProductsResponse::OAIGoogleCloudRetailV2alphaImportProductsResponse() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaImportProductsResponse::~OAIGoogleCloudRetailV2alphaImportProductsResponse() {}

void OAIGoogleCloudRetailV2alphaImportProductsResponse::initializeModel() {

    m_error_samples_isSet = false;
    m_error_samples_isValid = false;

    m_errors_config_isSet = false;
    m_errors_config_isValid = false;
}

void OAIGoogleCloudRetailV2alphaImportProductsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaImportProductsResponse::fromJsonObject(QJsonObject json) {

    m_error_samples_isValid = ::OpenAPI::fromJsonValue(m_error_samples, json[QString("errorSamples")]);
    m_error_samples_isSet = !json[QString("errorSamples")].isNull() && m_error_samples_isValid;

    m_errors_config_isValid = ::OpenAPI::fromJsonValue(m_errors_config, json[QString("errorsConfig")]);
    m_errors_config_isSet = !json[QString("errorsConfig")].isNull() && m_errors_config_isValid;
}

QString OAIGoogleCloudRetailV2alphaImportProductsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaImportProductsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_error_samples.size() > 0) {
        obj.insert(QString("errorSamples"), ::OpenAPI::toJsonValue(m_error_samples));
    }
    if (m_errors_config.isSet()) {
        obj.insert(QString("errorsConfig"), ::OpenAPI::toJsonValue(m_errors_config));
    }
    return obj;
}

QList<OAIGoogleRpcStatus> OAIGoogleCloudRetailV2alphaImportProductsResponse::getErrorSamples() const {
    return m_error_samples;
}
void OAIGoogleCloudRetailV2alphaImportProductsResponse::setErrorSamples(const QList<OAIGoogleRpcStatus> &error_samples) {
    m_error_samples = error_samples;
    m_error_samples_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaImportProductsResponse::is_error_samples_Set() const{
    return m_error_samples_isSet;
}

bool OAIGoogleCloudRetailV2alphaImportProductsResponse::is_error_samples_Valid() const{
    return m_error_samples_isValid;
}

OAIGoogleCloudRetailV2alphaImportErrorsConfig OAIGoogleCloudRetailV2alphaImportProductsResponse::getErrorsConfig() const {
    return m_errors_config;
}
void OAIGoogleCloudRetailV2alphaImportProductsResponse::setErrorsConfig(const OAIGoogleCloudRetailV2alphaImportErrorsConfig &errors_config) {
    m_errors_config = errors_config;
    m_errors_config_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaImportProductsResponse::is_errors_config_Set() const{
    return m_errors_config_isSet;
}

bool OAIGoogleCloudRetailV2alphaImportProductsResponse::is_errors_config_Valid() const{
    return m_errors_config_isValid;
}

bool OAIGoogleCloudRetailV2alphaImportProductsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error_samples.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_errors_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaImportProductsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
