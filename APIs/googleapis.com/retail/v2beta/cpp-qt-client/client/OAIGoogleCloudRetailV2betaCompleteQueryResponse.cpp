/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2betaCompleteQueryResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2betaCompleteQueryResponse::OAIGoogleCloudRetailV2betaCompleteQueryResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2betaCompleteQueryResponse::OAIGoogleCloudRetailV2betaCompleteQueryResponse() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2betaCompleteQueryResponse::~OAIGoogleCloudRetailV2betaCompleteQueryResponse() {}

void OAIGoogleCloudRetailV2betaCompleteQueryResponse::initializeModel() {

    m_attribution_token_isSet = false;
    m_attribution_token_isValid = false;

    m_completion_results_isSet = false;
    m_completion_results_isValid = false;

    m_recent_search_results_isSet = false;
    m_recent_search_results_isValid = false;
}

void OAIGoogleCloudRetailV2betaCompleteQueryResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2betaCompleteQueryResponse::fromJsonObject(QJsonObject json) {

    m_attribution_token_isValid = ::OpenAPI::fromJsonValue(m_attribution_token, json[QString("attributionToken")]);
    m_attribution_token_isSet = !json[QString("attributionToken")].isNull() && m_attribution_token_isValid;

    m_completion_results_isValid = ::OpenAPI::fromJsonValue(m_completion_results, json[QString("completionResults")]);
    m_completion_results_isSet = !json[QString("completionResults")].isNull() && m_completion_results_isValid;

    m_recent_search_results_isValid = ::OpenAPI::fromJsonValue(m_recent_search_results, json[QString("recentSearchResults")]);
    m_recent_search_results_isSet = !json[QString("recentSearchResults")].isNull() && m_recent_search_results_isValid;
}

QString OAIGoogleCloudRetailV2betaCompleteQueryResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2betaCompleteQueryResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_attribution_token_isSet) {
        obj.insert(QString("attributionToken"), ::OpenAPI::toJsonValue(m_attribution_token));
    }
    if (m_completion_results.size() > 0) {
        obj.insert(QString("completionResults"), ::OpenAPI::toJsonValue(m_completion_results));
    }
    if (m_recent_search_results.size() > 0) {
        obj.insert(QString("recentSearchResults"), ::OpenAPI::toJsonValue(m_recent_search_results));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2betaCompleteQueryResponse::getAttributionToken() const {
    return m_attribution_token;
}
void OAIGoogleCloudRetailV2betaCompleteQueryResponse::setAttributionToken(const QString &attribution_token) {
    m_attribution_token = attribution_token;
    m_attribution_token_isSet = true;
}

bool OAIGoogleCloudRetailV2betaCompleteQueryResponse::is_attribution_token_Set() const{
    return m_attribution_token_isSet;
}

bool OAIGoogleCloudRetailV2betaCompleteQueryResponse::is_attribution_token_Valid() const{
    return m_attribution_token_isValid;
}

QList<OAIGoogleCloudRetailV2betaCompleteQueryResponseCompletionResult> OAIGoogleCloudRetailV2betaCompleteQueryResponse::getCompletionResults() const {
    return m_completion_results;
}
void OAIGoogleCloudRetailV2betaCompleteQueryResponse::setCompletionResults(const QList<OAIGoogleCloudRetailV2betaCompleteQueryResponseCompletionResult> &completion_results) {
    m_completion_results = completion_results;
    m_completion_results_isSet = true;
}

bool OAIGoogleCloudRetailV2betaCompleteQueryResponse::is_completion_results_Set() const{
    return m_completion_results_isSet;
}

bool OAIGoogleCloudRetailV2betaCompleteQueryResponse::is_completion_results_Valid() const{
    return m_completion_results_isValid;
}

QList<OAIGoogleCloudRetailV2betaCompleteQueryResponseRecentSearchResult> OAIGoogleCloudRetailV2betaCompleteQueryResponse::getRecentSearchResults() const {
    return m_recent_search_results;
}
void OAIGoogleCloudRetailV2betaCompleteQueryResponse::setRecentSearchResults(const QList<OAIGoogleCloudRetailV2betaCompleteQueryResponseRecentSearchResult> &recent_search_results) {
    m_recent_search_results = recent_search_results;
    m_recent_search_results_isSet = true;
}

bool OAIGoogleCloudRetailV2betaCompleteQueryResponse::is_recent_search_results_Set() const{
    return m_recent_search_results_isSet;
}

bool OAIGoogleCloudRetailV2betaCompleteQueryResponse::is_recent_search_results_Valid() const{
    return m_recent_search_results_isValid;
}

bool OAIGoogleCloudRetailV2betaCompleteQueryResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribution_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_completion_results.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_recent_search_results.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2betaCompleteQueryResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
