/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2betaListCatalogsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2betaListCatalogsResponse::OAIGoogleCloudRetailV2betaListCatalogsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2betaListCatalogsResponse::OAIGoogleCloudRetailV2betaListCatalogsResponse() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2betaListCatalogsResponse::~OAIGoogleCloudRetailV2betaListCatalogsResponse() {}

void OAIGoogleCloudRetailV2betaListCatalogsResponse::initializeModel() {

    m_catalogs_isSet = false;
    m_catalogs_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;
}

void OAIGoogleCloudRetailV2betaListCatalogsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2betaListCatalogsResponse::fromJsonObject(QJsonObject json) {

    m_catalogs_isValid = ::OpenAPI::fromJsonValue(m_catalogs, json[QString("catalogs")]);
    m_catalogs_isSet = !json[QString("catalogs")].isNull() && m_catalogs_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;
}

QString OAIGoogleCloudRetailV2betaListCatalogsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2betaListCatalogsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_catalogs.size() > 0) {
        obj.insert(QString("catalogs"), ::OpenAPI::toJsonValue(m_catalogs));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    return obj;
}

QList<OAIGoogleCloudRetailV2betaCatalog> OAIGoogleCloudRetailV2betaListCatalogsResponse::getCatalogs() const {
    return m_catalogs;
}
void OAIGoogleCloudRetailV2betaListCatalogsResponse::setCatalogs(const QList<OAIGoogleCloudRetailV2betaCatalog> &catalogs) {
    m_catalogs = catalogs;
    m_catalogs_isSet = true;
}

bool OAIGoogleCloudRetailV2betaListCatalogsResponse::is_catalogs_Set() const{
    return m_catalogs_isSet;
}

bool OAIGoogleCloudRetailV2betaListCatalogsResponse::is_catalogs_Valid() const{
    return m_catalogs_isValid;
}

QString OAIGoogleCloudRetailV2betaListCatalogsResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIGoogleCloudRetailV2betaListCatalogsResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIGoogleCloudRetailV2betaListCatalogsResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIGoogleCloudRetailV2betaListCatalogsResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

bool OAIGoogleCloudRetailV2betaListCatalogsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_catalogs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2betaListCatalogsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
