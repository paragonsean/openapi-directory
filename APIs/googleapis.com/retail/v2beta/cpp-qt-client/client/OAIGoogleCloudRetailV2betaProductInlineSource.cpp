/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2betaProductInlineSource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2betaProductInlineSource::OAIGoogleCloudRetailV2betaProductInlineSource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2betaProductInlineSource::OAIGoogleCloudRetailV2betaProductInlineSource() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2betaProductInlineSource::~OAIGoogleCloudRetailV2betaProductInlineSource() {}

void OAIGoogleCloudRetailV2betaProductInlineSource::initializeModel() {

    m_products_isSet = false;
    m_products_isValid = false;
}

void OAIGoogleCloudRetailV2betaProductInlineSource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2betaProductInlineSource::fromJsonObject(QJsonObject json) {

    m_products_isValid = ::OpenAPI::fromJsonValue(m_products, json[QString("products")]);
    m_products_isSet = !json[QString("products")].isNull() && m_products_isValid;
}

QString OAIGoogleCloudRetailV2betaProductInlineSource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2betaProductInlineSource::asJsonObject() const {
    QJsonObject obj;
    if (m_products.size() > 0) {
        obj.insert(QString("products"), ::OpenAPI::toJsonValue(m_products));
    }
    return obj;
}

QList<OAIGoogleCloudRetailV2betaProduct> OAIGoogleCloudRetailV2betaProductInlineSource::getProducts() const {
    return m_products;
}
void OAIGoogleCloudRetailV2betaProductInlineSource::setProducts(const QList<OAIGoogleCloudRetailV2betaProduct> &products) {
    m_products = products;
    m_products_isSet = true;
}

bool OAIGoogleCloudRetailV2betaProductInlineSource::is_products_Set() const{
    return m_products_isSet;
}

bool OAIGoogleCloudRetailV2betaProductInlineSource::is_products_Valid() const{
    return m_products_isValid;
}

bool OAIGoogleCloudRetailV2betaProductInlineSource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_products.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2betaProductInlineSource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
