/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2betaRuleFilterAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2betaRuleFilterAction::OAIGoogleCloudRetailV2betaRuleFilterAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2betaRuleFilterAction::OAIGoogleCloudRetailV2betaRuleFilterAction() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2betaRuleFilterAction::~OAIGoogleCloudRetailV2betaRuleFilterAction() {}

void OAIGoogleCloudRetailV2betaRuleFilterAction::initializeModel() {

    m_filter_isSet = false;
    m_filter_isValid = false;
}

void OAIGoogleCloudRetailV2betaRuleFilterAction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2betaRuleFilterAction::fromJsonObject(QJsonObject json) {

    m_filter_isValid = ::OpenAPI::fromJsonValue(m_filter, json[QString("filter")]);
    m_filter_isSet = !json[QString("filter")].isNull() && m_filter_isValid;
}

QString OAIGoogleCloudRetailV2betaRuleFilterAction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2betaRuleFilterAction::asJsonObject() const {
    QJsonObject obj;
    if (m_filter_isSet) {
        obj.insert(QString("filter"), ::OpenAPI::toJsonValue(m_filter));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2betaRuleFilterAction::getFilter() const {
    return m_filter;
}
void OAIGoogleCloudRetailV2betaRuleFilterAction::setFilter(const QString &filter) {
    m_filter = filter;
    m_filter_isSet = true;
}

bool OAIGoogleCloudRetailV2betaRuleFilterAction::is_filter_Set() const{
    return m_filter_isSet;
}

bool OAIGoogleCloudRetailV2betaRuleFilterAction::is_filter_Valid() const{
    return m_filter_isValid;
}

bool OAIGoogleCloudRetailV2betaRuleFilterAction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_filter_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2betaRuleFilterAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
