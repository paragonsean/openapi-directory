/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2betaOutputConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2betaOutputConfig::OAIGoogleCloudRetailV2betaOutputConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2betaOutputConfig::OAIGoogleCloudRetailV2betaOutputConfig() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2betaOutputConfig::~OAIGoogleCloudRetailV2betaOutputConfig() {}

void OAIGoogleCloudRetailV2betaOutputConfig::initializeModel() {

    m_bigquery_destination_isSet = false;
    m_bigquery_destination_isValid = false;

    m_gcs_destination_isSet = false;
    m_gcs_destination_isValid = false;
}

void OAIGoogleCloudRetailV2betaOutputConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2betaOutputConfig::fromJsonObject(QJsonObject json) {

    m_bigquery_destination_isValid = ::OpenAPI::fromJsonValue(m_bigquery_destination, json[QString("bigqueryDestination")]);
    m_bigquery_destination_isSet = !json[QString("bigqueryDestination")].isNull() && m_bigquery_destination_isValid;

    m_gcs_destination_isValid = ::OpenAPI::fromJsonValue(m_gcs_destination, json[QString("gcsDestination")]);
    m_gcs_destination_isSet = !json[QString("gcsDestination")].isNull() && m_gcs_destination_isValid;
}

QString OAIGoogleCloudRetailV2betaOutputConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2betaOutputConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_bigquery_destination.isSet()) {
        obj.insert(QString("bigqueryDestination"), ::OpenAPI::toJsonValue(m_bigquery_destination));
    }
    if (m_gcs_destination.isSet()) {
        obj.insert(QString("gcsDestination"), ::OpenAPI::toJsonValue(m_gcs_destination));
    }
    return obj;
}

OAIGoogleCloudRetailV2betaOutputConfigBigQueryDestination OAIGoogleCloudRetailV2betaOutputConfig::getBigqueryDestination() const {
    return m_bigquery_destination;
}
void OAIGoogleCloudRetailV2betaOutputConfig::setBigqueryDestination(const OAIGoogleCloudRetailV2betaOutputConfigBigQueryDestination &bigquery_destination) {
    m_bigquery_destination = bigquery_destination;
    m_bigquery_destination_isSet = true;
}

bool OAIGoogleCloudRetailV2betaOutputConfig::is_bigquery_destination_Set() const{
    return m_bigquery_destination_isSet;
}

bool OAIGoogleCloudRetailV2betaOutputConfig::is_bigquery_destination_Valid() const{
    return m_bigquery_destination_isValid;
}

OAIGoogleCloudRetailV2betaOutputConfigGcsDestination OAIGoogleCloudRetailV2betaOutputConfig::getGcsDestination() const {
    return m_gcs_destination;
}
void OAIGoogleCloudRetailV2betaOutputConfig::setGcsDestination(const OAIGoogleCloudRetailV2betaOutputConfigGcsDestination &gcs_destination) {
    m_gcs_destination = gcs_destination;
    m_gcs_destination_isSet = true;
}

bool OAIGoogleCloudRetailV2betaOutputConfig::is_gcs_destination_Set() const{
    return m_gcs_destination_isSet;
}

bool OAIGoogleCloudRetailV2betaOutputConfig::is_gcs_destination_Valid() const{
    return m_gcs_destination_isValid;
}

bool OAIGoogleCloudRetailV2betaOutputConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bigquery_destination.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_gcs_destination.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2betaOutputConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
