/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2betaAttributesConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2betaAttributesConfig::OAIGoogleCloudRetailV2betaAttributesConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2betaAttributesConfig::OAIGoogleCloudRetailV2betaAttributesConfig() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2betaAttributesConfig::~OAIGoogleCloudRetailV2betaAttributesConfig() {}

void OAIGoogleCloudRetailV2betaAttributesConfig::initializeModel() {

    m_attribute_config_level_isSet = false;
    m_attribute_config_level_isValid = false;

    m_catalog_attributes_isSet = false;
    m_catalog_attributes_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIGoogleCloudRetailV2betaAttributesConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2betaAttributesConfig::fromJsonObject(QJsonObject json) {

    m_attribute_config_level_isValid = ::OpenAPI::fromJsonValue(m_attribute_config_level, json[QString("attributeConfigLevel")]);
    m_attribute_config_level_isSet = !json[QString("attributeConfigLevel")].isNull() && m_attribute_config_level_isValid;

    m_catalog_attributes_isValid = ::OpenAPI::fromJsonValue(m_catalog_attributes, json[QString("catalogAttributes")]);
    m_catalog_attributes_isSet = !json[QString("catalogAttributes")].isNull() && m_catalog_attributes_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIGoogleCloudRetailV2betaAttributesConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2betaAttributesConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_attribute_config_level_isSet) {
        obj.insert(QString("attributeConfigLevel"), ::OpenAPI::toJsonValue(m_attribute_config_level));
    }
    if (m_catalog_attributes.size() > 0) {
        obj.insert(QString("catalogAttributes"), ::OpenAPI::toJsonValue(m_catalog_attributes));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2betaAttributesConfig::getAttributeConfigLevel() const {
    return m_attribute_config_level;
}
void OAIGoogleCloudRetailV2betaAttributesConfig::setAttributeConfigLevel(const QString &attribute_config_level) {
    m_attribute_config_level = attribute_config_level;
    m_attribute_config_level_isSet = true;
}

bool OAIGoogleCloudRetailV2betaAttributesConfig::is_attribute_config_level_Set() const{
    return m_attribute_config_level_isSet;
}

bool OAIGoogleCloudRetailV2betaAttributesConfig::is_attribute_config_level_Valid() const{
    return m_attribute_config_level_isValid;
}

QMap<QString, OAIGoogleCloudRetailV2betaCatalogAttribute> OAIGoogleCloudRetailV2betaAttributesConfig::getCatalogAttributes() const {
    return m_catalog_attributes;
}
void OAIGoogleCloudRetailV2betaAttributesConfig::setCatalogAttributes(const QMap<QString, OAIGoogleCloudRetailV2betaCatalogAttribute> &catalog_attributes) {
    m_catalog_attributes = catalog_attributes;
    m_catalog_attributes_isSet = true;
}

bool OAIGoogleCloudRetailV2betaAttributesConfig::is_catalog_attributes_Set() const{
    return m_catalog_attributes_isSet;
}

bool OAIGoogleCloudRetailV2betaAttributesConfig::is_catalog_attributes_Valid() const{
    return m_catalog_attributes_isValid;
}

QString OAIGoogleCloudRetailV2betaAttributesConfig::getName() const {
    return m_name;
}
void OAIGoogleCloudRetailV2betaAttributesConfig::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudRetailV2betaAttributesConfig::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudRetailV2betaAttributesConfig::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGoogleCloudRetailV2betaAttributesConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribute_config_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_catalog_attributes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2betaAttributesConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
