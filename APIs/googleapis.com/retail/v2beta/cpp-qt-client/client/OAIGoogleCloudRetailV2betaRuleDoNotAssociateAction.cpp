/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction::OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction::OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction::~OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction() {}

void OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction::initializeModel() {

    m_do_not_associate_terms_isSet = false;
    m_do_not_associate_terms_isValid = false;

    m_query_terms_isSet = false;
    m_query_terms_isValid = false;

    m_terms_isSet = false;
    m_terms_isValid = false;
}

void OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction::fromJsonObject(QJsonObject json) {

    m_do_not_associate_terms_isValid = ::OpenAPI::fromJsonValue(m_do_not_associate_terms, json[QString("doNotAssociateTerms")]);
    m_do_not_associate_terms_isSet = !json[QString("doNotAssociateTerms")].isNull() && m_do_not_associate_terms_isValid;

    m_query_terms_isValid = ::OpenAPI::fromJsonValue(m_query_terms, json[QString("queryTerms")]);
    m_query_terms_isSet = !json[QString("queryTerms")].isNull() && m_query_terms_isValid;

    m_terms_isValid = ::OpenAPI::fromJsonValue(m_terms, json[QString("terms")]);
    m_terms_isSet = !json[QString("terms")].isNull() && m_terms_isValid;
}

QString OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction::asJsonObject() const {
    QJsonObject obj;
    if (m_do_not_associate_terms.size() > 0) {
        obj.insert(QString("doNotAssociateTerms"), ::OpenAPI::toJsonValue(m_do_not_associate_terms));
    }
    if (m_query_terms.size() > 0) {
        obj.insert(QString("queryTerms"), ::OpenAPI::toJsonValue(m_query_terms));
    }
    if (m_terms.size() > 0) {
        obj.insert(QString("terms"), ::OpenAPI::toJsonValue(m_terms));
    }
    return obj;
}

QList<QString> OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction::getDoNotAssociateTerms() const {
    return m_do_not_associate_terms;
}
void OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction::setDoNotAssociateTerms(const QList<QString> &do_not_associate_terms) {
    m_do_not_associate_terms = do_not_associate_terms;
    m_do_not_associate_terms_isSet = true;
}

bool OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction::is_do_not_associate_terms_Set() const{
    return m_do_not_associate_terms_isSet;
}

bool OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction::is_do_not_associate_terms_Valid() const{
    return m_do_not_associate_terms_isValid;
}

QList<QString> OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction::getQueryTerms() const {
    return m_query_terms;
}
void OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction::setQueryTerms(const QList<QString> &query_terms) {
    m_query_terms = query_terms;
    m_query_terms_isSet = true;
}

bool OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction::is_query_terms_Set() const{
    return m_query_terms_isSet;
}

bool OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction::is_query_terms_Valid() const{
    return m_query_terms_isValid;
}

QList<QString> OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction::getTerms() const {
    return m_terms;
}
void OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction::setTerms(const QList<QString> &terms) {
    m_terms = terms;
    m_terms_isSet = true;
}

bool OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction::is_terms_Set() const{
    return m_terms_isSet;
}

bool OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction::is_terms_Valid() const{
    return m_terms_isValid;
}

bool OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_do_not_associate_terms.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_terms.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_terms.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2betaRuleDoNotAssociateAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
