/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudRetailV2betaSearchResponseFacetFacetValue.h
 *
 * A facet value which contains value names and their count.
 */

#ifndef OAIGoogleCloudRetailV2betaSearchResponseFacetFacetValue_H
#define OAIGoogleCloudRetailV2betaSearchResponseFacetFacetValue_H

#include <QJsonObject>

#include "OAIGoogleCloudRetailV2betaInterval.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudRetailV2betaInterval;

class OAIGoogleCloudRetailV2betaSearchResponseFacetFacetValue : public OAIObject {
public:
    OAIGoogleCloudRetailV2betaSearchResponseFacetFacetValue();
    OAIGoogleCloudRetailV2betaSearchResponseFacetFacetValue(QString json);
    ~OAIGoogleCloudRetailV2betaSearchResponseFacetFacetValue() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCount() const;
    void setCount(const QString &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    OAIGoogleCloudRetailV2betaInterval getInterval() const;
    void setInterval(const OAIGoogleCloudRetailV2betaInterval &interval);
    bool is_interval_Set() const;
    bool is_interval_Valid() const;

    double getMaxValue() const;
    void setMaxValue(const double &max_value);
    bool is_max_value_Set() const;
    bool is_max_value_Valid() const;

    double getMinValue() const;
    void setMinValue(const double &min_value);
    bool is_min_value_Set() const;
    bool is_min_value_Valid() const;

    QString getValue() const;
    void setValue(const QString &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    OAIGoogleCloudRetailV2betaInterval m_interval;
    bool m_interval_isSet;
    bool m_interval_isValid;

    double m_max_value;
    bool m_max_value_isSet;
    bool m_max_value_isValid;

    double m_min_value;
    bool m_min_value_isSet;
    bool m_min_value_isValid;

    QString m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudRetailV2betaSearchResponseFacetFacetValue)

#endif // OAIGoogleCloudRetailV2betaSearchResponseFacetFacetValue_H
