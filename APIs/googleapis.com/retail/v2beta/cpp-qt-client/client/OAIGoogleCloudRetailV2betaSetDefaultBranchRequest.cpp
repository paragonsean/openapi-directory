/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2betaSetDefaultBranchRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2betaSetDefaultBranchRequest::OAIGoogleCloudRetailV2betaSetDefaultBranchRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2betaSetDefaultBranchRequest::OAIGoogleCloudRetailV2betaSetDefaultBranchRequest() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2betaSetDefaultBranchRequest::~OAIGoogleCloudRetailV2betaSetDefaultBranchRequest() {}

void OAIGoogleCloudRetailV2betaSetDefaultBranchRequest::initializeModel() {

    m_branch_id_isSet = false;
    m_branch_id_isValid = false;

    m_force_isSet = false;
    m_force_isValid = false;

    m_note_isSet = false;
    m_note_isValid = false;
}

void OAIGoogleCloudRetailV2betaSetDefaultBranchRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2betaSetDefaultBranchRequest::fromJsonObject(QJsonObject json) {

    m_branch_id_isValid = ::OpenAPI::fromJsonValue(m_branch_id, json[QString("branchId")]);
    m_branch_id_isSet = !json[QString("branchId")].isNull() && m_branch_id_isValid;

    m_force_isValid = ::OpenAPI::fromJsonValue(m_force, json[QString("force")]);
    m_force_isSet = !json[QString("force")].isNull() && m_force_isValid;

    m_note_isValid = ::OpenAPI::fromJsonValue(m_note, json[QString("note")]);
    m_note_isSet = !json[QString("note")].isNull() && m_note_isValid;
}

QString OAIGoogleCloudRetailV2betaSetDefaultBranchRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2betaSetDefaultBranchRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_branch_id_isSet) {
        obj.insert(QString("branchId"), ::OpenAPI::toJsonValue(m_branch_id));
    }
    if (m_force_isSet) {
        obj.insert(QString("force"), ::OpenAPI::toJsonValue(m_force));
    }
    if (m_note_isSet) {
        obj.insert(QString("note"), ::OpenAPI::toJsonValue(m_note));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2betaSetDefaultBranchRequest::getBranchId() const {
    return m_branch_id;
}
void OAIGoogleCloudRetailV2betaSetDefaultBranchRequest::setBranchId(const QString &branch_id) {
    m_branch_id = branch_id;
    m_branch_id_isSet = true;
}

bool OAIGoogleCloudRetailV2betaSetDefaultBranchRequest::is_branch_id_Set() const{
    return m_branch_id_isSet;
}

bool OAIGoogleCloudRetailV2betaSetDefaultBranchRequest::is_branch_id_Valid() const{
    return m_branch_id_isValid;
}

bool OAIGoogleCloudRetailV2betaSetDefaultBranchRequest::isForce() const {
    return m_force;
}
void OAIGoogleCloudRetailV2betaSetDefaultBranchRequest::setForce(const bool &force) {
    m_force = force;
    m_force_isSet = true;
}

bool OAIGoogleCloudRetailV2betaSetDefaultBranchRequest::is_force_Set() const{
    return m_force_isSet;
}

bool OAIGoogleCloudRetailV2betaSetDefaultBranchRequest::is_force_Valid() const{
    return m_force_isValid;
}

QString OAIGoogleCloudRetailV2betaSetDefaultBranchRequest::getNote() const {
    return m_note;
}
void OAIGoogleCloudRetailV2betaSetDefaultBranchRequest::setNote(const QString &note) {
    m_note = note;
    m_note_isSet = true;
}

bool OAIGoogleCloudRetailV2betaSetDefaultBranchRequest::is_note_Set() const{
    return m_note_isSet;
}

bool OAIGoogleCloudRetailV2betaSetDefaultBranchRequest::is_note_Valid() const{
    return m_note_isValid;
}

bool OAIGoogleCloudRetailV2betaSetDefaultBranchRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_branch_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_force_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_note_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2betaSetDefaultBranchRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
