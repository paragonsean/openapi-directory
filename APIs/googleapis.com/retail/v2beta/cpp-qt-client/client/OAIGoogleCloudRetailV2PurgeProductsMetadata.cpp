/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2PurgeProductsMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2PurgeProductsMetadata::OAIGoogleCloudRetailV2PurgeProductsMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2PurgeProductsMetadata::OAIGoogleCloudRetailV2PurgeProductsMetadata() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2PurgeProductsMetadata::~OAIGoogleCloudRetailV2PurgeProductsMetadata() {}

void OAIGoogleCloudRetailV2PurgeProductsMetadata::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_failure_count_isSet = false;
    m_failure_count_isValid = false;

    m_success_count_isSet = false;
    m_success_count_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudRetailV2PurgeProductsMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2PurgeProductsMetadata::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_failure_count_isValid = ::OpenAPI::fromJsonValue(m_failure_count, json[QString("failureCount")]);
    m_failure_count_isSet = !json[QString("failureCount")].isNull() && m_failure_count_isValid;

    m_success_count_isValid = ::OpenAPI::fromJsonValue(m_success_count, json[QString("successCount")]);
    m_success_count_isSet = !json[QString("successCount")].isNull() && m_success_count_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudRetailV2PurgeProductsMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2PurgeProductsMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_failure_count_isSet) {
        obj.insert(QString("failureCount"), ::OpenAPI::toJsonValue(m_failure_count));
    }
    if (m_success_count_isSet) {
        obj.insert(QString("successCount"), ::OpenAPI::toJsonValue(m_success_count));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2PurgeProductsMetadata::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudRetailV2PurgeProductsMetadata::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudRetailV2PurgeProductsMetadata::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudRetailV2PurgeProductsMetadata::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudRetailV2PurgeProductsMetadata::getFailureCount() const {
    return m_failure_count;
}
void OAIGoogleCloudRetailV2PurgeProductsMetadata::setFailureCount(const QString &failure_count) {
    m_failure_count = failure_count;
    m_failure_count_isSet = true;
}

bool OAIGoogleCloudRetailV2PurgeProductsMetadata::is_failure_count_Set() const{
    return m_failure_count_isSet;
}

bool OAIGoogleCloudRetailV2PurgeProductsMetadata::is_failure_count_Valid() const{
    return m_failure_count_isValid;
}

QString OAIGoogleCloudRetailV2PurgeProductsMetadata::getSuccessCount() const {
    return m_success_count;
}
void OAIGoogleCloudRetailV2PurgeProductsMetadata::setSuccessCount(const QString &success_count) {
    m_success_count = success_count;
    m_success_count_isSet = true;
}

bool OAIGoogleCloudRetailV2PurgeProductsMetadata::is_success_count_Set() const{
    return m_success_count_isSet;
}

bool OAIGoogleCloudRetailV2PurgeProductsMetadata::is_success_count_Valid() const{
    return m_success_count_isValid;
}

QString OAIGoogleCloudRetailV2PurgeProductsMetadata::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudRetailV2PurgeProductsMetadata::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudRetailV2PurgeProductsMetadata::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudRetailV2PurgeProductsMetadata::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudRetailV2PurgeProductsMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_success_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2PurgeProductsMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
