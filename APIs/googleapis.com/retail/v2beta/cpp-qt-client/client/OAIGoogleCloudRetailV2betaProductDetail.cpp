/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2betaProductDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2betaProductDetail::OAIGoogleCloudRetailV2betaProductDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2betaProductDetail::OAIGoogleCloudRetailV2betaProductDetail() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2betaProductDetail::~OAIGoogleCloudRetailV2betaProductDetail() {}

void OAIGoogleCloudRetailV2betaProductDetail::initializeModel() {

    m_product_isSet = false;
    m_product_isValid = false;

    m_quantity_isSet = false;
    m_quantity_isValid = false;
}

void OAIGoogleCloudRetailV2betaProductDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2betaProductDetail::fromJsonObject(QJsonObject json) {

    m_product_isValid = ::OpenAPI::fromJsonValue(m_product, json[QString("product")]);
    m_product_isSet = !json[QString("product")].isNull() && m_product_isValid;

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;
}

QString OAIGoogleCloudRetailV2betaProductDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2betaProductDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_product.isSet()) {
        obj.insert(QString("product"), ::OpenAPI::toJsonValue(m_product));
    }
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    return obj;
}

OAIGoogleCloudRetailV2betaProduct OAIGoogleCloudRetailV2betaProductDetail::getProduct() const {
    return m_product;
}
void OAIGoogleCloudRetailV2betaProductDetail::setProduct(const OAIGoogleCloudRetailV2betaProduct &product) {
    m_product = product;
    m_product_isSet = true;
}

bool OAIGoogleCloudRetailV2betaProductDetail::is_product_Set() const{
    return m_product_isSet;
}

bool OAIGoogleCloudRetailV2betaProductDetail::is_product_Valid() const{
    return m_product_isValid;
}

qint32 OAIGoogleCloudRetailV2betaProductDetail::getQuantity() const {
    return m_quantity;
}
void OAIGoogleCloudRetailV2betaProductDetail::setQuantity(const qint32 &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIGoogleCloudRetailV2betaProductDetail::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIGoogleCloudRetailV2betaProductDetail::is_quantity_Valid() const{
    return m_quantity_isValid;
}

bool OAIGoogleCloudRetailV2betaProductDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_product.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2betaProductDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
