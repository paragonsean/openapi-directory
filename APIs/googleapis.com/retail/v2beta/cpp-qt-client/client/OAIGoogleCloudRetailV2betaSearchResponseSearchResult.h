/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudRetailV2betaSearchResponseSearchResult.h
 *
 * Represents the search results.
 */

#ifndef OAIGoogleCloudRetailV2betaSearchResponseSearchResult_H
#define OAIGoogleCloudRetailV2betaSearchResponseSearchResult_H

#include <QJsonObject>

#include "OAIGoogleCloudRetailV2betaProduct.h"
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudRetailV2betaProduct;

class OAIGoogleCloudRetailV2betaSearchResponseSearchResult : public OAIObject {
public:
    OAIGoogleCloudRetailV2betaSearchResponseSearchResult();
    OAIGoogleCloudRetailV2betaSearchResponseSearchResult(QString json);
    ~OAIGoogleCloudRetailV2betaSearchResponseSearchResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getMatchingVariantCount() const;
    void setMatchingVariantCount(const qint32 &matching_variant_count);
    bool is_matching_variant_count_Set() const;
    bool is_matching_variant_count_Valid() const;

    QMap<QString, QString> getMatchingVariantFields() const;
    void setMatchingVariantFields(const QMap<QString, QString> &matching_variant_fields);
    bool is_matching_variant_fields_Set() const;
    bool is_matching_variant_fields_Valid() const;

    QList<QString> getPersonalLabels() const;
    void setPersonalLabels(const QList<QString> &personal_labels);
    bool is_personal_labels_Set() const;
    bool is_personal_labels_Valid() const;

    OAIGoogleCloudRetailV2betaProduct getProduct() const;
    void setProduct(const OAIGoogleCloudRetailV2betaProduct &product);
    bool is_product_Set() const;
    bool is_product_Valid() const;

    QMap<QString, QJsonValue> getVariantRollupValues() const;
    void setVariantRollupValues(const QMap<QString, QJsonValue> &variant_rollup_values);
    bool is_variant_rollup_values_Set() const;
    bool is_variant_rollup_values_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_matching_variant_count;
    bool m_matching_variant_count_isSet;
    bool m_matching_variant_count_isValid;

    QMap<QString, QString> m_matching_variant_fields;
    bool m_matching_variant_fields_isSet;
    bool m_matching_variant_fields_isValid;

    QList<QString> m_personal_labels;
    bool m_personal_labels_isSet;
    bool m_personal_labels_isValid;

    OAIGoogleCloudRetailV2betaProduct m_product;
    bool m_product_isSet;
    bool m_product_isValid;

    QMap<QString, QJsonValue> m_variant_rollup_values;
    bool m_variant_rollup_values_isSet;
    bool m_variant_rollup_values_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudRetailV2betaSearchResponseSearchResult)

#endif // OAIGoogleCloudRetailV2betaSearchResponseSearchResult_H
