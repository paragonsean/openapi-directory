/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec::OAIGoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec::OAIGoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec::~OAIGoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec() {}

void OAIGoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec::initializeModel() {

    m_boost_isSet = false;
    m_boost_isValid = false;

    m_condition_isSet = false;
    m_condition_isValid = false;
}

void OAIGoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec::fromJsonObject(QJsonObject json) {

    m_boost_isValid = ::OpenAPI::fromJsonValue(m_boost, json[QString("boost")]);
    m_boost_isSet = !json[QString("boost")].isNull() && m_boost_isValid;

    m_condition_isValid = ::OpenAPI::fromJsonValue(m_condition, json[QString("condition")]);
    m_condition_isSet = !json[QString("condition")].isNull() && m_condition_isValid;
}

QString OAIGoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_boost_isSet) {
        obj.insert(QString("boost"), ::OpenAPI::toJsonValue(m_boost));
    }
    if (m_condition_isSet) {
        obj.insert(QString("condition"), ::OpenAPI::toJsonValue(m_condition));
    }
    return obj;
}

float OAIGoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec::getBoost() const {
    return m_boost;
}
void OAIGoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec::setBoost(const float &boost) {
    m_boost = boost;
    m_boost_isSet = true;
}

bool OAIGoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec::is_boost_Set() const{
    return m_boost_isSet;
}

bool OAIGoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec::is_boost_Valid() const{
    return m_boost_isValid;
}

QString OAIGoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec::getCondition() const {
    return m_condition;
}
void OAIGoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec::setCondition(const QString &condition) {
    m_condition = condition;
    m_condition_isSet = true;
}

bool OAIGoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec::is_condition_Set() const{
    return m_condition_isSet;
}

bool OAIGoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec::is_condition_Valid() const{
    return m_condition_isValid;
}

bool OAIGoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_boost_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_condition_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
