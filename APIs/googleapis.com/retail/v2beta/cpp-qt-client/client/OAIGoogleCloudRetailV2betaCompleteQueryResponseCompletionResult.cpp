/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2betaCompleteQueryResponseCompletionResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2betaCompleteQueryResponseCompletionResult::OAIGoogleCloudRetailV2betaCompleteQueryResponseCompletionResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2betaCompleteQueryResponseCompletionResult::OAIGoogleCloudRetailV2betaCompleteQueryResponseCompletionResult() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2betaCompleteQueryResponseCompletionResult::~OAIGoogleCloudRetailV2betaCompleteQueryResponseCompletionResult() {}

void OAIGoogleCloudRetailV2betaCompleteQueryResponseCompletionResult::initializeModel() {

    m_attributes_isSet = false;
    m_attributes_isValid = false;

    m_suggestion_isSet = false;
    m_suggestion_isValid = false;
}

void OAIGoogleCloudRetailV2betaCompleteQueryResponseCompletionResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2betaCompleteQueryResponseCompletionResult::fromJsonObject(QJsonObject json) {

    m_attributes_isValid = ::OpenAPI::fromJsonValue(m_attributes, json[QString("attributes")]);
    m_attributes_isSet = !json[QString("attributes")].isNull() && m_attributes_isValid;

    m_suggestion_isValid = ::OpenAPI::fromJsonValue(m_suggestion, json[QString("suggestion")]);
    m_suggestion_isSet = !json[QString("suggestion")].isNull() && m_suggestion_isValid;
}

QString OAIGoogleCloudRetailV2betaCompleteQueryResponseCompletionResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2betaCompleteQueryResponseCompletionResult::asJsonObject() const {
    QJsonObject obj;
    if (m_attributes.size() > 0) {
        obj.insert(QString("attributes"), ::OpenAPI::toJsonValue(m_attributes));
    }
    if (m_suggestion_isSet) {
        obj.insert(QString("suggestion"), ::OpenAPI::toJsonValue(m_suggestion));
    }
    return obj;
}

QMap<QString, OAIGoogleCloudRetailV2betaCustomAttribute> OAIGoogleCloudRetailV2betaCompleteQueryResponseCompletionResult::getAttributes() const {
    return m_attributes;
}
void OAIGoogleCloudRetailV2betaCompleteQueryResponseCompletionResult::setAttributes(const QMap<QString, OAIGoogleCloudRetailV2betaCustomAttribute> &attributes) {
    m_attributes = attributes;
    m_attributes_isSet = true;
}

bool OAIGoogleCloudRetailV2betaCompleteQueryResponseCompletionResult::is_attributes_Set() const{
    return m_attributes_isSet;
}

bool OAIGoogleCloudRetailV2betaCompleteQueryResponseCompletionResult::is_attributes_Valid() const{
    return m_attributes_isValid;
}

QString OAIGoogleCloudRetailV2betaCompleteQueryResponseCompletionResult::getSuggestion() const {
    return m_suggestion;
}
void OAIGoogleCloudRetailV2betaCompleteQueryResponseCompletionResult::setSuggestion(const QString &suggestion) {
    m_suggestion = suggestion;
    m_suggestion_isSet = true;
}

bool OAIGoogleCloudRetailV2betaCompleteQueryResponseCompletionResult::is_suggestion_Set() const{
    return m_suggestion_isSet;
}

bool OAIGoogleCloudRetailV2betaCompleteQueryResponseCompletionResult::is_suggestion_Valid() const{
    return m_suggestion_isValid;
}

bool OAIGoogleCloudRetailV2betaCompleteQueryResponseCompletionResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attributes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_suggestion_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2betaCompleteQueryResponseCompletionResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
