/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2betaRuleBoostAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2betaRuleBoostAction::OAIGoogleCloudRetailV2betaRuleBoostAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2betaRuleBoostAction::OAIGoogleCloudRetailV2betaRuleBoostAction() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2betaRuleBoostAction::~OAIGoogleCloudRetailV2betaRuleBoostAction() {}

void OAIGoogleCloudRetailV2betaRuleBoostAction::initializeModel() {

    m_boost_isSet = false;
    m_boost_isValid = false;

    m_products_filter_isSet = false;
    m_products_filter_isValid = false;
}

void OAIGoogleCloudRetailV2betaRuleBoostAction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2betaRuleBoostAction::fromJsonObject(QJsonObject json) {

    m_boost_isValid = ::OpenAPI::fromJsonValue(m_boost, json[QString("boost")]);
    m_boost_isSet = !json[QString("boost")].isNull() && m_boost_isValid;

    m_products_filter_isValid = ::OpenAPI::fromJsonValue(m_products_filter, json[QString("productsFilter")]);
    m_products_filter_isSet = !json[QString("productsFilter")].isNull() && m_products_filter_isValid;
}

QString OAIGoogleCloudRetailV2betaRuleBoostAction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2betaRuleBoostAction::asJsonObject() const {
    QJsonObject obj;
    if (m_boost_isSet) {
        obj.insert(QString("boost"), ::OpenAPI::toJsonValue(m_boost));
    }
    if (m_products_filter_isSet) {
        obj.insert(QString("productsFilter"), ::OpenAPI::toJsonValue(m_products_filter));
    }
    return obj;
}

float OAIGoogleCloudRetailV2betaRuleBoostAction::getBoost() const {
    return m_boost;
}
void OAIGoogleCloudRetailV2betaRuleBoostAction::setBoost(const float &boost) {
    m_boost = boost;
    m_boost_isSet = true;
}

bool OAIGoogleCloudRetailV2betaRuleBoostAction::is_boost_Set() const{
    return m_boost_isSet;
}

bool OAIGoogleCloudRetailV2betaRuleBoostAction::is_boost_Valid() const{
    return m_boost_isValid;
}

QString OAIGoogleCloudRetailV2betaRuleBoostAction::getProductsFilter() const {
    return m_products_filter;
}
void OAIGoogleCloudRetailV2betaRuleBoostAction::setProductsFilter(const QString &products_filter) {
    m_products_filter = products_filter;
    m_products_filter_isSet = true;
}

bool OAIGoogleCloudRetailV2betaRuleBoostAction::is_products_filter_Set() const{
    return m_products_filter_isSet;
}

bool OAIGoogleCloudRetailV2betaRuleBoostAction::is_products_filter_Valid() const{
    return m_products_filter_isValid;
}

bool OAIGoogleCloudRetailV2betaRuleBoostAction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_boost_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_products_filter_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2betaRuleBoostAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
