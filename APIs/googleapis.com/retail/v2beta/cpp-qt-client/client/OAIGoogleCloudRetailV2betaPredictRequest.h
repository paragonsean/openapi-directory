/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudRetailV2betaPredictRequest.h
 *
 * Request message for Predict method.
 */

#ifndef OAIGoogleCloudRetailV2betaPredictRequest_H
#define OAIGoogleCloudRetailV2betaPredictRequest_H

#include <QJsonObject>

#include "OAIGoogleCloudRetailV2betaUserEvent.h"
#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudRetailV2betaUserEvent;

class OAIGoogleCloudRetailV2betaPredictRequest : public OAIObject {
public:
    OAIGoogleCloudRetailV2betaPredictRequest();
    OAIGoogleCloudRetailV2betaPredictRequest(QString json);
    ~OAIGoogleCloudRetailV2betaPredictRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFilter() const;
    void setFilter(const QString &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    qint32 getPageSize() const;
    void setPageSize(const qint32 &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    Q_DECL_DEPRECATED QString getPageToken() const;
    Q_DECL_DEPRECATED void setPageToken(const QString &page_token);
    Q_DECL_DEPRECATED bool is_page_token_Set() const;
    Q_DECL_DEPRECATED bool is_page_token_Valid() const;

    QMap<QString, QJsonValue> getParams() const;
    void setParams(const QMap<QString, QJsonValue> &params);
    bool is_params_Set() const;
    bool is_params_Valid() const;

    OAIGoogleCloudRetailV2betaUserEvent getUserEvent() const;
    void setUserEvent(const OAIGoogleCloudRetailV2betaUserEvent &user_event);
    bool is_user_event_Set() const;
    bool is_user_event_Valid() const;

    bool isValidateOnly() const;
    void setValidateOnly(const bool &validate_only);
    bool is_validate_only_Set() const;
    bool is_validate_only_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    qint32 m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;

    QString m_page_token;
    bool m_page_token_isSet;
    bool m_page_token_isValid;

    QMap<QString, QJsonValue> m_params;
    bool m_params_isSet;
    bool m_params_isValid;

    OAIGoogleCloudRetailV2betaUserEvent m_user_event;
    bool m_user_event_isSet;
    bool m_user_event_isValid;

    bool m_validate_only;
    bool m_validate_only_isSet;
    bool m_validate_only_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudRetailV2betaPredictRequest)

#endif // OAIGoogleCloudRetailV2betaPredictRequest_H
