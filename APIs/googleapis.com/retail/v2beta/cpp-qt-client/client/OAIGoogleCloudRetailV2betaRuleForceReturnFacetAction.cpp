/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2betaRuleForceReturnFacetAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2betaRuleForceReturnFacetAction::OAIGoogleCloudRetailV2betaRuleForceReturnFacetAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2betaRuleForceReturnFacetAction::OAIGoogleCloudRetailV2betaRuleForceReturnFacetAction() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2betaRuleForceReturnFacetAction::~OAIGoogleCloudRetailV2betaRuleForceReturnFacetAction() {}

void OAIGoogleCloudRetailV2betaRuleForceReturnFacetAction::initializeModel() {

    m_facet_position_adjustments_isSet = false;
    m_facet_position_adjustments_isValid = false;
}

void OAIGoogleCloudRetailV2betaRuleForceReturnFacetAction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2betaRuleForceReturnFacetAction::fromJsonObject(QJsonObject json) {

    m_facet_position_adjustments_isValid = ::OpenAPI::fromJsonValue(m_facet_position_adjustments, json[QString("facetPositionAdjustments")]);
    m_facet_position_adjustments_isSet = !json[QString("facetPositionAdjustments")].isNull() && m_facet_position_adjustments_isValid;
}

QString OAIGoogleCloudRetailV2betaRuleForceReturnFacetAction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2betaRuleForceReturnFacetAction::asJsonObject() const {
    QJsonObject obj;
    if (m_facet_position_adjustments.size() > 0) {
        obj.insert(QString("facetPositionAdjustments"), ::OpenAPI::toJsonValue(m_facet_position_adjustments));
    }
    return obj;
}

QList<OAIGoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment> OAIGoogleCloudRetailV2betaRuleForceReturnFacetAction::getFacetPositionAdjustments() const {
    return m_facet_position_adjustments;
}
void OAIGoogleCloudRetailV2betaRuleForceReturnFacetAction::setFacetPositionAdjustments(const QList<OAIGoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment> &facet_position_adjustments) {
    m_facet_position_adjustments = facet_position_adjustments;
    m_facet_position_adjustments_isSet = true;
}

bool OAIGoogleCloudRetailV2betaRuleForceReturnFacetAction::is_facet_position_adjustments_Set() const{
    return m_facet_position_adjustments_isSet;
}

bool OAIGoogleCloudRetailV2betaRuleForceReturnFacetAction::is_facet_position_adjustments_Valid() const{
    return m_facet_position_adjustments_isValid;
}

bool OAIGoogleCloudRetailV2betaRuleForceReturnFacetAction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_facet_position_adjustments.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2betaRuleForceReturnFacetAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
