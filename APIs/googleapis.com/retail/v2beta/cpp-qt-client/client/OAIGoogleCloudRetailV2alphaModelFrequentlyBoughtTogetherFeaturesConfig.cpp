/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaModelFrequentlyBoughtTogetherFeaturesConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaModelFrequentlyBoughtTogetherFeaturesConfig::OAIGoogleCloudRetailV2alphaModelFrequentlyBoughtTogetherFeaturesConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaModelFrequentlyBoughtTogetherFeaturesConfig::OAIGoogleCloudRetailV2alphaModelFrequentlyBoughtTogetherFeaturesConfig() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaModelFrequentlyBoughtTogetherFeaturesConfig::~OAIGoogleCloudRetailV2alphaModelFrequentlyBoughtTogetherFeaturesConfig() {}

void OAIGoogleCloudRetailV2alphaModelFrequentlyBoughtTogetherFeaturesConfig::initializeModel() {

    m_context_products_type_isSet = false;
    m_context_products_type_isValid = false;
}

void OAIGoogleCloudRetailV2alphaModelFrequentlyBoughtTogetherFeaturesConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaModelFrequentlyBoughtTogetherFeaturesConfig::fromJsonObject(QJsonObject json) {

    m_context_products_type_isValid = ::OpenAPI::fromJsonValue(m_context_products_type, json[QString("contextProductsType")]);
    m_context_products_type_isSet = !json[QString("contextProductsType")].isNull() && m_context_products_type_isValid;
}

QString OAIGoogleCloudRetailV2alphaModelFrequentlyBoughtTogetherFeaturesConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaModelFrequentlyBoughtTogetherFeaturesConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_context_products_type_isSet) {
        obj.insert(QString("contextProductsType"), ::OpenAPI::toJsonValue(m_context_products_type));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2alphaModelFrequentlyBoughtTogetherFeaturesConfig::getContextProductsType() const {
    return m_context_products_type;
}
void OAIGoogleCloudRetailV2alphaModelFrequentlyBoughtTogetherFeaturesConfig::setContextProductsType(const QString &context_products_type) {
    m_context_products_type = context_products_type;
    m_context_products_type_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaModelFrequentlyBoughtTogetherFeaturesConfig::is_context_products_type_Set() const{
    return m_context_products_type_isSet;
}

bool OAIGoogleCloudRetailV2alphaModelFrequentlyBoughtTogetherFeaturesConfig::is_context_products_type_Valid() const{
    return m_context_products_type_isValid;
}

bool OAIGoogleCloudRetailV2alphaModelFrequentlyBoughtTogetherFeaturesConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_context_products_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaModelFrequentlyBoughtTogetherFeaturesConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
