/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2betaRuleRemoveFacetAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2betaRuleRemoveFacetAction::OAIGoogleCloudRetailV2betaRuleRemoveFacetAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2betaRuleRemoveFacetAction::OAIGoogleCloudRetailV2betaRuleRemoveFacetAction() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2betaRuleRemoveFacetAction::~OAIGoogleCloudRetailV2betaRuleRemoveFacetAction() {}

void OAIGoogleCloudRetailV2betaRuleRemoveFacetAction::initializeModel() {

    m_attribute_names_isSet = false;
    m_attribute_names_isValid = false;
}

void OAIGoogleCloudRetailV2betaRuleRemoveFacetAction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2betaRuleRemoveFacetAction::fromJsonObject(QJsonObject json) {

    m_attribute_names_isValid = ::OpenAPI::fromJsonValue(m_attribute_names, json[QString("attributeNames")]);
    m_attribute_names_isSet = !json[QString("attributeNames")].isNull() && m_attribute_names_isValid;
}

QString OAIGoogleCloudRetailV2betaRuleRemoveFacetAction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2betaRuleRemoveFacetAction::asJsonObject() const {
    QJsonObject obj;
    if (m_attribute_names.size() > 0) {
        obj.insert(QString("attributeNames"), ::OpenAPI::toJsonValue(m_attribute_names));
    }
    return obj;
}

QList<QString> OAIGoogleCloudRetailV2betaRuleRemoveFacetAction::getAttributeNames() const {
    return m_attribute_names;
}
void OAIGoogleCloudRetailV2betaRuleRemoveFacetAction::setAttributeNames(const QList<QString> &attribute_names) {
    m_attribute_names = attribute_names;
    m_attribute_names_isSet = true;
}

bool OAIGoogleCloudRetailV2betaRuleRemoveFacetAction::is_attribute_names_Set() const{
    return m_attribute_names_isSet;
}

bool OAIGoogleCloudRetailV2betaRuleRemoveFacetAction::is_attribute_names_Valid() const{
    return m_attribute_names_isValid;
}

bool OAIGoogleCloudRetailV2betaRuleRemoveFacetAction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribute_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2betaRuleRemoveFacetAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
