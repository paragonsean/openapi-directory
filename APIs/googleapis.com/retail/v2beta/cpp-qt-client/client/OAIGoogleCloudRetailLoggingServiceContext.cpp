/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailLoggingServiceContext.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailLoggingServiceContext::OAIGoogleCloudRetailLoggingServiceContext(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailLoggingServiceContext::OAIGoogleCloudRetailLoggingServiceContext() {
    this->initializeModel();
}

OAIGoogleCloudRetailLoggingServiceContext::~OAIGoogleCloudRetailLoggingServiceContext() {}

void OAIGoogleCloudRetailLoggingServiceContext::initializeModel() {

    m_service_isSet = false;
    m_service_isValid = false;
}

void OAIGoogleCloudRetailLoggingServiceContext::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailLoggingServiceContext::fromJsonObject(QJsonObject json) {

    m_service_isValid = ::OpenAPI::fromJsonValue(m_service, json[QString("service")]);
    m_service_isSet = !json[QString("service")].isNull() && m_service_isValid;
}

QString OAIGoogleCloudRetailLoggingServiceContext::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailLoggingServiceContext::asJsonObject() const {
    QJsonObject obj;
    if (m_service_isSet) {
        obj.insert(QString("service"), ::OpenAPI::toJsonValue(m_service));
    }
    return obj;
}

QString OAIGoogleCloudRetailLoggingServiceContext::getService() const {
    return m_service;
}
void OAIGoogleCloudRetailLoggingServiceContext::setService(const QString &service) {
    m_service = service;
    m_service_isSet = true;
}

bool OAIGoogleCloudRetailLoggingServiceContext::is_service_Set() const{
    return m_service_isSet;
}

bool OAIGoogleCloudRetailLoggingServiceContext::is_service_Valid() const{
    return m_service_isValid;
}

bool OAIGoogleCloudRetailLoggingServiceContext::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_service_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailLoggingServiceContext::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
