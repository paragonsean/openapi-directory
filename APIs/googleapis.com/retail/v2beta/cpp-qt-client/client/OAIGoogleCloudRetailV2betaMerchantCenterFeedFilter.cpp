/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2betaMerchantCenterFeedFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2betaMerchantCenterFeedFilter::OAIGoogleCloudRetailV2betaMerchantCenterFeedFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2betaMerchantCenterFeedFilter::OAIGoogleCloudRetailV2betaMerchantCenterFeedFilter() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2betaMerchantCenterFeedFilter::~OAIGoogleCloudRetailV2betaMerchantCenterFeedFilter() {}

void OAIGoogleCloudRetailV2betaMerchantCenterFeedFilter::initializeModel() {

    m_primary_feed_id_isSet = false;
    m_primary_feed_id_isValid = false;

    m_primary_feed_name_isSet = false;
    m_primary_feed_name_isValid = false;
}

void OAIGoogleCloudRetailV2betaMerchantCenterFeedFilter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2betaMerchantCenterFeedFilter::fromJsonObject(QJsonObject json) {

    m_primary_feed_id_isValid = ::OpenAPI::fromJsonValue(m_primary_feed_id, json[QString("primaryFeedId")]);
    m_primary_feed_id_isSet = !json[QString("primaryFeedId")].isNull() && m_primary_feed_id_isValid;

    m_primary_feed_name_isValid = ::OpenAPI::fromJsonValue(m_primary_feed_name, json[QString("primaryFeedName")]);
    m_primary_feed_name_isSet = !json[QString("primaryFeedName")].isNull() && m_primary_feed_name_isValid;
}

QString OAIGoogleCloudRetailV2betaMerchantCenterFeedFilter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2betaMerchantCenterFeedFilter::asJsonObject() const {
    QJsonObject obj;
    if (m_primary_feed_id_isSet) {
        obj.insert(QString("primaryFeedId"), ::OpenAPI::toJsonValue(m_primary_feed_id));
    }
    if (m_primary_feed_name_isSet) {
        obj.insert(QString("primaryFeedName"), ::OpenAPI::toJsonValue(m_primary_feed_name));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2betaMerchantCenterFeedFilter::getPrimaryFeedId() const {
    return m_primary_feed_id;
}
void OAIGoogleCloudRetailV2betaMerchantCenterFeedFilter::setPrimaryFeedId(const QString &primary_feed_id) {
    m_primary_feed_id = primary_feed_id;
    m_primary_feed_id_isSet = true;
}

bool OAIGoogleCloudRetailV2betaMerchantCenterFeedFilter::is_primary_feed_id_Set() const{
    return m_primary_feed_id_isSet;
}

bool OAIGoogleCloudRetailV2betaMerchantCenterFeedFilter::is_primary_feed_id_Valid() const{
    return m_primary_feed_id_isValid;
}

QString OAIGoogleCloudRetailV2betaMerchantCenterFeedFilter::getPrimaryFeedName() const {
    return m_primary_feed_name;
}
void OAIGoogleCloudRetailV2betaMerchantCenterFeedFilter::setPrimaryFeedName(const QString &primary_feed_name) {
    m_primary_feed_name = primary_feed_name;
    m_primary_feed_name_isSet = true;
}

bool OAIGoogleCloudRetailV2betaMerchantCenterFeedFilter::is_primary_feed_name_Set() const{
    return m_primary_feed_name_isSet;
}

bool OAIGoogleCloudRetailV2betaMerchantCenterFeedFilter::is_primary_feed_name_Valid() const{
    return m_primary_feed_name_isValid;
}

bool OAIGoogleCloudRetailV2betaMerchantCenterFeedFilter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_primary_feed_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_feed_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2betaMerchantCenterFeedFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
