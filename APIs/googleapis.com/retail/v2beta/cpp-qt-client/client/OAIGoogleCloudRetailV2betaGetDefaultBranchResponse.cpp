/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2betaGetDefaultBranchResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2betaGetDefaultBranchResponse::OAIGoogleCloudRetailV2betaGetDefaultBranchResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2betaGetDefaultBranchResponse::OAIGoogleCloudRetailV2betaGetDefaultBranchResponse() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2betaGetDefaultBranchResponse::~OAIGoogleCloudRetailV2betaGetDefaultBranchResponse() {}

void OAIGoogleCloudRetailV2betaGetDefaultBranchResponse::initializeModel() {

    m_branch_isSet = false;
    m_branch_isValid = false;

    m_note_isSet = false;
    m_note_isValid = false;

    m_set_time_isSet = false;
    m_set_time_isValid = false;
}

void OAIGoogleCloudRetailV2betaGetDefaultBranchResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2betaGetDefaultBranchResponse::fromJsonObject(QJsonObject json) {

    m_branch_isValid = ::OpenAPI::fromJsonValue(m_branch, json[QString("branch")]);
    m_branch_isSet = !json[QString("branch")].isNull() && m_branch_isValid;

    m_note_isValid = ::OpenAPI::fromJsonValue(m_note, json[QString("note")]);
    m_note_isSet = !json[QString("note")].isNull() && m_note_isValid;

    m_set_time_isValid = ::OpenAPI::fromJsonValue(m_set_time, json[QString("setTime")]);
    m_set_time_isSet = !json[QString("setTime")].isNull() && m_set_time_isValid;
}

QString OAIGoogleCloudRetailV2betaGetDefaultBranchResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2betaGetDefaultBranchResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_branch_isSet) {
        obj.insert(QString("branch"), ::OpenAPI::toJsonValue(m_branch));
    }
    if (m_note_isSet) {
        obj.insert(QString("note"), ::OpenAPI::toJsonValue(m_note));
    }
    if (m_set_time_isSet) {
        obj.insert(QString("setTime"), ::OpenAPI::toJsonValue(m_set_time));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2betaGetDefaultBranchResponse::getBranch() const {
    return m_branch;
}
void OAIGoogleCloudRetailV2betaGetDefaultBranchResponse::setBranch(const QString &branch) {
    m_branch = branch;
    m_branch_isSet = true;
}

bool OAIGoogleCloudRetailV2betaGetDefaultBranchResponse::is_branch_Set() const{
    return m_branch_isSet;
}

bool OAIGoogleCloudRetailV2betaGetDefaultBranchResponse::is_branch_Valid() const{
    return m_branch_isValid;
}

QString OAIGoogleCloudRetailV2betaGetDefaultBranchResponse::getNote() const {
    return m_note;
}
void OAIGoogleCloudRetailV2betaGetDefaultBranchResponse::setNote(const QString &note) {
    m_note = note;
    m_note_isSet = true;
}

bool OAIGoogleCloudRetailV2betaGetDefaultBranchResponse::is_note_Set() const{
    return m_note_isSet;
}

bool OAIGoogleCloudRetailV2betaGetDefaultBranchResponse::is_note_Valid() const{
    return m_note_isValid;
}

QString OAIGoogleCloudRetailV2betaGetDefaultBranchResponse::getSetTime() const {
    return m_set_time;
}
void OAIGoogleCloudRetailV2betaGetDefaultBranchResponse::setSetTime(const QString &set_time) {
    m_set_time = set_time;
    m_set_time_isSet = true;
}

bool OAIGoogleCloudRetailV2betaGetDefaultBranchResponse::is_set_time_Set() const{
    return m_set_time_isSet;
}

bool OAIGoogleCloudRetailV2betaGetDefaultBranchResponse::is_set_time_Valid() const{
    return m_set_time_isValid;
}

bool OAIGoogleCloudRetailV2betaGetDefaultBranchResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_branch_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_note_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_set_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2betaGetDefaultBranchResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
