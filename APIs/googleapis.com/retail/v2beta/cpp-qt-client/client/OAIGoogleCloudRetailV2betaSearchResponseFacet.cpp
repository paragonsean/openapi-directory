/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2betaSearchResponseFacet.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2betaSearchResponseFacet::OAIGoogleCloudRetailV2betaSearchResponseFacet(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2betaSearchResponseFacet::OAIGoogleCloudRetailV2betaSearchResponseFacet() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2betaSearchResponseFacet::~OAIGoogleCloudRetailV2betaSearchResponseFacet() {}

void OAIGoogleCloudRetailV2betaSearchResponseFacet::initializeModel() {

    m_dynamic_facet_isSet = false;
    m_dynamic_facet_isValid = false;

    m_key_isSet = false;
    m_key_isValid = false;

    m_values_isSet = false;
    m_values_isValid = false;
}

void OAIGoogleCloudRetailV2betaSearchResponseFacet::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2betaSearchResponseFacet::fromJsonObject(QJsonObject json) {

    m_dynamic_facet_isValid = ::OpenAPI::fromJsonValue(m_dynamic_facet, json[QString("dynamicFacet")]);
    m_dynamic_facet_isSet = !json[QString("dynamicFacet")].isNull() && m_dynamic_facet_isValid;

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;

    m_values_isValid = ::OpenAPI::fromJsonValue(m_values, json[QString("values")]);
    m_values_isSet = !json[QString("values")].isNull() && m_values_isValid;
}

QString OAIGoogleCloudRetailV2betaSearchResponseFacet::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2betaSearchResponseFacet::asJsonObject() const {
    QJsonObject obj;
    if (m_dynamic_facet_isSet) {
        obj.insert(QString("dynamicFacet"), ::OpenAPI::toJsonValue(m_dynamic_facet));
    }
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_values.size() > 0) {
        obj.insert(QString("values"), ::OpenAPI::toJsonValue(m_values));
    }
    return obj;
}

bool OAIGoogleCloudRetailV2betaSearchResponseFacet::isDynamicFacet() const {
    return m_dynamic_facet;
}
void OAIGoogleCloudRetailV2betaSearchResponseFacet::setDynamicFacet(const bool &dynamic_facet) {
    m_dynamic_facet = dynamic_facet;
    m_dynamic_facet_isSet = true;
}

bool OAIGoogleCloudRetailV2betaSearchResponseFacet::is_dynamic_facet_Set() const{
    return m_dynamic_facet_isSet;
}

bool OAIGoogleCloudRetailV2betaSearchResponseFacet::is_dynamic_facet_Valid() const{
    return m_dynamic_facet_isValid;
}

QString OAIGoogleCloudRetailV2betaSearchResponseFacet::getKey() const {
    return m_key;
}
void OAIGoogleCloudRetailV2betaSearchResponseFacet::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAIGoogleCloudRetailV2betaSearchResponseFacet::is_key_Set() const{
    return m_key_isSet;
}

bool OAIGoogleCloudRetailV2betaSearchResponseFacet::is_key_Valid() const{
    return m_key_isValid;
}

QList<OAIGoogleCloudRetailV2betaSearchResponseFacetFacetValue> OAIGoogleCloudRetailV2betaSearchResponseFacet::getValues() const {
    return m_values;
}
void OAIGoogleCloudRetailV2betaSearchResponseFacet::setValues(const QList<OAIGoogleCloudRetailV2betaSearchResponseFacetFacetValue> &values) {
    m_values = values;
    m_values_isSet = true;
}

bool OAIGoogleCloudRetailV2betaSearchResponseFacet::is_values_Set() const{
    return m_values_isSet;
}

bool OAIGoogleCloudRetailV2betaSearchResponseFacet::is_values_Valid() const{
    return m_values_isValid;
}

bool OAIGoogleCloudRetailV2betaSearchResponseFacet::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dynamic_facet_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2betaSearchResponseFacet::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
