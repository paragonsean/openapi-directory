/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaOutputResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaOutputResult::OAIGoogleCloudRetailV2alphaOutputResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaOutputResult::OAIGoogleCloudRetailV2alphaOutputResult() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaOutputResult::~OAIGoogleCloudRetailV2alphaOutputResult() {}

void OAIGoogleCloudRetailV2alphaOutputResult::initializeModel() {

    m_bigquery_result_isSet = false;
    m_bigquery_result_isValid = false;

    m_gcs_result_isSet = false;
    m_gcs_result_isValid = false;
}

void OAIGoogleCloudRetailV2alphaOutputResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaOutputResult::fromJsonObject(QJsonObject json) {

    m_bigquery_result_isValid = ::OpenAPI::fromJsonValue(m_bigquery_result, json[QString("bigqueryResult")]);
    m_bigquery_result_isSet = !json[QString("bigqueryResult")].isNull() && m_bigquery_result_isValid;

    m_gcs_result_isValid = ::OpenAPI::fromJsonValue(m_gcs_result, json[QString("gcsResult")]);
    m_gcs_result_isSet = !json[QString("gcsResult")].isNull() && m_gcs_result_isValid;
}

QString OAIGoogleCloudRetailV2alphaOutputResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaOutputResult::asJsonObject() const {
    QJsonObject obj;
    if (m_bigquery_result.size() > 0) {
        obj.insert(QString("bigqueryResult"), ::OpenAPI::toJsonValue(m_bigquery_result));
    }
    if (m_gcs_result.size() > 0) {
        obj.insert(QString("gcsResult"), ::OpenAPI::toJsonValue(m_gcs_result));
    }
    return obj;
}

QList<OAIGoogleCloudRetailV2alphaBigQueryOutputResult> OAIGoogleCloudRetailV2alphaOutputResult::getBigqueryResult() const {
    return m_bigquery_result;
}
void OAIGoogleCloudRetailV2alphaOutputResult::setBigqueryResult(const QList<OAIGoogleCloudRetailV2alphaBigQueryOutputResult> &bigquery_result) {
    m_bigquery_result = bigquery_result;
    m_bigquery_result_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaOutputResult::is_bigquery_result_Set() const{
    return m_bigquery_result_isSet;
}

bool OAIGoogleCloudRetailV2alphaOutputResult::is_bigquery_result_Valid() const{
    return m_bigquery_result_isValid;
}

QList<OAIGoogleCloudRetailV2alphaGcsOutputResult> OAIGoogleCloudRetailV2alphaOutputResult::getGcsResult() const {
    return m_gcs_result;
}
void OAIGoogleCloudRetailV2alphaOutputResult::setGcsResult(const QList<OAIGoogleCloudRetailV2alphaGcsOutputResult> &gcs_result) {
    m_gcs_result = gcs_result;
    m_gcs_result_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaOutputResult::is_gcs_result_Set() const{
    return m_gcs_result_isSet;
}

bool OAIGoogleCloudRetailV2alphaOutputResult::is_gcs_result_Valid() const{
    return m_gcs_result_isValid;
}

bool OAIGoogleCloudRetailV2alphaOutputResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bigquery_result.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_gcs_result.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaOutputResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
