/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Response of the PurgeProductsRequest. If the long running operation is successfully done, then this message is returned by the google.longrunning.Operations.response field.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:18.873693-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2PurgeProductsResponse {
  public static final String SERIALIZED_NAME_PURGE_COUNT = "purgeCount";
  @SerializedName(SERIALIZED_NAME_PURGE_COUNT)
  private String purgeCount;

  public static final String SERIALIZED_NAME_PURGE_SAMPLE = "purgeSample";
  @SerializedName(SERIALIZED_NAME_PURGE_SAMPLE)
  private List<String> purgeSample = new ArrayList<>();

  public GoogleCloudRetailV2PurgeProductsResponse() {
  }

  public GoogleCloudRetailV2PurgeProductsResponse purgeCount(String purgeCount) {
    this.purgeCount = purgeCount;
    return this;
  }

  /**
   * The total count of products purged as a result of the operation.
   * @return purgeCount
   */
  @javax.annotation.Nullable
  public String getPurgeCount() {
    return purgeCount;
  }

  public void setPurgeCount(String purgeCount) {
    this.purgeCount = purgeCount;
  }


  public GoogleCloudRetailV2PurgeProductsResponse purgeSample(List<String> purgeSample) {
    this.purgeSample = purgeSample;
    return this;
  }

  public GoogleCloudRetailV2PurgeProductsResponse addPurgeSampleItem(String purgeSampleItem) {
    if (this.purgeSample == null) {
      this.purgeSample = new ArrayList<>();
    }
    this.purgeSample.add(purgeSampleItem);
    return this;
  }

  /**
   * A sample of the product names that will be deleted. Only populated if &#x60;force&#x60; is set to false. A max of 100 names will be returned and the names are chosen at random.
   * @return purgeSample
   */
  @javax.annotation.Nullable
  public List<String> getPurgeSample() {
    return purgeSample;
  }

  public void setPurgeSample(List<String> purgeSample) {
    this.purgeSample = purgeSample;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2PurgeProductsResponse googleCloudRetailV2PurgeProductsResponse = (GoogleCloudRetailV2PurgeProductsResponse) o;
    return Objects.equals(this.purgeCount, googleCloudRetailV2PurgeProductsResponse.purgeCount) &&
        Objects.equals(this.purgeSample, googleCloudRetailV2PurgeProductsResponse.purgeSample);
  }

  @Override
  public int hashCode() {
    return Objects.hash(purgeCount, purgeSample);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2PurgeProductsResponse {\n");
    sb.append("    purgeCount: ").append(toIndentedString(purgeCount)).append("\n");
    sb.append("    purgeSample: ").append(toIndentedString(purgeSample)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("purgeCount");
    openapiFields.add("purgeSample");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2PurgeProductsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2PurgeProductsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2PurgeProductsResponse is not found in the empty JSON string", GoogleCloudRetailV2PurgeProductsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2PurgeProductsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2PurgeProductsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("purgeCount") != null && !jsonObj.get("purgeCount").isJsonNull()) && !jsonObj.get("purgeCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `purgeCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("purgeCount").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("purgeSample") != null && !jsonObj.get("purgeSample").isJsonNull() && !jsonObj.get("purgeSample").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `purgeSample` to be an array in the JSON string but got `%s`", jsonObj.get("purgeSample").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2PurgeProductsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2PurgeProductsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2PurgeProductsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2PurgeProductsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2PurgeProductsResponse>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2PurgeProductsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2PurgeProductsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2PurgeProductsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2PurgeProductsResponse
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2PurgeProductsResponse
   */
  public static GoogleCloudRetailV2PurgeProductsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2PurgeProductsResponse.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2PurgeProductsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

