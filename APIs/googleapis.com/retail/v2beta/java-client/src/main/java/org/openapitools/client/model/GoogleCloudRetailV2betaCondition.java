/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudRetailV2betaConditionQueryTerm;
import org.openapitools.client.model.GoogleCloudRetailV2betaConditionTimeRange;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Metadata that is used to define a condition that triggers an action. A valid condition must specify at least one of &#39;query_terms&#39; or &#39;products_filter&#39;. If multiple fields are specified, the condition is met if all the fields are satisfied e.g. if a set of query terms and product_filter are set, then only items matching the product_filter for requests with a query matching the query terms wil get boosted.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:18.873693-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2betaCondition {
  public static final String SERIALIZED_NAME_ACTIVE_TIME_RANGE = "activeTimeRange";
  @SerializedName(SERIALIZED_NAME_ACTIVE_TIME_RANGE)
  private List<GoogleCloudRetailV2betaConditionTimeRange> activeTimeRange = new ArrayList<>();

  public static final String SERIALIZED_NAME_PAGE_CATEGORIES = "pageCategories";
  @SerializedName(SERIALIZED_NAME_PAGE_CATEGORIES)
  private List<String> pageCategories = new ArrayList<>();

  public static final String SERIALIZED_NAME_QUERY_TERMS = "queryTerms";
  @SerializedName(SERIALIZED_NAME_QUERY_TERMS)
  private List<GoogleCloudRetailV2betaConditionQueryTerm> queryTerms = new ArrayList<>();

  public GoogleCloudRetailV2betaCondition() {
  }

  public GoogleCloudRetailV2betaCondition activeTimeRange(List<GoogleCloudRetailV2betaConditionTimeRange> activeTimeRange) {
    this.activeTimeRange = activeTimeRange;
    return this;
  }

  public GoogleCloudRetailV2betaCondition addActiveTimeRangeItem(GoogleCloudRetailV2betaConditionTimeRange activeTimeRangeItem) {
    if (this.activeTimeRange == null) {
      this.activeTimeRange = new ArrayList<>();
    }
    this.activeTimeRange.add(activeTimeRangeItem);
    return this;
  }

  /**
   * Range of time(s) specifying when Condition is active. Condition true if any time range matches.
   * @return activeTimeRange
   */
  @javax.annotation.Nullable
  public List<GoogleCloudRetailV2betaConditionTimeRange> getActiveTimeRange() {
    return activeTimeRange;
  }

  public void setActiveTimeRange(List<GoogleCloudRetailV2betaConditionTimeRange> activeTimeRange) {
    this.activeTimeRange = activeTimeRange;
  }


  public GoogleCloudRetailV2betaCondition pageCategories(List<String> pageCategories) {
    this.pageCategories = pageCategories;
    return this;
  }

  public GoogleCloudRetailV2betaCondition addPageCategoriesItem(String pageCategoriesItem) {
    if (this.pageCategories == null) {
      this.pageCategories = new ArrayList<>();
    }
    this.pageCategories.add(pageCategoriesItem);
    return this;
  }

  /**
   * Used to support browse uses cases. A list (up to 10 entries) of categories or departments. The format should be the same as UserEvent.page_categories;
   * @return pageCategories
   */
  @javax.annotation.Nullable
  public List<String> getPageCategories() {
    return pageCategories;
  }

  public void setPageCategories(List<String> pageCategories) {
    this.pageCategories = pageCategories;
  }


  public GoogleCloudRetailV2betaCondition queryTerms(List<GoogleCloudRetailV2betaConditionQueryTerm> queryTerms) {
    this.queryTerms = queryTerms;
    return this;
  }

  public GoogleCloudRetailV2betaCondition addQueryTermsItem(GoogleCloudRetailV2betaConditionQueryTerm queryTermsItem) {
    if (this.queryTerms == null) {
      this.queryTerms = new ArrayList<>();
    }
    this.queryTerms.add(queryTermsItem);
    return this;
  }

  /**
   * A list (up to 10 entries) of terms to match the query on. If not specified, match all queries. If many query terms are specified, the condition is matched if any of the terms is a match (i.e. using the OR operator).
   * @return queryTerms
   */
  @javax.annotation.Nullable
  public List<GoogleCloudRetailV2betaConditionQueryTerm> getQueryTerms() {
    return queryTerms;
  }

  public void setQueryTerms(List<GoogleCloudRetailV2betaConditionQueryTerm> queryTerms) {
    this.queryTerms = queryTerms;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2betaCondition googleCloudRetailV2betaCondition = (GoogleCloudRetailV2betaCondition) o;
    return Objects.equals(this.activeTimeRange, googleCloudRetailV2betaCondition.activeTimeRange) &&
        Objects.equals(this.pageCategories, googleCloudRetailV2betaCondition.pageCategories) &&
        Objects.equals(this.queryTerms, googleCloudRetailV2betaCondition.queryTerms);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeTimeRange, pageCategories, queryTerms);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2betaCondition {\n");
    sb.append("    activeTimeRange: ").append(toIndentedString(activeTimeRange)).append("\n");
    sb.append("    pageCategories: ").append(toIndentedString(pageCategories)).append("\n");
    sb.append("    queryTerms: ").append(toIndentedString(queryTerms)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("activeTimeRange");
    openapiFields.add("pageCategories");
    openapiFields.add("queryTerms");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2betaCondition
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2betaCondition.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2betaCondition is not found in the empty JSON string", GoogleCloudRetailV2betaCondition.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2betaCondition.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2betaCondition` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("activeTimeRange") != null && !jsonObj.get("activeTimeRange").isJsonNull()) {
        JsonArray jsonArrayactiveTimeRange = jsonObj.getAsJsonArray("activeTimeRange");
        if (jsonArrayactiveTimeRange != null) {
          // ensure the json data is an array
          if (!jsonObj.get("activeTimeRange").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `activeTimeRange` to be an array in the JSON string but got `%s`", jsonObj.get("activeTimeRange").toString()));
          }

          // validate the optional field `activeTimeRange` (array)
          for (int i = 0; i < jsonArrayactiveTimeRange.size(); i++) {
            GoogleCloudRetailV2betaConditionTimeRange.validateJsonElement(jsonArrayactiveTimeRange.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("pageCategories") != null && !jsonObj.get("pageCategories").isJsonNull() && !jsonObj.get("pageCategories").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `pageCategories` to be an array in the JSON string but got `%s`", jsonObj.get("pageCategories").toString()));
      }
      if (jsonObj.get("queryTerms") != null && !jsonObj.get("queryTerms").isJsonNull()) {
        JsonArray jsonArrayqueryTerms = jsonObj.getAsJsonArray("queryTerms");
        if (jsonArrayqueryTerms != null) {
          // ensure the json data is an array
          if (!jsonObj.get("queryTerms").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `queryTerms` to be an array in the JSON string but got `%s`", jsonObj.get("queryTerms").toString()));
          }

          // validate the optional field `queryTerms` (array)
          for (int i = 0; i < jsonArrayqueryTerms.size(); i++) {
            GoogleCloudRetailV2betaConditionQueryTerm.validateJsonElement(jsonArrayqueryTerms.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2betaCondition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2betaCondition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2betaCondition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2betaCondition.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2betaCondition>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2betaCondition value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2betaCondition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2betaCondition given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2betaCondition
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2betaCondition
   */
  public static GoogleCloudRetailV2betaCondition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2betaCondition.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2betaCondition to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

