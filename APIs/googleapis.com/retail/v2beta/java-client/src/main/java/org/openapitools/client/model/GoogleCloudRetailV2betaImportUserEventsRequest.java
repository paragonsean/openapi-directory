/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudRetailV2betaImportErrorsConfig;
import org.openapitools.client.model.GoogleCloudRetailV2betaUserEventInputConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for the ImportUserEvents request.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:18.873693-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2betaImportUserEventsRequest {
  public static final String SERIALIZED_NAME_ERRORS_CONFIG = "errorsConfig";
  @SerializedName(SERIALIZED_NAME_ERRORS_CONFIG)
  private GoogleCloudRetailV2betaImportErrorsConfig errorsConfig;

  public static final String SERIALIZED_NAME_INPUT_CONFIG = "inputConfig";
  @SerializedName(SERIALIZED_NAME_INPUT_CONFIG)
  private GoogleCloudRetailV2betaUserEventInputConfig inputConfig;

  public GoogleCloudRetailV2betaImportUserEventsRequest() {
  }

  public GoogleCloudRetailV2betaImportUserEventsRequest errorsConfig(GoogleCloudRetailV2betaImportErrorsConfig errorsConfig) {
    this.errorsConfig = errorsConfig;
    return this;
  }

  /**
   * Get errorsConfig
   * @return errorsConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2betaImportErrorsConfig getErrorsConfig() {
    return errorsConfig;
  }

  public void setErrorsConfig(GoogleCloudRetailV2betaImportErrorsConfig errorsConfig) {
    this.errorsConfig = errorsConfig;
  }


  public GoogleCloudRetailV2betaImportUserEventsRequest inputConfig(GoogleCloudRetailV2betaUserEventInputConfig inputConfig) {
    this.inputConfig = inputConfig;
    return this;
  }

  /**
   * Get inputConfig
   * @return inputConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2betaUserEventInputConfig getInputConfig() {
    return inputConfig;
  }

  public void setInputConfig(GoogleCloudRetailV2betaUserEventInputConfig inputConfig) {
    this.inputConfig = inputConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2betaImportUserEventsRequest googleCloudRetailV2betaImportUserEventsRequest = (GoogleCloudRetailV2betaImportUserEventsRequest) o;
    return Objects.equals(this.errorsConfig, googleCloudRetailV2betaImportUserEventsRequest.errorsConfig) &&
        Objects.equals(this.inputConfig, googleCloudRetailV2betaImportUserEventsRequest.inputConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(errorsConfig, inputConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2betaImportUserEventsRequest {\n");
    sb.append("    errorsConfig: ").append(toIndentedString(errorsConfig)).append("\n");
    sb.append("    inputConfig: ").append(toIndentedString(inputConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("errorsConfig");
    openapiFields.add("inputConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2betaImportUserEventsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2betaImportUserEventsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2betaImportUserEventsRequest is not found in the empty JSON string", GoogleCloudRetailV2betaImportUserEventsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2betaImportUserEventsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2betaImportUserEventsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `errorsConfig`
      if (jsonObj.get("errorsConfig") != null && !jsonObj.get("errorsConfig").isJsonNull()) {
        GoogleCloudRetailV2betaImportErrorsConfig.validateJsonElement(jsonObj.get("errorsConfig"));
      }
      // validate the optional field `inputConfig`
      if (jsonObj.get("inputConfig") != null && !jsonObj.get("inputConfig").isJsonNull()) {
        GoogleCloudRetailV2betaUserEventInputConfig.validateJsonElement(jsonObj.get("inputConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2betaImportUserEventsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2betaImportUserEventsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2betaImportUserEventsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2betaImportUserEventsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2betaImportUserEventsRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2betaImportUserEventsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2betaImportUserEventsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2betaImportUserEventsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2betaImportUserEventsRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2betaImportUserEventsRequest
   */
  public static GoogleCloudRetailV2betaImportUserEventsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2betaImportUserEventsRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2betaImportUserEventsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

