/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudRetailV2betaCompletionDataInputConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for ImportCompletionData methods.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:18.873693-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2betaImportCompletionDataRequest {
  public static final String SERIALIZED_NAME_INPUT_CONFIG = "inputConfig";
  @SerializedName(SERIALIZED_NAME_INPUT_CONFIG)
  private GoogleCloudRetailV2betaCompletionDataInputConfig inputConfig;

  public static final String SERIALIZED_NAME_NOTIFICATION_PUBSUB_TOPIC = "notificationPubsubTopic";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_PUBSUB_TOPIC)
  private String notificationPubsubTopic;

  public GoogleCloudRetailV2betaImportCompletionDataRequest() {
  }

  public GoogleCloudRetailV2betaImportCompletionDataRequest inputConfig(GoogleCloudRetailV2betaCompletionDataInputConfig inputConfig) {
    this.inputConfig = inputConfig;
    return this;
  }

  /**
   * Get inputConfig
   * @return inputConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2betaCompletionDataInputConfig getInputConfig() {
    return inputConfig;
  }

  public void setInputConfig(GoogleCloudRetailV2betaCompletionDataInputConfig inputConfig) {
    this.inputConfig = inputConfig;
  }


  public GoogleCloudRetailV2betaImportCompletionDataRequest notificationPubsubTopic(String notificationPubsubTopic) {
    this.notificationPubsubTopic = notificationPubsubTopic;
    return this;
  }

  /**
   * Pub/Sub topic for receiving notification. If this field is set, when the import is finished, a notification is sent to specified Pub/Sub topic. The message data is JSON string of a Operation. Format of the Pub/Sub topic is &#x60;projects/{project}/topics/{topic}&#x60;.
   * @return notificationPubsubTopic
   */
  @javax.annotation.Nullable
  public String getNotificationPubsubTopic() {
    return notificationPubsubTopic;
  }

  public void setNotificationPubsubTopic(String notificationPubsubTopic) {
    this.notificationPubsubTopic = notificationPubsubTopic;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2betaImportCompletionDataRequest googleCloudRetailV2betaImportCompletionDataRequest = (GoogleCloudRetailV2betaImportCompletionDataRequest) o;
    return Objects.equals(this.inputConfig, googleCloudRetailV2betaImportCompletionDataRequest.inputConfig) &&
        Objects.equals(this.notificationPubsubTopic, googleCloudRetailV2betaImportCompletionDataRequest.notificationPubsubTopic);
  }

  @Override
  public int hashCode() {
    return Objects.hash(inputConfig, notificationPubsubTopic);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2betaImportCompletionDataRequest {\n");
    sb.append("    inputConfig: ").append(toIndentedString(inputConfig)).append("\n");
    sb.append("    notificationPubsubTopic: ").append(toIndentedString(notificationPubsubTopic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("inputConfig");
    openapiFields.add("notificationPubsubTopic");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2betaImportCompletionDataRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2betaImportCompletionDataRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2betaImportCompletionDataRequest is not found in the empty JSON string", GoogleCloudRetailV2betaImportCompletionDataRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2betaImportCompletionDataRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2betaImportCompletionDataRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `inputConfig`
      if (jsonObj.get("inputConfig") != null && !jsonObj.get("inputConfig").isJsonNull()) {
        GoogleCloudRetailV2betaCompletionDataInputConfig.validateJsonElement(jsonObj.get("inputConfig"));
      }
      if ((jsonObj.get("notificationPubsubTopic") != null && !jsonObj.get("notificationPubsubTopic").isJsonNull()) && !jsonObj.get("notificationPubsubTopic").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notificationPubsubTopic` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notificationPubsubTopic").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2betaImportCompletionDataRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2betaImportCompletionDataRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2betaImportCompletionDataRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2betaImportCompletionDataRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2betaImportCompletionDataRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2betaImportCompletionDataRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2betaImportCompletionDataRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2betaImportCompletionDataRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2betaImportCompletionDataRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2betaImportCompletionDataRequest
   */
  public static GoogleCloudRetailV2betaImportCompletionDataRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2betaImportCompletionDataRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2betaImportCompletionDataRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

