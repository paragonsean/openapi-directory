/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Metadata for active serving config A/B tests.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:18.873693-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment {
  public static final String SERIALIZED_NAME_EXPERIMENT_SERVING_CONFIG = "experimentServingConfig";
  @SerializedName(SERIALIZED_NAME_EXPERIMENT_SERVING_CONFIG)
  private String experimentServingConfig;

  public static final String SERIALIZED_NAME_ORIGINAL_SERVING_CONFIG = "originalServingConfig";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_SERVING_CONFIG)
  private String originalServingConfig;

  public GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment() {
  }

  public GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment experimentServingConfig(String experimentServingConfig) {
    this.experimentServingConfig = experimentServingConfig;
    return this;
  }

  /**
   * The fully qualified resource name of the serving config VariantArm.serving_config_id responsible for generating the search response. For example: &#x60;projects/_*_/locations/_*_/catalogs/_*_/servingConfigs/_*&#x60;.
   * @return experimentServingConfig
   */
  @javax.annotation.Nullable
  public String getExperimentServingConfig() {
    return experimentServingConfig;
  }

  public void setExperimentServingConfig(String experimentServingConfig) {
    this.experimentServingConfig = experimentServingConfig;
  }


  public GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment originalServingConfig(String originalServingConfig) {
    this.originalServingConfig = originalServingConfig;
    return this;
  }

  /**
   * The fully qualified resource name of the original SearchRequest.placement in the search request prior to reassignment by experiment API. For example: &#x60;projects/_*_/locations/_*_/catalogs/_*_/servingConfigs/_*&#x60;.
   * @return originalServingConfig
   */
  @javax.annotation.Nullable
  public String getOriginalServingConfig() {
    return originalServingConfig;
  }

  public void setOriginalServingConfig(String originalServingConfig) {
    this.originalServingConfig = originalServingConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment googleCloudRetailV2betaExperimentInfoServingConfigExperiment = (GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment) o;
    return Objects.equals(this.experimentServingConfig, googleCloudRetailV2betaExperimentInfoServingConfigExperiment.experimentServingConfig) &&
        Objects.equals(this.originalServingConfig, googleCloudRetailV2betaExperimentInfoServingConfigExperiment.originalServingConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(experimentServingConfig, originalServingConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment {\n");
    sb.append("    experimentServingConfig: ").append(toIndentedString(experimentServingConfig)).append("\n");
    sb.append("    originalServingConfig: ").append(toIndentedString(originalServingConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("experimentServingConfig");
    openapiFields.add("originalServingConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment is not found in the empty JSON string", GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("experimentServingConfig") != null && !jsonObj.get("experimentServingConfig").isJsonNull()) && !jsonObj.get("experimentServingConfig").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `experimentServingConfig` to be a primitive type in the JSON string but got `%s`", jsonObj.get("experimentServingConfig").toString()));
      }
      if ((jsonObj.get("originalServingConfig") != null && !jsonObj.get("originalServingConfig").isJsonNull()) && !jsonObj.get("originalServingConfig").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originalServingConfig` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originalServingConfig").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment
   */
  public static GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

