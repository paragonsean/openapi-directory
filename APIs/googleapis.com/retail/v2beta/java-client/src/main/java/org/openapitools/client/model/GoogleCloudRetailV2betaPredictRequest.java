/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudRetailV2betaUserEvent;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for Predict method.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:18.873693-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2betaPredictRequest {
  public static final String SERIALIZED_NAME_FILTER = "filter";
  @SerializedName(SERIALIZED_NAME_FILTER)
  private String filter;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_PAGE_SIZE = "pageSize";
  @SerializedName(SERIALIZED_NAME_PAGE_SIZE)
  private Integer pageSize;

  public static final String SERIALIZED_NAME_PAGE_TOKEN = "pageToken";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_PAGE_TOKEN)
  private String pageToken;

  public static final String SERIALIZED_NAME_PARAMS = "params";
  @SerializedName(SERIALIZED_NAME_PARAMS)
  private Map<String, Object> params = new HashMap<>();

  public static final String SERIALIZED_NAME_USER_EVENT = "userEvent";
  @SerializedName(SERIALIZED_NAME_USER_EVENT)
  private GoogleCloudRetailV2betaUserEvent userEvent;

  public static final String SERIALIZED_NAME_VALIDATE_ONLY = "validateOnly";
  @SerializedName(SERIALIZED_NAME_VALIDATE_ONLY)
  private Boolean validateOnly;

  public GoogleCloudRetailV2betaPredictRequest() {
  }

  public GoogleCloudRetailV2betaPredictRequest filter(String filter) {
    this.filter = filter;
    return this;
  }

  /**
   * Filter for restricting prediction results with a length limit of 5,000 characters. Accepts values for tags and the &#x60;filterOutOfStockItems&#x60; flag. * Tag expressions. Restricts predictions to products that match all of the specified tags. Boolean operators &#x60;OR&#x60; and &#x60;NOT&#x60; are supported if the expression is enclosed in parentheses, and must be separated from the tag values by a space. &#x60;-\&quot;tagA\&quot;&#x60; is also supported and is equivalent to &#x60;NOT \&quot;tagA\&quot;&#x60;. Tag values must be double quoted UTF-8 encoded strings with a size limit of 1,000 characters. Note: \&quot;Recently viewed\&quot; models don&#39;t support tag filtering at the moment. * filterOutOfStockItems. Restricts predictions to products that do not have a stockState value of OUT_OF_STOCK. Examples: * tag&#x3D;(\&quot;Red\&quot; OR \&quot;Blue\&quot;) tag&#x3D;\&quot;New-Arrival\&quot; tag&#x3D;(NOT \&quot;promotional\&quot;) * filterOutOfStockItems tag&#x3D;(-\&quot;promotional\&quot;) * filterOutOfStockItems If your filter blocks all prediction results, the API will return *no* results. If instead you want empty result sets to return generic (unfiltered) popular products, set &#x60;strictFiltering&#x60; to False in &#x60;PredictRequest.params&#x60;. Note that the API will never return items with storageStatus of \&quot;EXPIRED\&quot; or \&quot;DELETED\&quot; regardless of filter choices. If &#x60;filterSyntaxV2&#x60; is set to true under the &#x60;params&#x60; field, then attribute-based expressions are expected instead of the above described tag-based syntax. Examples: * (colors: ANY(\&quot;Red\&quot;, \&quot;Blue\&quot;)) AND NOT (categories: ANY(\&quot;Phones\&quot;)) * (availability: ANY(\&quot;IN_STOCK\&quot;)) AND (colors: ANY(\&quot;Red\&quot;) OR categories: ANY(\&quot;Phones\&quot;)) For more information, see [Filter recommendations](https://cloud.google.com/retail/docs/filter-recs).
   * @return filter
   */
  @javax.annotation.Nullable
  public String getFilter() {
    return filter;
  }

  public void setFilter(String filter) {
    this.filter = filter;
  }


  public GoogleCloudRetailV2betaPredictRequest labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public GoogleCloudRetailV2betaPredictRequest putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * The labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. See [Google Cloud Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more details.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  public GoogleCloudRetailV2betaPredictRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

  /**
   * Maximum number of results to return. Set this property to the number of prediction results needed. If zero, the service will choose a reasonable default. The maximum allowed value is 100. Values above 100 will be coerced to 100.
   * @return pageSize
   */
  @javax.annotation.Nullable
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }


  @Deprecated
  public GoogleCloudRetailV2betaPredictRequest pageToken(String pageToken) {
    this.pageToken = pageToken;
    return this;
  }

  /**
   * This field is not used; leave it unset.
   * @return pageToken
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getPageToken() {
    return pageToken;
  }

  @Deprecated
  public void setPageToken(String pageToken) {
    this.pageToken = pageToken;
  }


  public GoogleCloudRetailV2betaPredictRequest params(Map<String, Object> params) {
    this.params = params;
    return this;
  }

  public GoogleCloudRetailV2betaPredictRequest putParamsItem(String key, Object paramsItem) {
    if (this.params == null) {
      this.params = new HashMap<>();
    }
    this.params.put(key, paramsItem);
    return this;
  }

  /**
   * Additional domain specific parameters for the predictions. Allowed values: * &#x60;returnProduct&#x60;: Boolean. If set to true, the associated product object will be returned in the &#x60;results.metadata&#x60; field in the prediction response. * &#x60;returnScore&#x60;: Boolean. If set to true, the prediction &#39;score&#39; corresponding to each returned product will be set in the &#x60;results.metadata&#x60; field in the prediction response. The given &#39;score&#39; indicates the probability of a product being clicked/purchased given the user&#39;s context and history. * &#x60;strictFiltering&#x60;: Boolean. True by default. If set to false, the service will return generic (unfiltered) popular products instead of empty if your filter blocks all prediction results. * &#x60;priceRerankLevel&#x60;: String. Default empty. If set to be non-empty, then it needs to be one of {&#39;no-price-reranking&#39;, &#39;low-price-reranking&#39;, &#39;medium-price-reranking&#39;, &#39;high-price-reranking&#39;}. This gives request-level control and adjusts prediction results based on product price. * &#x60;diversityLevel&#x60;: String. Default empty. If set to be non-empty, then it needs to be one of {&#39;no-diversity&#39;, &#39;low-diversity&#39;, &#39;medium-diversity&#39;, &#39;high-diversity&#39;, &#39;auto-diversity&#39;}. This gives request-level control and adjusts prediction results based on product category. * &#x60;filterSyntaxV2&#x60;: Boolean. False by default. If set to true, the &#x60;filter&#x60; field is interpreteted according to the new, attribute-based syntax.
   * @return params
   */
  @javax.annotation.Nullable
  public Map<String, Object> getParams() {
    return params;
  }

  public void setParams(Map<String, Object> params) {
    this.params = params;
  }


  public GoogleCloudRetailV2betaPredictRequest userEvent(GoogleCloudRetailV2betaUserEvent userEvent) {
    this.userEvent = userEvent;
    return this;
  }

  /**
   * Get userEvent
   * @return userEvent
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2betaUserEvent getUserEvent() {
    return userEvent;
  }

  public void setUserEvent(GoogleCloudRetailV2betaUserEvent userEvent) {
    this.userEvent = userEvent;
  }


  public GoogleCloudRetailV2betaPredictRequest validateOnly(Boolean validateOnly) {
    this.validateOnly = validateOnly;
    return this;
  }

  /**
   * Use validate only mode for this prediction query. If set to true, a dummy model will be used that returns arbitrary products. Note that the validate only mode should only be used for testing the API, or if the model is not ready.
   * @return validateOnly
   */
  @javax.annotation.Nullable
  public Boolean getValidateOnly() {
    return validateOnly;
  }

  public void setValidateOnly(Boolean validateOnly) {
    this.validateOnly = validateOnly;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2betaPredictRequest googleCloudRetailV2betaPredictRequest = (GoogleCloudRetailV2betaPredictRequest) o;
    return Objects.equals(this.filter, googleCloudRetailV2betaPredictRequest.filter) &&
        Objects.equals(this.labels, googleCloudRetailV2betaPredictRequest.labels) &&
        Objects.equals(this.pageSize, googleCloudRetailV2betaPredictRequest.pageSize) &&
        Objects.equals(this.pageToken, googleCloudRetailV2betaPredictRequest.pageToken) &&
        Objects.equals(this.params, googleCloudRetailV2betaPredictRequest.params) &&
        Objects.equals(this.userEvent, googleCloudRetailV2betaPredictRequest.userEvent) &&
        Objects.equals(this.validateOnly, googleCloudRetailV2betaPredictRequest.validateOnly);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filter, labels, pageSize, pageToken, params, userEvent, validateOnly);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2betaPredictRequest {\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    pageToken: ").append(toIndentedString(pageToken)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("    userEvent: ").append(toIndentedString(userEvent)).append("\n");
    sb.append("    validateOnly: ").append(toIndentedString(validateOnly)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("filter");
    openapiFields.add("labels");
    openapiFields.add("pageSize");
    openapiFields.add("pageToken");
    openapiFields.add("params");
    openapiFields.add("userEvent");
    openapiFields.add("validateOnly");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2betaPredictRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2betaPredictRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2betaPredictRequest is not found in the empty JSON string", GoogleCloudRetailV2betaPredictRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2betaPredictRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2betaPredictRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("filter") != null && !jsonObj.get("filter").isJsonNull()) && !jsonObj.get("filter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filter").toString()));
      }
      if ((jsonObj.get("pageToken") != null && !jsonObj.get("pageToken").isJsonNull()) && !jsonObj.get("pageToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pageToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pageToken").toString()));
      }
      // validate the optional field `userEvent`
      if (jsonObj.get("userEvent") != null && !jsonObj.get("userEvent").isJsonNull()) {
        GoogleCloudRetailV2betaUserEvent.validateJsonElement(jsonObj.get("userEvent"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2betaPredictRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2betaPredictRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2betaPredictRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2betaPredictRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2betaPredictRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2betaPredictRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2betaPredictRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2betaPredictRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2betaPredictRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2betaPredictRequest
   */
  public static GoogleCloudRetailV2betaPredictRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2betaPredictRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2betaPredictRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

