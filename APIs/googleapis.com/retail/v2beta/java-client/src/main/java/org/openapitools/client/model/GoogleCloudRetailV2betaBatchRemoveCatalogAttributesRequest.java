/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request for CatalogService.BatchRemoveCatalogAttributes method.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:18.873693-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest {
  public static final String SERIALIZED_NAME_ATTRIBUTE_KEYS = "attributeKeys";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTE_KEYS)
  private List<String> attributeKeys = new ArrayList<>();

  public GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest() {
  }

  public GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest attributeKeys(List<String> attributeKeys) {
    this.attributeKeys = attributeKeys;
    return this;
  }

  public GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest addAttributeKeysItem(String attributeKeysItem) {
    if (this.attributeKeys == null) {
      this.attributeKeys = new ArrayList<>();
    }
    this.attributeKeys.add(attributeKeysItem);
    return this;
  }

  /**
   * Required. The attribute name keys of the CatalogAttributes to delete. A maximum of 1000 catalog attributes can be deleted in a batch.
   * @return attributeKeys
   */
  @javax.annotation.Nullable
  public List<String> getAttributeKeys() {
    return attributeKeys;
  }

  public void setAttributeKeys(List<String> attributeKeys) {
    this.attributeKeys = attributeKeys;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest googleCloudRetailV2betaBatchRemoveCatalogAttributesRequest = (GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest) o;
    return Objects.equals(this.attributeKeys, googleCloudRetailV2betaBatchRemoveCatalogAttributesRequest.attributeKeys);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributeKeys);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest {\n");
    sb.append("    attributeKeys: ").append(toIndentedString(attributeKeys)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attributeKeys");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest is not found in the empty JSON string", GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("attributeKeys") != null && !jsonObj.get("attributeKeys").isJsonNull() && !jsonObj.get("attributeKeys").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `attributeKeys` to be an array in the JSON string but got `%s`", jsonObj.get("attributeKeys").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest
   */
  public static GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2betaBatchRemoveCatalogAttributesRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

