/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudRetailV2betaImportErrorsConfig;
import org.openapitools.client.model.GoogleCloudRetailV2betaProductInputConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for Import methods.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:18.873693-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2betaImportProductsRequest {
  public static final String SERIALIZED_NAME_ERRORS_CONFIG = "errorsConfig";
  @SerializedName(SERIALIZED_NAME_ERRORS_CONFIG)
  private GoogleCloudRetailV2betaImportErrorsConfig errorsConfig;

  public static final String SERIALIZED_NAME_INPUT_CONFIG = "inputConfig";
  @SerializedName(SERIALIZED_NAME_INPUT_CONFIG)
  private GoogleCloudRetailV2betaProductInputConfig inputConfig;

  public static final String SERIALIZED_NAME_NOTIFICATION_PUBSUB_TOPIC = "notificationPubsubTopic";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_PUBSUB_TOPIC)
  private String notificationPubsubTopic;

  /**
   * The mode of reconciliation between existing products and the products to be imported. Defaults to ReconciliationMode.INCREMENTAL.
   */
  @JsonAdapter(ReconciliationModeEnum.Adapter.class)
  public enum ReconciliationModeEnum {
    RECONCILIATION_MODE_UNSPECIFIED("RECONCILIATION_MODE_UNSPECIFIED"),
    
    INCREMENTAL("INCREMENTAL"),
    
    FULL("FULL");

    private String value;

    ReconciliationModeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ReconciliationModeEnum fromValue(String value) {
      for (ReconciliationModeEnum b : ReconciliationModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ReconciliationModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ReconciliationModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ReconciliationModeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ReconciliationModeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ReconciliationModeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_RECONCILIATION_MODE = "reconciliationMode";
  @SerializedName(SERIALIZED_NAME_RECONCILIATION_MODE)
  private ReconciliationModeEnum reconciliationMode;

  public static final String SERIALIZED_NAME_REQUEST_ID = "requestId";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_REQUEST_ID)
  private String requestId;

  public static final String SERIALIZED_NAME_UPDATE_MASK = "updateMask";
  @SerializedName(SERIALIZED_NAME_UPDATE_MASK)
  private String updateMask;

  public GoogleCloudRetailV2betaImportProductsRequest() {
  }

  public GoogleCloudRetailV2betaImportProductsRequest errorsConfig(GoogleCloudRetailV2betaImportErrorsConfig errorsConfig) {
    this.errorsConfig = errorsConfig;
    return this;
  }

  /**
   * Get errorsConfig
   * @return errorsConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2betaImportErrorsConfig getErrorsConfig() {
    return errorsConfig;
  }

  public void setErrorsConfig(GoogleCloudRetailV2betaImportErrorsConfig errorsConfig) {
    this.errorsConfig = errorsConfig;
  }


  public GoogleCloudRetailV2betaImportProductsRequest inputConfig(GoogleCloudRetailV2betaProductInputConfig inputConfig) {
    this.inputConfig = inputConfig;
    return this;
  }

  /**
   * Get inputConfig
   * @return inputConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2betaProductInputConfig getInputConfig() {
    return inputConfig;
  }

  public void setInputConfig(GoogleCloudRetailV2betaProductInputConfig inputConfig) {
    this.inputConfig = inputConfig;
  }


  public GoogleCloudRetailV2betaImportProductsRequest notificationPubsubTopic(String notificationPubsubTopic) {
    this.notificationPubsubTopic = notificationPubsubTopic;
    return this;
  }

  /**
   * Full Pub/Sub topic name for receiving notification. If this field is set, when the import is finished, a notification is sent to specified Pub/Sub topic. The message data is JSON string of a Operation. Format of the Pub/Sub topic is &#x60;projects/{project}/topics/{topic}&#x60;. It has to be within the same project as ImportProductsRequest.parent. Make sure that both &#x60;cloud-retail-customer-data-access@system.gserviceaccount.com&#x60; and &#x60;service-@gcp-sa-retail.iam.gserviceaccount.com&#x60; have the &#x60;pubsub.topics.publish&#x60; IAM permission on the topic. Only supported when ImportProductsRequest.reconciliation_mode is set to &#x60;FULL&#x60;.
   * @return notificationPubsubTopic
   */
  @javax.annotation.Nullable
  public String getNotificationPubsubTopic() {
    return notificationPubsubTopic;
  }

  public void setNotificationPubsubTopic(String notificationPubsubTopic) {
    this.notificationPubsubTopic = notificationPubsubTopic;
  }


  public GoogleCloudRetailV2betaImportProductsRequest reconciliationMode(ReconciliationModeEnum reconciliationMode) {
    this.reconciliationMode = reconciliationMode;
    return this;
  }

  /**
   * The mode of reconciliation between existing products and the products to be imported. Defaults to ReconciliationMode.INCREMENTAL.
   * @return reconciliationMode
   */
  @javax.annotation.Nullable
  public ReconciliationModeEnum getReconciliationMode() {
    return reconciliationMode;
  }

  public void setReconciliationMode(ReconciliationModeEnum reconciliationMode) {
    this.reconciliationMode = reconciliationMode;
  }


  @Deprecated
  public GoogleCloudRetailV2betaImportProductsRequest requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

  /**
   * Deprecated. This field has no effect.
   * @return requestId
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getRequestId() {
    return requestId;
  }

  @Deprecated
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  public GoogleCloudRetailV2betaImportProductsRequest updateMask(String updateMask) {
    this.updateMask = updateMask;
    return this;
  }

  /**
   * Indicates which fields in the provided imported &#x60;products&#x60; to update. If not set, all fields are updated. If provided, only the existing product fields are updated. Missing products will not be created.
   * @return updateMask
   */
  @javax.annotation.Nullable
  public String getUpdateMask() {
    return updateMask;
  }

  public void setUpdateMask(String updateMask) {
    this.updateMask = updateMask;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2betaImportProductsRequest googleCloudRetailV2betaImportProductsRequest = (GoogleCloudRetailV2betaImportProductsRequest) o;
    return Objects.equals(this.errorsConfig, googleCloudRetailV2betaImportProductsRequest.errorsConfig) &&
        Objects.equals(this.inputConfig, googleCloudRetailV2betaImportProductsRequest.inputConfig) &&
        Objects.equals(this.notificationPubsubTopic, googleCloudRetailV2betaImportProductsRequest.notificationPubsubTopic) &&
        Objects.equals(this.reconciliationMode, googleCloudRetailV2betaImportProductsRequest.reconciliationMode) &&
        Objects.equals(this.requestId, googleCloudRetailV2betaImportProductsRequest.requestId) &&
        Objects.equals(this.updateMask, googleCloudRetailV2betaImportProductsRequest.updateMask);
  }

  @Override
  public int hashCode() {
    return Objects.hash(errorsConfig, inputConfig, notificationPubsubTopic, reconciliationMode, requestId, updateMask);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2betaImportProductsRequest {\n");
    sb.append("    errorsConfig: ").append(toIndentedString(errorsConfig)).append("\n");
    sb.append("    inputConfig: ").append(toIndentedString(inputConfig)).append("\n");
    sb.append("    notificationPubsubTopic: ").append(toIndentedString(notificationPubsubTopic)).append("\n");
    sb.append("    reconciliationMode: ").append(toIndentedString(reconciliationMode)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    updateMask: ").append(toIndentedString(updateMask)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("errorsConfig");
    openapiFields.add("inputConfig");
    openapiFields.add("notificationPubsubTopic");
    openapiFields.add("reconciliationMode");
    openapiFields.add("requestId");
    openapiFields.add("updateMask");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2betaImportProductsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2betaImportProductsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2betaImportProductsRequest is not found in the empty JSON string", GoogleCloudRetailV2betaImportProductsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2betaImportProductsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2betaImportProductsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `errorsConfig`
      if (jsonObj.get("errorsConfig") != null && !jsonObj.get("errorsConfig").isJsonNull()) {
        GoogleCloudRetailV2betaImportErrorsConfig.validateJsonElement(jsonObj.get("errorsConfig"));
      }
      // validate the optional field `inputConfig`
      if (jsonObj.get("inputConfig") != null && !jsonObj.get("inputConfig").isJsonNull()) {
        GoogleCloudRetailV2betaProductInputConfig.validateJsonElement(jsonObj.get("inputConfig"));
      }
      if ((jsonObj.get("notificationPubsubTopic") != null && !jsonObj.get("notificationPubsubTopic").isJsonNull()) && !jsonObj.get("notificationPubsubTopic").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notificationPubsubTopic` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notificationPubsubTopic").toString()));
      }
      if ((jsonObj.get("reconciliationMode") != null && !jsonObj.get("reconciliationMode").isJsonNull()) && !jsonObj.get("reconciliationMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reconciliationMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reconciliationMode").toString()));
      }
      // validate the optional field `reconciliationMode`
      if (jsonObj.get("reconciliationMode") != null && !jsonObj.get("reconciliationMode").isJsonNull()) {
        ReconciliationModeEnum.validateJsonElement(jsonObj.get("reconciliationMode"));
      }
      if ((jsonObj.get("requestId") != null && !jsonObj.get("requestId").isJsonNull()) && !jsonObj.get("requestId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `requestId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("requestId").toString()));
      }
      if ((jsonObj.get("updateMask") != null && !jsonObj.get("updateMask").isJsonNull()) && !jsonObj.get("updateMask").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateMask` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateMask").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2betaImportProductsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2betaImportProductsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2betaImportProductsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2betaImportProductsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2betaImportProductsRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2betaImportProductsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2betaImportProductsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2betaImportProductsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2betaImportProductsRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2betaImportProductsRequest
   */
  public static GoogleCloudRetailV2betaImportProductsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2betaImportProductsRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2betaImportProductsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

