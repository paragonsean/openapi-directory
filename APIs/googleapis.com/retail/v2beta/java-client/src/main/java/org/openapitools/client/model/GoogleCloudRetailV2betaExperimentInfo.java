/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Metadata for active A/B testing Experiment.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:18.873693-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2betaExperimentInfo {
  public static final String SERIALIZED_NAME_EXPERIMENT = "experiment";
  @SerializedName(SERIALIZED_NAME_EXPERIMENT)
  private String experiment;

  public static final String SERIALIZED_NAME_SERVING_CONFIG_EXPERIMENT = "servingConfigExperiment";
  @SerializedName(SERIALIZED_NAME_SERVING_CONFIG_EXPERIMENT)
  private GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment servingConfigExperiment;

  public GoogleCloudRetailV2betaExperimentInfo() {
  }

  public GoogleCloudRetailV2betaExperimentInfo experiment(String experiment) {
    this.experiment = experiment;
    return this;
  }

  /**
   * The fully qualified resource name of the experiment that provides the serving config under test, should an active experiment exist. For example: &#x60;projects/_*_/locations/global/catalogs/default_catalog/experiments/experiment_id&#x60;
   * @return experiment
   */
  @javax.annotation.Nullable
  public String getExperiment() {
    return experiment;
  }

  public void setExperiment(String experiment) {
    this.experiment = experiment;
  }


  public GoogleCloudRetailV2betaExperimentInfo servingConfigExperiment(GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment servingConfigExperiment) {
    this.servingConfigExperiment = servingConfigExperiment;
    return this;
  }

  /**
   * Get servingConfigExperiment
   * @return servingConfigExperiment
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment getServingConfigExperiment() {
    return servingConfigExperiment;
  }

  public void setServingConfigExperiment(GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment servingConfigExperiment) {
    this.servingConfigExperiment = servingConfigExperiment;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2betaExperimentInfo googleCloudRetailV2betaExperimentInfo = (GoogleCloudRetailV2betaExperimentInfo) o;
    return Objects.equals(this.experiment, googleCloudRetailV2betaExperimentInfo.experiment) &&
        Objects.equals(this.servingConfigExperiment, googleCloudRetailV2betaExperimentInfo.servingConfigExperiment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(experiment, servingConfigExperiment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2betaExperimentInfo {\n");
    sb.append("    experiment: ").append(toIndentedString(experiment)).append("\n");
    sb.append("    servingConfigExperiment: ").append(toIndentedString(servingConfigExperiment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("experiment");
    openapiFields.add("servingConfigExperiment");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2betaExperimentInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2betaExperimentInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2betaExperimentInfo is not found in the empty JSON string", GoogleCloudRetailV2betaExperimentInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2betaExperimentInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2betaExperimentInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("experiment") != null && !jsonObj.get("experiment").isJsonNull()) && !jsonObj.get("experiment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `experiment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("experiment").toString()));
      }
      // validate the optional field `servingConfigExperiment`
      if (jsonObj.get("servingConfigExperiment") != null && !jsonObj.get("servingConfigExperiment").isJsonNull()) {
        GoogleCloudRetailV2betaExperimentInfoServingConfigExperiment.validateJsonElement(jsonObj.get("servingConfigExperiment"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2betaExperimentInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2betaExperimentInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2betaExperimentInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2betaExperimentInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2betaExperimentInfo>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2betaExperimentInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2betaExperimentInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2betaExperimentInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2betaExperimentInfo
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2betaExperimentInfo
   */
  public static GoogleCloudRetailV2betaExperimentInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2betaExperimentInfo.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2betaExperimentInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

