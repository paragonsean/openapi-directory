/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudRetailV2betaMerchantCenterFeedFilter;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a link between a Merchant Center account and a branch. After a link is established, products from the linked Merchant Center account are streamed to the linked branch.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:18.873693-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2betaMerchantCenterLink {
  public static final String SERIALIZED_NAME_BRANCH_ID = "branchId";
  @SerializedName(SERIALIZED_NAME_BRANCH_ID)
  private String branchId;

  public static final String SERIALIZED_NAME_DESTINATIONS = "destinations";
  @SerializedName(SERIALIZED_NAME_DESTINATIONS)
  private List<String> destinations = new ArrayList<>();

  public static final String SERIALIZED_NAME_FEEDS = "feeds";
  @SerializedName(SERIALIZED_NAME_FEEDS)
  private List<GoogleCloudRetailV2betaMerchantCenterFeedFilter> feeds = new ArrayList<>();

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "languageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_MERCHANT_CENTER_ACCOUNT_ID = "merchantCenterAccountId";
  @SerializedName(SERIALIZED_NAME_MERCHANT_CENTER_ACCOUNT_ID)
  private String merchantCenterAccountId;

  public static final String SERIALIZED_NAME_REGION_CODE = "regionCode";
  @SerializedName(SERIALIZED_NAME_REGION_CODE)
  private String regionCode;

  public GoogleCloudRetailV2betaMerchantCenterLink() {
  }

  public GoogleCloudRetailV2betaMerchantCenterLink branchId(String branchId) {
    this.branchId = branchId;
    return this;
  }

  /**
   * The branch ID (e.g. 0/1/2) within this catalog that products from merchant_center_account_id are streamed to. When updating this field, an empty value will use the currently configured default branch. However, changing the default branch later on won&#39;t change the linked branch here. A single branch ID can only have one linked Merchant Center account ID.
   * @return branchId
   */
  @javax.annotation.Nullable
  public String getBranchId() {
    return branchId;
  }

  public void setBranchId(String branchId) {
    this.branchId = branchId;
  }


  public GoogleCloudRetailV2betaMerchantCenterLink destinations(List<String> destinations) {
    this.destinations = destinations;
    return this;
  }

  public GoogleCloudRetailV2betaMerchantCenterLink addDestinationsItem(String destinationsItem) {
    if (this.destinations == null) {
      this.destinations = new ArrayList<>();
    }
    this.destinations.add(destinationsItem);
    return this;
  }

  /**
   * String representing the destination to import for, all if left empty. List of possible values is given in [Included destination](https://support.google.com/merchants/answer/7501026). List of allowed string values: \&quot;Shopping_ads\&quot;, \&quot;Buy_on_google_listings\&quot;, \&quot;Display_ads\&quot;, \&quot;Local_inventory _ads\&quot;, \&quot;Free_listings\&quot;, \&quot;Free_local_listings\&quot; NOTE: The string values are case sensitive.
   * @return destinations
   */
  @javax.annotation.Nullable
  public List<String> getDestinations() {
    return destinations;
  }

  public void setDestinations(List<String> destinations) {
    this.destinations = destinations;
  }


  public GoogleCloudRetailV2betaMerchantCenterLink feeds(List<GoogleCloudRetailV2betaMerchantCenterFeedFilter> feeds) {
    this.feeds = feeds;
    return this;
  }

  public GoogleCloudRetailV2betaMerchantCenterLink addFeedsItem(GoogleCloudRetailV2betaMerchantCenterFeedFilter feedsItem) {
    if (this.feeds == null) {
      this.feeds = new ArrayList<>();
    }
    this.feeds.add(feedsItem);
    return this;
  }

  /**
   * Criteria for the Merchant Center feeds to be ingested via the link. All offers will be ingested if the list is empty. Otherwise the offers will be ingested from selected feeds.
   * @return feeds
   */
  @javax.annotation.Nullable
  public List<GoogleCloudRetailV2betaMerchantCenterFeedFilter> getFeeds() {
    return feeds;
  }

  public void setFeeds(List<GoogleCloudRetailV2betaMerchantCenterFeedFilter> feeds) {
    this.feeds = feeds;
  }


  public GoogleCloudRetailV2betaMerchantCenterLink languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * Language of the title/description and other string attributes. Use language tags defined by [BCP 47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). ISO 639-1. This specifies the language of offers in Merchant Center that will be accepted. If empty no language filtering will be performed. Example value: &#x60;en&#x60;.
   * @return languageCode
   */
  @javax.annotation.Nullable
  public String getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public GoogleCloudRetailV2betaMerchantCenterLink merchantCenterAccountId(String merchantCenterAccountId) {
    this.merchantCenterAccountId = merchantCenterAccountId;
    return this;
  }

  /**
   * Required. The linked [Merchant Center account ID](https://developers.google.com/shopping-content/guides/accountstatuses). The account must be a standalone account or a sub-account of a MCA.
   * @return merchantCenterAccountId
   */
  @javax.annotation.Nullable
  public String getMerchantCenterAccountId() {
    return merchantCenterAccountId;
  }

  public void setMerchantCenterAccountId(String merchantCenterAccountId) {
    this.merchantCenterAccountId = merchantCenterAccountId;
  }


  public GoogleCloudRetailV2betaMerchantCenterLink regionCode(String regionCode) {
    this.regionCode = regionCode;
    return this;
  }

  /**
   * Region code of offers to accept. 2-letter Uppercase ISO 3166-1 alpha-2 code. List of values can be found [here](https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry) under the &#x60;region&#x60; tag. If left blank no region filtering will be performed. Example value: &#x60;US&#x60;.
   * @return regionCode
   */
  @javax.annotation.Nullable
  public String getRegionCode() {
    return regionCode;
  }

  public void setRegionCode(String regionCode) {
    this.regionCode = regionCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2betaMerchantCenterLink googleCloudRetailV2betaMerchantCenterLink = (GoogleCloudRetailV2betaMerchantCenterLink) o;
    return Objects.equals(this.branchId, googleCloudRetailV2betaMerchantCenterLink.branchId) &&
        Objects.equals(this.destinations, googleCloudRetailV2betaMerchantCenterLink.destinations) &&
        Objects.equals(this.feeds, googleCloudRetailV2betaMerchantCenterLink.feeds) &&
        Objects.equals(this.languageCode, googleCloudRetailV2betaMerchantCenterLink.languageCode) &&
        Objects.equals(this.merchantCenterAccountId, googleCloudRetailV2betaMerchantCenterLink.merchantCenterAccountId) &&
        Objects.equals(this.regionCode, googleCloudRetailV2betaMerchantCenterLink.regionCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(branchId, destinations, feeds, languageCode, merchantCenterAccountId, regionCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2betaMerchantCenterLink {\n");
    sb.append("    branchId: ").append(toIndentedString(branchId)).append("\n");
    sb.append("    destinations: ").append(toIndentedString(destinations)).append("\n");
    sb.append("    feeds: ").append(toIndentedString(feeds)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    merchantCenterAccountId: ").append(toIndentedString(merchantCenterAccountId)).append("\n");
    sb.append("    regionCode: ").append(toIndentedString(regionCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("branchId");
    openapiFields.add("destinations");
    openapiFields.add("feeds");
    openapiFields.add("languageCode");
    openapiFields.add("merchantCenterAccountId");
    openapiFields.add("regionCode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2betaMerchantCenterLink
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2betaMerchantCenterLink.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2betaMerchantCenterLink is not found in the empty JSON string", GoogleCloudRetailV2betaMerchantCenterLink.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2betaMerchantCenterLink.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2betaMerchantCenterLink` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("branchId") != null && !jsonObj.get("branchId").isJsonNull()) && !jsonObj.get("branchId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `branchId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("branchId").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("destinations") != null && !jsonObj.get("destinations").isJsonNull() && !jsonObj.get("destinations").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `destinations` to be an array in the JSON string but got `%s`", jsonObj.get("destinations").toString()));
      }
      if (jsonObj.get("feeds") != null && !jsonObj.get("feeds").isJsonNull()) {
        JsonArray jsonArrayfeeds = jsonObj.getAsJsonArray("feeds");
        if (jsonArrayfeeds != null) {
          // ensure the json data is an array
          if (!jsonObj.get("feeds").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `feeds` to be an array in the JSON string but got `%s`", jsonObj.get("feeds").toString()));
          }

          // validate the optional field `feeds` (array)
          for (int i = 0; i < jsonArrayfeeds.size(); i++) {
            GoogleCloudRetailV2betaMerchantCenterFeedFilter.validateJsonElement(jsonArrayfeeds.get(i));
          };
        }
      }
      if ((jsonObj.get("languageCode") != null && !jsonObj.get("languageCode").isJsonNull()) && !jsonObj.get("languageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `languageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("languageCode").toString()));
      }
      if ((jsonObj.get("merchantCenterAccountId") != null && !jsonObj.get("merchantCenterAccountId").isJsonNull()) && !jsonObj.get("merchantCenterAccountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchantCenterAccountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchantCenterAccountId").toString()));
      }
      if ((jsonObj.get("regionCode") != null && !jsonObj.get("regionCode").isJsonNull()) && !jsonObj.get("regionCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `regionCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("regionCode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2betaMerchantCenterLink.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2betaMerchantCenterLink' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2betaMerchantCenterLink> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2betaMerchantCenterLink.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2betaMerchantCenterLink>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2betaMerchantCenterLink value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2betaMerchantCenterLink read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2betaMerchantCenterLink given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2betaMerchantCenterLink
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2betaMerchantCenterLink
   */
  public static GoogleCloudRetailV2betaMerchantCenterLink fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2betaMerchantCenterLink.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2betaMerchantCenterLink to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

