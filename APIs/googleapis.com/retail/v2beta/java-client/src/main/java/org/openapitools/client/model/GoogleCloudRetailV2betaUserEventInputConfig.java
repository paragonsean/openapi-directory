/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudRetailV2betaBigQuerySource;
import org.openapitools.client.model.GoogleCloudRetailV2betaGcsSource;
import org.openapitools.client.model.GoogleCloudRetailV2betaUserEventInlineSource;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The input config source for user events.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:18.873693-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2betaUserEventInputConfig {
  public static final String SERIALIZED_NAME_BIG_QUERY_SOURCE = "bigQuerySource";
  @SerializedName(SERIALIZED_NAME_BIG_QUERY_SOURCE)
  private GoogleCloudRetailV2betaBigQuerySource bigQuerySource;

  public static final String SERIALIZED_NAME_GCS_SOURCE = "gcsSource";
  @SerializedName(SERIALIZED_NAME_GCS_SOURCE)
  private GoogleCloudRetailV2betaGcsSource gcsSource;

  public static final String SERIALIZED_NAME_USER_EVENT_INLINE_SOURCE = "userEventInlineSource";
  @SerializedName(SERIALIZED_NAME_USER_EVENT_INLINE_SOURCE)
  private GoogleCloudRetailV2betaUserEventInlineSource userEventInlineSource;

  public GoogleCloudRetailV2betaUserEventInputConfig() {
  }

  public GoogleCloudRetailV2betaUserEventInputConfig bigQuerySource(GoogleCloudRetailV2betaBigQuerySource bigQuerySource) {
    this.bigQuerySource = bigQuerySource;
    return this;
  }

  /**
   * Get bigQuerySource
   * @return bigQuerySource
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2betaBigQuerySource getBigQuerySource() {
    return bigQuerySource;
  }

  public void setBigQuerySource(GoogleCloudRetailV2betaBigQuerySource bigQuerySource) {
    this.bigQuerySource = bigQuerySource;
  }


  public GoogleCloudRetailV2betaUserEventInputConfig gcsSource(GoogleCloudRetailV2betaGcsSource gcsSource) {
    this.gcsSource = gcsSource;
    return this;
  }

  /**
   * Get gcsSource
   * @return gcsSource
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2betaGcsSource getGcsSource() {
    return gcsSource;
  }

  public void setGcsSource(GoogleCloudRetailV2betaGcsSource gcsSource) {
    this.gcsSource = gcsSource;
  }


  public GoogleCloudRetailV2betaUserEventInputConfig userEventInlineSource(GoogleCloudRetailV2betaUserEventInlineSource userEventInlineSource) {
    this.userEventInlineSource = userEventInlineSource;
    return this;
  }

  /**
   * Get userEventInlineSource
   * @return userEventInlineSource
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2betaUserEventInlineSource getUserEventInlineSource() {
    return userEventInlineSource;
  }

  public void setUserEventInlineSource(GoogleCloudRetailV2betaUserEventInlineSource userEventInlineSource) {
    this.userEventInlineSource = userEventInlineSource;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2betaUserEventInputConfig googleCloudRetailV2betaUserEventInputConfig = (GoogleCloudRetailV2betaUserEventInputConfig) o;
    return Objects.equals(this.bigQuerySource, googleCloudRetailV2betaUserEventInputConfig.bigQuerySource) &&
        Objects.equals(this.gcsSource, googleCloudRetailV2betaUserEventInputConfig.gcsSource) &&
        Objects.equals(this.userEventInlineSource, googleCloudRetailV2betaUserEventInputConfig.userEventInlineSource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bigQuerySource, gcsSource, userEventInlineSource);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2betaUserEventInputConfig {\n");
    sb.append("    bigQuerySource: ").append(toIndentedString(bigQuerySource)).append("\n");
    sb.append("    gcsSource: ").append(toIndentedString(gcsSource)).append("\n");
    sb.append("    userEventInlineSource: ").append(toIndentedString(userEventInlineSource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bigQuerySource");
    openapiFields.add("gcsSource");
    openapiFields.add("userEventInlineSource");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2betaUserEventInputConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2betaUserEventInputConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2betaUserEventInputConfig is not found in the empty JSON string", GoogleCloudRetailV2betaUserEventInputConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2betaUserEventInputConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2betaUserEventInputConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `bigQuerySource`
      if (jsonObj.get("bigQuerySource") != null && !jsonObj.get("bigQuerySource").isJsonNull()) {
        GoogleCloudRetailV2betaBigQuerySource.validateJsonElement(jsonObj.get("bigQuerySource"));
      }
      // validate the optional field `gcsSource`
      if (jsonObj.get("gcsSource") != null && !jsonObj.get("gcsSource").isJsonNull()) {
        GoogleCloudRetailV2betaGcsSource.validateJsonElement(jsonObj.get("gcsSource"));
      }
      // validate the optional field `userEventInlineSource`
      if (jsonObj.get("userEventInlineSource") != null && !jsonObj.get("userEventInlineSource").isJsonNull()) {
        GoogleCloudRetailV2betaUserEventInlineSource.validateJsonElement(jsonObj.get("userEventInlineSource"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2betaUserEventInputConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2betaUserEventInputConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2betaUserEventInputConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2betaUserEventInputConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2betaUserEventInputConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2betaUserEventInputConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2betaUserEventInputConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2betaUserEventInputConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2betaUserEventInputConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2betaUserEventInputConfig
   */
  public static GoogleCloudRetailV2betaUserEventInputConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2betaUserEventInputConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2betaUserEventInputConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

