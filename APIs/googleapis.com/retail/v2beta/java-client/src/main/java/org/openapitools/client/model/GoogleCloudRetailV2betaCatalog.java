/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudRetailV2betaMerchantCenterLinkingConfig;
import org.openapitools.client.model.GoogleCloudRetailV2betaProductLevelConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The catalog configuration.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:18.873693-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2betaCatalog {
  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_MERCHANT_CENTER_LINKING_CONFIG = "merchantCenterLinkingConfig";
  @SerializedName(SERIALIZED_NAME_MERCHANT_CENTER_LINKING_CONFIG)
  private GoogleCloudRetailV2betaMerchantCenterLinkingConfig merchantCenterLinkingConfig;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRODUCT_LEVEL_CONFIG = "productLevelConfig";
  @SerializedName(SERIALIZED_NAME_PRODUCT_LEVEL_CONFIG)
  private GoogleCloudRetailV2betaProductLevelConfig productLevelConfig;

  public GoogleCloudRetailV2betaCatalog() {
  }

  public GoogleCloudRetailV2betaCatalog displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. Immutable. The catalog display name. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudRetailV2betaCatalog merchantCenterLinkingConfig(GoogleCloudRetailV2betaMerchantCenterLinkingConfig merchantCenterLinkingConfig) {
    this.merchantCenterLinkingConfig = merchantCenterLinkingConfig;
    return this;
  }

  /**
   * Get merchantCenterLinkingConfig
   * @return merchantCenterLinkingConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2betaMerchantCenterLinkingConfig getMerchantCenterLinkingConfig() {
    return merchantCenterLinkingConfig;
  }

  public void setMerchantCenterLinkingConfig(GoogleCloudRetailV2betaMerchantCenterLinkingConfig merchantCenterLinkingConfig) {
    this.merchantCenterLinkingConfig = merchantCenterLinkingConfig;
  }


  public GoogleCloudRetailV2betaCatalog name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. Immutable. The fully qualified resource name of the catalog.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudRetailV2betaCatalog productLevelConfig(GoogleCloudRetailV2betaProductLevelConfig productLevelConfig) {
    this.productLevelConfig = productLevelConfig;
    return this;
  }

  /**
   * Get productLevelConfig
   * @return productLevelConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2betaProductLevelConfig getProductLevelConfig() {
    return productLevelConfig;
  }

  public void setProductLevelConfig(GoogleCloudRetailV2betaProductLevelConfig productLevelConfig) {
    this.productLevelConfig = productLevelConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2betaCatalog googleCloudRetailV2betaCatalog = (GoogleCloudRetailV2betaCatalog) o;
    return Objects.equals(this.displayName, googleCloudRetailV2betaCatalog.displayName) &&
        Objects.equals(this.merchantCenterLinkingConfig, googleCloudRetailV2betaCatalog.merchantCenterLinkingConfig) &&
        Objects.equals(this.name, googleCloudRetailV2betaCatalog.name) &&
        Objects.equals(this.productLevelConfig, googleCloudRetailV2betaCatalog.productLevelConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, merchantCenterLinkingConfig, name, productLevelConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2betaCatalog {\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    merchantCenterLinkingConfig: ").append(toIndentedString(merchantCenterLinkingConfig)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    productLevelConfig: ").append(toIndentedString(productLevelConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("displayName");
    openapiFields.add("merchantCenterLinkingConfig");
    openapiFields.add("name");
    openapiFields.add("productLevelConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2betaCatalog
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2betaCatalog.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2betaCatalog is not found in the empty JSON string", GoogleCloudRetailV2betaCatalog.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2betaCatalog.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2betaCatalog` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      // validate the optional field `merchantCenterLinkingConfig`
      if (jsonObj.get("merchantCenterLinkingConfig") != null && !jsonObj.get("merchantCenterLinkingConfig").isJsonNull()) {
        GoogleCloudRetailV2betaMerchantCenterLinkingConfig.validateJsonElement(jsonObj.get("merchantCenterLinkingConfig"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `productLevelConfig`
      if (jsonObj.get("productLevelConfig") != null && !jsonObj.get("productLevelConfig").isJsonNull()) {
        GoogleCloudRetailV2betaProductLevelConfig.validateJsonElement(jsonObj.get("productLevelConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2betaCatalog.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2betaCatalog' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2betaCatalog> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2betaCatalog.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2betaCatalog>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2betaCatalog value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2betaCatalog read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2betaCatalog given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2betaCatalog
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2betaCatalog
   */
  public static GoogleCloudRetailV2betaCatalog fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2betaCatalog.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2betaCatalog to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

