/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudRetailV2betaInterval;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A facet value which contains value names and their count.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:18.873693-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2betaSearchResponseFacetFacetValue {
  public static final String SERIALIZED_NAME_COUNT = "count";
  @SerializedName(SERIALIZED_NAME_COUNT)
  private String count;

  public static final String SERIALIZED_NAME_INTERVAL = "interval";
  @SerializedName(SERIALIZED_NAME_INTERVAL)
  private GoogleCloudRetailV2betaInterval interval;

  public static final String SERIALIZED_NAME_MAX_VALUE = "maxValue";
  @SerializedName(SERIALIZED_NAME_MAX_VALUE)
  private Double maxValue;

  public static final String SERIALIZED_NAME_MIN_VALUE = "minValue";
  @SerializedName(SERIALIZED_NAME_MIN_VALUE)
  private Double minValue;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private String value;

  public GoogleCloudRetailV2betaSearchResponseFacetFacetValue() {
  }

  public GoogleCloudRetailV2betaSearchResponseFacetFacetValue count(String count) {
    this.count = count;
    return this;
  }

  /**
   * Number of items that have this facet value.
   * @return count
   */
  @javax.annotation.Nullable
  public String getCount() {
    return count;
  }

  public void setCount(String count) {
    this.count = count;
  }


  public GoogleCloudRetailV2betaSearchResponseFacetFacetValue interval(GoogleCloudRetailV2betaInterval interval) {
    this.interval = interval;
    return this;
  }

  /**
   * Get interval
   * @return interval
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2betaInterval getInterval() {
    return interval;
  }

  public void setInterval(GoogleCloudRetailV2betaInterval interval) {
    this.interval = interval;
  }


  public GoogleCloudRetailV2betaSearchResponseFacetFacetValue maxValue(Double maxValue) {
    this.maxValue = maxValue;
    return this;
  }

  /**
   * The maximum value in the FacetValue.interval. Only supported on numerical facets and returned if SearchRequest.FacetSpec.FacetKey.return_min_max is true.
   * @return maxValue
   */
  @javax.annotation.Nullable
  public Double getMaxValue() {
    return maxValue;
  }

  public void setMaxValue(Double maxValue) {
    this.maxValue = maxValue;
  }


  public GoogleCloudRetailV2betaSearchResponseFacetFacetValue minValue(Double minValue) {
    this.minValue = minValue;
    return this;
  }

  /**
   * The minimum value in the FacetValue.interval. Only supported on numerical facets and returned if SearchRequest.FacetSpec.FacetKey.return_min_max is true.
   * @return minValue
   */
  @javax.annotation.Nullable
  public Double getMinValue() {
    return minValue;
  }

  public void setMinValue(Double minValue) {
    this.minValue = minValue;
  }


  public GoogleCloudRetailV2betaSearchResponseFacetFacetValue value(String value) {
    this.value = value;
    return this;
  }

  /**
   * Text value of a facet, such as \&quot;Black\&quot; for facet \&quot;colorFamilies\&quot;.
   * @return value
   */
  @javax.annotation.Nullable
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2betaSearchResponseFacetFacetValue googleCloudRetailV2betaSearchResponseFacetFacetValue = (GoogleCloudRetailV2betaSearchResponseFacetFacetValue) o;
    return Objects.equals(this.count, googleCloudRetailV2betaSearchResponseFacetFacetValue.count) &&
        Objects.equals(this.interval, googleCloudRetailV2betaSearchResponseFacetFacetValue.interval) &&
        Objects.equals(this.maxValue, googleCloudRetailV2betaSearchResponseFacetFacetValue.maxValue) &&
        Objects.equals(this.minValue, googleCloudRetailV2betaSearchResponseFacetFacetValue.minValue) &&
        Objects.equals(this.value, googleCloudRetailV2betaSearchResponseFacetFacetValue.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(count, interval, maxValue, minValue, value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2betaSearchResponseFacetFacetValue {\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    interval: ").append(toIndentedString(interval)).append("\n");
    sb.append("    maxValue: ").append(toIndentedString(maxValue)).append("\n");
    sb.append("    minValue: ").append(toIndentedString(minValue)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("count");
    openapiFields.add("interval");
    openapiFields.add("maxValue");
    openapiFields.add("minValue");
    openapiFields.add("value");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2betaSearchResponseFacetFacetValue
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2betaSearchResponseFacetFacetValue.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2betaSearchResponseFacetFacetValue is not found in the empty JSON string", GoogleCloudRetailV2betaSearchResponseFacetFacetValue.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2betaSearchResponseFacetFacetValue.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2betaSearchResponseFacetFacetValue` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("count") != null && !jsonObj.get("count").isJsonNull()) && !jsonObj.get("count").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `count` to be a primitive type in the JSON string but got `%s`", jsonObj.get("count").toString()));
      }
      // validate the optional field `interval`
      if (jsonObj.get("interval") != null && !jsonObj.get("interval").isJsonNull()) {
        GoogleCloudRetailV2betaInterval.validateJsonElement(jsonObj.get("interval"));
      }
      if ((jsonObj.get("value") != null && !jsonObj.get("value").isJsonNull()) && !jsonObj.get("value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("value").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2betaSearchResponseFacetFacetValue.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2betaSearchResponseFacetFacetValue' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2betaSearchResponseFacetFacetValue> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2betaSearchResponseFacetFacetValue.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2betaSearchResponseFacetFacetValue>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2betaSearchResponseFacetFacetValue value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2betaSearchResponseFacetFacetValue read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2betaSearchResponseFacetFacetValue given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2betaSearchResponseFacetFacetValue
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2betaSearchResponseFacetFacetValue
   */
  public static GoogleCloudRetailV2betaSearchResponseFacetFacetValue fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2betaSearchResponseFacetFacetValue.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2betaSearchResponseFacetFacetValue to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

