/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Force returns an attribute/facet in the request around a certain position or above. * Rule Condition: Must specify non-empty Condition.query_terms (for search only) or Condition.page_categories (for browse only), but can&#39;t specify both. * Action Inputs: attribute name, position * Action Result: Will force return a facet key around a certain position or above if the condition is satisfied. Example: Suppose the query is \&quot;shoes\&quot;, the Condition.query_terms is \&quot;shoes\&quot;, the ForceReturnFacetAction.FacetPositionAdjustment.attribute_name is \&quot;size\&quot; and the ForceReturnFacetAction.FacetPositionAdjustment.position is 8. Two cases: a) The facet key \&quot;size\&quot; is not already in the top 8 slots, then the facet \&quot;size\&quot; will appear at a position close to 8. b) The facet key \&quot;size\&quot; in among the top 8 positions in the request, then it will stay at its current rank.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:18.873693-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2betaRuleForceReturnFacetAction {
  public static final String SERIALIZED_NAME_FACET_POSITION_ADJUSTMENTS = "facetPositionAdjustments";
  @SerializedName(SERIALIZED_NAME_FACET_POSITION_ADJUSTMENTS)
  private List<GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment> facetPositionAdjustments = new ArrayList<>();

  public GoogleCloudRetailV2betaRuleForceReturnFacetAction() {
  }

  public GoogleCloudRetailV2betaRuleForceReturnFacetAction facetPositionAdjustments(List<GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment> facetPositionAdjustments) {
    this.facetPositionAdjustments = facetPositionAdjustments;
    return this;
  }

  public GoogleCloudRetailV2betaRuleForceReturnFacetAction addFacetPositionAdjustmentsItem(GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment facetPositionAdjustmentsItem) {
    if (this.facetPositionAdjustments == null) {
      this.facetPositionAdjustments = new ArrayList<>();
    }
    this.facetPositionAdjustments.add(facetPositionAdjustmentsItem);
    return this;
  }

  /**
   * Each instance corresponds to a force return attribute for the given condition. There can&#39;t be more 3 instances here.
   * @return facetPositionAdjustments
   */
  @javax.annotation.Nullable
  public List<GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment> getFacetPositionAdjustments() {
    return facetPositionAdjustments;
  }

  public void setFacetPositionAdjustments(List<GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment> facetPositionAdjustments) {
    this.facetPositionAdjustments = facetPositionAdjustments;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2betaRuleForceReturnFacetAction googleCloudRetailV2betaRuleForceReturnFacetAction = (GoogleCloudRetailV2betaRuleForceReturnFacetAction) o;
    return Objects.equals(this.facetPositionAdjustments, googleCloudRetailV2betaRuleForceReturnFacetAction.facetPositionAdjustments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(facetPositionAdjustments);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2betaRuleForceReturnFacetAction {\n");
    sb.append("    facetPositionAdjustments: ").append(toIndentedString(facetPositionAdjustments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("facetPositionAdjustments");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2betaRuleForceReturnFacetAction
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2betaRuleForceReturnFacetAction.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2betaRuleForceReturnFacetAction is not found in the empty JSON string", GoogleCloudRetailV2betaRuleForceReturnFacetAction.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2betaRuleForceReturnFacetAction.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2betaRuleForceReturnFacetAction` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("facetPositionAdjustments") != null && !jsonObj.get("facetPositionAdjustments").isJsonNull()) {
        JsonArray jsonArrayfacetPositionAdjustments = jsonObj.getAsJsonArray("facetPositionAdjustments");
        if (jsonArrayfacetPositionAdjustments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("facetPositionAdjustments").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `facetPositionAdjustments` to be an array in the JSON string but got `%s`", jsonObj.get("facetPositionAdjustments").toString()));
          }

          // validate the optional field `facetPositionAdjustments` (array)
          for (int i = 0; i < jsonArrayfacetPositionAdjustments.size(); i++) {
            GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment.validateJsonElement(jsonArrayfacetPositionAdjustments.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2betaRuleForceReturnFacetAction.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2betaRuleForceReturnFacetAction' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2betaRuleForceReturnFacetAction> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2betaRuleForceReturnFacetAction.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2betaRuleForceReturnFacetAction>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2betaRuleForceReturnFacetAction value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2betaRuleForceReturnFacetAction read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2betaRuleForceReturnFacetAction given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2betaRuleForceReturnFacetAction
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2betaRuleForceReturnFacetAction
   */
  public static GoogleCloudRetailV2betaRuleForceReturnFacetAction fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2betaRuleForceReturnFacetAction.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2betaRuleForceReturnFacetAction to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

