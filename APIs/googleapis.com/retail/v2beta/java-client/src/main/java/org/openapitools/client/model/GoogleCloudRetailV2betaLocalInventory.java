/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudRetailV2betaCustomAttribute;
import org.openapitools.client.model.GoogleCloudRetailV2betaPriceInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The inventory information at a place (e.g. a store) identified by a place ID.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:18.873693-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2betaLocalInventory {
  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Map<String, GoogleCloudRetailV2betaCustomAttribute> attributes = new HashMap<>();

  public static final String SERIALIZED_NAME_FULFILLMENT_TYPES = "fulfillmentTypes";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_TYPES)
  private List<String> fulfillmentTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_PLACE_ID = "placeId";
  @SerializedName(SERIALIZED_NAME_PLACE_ID)
  private String placeId;

  public static final String SERIALIZED_NAME_PRICE_INFO = "priceInfo";
  @SerializedName(SERIALIZED_NAME_PRICE_INFO)
  private GoogleCloudRetailV2betaPriceInfo priceInfo;

  public GoogleCloudRetailV2betaLocalInventory() {
  }

  public GoogleCloudRetailV2betaLocalInventory attributes(Map<String, GoogleCloudRetailV2betaCustomAttribute> attributes) {
    this.attributes = attributes;
    return this;
  }

  public GoogleCloudRetailV2betaLocalInventory putAttributesItem(String key, GoogleCloudRetailV2betaCustomAttribute attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

  /**
   * Additional local inventory attributes, for example, store name, promotion tags, etc. This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT error is returned: * At most 30 attributes are allowed. * The key must be a UTF-8 encoded string with a length limit of 32 characters. * The key must match the pattern: &#x60;a-zA-Z0-9*&#x60;. For example, key0LikeThis or KEY_1_LIKE_THIS. * The attribute values must be of the same type (text or number). * Only 1 value is allowed for each attribute. * For text values, the length limit is 256 UTF-8 characters. * The attribute does not support search. The &#x60;searchable&#x60; field should be unset or set to false. * The max summed total bytes of custom attribute keys and values per product is 5MiB.
   * @return attributes
   */
  @javax.annotation.Nullable
  public Map<String, GoogleCloudRetailV2betaCustomAttribute> getAttributes() {
    return attributes;
  }

  public void setAttributes(Map<String, GoogleCloudRetailV2betaCustomAttribute> attributes) {
    this.attributes = attributes;
  }


  public GoogleCloudRetailV2betaLocalInventory fulfillmentTypes(List<String> fulfillmentTypes) {
    this.fulfillmentTypes = fulfillmentTypes;
    return this;
  }

  public GoogleCloudRetailV2betaLocalInventory addFulfillmentTypesItem(String fulfillmentTypesItem) {
    if (this.fulfillmentTypes == null) {
      this.fulfillmentTypes = new ArrayList<>();
    }
    this.fulfillmentTypes.add(fulfillmentTypesItem);
    return this;
  }

  /**
   * Input only. Supported fulfillment types. Valid fulfillment type values include commonly used types (such as pickup in store and same day delivery), and custom types. Customers have to map custom types to their display names before rendering UI. Supported values: * \&quot;pickup-in-store\&quot; * \&quot;ship-to-store\&quot; * \&quot;same-day-delivery\&quot; * \&quot;next-day-delivery\&quot; * \&quot;custom-type-1\&quot; * \&quot;custom-type-2\&quot; * \&quot;custom-type-3\&quot; * \&quot;custom-type-4\&quot; * \&quot;custom-type-5\&quot; If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned. All the elements must be distinct. Otherwise, an INVALID_ARGUMENT error is returned.
   * @return fulfillmentTypes
   */
  @javax.annotation.Nullable
  public List<String> getFulfillmentTypes() {
    return fulfillmentTypes;
  }

  public void setFulfillmentTypes(List<String> fulfillmentTypes) {
    this.fulfillmentTypes = fulfillmentTypes;
  }


  public GoogleCloudRetailV2betaLocalInventory placeId(String placeId) {
    this.placeId = placeId;
    return this;
  }

  /**
   * The place ID for the current set of inventory information.
   * @return placeId
   */
  @javax.annotation.Nullable
  public String getPlaceId() {
    return placeId;
  }

  public void setPlaceId(String placeId) {
    this.placeId = placeId;
  }


  public GoogleCloudRetailV2betaLocalInventory priceInfo(GoogleCloudRetailV2betaPriceInfo priceInfo) {
    this.priceInfo = priceInfo;
    return this;
  }

  /**
   * Get priceInfo
   * @return priceInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2betaPriceInfo getPriceInfo() {
    return priceInfo;
  }

  public void setPriceInfo(GoogleCloudRetailV2betaPriceInfo priceInfo) {
    this.priceInfo = priceInfo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2betaLocalInventory googleCloudRetailV2betaLocalInventory = (GoogleCloudRetailV2betaLocalInventory) o;
    return Objects.equals(this.attributes, googleCloudRetailV2betaLocalInventory.attributes) &&
        Objects.equals(this.fulfillmentTypes, googleCloudRetailV2betaLocalInventory.fulfillmentTypes) &&
        Objects.equals(this.placeId, googleCloudRetailV2betaLocalInventory.placeId) &&
        Objects.equals(this.priceInfo, googleCloudRetailV2betaLocalInventory.priceInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributes, fulfillmentTypes, placeId, priceInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2betaLocalInventory {\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    fulfillmentTypes: ").append(toIndentedString(fulfillmentTypes)).append("\n");
    sb.append("    placeId: ").append(toIndentedString(placeId)).append("\n");
    sb.append("    priceInfo: ").append(toIndentedString(priceInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attributes");
    openapiFields.add("fulfillmentTypes");
    openapiFields.add("placeId");
    openapiFields.add("priceInfo");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2betaLocalInventory
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2betaLocalInventory.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2betaLocalInventory is not found in the empty JSON string", GoogleCloudRetailV2betaLocalInventory.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2betaLocalInventory.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2betaLocalInventory` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("fulfillmentTypes") != null && !jsonObj.get("fulfillmentTypes").isJsonNull() && !jsonObj.get("fulfillmentTypes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `fulfillmentTypes` to be an array in the JSON string but got `%s`", jsonObj.get("fulfillmentTypes").toString()));
      }
      if ((jsonObj.get("placeId") != null && !jsonObj.get("placeId").isJsonNull()) && !jsonObj.get("placeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `placeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("placeId").toString()));
      }
      // validate the optional field `priceInfo`
      if (jsonObj.get("priceInfo") != null && !jsonObj.get("priceInfo").isJsonNull()) {
        GoogleCloudRetailV2betaPriceInfo.validateJsonElement(jsonObj.get("priceInfo"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2betaLocalInventory.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2betaLocalInventory' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2betaLocalInventory> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2betaLocalInventory.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2betaLocalInventory>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2betaLocalInventory value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2betaLocalInventory read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2betaLocalInventory given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2betaLocalInventory
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2betaLocalInventory
   */
  public static GoogleCloudRetailV2betaLocalInventory fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2betaLocalInventory.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2betaLocalInventory to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

