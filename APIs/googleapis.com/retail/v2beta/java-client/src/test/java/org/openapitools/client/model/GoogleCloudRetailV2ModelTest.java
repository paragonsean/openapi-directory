/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudRetailV2ModelModelFeaturesConfig;
import org.openapitools.client.model.GoogleCloudRetailV2ModelServingConfigList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleCloudRetailV2Model
 */
public class GoogleCloudRetailV2ModelTest {
    private final GoogleCloudRetailV2Model model = new GoogleCloudRetailV2Model();

    /**
     * Model tests for GoogleCloudRetailV2Model
     */
    @Test
    public void testGoogleCloudRetailV2Model() {
        // TODO: test GoogleCloudRetailV2Model
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'dataState'
     */
    @Test
    public void dataStateTest() {
        // TODO: test dataState
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'filteringOption'
     */
    @Test
    public void filteringOptionTest() {
        // TODO: test filteringOption
    }

    /**
     * Test the property 'lastTuneTime'
     */
    @Test
    public void lastTuneTimeTest() {
        // TODO: test lastTuneTime
    }

    /**
     * Test the property 'modelFeaturesConfig'
     */
    @Test
    public void modelFeaturesConfigTest() {
        // TODO: test modelFeaturesConfig
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'optimizationObjective'
     */
    @Test
    public void optimizationObjectiveTest() {
        // TODO: test optimizationObjective
    }

    /**
     * Test the property 'periodicTuningState'
     */
    @Test
    public void periodicTuningStateTest() {
        // TODO: test periodicTuningState
    }

    /**
     * Test the property 'servingConfigLists'
     */
    @Test
    public void servingConfigListsTest() {
        // TODO: test servingConfigLists
    }

    /**
     * Test the property 'servingState'
     */
    @Test
    public void servingStateTest() {
        // TODO: test servingState
    }

    /**
     * Test the property 'trainingState'
     */
    @Test
    public void trainingStateTest() {
        // TODO: test trainingState
    }

    /**
     * Test the property 'tuningOperation'
     */
    @Test
    public void tuningOperationTest() {
        // TODO: test tuningOperation
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'updateTime'
     */
    @Test
    public void updateTimeTest() {
        // TODO: test updateTime
    }

}
