# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudRetailV2betaPurgeProductsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, purge_count: str=None, purge_sample: List[str]=None):
        """GoogleCloudRetailV2betaPurgeProductsResponse - a model defined in OpenAPI

        :param purge_count: The purge_count of this GoogleCloudRetailV2betaPurgeProductsResponse.
        :param purge_sample: The purge_sample of this GoogleCloudRetailV2betaPurgeProductsResponse.
        """
        self.openapi_types = {
            'purge_count': str,
            'purge_sample': List[str]
        }

        self.attribute_map = {
            'purge_count': 'purgeCount',
            'purge_sample': 'purgeSample'
        }

        self._purge_count = purge_count
        self._purge_sample = purge_sample

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRetailV2betaPurgeProductsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRetailV2betaPurgeProductsResponse of this GoogleCloudRetailV2betaPurgeProductsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def purge_count(self):
        """Gets the purge_count of this GoogleCloudRetailV2betaPurgeProductsResponse.

        The total count of products purged as a result of the operation.

        :return: The purge_count of this GoogleCloudRetailV2betaPurgeProductsResponse.
        :rtype: str
        """
        return self._purge_count

    @purge_count.setter
    def purge_count(self, purge_count):
        """Sets the purge_count of this GoogleCloudRetailV2betaPurgeProductsResponse.

        The total count of products purged as a result of the operation.

        :param purge_count: The purge_count of this GoogleCloudRetailV2betaPurgeProductsResponse.
        :type purge_count: str
        """

        self._purge_count = purge_count

    @property
    def purge_sample(self):
        """Gets the purge_sample of this GoogleCloudRetailV2betaPurgeProductsResponse.

        A sample of the product names that will be deleted. Only populated if `force` is set to false. A max of 100 names will be returned and the names are chosen at random.

        :return: The purge_sample of this GoogleCloudRetailV2betaPurgeProductsResponse.
        :rtype: List[str]
        """
        return self._purge_sample

    @purge_sample.setter
    def purge_sample(self, purge_sample):
        """Sets the purge_sample of this GoogleCloudRetailV2betaPurgeProductsResponse.

        A sample of the product names that will be deleted. Only populated if `force` is set to false. A max of 100 names will be returned and the names are chosen at random.

        :param purge_sample: The purge_sample of this GoogleCloudRetailV2betaPurgeProductsResponse.
        :type purge_sample: List[str]
        """

        self._purge_sample = purge_sample
