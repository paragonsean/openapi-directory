# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_retail_v2beta_custom_attribute import GoogleCloudRetailV2betaCustomAttribute
from openapi_server.models.google_cloud_retail_v2beta_price_info import GoogleCloudRetailV2betaPriceInfo
from openapi_server import util


class GoogleCloudRetailV2betaLocalInventory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: Dict[str, GoogleCloudRetailV2betaCustomAttribute]=None, fulfillment_types: List[str]=None, place_id: str=None, price_info: GoogleCloudRetailV2betaPriceInfo=None):
        """GoogleCloudRetailV2betaLocalInventory - a model defined in OpenAPI

        :param attributes: The attributes of this GoogleCloudRetailV2betaLocalInventory.
        :param fulfillment_types: The fulfillment_types of this GoogleCloudRetailV2betaLocalInventory.
        :param place_id: The place_id of this GoogleCloudRetailV2betaLocalInventory.
        :param price_info: The price_info of this GoogleCloudRetailV2betaLocalInventory.
        """
        self.openapi_types = {
            'attributes': Dict[str, GoogleCloudRetailV2betaCustomAttribute],
            'fulfillment_types': List[str],
            'place_id': str,
            'price_info': GoogleCloudRetailV2betaPriceInfo
        }

        self.attribute_map = {
            'attributes': 'attributes',
            'fulfillment_types': 'fulfillmentTypes',
            'place_id': 'placeId',
            'price_info': 'priceInfo'
        }

        self._attributes = attributes
        self._fulfillment_types = fulfillment_types
        self._place_id = place_id
        self._price_info = price_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRetailV2betaLocalInventory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRetailV2betaLocalInventory of this GoogleCloudRetailV2betaLocalInventory.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this GoogleCloudRetailV2betaLocalInventory.

        Additional local inventory attributes, for example, store name, promotion tags, etc. This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT error is returned: * At most 30 attributes are allowed. * The key must be a UTF-8 encoded string with a length limit of 32 characters. * The key must match the pattern: `a-zA-Z0-9*`. For example, key0LikeThis or KEY_1_LIKE_THIS. * The attribute values must be of the same type (text or number). * Only 1 value is allowed for each attribute. * For text values, the length limit is 256 UTF-8 characters. * The attribute does not support search. The `searchable` field should be unset or set to false. * The max summed total bytes of custom attribute keys and values per product is 5MiB.

        :return: The attributes of this GoogleCloudRetailV2betaLocalInventory.
        :rtype: Dict[str, GoogleCloudRetailV2betaCustomAttribute]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this GoogleCloudRetailV2betaLocalInventory.

        Additional local inventory attributes, for example, store name, promotion tags, etc. This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT error is returned: * At most 30 attributes are allowed. * The key must be a UTF-8 encoded string with a length limit of 32 characters. * The key must match the pattern: `a-zA-Z0-9*`. For example, key0LikeThis or KEY_1_LIKE_THIS. * The attribute values must be of the same type (text or number). * Only 1 value is allowed for each attribute. * For text values, the length limit is 256 UTF-8 characters. * The attribute does not support search. The `searchable` field should be unset or set to false. * The max summed total bytes of custom attribute keys and values per product is 5MiB.

        :param attributes: The attributes of this GoogleCloudRetailV2betaLocalInventory.
        :type attributes: Dict[str, GoogleCloudRetailV2betaCustomAttribute]
        """

        self._attributes = attributes

    @property
    def fulfillment_types(self):
        """Gets the fulfillment_types of this GoogleCloudRetailV2betaLocalInventory.

        Input only. Supported fulfillment types. Valid fulfillment type values include commonly used types (such as pickup in store and same day delivery), and custom types. Customers have to map custom types to their display names before rendering UI. Supported values: * \"pickup-in-store\" * \"ship-to-store\" * \"same-day-delivery\" * \"next-day-delivery\" * \"custom-type-1\" * \"custom-type-2\" * \"custom-type-3\" * \"custom-type-4\" * \"custom-type-5\" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned. All the elements must be distinct. Otherwise, an INVALID_ARGUMENT error is returned.

        :return: The fulfillment_types of this GoogleCloudRetailV2betaLocalInventory.
        :rtype: List[str]
        """
        return self._fulfillment_types

    @fulfillment_types.setter
    def fulfillment_types(self, fulfillment_types):
        """Sets the fulfillment_types of this GoogleCloudRetailV2betaLocalInventory.

        Input only. Supported fulfillment types. Valid fulfillment type values include commonly used types (such as pickup in store and same day delivery), and custom types. Customers have to map custom types to their display names before rendering UI. Supported values: * \"pickup-in-store\" * \"ship-to-store\" * \"same-day-delivery\" * \"next-day-delivery\" * \"custom-type-1\" * \"custom-type-2\" * \"custom-type-3\" * \"custom-type-4\" * \"custom-type-5\" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned. All the elements must be distinct. Otherwise, an INVALID_ARGUMENT error is returned.

        :param fulfillment_types: The fulfillment_types of this GoogleCloudRetailV2betaLocalInventory.
        :type fulfillment_types: List[str]
        """

        self._fulfillment_types = fulfillment_types

    @property
    def place_id(self):
        """Gets the place_id of this GoogleCloudRetailV2betaLocalInventory.

        The place ID for the current set of inventory information.

        :return: The place_id of this GoogleCloudRetailV2betaLocalInventory.
        :rtype: str
        """
        return self._place_id

    @place_id.setter
    def place_id(self, place_id):
        """Sets the place_id of this GoogleCloudRetailV2betaLocalInventory.

        The place ID for the current set of inventory information.

        :param place_id: The place_id of this GoogleCloudRetailV2betaLocalInventory.
        :type place_id: str
        """

        self._place_id = place_id

    @property
    def price_info(self):
        """Gets the price_info of this GoogleCloudRetailV2betaLocalInventory.


        :return: The price_info of this GoogleCloudRetailV2betaLocalInventory.
        :rtype: GoogleCloudRetailV2betaPriceInfo
        """
        return self._price_info

    @price_info.setter
    def price_info(self, price_info):
        """Sets the price_info of this GoogleCloudRetailV2betaLocalInventory.


        :param price_info: The price_info of this GoogleCloudRetailV2betaLocalInventory.
        :type price_info: GoogleCloudRetailV2betaPriceInfo
        """

        self._price_info = price_info
