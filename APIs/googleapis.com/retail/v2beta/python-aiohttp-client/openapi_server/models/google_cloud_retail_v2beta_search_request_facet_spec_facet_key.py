# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_retail_v2beta_interval import GoogleCloudRetailV2betaInterval
from openapi_server import util


class GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, case_insensitive: bool=None, contains: List[str]=None, intervals: List[GoogleCloudRetailV2betaInterval]=None, key: str=None, order_by: str=None, prefixes: List[str]=None, query: str=None, restricted_values: List[str]=None, return_min_max: bool=None):
        """GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey - a model defined in OpenAPI

        :param case_insensitive: The case_insensitive of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :param contains: The contains of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :param intervals: The intervals of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :param key: The key of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :param order_by: The order_by of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :param prefixes: The prefixes of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :param query: The query of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :param restricted_values: The restricted_values of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :param return_min_max: The return_min_max of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        """
        self.openapi_types = {
            'case_insensitive': bool,
            'contains': List[str],
            'intervals': List[GoogleCloudRetailV2betaInterval],
            'key': str,
            'order_by': str,
            'prefixes': List[str],
            'query': str,
            'restricted_values': List[str],
            'return_min_max': bool
        }

        self.attribute_map = {
            'case_insensitive': 'caseInsensitive',
            'contains': 'contains',
            'intervals': 'intervals',
            'key': 'key',
            'order_by': 'orderBy',
            'prefixes': 'prefixes',
            'query': 'query',
            'restricted_values': 'restrictedValues',
            'return_min_max': 'returnMinMax'
        }

        self._case_insensitive = case_insensitive
        self._contains = contains
        self._intervals = intervals
        self._key = key
        self._order_by = order_by
        self._prefixes = prefixes
        self._query = query
        self._restricted_values = restricted_values
        self._return_min_max = return_min_max

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def case_insensitive(self):
        """Gets the case_insensitive of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.

        True to make facet keys case insensitive when getting faceting values with prefixes or contains; false otherwise.

        :return: The case_insensitive of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :rtype: bool
        """
        return self._case_insensitive

    @case_insensitive.setter
    def case_insensitive(self, case_insensitive):
        """Sets the case_insensitive of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.

        True to make facet keys case insensitive when getting faceting values with prefixes or contains; false otherwise.

        :param case_insensitive: The case_insensitive of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :type case_insensitive: bool
        """

        self._case_insensitive = case_insensitive

    @property
    def contains(self):
        """Gets the contains of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.

        Only get facet values that contains the given strings. For example, suppose \"categories\" has three values \"Women > Shoe\", \"Women > Dress\" and \"Men > Shoe\". If set \"contains\" to \"Shoe\", the \"categories\" facet gives only \"Women > Shoe\" and \"Men > Shoe\". Only supported on textual fields. Maximum is 10.

        :return: The contains of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :rtype: List[str]
        """
        return self._contains

    @contains.setter
    def contains(self, contains):
        """Sets the contains of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.

        Only get facet values that contains the given strings. For example, suppose \"categories\" has three values \"Women > Shoe\", \"Women > Dress\" and \"Men > Shoe\". If set \"contains\" to \"Shoe\", the \"categories\" facet gives only \"Women > Shoe\" and \"Men > Shoe\". Only supported on textual fields. Maximum is 10.

        :param contains: The contains of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :type contains: List[str]
        """

        self._contains = contains

    @property
    def intervals(self):
        """Gets the intervals of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.

        Set only if values should be bucketized into intervals. Must be set for facets with numerical values. Must not be set for facet with text values. Maximum number of intervals is 40. For all numerical facet keys that appear in the list of products from the catalog, the percentiles 0, 10, 30, 50, 70, 90, and 100 are computed from their distribution weekly. If the model assigns a high score to a numerical facet key and its intervals are not specified in the search request, these percentiles become the bounds for its intervals and are returned in the response. If the facet key intervals are specified in the request, then the specified intervals are returned instead.

        :return: The intervals of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :rtype: List[GoogleCloudRetailV2betaInterval]
        """
        return self._intervals

    @intervals.setter
    def intervals(self, intervals):
        """Sets the intervals of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.

        Set only if values should be bucketized into intervals. Must be set for facets with numerical values. Must not be set for facet with text values. Maximum number of intervals is 40. For all numerical facet keys that appear in the list of products from the catalog, the percentiles 0, 10, 30, 50, 70, 90, and 100 are computed from their distribution weekly. If the model assigns a high score to a numerical facet key and its intervals are not specified in the search request, these percentiles become the bounds for its intervals and are returned in the response. If the facet key intervals are specified in the request, then the specified intervals are returned instead.

        :param intervals: The intervals of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :type intervals: List[GoogleCloudRetailV2betaInterval]
        """

        self._intervals = intervals

    @property
    def key(self):
        """Gets the key of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.

        Required. Supported textual and numerical facet keys in Product object, over which the facet values are computed. Facet key is case-sensitive. Allowed facet keys when FacetKey.query is not specified: * textual_field = * \"brands\" * \"categories\" * \"genders\" * \"ageGroups\" * \"availability\" * \"colorFamilies\" * \"colors\" * \"sizes\" * \"materials\" * \"patterns\" * \"conditions\" * \"attributes.key\" * \"pickupInStore\" * \"shipToStore\" * \"sameDayDelivery\" * \"nextDayDelivery\" * \"customFulfillment1\" * \"customFulfillment2\" * \"customFulfillment3\" * \"customFulfillment4\" * \"customFulfillment5\" * \"inventory(place_id,attributes.key)\" * numerical_field = * \"price\" * \"discount\" * \"rating\" * \"ratingCount\" * \"attributes.key\" * \"inventory(place_id,price)\" * \"inventory(place_id,original_price)\" * \"inventory(place_id,attributes.key)\"

        :return: The key of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.

        Required. Supported textual and numerical facet keys in Product object, over which the facet values are computed. Facet key is case-sensitive. Allowed facet keys when FacetKey.query is not specified: * textual_field = * \"brands\" * \"categories\" * \"genders\" * \"ageGroups\" * \"availability\" * \"colorFamilies\" * \"colors\" * \"sizes\" * \"materials\" * \"patterns\" * \"conditions\" * \"attributes.key\" * \"pickupInStore\" * \"shipToStore\" * \"sameDayDelivery\" * \"nextDayDelivery\" * \"customFulfillment1\" * \"customFulfillment2\" * \"customFulfillment3\" * \"customFulfillment4\" * \"customFulfillment5\" * \"inventory(place_id,attributes.key)\" * numerical_field = * \"price\" * \"discount\" * \"rating\" * \"ratingCount\" * \"attributes.key\" * \"inventory(place_id,price)\" * \"inventory(place_id,original_price)\" * \"inventory(place_id,attributes.key)\"

        :param key: The key of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :type key: str
        """

        self._key = key

    @property
    def order_by(self):
        """Gets the order_by of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.

        The order in which SearchResponse.Facet.values are returned. Allowed values are: * \"count desc\", which means order by SearchResponse.Facet.values.count descending. * \"value desc\", which means order by SearchResponse.Facet.values.value descending. Only applies to textual facets. If not set, textual values are sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical intervals are sorted in the order given by FacetSpec.FacetKey.intervals; FulfillmentInfo.place_ids are sorted in the order given by FacetSpec.FacetKey.restricted_values.

        :return: The order_by of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :rtype: str
        """
        return self._order_by

    @order_by.setter
    def order_by(self, order_by):
        """Sets the order_by of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.

        The order in which SearchResponse.Facet.values are returned. Allowed values are: * \"count desc\", which means order by SearchResponse.Facet.values.count descending. * \"value desc\", which means order by SearchResponse.Facet.values.value descending. Only applies to textual facets. If not set, textual values are sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical intervals are sorted in the order given by FacetSpec.FacetKey.intervals; FulfillmentInfo.place_ids are sorted in the order given by FacetSpec.FacetKey.restricted_values.

        :param order_by: The order_by of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :type order_by: str
        """

        self._order_by = order_by

    @property
    def prefixes(self):
        """Gets the prefixes of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.

        Only get facet values that start with the given string prefix. For example, suppose \"categories\" has three values \"Women > Shoe\", \"Women > Dress\" and \"Men > Shoe\". If set \"prefixes\" to \"Women\", the \"categories\" facet gives only \"Women > Shoe\" and \"Women > Dress\". Only supported on textual fields. Maximum is 10.

        :return: The prefixes of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :rtype: List[str]
        """
        return self._prefixes

    @prefixes.setter
    def prefixes(self, prefixes):
        """Sets the prefixes of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.

        Only get facet values that start with the given string prefix. For example, suppose \"categories\" has three values \"Women > Shoe\", \"Women > Dress\" and \"Men > Shoe\". If set \"prefixes\" to \"Women\", the \"categories\" facet gives only \"Women > Shoe\" and \"Women > Dress\". Only supported on textual fields. Maximum is 10.

        :param prefixes: The prefixes of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :type prefixes: List[str]
        """

        self._prefixes = prefixes

    @property
    def query(self):
        """Gets the query of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.

        The query that is used to compute facet for the given facet key. When provided, it overrides the default behavior of facet computation. The query syntax is the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Notice that there is no limitation on FacetKey.key when query is specified. In the response, SearchResponse.Facet.values.value is always \"1\" and SearchResponse.Facet.values.count is the number of results that match the query. For example, you can set a customized facet for \"shipToStore\", where FacetKey.key is \"customizedShipToStore\", and FacetKey.query is \"availability: ANY(\\\"IN_STOCK\\\") AND shipToStore: ANY(\\\"123\\\")\". Then the facet counts the products that are both in stock and ship to store \"123\".

        :return: The query of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :rtype: str
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.

        The query that is used to compute facet for the given facet key. When provided, it overrides the default behavior of facet computation. The query syntax is the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Notice that there is no limitation on FacetKey.key when query is specified. In the response, SearchResponse.Facet.values.value is always \"1\" and SearchResponse.Facet.values.count is the number of results that match the query. For example, you can set a customized facet for \"shipToStore\", where FacetKey.key is \"customizedShipToStore\", and FacetKey.query is \"availability: ANY(\\\"IN_STOCK\\\") AND shipToStore: ANY(\\\"123\\\")\". Then the facet counts the products that are both in stock and ship to store \"123\".

        :param query: The query of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :type query: str
        """

        self._query = query

    @property
    def restricted_values(self):
        """Gets the restricted_values of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.

        Only get facet for the given restricted values. For example, when using \"pickupInStore\" as key and set restricted values to [\"store123\", \"store456\"], only facets for \"store123\" and \"store456\" are returned. Only supported on predefined textual fields, custom textual attributes and fulfillments. Maximum is 20. Must be set for the fulfillment facet keys: * pickupInStore * shipToStore * sameDayDelivery * nextDayDelivery * customFulfillment1 * customFulfillment2 * customFulfillment3 * customFulfillment4 * customFulfillment5

        :return: The restricted_values of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :rtype: List[str]
        """
        return self._restricted_values

    @restricted_values.setter
    def restricted_values(self, restricted_values):
        """Sets the restricted_values of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.

        Only get facet for the given restricted values. For example, when using \"pickupInStore\" as key and set restricted values to [\"store123\", \"store456\"], only facets for \"store123\" and \"store456\" are returned. Only supported on predefined textual fields, custom textual attributes and fulfillments. Maximum is 20. Must be set for the fulfillment facet keys: * pickupInStore * shipToStore * sameDayDelivery * nextDayDelivery * customFulfillment1 * customFulfillment2 * customFulfillment3 * customFulfillment4 * customFulfillment5

        :param restricted_values: The restricted_values of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :type restricted_values: List[str]
        """

        self._restricted_values = restricted_values

    @property
    def return_min_max(self):
        """Gets the return_min_max of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.

        Returns the min and max value for each numerical facet intervals. Ignored for textual facets.

        :return: The return_min_max of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :rtype: bool
        """
        return self._return_min_max

    @return_min_max.setter
    def return_min_max(self, return_min_max):
        """Sets the return_min_max of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.

        Returns the min and max value for each numerical facet intervals. Ignored for textual facets.

        :param return_min_max: The return_min_max of this GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey.
        :type return_min_max: bool
        """

        self._return_min_max = return_min_max
