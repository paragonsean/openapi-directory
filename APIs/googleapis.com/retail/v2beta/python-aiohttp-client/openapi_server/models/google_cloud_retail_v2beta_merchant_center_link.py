# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_retail_v2beta_merchant_center_feed_filter import GoogleCloudRetailV2betaMerchantCenterFeedFilter
from openapi_server import util


class GoogleCloudRetailV2betaMerchantCenterLink(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, branch_id: str=None, destinations: List[str]=None, feeds: List[GoogleCloudRetailV2betaMerchantCenterFeedFilter]=None, language_code: str=None, merchant_center_account_id: str=None, region_code: str=None):
        """GoogleCloudRetailV2betaMerchantCenterLink - a model defined in OpenAPI

        :param branch_id: The branch_id of this GoogleCloudRetailV2betaMerchantCenterLink.
        :param destinations: The destinations of this GoogleCloudRetailV2betaMerchantCenterLink.
        :param feeds: The feeds of this GoogleCloudRetailV2betaMerchantCenterLink.
        :param language_code: The language_code of this GoogleCloudRetailV2betaMerchantCenterLink.
        :param merchant_center_account_id: The merchant_center_account_id of this GoogleCloudRetailV2betaMerchantCenterLink.
        :param region_code: The region_code of this GoogleCloudRetailV2betaMerchantCenterLink.
        """
        self.openapi_types = {
            'branch_id': str,
            'destinations': List[str],
            'feeds': List[GoogleCloudRetailV2betaMerchantCenterFeedFilter],
            'language_code': str,
            'merchant_center_account_id': str,
            'region_code': str
        }

        self.attribute_map = {
            'branch_id': 'branchId',
            'destinations': 'destinations',
            'feeds': 'feeds',
            'language_code': 'languageCode',
            'merchant_center_account_id': 'merchantCenterAccountId',
            'region_code': 'regionCode'
        }

        self._branch_id = branch_id
        self._destinations = destinations
        self._feeds = feeds
        self._language_code = language_code
        self._merchant_center_account_id = merchant_center_account_id
        self._region_code = region_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRetailV2betaMerchantCenterLink':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRetailV2betaMerchantCenterLink of this GoogleCloudRetailV2betaMerchantCenterLink.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def branch_id(self):
        """Gets the branch_id of this GoogleCloudRetailV2betaMerchantCenterLink.

        The branch ID (e.g. 0/1/2) within this catalog that products from merchant_center_account_id are streamed to. When updating this field, an empty value will use the currently configured default branch. However, changing the default branch later on won't change the linked branch here. A single branch ID can only have one linked Merchant Center account ID.

        :return: The branch_id of this GoogleCloudRetailV2betaMerchantCenterLink.
        :rtype: str
        """
        return self._branch_id

    @branch_id.setter
    def branch_id(self, branch_id):
        """Sets the branch_id of this GoogleCloudRetailV2betaMerchantCenterLink.

        The branch ID (e.g. 0/1/2) within this catalog that products from merchant_center_account_id are streamed to. When updating this field, an empty value will use the currently configured default branch. However, changing the default branch later on won't change the linked branch here. A single branch ID can only have one linked Merchant Center account ID.

        :param branch_id: The branch_id of this GoogleCloudRetailV2betaMerchantCenterLink.
        :type branch_id: str
        """

        self._branch_id = branch_id

    @property
    def destinations(self):
        """Gets the destinations of this GoogleCloudRetailV2betaMerchantCenterLink.

        String representing the destination to import for, all if left empty. List of possible values is given in [Included destination](https://support.google.com/merchants/answer/7501026). List of allowed string values: \"Shopping_ads\", \"Buy_on_google_listings\", \"Display_ads\", \"Local_inventory _ads\", \"Free_listings\", \"Free_local_listings\" NOTE: The string values are case sensitive.

        :return: The destinations of this GoogleCloudRetailV2betaMerchantCenterLink.
        :rtype: List[str]
        """
        return self._destinations

    @destinations.setter
    def destinations(self, destinations):
        """Sets the destinations of this GoogleCloudRetailV2betaMerchantCenterLink.

        String representing the destination to import for, all if left empty. List of possible values is given in [Included destination](https://support.google.com/merchants/answer/7501026). List of allowed string values: \"Shopping_ads\", \"Buy_on_google_listings\", \"Display_ads\", \"Local_inventory _ads\", \"Free_listings\", \"Free_local_listings\" NOTE: The string values are case sensitive.

        :param destinations: The destinations of this GoogleCloudRetailV2betaMerchantCenterLink.
        :type destinations: List[str]
        """

        self._destinations = destinations

    @property
    def feeds(self):
        """Gets the feeds of this GoogleCloudRetailV2betaMerchantCenterLink.

        Criteria for the Merchant Center feeds to be ingested via the link. All offers will be ingested if the list is empty. Otherwise the offers will be ingested from selected feeds.

        :return: The feeds of this GoogleCloudRetailV2betaMerchantCenterLink.
        :rtype: List[GoogleCloudRetailV2betaMerchantCenterFeedFilter]
        """
        return self._feeds

    @feeds.setter
    def feeds(self, feeds):
        """Sets the feeds of this GoogleCloudRetailV2betaMerchantCenterLink.

        Criteria for the Merchant Center feeds to be ingested via the link. All offers will be ingested if the list is empty. Otherwise the offers will be ingested from selected feeds.

        :param feeds: The feeds of this GoogleCloudRetailV2betaMerchantCenterLink.
        :type feeds: List[GoogleCloudRetailV2betaMerchantCenterFeedFilter]
        """

        self._feeds = feeds

    @property
    def language_code(self):
        """Gets the language_code of this GoogleCloudRetailV2betaMerchantCenterLink.

        Language of the title/description and other string attributes. Use language tags defined by [BCP 47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). ISO 639-1. This specifies the language of offers in Merchant Center that will be accepted. If empty no language filtering will be performed. Example value: `en`.

        :return: The language_code of this GoogleCloudRetailV2betaMerchantCenterLink.
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this GoogleCloudRetailV2betaMerchantCenterLink.

        Language of the title/description and other string attributes. Use language tags defined by [BCP 47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). ISO 639-1. This specifies the language of offers in Merchant Center that will be accepted. If empty no language filtering will be performed. Example value: `en`.

        :param language_code: The language_code of this GoogleCloudRetailV2betaMerchantCenterLink.
        :type language_code: str
        """

        self._language_code = language_code

    @property
    def merchant_center_account_id(self):
        """Gets the merchant_center_account_id of this GoogleCloudRetailV2betaMerchantCenterLink.

        Required. The linked [Merchant Center account ID](https://developers.google.com/shopping-content/guides/accountstatuses). The account must be a standalone account or a sub-account of a MCA.

        :return: The merchant_center_account_id of this GoogleCloudRetailV2betaMerchantCenterLink.
        :rtype: str
        """
        return self._merchant_center_account_id

    @merchant_center_account_id.setter
    def merchant_center_account_id(self, merchant_center_account_id):
        """Sets the merchant_center_account_id of this GoogleCloudRetailV2betaMerchantCenterLink.

        Required. The linked [Merchant Center account ID](https://developers.google.com/shopping-content/guides/accountstatuses). The account must be a standalone account or a sub-account of a MCA.

        :param merchant_center_account_id: The merchant_center_account_id of this GoogleCloudRetailV2betaMerchantCenterLink.
        :type merchant_center_account_id: str
        """

        self._merchant_center_account_id = merchant_center_account_id

    @property
    def region_code(self):
        """Gets the region_code of this GoogleCloudRetailV2betaMerchantCenterLink.

        Region code of offers to accept. 2-letter Uppercase ISO 3166-1 alpha-2 code. List of values can be found [here](https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry) under the `region` tag. If left blank no region filtering will be performed. Example value: `US`.

        :return: The region_code of this GoogleCloudRetailV2betaMerchantCenterLink.
        :rtype: str
        """
        return self._region_code

    @region_code.setter
    def region_code(self, region_code):
        """Sets the region_code of this GoogleCloudRetailV2betaMerchantCenterLink.

        Region code of offers to accept. 2-letter Uppercase ISO 3166-1 alpha-2 code. List of values can be found [here](https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry) under the `region` tag. If left blank no region filtering will be performed. Example value: `US`.

        :param region_code: The region_code of this GoogleCloudRetailV2betaMerchantCenterLink.
        :type region_code: str
        """

        self._region_code = region_code
