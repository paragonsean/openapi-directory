# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudRetailV2betaInterval(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exclusive_maximum: float=None, exclusive_minimum: float=None, maximum: float=None, minimum: float=None):
        """GoogleCloudRetailV2betaInterval - a model defined in OpenAPI

        :param exclusive_maximum: The exclusive_maximum of this GoogleCloudRetailV2betaInterval.
        :param exclusive_minimum: The exclusive_minimum of this GoogleCloudRetailV2betaInterval.
        :param maximum: The maximum of this GoogleCloudRetailV2betaInterval.
        :param minimum: The minimum of this GoogleCloudRetailV2betaInterval.
        """
        self.openapi_types = {
            'exclusive_maximum': float,
            'exclusive_minimum': float,
            'maximum': float,
            'minimum': float
        }

        self.attribute_map = {
            'exclusive_maximum': 'exclusiveMaximum',
            'exclusive_minimum': 'exclusiveMinimum',
            'maximum': 'maximum',
            'minimum': 'minimum'
        }

        self._exclusive_maximum = exclusive_maximum
        self._exclusive_minimum = exclusive_minimum
        self._maximum = maximum
        self._minimum = minimum

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRetailV2betaInterval':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRetailV2betaInterval of this GoogleCloudRetailV2betaInterval.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exclusive_maximum(self):
        """Gets the exclusive_maximum of this GoogleCloudRetailV2betaInterval.

        Exclusive upper bound.

        :return: The exclusive_maximum of this GoogleCloudRetailV2betaInterval.
        :rtype: float
        """
        return self._exclusive_maximum

    @exclusive_maximum.setter
    def exclusive_maximum(self, exclusive_maximum):
        """Sets the exclusive_maximum of this GoogleCloudRetailV2betaInterval.

        Exclusive upper bound.

        :param exclusive_maximum: The exclusive_maximum of this GoogleCloudRetailV2betaInterval.
        :type exclusive_maximum: float
        """

        self._exclusive_maximum = exclusive_maximum

    @property
    def exclusive_minimum(self):
        """Gets the exclusive_minimum of this GoogleCloudRetailV2betaInterval.

        Exclusive lower bound.

        :return: The exclusive_minimum of this GoogleCloudRetailV2betaInterval.
        :rtype: float
        """
        return self._exclusive_minimum

    @exclusive_minimum.setter
    def exclusive_minimum(self, exclusive_minimum):
        """Sets the exclusive_minimum of this GoogleCloudRetailV2betaInterval.

        Exclusive lower bound.

        :param exclusive_minimum: The exclusive_minimum of this GoogleCloudRetailV2betaInterval.
        :type exclusive_minimum: float
        """

        self._exclusive_minimum = exclusive_minimum

    @property
    def maximum(self):
        """Gets the maximum of this GoogleCloudRetailV2betaInterval.

        Inclusive upper bound.

        :return: The maximum of this GoogleCloudRetailV2betaInterval.
        :rtype: float
        """
        return self._maximum

    @maximum.setter
    def maximum(self, maximum):
        """Sets the maximum of this GoogleCloudRetailV2betaInterval.

        Inclusive upper bound.

        :param maximum: The maximum of this GoogleCloudRetailV2betaInterval.
        :type maximum: float
        """

        self._maximum = maximum

    @property
    def minimum(self):
        """Gets the minimum of this GoogleCloudRetailV2betaInterval.

        Inclusive lower bound.

        :return: The minimum of this GoogleCloudRetailV2betaInterval.
        :rtype: float
        """
        return self._minimum

    @minimum.setter
    def minimum(self, minimum):
        """Sets the minimum of this GoogleCloudRetailV2betaInterval.

        Inclusive lower bound.

        :param minimum: The minimum of this GoogleCloudRetailV2betaInterval.
        :type minimum: float
        """

        self._minimum = minimum
