# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_retail_v2beta_product import GoogleCloudRetailV2betaProduct
from openapi_server import util


class GoogleCloudRetailV2betaSetInventoryRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_missing: bool=None, inventory: GoogleCloudRetailV2betaProduct=None, set_mask: str=None, set_time: str=None):
        """GoogleCloudRetailV2betaSetInventoryRequest - a model defined in OpenAPI

        :param allow_missing: The allow_missing of this GoogleCloudRetailV2betaSetInventoryRequest.
        :param inventory: The inventory of this GoogleCloudRetailV2betaSetInventoryRequest.
        :param set_mask: The set_mask of this GoogleCloudRetailV2betaSetInventoryRequest.
        :param set_time: The set_time of this GoogleCloudRetailV2betaSetInventoryRequest.
        """
        self.openapi_types = {
            'allow_missing': bool,
            'inventory': GoogleCloudRetailV2betaProduct,
            'set_mask': str,
            'set_time': str
        }

        self.attribute_map = {
            'allow_missing': 'allowMissing',
            'inventory': 'inventory',
            'set_mask': 'setMask',
            'set_time': 'setTime'
        }

        self._allow_missing = allow_missing
        self._inventory = inventory
        self._set_mask = set_mask
        self._set_time = set_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRetailV2betaSetInventoryRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRetailV2betaSetInventoryRequest of this GoogleCloudRetailV2betaSetInventoryRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_missing(self):
        """Gets the allow_missing of this GoogleCloudRetailV2betaSetInventoryRequest.

        If set to true, and the Product with name Product.name is not found, the inventory update will still be processed and retained for at most 1 day until the Product is created. If set to false, a NOT_FOUND error is returned if the Product is not found.

        :return: The allow_missing of this GoogleCloudRetailV2betaSetInventoryRequest.
        :rtype: bool
        """
        return self._allow_missing

    @allow_missing.setter
    def allow_missing(self, allow_missing):
        """Sets the allow_missing of this GoogleCloudRetailV2betaSetInventoryRequest.

        If set to true, and the Product with name Product.name is not found, the inventory update will still be processed and retained for at most 1 day until the Product is created. If set to false, a NOT_FOUND error is returned if the Product is not found.

        :param allow_missing: The allow_missing of this GoogleCloudRetailV2betaSetInventoryRequest.
        :type allow_missing: bool
        """

        self._allow_missing = allow_missing

    @property
    def inventory(self):
        """Gets the inventory of this GoogleCloudRetailV2betaSetInventoryRequest.


        :return: The inventory of this GoogleCloudRetailV2betaSetInventoryRequest.
        :rtype: GoogleCloudRetailV2betaProduct
        """
        return self._inventory

    @inventory.setter
    def inventory(self, inventory):
        """Sets the inventory of this GoogleCloudRetailV2betaSetInventoryRequest.


        :param inventory: The inventory of this GoogleCloudRetailV2betaSetInventoryRequest.
        :type inventory: GoogleCloudRetailV2betaProduct
        """

        self._inventory = inventory

    @property
    def set_mask(self):
        """Gets the set_mask of this GoogleCloudRetailV2betaSetInventoryRequest.

        Indicates which inventory fields in the provided Product to update. At least one field must be provided. If an unsupported or unknown field is provided, an INVALID_ARGUMENT error is returned and the entire update will be ignored.

        :return: The set_mask of this GoogleCloudRetailV2betaSetInventoryRequest.
        :rtype: str
        """
        return self._set_mask

    @set_mask.setter
    def set_mask(self, set_mask):
        """Sets the set_mask of this GoogleCloudRetailV2betaSetInventoryRequest.

        Indicates which inventory fields in the provided Product to update. At least one field must be provided. If an unsupported or unknown field is provided, an INVALID_ARGUMENT error is returned and the entire update will be ignored.

        :param set_mask: The set_mask of this GoogleCloudRetailV2betaSetInventoryRequest.
        :type set_mask: str
        """

        self._set_mask = set_mask

    @property
    def set_time(self):
        """Gets the set_time of this GoogleCloudRetailV2betaSetInventoryRequest.

        The time when the request is issued, used to prevent out-of-order updates on inventory fields with the last update time recorded. If not provided, the internal system time will be used.

        :return: The set_time of this GoogleCloudRetailV2betaSetInventoryRequest.
        :rtype: str
        """
        return self._set_time

    @set_time.setter
    def set_time(self, set_time):
        """Sets the set_time of this GoogleCloudRetailV2betaSetInventoryRequest.

        The time when the request is issued, used to prevent out-of-order updates on inventory fields with the last update time recorded. If not provided, the internal system time will be used.

        :param set_time: The set_time of this GoogleCloudRetailV2betaSetInventoryRequest.
        :type set_time: str
        """

        self._set_time = set_time
