# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudRetailV2betaRuleReplacementAction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, query_terms: List[str]=None, replacement_term: str=None, term: str=None):
        """GoogleCloudRetailV2betaRuleReplacementAction - a model defined in OpenAPI

        :param query_terms: The query_terms of this GoogleCloudRetailV2betaRuleReplacementAction.
        :param replacement_term: The replacement_term of this GoogleCloudRetailV2betaRuleReplacementAction.
        :param term: The term of this GoogleCloudRetailV2betaRuleReplacementAction.
        """
        self.openapi_types = {
            'query_terms': List[str],
            'replacement_term': str,
            'term': str
        }

        self.attribute_map = {
            'query_terms': 'queryTerms',
            'replacement_term': 'replacementTerm',
            'term': 'term'
        }

        self._query_terms = query_terms
        self._replacement_term = replacement_term
        self._term = term

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRetailV2betaRuleReplacementAction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRetailV2betaRuleReplacementAction of this GoogleCloudRetailV2betaRuleReplacementAction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def query_terms(self):
        """Gets the query_terms of this GoogleCloudRetailV2betaRuleReplacementAction.

        Terms from the search query. Will be replaced by replacement term. Can specify up to 100 terms.

        :return: The query_terms of this GoogleCloudRetailV2betaRuleReplacementAction.
        :rtype: List[str]
        """
        return self._query_terms

    @query_terms.setter
    def query_terms(self, query_terms):
        """Sets the query_terms of this GoogleCloudRetailV2betaRuleReplacementAction.

        Terms from the search query. Will be replaced by replacement term. Can specify up to 100 terms.

        :param query_terms: The query_terms of this GoogleCloudRetailV2betaRuleReplacementAction.
        :type query_terms: List[str]
        """

        self._query_terms = query_terms

    @property
    def replacement_term(self):
        """Gets the replacement_term of this GoogleCloudRetailV2betaRuleReplacementAction.

        Term that will be used for replacement.

        :return: The replacement_term of this GoogleCloudRetailV2betaRuleReplacementAction.
        :rtype: str
        """
        return self._replacement_term

    @replacement_term.setter
    def replacement_term(self, replacement_term):
        """Sets the replacement_term of this GoogleCloudRetailV2betaRuleReplacementAction.

        Term that will be used for replacement.

        :param replacement_term: The replacement_term of this GoogleCloudRetailV2betaRuleReplacementAction.
        :type replacement_term: str
        """

        self._replacement_term = replacement_term

    @property
    def term(self):
        """Gets the term of this GoogleCloudRetailV2betaRuleReplacementAction.

        Will be [deprecated = true] post migration;

        :return: The term of this GoogleCloudRetailV2betaRuleReplacementAction.
        :rtype: str
        """
        return self._term

    @term.setter
    def term(self, term):
        """Sets the term of this GoogleCloudRetailV2betaRuleReplacementAction.

        Will be [deprecated = true] post migration;

        :param term: The term of this GoogleCloudRetailV2betaRuleReplacementAction.
        :type term: str
        """

        self._term = term
