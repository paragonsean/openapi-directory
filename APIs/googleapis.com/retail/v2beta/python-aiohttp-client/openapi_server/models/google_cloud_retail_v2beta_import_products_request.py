# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_retail_v2beta_import_errors_config import GoogleCloudRetailV2betaImportErrorsConfig
from openapi_server.models.google_cloud_retail_v2beta_product_input_config import GoogleCloudRetailV2betaProductInputConfig
from openapi_server import util


class GoogleCloudRetailV2betaImportProductsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, errors_config: GoogleCloudRetailV2betaImportErrorsConfig=None, input_config: GoogleCloudRetailV2betaProductInputConfig=None, notification_pubsub_topic: str=None, reconciliation_mode: str=None, request_id: str=None, update_mask: str=None):
        """GoogleCloudRetailV2betaImportProductsRequest - a model defined in OpenAPI

        :param errors_config: The errors_config of this GoogleCloudRetailV2betaImportProductsRequest.
        :param input_config: The input_config of this GoogleCloudRetailV2betaImportProductsRequest.
        :param notification_pubsub_topic: The notification_pubsub_topic of this GoogleCloudRetailV2betaImportProductsRequest.
        :param reconciliation_mode: The reconciliation_mode of this GoogleCloudRetailV2betaImportProductsRequest.
        :param request_id: The request_id of this GoogleCloudRetailV2betaImportProductsRequest.
        :param update_mask: The update_mask of this GoogleCloudRetailV2betaImportProductsRequest.
        """
        self.openapi_types = {
            'errors_config': GoogleCloudRetailV2betaImportErrorsConfig,
            'input_config': GoogleCloudRetailV2betaProductInputConfig,
            'notification_pubsub_topic': str,
            'reconciliation_mode': str,
            'request_id': str,
            'update_mask': str
        }

        self.attribute_map = {
            'errors_config': 'errorsConfig',
            'input_config': 'inputConfig',
            'notification_pubsub_topic': 'notificationPubsubTopic',
            'reconciliation_mode': 'reconciliationMode',
            'request_id': 'requestId',
            'update_mask': 'updateMask'
        }

        self._errors_config = errors_config
        self._input_config = input_config
        self._notification_pubsub_topic = notification_pubsub_topic
        self._reconciliation_mode = reconciliation_mode
        self._request_id = request_id
        self._update_mask = update_mask

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRetailV2betaImportProductsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRetailV2betaImportProductsRequest of this GoogleCloudRetailV2betaImportProductsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def errors_config(self):
        """Gets the errors_config of this GoogleCloudRetailV2betaImportProductsRequest.


        :return: The errors_config of this GoogleCloudRetailV2betaImportProductsRequest.
        :rtype: GoogleCloudRetailV2betaImportErrorsConfig
        """
        return self._errors_config

    @errors_config.setter
    def errors_config(self, errors_config):
        """Sets the errors_config of this GoogleCloudRetailV2betaImportProductsRequest.


        :param errors_config: The errors_config of this GoogleCloudRetailV2betaImportProductsRequest.
        :type errors_config: GoogleCloudRetailV2betaImportErrorsConfig
        """

        self._errors_config = errors_config

    @property
    def input_config(self):
        """Gets the input_config of this GoogleCloudRetailV2betaImportProductsRequest.


        :return: The input_config of this GoogleCloudRetailV2betaImportProductsRequest.
        :rtype: GoogleCloudRetailV2betaProductInputConfig
        """
        return self._input_config

    @input_config.setter
    def input_config(self, input_config):
        """Sets the input_config of this GoogleCloudRetailV2betaImportProductsRequest.


        :param input_config: The input_config of this GoogleCloudRetailV2betaImportProductsRequest.
        :type input_config: GoogleCloudRetailV2betaProductInputConfig
        """

        self._input_config = input_config

    @property
    def notification_pubsub_topic(self):
        """Gets the notification_pubsub_topic of this GoogleCloudRetailV2betaImportProductsRequest.

        Full Pub/Sub topic name for receiving notification. If this field is set, when the import is finished, a notification is sent to specified Pub/Sub topic. The message data is JSON string of a Operation. Format of the Pub/Sub topic is `projects/{project}/topics/{topic}`. It has to be within the same project as ImportProductsRequest.parent. Make sure that both `cloud-retail-customer-data-access@system.gserviceaccount.com` and `service-@gcp-sa-retail.iam.gserviceaccount.com` have the `pubsub.topics.publish` IAM permission on the topic. Only supported when ImportProductsRequest.reconciliation_mode is set to `FULL`.

        :return: The notification_pubsub_topic of this GoogleCloudRetailV2betaImportProductsRequest.
        :rtype: str
        """
        return self._notification_pubsub_topic

    @notification_pubsub_topic.setter
    def notification_pubsub_topic(self, notification_pubsub_topic):
        """Sets the notification_pubsub_topic of this GoogleCloudRetailV2betaImportProductsRequest.

        Full Pub/Sub topic name for receiving notification. If this field is set, when the import is finished, a notification is sent to specified Pub/Sub topic. The message data is JSON string of a Operation. Format of the Pub/Sub topic is `projects/{project}/topics/{topic}`. It has to be within the same project as ImportProductsRequest.parent. Make sure that both `cloud-retail-customer-data-access@system.gserviceaccount.com` and `service-@gcp-sa-retail.iam.gserviceaccount.com` have the `pubsub.topics.publish` IAM permission on the topic. Only supported when ImportProductsRequest.reconciliation_mode is set to `FULL`.

        :param notification_pubsub_topic: The notification_pubsub_topic of this GoogleCloudRetailV2betaImportProductsRequest.
        :type notification_pubsub_topic: str
        """

        self._notification_pubsub_topic = notification_pubsub_topic

    @property
    def reconciliation_mode(self):
        """Gets the reconciliation_mode of this GoogleCloudRetailV2betaImportProductsRequest.

        The mode of reconciliation between existing products and the products to be imported. Defaults to ReconciliationMode.INCREMENTAL.

        :return: The reconciliation_mode of this GoogleCloudRetailV2betaImportProductsRequest.
        :rtype: str
        """
        return self._reconciliation_mode

    @reconciliation_mode.setter
    def reconciliation_mode(self, reconciliation_mode):
        """Sets the reconciliation_mode of this GoogleCloudRetailV2betaImportProductsRequest.

        The mode of reconciliation between existing products and the products to be imported. Defaults to ReconciliationMode.INCREMENTAL.

        :param reconciliation_mode: The reconciliation_mode of this GoogleCloudRetailV2betaImportProductsRequest.
        :type reconciliation_mode: str
        """
        allowed_values = ["RECONCILIATION_MODE_UNSPECIFIED", "INCREMENTAL", "FULL"]  # noqa: E501
        if reconciliation_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `reconciliation_mode` ({0}), must be one of {1}"
                .format(reconciliation_mode, allowed_values)
            )

        self._reconciliation_mode = reconciliation_mode

    @property
    def request_id(self):
        """Gets the request_id of this GoogleCloudRetailV2betaImportProductsRequest.

        Deprecated. This field has no effect.

        :return: The request_id of this GoogleCloudRetailV2betaImportProductsRequest.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this GoogleCloudRetailV2betaImportProductsRequest.

        Deprecated. This field has no effect.

        :param request_id: The request_id of this GoogleCloudRetailV2betaImportProductsRequest.
        :type request_id: str
        """

        self._request_id = request_id

    @property
    def update_mask(self):
        """Gets the update_mask of this GoogleCloudRetailV2betaImportProductsRequest.

        Indicates which fields in the provided imported `products` to update. If not set, all fields are updated. If provided, only the existing product fields are updated. Missing products will not be created.

        :return: The update_mask of this GoogleCloudRetailV2betaImportProductsRequest.
        :rtype: str
        """
        return self._update_mask

    @update_mask.setter
    def update_mask(self, update_mask):
        """Sets the update_mask of this GoogleCloudRetailV2betaImportProductsRequest.

        Indicates which fields in the provided imported `products` to update. If not set, all fields are updated. If provided, only the existing product fields are updated. Missing products will not be created.

        :param update_mask: The update_mask of this GoogleCloudRetailV2betaImportProductsRequest.
        :type update_mask: str
        """

        self._update_mask = update_mask
