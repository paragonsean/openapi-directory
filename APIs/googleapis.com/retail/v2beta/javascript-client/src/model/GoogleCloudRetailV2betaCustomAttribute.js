/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudRetailV2betaCustomAttribute model module.
 * @module model/GoogleCloudRetailV2betaCustomAttribute
 * @version v2beta
 */
class GoogleCloudRetailV2betaCustomAttribute {
    /**
     * Constructs a new <code>GoogleCloudRetailV2betaCustomAttribute</code>.
     * A custom attribute that is not explicitly modeled in Product.
     * @alias module:model/GoogleCloudRetailV2betaCustomAttribute
     */
    constructor() { 
        
        GoogleCloudRetailV2betaCustomAttribute.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRetailV2betaCustomAttribute</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRetailV2betaCustomAttribute} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRetailV2betaCustomAttribute} The populated <code>GoogleCloudRetailV2betaCustomAttribute</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRetailV2betaCustomAttribute();

            if (data.hasOwnProperty('indexable')) {
                obj['indexable'] = ApiClient.convertToType(data['indexable'], 'Boolean');
            }
            if (data.hasOwnProperty('numbers')) {
                obj['numbers'] = ApiClient.convertToType(data['numbers'], ['Number']);
            }
            if (data.hasOwnProperty('searchable')) {
                obj['searchable'] = ApiClient.convertToType(data['searchable'], 'Boolean');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRetailV2betaCustomAttribute</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRetailV2betaCustomAttribute</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['numbers'])) {
            throw new Error("Expected the field `numbers` to be an array in the JSON data but got " + data['numbers']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['text'])) {
            throw new Error("Expected the field `text` to be an array in the JSON data but got " + data['text']);
        }

        return true;
    }


}



/**
 * This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are indexed, so that they can be filtered, faceted or boosted in SearchService.Search. This field is ignored in a UserEvent. See SearchRequest.filter, SearchRequest.facet_specs and SearchRequest.boost_spec for more details.
 * @member {Boolean} indexable
 */
GoogleCloudRetailV2betaCustomAttribute.prototype['indexable'] = undefined;

/**
 * The numerical values of this custom attribute. For example, `[2.3, 15.4]` when the key is \"lengths_cm\". Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.
 * @member {Array.<Number>} numbers
 */
GoogleCloudRetailV2betaCustomAttribute.prototype['numbers'] = undefined;

/**
 * This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are searchable by text queries in SearchService.Search. This field is ignored in a UserEvent. Only set if type text is set. Otherwise, a INVALID_ARGUMENT error is returned.
 * @member {Boolean} searchable
 */
GoogleCloudRetailV2betaCustomAttribute.prototype['searchable'] = undefined;

/**
 * The textual values of this custom attribute. For example, `[\"yellow\", \"green\"]` when the key is \"color\". Empty string is not allowed. Otherwise, an INVALID_ARGUMENT error is returned. Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.
 * @member {Array.<String>} text
 */
GoogleCloudRetailV2betaCustomAttribute.prototype['text'] = undefined;






export default GoogleCloudRetailV2betaCustomAttribute;

