/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudRetailV2betaCondition from './GoogleCloudRetailV2betaCondition';
import GoogleCloudRetailV2betaRuleBoostAction from './GoogleCloudRetailV2betaRuleBoostAction';
import GoogleCloudRetailV2betaRuleDoNotAssociateAction from './GoogleCloudRetailV2betaRuleDoNotAssociateAction';
import GoogleCloudRetailV2betaRuleFilterAction from './GoogleCloudRetailV2betaRuleFilterAction';
import GoogleCloudRetailV2betaRuleForceReturnFacetAction from './GoogleCloudRetailV2betaRuleForceReturnFacetAction';
import GoogleCloudRetailV2betaRuleIgnoreAction from './GoogleCloudRetailV2betaRuleIgnoreAction';
import GoogleCloudRetailV2betaRuleOnewaySynonymsAction from './GoogleCloudRetailV2betaRuleOnewaySynonymsAction';
import GoogleCloudRetailV2betaRuleRedirectAction from './GoogleCloudRetailV2betaRuleRedirectAction';
import GoogleCloudRetailV2betaRuleRemoveFacetAction from './GoogleCloudRetailV2betaRuleRemoveFacetAction';
import GoogleCloudRetailV2betaRuleReplacementAction from './GoogleCloudRetailV2betaRuleReplacementAction';
import GoogleCloudRetailV2betaRuleTwowaySynonymsAction from './GoogleCloudRetailV2betaRuleTwowaySynonymsAction';

/**
 * The GoogleCloudRetailV2betaRule model module.
 * @module model/GoogleCloudRetailV2betaRule
 * @version v2beta
 */
class GoogleCloudRetailV2betaRule {
    /**
     * Constructs a new <code>GoogleCloudRetailV2betaRule</code>.
     * A rule is a condition-action pair * A condition defines when a rule is to be triggered. * An action specifies what occurs on that trigger. Currently rules only work for controls with SOLUTION_TYPE_SEARCH.
     * @alias module:model/GoogleCloudRetailV2betaRule
     */
    constructor() { 
        
        GoogleCloudRetailV2betaRule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRetailV2betaRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRetailV2betaRule} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRetailV2betaRule} The populated <code>GoogleCloudRetailV2betaRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRetailV2betaRule();

            if (data.hasOwnProperty('boostAction')) {
                obj['boostAction'] = GoogleCloudRetailV2betaRuleBoostAction.constructFromObject(data['boostAction']);
            }
            if (data.hasOwnProperty('condition')) {
                obj['condition'] = GoogleCloudRetailV2betaCondition.constructFromObject(data['condition']);
            }
            if (data.hasOwnProperty('doNotAssociateAction')) {
                obj['doNotAssociateAction'] = GoogleCloudRetailV2betaRuleDoNotAssociateAction.constructFromObject(data['doNotAssociateAction']);
            }
            if (data.hasOwnProperty('filterAction')) {
                obj['filterAction'] = GoogleCloudRetailV2betaRuleFilterAction.constructFromObject(data['filterAction']);
            }
            if (data.hasOwnProperty('forceReturnFacetAction')) {
                obj['forceReturnFacetAction'] = GoogleCloudRetailV2betaRuleForceReturnFacetAction.constructFromObject(data['forceReturnFacetAction']);
            }
            if (data.hasOwnProperty('ignoreAction')) {
                obj['ignoreAction'] = GoogleCloudRetailV2betaRuleIgnoreAction.constructFromObject(data['ignoreAction']);
            }
            if (data.hasOwnProperty('onewaySynonymsAction')) {
                obj['onewaySynonymsAction'] = GoogleCloudRetailV2betaRuleOnewaySynonymsAction.constructFromObject(data['onewaySynonymsAction']);
            }
            if (data.hasOwnProperty('redirectAction')) {
                obj['redirectAction'] = GoogleCloudRetailV2betaRuleRedirectAction.constructFromObject(data['redirectAction']);
            }
            if (data.hasOwnProperty('removeFacetAction')) {
                obj['removeFacetAction'] = GoogleCloudRetailV2betaRuleRemoveFacetAction.constructFromObject(data['removeFacetAction']);
            }
            if (data.hasOwnProperty('replacementAction')) {
                obj['replacementAction'] = GoogleCloudRetailV2betaRuleReplacementAction.constructFromObject(data['replacementAction']);
            }
            if (data.hasOwnProperty('twowaySynonymsAction')) {
                obj['twowaySynonymsAction'] = GoogleCloudRetailV2betaRuleTwowaySynonymsAction.constructFromObject(data['twowaySynonymsAction']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRetailV2betaRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRetailV2betaRule</code>.
     */
    static validateJSON(data) {
        // validate the optional field `boostAction`
        if (data['boostAction']) { // data not null
          GoogleCloudRetailV2betaRuleBoostAction.validateJSON(data['boostAction']);
        }
        // validate the optional field `condition`
        if (data['condition']) { // data not null
          GoogleCloudRetailV2betaCondition.validateJSON(data['condition']);
        }
        // validate the optional field `doNotAssociateAction`
        if (data['doNotAssociateAction']) { // data not null
          GoogleCloudRetailV2betaRuleDoNotAssociateAction.validateJSON(data['doNotAssociateAction']);
        }
        // validate the optional field `filterAction`
        if (data['filterAction']) { // data not null
          GoogleCloudRetailV2betaRuleFilterAction.validateJSON(data['filterAction']);
        }
        // validate the optional field `forceReturnFacetAction`
        if (data['forceReturnFacetAction']) { // data not null
          GoogleCloudRetailV2betaRuleForceReturnFacetAction.validateJSON(data['forceReturnFacetAction']);
        }
        // validate the optional field `ignoreAction`
        if (data['ignoreAction']) { // data not null
          GoogleCloudRetailV2betaRuleIgnoreAction.validateJSON(data['ignoreAction']);
        }
        // validate the optional field `onewaySynonymsAction`
        if (data['onewaySynonymsAction']) { // data not null
          GoogleCloudRetailV2betaRuleOnewaySynonymsAction.validateJSON(data['onewaySynonymsAction']);
        }
        // validate the optional field `redirectAction`
        if (data['redirectAction']) { // data not null
          GoogleCloudRetailV2betaRuleRedirectAction.validateJSON(data['redirectAction']);
        }
        // validate the optional field `removeFacetAction`
        if (data['removeFacetAction']) { // data not null
          GoogleCloudRetailV2betaRuleRemoveFacetAction.validateJSON(data['removeFacetAction']);
        }
        // validate the optional field `replacementAction`
        if (data['replacementAction']) { // data not null
          GoogleCloudRetailV2betaRuleReplacementAction.validateJSON(data['replacementAction']);
        }
        // validate the optional field `twowaySynonymsAction`
        if (data['twowaySynonymsAction']) { // data not null
          GoogleCloudRetailV2betaRuleTwowaySynonymsAction.validateJSON(data['twowaySynonymsAction']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudRetailV2betaRuleBoostAction} boostAction
 */
GoogleCloudRetailV2betaRule.prototype['boostAction'] = undefined;

/**
 * @member {module:model/GoogleCloudRetailV2betaCondition} condition
 */
GoogleCloudRetailV2betaRule.prototype['condition'] = undefined;

/**
 * @member {module:model/GoogleCloudRetailV2betaRuleDoNotAssociateAction} doNotAssociateAction
 */
GoogleCloudRetailV2betaRule.prototype['doNotAssociateAction'] = undefined;

/**
 * @member {module:model/GoogleCloudRetailV2betaRuleFilterAction} filterAction
 */
GoogleCloudRetailV2betaRule.prototype['filterAction'] = undefined;

/**
 * @member {module:model/GoogleCloudRetailV2betaRuleForceReturnFacetAction} forceReturnFacetAction
 */
GoogleCloudRetailV2betaRule.prototype['forceReturnFacetAction'] = undefined;

/**
 * @member {module:model/GoogleCloudRetailV2betaRuleIgnoreAction} ignoreAction
 */
GoogleCloudRetailV2betaRule.prototype['ignoreAction'] = undefined;

/**
 * @member {module:model/GoogleCloudRetailV2betaRuleOnewaySynonymsAction} onewaySynonymsAction
 */
GoogleCloudRetailV2betaRule.prototype['onewaySynonymsAction'] = undefined;

/**
 * @member {module:model/GoogleCloudRetailV2betaRuleRedirectAction} redirectAction
 */
GoogleCloudRetailV2betaRule.prototype['redirectAction'] = undefined;

/**
 * @member {module:model/GoogleCloudRetailV2betaRuleRemoveFacetAction} removeFacetAction
 */
GoogleCloudRetailV2betaRule.prototype['removeFacetAction'] = undefined;

/**
 * @member {module:model/GoogleCloudRetailV2betaRuleReplacementAction} replacementAction
 */
GoogleCloudRetailV2betaRule.prototype['replacementAction'] = undefined;

/**
 * @member {module:model/GoogleCloudRetailV2betaRuleTwowaySynonymsAction} twowaySynonymsAction
 */
GoogleCloudRetailV2betaRule.prototype['twowaySynonymsAction'] = undefined;






export default GoogleCloudRetailV2betaRule;

