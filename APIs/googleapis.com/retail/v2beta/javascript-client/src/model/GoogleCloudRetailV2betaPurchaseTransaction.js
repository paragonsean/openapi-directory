/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudRetailV2betaPurchaseTransaction model module.
 * @module model/GoogleCloudRetailV2betaPurchaseTransaction
 * @version v2beta
 */
class GoogleCloudRetailV2betaPurchaseTransaction {
    /**
     * Constructs a new <code>GoogleCloudRetailV2betaPurchaseTransaction</code>.
     * A transaction represents the entire purchase transaction.
     * @alias module:model/GoogleCloudRetailV2betaPurchaseTransaction
     */
    constructor() { 
        
        GoogleCloudRetailV2betaPurchaseTransaction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRetailV2betaPurchaseTransaction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRetailV2betaPurchaseTransaction} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRetailV2betaPurchaseTransaction} The populated <code>GoogleCloudRetailV2betaPurchaseTransaction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRetailV2betaPurchaseTransaction();

            if (data.hasOwnProperty('cost')) {
                obj['cost'] = ApiClient.convertToType(data['cost'], 'Number');
            }
            if (data.hasOwnProperty('currencyCode')) {
                obj['currencyCode'] = ApiClient.convertToType(data['currencyCode'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('revenue')) {
                obj['revenue'] = ApiClient.convertToType(data['revenue'], 'Number');
            }
            if (data.hasOwnProperty('tax')) {
                obj['tax'] = ApiClient.convertToType(data['tax'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRetailV2betaPurchaseTransaction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRetailV2betaPurchaseTransaction</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['currencyCode'] && !(typeof data['currencyCode'] === 'string' || data['currencyCode'] instanceof String)) {
            throw new Error("Expected the field `currencyCode` to be a primitive type in the JSON string but got " + data['currencyCode']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }

        return true;
    }


}



/**
 * All the costs associated with the products. These can be manufacturing costs, shipping expenses not borne by the end user, or any other costs, such that: * Profit = revenue - tax - cost
 * @member {Number} cost
 */
GoogleCloudRetailV2betaPurchaseTransaction.prototype['cost'] = undefined;

/**
 * Required. Currency code. Use three-character ISO-4217 code.
 * @member {String} currencyCode
 */
GoogleCloudRetailV2betaPurchaseTransaction.prototype['currencyCode'] = undefined;

/**
 * The transaction ID with a length limit of 128 characters.
 * @member {String} id
 */
GoogleCloudRetailV2betaPurchaseTransaction.prototype['id'] = undefined;

/**
 * Required. Total non-zero revenue or grand total associated with the transaction. This value include shipping, tax, or other adjustments to total revenue that you want to include as part of your revenue calculations.
 * @member {Number} revenue
 */
GoogleCloudRetailV2betaPurchaseTransaction.prototype['revenue'] = undefined;

/**
 * All the taxes associated with the transaction.
 * @member {Number} tax
 */
GoogleCloudRetailV2betaPurchaseTransaction.prototype['tax'] = undefined;






export default GoogleCloudRetailV2betaPurchaseTransaction;

