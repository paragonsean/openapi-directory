/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment from './GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment';

/**
 * The GoogleCloudRetailV2betaRuleForceReturnFacetAction model module.
 * @module model/GoogleCloudRetailV2betaRuleForceReturnFacetAction
 * @version v2beta
 */
class GoogleCloudRetailV2betaRuleForceReturnFacetAction {
    /**
     * Constructs a new <code>GoogleCloudRetailV2betaRuleForceReturnFacetAction</code>.
     * Force returns an attribute/facet in the request around a certain position or above. * Rule Condition: Must specify non-empty Condition.query_terms (for search only) or Condition.page_categories (for browse only), but can&#39;t specify both. * Action Inputs: attribute name, position * Action Result: Will force return a facet key around a certain position or above if the condition is satisfied. Example: Suppose the query is \&quot;shoes\&quot;, the Condition.query_terms is \&quot;shoes\&quot;, the ForceReturnFacetAction.FacetPositionAdjustment.attribute_name is \&quot;size\&quot; and the ForceReturnFacetAction.FacetPositionAdjustment.position is 8. Two cases: a) The facet key \&quot;size\&quot; is not already in the top 8 slots, then the facet \&quot;size\&quot; will appear at a position close to 8. b) The facet key \&quot;size\&quot; in among the top 8 positions in the request, then it will stay at its current rank.
     * @alias module:model/GoogleCloudRetailV2betaRuleForceReturnFacetAction
     */
    constructor() { 
        
        GoogleCloudRetailV2betaRuleForceReturnFacetAction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRetailV2betaRuleForceReturnFacetAction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRetailV2betaRuleForceReturnFacetAction} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRetailV2betaRuleForceReturnFacetAction} The populated <code>GoogleCloudRetailV2betaRuleForceReturnFacetAction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRetailV2betaRuleForceReturnFacetAction();

            if (data.hasOwnProperty('facetPositionAdjustments')) {
                obj['facetPositionAdjustments'] = ApiClient.convertToType(data['facetPositionAdjustments'], [GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRetailV2betaRuleForceReturnFacetAction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRetailV2betaRuleForceReturnFacetAction</code>.
     */
    static validateJSON(data) {
        if (data['facetPositionAdjustments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['facetPositionAdjustments'])) {
                throw new Error("Expected the field `facetPositionAdjustments` to be an array in the JSON data but got " + data['facetPositionAdjustments']);
            }
            // validate the optional field `facetPositionAdjustments` (array)
            for (const item of data['facetPositionAdjustments']) {
                GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Each instance corresponds to a force return attribute for the given condition. There can't be more 3 instances here.
 * @member {Array.<module:model/GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment>} facetPositionAdjustments
 */
GoogleCloudRetailV2betaRuleForceReturnFacetAction.prototype['facetPositionAdjustments'] = undefined;






export default GoogleCloudRetailV2betaRuleForceReturnFacetAction;

