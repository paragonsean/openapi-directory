/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudRetailV2betaCatalogAttributeFacetConfigRerankConfig model module.
 * @module model/GoogleCloudRetailV2betaCatalogAttributeFacetConfigRerankConfig
 * @version v2beta
 */
class GoogleCloudRetailV2betaCatalogAttributeFacetConfigRerankConfig {
    /**
     * Constructs a new <code>GoogleCloudRetailV2betaCatalogAttributeFacetConfigRerankConfig</code>.
     * Options to rerank based on facet values engaged by the user for the current key. That key needs to be a custom textual key and facetable. To use this control, you also need to pass all the facet keys engaged by the user in the request using the field [SearchRequest.FacetSpec]. In particular, if you don&#39;t pass the facet keys engaged that you want to rerank on, this control won&#39;t be effective. Moreover, to obtain better results, the facet values that you want to rerank on should be close to English (ideally made of words, underscores, and spaces).
     * @alias module:model/GoogleCloudRetailV2betaCatalogAttributeFacetConfigRerankConfig
     */
    constructor() { 
        
        GoogleCloudRetailV2betaCatalogAttributeFacetConfigRerankConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRetailV2betaCatalogAttributeFacetConfigRerankConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRetailV2betaCatalogAttributeFacetConfigRerankConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRetailV2betaCatalogAttributeFacetConfigRerankConfig} The populated <code>GoogleCloudRetailV2betaCatalogAttributeFacetConfigRerankConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRetailV2betaCatalogAttributeFacetConfigRerankConfig();

            if (data.hasOwnProperty('facetValues')) {
                obj['facetValues'] = ApiClient.convertToType(data['facetValues'], ['String']);
            }
            if (data.hasOwnProperty('rerankFacet')) {
                obj['rerankFacet'] = ApiClient.convertToType(data['rerankFacet'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRetailV2betaCatalogAttributeFacetConfigRerankConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRetailV2betaCatalogAttributeFacetConfigRerankConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['facetValues'])) {
            throw new Error("Expected the field `facetValues` to be an array in the JSON data but got " + data['facetValues']);
        }

        return true;
    }


}



/**
 * If empty, rerank on all facet values for the current key. Otherwise, will rerank on the facet values from this list only.
 * @member {Array.<String>} facetValues
 */
GoogleCloudRetailV2betaCatalogAttributeFacetConfigRerankConfig.prototype['facetValues'] = undefined;

/**
 * If set to true, then we also rerank the dynamic facets based on the facet values engaged by the user for the current attribute key during serving.
 * @member {Boolean} rerankFacet
 */
GoogleCloudRetailV2betaCatalogAttributeFacetConfigRerankConfig.prototype['rerankFacet'] = undefined;






export default GoogleCloudRetailV2betaCatalogAttributeFacetConfigRerankConfig;

