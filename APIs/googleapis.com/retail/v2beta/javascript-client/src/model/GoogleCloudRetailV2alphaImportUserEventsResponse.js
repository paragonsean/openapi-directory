/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudRetailV2alphaImportErrorsConfig from './GoogleCloudRetailV2alphaImportErrorsConfig';
import GoogleCloudRetailV2alphaUserEventImportSummary from './GoogleCloudRetailV2alphaUserEventImportSummary';
import GoogleRpcStatus from './GoogleRpcStatus';

/**
 * The GoogleCloudRetailV2alphaImportUserEventsResponse model module.
 * @module model/GoogleCloudRetailV2alphaImportUserEventsResponse
 * @version v2beta
 */
class GoogleCloudRetailV2alphaImportUserEventsResponse {
    /**
     * Constructs a new <code>GoogleCloudRetailV2alphaImportUserEventsResponse</code>.
     * Response of the ImportUserEventsRequest. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.
     * @alias module:model/GoogleCloudRetailV2alphaImportUserEventsResponse
     */
    constructor() { 
        
        GoogleCloudRetailV2alphaImportUserEventsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRetailV2alphaImportUserEventsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRetailV2alphaImportUserEventsResponse} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRetailV2alphaImportUserEventsResponse} The populated <code>GoogleCloudRetailV2alphaImportUserEventsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRetailV2alphaImportUserEventsResponse();

            if (data.hasOwnProperty('errorSamples')) {
                obj['errorSamples'] = ApiClient.convertToType(data['errorSamples'], [GoogleRpcStatus]);
            }
            if (data.hasOwnProperty('errorsConfig')) {
                obj['errorsConfig'] = GoogleCloudRetailV2alphaImportErrorsConfig.constructFromObject(data['errorsConfig']);
            }
            if (data.hasOwnProperty('importSummary')) {
                obj['importSummary'] = GoogleCloudRetailV2alphaUserEventImportSummary.constructFromObject(data['importSummary']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRetailV2alphaImportUserEventsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRetailV2alphaImportUserEventsResponse</code>.
     */
    static validateJSON(data) {
        if (data['errorSamples']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['errorSamples'])) {
                throw new Error("Expected the field `errorSamples` to be an array in the JSON data but got " + data['errorSamples']);
            }
            // validate the optional field `errorSamples` (array)
            for (const item of data['errorSamples']) {
                GoogleRpcStatus.validateJSON(item);
            };
        }
        // validate the optional field `errorsConfig`
        if (data['errorsConfig']) { // data not null
          GoogleCloudRetailV2alphaImportErrorsConfig.validateJSON(data['errorsConfig']);
        }
        // validate the optional field `importSummary`
        if (data['importSummary']) { // data not null
          GoogleCloudRetailV2alphaUserEventImportSummary.validateJSON(data['importSummary']);
        }

        return true;
    }


}



/**
 * A sample of errors encountered while processing the request.
 * @member {Array.<module:model/GoogleRpcStatus>} errorSamples
 */
GoogleCloudRetailV2alphaImportUserEventsResponse.prototype['errorSamples'] = undefined;

/**
 * @member {module:model/GoogleCloudRetailV2alphaImportErrorsConfig} errorsConfig
 */
GoogleCloudRetailV2alphaImportUserEventsResponse.prototype['errorsConfig'] = undefined;

/**
 * @member {module:model/GoogleCloudRetailV2alphaUserEventImportSummary} importSummary
 */
GoogleCloudRetailV2alphaImportUserEventsResponse.prototype['importSummary'] = undefined;






export default GoogleCloudRetailV2alphaImportUserEventsResponse;

