/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.VertexAiSearchForRetailApi);
  }
}(this, function(expect, VertexAiSearchForRetailApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaRule();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GoogleCloudRetailV2betaRule', function() {
    it('should create an instance of GoogleCloudRetailV2betaRule', function() {
      // uncomment below and update the code to test GoogleCloudRetailV2betaRule
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaRule();
      //expect(instance).to.be.a(VertexAiSearchForRetailApi.GoogleCloudRetailV2betaRule);
    });

    it('should have the property boostAction (base name: "boostAction")', function() {
      // uncomment below and update the code to test the property boostAction
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaRule();
      //expect(instance).to.be();
    });

    it('should have the property condition (base name: "condition")', function() {
      // uncomment below and update the code to test the property condition
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaRule();
      //expect(instance).to.be();
    });

    it('should have the property doNotAssociateAction (base name: "doNotAssociateAction")', function() {
      // uncomment below and update the code to test the property doNotAssociateAction
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaRule();
      //expect(instance).to.be();
    });

    it('should have the property filterAction (base name: "filterAction")', function() {
      // uncomment below and update the code to test the property filterAction
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaRule();
      //expect(instance).to.be();
    });

    it('should have the property forceReturnFacetAction (base name: "forceReturnFacetAction")', function() {
      // uncomment below and update the code to test the property forceReturnFacetAction
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaRule();
      //expect(instance).to.be();
    });

    it('should have the property ignoreAction (base name: "ignoreAction")', function() {
      // uncomment below and update the code to test the property ignoreAction
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaRule();
      //expect(instance).to.be();
    });

    it('should have the property onewaySynonymsAction (base name: "onewaySynonymsAction")', function() {
      // uncomment below and update the code to test the property onewaySynonymsAction
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaRule();
      //expect(instance).to.be();
    });

    it('should have the property redirectAction (base name: "redirectAction")', function() {
      // uncomment below and update the code to test the property redirectAction
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaRule();
      //expect(instance).to.be();
    });

    it('should have the property removeFacetAction (base name: "removeFacetAction")', function() {
      // uncomment below and update the code to test the property removeFacetAction
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaRule();
      //expect(instance).to.be();
    });

    it('should have the property replacementAction (base name: "replacementAction")', function() {
      // uncomment below and update the code to test the property replacementAction
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaRule();
      //expect(instance).to.be();
    });

    it('should have the property twowaySynonymsAction (base name: "twowaySynonymsAction")', function() {
      // uncomment below and update the code to test the property twowaySynonymsAction
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaRule();
      //expect(instance).to.be();
    });

  });

}));
