/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.VertexAiSearchForRetailApi);
  }
}(this, function(expect, VertexAiSearchForRetailApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaServingConfig();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GoogleCloudRetailV2betaServingConfig', function() {
    it('should create an instance of GoogleCloudRetailV2betaServingConfig', function() {
      // uncomment below and update the code to test GoogleCloudRetailV2betaServingConfig
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaServingConfig();
      //expect(instance).to.be.a(VertexAiSearchForRetailApi.GoogleCloudRetailV2betaServingConfig);
    });

    it('should have the property boostControlIds (base name: "boostControlIds")', function() {
      // uncomment below and update the code to test the property boostControlIds
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaServingConfig();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaServingConfig();
      //expect(instance).to.be();
    });

    it('should have the property diversityLevel (base name: "diversityLevel")', function() {
      // uncomment below and update the code to test the property diversityLevel
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaServingConfig();
      //expect(instance).to.be();
    });

    it('should have the property diversityType (base name: "diversityType")', function() {
      // uncomment below and update the code to test the property diversityType
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaServingConfig();
      //expect(instance).to.be();
    });

    it('should have the property doNotAssociateControlIds (base name: "doNotAssociateControlIds")', function() {
      // uncomment below and update the code to test the property doNotAssociateControlIds
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaServingConfig();
      //expect(instance).to.be();
    });

    it('should have the property dynamicFacetSpec (base name: "dynamicFacetSpec")', function() {
      // uncomment below and update the code to test the property dynamicFacetSpec
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaServingConfig();
      //expect(instance).to.be();
    });

    it('should have the property enableCategoryFilterLevel (base name: "enableCategoryFilterLevel")', function() {
      // uncomment below and update the code to test the property enableCategoryFilterLevel
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaServingConfig();
      //expect(instance).to.be();
    });

    it('should have the property facetControlIds (base name: "facetControlIds")', function() {
      // uncomment below and update the code to test the property facetControlIds
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaServingConfig();
      //expect(instance).to.be();
    });

    it('should have the property filterControlIds (base name: "filterControlIds")', function() {
      // uncomment below and update the code to test the property filterControlIds
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaServingConfig();
      //expect(instance).to.be();
    });

    it('should have the property ignoreControlIds (base name: "ignoreControlIds")', function() {
      // uncomment below and update the code to test the property ignoreControlIds
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaServingConfig();
      //expect(instance).to.be();
    });

    it('should have the property modelId (base name: "modelId")', function() {
      // uncomment below and update the code to test the property modelId
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaServingConfig();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaServingConfig();
      //expect(instance).to.be();
    });

    it('should have the property onewaySynonymsControlIds (base name: "onewaySynonymsControlIds")', function() {
      // uncomment below and update the code to test the property onewaySynonymsControlIds
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaServingConfig();
      //expect(instance).to.be();
    });

    it('should have the property personalizationSpec (base name: "personalizationSpec")', function() {
      // uncomment below and update the code to test the property personalizationSpec
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaServingConfig();
      //expect(instance).to.be();
    });

    it('should have the property priceRerankingLevel (base name: "priceRerankingLevel")', function() {
      // uncomment below and update the code to test the property priceRerankingLevel
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaServingConfig();
      //expect(instance).to.be();
    });

    it('should have the property redirectControlIds (base name: "redirectControlIds")', function() {
      // uncomment below and update the code to test the property redirectControlIds
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaServingConfig();
      //expect(instance).to.be();
    });

    it('should have the property replacementControlIds (base name: "replacementControlIds")', function() {
      // uncomment below and update the code to test the property replacementControlIds
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaServingConfig();
      //expect(instance).to.be();
    });

    it('should have the property solutionTypes (base name: "solutionTypes")', function() {
      // uncomment below and update the code to test the property solutionTypes
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaServingConfig();
      //expect(instance).to.be();
    });

    it('should have the property twowaySynonymsControlIds (base name: "twowaySynonymsControlIds")', function() {
      // uncomment below and update the code to test the property twowaySynonymsControlIds
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2betaServingConfig();
      //expect(instance).to.be();
    });

  });

}));
