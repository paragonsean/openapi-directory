# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_retail_v2alpha_logging_config_log_generation_rule import GoogleCloudRetailV2alphaLoggingConfigLogGenerationRule
from openapi_server import util


class GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, log_generation_rule: GoogleCloudRetailV2alphaLoggingConfigLogGenerationRule=None, service_name: str=None):
        """GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule - a model defined in OpenAPI

        :param log_generation_rule: The log_generation_rule of this GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule.
        :param service_name: The service_name of this GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule.
        """
        self.openapi_types = {
            'log_generation_rule': GoogleCloudRetailV2alphaLoggingConfigLogGenerationRule,
            'service_name': str
        }

        self.attribute_map = {
            'log_generation_rule': 'logGenerationRule',
            'service_name': 'serviceName'
        }

        self._log_generation_rule = log_generation_rule
        self._service_name = service_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule of this GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def log_generation_rule(self):
        """Gets the log_generation_rule of this GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule.


        :return: The log_generation_rule of this GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule.
        :rtype: GoogleCloudRetailV2alphaLoggingConfigLogGenerationRule
        """
        return self._log_generation_rule

    @log_generation_rule.setter
    def log_generation_rule(self, log_generation_rule):
        """Sets the log_generation_rule of this GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule.


        :param log_generation_rule: The log_generation_rule of this GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule.
        :type log_generation_rule: GoogleCloudRetailV2alphaLoggingConfigLogGenerationRule
        """

        self._log_generation_rule = log_generation_rule

    @property
    def service_name(self):
        """Gets the service_name of this GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule.

        Required. Supported service names: \"CatalogService\", \"CompletionService\", \"ControlService\", \"MerchantCenterStreaming\", \"ModelService\", \"PredictionService\", \"ProductService\", \"ServingConfigService\", \"UserEventService\",

        :return: The service_name of this GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule.

        Required. Supported service names: \"CatalogService\", \"CompletionService\", \"ControlService\", \"MerchantCenterStreaming\", \"ModelService\", \"PredictionService\", \"ProductService\", \"ServingConfigService\", \"UserEventService\",

        :param service_name: The service_name of this GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule.
        :type service_name: str
        """

        self._service_name = service_name
