# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_retail_v2alpha_logging_config_log_generation_rule import GoogleCloudRetailV2alphaLoggingConfigLogGenerationRule
from openapi_server.models.google_cloud_retail_v2alpha_logging_config_service_log_generation_rule import GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule
from openapi_server import util


class GoogleCloudRetailV2alphaLoggingConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_log_generation_rule: GoogleCloudRetailV2alphaLoggingConfigLogGenerationRule=None, name: str=None, service_log_generation_rules: List[GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule]=None):
        """GoogleCloudRetailV2alphaLoggingConfig - a model defined in OpenAPI

        :param default_log_generation_rule: The default_log_generation_rule of this GoogleCloudRetailV2alphaLoggingConfig.
        :param name: The name of this GoogleCloudRetailV2alphaLoggingConfig.
        :param service_log_generation_rules: The service_log_generation_rules of this GoogleCloudRetailV2alphaLoggingConfig.
        """
        self.openapi_types = {
            'default_log_generation_rule': GoogleCloudRetailV2alphaLoggingConfigLogGenerationRule,
            'name': str,
            'service_log_generation_rules': List[GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule]
        }

        self.attribute_map = {
            'default_log_generation_rule': 'defaultLogGenerationRule',
            'name': 'name',
            'service_log_generation_rules': 'serviceLogGenerationRules'
        }

        self._default_log_generation_rule = default_log_generation_rule
        self._name = name
        self._service_log_generation_rules = service_log_generation_rules

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRetailV2alphaLoggingConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRetailV2alphaLoggingConfig of this GoogleCloudRetailV2alphaLoggingConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_log_generation_rule(self):
        """Gets the default_log_generation_rule of this GoogleCloudRetailV2alphaLoggingConfig.


        :return: The default_log_generation_rule of this GoogleCloudRetailV2alphaLoggingConfig.
        :rtype: GoogleCloudRetailV2alphaLoggingConfigLogGenerationRule
        """
        return self._default_log_generation_rule

    @default_log_generation_rule.setter
    def default_log_generation_rule(self, default_log_generation_rule):
        """Sets the default_log_generation_rule of this GoogleCloudRetailV2alphaLoggingConfig.


        :param default_log_generation_rule: The default_log_generation_rule of this GoogleCloudRetailV2alphaLoggingConfig.
        :type default_log_generation_rule: GoogleCloudRetailV2alphaLoggingConfigLogGenerationRule
        """

        self._default_log_generation_rule = default_log_generation_rule

    @property
    def name(self):
        """Gets the name of this GoogleCloudRetailV2alphaLoggingConfig.

        Required. Immutable. The name of the LoggingConfig singleton resource. Format: projects/*/loggingConfig

        :return: The name of this GoogleCloudRetailV2alphaLoggingConfig.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudRetailV2alphaLoggingConfig.

        Required. Immutable. The name of the LoggingConfig singleton resource. Format: projects/*/loggingConfig

        :param name: The name of this GoogleCloudRetailV2alphaLoggingConfig.
        :type name: str
        """

        self._name = name

    @property
    def service_log_generation_rules(self):
        """Gets the service_log_generation_rules of this GoogleCloudRetailV2alphaLoggingConfig.

        Controls logging configurations more granularly for each supported service. This overrides the default_log_generation_rule for the services specified. For those not mentioned, they will fallback to the default log generation rule.

        :return: The service_log_generation_rules of this GoogleCloudRetailV2alphaLoggingConfig.
        :rtype: List[GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule]
        """
        return self._service_log_generation_rules

    @service_log_generation_rules.setter
    def service_log_generation_rules(self, service_log_generation_rules):
        """Sets the service_log_generation_rules of this GoogleCloudRetailV2alphaLoggingConfig.

        Controls logging configurations more granularly for each supported service. This overrides the default_log_generation_rule for the services specified. For those not mentioned, they will fallback to the default log generation rule.

        :param service_log_generation_rules: The service_log_generation_rules of this GoogleCloudRetailV2alphaLoggingConfig.
        :type service_log_generation_rules: List[GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule]
        """

        self._service_log_generation_rules = service_log_generation_rules
