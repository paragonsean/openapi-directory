# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudRetailV2alphaUserInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, direct_user_request: bool=None, ip_address: str=None, user_agent: str=None, user_id: str=None):
        """GoogleCloudRetailV2alphaUserInfo - a model defined in OpenAPI

        :param direct_user_request: The direct_user_request of this GoogleCloudRetailV2alphaUserInfo.
        :param ip_address: The ip_address of this GoogleCloudRetailV2alphaUserInfo.
        :param user_agent: The user_agent of this GoogleCloudRetailV2alphaUserInfo.
        :param user_id: The user_id of this GoogleCloudRetailV2alphaUserInfo.
        """
        self.openapi_types = {
            'direct_user_request': bool,
            'ip_address': str,
            'user_agent': str,
            'user_id': str
        }

        self.attribute_map = {
            'direct_user_request': 'directUserRequest',
            'ip_address': 'ipAddress',
            'user_agent': 'userAgent',
            'user_id': 'userId'
        }

        self._direct_user_request = direct_user_request
        self._ip_address = ip_address
        self._user_agent = user_agent
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRetailV2alphaUserInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRetailV2alphaUserInfo of this GoogleCloudRetailV2alphaUserInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def direct_user_request(self):
        """Gets the direct_user_request of this GoogleCloudRetailV2alphaUserInfo.

        True if the request is made directly from the end user, in which case the ip_address and user_agent can be populated from the HTTP request. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events). This should not be set when using the JavaScript tag in UserEventService.CollectUserEvent.

        :return: The direct_user_request of this GoogleCloudRetailV2alphaUserInfo.
        :rtype: bool
        """
        return self._direct_user_request

    @direct_user_request.setter
    def direct_user_request(self, direct_user_request):
        """Sets the direct_user_request of this GoogleCloudRetailV2alphaUserInfo.

        True if the request is made directly from the end user, in which case the ip_address and user_agent can be populated from the HTTP request. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events). This should not be set when using the JavaScript tag in UserEventService.CollectUserEvent.

        :param direct_user_request: The direct_user_request of this GoogleCloudRetailV2alphaUserInfo.
        :type direct_user_request: bool
        """

        self._direct_user_request = direct_user_request

    @property
    def ip_address(self):
        """Gets the ip_address of this GoogleCloudRetailV2alphaUserInfo.

        The end user's IP address. This field is used to extract location information for personalization. This field must be either an IPv4 address (e.g. \"104.133.9.80\") or an IPv6 address (e.g. \"2001:0db8:85a3:0000:0000:8a2e:0370:7334\"). Otherwise, an INVALID_ARGUMENT error is returned. This should not be set when: * setting SearchRequest.user_info. * using the JavaScript tag in UserEventService.CollectUserEvent or if direct_user_request is set.

        :return: The ip_address of this GoogleCloudRetailV2alphaUserInfo.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this GoogleCloudRetailV2alphaUserInfo.

        The end user's IP address. This field is used to extract location information for personalization. This field must be either an IPv4 address (e.g. \"104.133.9.80\") or an IPv6 address (e.g. \"2001:0db8:85a3:0000:0000:8a2e:0370:7334\"). Otherwise, an INVALID_ARGUMENT error is returned. This should not be set when: * setting SearchRequest.user_info. * using the JavaScript tag in UserEventService.CollectUserEvent or if direct_user_request is set.

        :param ip_address: The ip_address of this GoogleCloudRetailV2alphaUserInfo.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def user_agent(self):
        """Gets the user_agent of this GoogleCloudRetailV2alphaUserInfo.

        User agent as included in the HTTP header. Required for getting SearchResponse.sponsored_results. The field must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. This should not be set when using the client side event reporting with GTM or JavaScript tag in UserEventService.CollectUserEvent or if direct_user_request is set.

        :return: The user_agent of this GoogleCloudRetailV2alphaUserInfo.
        :rtype: str
        """
        return self._user_agent

    @user_agent.setter
    def user_agent(self, user_agent):
        """Sets the user_agent of this GoogleCloudRetailV2alphaUserInfo.

        User agent as included in the HTTP header. Required for getting SearchResponse.sponsored_results. The field must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. This should not be set when using the client side event reporting with GTM or JavaScript tag in UserEventService.CollectUserEvent or if direct_user_request is set.

        :param user_agent: The user_agent of this GoogleCloudRetailV2alphaUserInfo.
        :type user_agent: str
        """

        self._user_agent = user_agent

    @property
    def user_id(self):
        """Gets the user_id of this GoogleCloudRetailV2alphaUserInfo.

        Highly recommended for logged-in users. Unique identifier for logged-in user, such as a user name. Don't set for anonymous users. Always use a hashed value for this ID. Don't set the field to the same fixed ID for different users. This mixes the event history of those users together, which results in degraded model quality. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.

        :return: The user_id of this GoogleCloudRetailV2alphaUserInfo.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this GoogleCloudRetailV2alphaUserInfo.

        Highly recommended for logged-in users. Unique identifier for logged-in user, such as a user name. Don't set for anonymous users. Always use a hashed value for this ID. Don't set the field to the same fixed ID for different users. This mixes the event history of those users together, which results in degraded model quality. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.

        :param user_id: The user_id of this GoogleCloudRetailV2alphaUserInfo.
        :type user_id: str
        """

        self._user_id = user_id
