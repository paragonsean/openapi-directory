# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudRetailV2alphaTuneModelMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, model: str=None):
        """GoogleCloudRetailV2alphaTuneModelMetadata - a model defined in OpenAPI

        :param model: The model of this GoogleCloudRetailV2alphaTuneModelMetadata.
        """
        self.openapi_types = {
            'model': str
        }

        self.attribute_map = {
            'model': 'model'
        }

        self._model = model

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRetailV2alphaTuneModelMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRetailV2alphaTuneModelMetadata of this GoogleCloudRetailV2alphaTuneModelMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model(self):
        """Gets the model of this GoogleCloudRetailV2alphaTuneModelMetadata.

        The resource name of the model that this tune applies to. Format: `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/models/{model_id}`

        :return: The model of this GoogleCloudRetailV2alphaTuneModelMetadata.
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this GoogleCloudRetailV2alphaTuneModelMetadata.

        The resource name of the model that this tune applies to. Format: `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/models/{model_id}`

        :param model: The model of this GoogleCloudRetailV2alphaTuneModelMetadata.
        :type model: str
        """

        self._model = model
