# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudRetailV2alphaFulfillmentInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, place_ids: List[str]=None, type: str=None):
        """GoogleCloudRetailV2alphaFulfillmentInfo - a model defined in OpenAPI

        :param place_ids: The place_ids of this GoogleCloudRetailV2alphaFulfillmentInfo.
        :param type: The type of this GoogleCloudRetailV2alphaFulfillmentInfo.
        """
        self.openapi_types = {
            'place_ids': List[str],
            'type': str
        }

        self.attribute_map = {
            'place_ids': 'placeIds',
            'type': 'type'
        }

        self._place_ids = place_ids
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRetailV2alphaFulfillmentInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRetailV2alphaFulfillmentInfo of this GoogleCloudRetailV2alphaFulfillmentInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def place_ids(self):
        """Gets the place_ids of this GoogleCloudRetailV2alphaFulfillmentInfo.

        The IDs for this type, such as the store IDs for FulfillmentInfo.type.pickup-in-store or the region IDs for FulfillmentInfo.type.same-day-delivery. A maximum of 3000 values are allowed. Each value must be a string with a length limit of 30 characters, matching the pattern `[a-zA-Z0-9_-]+`, such as \"store1\" or \"REGION-2\". Otherwise, an INVALID_ARGUMENT error is returned.

        :return: The place_ids of this GoogleCloudRetailV2alphaFulfillmentInfo.
        :rtype: List[str]
        """
        return self._place_ids

    @place_ids.setter
    def place_ids(self, place_ids):
        """Sets the place_ids of this GoogleCloudRetailV2alphaFulfillmentInfo.

        The IDs for this type, such as the store IDs for FulfillmentInfo.type.pickup-in-store or the region IDs for FulfillmentInfo.type.same-day-delivery. A maximum of 3000 values are allowed. Each value must be a string with a length limit of 30 characters, matching the pattern `[a-zA-Z0-9_-]+`, such as \"store1\" or \"REGION-2\". Otherwise, an INVALID_ARGUMENT error is returned.

        :param place_ids: The place_ids of this GoogleCloudRetailV2alphaFulfillmentInfo.
        :type place_ids: List[str]
        """

        self._place_ids = place_ids

    @property
    def type(self):
        """Gets the type of this GoogleCloudRetailV2alphaFulfillmentInfo.

        The fulfillment type, including commonly used types (such as pickup in store and same day delivery), and custom types. Customers have to map custom types to their display names before rendering UI. Supported values: * \"pickup-in-store\" * \"ship-to-store\" * \"same-day-delivery\" * \"next-day-delivery\" * \"custom-type-1\" * \"custom-type-2\" * \"custom-type-3\" * \"custom-type-4\" * \"custom-type-5\" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned.

        :return: The type of this GoogleCloudRetailV2alphaFulfillmentInfo.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleCloudRetailV2alphaFulfillmentInfo.

        The fulfillment type, including commonly used types (such as pickup in store and same day delivery), and custom types. Customers have to map custom types to their display names before rendering UI. Supported values: * \"pickup-in-store\" * \"ship-to-store\" * \"same-day-delivery\" * \"next-day-delivery\" * \"custom-type-1\" * \"custom-type-2\" * \"custom-type-3\" * \"custom-type-4\" * \"custom-type-5\" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned.

        :param type: The type of this GoogleCloudRetailV2alphaFulfillmentInfo.
        :type type: str
        """

        self._type = type
