# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_retail_v2alpha_condition_query_term import GoogleCloudRetailV2alphaConditionQueryTerm
from openapi_server.models.google_cloud_retail_v2alpha_condition_time_range import GoogleCloudRetailV2alphaConditionTimeRange
from openapi_server import util


class GoogleCloudRetailV2alphaCondition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_time_range: List[GoogleCloudRetailV2alphaConditionTimeRange]=None, page_categories: List[str]=None, query_terms: List[GoogleCloudRetailV2alphaConditionQueryTerm]=None):
        """GoogleCloudRetailV2alphaCondition - a model defined in OpenAPI

        :param active_time_range: The active_time_range of this GoogleCloudRetailV2alphaCondition.
        :param page_categories: The page_categories of this GoogleCloudRetailV2alphaCondition.
        :param query_terms: The query_terms of this GoogleCloudRetailV2alphaCondition.
        """
        self.openapi_types = {
            'active_time_range': List[GoogleCloudRetailV2alphaConditionTimeRange],
            'page_categories': List[str],
            'query_terms': List[GoogleCloudRetailV2alphaConditionQueryTerm]
        }

        self.attribute_map = {
            'active_time_range': 'activeTimeRange',
            'page_categories': 'pageCategories',
            'query_terms': 'queryTerms'
        }

        self._active_time_range = active_time_range
        self._page_categories = page_categories
        self._query_terms = query_terms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRetailV2alphaCondition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRetailV2alphaCondition of this GoogleCloudRetailV2alphaCondition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_time_range(self):
        """Gets the active_time_range of this GoogleCloudRetailV2alphaCondition.

        Range of time(s) specifying when Condition is active. Condition true if any time range matches.

        :return: The active_time_range of this GoogleCloudRetailV2alphaCondition.
        :rtype: List[GoogleCloudRetailV2alphaConditionTimeRange]
        """
        return self._active_time_range

    @active_time_range.setter
    def active_time_range(self, active_time_range):
        """Sets the active_time_range of this GoogleCloudRetailV2alphaCondition.

        Range of time(s) specifying when Condition is active. Condition true if any time range matches.

        :param active_time_range: The active_time_range of this GoogleCloudRetailV2alphaCondition.
        :type active_time_range: List[GoogleCloudRetailV2alphaConditionTimeRange]
        """

        self._active_time_range = active_time_range

    @property
    def page_categories(self):
        """Gets the page_categories of this GoogleCloudRetailV2alphaCondition.

        Used to support browse uses cases. A list (up to 10 entries) of categories or departments. The format should be the same as UserEvent.page_categories;

        :return: The page_categories of this GoogleCloudRetailV2alphaCondition.
        :rtype: List[str]
        """
        return self._page_categories

    @page_categories.setter
    def page_categories(self, page_categories):
        """Sets the page_categories of this GoogleCloudRetailV2alphaCondition.

        Used to support browse uses cases. A list (up to 10 entries) of categories or departments. The format should be the same as UserEvent.page_categories;

        :param page_categories: The page_categories of this GoogleCloudRetailV2alphaCondition.
        :type page_categories: List[str]
        """

        self._page_categories = page_categories

    @property
    def query_terms(self):
        """Gets the query_terms of this GoogleCloudRetailV2alphaCondition.

        A list (up to 10 entries) of terms to match the query on. If not specified, match all queries. If many query terms are specified, the condition is matched if any of the terms is a match (i.e. using the OR operator).

        :return: The query_terms of this GoogleCloudRetailV2alphaCondition.
        :rtype: List[GoogleCloudRetailV2alphaConditionQueryTerm]
        """
        return self._query_terms

    @query_terms.setter
    def query_terms(self, query_terms):
        """Sets the query_terms of this GoogleCloudRetailV2alphaCondition.

        A list (up to 10 entries) of terms to match the query on. If not specified, match all queries. If many query terms are specified, the condition is matched if any of the terms is a match (i.e. using the OR operator).

        :param query_terms: The query_terms of this GoogleCloudRetailV2alphaCondition.
        :type query_terms: List[GoogleCloudRetailV2alphaConditionQueryTerm]
        """

        self._query_terms = query_terms
