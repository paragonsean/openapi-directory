# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_retail_v2alpha_custom_attribute import GoogleCloudRetailV2alphaCustomAttribute
from openapi_server.models.google_cloud_retail_v2alpha_search_response_facet import GoogleCloudRetailV2alphaSearchResponseFacet
from openapi_server import util


class GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: Dict[str, GoogleCloudRetailV2alphaCustomAttribute]=None, facets: List[GoogleCloudRetailV2alphaSearchResponseFacet]=None, suggestion: str=None, total_product_count: int=None):
        """GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult - a model defined in OpenAPI

        :param attributes: The attributes of this GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult.
        :param facets: The facets of this GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult.
        :param suggestion: The suggestion of this GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult.
        :param total_product_count: The total_product_count of this GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult.
        """
        self.openapi_types = {
            'attributes': Dict[str, GoogleCloudRetailV2alphaCustomAttribute],
            'facets': List[GoogleCloudRetailV2alphaSearchResponseFacet],
            'suggestion': str,
            'total_product_count': int
        }

        self.attribute_map = {
            'attributes': 'attributes',
            'facets': 'facets',
            'suggestion': 'suggestion',
            'total_product_count': 'totalProductCount'
        }

        self._attributes = attributes
        self._facets = facets
        self._suggestion = suggestion
        self._total_product_count = total_product_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult of this GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult.

        Custom attributes for the suggestion term. * For \"user-data\", the attributes are additional custom attributes ingested through BigQuery. * For \"cloud-retail\", the attributes are product attributes generated by Cloud Retail. It requires UserEvent.product_details is imported properly.

        :return: The attributes of this GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult.
        :rtype: Dict[str, GoogleCloudRetailV2alphaCustomAttribute]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult.

        Custom attributes for the suggestion term. * For \"user-data\", the attributes are additional custom attributes ingested through BigQuery. * For \"cloud-retail\", the attributes are product attributes generated by Cloud Retail. It requires UserEvent.product_details is imported properly.

        :param attributes: The attributes of this GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult.
        :type attributes: Dict[str, GoogleCloudRetailV2alphaCustomAttribute]
        """

        self._attributes = attributes

    @property
    def facets(self):
        """Gets the facets of this GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult.

        Facet information for the suggestion term. Gives the number of items resulting from a search with this suggestion term for each facet. This is an experimental feature for limited customers. If you want to receive this facet information, reach out to the Retail support team.

        :return: The facets of this GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult.
        :rtype: List[GoogleCloudRetailV2alphaSearchResponseFacet]
        """
        return self._facets

    @facets.setter
    def facets(self, facets):
        """Sets the facets of this GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult.

        Facet information for the suggestion term. Gives the number of items resulting from a search with this suggestion term for each facet. This is an experimental feature for limited customers. If you want to receive this facet information, reach out to the Retail support team.

        :param facets: The facets of this GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult.
        :type facets: List[GoogleCloudRetailV2alphaSearchResponseFacet]
        """

        self._facets = facets

    @property
    def suggestion(self):
        """Gets the suggestion of this GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult.

        The suggestion for the query.

        :return: The suggestion of this GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult.
        :rtype: str
        """
        return self._suggestion

    @suggestion.setter
    def suggestion(self, suggestion):
        """Sets the suggestion of this GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult.

        The suggestion for the query.

        :param suggestion: The suggestion of this GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult.
        :type suggestion: str
        """

        self._suggestion = suggestion

    @property
    def total_product_count(self):
        """Gets the total_product_count of this GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult.

        Total number of products associated with a search with this suggestion. This is an experimental feature for limited customers. If you want to receive this product count information, reach out to the Retail support team.

        :return: The total_product_count of this GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult.
        :rtype: int
        """
        return self._total_product_count

    @total_product_count.setter
    def total_product_count(self, total_product_count):
        """Sets the total_product_count of this GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult.

        Total number of products associated with a search with this suggestion. This is an experimental feature for limited customers. If you want to receive this product count information, reach out to the Retail support team.

        :param total_product_count: The total_product_count of this GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult.
        :type total_product_count: int
        """

        self._total_product_count = total_product_count
