# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudRetailV2alphaRuleIgnoreAction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ignore_terms: List[str]=None):
        """GoogleCloudRetailV2alphaRuleIgnoreAction - a model defined in OpenAPI

        :param ignore_terms: The ignore_terms of this GoogleCloudRetailV2alphaRuleIgnoreAction.
        """
        self.openapi_types = {
            'ignore_terms': List[str]
        }

        self.attribute_map = {
            'ignore_terms': 'ignoreTerms'
        }

        self._ignore_terms = ignore_terms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRetailV2alphaRuleIgnoreAction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRetailV2alphaRuleIgnoreAction of this GoogleCloudRetailV2alphaRuleIgnoreAction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ignore_terms(self):
        """Gets the ignore_terms of this GoogleCloudRetailV2alphaRuleIgnoreAction.

        Terms to ignore in the search query.

        :return: The ignore_terms of this GoogleCloudRetailV2alphaRuleIgnoreAction.
        :rtype: List[str]
        """
        return self._ignore_terms

    @ignore_terms.setter
    def ignore_terms(self, ignore_terms):
        """Sets the ignore_terms of this GoogleCloudRetailV2alphaRuleIgnoreAction.

        Terms to ignore in the search query.

        :param ignore_terms: The ignore_terms of this GoogleCloudRetailV2alphaRuleIgnoreAction.
        :type ignore_terms: List[str]
        """

        self._ignore_terms = ignore_terms
