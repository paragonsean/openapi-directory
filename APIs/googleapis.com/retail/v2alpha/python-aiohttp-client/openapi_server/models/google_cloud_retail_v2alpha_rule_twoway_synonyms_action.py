# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudRetailV2alphaRuleTwowaySynonymsAction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, synonyms: List[str]=None):
        """GoogleCloudRetailV2alphaRuleTwowaySynonymsAction - a model defined in OpenAPI

        :param synonyms: The synonyms of this GoogleCloudRetailV2alphaRuleTwowaySynonymsAction.
        """
        self.openapi_types = {
            'synonyms': List[str]
        }

        self.attribute_map = {
            'synonyms': 'synonyms'
        }

        self._synonyms = synonyms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRetailV2alphaRuleTwowaySynonymsAction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRetailV2alphaRuleTwowaySynonymsAction of this GoogleCloudRetailV2alphaRuleTwowaySynonymsAction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def synonyms(self):
        """Gets the synonyms of this GoogleCloudRetailV2alphaRuleTwowaySynonymsAction.

        Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at least 2 synonyms.

        :return: The synonyms of this GoogleCloudRetailV2alphaRuleTwowaySynonymsAction.
        :rtype: List[str]
        """
        return self._synonyms

    @synonyms.setter
    def synonyms(self, synonyms):
        """Sets the synonyms of this GoogleCloudRetailV2alphaRuleTwowaySynonymsAction.

        Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at least 2 synonyms.

        :param synonyms: The synonyms of this GoogleCloudRetailV2alphaRuleTwowaySynonymsAction.
        :type synonyms: List[str]
        """

        self._synonyms = synonyms
