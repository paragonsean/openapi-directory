# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudRetailV2alphaRating(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, average_rating: float=None, rating_count: int=None, rating_histogram: List[int]=None):
        """GoogleCloudRetailV2alphaRating - a model defined in OpenAPI

        :param average_rating: The average_rating of this GoogleCloudRetailV2alphaRating.
        :param rating_count: The rating_count of this GoogleCloudRetailV2alphaRating.
        :param rating_histogram: The rating_histogram of this GoogleCloudRetailV2alphaRating.
        """
        self.openapi_types = {
            'average_rating': float,
            'rating_count': int,
            'rating_histogram': List[int]
        }

        self.attribute_map = {
            'average_rating': 'averageRating',
            'rating_count': 'ratingCount',
            'rating_histogram': 'ratingHistogram'
        }

        self._average_rating = average_rating
        self._rating_count = rating_count
        self._rating_histogram = rating_histogram

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRetailV2alphaRating':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRetailV2alphaRating of this GoogleCloudRetailV2alphaRating.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def average_rating(self):
        """Gets the average_rating of this GoogleCloudRetailV2alphaRating.

        The average rating of the Product. The rating is scaled at 1-5. Otherwise, an INVALID_ARGUMENT error is returned.

        :return: The average_rating of this GoogleCloudRetailV2alphaRating.
        :rtype: float
        """
        return self._average_rating

    @average_rating.setter
    def average_rating(self, average_rating):
        """Sets the average_rating of this GoogleCloudRetailV2alphaRating.

        The average rating of the Product. The rating is scaled at 1-5. Otherwise, an INVALID_ARGUMENT error is returned.

        :param average_rating: The average_rating of this GoogleCloudRetailV2alphaRating.
        :type average_rating: float
        """

        self._average_rating = average_rating

    @property
    def rating_count(self):
        """Gets the rating_count of this GoogleCloudRetailV2alphaRating.

        The total number of ratings. This value is independent of the value of rating_histogram. This value must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.

        :return: The rating_count of this GoogleCloudRetailV2alphaRating.
        :rtype: int
        """
        return self._rating_count

    @rating_count.setter
    def rating_count(self, rating_count):
        """Sets the rating_count of this GoogleCloudRetailV2alphaRating.

        The total number of ratings. This value is independent of the value of rating_histogram. This value must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.

        :param rating_count: The rating_count of this GoogleCloudRetailV2alphaRating.
        :type rating_count: int
        """

        self._rating_count = rating_count

    @property
    def rating_histogram(self):
        """Gets the rating_histogram of this GoogleCloudRetailV2alphaRating.

        List of rating counts per rating value (index = rating - 1). The list is empty if there is no rating. If the list is non-empty, its size is always 5. Otherwise, an INVALID_ARGUMENT error is returned. For example, [41, 14, 13, 47, 303]. It means that the Product got 41 ratings with 1 star, 14 ratings with 2 star, and so on.

        :return: The rating_histogram of this GoogleCloudRetailV2alphaRating.
        :rtype: List[int]
        """
        return self._rating_histogram

    @rating_histogram.setter
    def rating_histogram(self, rating_histogram):
        """Sets the rating_histogram of this GoogleCloudRetailV2alphaRating.

        List of rating counts per rating value (index = rating - 1). The list is empty if there is no rating. If the list is non-empty, its size is always 5. Otherwise, an INVALID_ARGUMENT error is returned. For example, [41, 14, 13, 47, 303]. It means that the Product got 41 ratings with 1 star, 14 ratings with 2 star, and so on.

        :param rating_histogram: The rating_histogram of this GoogleCloudRetailV2alphaRating.
        :type rating_histogram: List[int]
        """

        self._rating_histogram = rating_histogram
