/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination::OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination::OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination::~OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination() {}

void OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination::initializeModel() {

    m_dataset_id_isSet = false;
    m_dataset_id_isValid = false;

    m_table_id_prefix_isSet = false;
    m_table_id_prefix_isValid = false;

    m_table_type_isSet = false;
    m_table_type_isValid = false;
}

void OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination::fromJsonObject(QJsonObject json) {

    m_dataset_id_isValid = ::OpenAPI::fromJsonValue(m_dataset_id, json[QString("datasetId")]);
    m_dataset_id_isSet = !json[QString("datasetId")].isNull() && m_dataset_id_isValid;

    m_table_id_prefix_isValid = ::OpenAPI::fromJsonValue(m_table_id_prefix, json[QString("tableIdPrefix")]);
    m_table_id_prefix_isSet = !json[QString("tableIdPrefix")].isNull() && m_table_id_prefix_isValid;

    m_table_type_isValid = ::OpenAPI::fromJsonValue(m_table_type, json[QString("tableType")]);
    m_table_type_isSet = !json[QString("tableType")].isNull() && m_table_type_isValid;
}

QString OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination::asJsonObject() const {
    QJsonObject obj;
    if (m_dataset_id_isSet) {
        obj.insert(QString("datasetId"), ::OpenAPI::toJsonValue(m_dataset_id));
    }
    if (m_table_id_prefix_isSet) {
        obj.insert(QString("tableIdPrefix"), ::OpenAPI::toJsonValue(m_table_id_prefix));
    }
    if (m_table_type_isSet) {
        obj.insert(QString("tableType"), ::OpenAPI::toJsonValue(m_table_type));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination::getDatasetId() const {
    return m_dataset_id;
}
void OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination::setDatasetId(const QString &dataset_id) {
    m_dataset_id = dataset_id;
    m_dataset_id_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination::is_dataset_id_Set() const{
    return m_dataset_id_isSet;
}

bool OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination::is_dataset_id_Valid() const{
    return m_dataset_id_isValid;
}

QString OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination::getTableIdPrefix() const {
    return m_table_id_prefix;
}
void OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination::setTableIdPrefix(const QString &table_id_prefix) {
    m_table_id_prefix = table_id_prefix;
    m_table_id_prefix_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination::is_table_id_prefix_Set() const{
    return m_table_id_prefix_isSet;
}

bool OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination::is_table_id_prefix_Valid() const{
    return m_table_id_prefix_isValid;
}

QString OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination::getTableType() const {
    return m_table_type;
}
void OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination::setTableType(const QString &table_type) {
    m_table_type = table_type;
    m_table_type_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination::is_table_type_Set() const{
    return m_table_type_isSet;
}

bool OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination::is_table_type_Valid() const{
    return m_table_type_isValid;
}

bool OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dataset_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_table_id_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_table_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaOutputConfigBigQueryDestination::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
