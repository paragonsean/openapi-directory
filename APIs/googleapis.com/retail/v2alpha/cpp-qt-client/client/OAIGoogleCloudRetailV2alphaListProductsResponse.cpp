/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaListProductsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaListProductsResponse::OAIGoogleCloudRetailV2alphaListProductsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaListProductsResponse::OAIGoogleCloudRetailV2alphaListProductsResponse() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaListProductsResponse::~OAIGoogleCloudRetailV2alphaListProductsResponse() {}

void OAIGoogleCloudRetailV2alphaListProductsResponse::initializeModel() {

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;

    m_products_isSet = false;
    m_products_isValid = false;

    m_total_size_isSet = false;
    m_total_size_isValid = false;
}

void OAIGoogleCloudRetailV2alphaListProductsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaListProductsResponse::fromJsonObject(QJsonObject json) {

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;

    m_products_isValid = ::OpenAPI::fromJsonValue(m_products, json[QString("products")]);
    m_products_isSet = !json[QString("products")].isNull() && m_products_isValid;

    m_total_size_isValid = ::OpenAPI::fromJsonValue(m_total_size, json[QString("totalSize")]);
    m_total_size_isSet = !json[QString("totalSize")].isNull() && m_total_size_isValid;
}

QString OAIGoogleCloudRetailV2alphaListProductsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaListProductsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    if (m_products.size() > 0) {
        obj.insert(QString("products"), ::OpenAPI::toJsonValue(m_products));
    }
    if (m_total_size_isSet) {
        obj.insert(QString("totalSize"), ::OpenAPI::toJsonValue(m_total_size));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2alphaListProductsResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIGoogleCloudRetailV2alphaListProductsResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaListProductsResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIGoogleCloudRetailV2alphaListProductsResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

QList<OAIGoogleCloudRetailV2alphaProduct> OAIGoogleCloudRetailV2alphaListProductsResponse::getProducts() const {
    return m_products;
}
void OAIGoogleCloudRetailV2alphaListProductsResponse::setProducts(const QList<OAIGoogleCloudRetailV2alphaProduct> &products) {
    m_products = products;
    m_products_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaListProductsResponse::is_products_Set() const{
    return m_products_isSet;
}

bool OAIGoogleCloudRetailV2alphaListProductsResponse::is_products_Valid() const{
    return m_products_isValid;
}

qint32 OAIGoogleCloudRetailV2alphaListProductsResponse::getTotalSize() const {
    return m_total_size;
}
void OAIGoogleCloudRetailV2alphaListProductsResponse::setTotalSize(const qint32 &total_size) {
    m_total_size = total_size;
    m_total_size_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaListProductsResponse::is_total_size_Set() const{
    return m_total_size_isSet;
}

bool OAIGoogleCloudRetailV2alphaListProductsResponse::is_total_size_Valid() const{
    return m_total_size_isValid;
}

bool OAIGoogleCloudRetailV2alphaListProductsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_products.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_size_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaListProductsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
