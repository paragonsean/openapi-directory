/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaProject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaProject::OAIGoogleCloudRetailV2alphaProject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaProject::OAIGoogleCloudRetailV2alphaProject() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaProject::~OAIGoogleCloudRetailV2alphaProject() {}

void OAIGoogleCloudRetailV2alphaProject::initializeModel() {

    m_enrolled_solutions_isSet = false;
    m_enrolled_solutions_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIGoogleCloudRetailV2alphaProject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaProject::fromJsonObject(QJsonObject json) {

    m_enrolled_solutions_isValid = ::OpenAPI::fromJsonValue(m_enrolled_solutions, json[QString("enrolledSolutions")]);
    m_enrolled_solutions_isSet = !json[QString("enrolledSolutions")].isNull() && m_enrolled_solutions_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIGoogleCloudRetailV2alphaProject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaProject::asJsonObject() const {
    QJsonObject obj;
    if (m_enrolled_solutions.size() > 0) {
        obj.insert(QString("enrolledSolutions"), ::OpenAPI::toJsonValue(m_enrolled_solutions));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QList<QString> OAIGoogleCloudRetailV2alphaProject::getEnrolledSolutions() const {
    return m_enrolled_solutions;
}
void OAIGoogleCloudRetailV2alphaProject::setEnrolledSolutions(const QList<QString> &enrolled_solutions) {
    m_enrolled_solutions = enrolled_solutions;
    m_enrolled_solutions_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaProject::is_enrolled_solutions_Set() const{
    return m_enrolled_solutions_isSet;
}

bool OAIGoogleCloudRetailV2alphaProject::is_enrolled_solutions_Valid() const{
    return m_enrolled_solutions_isValid;
}

QString OAIGoogleCloudRetailV2alphaProject::getName() const {
    return m_name;
}
void OAIGoogleCloudRetailV2alphaProject::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaProject::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudRetailV2alphaProject::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGoogleCloudRetailV2alphaProject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enrolled_solutions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaProject::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
