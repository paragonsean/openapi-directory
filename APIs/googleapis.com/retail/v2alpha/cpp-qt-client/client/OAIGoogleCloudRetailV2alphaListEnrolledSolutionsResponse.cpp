/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaListEnrolledSolutionsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaListEnrolledSolutionsResponse::OAIGoogleCloudRetailV2alphaListEnrolledSolutionsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaListEnrolledSolutionsResponse::OAIGoogleCloudRetailV2alphaListEnrolledSolutionsResponse() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaListEnrolledSolutionsResponse::~OAIGoogleCloudRetailV2alphaListEnrolledSolutionsResponse() {}

void OAIGoogleCloudRetailV2alphaListEnrolledSolutionsResponse::initializeModel() {

    m_enrolled_solutions_isSet = false;
    m_enrolled_solutions_isValid = false;
}

void OAIGoogleCloudRetailV2alphaListEnrolledSolutionsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaListEnrolledSolutionsResponse::fromJsonObject(QJsonObject json) {

    m_enrolled_solutions_isValid = ::OpenAPI::fromJsonValue(m_enrolled_solutions, json[QString("enrolledSolutions")]);
    m_enrolled_solutions_isSet = !json[QString("enrolledSolutions")].isNull() && m_enrolled_solutions_isValid;
}

QString OAIGoogleCloudRetailV2alphaListEnrolledSolutionsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaListEnrolledSolutionsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_enrolled_solutions.size() > 0) {
        obj.insert(QString("enrolledSolutions"), ::OpenAPI::toJsonValue(m_enrolled_solutions));
    }
    return obj;
}

QList<QString> OAIGoogleCloudRetailV2alphaListEnrolledSolutionsResponse::getEnrolledSolutions() const {
    return m_enrolled_solutions;
}
void OAIGoogleCloudRetailV2alphaListEnrolledSolutionsResponse::setEnrolledSolutions(const QList<QString> &enrolled_solutions) {
    m_enrolled_solutions = enrolled_solutions;
    m_enrolled_solutions_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaListEnrolledSolutionsResponse::is_enrolled_solutions_Set() const{
    return m_enrolled_solutions_isSet;
}

bool OAIGoogleCloudRetailV2alphaListEnrolledSolutionsResponse::is_enrolled_solutions_Valid() const{
    return m_enrolled_solutions_isValid;
}

bool OAIGoogleCloudRetailV2alphaListEnrolledSolutionsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enrolled_solutions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaListEnrolledSolutionsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
