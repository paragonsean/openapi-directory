/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaReplaceCatalogAttributeRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaReplaceCatalogAttributeRequest::OAIGoogleCloudRetailV2alphaReplaceCatalogAttributeRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaReplaceCatalogAttributeRequest::OAIGoogleCloudRetailV2alphaReplaceCatalogAttributeRequest() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaReplaceCatalogAttributeRequest::~OAIGoogleCloudRetailV2alphaReplaceCatalogAttributeRequest() {}

void OAIGoogleCloudRetailV2alphaReplaceCatalogAttributeRequest::initializeModel() {

    m_catalog_attribute_isSet = false;
    m_catalog_attribute_isValid = false;

    m_update_mask_isSet = false;
    m_update_mask_isValid = false;
}

void OAIGoogleCloudRetailV2alphaReplaceCatalogAttributeRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaReplaceCatalogAttributeRequest::fromJsonObject(QJsonObject json) {

    m_catalog_attribute_isValid = ::OpenAPI::fromJsonValue(m_catalog_attribute, json[QString("catalogAttribute")]);
    m_catalog_attribute_isSet = !json[QString("catalogAttribute")].isNull() && m_catalog_attribute_isValid;

    m_update_mask_isValid = ::OpenAPI::fromJsonValue(m_update_mask, json[QString("updateMask")]);
    m_update_mask_isSet = !json[QString("updateMask")].isNull() && m_update_mask_isValid;
}

QString OAIGoogleCloudRetailV2alphaReplaceCatalogAttributeRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaReplaceCatalogAttributeRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_catalog_attribute.isSet()) {
        obj.insert(QString("catalogAttribute"), ::OpenAPI::toJsonValue(m_catalog_attribute));
    }
    if (m_update_mask_isSet) {
        obj.insert(QString("updateMask"), ::OpenAPI::toJsonValue(m_update_mask));
    }
    return obj;
}

OAIGoogleCloudRetailV2alphaCatalogAttribute OAIGoogleCloudRetailV2alphaReplaceCatalogAttributeRequest::getCatalogAttribute() const {
    return m_catalog_attribute;
}
void OAIGoogleCloudRetailV2alphaReplaceCatalogAttributeRequest::setCatalogAttribute(const OAIGoogleCloudRetailV2alphaCatalogAttribute &catalog_attribute) {
    m_catalog_attribute = catalog_attribute;
    m_catalog_attribute_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaReplaceCatalogAttributeRequest::is_catalog_attribute_Set() const{
    return m_catalog_attribute_isSet;
}

bool OAIGoogleCloudRetailV2alphaReplaceCatalogAttributeRequest::is_catalog_attribute_Valid() const{
    return m_catalog_attribute_isValid;
}

QString OAIGoogleCloudRetailV2alphaReplaceCatalogAttributeRequest::getUpdateMask() const {
    return m_update_mask;
}
void OAIGoogleCloudRetailV2alphaReplaceCatalogAttributeRequest::setUpdateMask(const QString &update_mask) {
    m_update_mask = update_mask;
    m_update_mask_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaReplaceCatalogAttributeRequest::is_update_mask_Set() const{
    return m_update_mask_isSet;
}

bool OAIGoogleCloudRetailV2alphaReplaceCatalogAttributeRequest::is_update_mask_Valid() const{
    return m_update_mask_isValid;
}

bool OAIGoogleCloudRetailV2alphaReplaceCatalogAttributeRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_catalog_attribute.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_mask_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaReplaceCatalogAttributeRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
