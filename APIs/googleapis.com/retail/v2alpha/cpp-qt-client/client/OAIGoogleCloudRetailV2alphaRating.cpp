/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaRating.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaRating::OAIGoogleCloudRetailV2alphaRating(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaRating::OAIGoogleCloudRetailV2alphaRating() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaRating::~OAIGoogleCloudRetailV2alphaRating() {}

void OAIGoogleCloudRetailV2alphaRating::initializeModel() {

    m_average_rating_isSet = false;
    m_average_rating_isValid = false;

    m_rating_count_isSet = false;
    m_rating_count_isValid = false;

    m_rating_histogram_isSet = false;
    m_rating_histogram_isValid = false;
}

void OAIGoogleCloudRetailV2alphaRating::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaRating::fromJsonObject(QJsonObject json) {

    m_average_rating_isValid = ::OpenAPI::fromJsonValue(m_average_rating, json[QString("averageRating")]);
    m_average_rating_isSet = !json[QString("averageRating")].isNull() && m_average_rating_isValid;

    m_rating_count_isValid = ::OpenAPI::fromJsonValue(m_rating_count, json[QString("ratingCount")]);
    m_rating_count_isSet = !json[QString("ratingCount")].isNull() && m_rating_count_isValid;

    m_rating_histogram_isValid = ::OpenAPI::fromJsonValue(m_rating_histogram, json[QString("ratingHistogram")]);
    m_rating_histogram_isSet = !json[QString("ratingHistogram")].isNull() && m_rating_histogram_isValid;
}

QString OAIGoogleCloudRetailV2alphaRating::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaRating::asJsonObject() const {
    QJsonObject obj;
    if (m_average_rating_isSet) {
        obj.insert(QString("averageRating"), ::OpenAPI::toJsonValue(m_average_rating));
    }
    if (m_rating_count_isSet) {
        obj.insert(QString("ratingCount"), ::OpenAPI::toJsonValue(m_rating_count));
    }
    if (m_rating_histogram.size() > 0) {
        obj.insert(QString("ratingHistogram"), ::OpenAPI::toJsonValue(m_rating_histogram));
    }
    return obj;
}

float OAIGoogleCloudRetailV2alphaRating::getAverageRating() const {
    return m_average_rating;
}
void OAIGoogleCloudRetailV2alphaRating::setAverageRating(const float &average_rating) {
    m_average_rating = average_rating;
    m_average_rating_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaRating::is_average_rating_Set() const{
    return m_average_rating_isSet;
}

bool OAIGoogleCloudRetailV2alphaRating::is_average_rating_Valid() const{
    return m_average_rating_isValid;
}

qint32 OAIGoogleCloudRetailV2alphaRating::getRatingCount() const {
    return m_rating_count;
}
void OAIGoogleCloudRetailV2alphaRating::setRatingCount(const qint32 &rating_count) {
    m_rating_count = rating_count;
    m_rating_count_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaRating::is_rating_count_Set() const{
    return m_rating_count_isSet;
}

bool OAIGoogleCloudRetailV2alphaRating::is_rating_count_Valid() const{
    return m_rating_count_isValid;
}

QList<qint32> OAIGoogleCloudRetailV2alphaRating::getRatingHistogram() const {
    return m_rating_histogram;
}
void OAIGoogleCloudRetailV2alphaRating::setRatingHistogram(const QList<qint32> &rating_histogram) {
    m_rating_histogram = rating_histogram;
    m_rating_histogram_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaRating::is_rating_histogram_Set() const{
    return m_rating_histogram_isSet;
}

bool OAIGoogleCloudRetailV2alphaRating::is_rating_histogram_Valid() const{
    return m_rating_histogram_isValid;
}

bool OAIGoogleCloudRetailV2alphaRating::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_average_rating_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rating_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rating_histogram.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaRating::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
