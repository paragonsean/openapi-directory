/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaColorInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaColorInfo::OAIGoogleCloudRetailV2alphaColorInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaColorInfo::OAIGoogleCloudRetailV2alphaColorInfo() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaColorInfo::~OAIGoogleCloudRetailV2alphaColorInfo() {}

void OAIGoogleCloudRetailV2alphaColorInfo::initializeModel() {

    m_color_families_isSet = false;
    m_color_families_isValid = false;

    m_colors_isSet = false;
    m_colors_isValid = false;
}

void OAIGoogleCloudRetailV2alphaColorInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaColorInfo::fromJsonObject(QJsonObject json) {

    m_color_families_isValid = ::OpenAPI::fromJsonValue(m_color_families, json[QString("colorFamilies")]);
    m_color_families_isSet = !json[QString("colorFamilies")].isNull() && m_color_families_isValid;

    m_colors_isValid = ::OpenAPI::fromJsonValue(m_colors, json[QString("colors")]);
    m_colors_isSet = !json[QString("colors")].isNull() && m_colors_isValid;
}

QString OAIGoogleCloudRetailV2alphaColorInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaColorInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_color_families.size() > 0) {
        obj.insert(QString("colorFamilies"), ::OpenAPI::toJsonValue(m_color_families));
    }
    if (m_colors.size() > 0) {
        obj.insert(QString("colors"), ::OpenAPI::toJsonValue(m_colors));
    }
    return obj;
}

QList<QString> OAIGoogleCloudRetailV2alphaColorInfo::getColorFamilies() const {
    return m_color_families;
}
void OAIGoogleCloudRetailV2alphaColorInfo::setColorFamilies(const QList<QString> &color_families) {
    m_color_families = color_families;
    m_color_families_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaColorInfo::is_color_families_Set() const{
    return m_color_families_isSet;
}

bool OAIGoogleCloudRetailV2alphaColorInfo::is_color_families_Valid() const{
    return m_color_families_isValid;
}

QList<QString> OAIGoogleCloudRetailV2alphaColorInfo::getColors() const {
    return m_colors;
}
void OAIGoogleCloudRetailV2alphaColorInfo::setColors(const QList<QString> &colors) {
    m_colors = colors;
    m_colors_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaColorInfo::is_colors_Set() const{
    return m_colors_isSet;
}

bool OAIGoogleCloudRetailV2alphaColorInfo::is_colors_Valid() const{
    return m_colors_isValid;
}

bool OAIGoogleCloudRetailV2alphaColorInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_color_families.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_colors.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaColorInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
