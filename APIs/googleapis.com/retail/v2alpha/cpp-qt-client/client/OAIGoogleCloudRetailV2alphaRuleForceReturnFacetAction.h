/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudRetailV2alphaRuleForceReturnFacetAction.h
 *
 * Force returns an attribute/facet in the request around a certain position or above. * Rule Condition: Must specify non-empty Condition.query_terms (for search only) or Condition.page_categories (for browse only), but can&#39;t specify both. * Action Inputs: attribute name, position * Action Result: Will force return a facet key around a certain position or above if the condition is satisfied. Example: Suppose the query is \&quot;shoes\&quot;, the Condition.query_terms is \&quot;shoes\&quot;, the ForceReturnFacetAction.FacetPositionAdjustment.attribute_name is \&quot;size\&quot; and the ForceReturnFacetAction.FacetPositionAdjustment.position is 8. Two cases: a) The facet key \&quot;size\&quot; is not already in the top 8 slots, then the facet \&quot;size\&quot; will appear at a position close to 8. b) The facet key \&quot;size\&quot; in among the top 8 positions in the request, then it will stay at its current rank.
 */

#ifndef OAIGoogleCloudRetailV2alphaRuleForceReturnFacetAction_H
#define OAIGoogleCloudRetailV2alphaRuleForceReturnFacetAction_H

#include <QJsonObject>

#include "OAIGoogleCloudRetailV2alphaRuleForceReturnFacetActionFacetPositionAdjustment.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudRetailV2alphaRuleForceReturnFacetActionFacetPositionAdjustment;

class OAIGoogleCloudRetailV2alphaRuleForceReturnFacetAction : public OAIObject {
public:
    OAIGoogleCloudRetailV2alphaRuleForceReturnFacetAction();
    OAIGoogleCloudRetailV2alphaRuleForceReturnFacetAction(QString json);
    ~OAIGoogleCloudRetailV2alphaRuleForceReturnFacetAction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGoogleCloudRetailV2alphaRuleForceReturnFacetActionFacetPositionAdjustment> getFacetPositionAdjustments() const;
    void setFacetPositionAdjustments(const QList<OAIGoogleCloudRetailV2alphaRuleForceReturnFacetActionFacetPositionAdjustment> &facet_position_adjustments);
    bool is_facet_position_adjustments_Set() const;
    bool is_facet_position_adjustments_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGoogleCloudRetailV2alphaRuleForceReturnFacetActionFacetPositionAdjustment> m_facet_position_adjustments;
    bool m_facet_position_adjustments_isSet;
    bool m_facet_position_adjustments_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudRetailV2alphaRuleForceReturnFacetAction)

#endif // OAIGoogleCloudRetailV2alphaRuleForceReturnFacetAction_H
