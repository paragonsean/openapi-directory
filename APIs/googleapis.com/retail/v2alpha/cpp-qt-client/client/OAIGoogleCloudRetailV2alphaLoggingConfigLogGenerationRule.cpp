/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaLoggingConfigLogGenerationRule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaLoggingConfigLogGenerationRule::OAIGoogleCloudRetailV2alphaLoggingConfigLogGenerationRule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaLoggingConfigLogGenerationRule::OAIGoogleCloudRetailV2alphaLoggingConfigLogGenerationRule() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaLoggingConfigLogGenerationRule::~OAIGoogleCloudRetailV2alphaLoggingConfigLogGenerationRule() {}

void OAIGoogleCloudRetailV2alphaLoggingConfigLogGenerationRule::initializeModel() {

    m_info_log_sample_rate_isSet = false;
    m_info_log_sample_rate_isValid = false;

    m_logging_level_isSet = false;
    m_logging_level_isValid = false;
}

void OAIGoogleCloudRetailV2alphaLoggingConfigLogGenerationRule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaLoggingConfigLogGenerationRule::fromJsonObject(QJsonObject json) {

    m_info_log_sample_rate_isValid = ::OpenAPI::fromJsonValue(m_info_log_sample_rate, json[QString("infoLogSampleRate")]);
    m_info_log_sample_rate_isSet = !json[QString("infoLogSampleRate")].isNull() && m_info_log_sample_rate_isValid;

    m_logging_level_isValid = ::OpenAPI::fromJsonValue(m_logging_level, json[QString("loggingLevel")]);
    m_logging_level_isSet = !json[QString("loggingLevel")].isNull() && m_logging_level_isValid;
}

QString OAIGoogleCloudRetailV2alphaLoggingConfigLogGenerationRule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaLoggingConfigLogGenerationRule::asJsonObject() const {
    QJsonObject obj;
    if (m_info_log_sample_rate_isSet) {
        obj.insert(QString("infoLogSampleRate"), ::OpenAPI::toJsonValue(m_info_log_sample_rate));
    }
    if (m_logging_level_isSet) {
        obj.insert(QString("loggingLevel"), ::OpenAPI::toJsonValue(m_logging_level));
    }
    return obj;
}

float OAIGoogleCloudRetailV2alphaLoggingConfigLogGenerationRule::getInfoLogSampleRate() const {
    return m_info_log_sample_rate;
}
void OAIGoogleCloudRetailV2alphaLoggingConfigLogGenerationRule::setInfoLogSampleRate(const float &info_log_sample_rate) {
    m_info_log_sample_rate = info_log_sample_rate;
    m_info_log_sample_rate_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaLoggingConfigLogGenerationRule::is_info_log_sample_rate_Set() const{
    return m_info_log_sample_rate_isSet;
}

bool OAIGoogleCloudRetailV2alphaLoggingConfigLogGenerationRule::is_info_log_sample_rate_Valid() const{
    return m_info_log_sample_rate_isValid;
}

QString OAIGoogleCloudRetailV2alphaLoggingConfigLogGenerationRule::getLoggingLevel() const {
    return m_logging_level;
}
void OAIGoogleCloudRetailV2alphaLoggingConfigLogGenerationRule::setLoggingLevel(const QString &logging_level) {
    m_logging_level = logging_level;
    m_logging_level_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaLoggingConfigLogGenerationRule::is_logging_level_Set() const{
    return m_logging_level_isSet;
}

bool OAIGoogleCloudRetailV2alphaLoggingConfigLogGenerationRule::is_logging_level_Valid() const{
    return m_logging_level_isValid;
}

bool OAIGoogleCloudRetailV2alphaLoggingConfigLogGenerationRule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_info_log_sample_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_logging_level_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaLoggingConfigLogGenerationRule::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
