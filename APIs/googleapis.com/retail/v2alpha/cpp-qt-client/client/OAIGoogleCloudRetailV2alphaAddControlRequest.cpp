/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaAddControlRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaAddControlRequest::OAIGoogleCloudRetailV2alphaAddControlRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaAddControlRequest::OAIGoogleCloudRetailV2alphaAddControlRequest() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaAddControlRequest::~OAIGoogleCloudRetailV2alphaAddControlRequest() {}

void OAIGoogleCloudRetailV2alphaAddControlRequest::initializeModel() {

    m_control_id_isSet = false;
    m_control_id_isValid = false;
}

void OAIGoogleCloudRetailV2alphaAddControlRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaAddControlRequest::fromJsonObject(QJsonObject json) {

    m_control_id_isValid = ::OpenAPI::fromJsonValue(m_control_id, json[QString("controlId")]);
    m_control_id_isSet = !json[QString("controlId")].isNull() && m_control_id_isValid;
}

QString OAIGoogleCloudRetailV2alphaAddControlRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaAddControlRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_control_id_isSet) {
        obj.insert(QString("controlId"), ::OpenAPI::toJsonValue(m_control_id));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2alphaAddControlRequest::getControlId() const {
    return m_control_id;
}
void OAIGoogleCloudRetailV2alphaAddControlRequest::setControlId(const QString &control_id) {
    m_control_id = control_id;
    m_control_id_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaAddControlRequest::is_control_id_Set() const{
    return m_control_id_isSet;
}

bool OAIGoogleCloudRetailV2alphaAddControlRequest::is_control_id_Valid() const{
    return m_control_id_isValid;
}

bool OAIGoogleCloudRetailV2alphaAddControlRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_control_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaAddControlRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
