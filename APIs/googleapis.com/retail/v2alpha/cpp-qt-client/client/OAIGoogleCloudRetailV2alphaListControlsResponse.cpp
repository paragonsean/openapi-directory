/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaListControlsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaListControlsResponse::OAIGoogleCloudRetailV2alphaListControlsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaListControlsResponse::OAIGoogleCloudRetailV2alphaListControlsResponse() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaListControlsResponse::~OAIGoogleCloudRetailV2alphaListControlsResponse() {}

void OAIGoogleCloudRetailV2alphaListControlsResponse::initializeModel() {

    m_controls_isSet = false;
    m_controls_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;
}

void OAIGoogleCloudRetailV2alphaListControlsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaListControlsResponse::fromJsonObject(QJsonObject json) {

    m_controls_isValid = ::OpenAPI::fromJsonValue(m_controls, json[QString("controls")]);
    m_controls_isSet = !json[QString("controls")].isNull() && m_controls_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;
}

QString OAIGoogleCloudRetailV2alphaListControlsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaListControlsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_controls.size() > 0) {
        obj.insert(QString("controls"), ::OpenAPI::toJsonValue(m_controls));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    return obj;
}

QList<OAIGoogleCloudRetailV2alphaControl> OAIGoogleCloudRetailV2alphaListControlsResponse::getControls() const {
    return m_controls;
}
void OAIGoogleCloudRetailV2alphaListControlsResponse::setControls(const QList<OAIGoogleCloudRetailV2alphaControl> &controls) {
    m_controls = controls;
    m_controls_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaListControlsResponse::is_controls_Set() const{
    return m_controls_isSet;
}

bool OAIGoogleCloudRetailV2alphaListControlsResponse::is_controls_Valid() const{
    return m_controls_isValid;
}

QString OAIGoogleCloudRetailV2alphaListControlsResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIGoogleCloudRetailV2alphaListControlsResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaListControlsResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIGoogleCloudRetailV2alphaListControlsResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

bool OAIGoogleCloudRetailV2alphaListControlsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_controls.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaListControlsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
