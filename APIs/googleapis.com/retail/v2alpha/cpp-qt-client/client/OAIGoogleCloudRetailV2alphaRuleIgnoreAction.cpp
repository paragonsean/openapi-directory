/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaRuleIgnoreAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaRuleIgnoreAction::OAIGoogleCloudRetailV2alphaRuleIgnoreAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaRuleIgnoreAction::OAIGoogleCloudRetailV2alphaRuleIgnoreAction() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaRuleIgnoreAction::~OAIGoogleCloudRetailV2alphaRuleIgnoreAction() {}

void OAIGoogleCloudRetailV2alphaRuleIgnoreAction::initializeModel() {

    m_ignore_terms_isSet = false;
    m_ignore_terms_isValid = false;
}

void OAIGoogleCloudRetailV2alphaRuleIgnoreAction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaRuleIgnoreAction::fromJsonObject(QJsonObject json) {

    m_ignore_terms_isValid = ::OpenAPI::fromJsonValue(m_ignore_terms, json[QString("ignoreTerms")]);
    m_ignore_terms_isSet = !json[QString("ignoreTerms")].isNull() && m_ignore_terms_isValid;
}

QString OAIGoogleCloudRetailV2alphaRuleIgnoreAction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaRuleIgnoreAction::asJsonObject() const {
    QJsonObject obj;
    if (m_ignore_terms.size() > 0) {
        obj.insert(QString("ignoreTerms"), ::OpenAPI::toJsonValue(m_ignore_terms));
    }
    return obj;
}

QList<QString> OAIGoogleCloudRetailV2alphaRuleIgnoreAction::getIgnoreTerms() const {
    return m_ignore_terms;
}
void OAIGoogleCloudRetailV2alphaRuleIgnoreAction::setIgnoreTerms(const QList<QString> &ignore_terms) {
    m_ignore_terms = ignore_terms;
    m_ignore_terms_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaRuleIgnoreAction::is_ignore_terms_Set() const{
    return m_ignore_terms_isSet;
}

bool OAIGoogleCloudRetailV2alphaRuleIgnoreAction::is_ignore_terms_Valid() const{
    return m_ignore_terms_isValid;
}

bool OAIGoogleCloudRetailV2alphaRuleIgnoreAction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ignore_terms.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaRuleIgnoreAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
