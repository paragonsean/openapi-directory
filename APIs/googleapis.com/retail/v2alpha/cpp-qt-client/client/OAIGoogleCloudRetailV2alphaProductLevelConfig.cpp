/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaProductLevelConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaProductLevelConfig::OAIGoogleCloudRetailV2alphaProductLevelConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaProductLevelConfig::OAIGoogleCloudRetailV2alphaProductLevelConfig() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaProductLevelConfig::~OAIGoogleCloudRetailV2alphaProductLevelConfig() {}

void OAIGoogleCloudRetailV2alphaProductLevelConfig::initializeModel() {

    m_ingestion_product_type_isSet = false;
    m_ingestion_product_type_isValid = false;

    m_merchant_center_product_id_field_isSet = false;
    m_merchant_center_product_id_field_isValid = false;
}

void OAIGoogleCloudRetailV2alphaProductLevelConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaProductLevelConfig::fromJsonObject(QJsonObject json) {

    m_ingestion_product_type_isValid = ::OpenAPI::fromJsonValue(m_ingestion_product_type, json[QString("ingestionProductType")]);
    m_ingestion_product_type_isSet = !json[QString("ingestionProductType")].isNull() && m_ingestion_product_type_isValid;

    m_merchant_center_product_id_field_isValid = ::OpenAPI::fromJsonValue(m_merchant_center_product_id_field, json[QString("merchantCenterProductIdField")]);
    m_merchant_center_product_id_field_isSet = !json[QString("merchantCenterProductIdField")].isNull() && m_merchant_center_product_id_field_isValid;
}

QString OAIGoogleCloudRetailV2alphaProductLevelConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaProductLevelConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_ingestion_product_type_isSet) {
        obj.insert(QString("ingestionProductType"), ::OpenAPI::toJsonValue(m_ingestion_product_type));
    }
    if (m_merchant_center_product_id_field_isSet) {
        obj.insert(QString("merchantCenterProductIdField"), ::OpenAPI::toJsonValue(m_merchant_center_product_id_field));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2alphaProductLevelConfig::getIngestionProductType() const {
    return m_ingestion_product_type;
}
void OAIGoogleCloudRetailV2alphaProductLevelConfig::setIngestionProductType(const QString &ingestion_product_type) {
    m_ingestion_product_type = ingestion_product_type;
    m_ingestion_product_type_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaProductLevelConfig::is_ingestion_product_type_Set() const{
    return m_ingestion_product_type_isSet;
}

bool OAIGoogleCloudRetailV2alphaProductLevelConfig::is_ingestion_product_type_Valid() const{
    return m_ingestion_product_type_isValid;
}

QString OAIGoogleCloudRetailV2alphaProductLevelConfig::getMerchantCenterProductIdField() const {
    return m_merchant_center_product_id_field;
}
void OAIGoogleCloudRetailV2alphaProductLevelConfig::setMerchantCenterProductIdField(const QString &merchant_center_product_id_field) {
    m_merchant_center_product_id_field = merchant_center_product_id_field;
    m_merchant_center_product_id_field_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaProductLevelConfig::is_merchant_center_product_id_field_Set() const{
    return m_merchant_center_product_id_field_isSet;
}

bool OAIGoogleCloudRetailV2alphaProductLevelConfig::is_merchant_center_product_id_field_Valid() const{
    return m_merchant_center_product_id_field_isValid;
}

bool OAIGoogleCloudRetailV2alphaProductLevelConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ingestion_product_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_center_product_id_field_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaProductLevelConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
