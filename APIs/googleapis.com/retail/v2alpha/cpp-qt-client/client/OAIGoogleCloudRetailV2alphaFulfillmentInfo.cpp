/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaFulfillmentInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaFulfillmentInfo::OAIGoogleCloudRetailV2alphaFulfillmentInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaFulfillmentInfo::OAIGoogleCloudRetailV2alphaFulfillmentInfo() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaFulfillmentInfo::~OAIGoogleCloudRetailV2alphaFulfillmentInfo() {}

void OAIGoogleCloudRetailV2alphaFulfillmentInfo::initializeModel() {

    m_place_ids_isSet = false;
    m_place_ids_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIGoogleCloudRetailV2alphaFulfillmentInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaFulfillmentInfo::fromJsonObject(QJsonObject json) {

    m_place_ids_isValid = ::OpenAPI::fromJsonValue(m_place_ids, json[QString("placeIds")]);
    m_place_ids_isSet = !json[QString("placeIds")].isNull() && m_place_ids_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIGoogleCloudRetailV2alphaFulfillmentInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaFulfillmentInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_place_ids.size() > 0) {
        obj.insert(QString("placeIds"), ::OpenAPI::toJsonValue(m_place_ids));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QList<QString> OAIGoogleCloudRetailV2alphaFulfillmentInfo::getPlaceIds() const {
    return m_place_ids;
}
void OAIGoogleCloudRetailV2alphaFulfillmentInfo::setPlaceIds(const QList<QString> &place_ids) {
    m_place_ids = place_ids;
    m_place_ids_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaFulfillmentInfo::is_place_ids_Set() const{
    return m_place_ids_isSet;
}

bool OAIGoogleCloudRetailV2alphaFulfillmentInfo::is_place_ids_Valid() const{
    return m_place_ids_isValid;
}

QString OAIGoogleCloudRetailV2alphaFulfillmentInfo::getType() const {
    return m_type;
}
void OAIGoogleCloudRetailV2alphaFulfillmentInfo::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaFulfillmentInfo::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleCloudRetailV2alphaFulfillmentInfo::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIGoogleCloudRetailV2alphaFulfillmentInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_place_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaFulfillmentInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
