/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaCatalog.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaCatalog::OAIGoogleCloudRetailV2alphaCatalog(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaCatalog::OAIGoogleCloudRetailV2alphaCatalog() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaCatalog::~OAIGoogleCloudRetailV2alphaCatalog() {}

void OAIGoogleCloudRetailV2alphaCatalog::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_merchant_center_linking_config_isSet = false;
    m_merchant_center_linking_config_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_product_level_config_isSet = false;
    m_product_level_config_isValid = false;
}

void OAIGoogleCloudRetailV2alphaCatalog::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaCatalog::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_merchant_center_linking_config_isValid = ::OpenAPI::fromJsonValue(m_merchant_center_linking_config, json[QString("merchantCenterLinkingConfig")]);
    m_merchant_center_linking_config_isSet = !json[QString("merchantCenterLinkingConfig")].isNull() && m_merchant_center_linking_config_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_product_level_config_isValid = ::OpenAPI::fromJsonValue(m_product_level_config, json[QString("productLevelConfig")]);
    m_product_level_config_isSet = !json[QString("productLevelConfig")].isNull() && m_product_level_config_isValid;
}

QString OAIGoogleCloudRetailV2alphaCatalog::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaCatalog::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_merchant_center_linking_config.isSet()) {
        obj.insert(QString("merchantCenterLinkingConfig"), ::OpenAPI::toJsonValue(m_merchant_center_linking_config));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_product_level_config.isSet()) {
        obj.insert(QString("productLevelConfig"), ::OpenAPI::toJsonValue(m_product_level_config));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2alphaCatalog::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudRetailV2alphaCatalog::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaCatalog::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudRetailV2alphaCatalog::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIGoogleCloudRetailV2alphaMerchantCenterLinkingConfig OAIGoogleCloudRetailV2alphaCatalog::getMerchantCenterLinkingConfig() const {
    return m_merchant_center_linking_config;
}
void OAIGoogleCloudRetailV2alphaCatalog::setMerchantCenterLinkingConfig(const OAIGoogleCloudRetailV2alphaMerchantCenterLinkingConfig &merchant_center_linking_config) {
    m_merchant_center_linking_config = merchant_center_linking_config;
    m_merchant_center_linking_config_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaCatalog::is_merchant_center_linking_config_Set() const{
    return m_merchant_center_linking_config_isSet;
}

bool OAIGoogleCloudRetailV2alphaCatalog::is_merchant_center_linking_config_Valid() const{
    return m_merchant_center_linking_config_isValid;
}

QString OAIGoogleCloudRetailV2alphaCatalog::getName() const {
    return m_name;
}
void OAIGoogleCloudRetailV2alphaCatalog::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaCatalog::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudRetailV2alphaCatalog::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudRetailV2alphaProductLevelConfig OAIGoogleCloudRetailV2alphaCatalog::getProductLevelConfig() const {
    return m_product_level_config;
}
void OAIGoogleCloudRetailV2alphaCatalog::setProductLevelConfig(const OAIGoogleCloudRetailV2alphaProductLevelConfig &product_level_config) {
    m_product_level_config = product_level_config;
    m_product_level_config_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaCatalog::is_product_level_config_Set() const{
    return m_product_level_config_isSet;
}

bool OAIGoogleCloudRetailV2alphaCatalog::is_product_level_config_Valid() const{
    return m_product_level_config_isValid;
}

bool OAIGoogleCloudRetailV2alphaCatalog::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_center_linking_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_level_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaCatalog::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
