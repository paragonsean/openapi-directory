/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaExperimentInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaExperimentInfo::OAIGoogleCloudRetailV2alphaExperimentInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaExperimentInfo::OAIGoogleCloudRetailV2alphaExperimentInfo() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaExperimentInfo::~OAIGoogleCloudRetailV2alphaExperimentInfo() {}

void OAIGoogleCloudRetailV2alphaExperimentInfo::initializeModel() {

    m_experiment_isSet = false;
    m_experiment_isValid = false;

    m_serving_config_experiment_isSet = false;
    m_serving_config_experiment_isValid = false;
}

void OAIGoogleCloudRetailV2alphaExperimentInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaExperimentInfo::fromJsonObject(QJsonObject json) {

    m_experiment_isValid = ::OpenAPI::fromJsonValue(m_experiment, json[QString("experiment")]);
    m_experiment_isSet = !json[QString("experiment")].isNull() && m_experiment_isValid;

    m_serving_config_experiment_isValid = ::OpenAPI::fromJsonValue(m_serving_config_experiment, json[QString("servingConfigExperiment")]);
    m_serving_config_experiment_isSet = !json[QString("servingConfigExperiment")].isNull() && m_serving_config_experiment_isValid;
}

QString OAIGoogleCloudRetailV2alphaExperimentInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaExperimentInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_experiment_isSet) {
        obj.insert(QString("experiment"), ::OpenAPI::toJsonValue(m_experiment));
    }
    if (m_serving_config_experiment.isSet()) {
        obj.insert(QString("servingConfigExperiment"), ::OpenAPI::toJsonValue(m_serving_config_experiment));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2alphaExperimentInfo::getExperiment() const {
    return m_experiment;
}
void OAIGoogleCloudRetailV2alphaExperimentInfo::setExperiment(const QString &experiment) {
    m_experiment = experiment;
    m_experiment_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaExperimentInfo::is_experiment_Set() const{
    return m_experiment_isSet;
}

bool OAIGoogleCloudRetailV2alphaExperimentInfo::is_experiment_Valid() const{
    return m_experiment_isValid;
}

OAIGoogleCloudRetailV2alphaExperimentInfoServingConfigExperiment OAIGoogleCloudRetailV2alphaExperimentInfo::getServingConfigExperiment() const {
    return m_serving_config_experiment;
}
void OAIGoogleCloudRetailV2alphaExperimentInfo::setServingConfigExperiment(const OAIGoogleCloudRetailV2alphaExperimentInfoServingConfigExperiment &serving_config_experiment) {
    m_serving_config_experiment = serving_config_experiment;
    m_serving_config_experiment_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaExperimentInfo::is_serving_config_experiment_Set() const{
    return m_serving_config_experiment_isSet;
}

bool OAIGoogleCloudRetailV2alphaExperimentInfo::is_serving_config_experiment_Valid() const{
    return m_serving_config_experiment_isValid;
}

bool OAIGoogleCloudRetailV2alphaExperimentInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_experiment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_serving_config_experiment.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaExperimentInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
