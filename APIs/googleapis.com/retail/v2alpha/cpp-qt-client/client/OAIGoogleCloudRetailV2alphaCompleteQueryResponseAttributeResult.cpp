/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaCompleteQueryResponseAttributeResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaCompleteQueryResponseAttributeResult::OAIGoogleCloudRetailV2alphaCompleteQueryResponseAttributeResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaCompleteQueryResponseAttributeResult::OAIGoogleCloudRetailV2alphaCompleteQueryResponseAttributeResult() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaCompleteQueryResponseAttributeResult::~OAIGoogleCloudRetailV2alphaCompleteQueryResponseAttributeResult() {}

void OAIGoogleCloudRetailV2alphaCompleteQueryResponseAttributeResult::initializeModel() {

    m_suggestions_isSet = false;
    m_suggestions_isValid = false;
}

void OAIGoogleCloudRetailV2alphaCompleteQueryResponseAttributeResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaCompleteQueryResponseAttributeResult::fromJsonObject(QJsonObject json) {

    m_suggestions_isValid = ::OpenAPI::fromJsonValue(m_suggestions, json[QString("suggestions")]);
    m_suggestions_isSet = !json[QString("suggestions")].isNull() && m_suggestions_isValid;
}

QString OAIGoogleCloudRetailV2alphaCompleteQueryResponseAttributeResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaCompleteQueryResponseAttributeResult::asJsonObject() const {
    QJsonObject obj;
    if (m_suggestions.size() > 0) {
        obj.insert(QString("suggestions"), ::OpenAPI::toJsonValue(m_suggestions));
    }
    return obj;
}

QList<QString> OAIGoogleCloudRetailV2alphaCompleteQueryResponseAttributeResult::getSuggestions() const {
    return m_suggestions;
}
void OAIGoogleCloudRetailV2alphaCompleteQueryResponseAttributeResult::setSuggestions(const QList<QString> &suggestions) {
    m_suggestions = suggestions;
    m_suggestions_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaCompleteQueryResponseAttributeResult::is_suggestions_Set() const{
    return m_suggestions_isSet;
}

bool OAIGoogleCloudRetailV2alphaCompleteQueryResponseAttributeResult::is_suggestions_Valid() const{
    return m_suggestions_isValid;
}

bool OAIGoogleCloudRetailV2alphaCompleteQueryResponseAttributeResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_suggestions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaCompleteQueryResponseAttributeResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
