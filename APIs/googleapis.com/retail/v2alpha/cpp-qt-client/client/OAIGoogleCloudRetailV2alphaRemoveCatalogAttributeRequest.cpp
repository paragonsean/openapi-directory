/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaRemoveCatalogAttributeRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaRemoveCatalogAttributeRequest::OAIGoogleCloudRetailV2alphaRemoveCatalogAttributeRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaRemoveCatalogAttributeRequest::OAIGoogleCloudRetailV2alphaRemoveCatalogAttributeRequest() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaRemoveCatalogAttributeRequest::~OAIGoogleCloudRetailV2alphaRemoveCatalogAttributeRequest() {}

void OAIGoogleCloudRetailV2alphaRemoveCatalogAttributeRequest::initializeModel() {

    m_key_isSet = false;
    m_key_isValid = false;
}

void OAIGoogleCloudRetailV2alphaRemoveCatalogAttributeRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaRemoveCatalogAttributeRequest::fromJsonObject(QJsonObject json) {

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;
}

QString OAIGoogleCloudRetailV2alphaRemoveCatalogAttributeRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaRemoveCatalogAttributeRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2alphaRemoveCatalogAttributeRequest::getKey() const {
    return m_key;
}
void OAIGoogleCloudRetailV2alphaRemoveCatalogAttributeRequest::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaRemoveCatalogAttributeRequest::is_key_Set() const{
    return m_key_isSet;
}

bool OAIGoogleCloudRetailV2alphaRemoveCatalogAttributeRequest::is_key_Valid() const{
    return m_key_isValid;
}

bool OAIGoogleCloudRetailV2alphaRemoveCatalogAttributeRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaRemoveCatalogAttributeRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
