/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaAttributesConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaAttributesConfig::OAIGoogleCloudRetailV2alphaAttributesConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaAttributesConfig::OAIGoogleCloudRetailV2alphaAttributesConfig() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaAttributesConfig::~OAIGoogleCloudRetailV2alphaAttributesConfig() {}

void OAIGoogleCloudRetailV2alphaAttributesConfig::initializeModel() {

    m_attribute_config_level_isSet = false;
    m_attribute_config_level_isValid = false;

    m_catalog_attributes_isSet = false;
    m_catalog_attributes_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIGoogleCloudRetailV2alphaAttributesConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaAttributesConfig::fromJsonObject(QJsonObject json) {

    m_attribute_config_level_isValid = ::OpenAPI::fromJsonValue(m_attribute_config_level, json[QString("attributeConfigLevel")]);
    m_attribute_config_level_isSet = !json[QString("attributeConfigLevel")].isNull() && m_attribute_config_level_isValid;

    m_catalog_attributes_isValid = ::OpenAPI::fromJsonValue(m_catalog_attributes, json[QString("catalogAttributes")]);
    m_catalog_attributes_isSet = !json[QString("catalogAttributes")].isNull() && m_catalog_attributes_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIGoogleCloudRetailV2alphaAttributesConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaAttributesConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_attribute_config_level_isSet) {
        obj.insert(QString("attributeConfigLevel"), ::OpenAPI::toJsonValue(m_attribute_config_level));
    }
    if (m_catalog_attributes.size() > 0) {
        obj.insert(QString("catalogAttributes"), ::OpenAPI::toJsonValue(m_catalog_attributes));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2alphaAttributesConfig::getAttributeConfigLevel() const {
    return m_attribute_config_level;
}
void OAIGoogleCloudRetailV2alphaAttributesConfig::setAttributeConfigLevel(const QString &attribute_config_level) {
    m_attribute_config_level = attribute_config_level;
    m_attribute_config_level_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaAttributesConfig::is_attribute_config_level_Set() const{
    return m_attribute_config_level_isSet;
}

bool OAIGoogleCloudRetailV2alphaAttributesConfig::is_attribute_config_level_Valid() const{
    return m_attribute_config_level_isValid;
}

QMap<QString, OAIGoogleCloudRetailV2alphaCatalogAttribute> OAIGoogleCloudRetailV2alphaAttributesConfig::getCatalogAttributes() const {
    return m_catalog_attributes;
}
void OAIGoogleCloudRetailV2alphaAttributesConfig::setCatalogAttributes(const QMap<QString, OAIGoogleCloudRetailV2alphaCatalogAttribute> &catalog_attributes) {
    m_catalog_attributes = catalog_attributes;
    m_catalog_attributes_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaAttributesConfig::is_catalog_attributes_Set() const{
    return m_catalog_attributes_isSet;
}

bool OAIGoogleCloudRetailV2alphaAttributesConfig::is_catalog_attributes_Valid() const{
    return m_catalog_attributes_isValid;
}

QString OAIGoogleCloudRetailV2alphaAttributesConfig::getName() const {
    return m_name;
}
void OAIGoogleCloudRetailV2alphaAttributesConfig::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaAttributesConfig::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudRetailV2alphaAttributesConfig::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGoogleCloudRetailV2alphaAttributesConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribute_config_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_catalog_attributes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaAttributesConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
