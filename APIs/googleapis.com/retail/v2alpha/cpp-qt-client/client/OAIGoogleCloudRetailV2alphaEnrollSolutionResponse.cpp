/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaEnrollSolutionResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaEnrollSolutionResponse::OAIGoogleCloudRetailV2alphaEnrollSolutionResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaEnrollSolutionResponse::OAIGoogleCloudRetailV2alphaEnrollSolutionResponse() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaEnrollSolutionResponse::~OAIGoogleCloudRetailV2alphaEnrollSolutionResponse() {}

void OAIGoogleCloudRetailV2alphaEnrollSolutionResponse::initializeModel() {

    m_enrolled_solution_isSet = false;
    m_enrolled_solution_isValid = false;
}

void OAIGoogleCloudRetailV2alphaEnrollSolutionResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaEnrollSolutionResponse::fromJsonObject(QJsonObject json) {

    m_enrolled_solution_isValid = ::OpenAPI::fromJsonValue(m_enrolled_solution, json[QString("enrolledSolution")]);
    m_enrolled_solution_isSet = !json[QString("enrolledSolution")].isNull() && m_enrolled_solution_isValid;
}

QString OAIGoogleCloudRetailV2alphaEnrollSolutionResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaEnrollSolutionResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_enrolled_solution_isSet) {
        obj.insert(QString("enrolledSolution"), ::OpenAPI::toJsonValue(m_enrolled_solution));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2alphaEnrollSolutionResponse::getEnrolledSolution() const {
    return m_enrolled_solution;
}
void OAIGoogleCloudRetailV2alphaEnrollSolutionResponse::setEnrolledSolution(const QString &enrolled_solution) {
    m_enrolled_solution = enrolled_solution;
    m_enrolled_solution_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaEnrollSolutionResponse::is_enrolled_solution_Set() const{
    return m_enrolled_solution_isSet;
}

bool OAIGoogleCloudRetailV2alphaEnrollSolutionResponse::is_enrolled_solution_Valid() const{
    return m_enrolled_solution_isValid;
}

bool OAIGoogleCloudRetailV2alphaEnrollSolutionResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enrolled_solution_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaEnrollSolutionResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
