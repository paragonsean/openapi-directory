/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaExportAnalyticsMetricsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaExportAnalyticsMetricsRequest::OAIGoogleCloudRetailV2alphaExportAnalyticsMetricsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaExportAnalyticsMetricsRequest::OAIGoogleCloudRetailV2alphaExportAnalyticsMetricsRequest() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaExportAnalyticsMetricsRequest::~OAIGoogleCloudRetailV2alphaExportAnalyticsMetricsRequest() {}

void OAIGoogleCloudRetailV2alphaExportAnalyticsMetricsRequest::initializeModel() {

    m_filter_isSet = false;
    m_filter_isValid = false;

    m_output_config_isSet = false;
    m_output_config_isValid = false;
}

void OAIGoogleCloudRetailV2alphaExportAnalyticsMetricsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaExportAnalyticsMetricsRequest::fromJsonObject(QJsonObject json) {

    m_filter_isValid = ::OpenAPI::fromJsonValue(m_filter, json[QString("filter")]);
    m_filter_isSet = !json[QString("filter")].isNull() && m_filter_isValid;

    m_output_config_isValid = ::OpenAPI::fromJsonValue(m_output_config, json[QString("outputConfig")]);
    m_output_config_isSet = !json[QString("outputConfig")].isNull() && m_output_config_isValid;
}

QString OAIGoogleCloudRetailV2alphaExportAnalyticsMetricsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaExportAnalyticsMetricsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_filter_isSet) {
        obj.insert(QString("filter"), ::OpenAPI::toJsonValue(m_filter));
    }
    if (m_output_config.isSet()) {
        obj.insert(QString("outputConfig"), ::OpenAPI::toJsonValue(m_output_config));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2alphaExportAnalyticsMetricsRequest::getFilter() const {
    return m_filter;
}
void OAIGoogleCloudRetailV2alphaExportAnalyticsMetricsRequest::setFilter(const QString &filter) {
    m_filter = filter;
    m_filter_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaExportAnalyticsMetricsRequest::is_filter_Set() const{
    return m_filter_isSet;
}

bool OAIGoogleCloudRetailV2alphaExportAnalyticsMetricsRequest::is_filter_Valid() const{
    return m_filter_isValid;
}

OAIGoogleCloudRetailV2alphaOutputConfig OAIGoogleCloudRetailV2alphaExportAnalyticsMetricsRequest::getOutputConfig() const {
    return m_output_config;
}
void OAIGoogleCloudRetailV2alphaExportAnalyticsMetricsRequest::setOutputConfig(const OAIGoogleCloudRetailV2alphaOutputConfig &output_config) {
    m_output_config = output_config;
    m_output_config_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaExportAnalyticsMetricsRequest::is_output_config_Set() const{
    return m_output_config_isSet;
}

bool OAIGoogleCloudRetailV2alphaExportAnalyticsMetricsRequest::is_output_config_Valid() const{
    return m_output_config_isValid;
}

bool OAIGoogleCloudRetailV2alphaExportAnalyticsMetricsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_filter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaExportAnalyticsMetricsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
