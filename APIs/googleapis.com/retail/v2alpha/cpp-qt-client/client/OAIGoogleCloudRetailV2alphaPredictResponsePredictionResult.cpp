/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaPredictResponsePredictionResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaPredictResponsePredictionResult::OAIGoogleCloudRetailV2alphaPredictResponsePredictionResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaPredictResponsePredictionResult::OAIGoogleCloudRetailV2alphaPredictResponsePredictionResult() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaPredictResponsePredictionResult::~OAIGoogleCloudRetailV2alphaPredictResponsePredictionResult() {}

void OAIGoogleCloudRetailV2alphaPredictResponsePredictionResult::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;
}

void OAIGoogleCloudRetailV2alphaPredictResponsePredictionResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaPredictResponsePredictionResult::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;
}

QString OAIGoogleCloudRetailV2alphaPredictResponsePredictionResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaPredictResponsePredictionResult::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_metadata.size() > 0) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2alphaPredictResponsePredictionResult::getId() const {
    return m_id;
}
void OAIGoogleCloudRetailV2alphaPredictResponsePredictionResult::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaPredictResponsePredictionResult::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGoogleCloudRetailV2alphaPredictResponsePredictionResult::is_id_Valid() const{
    return m_id_isValid;
}

QMap<QString, QJsonValue> OAIGoogleCloudRetailV2alphaPredictResponsePredictionResult::getMetadata() const {
    return m_metadata;
}
void OAIGoogleCloudRetailV2alphaPredictResponsePredictionResult::setMetadata(const QMap<QString, QJsonValue> &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaPredictResponsePredictionResult::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIGoogleCloudRetailV2alphaPredictResponsePredictionResult::is_metadata_Valid() const{
    return m_metadata_isValid;
}

bool OAIGoogleCloudRetailV2alphaPredictResponsePredictionResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaPredictResponsePredictionResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
