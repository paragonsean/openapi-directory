/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec::OAIGoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec::OAIGoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec::~OAIGoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec() {}

void OAIGoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec::initializeModel() {

    m_boost_isSet = false;
    m_boost_isValid = false;

    m_condition_isSet = false;
    m_condition_isValid = false;
}

void OAIGoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec::fromJsonObject(QJsonObject json) {

    m_boost_isValid = ::OpenAPI::fromJsonValue(m_boost, json[QString("boost")]);
    m_boost_isSet = !json[QString("boost")].isNull() && m_boost_isValid;

    m_condition_isValid = ::OpenAPI::fromJsonValue(m_condition, json[QString("condition")]);
    m_condition_isSet = !json[QString("condition")].isNull() && m_condition_isValid;
}

QString OAIGoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_boost_isSet) {
        obj.insert(QString("boost"), ::OpenAPI::toJsonValue(m_boost));
    }
    if (m_condition_isSet) {
        obj.insert(QString("condition"), ::OpenAPI::toJsonValue(m_condition));
    }
    return obj;
}

float OAIGoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec::getBoost() const {
    return m_boost;
}
void OAIGoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec::setBoost(const float &boost) {
    m_boost = boost;
    m_boost_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec::is_boost_Set() const{
    return m_boost_isSet;
}

bool OAIGoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec::is_boost_Valid() const{
    return m_boost_isValid;
}

QString OAIGoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec::getCondition() const {
    return m_condition;
}
void OAIGoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec::setCondition(const QString &condition) {
    m_condition = condition;
    m_condition_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec::is_condition_Set() const{
    return m_condition_isSet;
}

bool OAIGoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec::is_condition_Valid() const{
    return m_condition_isValid;
}

bool OAIGoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_boost_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_condition_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
