/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaImage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaImage::OAIGoogleCloudRetailV2alphaImage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaImage::OAIGoogleCloudRetailV2alphaImage() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaImage::~OAIGoogleCloudRetailV2alphaImage() {}

void OAIGoogleCloudRetailV2alphaImage::initializeModel() {

    m_height_isSet = false;
    m_height_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;

    m_width_isSet = false;
    m_width_isValid = false;
}

void OAIGoogleCloudRetailV2alphaImage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaImage::fromJsonObject(QJsonObject json) {

    m_height_isValid = ::OpenAPI::fromJsonValue(m_height, json[QString("height")]);
    m_height_isSet = !json[QString("height")].isNull() && m_height_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;

    m_width_isValid = ::OpenAPI::fromJsonValue(m_width, json[QString("width")]);
    m_width_isSet = !json[QString("width")].isNull() && m_width_isValid;
}

QString OAIGoogleCloudRetailV2alphaImage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaImage::asJsonObject() const {
    QJsonObject obj;
    if (m_height_isSet) {
        obj.insert(QString("height"), ::OpenAPI::toJsonValue(m_height));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    if (m_width_isSet) {
        obj.insert(QString("width"), ::OpenAPI::toJsonValue(m_width));
    }
    return obj;
}

qint32 OAIGoogleCloudRetailV2alphaImage::getHeight() const {
    return m_height;
}
void OAIGoogleCloudRetailV2alphaImage::setHeight(const qint32 &height) {
    m_height = height;
    m_height_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaImage::is_height_Set() const{
    return m_height_isSet;
}

bool OAIGoogleCloudRetailV2alphaImage::is_height_Valid() const{
    return m_height_isValid;
}

QString OAIGoogleCloudRetailV2alphaImage::getUri() const {
    return m_uri;
}
void OAIGoogleCloudRetailV2alphaImage::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaImage::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIGoogleCloudRetailV2alphaImage::is_uri_Valid() const{
    return m_uri_isValid;
}

qint32 OAIGoogleCloudRetailV2alphaImage::getWidth() const {
    return m_width;
}
void OAIGoogleCloudRetailV2alphaImage::setWidth(const qint32 &width) {
    m_width = width;
    m_width_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaImage::is_width_Set() const{
    return m_width_isSet;
}

bool OAIGoogleCloudRetailV2alphaImage::is_width_Valid() const{
    return m_width_isValid;
}

bool OAIGoogleCloudRetailV2alphaImage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_height_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_width_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaImage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
