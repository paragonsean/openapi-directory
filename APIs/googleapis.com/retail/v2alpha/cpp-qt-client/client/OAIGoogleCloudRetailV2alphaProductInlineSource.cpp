/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaProductInlineSource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaProductInlineSource::OAIGoogleCloudRetailV2alphaProductInlineSource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaProductInlineSource::OAIGoogleCloudRetailV2alphaProductInlineSource() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaProductInlineSource::~OAIGoogleCloudRetailV2alphaProductInlineSource() {}

void OAIGoogleCloudRetailV2alphaProductInlineSource::initializeModel() {

    m_products_isSet = false;
    m_products_isValid = false;
}

void OAIGoogleCloudRetailV2alphaProductInlineSource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaProductInlineSource::fromJsonObject(QJsonObject json) {

    m_products_isValid = ::OpenAPI::fromJsonValue(m_products, json[QString("products")]);
    m_products_isSet = !json[QString("products")].isNull() && m_products_isValid;
}

QString OAIGoogleCloudRetailV2alphaProductInlineSource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaProductInlineSource::asJsonObject() const {
    QJsonObject obj;
    if (m_products.size() > 0) {
        obj.insert(QString("products"), ::OpenAPI::toJsonValue(m_products));
    }
    return obj;
}

QList<OAIGoogleCloudRetailV2alphaProduct> OAIGoogleCloudRetailV2alphaProductInlineSource::getProducts() const {
    return m_products;
}
void OAIGoogleCloudRetailV2alphaProductInlineSource::setProducts(const QList<OAIGoogleCloudRetailV2alphaProduct> &products) {
    m_products = products;
    m_products_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaProductInlineSource::is_products_Set() const{
    return m_products_isSet;
}

bool OAIGoogleCloudRetailV2alphaProductInlineSource::is_products_Valid() const{
    return m_products_isValid;
}

bool OAIGoogleCloudRetailV2alphaProductInlineSource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_products.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaProductInlineSource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
