/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaListMerchantCenterAccountLinksResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaListMerchantCenterAccountLinksResponse::OAIGoogleCloudRetailV2alphaListMerchantCenterAccountLinksResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaListMerchantCenterAccountLinksResponse::OAIGoogleCloudRetailV2alphaListMerchantCenterAccountLinksResponse() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaListMerchantCenterAccountLinksResponse::~OAIGoogleCloudRetailV2alphaListMerchantCenterAccountLinksResponse() {}

void OAIGoogleCloudRetailV2alphaListMerchantCenterAccountLinksResponse::initializeModel() {

    m_merchant_center_account_links_isSet = false;
    m_merchant_center_account_links_isValid = false;
}

void OAIGoogleCloudRetailV2alphaListMerchantCenterAccountLinksResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaListMerchantCenterAccountLinksResponse::fromJsonObject(QJsonObject json) {

    m_merchant_center_account_links_isValid = ::OpenAPI::fromJsonValue(m_merchant_center_account_links, json[QString("merchantCenterAccountLinks")]);
    m_merchant_center_account_links_isSet = !json[QString("merchantCenterAccountLinks")].isNull() && m_merchant_center_account_links_isValid;
}

QString OAIGoogleCloudRetailV2alphaListMerchantCenterAccountLinksResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaListMerchantCenterAccountLinksResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_merchant_center_account_links.size() > 0) {
        obj.insert(QString("merchantCenterAccountLinks"), ::OpenAPI::toJsonValue(m_merchant_center_account_links));
    }
    return obj;
}

QList<OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink> OAIGoogleCloudRetailV2alphaListMerchantCenterAccountLinksResponse::getMerchantCenterAccountLinks() const {
    return m_merchant_center_account_links;
}
void OAIGoogleCloudRetailV2alphaListMerchantCenterAccountLinksResponse::setMerchantCenterAccountLinks(const QList<OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink> &merchant_center_account_links) {
    m_merchant_center_account_links = merchant_center_account_links;
    m_merchant_center_account_links_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaListMerchantCenterAccountLinksResponse::is_merchant_center_account_links_Set() const{
    return m_merchant_center_account_links_isSet;
}

bool OAIGoogleCloudRetailV2alphaListMerchantCenterAccountLinksResponse::is_merchant_center_account_links_Valid() const{
    return m_merchant_center_account_links_isValid;
}

bool OAIGoogleCloudRetailV2alphaListMerchantCenterAccountLinksResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_merchant_center_account_links.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaListMerchantCenterAccountLinksResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
