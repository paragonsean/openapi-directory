/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2betaTuneModelMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2betaTuneModelMetadata::OAIGoogleCloudRetailV2betaTuneModelMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2betaTuneModelMetadata::OAIGoogleCloudRetailV2betaTuneModelMetadata() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2betaTuneModelMetadata::~OAIGoogleCloudRetailV2betaTuneModelMetadata() {}

void OAIGoogleCloudRetailV2betaTuneModelMetadata::initializeModel() {

    m_model_isSet = false;
    m_model_isValid = false;
}

void OAIGoogleCloudRetailV2betaTuneModelMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2betaTuneModelMetadata::fromJsonObject(QJsonObject json) {

    m_model_isValid = ::OpenAPI::fromJsonValue(m_model, json[QString("model")]);
    m_model_isSet = !json[QString("model")].isNull() && m_model_isValid;
}

QString OAIGoogleCloudRetailV2betaTuneModelMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2betaTuneModelMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_model_isSet) {
        obj.insert(QString("model"), ::OpenAPI::toJsonValue(m_model));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2betaTuneModelMetadata::getModel() const {
    return m_model;
}
void OAIGoogleCloudRetailV2betaTuneModelMetadata::setModel(const QString &model) {
    m_model = model;
    m_model_isSet = true;
}

bool OAIGoogleCloudRetailV2betaTuneModelMetadata::is_model_Set() const{
    return m_model_isSet;
}

bool OAIGoogleCloudRetailV2betaTuneModelMetadata::is_model_Valid() const{
    return m_model_isValid;
}

bool OAIGoogleCloudRetailV2betaTuneModelMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_model_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2betaTuneModelMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
