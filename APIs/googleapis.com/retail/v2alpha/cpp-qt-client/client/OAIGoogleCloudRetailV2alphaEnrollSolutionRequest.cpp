/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaEnrollSolutionRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaEnrollSolutionRequest::OAIGoogleCloudRetailV2alphaEnrollSolutionRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaEnrollSolutionRequest::OAIGoogleCloudRetailV2alphaEnrollSolutionRequest() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaEnrollSolutionRequest::~OAIGoogleCloudRetailV2alphaEnrollSolutionRequest() {}

void OAIGoogleCloudRetailV2alphaEnrollSolutionRequest::initializeModel() {

    m_solution_isSet = false;
    m_solution_isValid = false;
}

void OAIGoogleCloudRetailV2alphaEnrollSolutionRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaEnrollSolutionRequest::fromJsonObject(QJsonObject json) {

    m_solution_isValid = ::OpenAPI::fromJsonValue(m_solution, json[QString("solution")]);
    m_solution_isSet = !json[QString("solution")].isNull() && m_solution_isValid;
}

QString OAIGoogleCloudRetailV2alphaEnrollSolutionRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaEnrollSolutionRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_solution_isSet) {
        obj.insert(QString("solution"), ::OpenAPI::toJsonValue(m_solution));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2alphaEnrollSolutionRequest::getSolution() const {
    return m_solution;
}
void OAIGoogleCloudRetailV2alphaEnrollSolutionRequest::setSolution(const QString &solution) {
    m_solution = solution;
    m_solution_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaEnrollSolutionRequest::is_solution_Set() const{
    return m_solution_isSet;
}

bool OAIGoogleCloudRetailV2alphaEnrollSolutionRequest::is_solution_Valid() const{
    return m_solution_isValid;
}

bool OAIGoogleCloudRetailV2alphaEnrollSolutionRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_solution_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaEnrollSolutionRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
