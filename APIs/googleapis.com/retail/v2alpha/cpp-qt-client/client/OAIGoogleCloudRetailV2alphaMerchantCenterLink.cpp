/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaMerchantCenterLink.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaMerchantCenterLink::OAIGoogleCloudRetailV2alphaMerchantCenterLink(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaMerchantCenterLink::OAIGoogleCloudRetailV2alphaMerchantCenterLink() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaMerchantCenterLink::~OAIGoogleCloudRetailV2alphaMerchantCenterLink() {}

void OAIGoogleCloudRetailV2alphaMerchantCenterLink::initializeModel() {

    m_branch_id_isSet = false;
    m_branch_id_isValid = false;

    m_destinations_isSet = false;
    m_destinations_isValid = false;

    m_feeds_isSet = false;
    m_feeds_isValid = false;

    m_language_code_isSet = false;
    m_language_code_isValid = false;

    m_merchant_center_account_id_isSet = false;
    m_merchant_center_account_id_isValid = false;

    m_region_code_isSet = false;
    m_region_code_isValid = false;
}

void OAIGoogleCloudRetailV2alphaMerchantCenterLink::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaMerchantCenterLink::fromJsonObject(QJsonObject json) {

    m_branch_id_isValid = ::OpenAPI::fromJsonValue(m_branch_id, json[QString("branchId")]);
    m_branch_id_isSet = !json[QString("branchId")].isNull() && m_branch_id_isValid;

    m_destinations_isValid = ::OpenAPI::fromJsonValue(m_destinations, json[QString("destinations")]);
    m_destinations_isSet = !json[QString("destinations")].isNull() && m_destinations_isValid;

    m_feeds_isValid = ::OpenAPI::fromJsonValue(m_feeds, json[QString("feeds")]);
    m_feeds_isSet = !json[QString("feeds")].isNull() && m_feeds_isValid;

    m_language_code_isValid = ::OpenAPI::fromJsonValue(m_language_code, json[QString("languageCode")]);
    m_language_code_isSet = !json[QString("languageCode")].isNull() && m_language_code_isValid;

    m_merchant_center_account_id_isValid = ::OpenAPI::fromJsonValue(m_merchant_center_account_id, json[QString("merchantCenterAccountId")]);
    m_merchant_center_account_id_isSet = !json[QString("merchantCenterAccountId")].isNull() && m_merchant_center_account_id_isValid;

    m_region_code_isValid = ::OpenAPI::fromJsonValue(m_region_code, json[QString("regionCode")]);
    m_region_code_isSet = !json[QString("regionCode")].isNull() && m_region_code_isValid;
}

QString OAIGoogleCloudRetailV2alphaMerchantCenterLink::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaMerchantCenterLink::asJsonObject() const {
    QJsonObject obj;
    if (m_branch_id_isSet) {
        obj.insert(QString("branchId"), ::OpenAPI::toJsonValue(m_branch_id));
    }
    if (m_destinations.size() > 0) {
        obj.insert(QString("destinations"), ::OpenAPI::toJsonValue(m_destinations));
    }
    if (m_feeds.size() > 0) {
        obj.insert(QString("feeds"), ::OpenAPI::toJsonValue(m_feeds));
    }
    if (m_language_code_isSet) {
        obj.insert(QString("languageCode"), ::OpenAPI::toJsonValue(m_language_code));
    }
    if (m_merchant_center_account_id_isSet) {
        obj.insert(QString("merchantCenterAccountId"), ::OpenAPI::toJsonValue(m_merchant_center_account_id));
    }
    if (m_region_code_isSet) {
        obj.insert(QString("regionCode"), ::OpenAPI::toJsonValue(m_region_code));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2alphaMerchantCenterLink::getBranchId() const {
    return m_branch_id;
}
void OAIGoogleCloudRetailV2alphaMerchantCenterLink::setBranchId(const QString &branch_id) {
    m_branch_id = branch_id;
    m_branch_id_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterLink::is_branch_id_Set() const{
    return m_branch_id_isSet;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterLink::is_branch_id_Valid() const{
    return m_branch_id_isValid;
}

QList<QString> OAIGoogleCloudRetailV2alphaMerchantCenterLink::getDestinations() const {
    return m_destinations;
}
void OAIGoogleCloudRetailV2alphaMerchantCenterLink::setDestinations(const QList<QString> &destinations) {
    m_destinations = destinations;
    m_destinations_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterLink::is_destinations_Set() const{
    return m_destinations_isSet;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterLink::is_destinations_Valid() const{
    return m_destinations_isValid;
}

QList<OAIGoogleCloudRetailV2alphaMerchantCenterFeedFilter> OAIGoogleCloudRetailV2alphaMerchantCenterLink::getFeeds() const {
    return m_feeds;
}
void OAIGoogleCloudRetailV2alphaMerchantCenterLink::setFeeds(const QList<OAIGoogleCloudRetailV2alphaMerchantCenterFeedFilter> &feeds) {
    m_feeds = feeds;
    m_feeds_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterLink::is_feeds_Set() const{
    return m_feeds_isSet;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterLink::is_feeds_Valid() const{
    return m_feeds_isValid;
}

QString OAIGoogleCloudRetailV2alphaMerchantCenterLink::getLanguageCode() const {
    return m_language_code;
}
void OAIGoogleCloudRetailV2alphaMerchantCenterLink::setLanguageCode(const QString &language_code) {
    m_language_code = language_code;
    m_language_code_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterLink::is_language_code_Set() const{
    return m_language_code_isSet;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterLink::is_language_code_Valid() const{
    return m_language_code_isValid;
}

QString OAIGoogleCloudRetailV2alphaMerchantCenterLink::getMerchantCenterAccountId() const {
    return m_merchant_center_account_id;
}
void OAIGoogleCloudRetailV2alphaMerchantCenterLink::setMerchantCenterAccountId(const QString &merchant_center_account_id) {
    m_merchant_center_account_id = merchant_center_account_id;
    m_merchant_center_account_id_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterLink::is_merchant_center_account_id_Set() const{
    return m_merchant_center_account_id_isSet;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterLink::is_merchant_center_account_id_Valid() const{
    return m_merchant_center_account_id_isValid;
}

QString OAIGoogleCloudRetailV2alphaMerchantCenterLink::getRegionCode() const {
    return m_region_code;
}
void OAIGoogleCloudRetailV2alphaMerchantCenterLink::setRegionCode(const QString &region_code) {
    m_region_code = region_code;
    m_region_code_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterLink::is_region_code_Set() const{
    return m_region_code_isSet;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterLink::is_region_code_Valid() const{
    return m_region_code_isValid;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterLink::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_branch_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destinations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_feeds.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_center_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_region_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterLink::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
