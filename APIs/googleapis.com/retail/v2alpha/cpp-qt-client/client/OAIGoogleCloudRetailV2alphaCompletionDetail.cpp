/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaCompletionDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaCompletionDetail::OAIGoogleCloudRetailV2alphaCompletionDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaCompletionDetail::OAIGoogleCloudRetailV2alphaCompletionDetail() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaCompletionDetail::~OAIGoogleCloudRetailV2alphaCompletionDetail() {}

void OAIGoogleCloudRetailV2alphaCompletionDetail::initializeModel() {

    m_completion_attribution_token_isSet = false;
    m_completion_attribution_token_isValid = false;

    m_selected_position_isSet = false;
    m_selected_position_isValid = false;

    m_selected_suggestion_isSet = false;
    m_selected_suggestion_isValid = false;
}

void OAIGoogleCloudRetailV2alphaCompletionDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaCompletionDetail::fromJsonObject(QJsonObject json) {

    m_completion_attribution_token_isValid = ::OpenAPI::fromJsonValue(m_completion_attribution_token, json[QString("completionAttributionToken")]);
    m_completion_attribution_token_isSet = !json[QString("completionAttributionToken")].isNull() && m_completion_attribution_token_isValid;

    m_selected_position_isValid = ::OpenAPI::fromJsonValue(m_selected_position, json[QString("selectedPosition")]);
    m_selected_position_isSet = !json[QString("selectedPosition")].isNull() && m_selected_position_isValid;

    m_selected_suggestion_isValid = ::OpenAPI::fromJsonValue(m_selected_suggestion, json[QString("selectedSuggestion")]);
    m_selected_suggestion_isSet = !json[QString("selectedSuggestion")].isNull() && m_selected_suggestion_isValid;
}

QString OAIGoogleCloudRetailV2alphaCompletionDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaCompletionDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_completion_attribution_token_isSet) {
        obj.insert(QString("completionAttributionToken"), ::OpenAPI::toJsonValue(m_completion_attribution_token));
    }
    if (m_selected_position_isSet) {
        obj.insert(QString("selectedPosition"), ::OpenAPI::toJsonValue(m_selected_position));
    }
    if (m_selected_suggestion_isSet) {
        obj.insert(QString("selectedSuggestion"), ::OpenAPI::toJsonValue(m_selected_suggestion));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2alphaCompletionDetail::getCompletionAttributionToken() const {
    return m_completion_attribution_token;
}
void OAIGoogleCloudRetailV2alphaCompletionDetail::setCompletionAttributionToken(const QString &completion_attribution_token) {
    m_completion_attribution_token = completion_attribution_token;
    m_completion_attribution_token_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaCompletionDetail::is_completion_attribution_token_Set() const{
    return m_completion_attribution_token_isSet;
}

bool OAIGoogleCloudRetailV2alphaCompletionDetail::is_completion_attribution_token_Valid() const{
    return m_completion_attribution_token_isValid;
}

qint32 OAIGoogleCloudRetailV2alphaCompletionDetail::getSelectedPosition() const {
    return m_selected_position;
}
void OAIGoogleCloudRetailV2alphaCompletionDetail::setSelectedPosition(const qint32 &selected_position) {
    m_selected_position = selected_position;
    m_selected_position_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaCompletionDetail::is_selected_position_Set() const{
    return m_selected_position_isSet;
}

bool OAIGoogleCloudRetailV2alphaCompletionDetail::is_selected_position_Valid() const{
    return m_selected_position_isValid;
}

QString OAIGoogleCloudRetailV2alphaCompletionDetail::getSelectedSuggestion() const {
    return m_selected_suggestion;
}
void OAIGoogleCloudRetailV2alphaCompletionDetail::setSelectedSuggestion(const QString &selected_suggestion) {
    m_selected_suggestion = selected_suggestion;
    m_selected_suggestion_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaCompletionDetail::is_selected_suggestion_Set() const{
    return m_selected_suggestion_isSet;
}

bool OAIGoogleCloudRetailV2alphaCompletionDetail::is_selected_suggestion_Valid() const{
    return m_selected_suggestion_isValid;
}

bool OAIGoogleCloudRetailV2alphaCompletionDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_completion_attribution_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_selected_position_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_selected_suggestion_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaCompletionDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
