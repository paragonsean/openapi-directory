/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaAddCatalogAttributeRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaAddCatalogAttributeRequest::OAIGoogleCloudRetailV2alphaAddCatalogAttributeRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaAddCatalogAttributeRequest::OAIGoogleCloudRetailV2alphaAddCatalogAttributeRequest() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaAddCatalogAttributeRequest::~OAIGoogleCloudRetailV2alphaAddCatalogAttributeRequest() {}

void OAIGoogleCloudRetailV2alphaAddCatalogAttributeRequest::initializeModel() {

    m_catalog_attribute_isSet = false;
    m_catalog_attribute_isValid = false;
}

void OAIGoogleCloudRetailV2alphaAddCatalogAttributeRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaAddCatalogAttributeRequest::fromJsonObject(QJsonObject json) {

    m_catalog_attribute_isValid = ::OpenAPI::fromJsonValue(m_catalog_attribute, json[QString("catalogAttribute")]);
    m_catalog_attribute_isSet = !json[QString("catalogAttribute")].isNull() && m_catalog_attribute_isValid;
}

QString OAIGoogleCloudRetailV2alphaAddCatalogAttributeRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaAddCatalogAttributeRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_catalog_attribute.isSet()) {
        obj.insert(QString("catalogAttribute"), ::OpenAPI::toJsonValue(m_catalog_attribute));
    }
    return obj;
}

OAIGoogleCloudRetailV2alphaCatalogAttribute OAIGoogleCloudRetailV2alphaAddCatalogAttributeRequest::getCatalogAttribute() const {
    return m_catalog_attribute;
}
void OAIGoogleCloudRetailV2alphaAddCatalogAttributeRequest::setCatalogAttribute(const OAIGoogleCloudRetailV2alphaCatalogAttribute &catalog_attribute) {
    m_catalog_attribute = catalog_attribute;
    m_catalog_attribute_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaAddCatalogAttributeRequest::is_catalog_attribute_Set() const{
    return m_catalog_attribute_isSet;
}

bool OAIGoogleCloudRetailV2alphaAddCatalogAttributeRequest::is_catalog_attribute_Valid() const{
    return m_catalog_attribute_isValid;
}

bool OAIGoogleCloudRetailV2alphaAddCatalogAttributeRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_catalog_attribute.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaAddCatalogAttributeRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
