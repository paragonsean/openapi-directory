/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaSearchRequestPersonalizationSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaSearchRequestPersonalizationSpec::OAIGoogleCloudRetailV2alphaSearchRequestPersonalizationSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaSearchRequestPersonalizationSpec::OAIGoogleCloudRetailV2alphaSearchRequestPersonalizationSpec() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaSearchRequestPersonalizationSpec::~OAIGoogleCloudRetailV2alphaSearchRequestPersonalizationSpec() {}

void OAIGoogleCloudRetailV2alphaSearchRequestPersonalizationSpec::initializeModel() {

    m_mode_isSet = false;
    m_mode_isValid = false;
}

void OAIGoogleCloudRetailV2alphaSearchRequestPersonalizationSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaSearchRequestPersonalizationSpec::fromJsonObject(QJsonObject json) {

    m_mode_isValid = ::OpenAPI::fromJsonValue(m_mode, json[QString("mode")]);
    m_mode_isSet = !json[QString("mode")].isNull() && m_mode_isValid;
}

QString OAIGoogleCloudRetailV2alphaSearchRequestPersonalizationSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaSearchRequestPersonalizationSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_mode_isSet) {
        obj.insert(QString("mode"), ::OpenAPI::toJsonValue(m_mode));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2alphaSearchRequestPersonalizationSpec::getMode() const {
    return m_mode;
}
void OAIGoogleCloudRetailV2alphaSearchRequestPersonalizationSpec::setMode(const QString &mode) {
    m_mode = mode;
    m_mode_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaSearchRequestPersonalizationSpec::is_mode_Set() const{
    return m_mode_isSet;
}

bool OAIGoogleCloudRetailV2alphaSearchRequestPersonalizationSpec::is_mode_Valid() const{
    return m_mode_isValid;
}

bool OAIGoogleCloudRetailV2alphaSearchRequestPersonalizationSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_mode_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaSearchRequestPersonalizationSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
