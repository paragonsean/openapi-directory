/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig::OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig::OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig::~OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig() {}

void OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig::initializeModel() {

    m_page_optimization_event_type_isSet = false;
    m_page_optimization_event_type_isValid = false;

    m_panels_isSet = false;
    m_panels_isValid = false;

    m_restriction_isSet = false;
    m_restriction_isValid = false;
}

void OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig::fromJsonObject(QJsonObject json) {

    m_page_optimization_event_type_isValid = ::OpenAPI::fromJsonValue(m_page_optimization_event_type, json[QString("pageOptimizationEventType")]);
    m_page_optimization_event_type_isSet = !json[QString("pageOptimizationEventType")].isNull() && m_page_optimization_event_type_isValid;

    m_panels_isValid = ::OpenAPI::fromJsonValue(m_panels, json[QString("panels")]);
    m_panels_isSet = !json[QString("panels")].isNull() && m_panels_isValid;

    m_restriction_isValid = ::OpenAPI::fromJsonValue(m_restriction, json[QString("restriction")]);
    m_restriction_isSet = !json[QString("restriction")].isNull() && m_restriction_isValid;
}

QString OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_page_optimization_event_type_isSet) {
        obj.insert(QString("pageOptimizationEventType"), ::OpenAPI::toJsonValue(m_page_optimization_event_type));
    }
    if (m_panels.size() > 0) {
        obj.insert(QString("panels"), ::OpenAPI::toJsonValue(m_panels));
    }
    if (m_restriction_isSet) {
        obj.insert(QString("restriction"), ::OpenAPI::toJsonValue(m_restriction));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig::getPageOptimizationEventType() const {
    return m_page_optimization_event_type;
}
void OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig::setPageOptimizationEventType(const QString &page_optimization_event_type) {
    m_page_optimization_event_type = page_optimization_event_type;
    m_page_optimization_event_type_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig::is_page_optimization_event_type_Set() const{
    return m_page_optimization_event_type_isSet;
}

bool OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig::is_page_optimization_event_type_Valid() const{
    return m_page_optimization_event_type_isValid;
}

QList<OAIGoogleCloudRetailV2alphaModelPageOptimizationConfigPanel> OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig::getPanels() const {
    return m_panels;
}
void OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig::setPanels(const QList<OAIGoogleCloudRetailV2alphaModelPageOptimizationConfigPanel> &panels) {
    m_panels = panels;
    m_panels_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig::is_panels_Set() const{
    return m_panels_isSet;
}

bool OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig::is_panels_Valid() const{
    return m_panels_isValid;
}

QString OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig::getRestriction() const {
    return m_restriction;
}
void OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig::setRestriction(const QString &restriction) {
    m_restriction = restriction;
    m_restriction_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig::is_restriction_Set() const{
    return m_restriction_isSet;
}

bool OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig::is_restriction_Valid() const{
    return m_restriction_isValid;
}

bool OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_page_optimization_event_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_panels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_restriction_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaModelPageOptimizationConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
