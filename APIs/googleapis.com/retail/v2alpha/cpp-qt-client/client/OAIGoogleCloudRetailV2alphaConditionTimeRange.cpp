/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaConditionTimeRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaConditionTimeRange::OAIGoogleCloudRetailV2alphaConditionTimeRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaConditionTimeRange::OAIGoogleCloudRetailV2alphaConditionTimeRange() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaConditionTimeRange::~OAIGoogleCloudRetailV2alphaConditionTimeRange() {}

void OAIGoogleCloudRetailV2alphaConditionTimeRange::initializeModel() {

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;
}

void OAIGoogleCloudRetailV2alphaConditionTimeRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaConditionTimeRange::fromJsonObject(QJsonObject json) {

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;
}

QString OAIGoogleCloudRetailV2alphaConditionTimeRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaConditionTimeRange::asJsonObject() const {
    QJsonObject obj;
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2alphaConditionTimeRange::getEndTime() const {
    return m_end_time;
}
void OAIGoogleCloudRetailV2alphaConditionTimeRange::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaConditionTimeRange::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleCloudRetailV2alphaConditionTimeRange::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIGoogleCloudRetailV2alphaConditionTimeRange::getStartTime() const {
    return m_start_time;
}
void OAIGoogleCloudRetailV2alphaConditionTimeRange::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaConditionTimeRange::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleCloudRetailV2alphaConditionTimeRange::is_start_time_Valid() const{
    return m_start_time_isValid;
}

bool OAIGoogleCloudRetailV2alphaConditionTimeRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaConditionTimeRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
