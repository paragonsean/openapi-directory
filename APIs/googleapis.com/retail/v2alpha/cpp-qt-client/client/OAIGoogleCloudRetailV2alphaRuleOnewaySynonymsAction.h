/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudRetailV2alphaRuleOnewaySynonymsAction.h
 *
 * Maps a set of terms to a set of synonyms. Set of synonyms will be treated as synonyms of each query term only. &#x60;query_terms&#x60; will not be treated as synonyms of each other. Example: \&quot;sneakers\&quot; will use a synonym of \&quot;shoes\&quot;. \&quot;shoes\&quot; will not use a synonym of \&quot;sneakers\&quot;.
 */

#ifndef OAIGoogleCloudRetailV2alphaRuleOnewaySynonymsAction_H
#define OAIGoogleCloudRetailV2alphaRuleOnewaySynonymsAction_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudRetailV2alphaRuleOnewaySynonymsAction : public OAIObject {
public:
    OAIGoogleCloudRetailV2alphaRuleOnewaySynonymsAction();
    OAIGoogleCloudRetailV2alphaRuleOnewaySynonymsAction(QString json);
    ~OAIGoogleCloudRetailV2alphaRuleOnewaySynonymsAction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getOnewayTerms() const;
    void setOnewayTerms(const QList<QString> &oneway_terms);
    bool is_oneway_terms_Set() const;
    bool is_oneway_terms_Valid() const;

    QList<QString> getQueryTerms() const;
    void setQueryTerms(const QList<QString> &query_terms);
    bool is_query_terms_Set() const;
    bool is_query_terms_Valid() const;

    QList<QString> getSynonyms() const;
    void setSynonyms(const QList<QString> &synonyms);
    bool is_synonyms_Set() const;
    bool is_synonyms_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_oneway_terms;
    bool m_oneway_terms_isSet;
    bool m_oneway_terms_isValid;

    QList<QString> m_query_terms;
    bool m_query_terms_isSet;
    bool m_query_terms_isValid;

    QList<QString> m_synonyms;
    bool m_synonyms_isSet;
    bool m_synonyms_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudRetailV2alphaRuleOnewaySynonymsAction)

#endif // OAIGoogleCloudRetailV2alphaRuleOnewaySynonymsAction_H
