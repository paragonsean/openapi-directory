/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudRetailV2alphaMerchantCenterFeedFilter from './GoogleCloudRetailV2alphaMerchantCenterFeedFilter';

/**
 * The GoogleCloudRetailV2alphaMerchantCenterLink model module.
 * @module model/GoogleCloudRetailV2alphaMerchantCenterLink
 * @version v2alpha
 */
class GoogleCloudRetailV2alphaMerchantCenterLink {
    /**
     * Constructs a new <code>GoogleCloudRetailV2alphaMerchantCenterLink</code>.
     * Represents a link between a Merchant Center account and a branch. After a link is established, products from the linked Merchant Center account are streamed to the linked branch.
     * @alias module:model/GoogleCloudRetailV2alphaMerchantCenterLink
     */
    constructor() { 
        
        GoogleCloudRetailV2alphaMerchantCenterLink.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRetailV2alphaMerchantCenterLink</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRetailV2alphaMerchantCenterLink} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRetailV2alphaMerchantCenterLink} The populated <code>GoogleCloudRetailV2alphaMerchantCenterLink</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRetailV2alphaMerchantCenterLink();

            if (data.hasOwnProperty('branchId')) {
                obj['branchId'] = ApiClient.convertToType(data['branchId'], 'String');
            }
            if (data.hasOwnProperty('destinations')) {
                obj['destinations'] = ApiClient.convertToType(data['destinations'], ['String']);
            }
            if (data.hasOwnProperty('feeds')) {
                obj['feeds'] = ApiClient.convertToType(data['feeds'], [GoogleCloudRetailV2alphaMerchantCenterFeedFilter]);
            }
            if (data.hasOwnProperty('languageCode')) {
                obj['languageCode'] = ApiClient.convertToType(data['languageCode'], 'String');
            }
            if (data.hasOwnProperty('merchantCenterAccountId')) {
                obj['merchantCenterAccountId'] = ApiClient.convertToType(data['merchantCenterAccountId'], 'String');
            }
            if (data.hasOwnProperty('regionCode')) {
                obj['regionCode'] = ApiClient.convertToType(data['regionCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRetailV2alphaMerchantCenterLink</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRetailV2alphaMerchantCenterLink</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['branchId'] && !(typeof data['branchId'] === 'string' || data['branchId'] instanceof String)) {
            throw new Error("Expected the field `branchId` to be a primitive type in the JSON string but got " + data['branchId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['destinations'])) {
            throw new Error("Expected the field `destinations` to be an array in the JSON data but got " + data['destinations']);
        }
        if (data['feeds']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['feeds'])) {
                throw new Error("Expected the field `feeds` to be an array in the JSON data but got " + data['feeds']);
            }
            // validate the optional field `feeds` (array)
            for (const item of data['feeds']) {
                GoogleCloudRetailV2alphaMerchantCenterFeedFilter.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['languageCode'] && !(typeof data['languageCode'] === 'string' || data['languageCode'] instanceof String)) {
            throw new Error("Expected the field `languageCode` to be a primitive type in the JSON string but got " + data['languageCode']);
        }
        // ensure the json data is a string
        if (data['merchantCenterAccountId'] && !(typeof data['merchantCenterAccountId'] === 'string' || data['merchantCenterAccountId'] instanceof String)) {
            throw new Error("Expected the field `merchantCenterAccountId` to be a primitive type in the JSON string but got " + data['merchantCenterAccountId']);
        }
        // ensure the json data is a string
        if (data['regionCode'] && !(typeof data['regionCode'] === 'string' || data['regionCode'] instanceof String)) {
            throw new Error("Expected the field `regionCode` to be a primitive type in the JSON string but got " + data['regionCode']);
        }

        return true;
    }


}



/**
 * The branch ID (e.g. 0/1/2) within this catalog that products from merchant_center_account_id are streamed to. When updating this field, an empty value will use the currently configured default branch. However, changing the default branch later on won't change the linked branch here. A single branch ID can only have one linked Merchant Center account ID.
 * @member {String} branchId
 */
GoogleCloudRetailV2alphaMerchantCenterLink.prototype['branchId'] = undefined;

/**
 * String representing the destination to import for, all if left empty. List of possible values is given in [Included destination](https://support.google.com/merchants/answer/7501026). List of allowed string values: \"Shopping_ads\", \"Buy_on_google_listings\", \"Display_ads\", \"Local_inventory _ads\", \"Free_listings\", \"Free_local_listings\" NOTE: The string values are case sensitive.
 * @member {Array.<String>} destinations
 */
GoogleCloudRetailV2alphaMerchantCenterLink.prototype['destinations'] = undefined;

/**
 * Criteria for the Merchant Center feeds to be ingested via the link. All offers will be ingested if the list is empty. Otherwise the offers will be ingested from selected feeds.
 * @member {Array.<module:model/GoogleCloudRetailV2alphaMerchantCenterFeedFilter>} feeds
 */
GoogleCloudRetailV2alphaMerchantCenterLink.prototype['feeds'] = undefined;

/**
 * Language of the title/description and other string attributes. Use language tags defined by [BCP 47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). ISO 639-1. This specifies the language of offers in Merchant Center that will be accepted. If empty no language filtering will be performed. Example value: `en`.
 * @member {String} languageCode
 */
GoogleCloudRetailV2alphaMerchantCenterLink.prototype['languageCode'] = undefined;

/**
 * Required. The linked [Merchant Center account ID](https://developers.google.com/shopping-content/guides/accountstatuses). The account must be a standalone account or a sub-account of a MCA.
 * @member {String} merchantCenterAccountId
 */
GoogleCloudRetailV2alphaMerchantCenterLink.prototype['merchantCenterAccountId'] = undefined;

/**
 * Region code of offers to accept. 2-letter Uppercase ISO 3166-1 alpha-2 code. List of values can be found [here](https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry) under the `region` tag. If left blank no region filtering will be performed. Example value: `US`.
 * @member {String} regionCode
 */
GoogleCloudRetailV2alphaMerchantCenterLink.prototype['regionCode'] = undefined;






export default GoogleCloudRetailV2alphaMerchantCenterLink;

