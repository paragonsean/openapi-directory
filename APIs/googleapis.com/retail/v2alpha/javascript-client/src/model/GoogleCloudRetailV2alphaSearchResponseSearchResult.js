/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudRetailV2alphaProduct from './GoogleCloudRetailV2alphaProduct';

/**
 * The GoogleCloudRetailV2alphaSearchResponseSearchResult model module.
 * @module model/GoogleCloudRetailV2alphaSearchResponseSearchResult
 * @version v2alpha
 */
class GoogleCloudRetailV2alphaSearchResponseSearchResult {
    /**
     * Constructs a new <code>GoogleCloudRetailV2alphaSearchResponseSearchResult</code>.
     * Represents the search results.
     * @alias module:model/GoogleCloudRetailV2alphaSearchResponseSearchResult
     */
    constructor() { 
        
        GoogleCloudRetailV2alphaSearchResponseSearchResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRetailV2alphaSearchResponseSearchResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRetailV2alphaSearchResponseSearchResult} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRetailV2alphaSearchResponseSearchResult} The populated <code>GoogleCloudRetailV2alphaSearchResponseSearchResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRetailV2alphaSearchResponseSearchResult();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('matchingVariantCount')) {
                obj['matchingVariantCount'] = ApiClient.convertToType(data['matchingVariantCount'], 'Number');
            }
            if (data.hasOwnProperty('matchingVariantFields')) {
                obj['matchingVariantFields'] = ApiClient.convertToType(data['matchingVariantFields'], {'String': 'String'});
            }
            if (data.hasOwnProperty('personalLabels')) {
                obj['personalLabels'] = ApiClient.convertToType(data['personalLabels'], ['String']);
            }
            if (data.hasOwnProperty('product')) {
                obj['product'] = GoogleCloudRetailV2alphaProduct.constructFromObject(data['product']);
            }
            if (data.hasOwnProperty('variantRollupValues')) {
                obj['variantRollupValues'] = ApiClient.convertToType(data['variantRollupValues'], {'String': Object});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRetailV2alphaSearchResponseSearchResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRetailV2alphaSearchResponseSearchResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['personalLabels'])) {
            throw new Error("Expected the field `personalLabels` to be an array in the JSON data but got " + data['personalLabels']);
        }
        // validate the optional field `product`
        if (data['product']) { // data not null
          GoogleCloudRetailV2alphaProduct.validateJSON(data['product']);
        }

        return true;
    }


}



/**
 * Product.id of the searched Product.
 * @member {String} id
 */
GoogleCloudRetailV2alphaSearchResponseSearchResult.prototype['id'] = undefined;

/**
 * The count of matched variant Products.
 * @member {Number} matchingVariantCount
 */
GoogleCloudRetailV2alphaSearchResponseSearchResult.prototype['matchingVariantCount'] = undefined;

/**
 * If a variant Product matches the search query, this map indicates which Product fields are matched. The key is the Product.name, the value is a field mask of the matched Product fields. If matched attributes cannot be determined, this map will be empty. For example, a key \"sku1\" with field mask \"products.color_info\" indicates there is a match between \"sku1\" ColorInfo and the query.
 * @member {Object.<String, String>} matchingVariantFields
 */
GoogleCloudRetailV2alphaSearchResponseSearchResult.prototype['matchingVariantFields'] = undefined;

/**
 * Specifies previous events related to this product for this user based on UserEvent with same SearchRequest.visitor_id or UserInfo.user_id. This is set only when SearchRequest.PersonalizationSpec.mode is SearchRequest.PersonalizationSpec.Mode.AUTO. Possible values: * `purchased`: Indicates that this product has been purchased before.
 * @member {Array.<String>} personalLabels
 */
GoogleCloudRetailV2alphaSearchResponseSearchResult.prototype['personalLabels'] = undefined;

/**
 * @member {module:model/GoogleCloudRetailV2alphaProduct} product
 */
GoogleCloudRetailV2alphaSearchResponseSearchResult.prototype['product'] = undefined;

/**
 * The rollup matching variant Product attributes. The key is one of the SearchRequest.variant_rollup_keys. The values are the merged and de-duplicated Product attributes. Notice that the rollup values are respect filter. For example, when filtering by \"colorFamilies:ANY(\\\"red\\\")\" and rollup \"colorFamilies\", only \"red\" is returned. For textual and numerical attributes, the rollup values is a list of string or double values with type google.protobuf.ListValue. For example, if there are two variants with colors \"red\" and \"blue\", the rollup values are { key: \"colorFamilies\" value { list_value { values { string_value: \"red\" } values { string_value: \"blue\" } } } } For FulfillmentInfo, the rollup values is a double value with type google.protobuf.Value. For example, `{key: \"pickupInStore.store1\" value { number_value: 10 }}` means a there are 10 variants in this product are available in the store \"store1\".
 * @member {Object.<String, Object>} variantRollupValues
 */
GoogleCloudRetailV2alphaSearchResponseSearchResult.prototype['variantRollupValues'] = undefined;






export default GoogleCloudRetailV2alphaSearchResponseSearchResult;

