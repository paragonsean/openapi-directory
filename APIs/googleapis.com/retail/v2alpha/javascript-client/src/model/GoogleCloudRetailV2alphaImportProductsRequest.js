/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudRetailV2alphaImportErrorsConfig from './GoogleCloudRetailV2alphaImportErrorsConfig';
import GoogleCloudRetailV2alphaProductInputConfig from './GoogleCloudRetailV2alphaProductInputConfig';

/**
 * The GoogleCloudRetailV2alphaImportProductsRequest model module.
 * @module model/GoogleCloudRetailV2alphaImportProductsRequest
 * @version v2alpha
 */
class GoogleCloudRetailV2alphaImportProductsRequest {
    /**
     * Constructs a new <code>GoogleCloudRetailV2alphaImportProductsRequest</code>.
     * Request message for Import methods.
     * @alias module:model/GoogleCloudRetailV2alphaImportProductsRequest
     */
    constructor() { 
        
        GoogleCloudRetailV2alphaImportProductsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRetailV2alphaImportProductsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRetailV2alphaImportProductsRequest} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRetailV2alphaImportProductsRequest} The populated <code>GoogleCloudRetailV2alphaImportProductsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRetailV2alphaImportProductsRequest();

            if (data.hasOwnProperty('errorsConfig')) {
                obj['errorsConfig'] = GoogleCloudRetailV2alphaImportErrorsConfig.constructFromObject(data['errorsConfig']);
            }
            if (data.hasOwnProperty('inputConfig')) {
                obj['inputConfig'] = GoogleCloudRetailV2alphaProductInputConfig.constructFromObject(data['inputConfig']);
            }
            if (data.hasOwnProperty('notificationPubsubTopic')) {
                obj['notificationPubsubTopic'] = ApiClient.convertToType(data['notificationPubsubTopic'], 'String');
            }
            if (data.hasOwnProperty('reconciliationMode')) {
                obj['reconciliationMode'] = ApiClient.convertToType(data['reconciliationMode'], 'String');
            }
            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
            if (data.hasOwnProperty('skipDefaultBranchProtection')) {
                obj['skipDefaultBranchProtection'] = ApiClient.convertToType(data['skipDefaultBranchProtection'], 'Boolean');
            }
            if (data.hasOwnProperty('updateMask')) {
                obj['updateMask'] = ApiClient.convertToType(data['updateMask'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRetailV2alphaImportProductsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRetailV2alphaImportProductsRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `errorsConfig`
        if (data['errorsConfig']) { // data not null
          GoogleCloudRetailV2alphaImportErrorsConfig.validateJSON(data['errorsConfig']);
        }
        // validate the optional field `inputConfig`
        if (data['inputConfig']) { // data not null
          GoogleCloudRetailV2alphaProductInputConfig.validateJSON(data['inputConfig']);
        }
        // ensure the json data is a string
        if (data['notificationPubsubTopic'] && !(typeof data['notificationPubsubTopic'] === 'string' || data['notificationPubsubTopic'] instanceof String)) {
            throw new Error("Expected the field `notificationPubsubTopic` to be a primitive type in the JSON string but got " + data['notificationPubsubTopic']);
        }
        // ensure the json data is a string
        if (data['reconciliationMode'] && !(typeof data['reconciliationMode'] === 'string' || data['reconciliationMode'] instanceof String)) {
            throw new Error("Expected the field `reconciliationMode` to be a primitive type in the JSON string but got " + data['reconciliationMode']);
        }
        // ensure the json data is a string
        if (data['requestId'] && !(typeof data['requestId'] === 'string' || data['requestId'] instanceof String)) {
            throw new Error("Expected the field `requestId` to be a primitive type in the JSON string but got " + data['requestId']);
        }
        // ensure the json data is a string
        if (data['updateMask'] && !(typeof data['updateMask'] === 'string' || data['updateMask'] instanceof String)) {
            throw new Error("Expected the field `updateMask` to be a primitive type in the JSON string but got " + data['updateMask']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudRetailV2alphaImportErrorsConfig} errorsConfig
 */
GoogleCloudRetailV2alphaImportProductsRequest.prototype['errorsConfig'] = undefined;

/**
 * @member {module:model/GoogleCloudRetailV2alphaProductInputConfig} inputConfig
 */
GoogleCloudRetailV2alphaImportProductsRequest.prototype['inputConfig'] = undefined;

/**
 * Full Pub/Sub topic name for receiving notification. If this field is set, when the import is finished, a notification is sent to specified Pub/Sub topic. The message data is JSON string of a Operation. Format of the Pub/Sub topic is `projects/{project}/topics/{topic}`. It has to be within the same project as ImportProductsRequest.parent. Make sure that both `cloud-retail-customer-data-access@system.gserviceaccount.com` and `service-@gcp-sa-retail.iam.gserviceaccount.com` have the `pubsub.topics.publish` IAM permission on the topic. Only supported when ImportProductsRequest.reconciliation_mode is set to `FULL`.
 * @member {String} notificationPubsubTopic
 */
GoogleCloudRetailV2alphaImportProductsRequest.prototype['notificationPubsubTopic'] = undefined;

/**
 * The mode of reconciliation between existing products and the products to be imported. Defaults to ReconciliationMode.INCREMENTAL.
 * @member {module:model/GoogleCloudRetailV2alphaImportProductsRequest.ReconciliationModeEnum} reconciliationMode
 */
GoogleCloudRetailV2alphaImportProductsRequest.prototype['reconciliationMode'] = undefined;

/**
 * Deprecated. This field has no effect.
 * @member {String} requestId
 */
GoogleCloudRetailV2alphaImportProductsRequest.prototype['requestId'] = undefined;

/**
 * If true, this performs the FULL import even if it would delete a large proportion of the products in the default branch, which could potentially cause outages if you have live predict/search traffic. Only supported when ImportProductsRequest.reconciliation_mode is set to `FULL`.
 * @member {Boolean} skipDefaultBranchProtection
 */
GoogleCloudRetailV2alphaImportProductsRequest.prototype['skipDefaultBranchProtection'] = undefined;

/**
 * Indicates which fields in the provided imported `products` to update. If not set, all fields are updated. If provided, only the existing product fields are updated. Missing products will not be created.
 * @member {String} updateMask
 */
GoogleCloudRetailV2alphaImportProductsRequest.prototype['updateMask'] = undefined;





/**
 * Allowed values for the <code>reconciliationMode</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudRetailV2alphaImportProductsRequest['ReconciliationModeEnum'] = {

    /**
     * value: "RECONCILIATION_MODE_UNSPECIFIED"
     * @const
     */
    "RECONCILIATION_MODE_UNSPECIFIED": "RECONCILIATION_MODE_UNSPECIFIED",

    /**
     * value: "INCREMENTAL"
     * @const
     */
    "INCREMENTAL": "INCREMENTAL",

    /**
     * value: "FULL"
     * @const
     */
    "FULL": "FULL"
};



export default GoogleCloudRetailV2alphaImportProductsRequest;

