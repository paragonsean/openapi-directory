/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudRetailV2alphaProductLevelConfig model module.
 * @module model/GoogleCloudRetailV2alphaProductLevelConfig
 * @version v2alpha
 */
class GoogleCloudRetailV2alphaProductLevelConfig {
    /**
     * Constructs a new <code>GoogleCloudRetailV2alphaProductLevelConfig</code>.
     * Configures what level the product should be uploaded with regards to how users will be send events and how predictions will be made.
     * @alias module:model/GoogleCloudRetailV2alphaProductLevelConfig
     */
    constructor() { 
        
        GoogleCloudRetailV2alphaProductLevelConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRetailV2alphaProductLevelConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRetailV2alphaProductLevelConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRetailV2alphaProductLevelConfig} The populated <code>GoogleCloudRetailV2alphaProductLevelConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRetailV2alphaProductLevelConfig();

            if (data.hasOwnProperty('ingestionProductType')) {
                obj['ingestionProductType'] = ApiClient.convertToType(data['ingestionProductType'], 'String');
            }
            if (data.hasOwnProperty('merchantCenterProductIdField')) {
                obj['merchantCenterProductIdField'] = ApiClient.convertToType(data['merchantCenterProductIdField'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRetailV2alphaProductLevelConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRetailV2alphaProductLevelConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ingestionProductType'] && !(typeof data['ingestionProductType'] === 'string' || data['ingestionProductType'] instanceof String)) {
            throw new Error("Expected the field `ingestionProductType` to be a primitive type in the JSON string but got " + data['ingestionProductType']);
        }
        // ensure the json data is a string
        if (data['merchantCenterProductIdField'] && !(typeof data['merchantCenterProductIdField'] === 'string' || data['merchantCenterProductIdField'] instanceof String)) {
            throw new Error("Expected the field `merchantCenterProductIdField` to be a primitive type in the JSON string but got " + data['merchantCenterProductIdField']);
        }

        return true;
    }


}



/**
 * The type of Products allowed to be ingested into the catalog. Acceptable values are: * `primary` (default): You can ingest Products of all types. When ingesting a Product, its type will default to Product.Type.PRIMARY if unset. * `variant` (incompatible with Retail Search): You can only ingest Product.Type.VARIANT Products. This means Product.primary_product_id cannot be empty. If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned. If this field is `variant` and merchant_center_product_id_field is `itemGroupId`, an INVALID_ARGUMENT error is returned. See [Product levels](https://cloud.google.com/retail/docs/catalog#product-levels) for more details.
 * @member {String} ingestionProductType
 */
GoogleCloudRetailV2alphaProductLevelConfig.prototype['ingestionProductType'] = undefined;

/**
 * Which field of [Merchant Center Product](/bigquery-transfer/docs/merchant-center-products-schema) should be imported as Product.id. Acceptable values are: * `offerId` (default): Import `offerId` as the product ID. * `itemGroupId`: Import `itemGroupId` as the product ID. Notice that Retail API will choose one item from the ones with the same `itemGroupId`, and use it to represent the item group. If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned. If this field is `itemGroupId` and ingestion_product_type is `variant`, an INVALID_ARGUMENT error is returned. See [Product levels](https://cloud.google.com/retail/docs/catalog#product-levels) for more details.
 * @member {String} merchantCenterProductIdField
 */
GoogleCloudRetailV2alphaProductLevelConfig.prototype['merchantCenterProductIdField'] = undefined;






export default GoogleCloudRetailV2alphaProductLevelConfig;

