/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudRetailV2alphaLoggingConfigLogGenerationRule from './GoogleCloudRetailV2alphaLoggingConfigLogGenerationRule';
import GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule from './GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule';

/**
 * The GoogleCloudRetailV2alphaLoggingConfig model module.
 * @module model/GoogleCloudRetailV2alphaLoggingConfig
 * @version v2alpha
 */
class GoogleCloudRetailV2alphaLoggingConfig {
    /**
     * Constructs a new <code>GoogleCloudRetailV2alphaLoggingConfig</code>.
     * Project level logging config to control what level of log will be generated and written to Cloud Logging.
     * @alias module:model/GoogleCloudRetailV2alphaLoggingConfig
     */
    constructor() { 
        
        GoogleCloudRetailV2alphaLoggingConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRetailV2alphaLoggingConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRetailV2alphaLoggingConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRetailV2alphaLoggingConfig} The populated <code>GoogleCloudRetailV2alphaLoggingConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRetailV2alphaLoggingConfig();

            if (data.hasOwnProperty('defaultLogGenerationRule')) {
                obj['defaultLogGenerationRule'] = GoogleCloudRetailV2alphaLoggingConfigLogGenerationRule.constructFromObject(data['defaultLogGenerationRule']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('serviceLogGenerationRules')) {
                obj['serviceLogGenerationRules'] = ApiClient.convertToType(data['serviceLogGenerationRules'], [GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRetailV2alphaLoggingConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRetailV2alphaLoggingConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `defaultLogGenerationRule`
        if (data['defaultLogGenerationRule']) { // data not null
          GoogleCloudRetailV2alphaLoggingConfigLogGenerationRule.validateJSON(data['defaultLogGenerationRule']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['serviceLogGenerationRules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['serviceLogGenerationRules'])) {
                throw new Error("Expected the field `serviceLogGenerationRules` to be an array in the JSON data but got " + data['serviceLogGenerationRules']);
            }
            // validate the optional field `serviceLogGenerationRules` (array)
            for (const item of data['serviceLogGenerationRules']) {
                GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudRetailV2alphaLoggingConfigLogGenerationRule} defaultLogGenerationRule
 */
GoogleCloudRetailV2alphaLoggingConfig.prototype['defaultLogGenerationRule'] = undefined;

/**
 * Required. Immutable. The name of the LoggingConfig singleton resource. Format: projects/_*_/loggingConfig
 * @member {String} name
 */
GoogleCloudRetailV2alphaLoggingConfig.prototype['name'] = undefined;

/**
 * Controls logging configurations more granularly for each supported service. This overrides the default_log_generation_rule for the services specified. For those not mentioned, they will fallback to the default log generation rule.
 * @member {Array.<module:model/GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule>} serviceLogGenerationRules
 */
GoogleCloudRetailV2alphaLoggingConfig.prototype['serviceLogGenerationRules'] = undefined;






export default GoogleCloudRetailV2alphaLoggingConfig;

