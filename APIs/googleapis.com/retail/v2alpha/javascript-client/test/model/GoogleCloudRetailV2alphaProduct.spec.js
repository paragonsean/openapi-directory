/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.VertexAiSearchForRetailApi);
  }
}(this, function(expect, VertexAiSearchForRetailApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GoogleCloudRetailV2alphaProduct', function() {
    it('should create an instance of GoogleCloudRetailV2alphaProduct', function() {
      // uncomment below and update the code to test GoogleCloudRetailV2alphaProduct
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be.a(VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct);
    });

    it('should have the property attributes (base name: "attributes")', function() {
      // uncomment below and update the code to test the property attributes
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property audience (base name: "audience")', function() {
      // uncomment below and update the code to test the property audience
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property availability (base name: "availability")', function() {
      // uncomment below and update the code to test the property availability
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property availableQuantity (base name: "availableQuantity")', function() {
      // uncomment below and update the code to test the property availableQuantity
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property availableTime (base name: "availableTime")', function() {
      // uncomment below and update the code to test the property availableTime
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property brands (base name: "brands")', function() {
      // uncomment below and update the code to test the property brands
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property categories (base name: "categories")', function() {
      // uncomment below and update the code to test the property categories
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property collectionMemberIds (base name: "collectionMemberIds")', function() {
      // uncomment below and update the code to test the property collectionMemberIds
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property colorInfo (base name: "colorInfo")', function() {
      // uncomment below and update the code to test the property colorInfo
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property conditions (base name: "conditions")', function() {
      // uncomment below and update the code to test the property conditions
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property expireTime (base name: "expireTime")', function() {
      // uncomment below and update the code to test the property expireTime
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property fulfillmentInfo (base name: "fulfillmentInfo")', function() {
      // uncomment below and update the code to test the property fulfillmentInfo
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property gtin (base name: "gtin")', function() {
      // uncomment below and update the code to test the property gtin
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property images (base name: "images")', function() {
      // uncomment below and update the code to test the property images
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property languageCode (base name: "languageCode")', function() {
      // uncomment below and update the code to test the property languageCode
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property localInventories (base name: "localInventories")', function() {
      // uncomment below and update the code to test the property localInventories
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property materials (base name: "materials")', function() {
      // uncomment below and update the code to test the property materials
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property patterns (base name: "patterns")', function() {
      // uncomment below and update the code to test the property patterns
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property priceInfo (base name: "priceInfo")', function() {
      // uncomment below and update the code to test the property priceInfo
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property primaryProductId (base name: "primaryProductId")', function() {
      // uncomment below and update the code to test the property primaryProductId
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property promotions (base name: "promotions")', function() {
      // uncomment below and update the code to test the property promotions
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property publishTime (base name: "publishTime")', function() {
      // uncomment below and update the code to test the property publishTime
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property rating (base name: "rating")', function() {
      // uncomment below and update the code to test the property rating
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property retrievableFields (base name: "retrievableFields")', function() {
      // uncomment below and update the code to test the property retrievableFields
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property sizes (base name: "sizes")', function() {
      // uncomment below and update the code to test the property sizes
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property ttl (base name: "ttl")', function() {
      // uncomment below and update the code to test the property ttl
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property uri (base name: "uri")', function() {
      // uncomment below and update the code to test the property uri
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

    it('should have the property variants (base name: "variants")', function() {
      // uncomment below and update the code to test the property variants
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2alphaProduct();
      //expect(instance).to.be();
    });

  });

}));
