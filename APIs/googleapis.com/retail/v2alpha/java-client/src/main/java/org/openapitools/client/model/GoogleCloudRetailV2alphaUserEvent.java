/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudRetailV2alphaCompletionDetail;
import org.openapitools.client.model.GoogleCloudRetailV2alphaCustomAttribute;
import org.openapitools.client.model.GoogleCloudRetailV2alphaProductDetail;
import org.openapitools.client.model.GoogleCloudRetailV2alphaPurchaseTransaction;
import org.openapitools.client.model.GoogleCloudRetailV2alphaUserInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UserEvent captures all metadata information Retail API needs to know about how end users interact with customers&#39; website.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:27.124881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2alphaUserEvent {
  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Map<String, GoogleCloudRetailV2alphaCustomAttribute> attributes = new HashMap<>();

  public static final String SERIALIZED_NAME_ATTRIBUTION_TOKEN = "attributionToken";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTION_TOKEN)
  private String attributionToken;

  public static final String SERIALIZED_NAME_CART_ID = "cartId";
  @SerializedName(SERIALIZED_NAME_CART_ID)
  private String cartId;

  public static final String SERIALIZED_NAME_COMPLETION_DETAIL = "completionDetail";
  @SerializedName(SERIALIZED_NAME_COMPLETION_DETAIL)
  private GoogleCloudRetailV2alphaCompletionDetail completionDetail;

  public static final String SERIALIZED_NAME_ENTITY = "entity";
  @SerializedName(SERIALIZED_NAME_ENTITY)
  private String entity;

  public static final String SERIALIZED_NAME_EVENT_TIME = "eventTime";
  @SerializedName(SERIALIZED_NAME_EVENT_TIME)
  private String eventTime;

  public static final String SERIALIZED_NAME_EVENT_TYPE = "eventType";
  @SerializedName(SERIALIZED_NAME_EVENT_TYPE)
  private String eventType;

  public static final String SERIALIZED_NAME_EXPERIMENT_IDS = "experimentIds";
  @SerializedName(SERIALIZED_NAME_EXPERIMENT_IDS)
  private List<String> experimentIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_FILTER = "filter";
  @SerializedName(SERIALIZED_NAME_FILTER)
  private String filter;

  public static final String SERIALIZED_NAME_OFFSET = "offset";
  @SerializedName(SERIALIZED_NAME_OFFSET)
  private Integer offset;

  public static final String SERIALIZED_NAME_ORDER_BY = "orderBy";
  @SerializedName(SERIALIZED_NAME_ORDER_BY)
  private String orderBy;

  public static final String SERIALIZED_NAME_PAGE_CATEGORIES = "pageCategories";
  @SerializedName(SERIALIZED_NAME_PAGE_CATEGORIES)
  private List<String> pageCategories = new ArrayList<>();

  public static final String SERIALIZED_NAME_PAGE_VIEW_ID = "pageViewId";
  @SerializedName(SERIALIZED_NAME_PAGE_VIEW_ID)
  private String pageViewId;

  public static final String SERIALIZED_NAME_PRODUCT_DETAILS = "productDetails";
  @SerializedName(SERIALIZED_NAME_PRODUCT_DETAILS)
  private List<GoogleCloudRetailV2alphaProductDetail> productDetails = new ArrayList<>();

  public static final String SERIALIZED_NAME_PURCHASE_TRANSACTION = "purchaseTransaction";
  @SerializedName(SERIALIZED_NAME_PURCHASE_TRANSACTION)
  private GoogleCloudRetailV2alphaPurchaseTransaction purchaseTransaction;

  public static final String SERIALIZED_NAME_REFERRER_URI = "referrerUri";
  @SerializedName(SERIALIZED_NAME_REFERRER_URI)
  private String referrerUri;

  public static final String SERIALIZED_NAME_SEARCH_QUERY = "searchQuery";
  @SerializedName(SERIALIZED_NAME_SEARCH_QUERY)
  private String searchQuery;

  public static final String SERIALIZED_NAME_SESSION_ID = "sessionId";
  @SerializedName(SERIALIZED_NAME_SESSION_ID)
  private String sessionId;

  public static final String SERIALIZED_NAME_URI = "uri";
  @SerializedName(SERIALIZED_NAME_URI)
  private String uri;

  public static final String SERIALIZED_NAME_USER_INFO = "userInfo";
  @SerializedName(SERIALIZED_NAME_USER_INFO)
  private GoogleCloudRetailV2alphaUserInfo userInfo;

  public static final String SERIALIZED_NAME_VISITOR_ID = "visitorId";
  @SerializedName(SERIALIZED_NAME_VISITOR_ID)
  private String visitorId;

  public GoogleCloudRetailV2alphaUserEvent() {
  }

  public GoogleCloudRetailV2alphaUserEvent attributes(Map<String, GoogleCloudRetailV2alphaCustomAttribute> attributes) {
    this.attributes = attributes;
    return this;
  }

  public GoogleCloudRetailV2alphaUserEvent putAttributesItem(String key, GoogleCloudRetailV2alphaCustomAttribute attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

  /**
   * Extra user event features to include in the recommendation model. If you provide custom attributes for ingested user events, also include them in the user events that you associate with prediction requests. Custom attribute formatting must be consistent between imported events and events provided with prediction requests. This lets the Retail API use those custom attributes when training models and serving predictions, which helps improve recommendation quality. This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT error is returned: * The key must be a UTF-8 encoded string with a length limit of 5,000 characters. * For text attributes, at most 400 values are allowed. Empty values are not allowed. Each value must be a UTF-8 encoded string with a length limit of 256 characters. * For number attributes, at most 400 values are allowed. For product recommendations, an example of extra user information is traffic_channel, which is how a user arrives at the site. Users can arrive at the site by coming to the site directly, coming through Google search, or in other ways.
   * @return attributes
   */
  @javax.annotation.Nullable
  public Map<String, GoogleCloudRetailV2alphaCustomAttribute> getAttributes() {
    return attributes;
  }

  public void setAttributes(Map<String, GoogleCloudRetailV2alphaCustomAttribute> attributes) {
    this.attributes = attributes;
  }


  public GoogleCloudRetailV2alphaUserEvent attributionToken(String attributionToken) {
    this.attributionToken = attributionToken;
    return this;
  }

  /**
   * Highly recommended for user events that are the result of PredictionService.Predict. This field enables accurate attribution of recommendation model performance. The value must be a valid PredictResponse.attribution_token for user events that are the result of PredictionService.Predict. The value must be a valid SearchResponse.attribution_token for user events that are the result of SearchService.Search. This token enables us to accurately attribute page view or purchase back to the event and the particular predict response containing this clicked/purchased product. If user clicks on product K in the recommendation results, pass PredictResponse.attribution_token as a URL parameter to product K&#39;s page. When recording events on product K&#39;s page, log the PredictResponse.attribution_token to this field.
   * @return attributionToken
   */
  @javax.annotation.Nullable
  public String getAttributionToken() {
    return attributionToken;
  }

  public void setAttributionToken(String attributionToken) {
    this.attributionToken = attributionToken;
  }


  public GoogleCloudRetailV2alphaUserEvent cartId(String cartId) {
    this.cartId = cartId;
    return this;
  }

  /**
   * The ID or name of the associated shopping cart. This ID is used to associate multiple items added or present in the cart before purchase. This can only be set for &#x60;add-to-cart&#x60;, &#x60;purchase-complete&#x60;, or &#x60;shopping-cart-page-view&#x60; events.
   * @return cartId
   */
  @javax.annotation.Nullable
  public String getCartId() {
    return cartId;
  }

  public void setCartId(String cartId) {
    this.cartId = cartId;
  }


  public GoogleCloudRetailV2alphaUserEvent completionDetail(GoogleCloudRetailV2alphaCompletionDetail completionDetail) {
    this.completionDetail = completionDetail;
    return this;
  }

  /**
   * Get completionDetail
   * @return completionDetail
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2alphaCompletionDetail getCompletionDetail() {
    return completionDetail;
  }

  public void setCompletionDetail(GoogleCloudRetailV2alphaCompletionDetail completionDetail) {
    this.completionDetail = completionDetail;
  }


  public GoogleCloudRetailV2alphaUserEvent entity(String entity) {
    this.entity = entity;
    return this;
  }

  /**
   * The entity for customers that may run multiple different entities, domains, sites or regions, for example, &#x60;Google US&#x60;, &#x60;Google Ads&#x60;, &#x60;Waymo&#x60;, &#x60;google.com&#x60;, &#x60;youtube.com&#x60;, etc. We recommend that you set this field to get better per-entity search, completion, and prediction results.
   * @return entity
   */
  @javax.annotation.Nullable
  public String getEntity() {
    return entity;
  }

  public void setEntity(String entity) {
    this.entity = entity;
  }


  public GoogleCloudRetailV2alphaUserEvent eventTime(String eventTime) {
    this.eventTime = eventTime;
    return this;
  }

  /**
   * Only required for UserEventService.ImportUserEvents method. Timestamp of when the user event happened.
   * @return eventTime
   */
  @javax.annotation.Nullable
  public String getEventTime() {
    return eventTime;
  }

  public void setEventTime(String eventTime) {
    this.eventTime = eventTime;
  }


  public GoogleCloudRetailV2alphaUserEvent eventType(String eventType) {
    this.eventType = eventType;
    return this;
  }

  /**
   * Required. User event type. Allowed values are: * &#x60;add-to-cart&#x60;: Products being added to cart. * &#x60;category-page-view&#x60;: Special pages such as sale or promotion pages viewed. * &#x60;detail-page-view&#x60;: Products detail page viewed. * &#x60;home-page-view&#x60;: Homepage viewed. * &#x60;promotion-offered&#x60;: Promotion is offered to a user. * &#x60;promotion-not-offered&#x60;: Promotion is not offered to a user. * &#x60;purchase-complete&#x60;: User finishing a purchase. * &#x60;search&#x60;: Product search. * &#x60;shopping-cart-page-view&#x60;: User viewing a shopping cart.
   * @return eventType
   */
  @javax.annotation.Nullable
  public String getEventType() {
    return eventType;
  }

  public void setEventType(String eventType) {
    this.eventType = eventType;
  }


  public GoogleCloudRetailV2alphaUserEvent experimentIds(List<String> experimentIds) {
    this.experimentIds = experimentIds;
    return this;
  }

  public GoogleCloudRetailV2alphaUserEvent addExperimentIdsItem(String experimentIdsItem) {
    if (this.experimentIds == null) {
      this.experimentIds = new ArrayList<>();
    }
    this.experimentIds.add(experimentIdsItem);
    return this;
  }

  /**
   * A list of identifiers for the independent experiment groups this user event belongs to. This is used to distinguish between user events associated with different experiment setups (e.g. using Retail API, using different recommendation models).
   * @return experimentIds
   */
  @javax.annotation.Nullable
  public List<String> getExperimentIds() {
    return experimentIds;
  }

  public void setExperimentIds(List<String> experimentIds) {
    this.experimentIds = experimentIds;
  }


  public GoogleCloudRetailV2alphaUserEvent filter(String filter) {
    this.filter = filter;
    return this;
  }

  /**
   * The filter syntax consists of an expression language for constructing a predicate from one or more fields of the products being filtered. See SearchRequest.filter for definition and syntax. The value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned.
   * @return filter
   */
  @javax.annotation.Nullable
  public String getFilter() {
    return filter;
  }

  public void setFilter(String filter) {
    this.filter = filter;
  }


  public GoogleCloudRetailV2alphaUserEvent offset(Integer offset) {
    this.offset = offset;
    return this;
  }

  /**
   * An integer that specifies the current offset for pagination (the 0-indexed starting location, amongst the products deemed by the API as relevant). See SearchRequest.offset for definition. If this field is negative, an INVALID_ARGUMENT is returned. This can only be set for &#x60;search&#x60; events. Other event types should not set this field. Otherwise, an INVALID_ARGUMENT error is returned.
   * @return offset
   */
  @javax.annotation.Nullable
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }


  public GoogleCloudRetailV2alphaUserEvent orderBy(String orderBy) {
    this.orderBy = orderBy;
    return this;
  }

  /**
   * The order in which products are returned. See SearchRequest.order_by for definition and syntax. The value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. This can only be set for &#x60;search&#x60; events. Other event types should not set this field. Otherwise, an INVALID_ARGUMENT error is returned.
   * @return orderBy
   */
  @javax.annotation.Nullable
  public String getOrderBy() {
    return orderBy;
  }

  public void setOrderBy(String orderBy) {
    this.orderBy = orderBy;
  }


  public GoogleCloudRetailV2alphaUserEvent pageCategories(List<String> pageCategories) {
    this.pageCategories = pageCategories;
    return this;
  }

  public GoogleCloudRetailV2alphaUserEvent addPageCategoriesItem(String pageCategoriesItem) {
    if (this.pageCategories == null) {
      this.pageCategories = new ArrayList<>();
    }
    this.pageCategories.add(pageCategoriesItem);
    return this;
  }

  /**
   * The categories associated with a category page. To represent full path of category, use &#39;&gt;&#39; sign to separate different hierarchies. If &#39;&gt;&#39; is part of the category name, replace it with other character(s). Category pages include special pages such as sales or promotions. For instance, a special sale page may have the category hierarchy: \&quot;pageCategories\&quot; : [\&quot;Sales &gt; 2017 Black Friday Deals\&quot;]. Required for &#x60;category-page-view&#x60; events. At least one of search_query or page_categories is required for &#x60;search&#x60; events. Other event types should not set this field. Otherwise, an INVALID_ARGUMENT error is returned.
   * @return pageCategories
   */
  @javax.annotation.Nullable
  public List<String> getPageCategories() {
    return pageCategories;
  }

  public void setPageCategories(List<String> pageCategories) {
    this.pageCategories = pageCategories;
  }


  public GoogleCloudRetailV2alphaUserEvent pageViewId(String pageViewId) {
    this.pageViewId = pageViewId;
    return this;
  }

  /**
   * A unique ID of a web page view. This should be kept the same for all user events triggered from the same pageview. For example, an item detail page view could trigger multiple events as the user is browsing the page. The &#x60;pageViewId&#x60; property should be kept the same for all these events so that they can be grouped together properly. When using the client side event reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically.
   * @return pageViewId
   */
  @javax.annotation.Nullable
  public String getPageViewId() {
    return pageViewId;
  }

  public void setPageViewId(String pageViewId) {
    this.pageViewId = pageViewId;
  }


  public GoogleCloudRetailV2alphaUserEvent productDetails(List<GoogleCloudRetailV2alphaProductDetail> productDetails) {
    this.productDetails = productDetails;
    return this;
  }

  public GoogleCloudRetailV2alphaUserEvent addProductDetailsItem(GoogleCloudRetailV2alphaProductDetail productDetailsItem) {
    if (this.productDetails == null) {
      this.productDetails = new ArrayList<>();
    }
    this.productDetails.add(productDetailsItem);
    return this;
  }

  /**
   * The main product details related to the event. This field is optional except for the following event types: * &#x60;add-to-cart&#x60; * &#x60;detail-page-view&#x60; * &#x60;purchase-complete&#x60; In a &#x60;search&#x60; event, this field represents the products returned to the end user on the current page (the end user may have not finished browsing the whole page yet). When a new page is returned to the end user, after pagination/filtering/ordering even for the same query, a new &#x60;search&#x60; event with different product_details is desired. The end user may have not finished browsing the whole page yet.
   * @return productDetails
   */
  @javax.annotation.Nullable
  public List<GoogleCloudRetailV2alphaProductDetail> getProductDetails() {
    return productDetails;
  }

  public void setProductDetails(List<GoogleCloudRetailV2alphaProductDetail> productDetails) {
    this.productDetails = productDetails;
  }


  public GoogleCloudRetailV2alphaUserEvent purchaseTransaction(GoogleCloudRetailV2alphaPurchaseTransaction purchaseTransaction) {
    this.purchaseTransaction = purchaseTransaction;
    return this;
  }

  /**
   * Get purchaseTransaction
   * @return purchaseTransaction
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2alphaPurchaseTransaction getPurchaseTransaction() {
    return purchaseTransaction;
  }

  public void setPurchaseTransaction(GoogleCloudRetailV2alphaPurchaseTransaction purchaseTransaction) {
    this.purchaseTransaction = purchaseTransaction;
  }


  public GoogleCloudRetailV2alphaUserEvent referrerUri(String referrerUri) {
    this.referrerUri = referrerUri;
    return this;
  }

  /**
   * The referrer URL of the current page. When using the client side event reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically.
   * @return referrerUri
   */
  @javax.annotation.Nullable
  public String getReferrerUri() {
    return referrerUri;
  }

  public void setReferrerUri(String referrerUri) {
    this.referrerUri = referrerUri;
  }


  public GoogleCloudRetailV2alphaUserEvent searchQuery(String searchQuery) {
    this.searchQuery = searchQuery;
    return this;
  }

  /**
   * The user&#39;s search query. See SearchRequest.query for definition. The value must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. At least one of search_query or page_categories is required for &#x60;search&#x60; events. Other event types should not set this field. Otherwise, an INVALID_ARGUMENT error is returned.
   * @return searchQuery
   */
  @javax.annotation.Nullable
  public String getSearchQuery() {
    return searchQuery;
  }

  public void setSearchQuery(String searchQuery) {
    this.searchQuery = searchQuery;
  }


  public GoogleCloudRetailV2alphaUserEvent sessionId(String sessionId) {
    this.sessionId = sessionId;
    return this;
  }

  /**
   * A unique identifier for tracking a visitor session with a length limit of 128 bytes. A session is an aggregation of an end user behavior in a time span. A general guideline to populate the sesion_id: 1. If user has no activity for 30 min, a new session_id should be assigned. 2. The session_id should be unique across users, suggest use uuid or add visitor_id as prefix.
   * @return sessionId
   */
  @javax.annotation.Nullable
  public String getSessionId() {
    return sessionId;
  }

  public void setSessionId(String sessionId) {
    this.sessionId = sessionId;
  }


  public GoogleCloudRetailV2alphaUserEvent uri(String uri) {
    this.uri = uri;
    return this;
  }

  /**
   * Complete URL (window.location.href) of the user&#39;s current page. When using the client side event reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically. Maximum length 5,000 characters.
   * @return uri
   */
  @javax.annotation.Nullable
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }


  public GoogleCloudRetailV2alphaUserEvent userInfo(GoogleCloudRetailV2alphaUserInfo userInfo) {
    this.userInfo = userInfo;
    return this;
  }

  /**
   * Get userInfo
   * @return userInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2alphaUserInfo getUserInfo() {
    return userInfo;
  }

  public void setUserInfo(GoogleCloudRetailV2alphaUserInfo userInfo) {
    this.userInfo = userInfo;
  }


  public GoogleCloudRetailV2alphaUserEvent visitorId(String visitorId) {
    this.visitorId = visitorId;
    return this;
  }

  /**
   * Required. A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor log in/out of the website. Don&#39;t set the field to the same fixed ID for different users. This mixes the event history of those users together, which results in degraded model quality. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. The field should not contain PII or user-data. We recommend to use Google Analytics [Client ID](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#clientId) for this field.
   * @return visitorId
   */
  @javax.annotation.Nullable
  public String getVisitorId() {
    return visitorId;
  }

  public void setVisitorId(String visitorId) {
    this.visitorId = visitorId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2alphaUserEvent googleCloudRetailV2alphaUserEvent = (GoogleCloudRetailV2alphaUserEvent) o;
    return Objects.equals(this.attributes, googleCloudRetailV2alphaUserEvent.attributes) &&
        Objects.equals(this.attributionToken, googleCloudRetailV2alphaUserEvent.attributionToken) &&
        Objects.equals(this.cartId, googleCloudRetailV2alphaUserEvent.cartId) &&
        Objects.equals(this.completionDetail, googleCloudRetailV2alphaUserEvent.completionDetail) &&
        Objects.equals(this.entity, googleCloudRetailV2alphaUserEvent.entity) &&
        Objects.equals(this.eventTime, googleCloudRetailV2alphaUserEvent.eventTime) &&
        Objects.equals(this.eventType, googleCloudRetailV2alphaUserEvent.eventType) &&
        Objects.equals(this.experimentIds, googleCloudRetailV2alphaUserEvent.experimentIds) &&
        Objects.equals(this.filter, googleCloudRetailV2alphaUserEvent.filter) &&
        Objects.equals(this.offset, googleCloudRetailV2alphaUserEvent.offset) &&
        Objects.equals(this.orderBy, googleCloudRetailV2alphaUserEvent.orderBy) &&
        Objects.equals(this.pageCategories, googleCloudRetailV2alphaUserEvent.pageCategories) &&
        Objects.equals(this.pageViewId, googleCloudRetailV2alphaUserEvent.pageViewId) &&
        Objects.equals(this.productDetails, googleCloudRetailV2alphaUserEvent.productDetails) &&
        Objects.equals(this.purchaseTransaction, googleCloudRetailV2alphaUserEvent.purchaseTransaction) &&
        Objects.equals(this.referrerUri, googleCloudRetailV2alphaUserEvent.referrerUri) &&
        Objects.equals(this.searchQuery, googleCloudRetailV2alphaUserEvent.searchQuery) &&
        Objects.equals(this.sessionId, googleCloudRetailV2alphaUserEvent.sessionId) &&
        Objects.equals(this.uri, googleCloudRetailV2alphaUserEvent.uri) &&
        Objects.equals(this.userInfo, googleCloudRetailV2alphaUserEvent.userInfo) &&
        Objects.equals(this.visitorId, googleCloudRetailV2alphaUserEvent.visitorId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributes, attributionToken, cartId, completionDetail, entity, eventTime, eventType, experimentIds, filter, offset, orderBy, pageCategories, pageViewId, productDetails, purchaseTransaction, referrerUri, searchQuery, sessionId, uri, userInfo, visitorId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2alphaUserEvent {\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    attributionToken: ").append(toIndentedString(attributionToken)).append("\n");
    sb.append("    cartId: ").append(toIndentedString(cartId)).append("\n");
    sb.append("    completionDetail: ").append(toIndentedString(completionDetail)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    eventTime: ").append(toIndentedString(eventTime)).append("\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    experimentIds: ").append(toIndentedString(experimentIds)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    orderBy: ").append(toIndentedString(orderBy)).append("\n");
    sb.append("    pageCategories: ").append(toIndentedString(pageCategories)).append("\n");
    sb.append("    pageViewId: ").append(toIndentedString(pageViewId)).append("\n");
    sb.append("    productDetails: ").append(toIndentedString(productDetails)).append("\n");
    sb.append("    purchaseTransaction: ").append(toIndentedString(purchaseTransaction)).append("\n");
    sb.append("    referrerUri: ").append(toIndentedString(referrerUri)).append("\n");
    sb.append("    searchQuery: ").append(toIndentedString(searchQuery)).append("\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    userInfo: ").append(toIndentedString(userInfo)).append("\n");
    sb.append("    visitorId: ").append(toIndentedString(visitorId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attributes");
    openapiFields.add("attributionToken");
    openapiFields.add("cartId");
    openapiFields.add("completionDetail");
    openapiFields.add("entity");
    openapiFields.add("eventTime");
    openapiFields.add("eventType");
    openapiFields.add("experimentIds");
    openapiFields.add("filter");
    openapiFields.add("offset");
    openapiFields.add("orderBy");
    openapiFields.add("pageCategories");
    openapiFields.add("pageViewId");
    openapiFields.add("productDetails");
    openapiFields.add("purchaseTransaction");
    openapiFields.add("referrerUri");
    openapiFields.add("searchQuery");
    openapiFields.add("sessionId");
    openapiFields.add("uri");
    openapiFields.add("userInfo");
    openapiFields.add("visitorId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2alphaUserEvent
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2alphaUserEvent.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2alphaUserEvent is not found in the empty JSON string", GoogleCloudRetailV2alphaUserEvent.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2alphaUserEvent.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2alphaUserEvent` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("attributionToken") != null && !jsonObj.get("attributionToken").isJsonNull()) && !jsonObj.get("attributionToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attributionToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attributionToken").toString()));
      }
      if ((jsonObj.get("cartId") != null && !jsonObj.get("cartId").isJsonNull()) && !jsonObj.get("cartId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cartId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cartId").toString()));
      }
      // validate the optional field `completionDetail`
      if (jsonObj.get("completionDetail") != null && !jsonObj.get("completionDetail").isJsonNull()) {
        GoogleCloudRetailV2alphaCompletionDetail.validateJsonElement(jsonObj.get("completionDetail"));
      }
      if ((jsonObj.get("entity") != null && !jsonObj.get("entity").isJsonNull()) && !jsonObj.get("entity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entity").toString()));
      }
      if ((jsonObj.get("eventTime") != null && !jsonObj.get("eventTime").isJsonNull()) && !jsonObj.get("eventTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eventTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eventTime").toString()));
      }
      if ((jsonObj.get("eventType") != null && !jsonObj.get("eventType").isJsonNull()) && !jsonObj.get("eventType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eventType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eventType").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("experimentIds") != null && !jsonObj.get("experimentIds").isJsonNull() && !jsonObj.get("experimentIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `experimentIds` to be an array in the JSON string but got `%s`", jsonObj.get("experimentIds").toString()));
      }
      if ((jsonObj.get("filter") != null && !jsonObj.get("filter").isJsonNull()) && !jsonObj.get("filter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filter").toString()));
      }
      if ((jsonObj.get("orderBy") != null && !jsonObj.get("orderBy").isJsonNull()) && !jsonObj.get("orderBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderBy").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("pageCategories") != null && !jsonObj.get("pageCategories").isJsonNull() && !jsonObj.get("pageCategories").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `pageCategories` to be an array in the JSON string but got `%s`", jsonObj.get("pageCategories").toString()));
      }
      if ((jsonObj.get("pageViewId") != null && !jsonObj.get("pageViewId").isJsonNull()) && !jsonObj.get("pageViewId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pageViewId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pageViewId").toString()));
      }
      if (jsonObj.get("productDetails") != null && !jsonObj.get("productDetails").isJsonNull()) {
        JsonArray jsonArrayproductDetails = jsonObj.getAsJsonArray("productDetails");
        if (jsonArrayproductDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("productDetails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `productDetails` to be an array in the JSON string but got `%s`", jsonObj.get("productDetails").toString()));
          }

          // validate the optional field `productDetails` (array)
          for (int i = 0; i < jsonArrayproductDetails.size(); i++) {
            GoogleCloudRetailV2alphaProductDetail.validateJsonElement(jsonArrayproductDetails.get(i));
          };
        }
      }
      // validate the optional field `purchaseTransaction`
      if (jsonObj.get("purchaseTransaction") != null && !jsonObj.get("purchaseTransaction").isJsonNull()) {
        GoogleCloudRetailV2alphaPurchaseTransaction.validateJsonElement(jsonObj.get("purchaseTransaction"));
      }
      if ((jsonObj.get("referrerUri") != null && !jsonObj.get("referrerUri").isJsonNull()) && !jsonObj.get("referrerUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `referrerUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("referrerUri").toString()));
      }
      if ((jsonObj.get("searchQuery") != null && !jsonObj.get("searchQuery").isJsonNull()) && !jsonObj.get("searchQuery").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `searchQuery` to be a primitive type in the JSON string but got `%s`", jsonObj.get("searchQuery").toString()));
      }
      if ((jsonObj.get("sessionId") != null && !jsonObj.get("sessionId").isJsonNull()) && !jsonObj.get("sessionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sessionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sessionId").toString()));
      }
      if ((jsonObj.get("uri") != null && !jsonObj.get("uri").isJsonNull()) && !jsonObj.get("uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uri").toString()));
      }
      // validate the optional field `userInfo`
      if (jsonObj.get("userInfo") != null && !jsonObj.get("userInfo").isJsonNull()) {
        GoogleCloudRetailV2alphaUserInfo.validateJsonElement(jsonObj.get("userInfo"));
      }
      if ((jsonObj.get("visitorId") != null && !jsonObj.get("visitorId").isJsonNull()) && !jsonObj.get("visitorId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `visitorId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("visitorId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2alphaUserEvent.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2alphaUserEvent' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2alphaUserEvent> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2alphaUserEvent.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2alphaUserEvent>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2alphaUserEvent value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2alphaUserEvent read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2alphaUserEvent given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2alphaUserEvent
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2alphaUserEvent
   */
  public static GoogleCloudRetailV2alphaUserEvent fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2alphaUserEvent.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2alphaUserEvent to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

