/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleRpcStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Response of the ImportCompletionDataRequest. If the long running operation is done, this message is returned by the google.longrunning.Operations.response field if the operation is successful.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:27.124881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2alphaImportCompletionDataResponse {
  public static final String SERIALIZED_NAME_ERROR_SAMPLES = "errorSamples";
  @SerializedName(SERIALIZED_NAME_ERROR_SAMPLES)
  private List<GoogleRpcStatus> errorSamples = new ArrayList<>();

  public GoogleCloudRetailV2alphaImportCompletionDataResponse() {
  }

  public GoogleCloudRetailV2alphaImportCompletionDataResponse errorSamples(List<GoogleRpcStatus> errorSamples) {
    this.errorSamples = errorSamples;
    return this;
  }

  public GoogleCloudRetailV2alphaImportCompletionDataResponse addErrorSamplesItem(GoogleRpcStatus errorSamplesItem) {
    if (this.errorSamples == null) {
      this.errorSamples = new ArrayList<>();
    }
    this.errorSamples.add(errorSamplesItem);
    return this;
  }

  /**
   * A sample of errors encountered while processing the request.
   * @return errorSamples
   */
  @javax.annotation.Nullable
  public List<GoogleRpcStatus> getErrorSamples() {
    return errorSamples;
  }

  public void setErrorSamples(List<GoogleRpcStatus> errorSamples) {
    this.errorSamples = errorSamples;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2alphaImportCompletionDataResponse googleCloudRetailV2alphaImportCompletionDataResponse = (GoogleCloudRetailV2alphaImportCompletionDataResponse) o;
    return Objects.equals(this.errorSamples, googleCloudRetailV2alphaImportCompletionDataResponse.errorSamples);
  }

  @Override
  public int hashCode() {
    return Objects.hash(errorSamples);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2alphaImportCompletionDataResponse {\n");
    sb.append("    errorSamples: ").append(toIndentedString(errorSamples)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("errorSamples");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2alphaImportCompletionDataResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2alphaImportCompletionDataResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2alphaImportCompletionDataResponse is not found in the empty JSON string", GoogleCloudRetailV2alphaImportCompletionDataResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2alphaImportCompletionDataResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2alphaImportCompletionDataResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("errorSamples") != null && !jsonObj.get("errorSamples").isJsonNull()) {
        JsonArray jsonArrayerrorSamples = jsonObj.getAsJsonArray("errorSamples");
        if (jsonArrayerrorSamples != null) {
          // ensure the json data is an array
          if (!jsonObj.get("errorSamples").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `errorSamples` to be an array in the JSON string but got `%s`", jsonObj.get("errorSamples").toString()));
          }

          // validate the optional field `errorSamples` (array)
          for (int i = 0; i < jsonArrayerrorSamples.size(); i++) {
            GoogleRpcStatus.validateJsonElement(jsonArrayerrorSamples.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2alphaImportCompletionDataResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2alphaImportCompletionDataResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2alphaImportCompletionDataResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2alphaImportCompletionDataResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2alphaImportCompletionDataResponse>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2alphaImportCompletionDataResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2alphaImportCompletionDataResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2alphaImportCompletionDataResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2alphaImportCompletionDataResponse
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2alphaImportCompletionDataResponse
   */
  public static GoogleCloudRetailV2alphaImportCompletionDataResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2alphaImportCompletionDataResponse.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2alphaImportCompletionDataResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

