/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A boost action to apply to results matching condition specified above.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:27.124881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2alphaRuleBoostAction {
  public static final String SERIALIZED_NAME_BOOST = "boost";
  @SerializedName(SERIALIZED_NAME_BOOST)
  private Float boost;

  public static final String SERIALIZED_NAME_PRODUCTS_FILTER = "productsFilter";
  @SerializedName(SERIALIZED_NAME_PRODUCTS_FILTER)
  private String productsFilter;

  public GoogleCloudRetailV2alphaRuleBoostAction() {
  }

  public GoogleCloudRetailV2alphaRuleBoostAction boost(Float boost) {
    this.boost = boost;
    return this;
  }

  /**
   * Strength of the condition boost, which must be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the item a big promotion. However, it does not necessarily mean that the boosted item will be the top result at all times, nor that other items will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant items. Setting to -1.0 gives the item a big demotion. However, results that are deeply relevant might still be shown. The item will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored.
   * @return boost
   */
  @javax.annotation.Nullable
  public Float getBoost() {
    return boost;
  }

  public void setBoost(Float boost) {
    this.boost = boost;
  }


  public GoogleCloudRetailV2alphaRuleBoostAction productsFilter(String productsFilter) {
    this.productsFilter = productsFilter;
    return this;
  }

  /**
   * The filter can have a max size of 5000 characters. An expression which specifies which products to apply an action to. The syntax and supported fields are the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost products with product ID \&quot;product_1\&quot; or \&quot;product_2\&quot;, and color \&quot;Red\&quot; or \&quot;Blue\&quot;: *(id: ANY(\&quot;product_1\&quot;, \&quot;product_2\&quot;)) * *AND * *(colorFamilies: ANY(\&quot;Red\&quot;, \&quot;Blue\&quot;)) *
   * @return productsFilter
   */
  @javax.annotation.Nullable
  public String getProductsFilter() {
    return productsFilter;
  }

  public void setProductsFilter(String productsFilter) {
    this.productsFilter = productsFilter;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2alphaRuleBoostAction googleCloudRetailV2alphaRuleBoostAction = (GoogleCloudRetailV2alphaRuleBoostAction) o;
    return Objects.equals(this.boost, googleCloudRetailV2alphaRuleBoostAction.boost) &&
        Objects.equals(this.productsFilter, googleCloudRetailV2alphaRuleBoostAction.productsFilter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(boost, productsFilter);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2alphaRuleBoostAction {\n");
    sb.append("    boost: ").append(toIndentedString(boost)).append("\n");
    sb.append("    productsFilter: ").append(toIndentedString(productsFilter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("boost");
    openapiFields.add("productsFilter");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2alphaRuleBoostAction
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2alphaRuleBoostAction.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2alphaRuleBoostAction is not found in the empty JSON string", GoogleCloudRetailV2alphaRuleBoostAction.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2alphaRuleBoostAction.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2alphaRuleBoostAction` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("productsFilter") != null && !jsonObj.get("productsFilter").isJsonNull()) && !jsonObj.get("productsFilter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productsFilter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productsFilter").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2alphaRuleBoostAction.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2alphaRuleBoostAction' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2alphaRuleBoostAction> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2alphaRuleBoostAction.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2alphaRuleBoostAction>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2alphaRuleBoostAction value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2alphaRuleBoostAction read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2alphaRuleBoostAction given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2alphaRuleBoostAction
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2alphaRuleBoostAction
   */
  public static GoogleCloudRetailV2alphaRuleBoostAction fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2alphaRuleBoostAction.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2alphaRuleBoostAction to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

