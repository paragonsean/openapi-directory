/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacetValue;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The current facet key (i.e. attribute config) maps into the merged_facet_key. A facet key can have at most one child. The current facet key and the merged facet key need both to be textual custom attributes or both numerical custom attributes (same type).
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:27.124881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet {
  public static final String SERIALIZED_NAME_MERGED_FACET_KEY = "mergedFacetKey";
  @SerializedName(SERIALIZED_NAME_MERGED_FACET_KEY)
  private String mergedFacetKey;

  public static final String SERIALIZED_NAME_MERGED_FACET_VALUES = "mergedFacetValues";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_MERGED_FACET_VALUES)
  private List<GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacetValue> mergedFacetValues = new ArrayList<>();

  public GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet() {
  }

  public GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet mergedFacetKey(String mergedFacetKey) {
    this.mergedFacetKey = mergedFacetKey;
    return this;
  }

  /**
   * The merged facet key should be a valid facet key that is different than the facet key of the current catalog attribute. We refer this is merged facet key as the child of the current catalog attribute. This merged facet key can&#39;t be a parent of another facet key (i.e. no directed path of length 2). This merged facet key needs to be either a textual custom attribute or a numerical custom attribute.
   * @return mergedFacetKey
   */
  @javax.annotation.Nullable
  public String getMergedFacetKey() {
    return mergedFacetKey;
  }

  public void setMergedFacetKey(String mergedFacetKey) {
    this.mergedFacetKey = mergedFacetKey;
  }


  @Deprecated
  public GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet mergedFacetValues(List<GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacetValue> mergedFacetValues) {
    this.mergedFacetValues = mergedFacetValues;
    return this;
  }

  public GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet addMergedFacetValuesItem(GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacetValue mergedFacetValuesItem) {
    if (this.mergedFacetValues == null) {
      this.mergedFacetValues = new ArrayList<>();
    }
    this.mergedFacetValues.add(mergedFacetValuesItem);
    return this;
  }

  /**
   * Each instance is a list of facet values that map into the same (possibly different) merged facet value. For the current attribute config, each facet value should map to at most one merged facet value.
   * @return mergedFacetValues
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public List<GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacetValue> getMergedFacetValues() {
    return mergedFacetValues;
  }

  @Deprecated
  public void setMergedFacetValues(List<GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacetValue> mergedFacetValues) {
    this.mergedFacetValues = mergedFacetValues;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet googleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet = (GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet) o;
    return Objects.equals(this.mergedFacetKey, googleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet.mergedFacetKey) &&
        Objects.equals(this.mergedFacetValues, googleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet.mergedFacetValues);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mergedFacetKey, mergedFacetValues);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet {\n");
    sb.append("    mergedFacetKey: ").append(toIndentedString(mergedFacetKey)).append("\n");
    sb.append("    mergedFacetValues: ").append(toIndentedString(mergedFacetValues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("mergedFacetKey");
    openapiFields.add("mergedFacetValues");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet is not found in the empty JSON string", GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("mergedFacetKey") != null && !jsonObj.get("mergedFacetKey").isJsonNull()) && !jsonObj.get("mergedFacetKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mergedFacetKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mergedFacetKey").toString()));
      }
      if (jsonObj.get("mergedFacetValues") != null && !jsonObj.get("mergedFacetValues").isJsonNull()) {
        JsonArray jsonArraymergedFacetValues = jsonObj.getAsJsonArray("mergedFacetValues");
        if (jsonArraymergedFacetValues != null) {
          // ensure the json data is an array
          if (!jsonObj.get("mergedFacetValues").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `mergedFacetValues` to be an array in the JSON string but got `%s`", jsonObj.get("mergedFacetValues").toString()));
          }

          // validate the optional field `mergedFacetValues` (array)
          for (int i = 0; i < jsonArraymergedFacetValues.size(); i++) {
            GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacetValue.validateJsonElement(jsonArraymergedFacetValues.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet
   */
  public static GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2alphaCatalogAttributeFacetConfigMergedFacet to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

