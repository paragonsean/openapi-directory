/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudRetailV2alphaLoggingConfigLogGenerationRule;
import org.openapitools.client.model.GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Project level logging config to control what level of log will be generated and written to Cloud Logging.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:27.124881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2alphaLoggingConfig {
  public static final String SERIALIZED_NAME_DEFAULT_LOG_GENERATION_RULE = "defaultLogGenerationRule";
  @SerializedName(SERIALIZED_NAME_DEFAULT_LOG_GENERATION_RULE)
  private GoogleCloudRetailV2alphaLoggingConfigLogGenerationRule defaultLogGenerationRule;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SERVICE_LOG_GENERATION_RULES = "serviceLogGenerationRules";
  @SerializedName(SERIALIZED_NAME_SERVICE_LOG_GENERATION_RULES)
  private List<GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule> serviceLogGenerationRules = new ArrayList<>();

  public GoogleCloudRetailV2alphaLoggingConfig() {
  }

  public GoogleCloudRetailV2alphaLoggingConfig defaultLogGenerationRule(GoogleCloudRetailV2alphaLoggingConfigLogGenerationRule defaultLogGenerationRule) {
    this.defaultLogGenerationRule = defaultLogGenerationRule;
    return this;
  }

  /**
   * Get defaultLogGenerationRule
   * @return defaultLogGenerationRule
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2alphaLoggingConfigLogGenerationRule getDefaultLogGenerationRule() {
    return defaultLogGenerationRule;
  }

  public void setDefaultLogGenerationRule(GoogleCloudRetailV2alphaLoggingConfigLogGenerationRule defaultLogGenerationRule) {
    this.defaultLogGenerationRule = defaultLogGenerationRule;
  }


  public GoogleCloudRetailV2alphaLoggingConfig name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. Immutable. The name of the LoggingConfig singleton resource. Format: projects/_*_/loggingConfig
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudRetailV2alphaLoggingConfig serviceLogGenerationRules(List<GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule> serviceLogGenerationRules) {
    this.serviceLogGenerationRules = serviceLogGenerationRules;
    return this;
  }

  public GoogleCloudRetailV2alphaLoggingConfig addServiceLogGenerationRulesItem(GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule serviceLogGenerationRulesItem) {
    if (this.serviceLogGenerationRules == null) {
      this.serviceLogGenerationRules = new ArrayList<>();
    }
    this.serviceLogGenerationRules.add(serviceLogGenerationRulesItem);
    return this;
  }

  /**
   * Controls logging configurations more granularly for each supported service. This overrides the default_log_generation_rule for the services specified. For those not mentioned, they will fallback to the default log generation rule.
   * @return serviceLogGenerationRules
   */
  @javax.annotation.Nullable
  public List<GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule> getServiceLogGenerationRules() {
    return serviceLogGenerationRules;
  }

  public void setServiceLogGenerationRules(List<GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule> serviceLogGenerationRules) {
    this.serviceLogGenerationRules = serviceLogGenerationRules;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2alphaLoggingConfig googleCloudRetailV2alphaLoggingConfig = (GoogleCloudRetailV2alphaLoggingConfig) o;
    return Objects.equals(this.defaultLogGenerationRule, googleCloudRetailV2alphaLoggingConfig.defaultLogGenerationRule) &&
        Objects.equals(this.name, googleCloudRetailV2alphaLoggingConfig.name) &&
        Objects.equals(this.serviceLogGenerationRules, googleCloudRetailV2alphaLoggingConfig.serviceLogGenerationRules);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultLogGenerationRule, name, serviceLogGenerationRules);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2alphaLoggingConfig {\n");
    sb.append("    defaultLogGenerationRule: ").append(toIndentedString(defaultLogGenerationRule)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    serviceLogGenerationRules: ").append(toIndentedString(serviceLogGenerationRules)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("defaultLogGenerationRule");
    openapiFields.add("name");
    openapiFields.add("serviceLogGenerationRules");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2alphaLoggingConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2alphaLoggingConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2alphaLoggingConfig is not found in the empty JSON string", GoogleCloudRetailV2alphaLoggingConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2alphaLoggingConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2alphaLoggingConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `defaultLogGenerationRule`
      if (jsonObj.get("defaultLogGenerationRule") != null && !jsonObj.get("defaultLogGenerationRule").isJsonNull()) {
        GoogleCloudRetailV2alphaLoggingConfigLogGenerationRule.validateJsonElement(jsonObj.get("defaultLogGenerationRule"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("serviceLogGenerationRules") != null && !jsonObj.get("serviceLogGenerationRules").isJsonNull()) {
        JsonArray jsonArrayserviceLogGenerationRules = jsonObj.getAsJsonArray("serviceLogGenerationRules");
        if (jsonArrayserviceLogGenerationRules != null) {
          // ensure the json data is an array
          if (!jsonObj.get("serviceLogGenerationRules").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `serviceLogGenerationRules` to be an array in the JSON string but got `%s`", jsonObj.get("serviceLogGenerationRules").toString()));
          }

          // validate the optional field `serviceLogGenerationRules` (array)
          for (int i = 0; i < jsonArrayserviceLogGenerationRules.size(); i++) {
            GoogleCloudRetailV2alphaLoggingConfigServiceLogGenerationRule.validateJsonElement(jsonArrayserviceLogGenerationRules.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2alphaLoggingConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2alphaLoggingConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2alphaLoggingConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2alphaLoggingConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2alphaLoggingConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2alphaLoggingConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2alphaLoggingConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2alphaLoggingConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2alphaLoggingConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2alphaLoggingConfig
   */
  public static GoogleCloudRetailV2alphaLoggingConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2alphaLoggingConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2alphaLoggingConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

