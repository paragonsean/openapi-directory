/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudRetailLoggingHttpRequestContext;
import org.openapitools.client.model.GoogleCloudRetailLoggingSourceLocation;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A description of the context in which an error occurred.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:27.124881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailLoggingErrorContext {
  public static final String SERIALIZED_NAME_HTTP_REQUEST = "httpRequest";
  @SerializedName(SERIALIZED_NAME_HTTP_REQUEST)
  private GoogleCloudRetailLoggingHttpRequestContext httpRequest;

  public static final String SERIALIZED_NAME_REPORT_LOCATION = "reportLocation";
  @SerializedName(SERIALIZED_NAME_REPORT_LOCATION)
  private GoogleCloudRetailLoggingSourceLocation reportLocation;

  public GoogleCloudRetailLoggingErrorContext() {
  }

  public GoogleCloudRetailLoggingErrorContext httpRequest(GoogleCloudRetailLoggingHttpRequestContext httpRequest) {
    this.httpRequest = httpRequest;
    return this;
  }

  /**
   * Get httpRequest
   * @return httpRequest
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailLoggingHttpRequestContext getHttpRequest() {
    return httpRequest;
  }

  public void setHttpRequest(GoogleCloudRetailLoggingHttpRequestContext httpRequest) {
    this.httpRequest = httpRequest;
  }


  public GoogleCloudRetailLoggingErrorContext reportLocation(GoogleCloudRetailLoggingSourceLocation reportLocation) {
    this.reportLocation = reportLocation;
    return this;
  }

  /**
   * Get reportLocation
   * @return reportLocation
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailLoggingSourceLocation getReportLocation() {
    return reportLocation;
  }

  public void setReportLocation(GoogleCloudRetailLoggingSourceLocation reportLocation) {
    this.reportLocation = reportLocation;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailLoggingErrorContext googleCloudRetailLoggingErrorContext = (GoogleCloudRetailLoggingErrorContext) o;
    return Objects.equals(this.httpRequest, googleCloudRetailLoggingErrorContext.httpRequest) &&
        Objects.equals(this.reportLocation, googleCloudRetailLoggingErrorContext.reportLocation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(httpRequest, reportLocation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailLoggingErrorContext {\n");
    sb.append("    httpRequest: ").append(toIndentedString(httpRequest)).append("\n");
    sb.append("    reportLocation: ").append(toIndentedString(reportLocation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("httpRequest");
    openapiFields.add("reportLocation");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailLoggingErrorContext
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailLoggingErrorContext.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailLoggingErrorContext is not found in the empty JSON string", GoogleCloudRetailLoggingErrorContext.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailLoggingErrorContext.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailLoggingErrorContext` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `httpRequest`
      if (jsonObj.get("httpRequest") != null && !jsonObj.get("httpRequest").isJsonNull()) {
        GoogleCloudRetailLoggingHttpRequestContext.validateJsonElement(jsonObj.get("httpRequest"));
      }
      // validate the optional field `reportLocation`
      if (jsonObj.get("reportLocation") != null && !jsonObj.get("reportLocation").isJsonNull()) {
        GoogleCloudRetailLoggingSourceLocation.validateJsonElement(jsonObj.get("reportLocation"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailLoggingErrorContext.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailLoggingErrorContext' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailLoggingErrorContext> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailLoggingErrorContext.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailLoggingErrorContext>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailLoggingErrorContext value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailLoggingErrorContext read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailLoggingErrorContext given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailLoggingErrorContext
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailLoggingErrorContext
   */
  public static GoogleCloudRetailLoggingErrorContext fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailLoggingErrorContext.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailLoggingErrorContext to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

