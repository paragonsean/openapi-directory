/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudRetailV2alphaSearchResponseFacetFacetValue;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A facet result.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:27.124881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2alphaSearchResponseFacet {
  public static final String SERIALIZED_NAME_DYNAMIC_FACET = "dynamicFacet";
  @SerializedName(SERIALIZED_NAME_DYNAMIC_FACET)
  private Boolean dynamicFacet;

  public static final String SERIALIZED_NAME_KEY = "key";
  @SerializedName(SERIALIZED_NAME_KEY)
  private String key;

  public static final String SERIALIZED_NAME_VALUES = "values";
  @SerializedName(SERIALIZED_NAME_VALUES)
  private List<GoogleCloudRetailV2alphaSearchResponseFacetFacetValue> values = new ArrayList<>();

  public GoogleCloudRetailV2alphaSearchResponseFacet() {
  }

  public GoogleCloudRetailV2alphaSearchResponseFacet dynamicFacet(Boolean dynamicFacet) {
    this.dynamicFacet = dynamicFacet;
    return this;
  }

  /**
   * Whether the facet is dynamically generated.
   * @return dynamicFacet
   */
  @javax.annotation.Nullable
  public Boolean getDynamicFacet() {
    return dynamicFacet;
  }

  public void setDynamicFacet(Boolean dynamicFacet) {
    this.dynamicFacet = dynamicFacet;
  }


  public GoogleCloudRetailV2alphaSearchResponseFacet key(String key) {
    this.key = key;
    return this;
  }

  /**
   * The key for this facet. E.g., \&quot;colorFamilies\&quot; or \&quot;price\&quot; or \&quot;attributes.attr1\&quot;.
   * @return key
   */
  @javax.annotation.Nullable
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }


  public GoogleCloudRetailV2alphaSearchResponseFacet values(List<GoogleCloudRetailV2alphaSearchResponseFacetFacetValue> values) {
    this.values = values;
    return this;
  }

  public GoogleCloudRetailV2alphaSearchResponseFacet addValuesItem(GoogleCloudRetailV2alphaSearchResponseFacetFacetValue valuesItem) {
    if (this.values == null) {
      this.values = new ArrayList<>();
    }
    this.values.add(valuesItem);
    return this;
  }

  /**
   * The facet values for this field.
   * @return values
   */
  @javax.annotation.Nullable
  public List<GoogleCloudRetailV2alphaSearchResponseFacetFacetValue> getValues() {
    return values;
  }

  public void setValues(List<GoogleCloudRetailV2alphaSearchResponseFacetFacetValue> values) {
    this.values = values;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2alphaSearchResponseFacet googleCloudRetailV2alphaSearchResponseFacet = (GoogleCloudRetailV2alphaSearchResponseFacet) o;
    return Objects.equals(this.dynamicFacet, googleCloudRetailV2alphaSearchResponseFacet.dynamicFacet) &&
        Objects.equals(this.key, googleCloudRetailV2alphaSearchResponseFacet.key) &&
        Objects.equals(this.values, googleCloudRetailV2alphaSearchResponseFacet.values);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dynamicFacet, key, values);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2alphaSearchResponseFacet {\n");
    sb.append("    dynamicFacet: ").append(toIndentedString(dynamicFacet)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dynamicFacet");
    openapiFields.add("key");
    openapiFields.add("values");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2alphaSearchResponseFacet
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2alphaSearchResponseFacet.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2alphaSearchResponseFacet is not found in the empty JSON string", GoogleCloudRetailV2alphaSearchResponseFacet.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2alphaSearchResponseFacet.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2alphaSearchResponseFacet` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("key") != null && !jsonObj.get("key").isJsonNull()) && !jsonObj.get("key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("key").toString()));
      }
      if (jsonObj.get("values") != null && !jsonObj.get("values").isJsonNull()) {
        JsonArray jsonArrayvalues = jsonObj.getAsJsonArray("values");
        if (jsonArrayvalues != null) {
          // ensure the json data is an array
          if (!jsonObj.get("values").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `values` to be an array in the JSON string but got `%s`", jsonObj.get("values").toString()));
          }

          // validate the optional field `values` (array)
          for (int i = 0; i < jsonArrayvalues.size(); i++) {
            GoogleCloudRetailV2alphaSearchResponseFacetFacetValue.validateJsonElement(jsonArrayvalues.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2alphaSearchResponseFacet.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2alphaSearchResponseFacet' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2alphaSearchResponseFacet> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2alphaSearchResponseFacet.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2alphaSearchResponseFacet>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2alphaSearchResponseFacet value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2alphaSearchResponseFacet read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2alphaSearchResponseFacet given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2alphaSearchResponseFacet
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2alphaSearchResponseFacet
   */
  public static GoogleCloudRetailV2alphaSearchResponseFacet fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2alphaSearchResponseFacet.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2alphaSearchResponseFacet to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

