/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudRetailV2alphaBigQuerySource;
import org.openapitools.client.model.GoogleCloudRetailV2alphaGcsSource;
import org.openapitools.client.model.GoogleCloudRetailV2alphaUserEventInlineSource;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The input config source for user events.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:27.124881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2alphaUserEventInputConfig {
  public static final String SERIALIZED_NAME_BIG_QUERY_SOURCE = "bigQuerySource";
  @SerializedName(SERIALIZED_NAME_BIG_QUERY_SOURCE)
  private GoogleCloudRetailV2alphaBigQuerySource bigQuerySource;

  public static final String SERIALIZED_NAME_GCS_SOURCE = "gcsSource";
  @SerializedName(SERIALIZED_NAME_GCS_SOURCE)
  private GoogleCloudRetailV2alphaGcsSource gcsSource;

  public static final String SERIALIZED_NAME_USER_EVENT_INLINE_SOURCE = "userEventInlineSource";
  @SerializedName(SERIALIZED_NAME_USER_EVENT_INLINE_SOURCE)
  private GoogleCloudRetailV2alphaUserEventInlineSource userEventInlineSource;

  public GoogleCloudRetailV2alphaUserEventInputConfig() {
  }

  public GoogleCloudRetailV2alphaUserEventInputConfig bigQuerySource(GoogleCloudRetailV2alphaBigQuerySource bigQuerySource) {
    this.bigQuerySource = bigQuerySource;
    return this;
  }

  /**
   * Get bigQuerySource
   * @return bigQuerySource
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2alphaBigQuerySource getBigQuerySource() {
    return bigQuerySource;
  }

  public void setBigQuerySource(GoogleCloudRetailV2alphaBigQuerySource bigQuerySource) {
    this.bigQuerySource = bigQuerySource;
  }


  public GoogleCloudRetailV2alphaUserEventInputConfig gcsSource(GoogleCloudRetailV2alphaGcsSource gcsSource) {
    this.gcsSource = gcsSource;
    return this;
  }

  /**
   * Get gcsSource
   * @return gcsSource
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2alphaGcsSource getGcsSource() {
    return gcsSource;
  }

  public void setGcsSource(GoogleCloudRetailV2alphaGcsSource gcsSource) {
    this.gcsSource = gcsSource;
  }


  public GoogleCloudRetailV2alphaUserEventInputConfig userEventInlineSource(GoogleCloudRetailV2alphaUserEventInlineSource userEventInlineSource) {
    this.userEventInlineSource = userEventInlineSource;
    return this;
  }

  /**
   * Get userEventInlineSource
   * @return userEventInlineSource
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2alphaUserEventInlineSource getUserEventInlineSource() {
    return userEventInlineSource;
  }

  public void setUserEventInlineSource(GoogleCloudRetailV2alphaUserEventInlineSource userEventInlineSource) {
    this.userEventInlineSource = userEventInlineSource;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2alphaUserEventInputConfig googleCloudRetailV2alphaUserEventInputConfig = (GoogleCloudRetailV2alphaUserEventInputConfig) o;
    return Objects.equals(this.bigQuerySource, googleCloudRetailV2alphaUserEventInputConfig.bigQuerySource) &&
        Objects.equals(this.gcsSource, googleCloudRetailV2alphaUserEventInputConfig.gcsSource) &&
        Objects.equals(this.userEventInlineSource, googleCloudRetailV2alphaUserEventInputConfig.userEventInlineSource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bigQuerySource, gcsSource, userEventInlineSource);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2alphaUserEventInputConfig {\n");
    sb.append("    bigQuerySource: ").append(toIndentedString(bigQuerySource)).append("\n");
    sb.append("    gcsSource: ").append(toIndentedString(gcsSource)).append("\n");
    sb.append("    userEventInlineSource: ").append(toIndentedString(userEventInlineSource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bigQuerySource");
    openapiFields.add("gcsSource");
    openapiFields.add("userEventInlineSource");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2alphaUserEventInputConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2alphaUserEventInputConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2alphaUserEventInputConfig is not found in the empty JSON string", GoogleCloudRetailV2alphaUserEventInputConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2alphaUserEventInputConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2alphaUserEventInputConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `bigQuerySource`
      if (jsonObj.get("bigQuerySource") != null && !jsonObj.get("bigQuerySource").isJsonNull()) {
        GoogleCloudRetailV2alphaBigQuerySource.validateJsonElement(jsonObj.get("bigQuerySource"));
      }
      // validate the optional field `gcsSource`
      if (jsonObj.get("gcsSource") != null && !jsonObj.get("gcsSource").isJsonNull()) {
        GoogleCloudRetailV2alphaGcsSource.validateJsonElement(jsonObj.get("gcsSource"));
      }
      // validate the optional field `userEventInlineSource`
      if (jsonObj.get("userEventInlineSource") != null && !jsonObj.get("userEventInlineSource").isJsonNull()) {
        GoogleCloudRetailV2alphaUserEventInlineSource.validateJsonElement(jsonObj.get("userEventInlineSource"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2alphaUserEventInputConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2alphaUserEventInputConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2alphaUserEventInputConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2alphaUserEventInputConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2alphaUserEventInputConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2alphaUserEventInputConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2alphaUserEventInputConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2alphaUserEventInputConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2alphaUserEventInputConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2alphaUserEventInputConfig
   */
  public static GoogleCloudRetailV2alphaUserEventInputConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2alphaUserEventInputConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2alphaUserEventInputConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

