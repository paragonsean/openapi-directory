/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Response of the CatalogService.BatchRemoveCatalogAttributes.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:27.124881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse {
  public static final String SERIALIZED_NAME_DELETED_CATALOG_ATTRIBUTES = "deletedCatalogAttributes";
  @SerializedName(SERIALIZED_NAME_DELETED_CATALOG_ATTRIBUTES)
  private List<String> deletedCatalogAttributes = new ArrayList<>();

  public static final String SERIALIZED_NAME_RESET_CATALOG_ATTRIBUTES = "resetCatalogAttributes";
  @SerializedName(SERIALIZED_NAME_RESET_CATALOG_ATTRIBUTES)
  private List<String> resetCatalogAttributes = new ArrayList<>();

  public GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse() {
  }

  public GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse deletedCatalogAttributes(List<String> deletedCatalogAttributes) {
    this.deletedCatalogAttributes = deletedCatalogAttributes;
    return this;
  }

  public GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse addDeletedCatalogAttributesItem(String deletedCatalogAttributesItem) {
    if (this.deletedCatalogAttributes == null) {
      this.deletedCatalogAttributes = new ArrayList<>();
    }
    this.deletedCatalogAttributes.add(deletedCatalogAttributesItem);
    return this;
  }

  /**
   * Catalog attributes that were deleted. Only pre-loaded catalog attributes that are neither in use by products nor predefined can be deleted.
   * @return deletedCatalogAttributes
   */
  @javax.annotation.Nullable
  public List<String> getDeletedCatalogAttributes() {
    return deletedCatalogAttributes;
  }

  public void setDeletedCatalogAttributes(List<String> deletedCatalogAttributes) {
    this.deletedCatalogAttributes = deletedCatalogAttributes;
  }


  public GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse resetCatalogAttributes(List<String> resetCatalogAttributes) {
    this.resetCatalogAttributes = resetCatalogAttributes;
    return this;
  }

  public GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse addResetCatalogAttributesItem(String resetCatalogAttributesItem) {
    if (this.resetCatalogAttributes == null) {
      this.resetCatalogAttributes = new ArrayList<>();
    }
    this.resetCatalogAttributes.add(resetCatalogAttributesItem);
    return this;
  }

  /**
   * Catalog attributes that were reset. Catalog attributes that are either in use by products or are predefined attributes cannot be deleted; however, their configuration properties will reset to default values upon removal request.
   * @return resetCatalogAttributes
   */
  @javax.annotation.Nullable
  public List<String> getResetCatalogAttributes() {
    return resetCatalogAttributes;
  }

  public void setResetCatalogAttributes(List<String> resetCatalogAttributes) {
    this.resetCatalogAttributes = resetCatalogAttributes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse googleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse = (GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse) o;
    return Objects.equals(this.deletedCatalogAttributes, googleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse.deletedCatalogAttributes) &&
        Objects.equals(this.resetCatalogAttributes, googleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse.resetCatalogAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deletedCatalogAttributes, resetCatalogAttributes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse {\n");
    sb.append("    deletedCatalogAttributes: ").append(toIndentedString(deletedCatalogAttributes)).append("\n");
    sb.append("    resetCatalogAttributes: ").append(toIndentedString(resetCatalogAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("deletedCatalogAttributes");
    openapiFields.add("resetCatalogAttributes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse is not found in the empty JSON string", GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("deletedCatalogAttributes") != null && !jsonObj.get("deletedCatalogAttributes").isJsonNull() && !jsonObj.get("deletedCatalogAttributes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `deletedCatalogAttributes` to be an array in the JSON string but got `%s`", jsonObj.get("deletedCatalogAttributes").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("resetCatalogAttributes") != null && !jsonObj.get("resetCatalogAttributes").isJsonNull() && !jsonObj.get("resetCatalogAttributes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `resetCatalogAttributes` to be an array in the JSON string but got `%s`", jsonObj.get("resetCatalogAttributes").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse
   */
  public static GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2alphaBatchRemoveCatalogAttributesResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

