/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A summary of import result. The UserEventImportSummary summarizes the import status for user events.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:27.124881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2betaUserEventImportSummary {
  public static final String SERIALIZED_NAME_JOINED_EVENTS_COUNT = "joinedEventsCount";
  @SerializedName(SERIALIZED_NAME_JOINED_EVENTS_COUNT)
  private String joinedEventsCount;

  public static final String SERIALIZED_NAME_UNJOINED_EVENTS_COUNT = "unjoinedEventsCount";
  @SerializedName(SERIALIZED_NAME_UNJOINED_EVENTS_COUNT)
  private String unjoinedEventsCount;

  public GoogleCloudRetailV2betaUserEventImportSummary() {
  }

  public GoogleCloudRetailV2betaUserEventImportSummary joinedEventsCount(String joinedEventsCount) {
    this.joinedEventsCount = joinedEventsCount;
    return this;
  }

  /**
   * Count of user events imported with complete existing catalog information.
   * @return joinedEventsCount
   */
  @javax.annotation.Nullable
  public String getJoinedEventsCount() {
    return joinedEventsCount;
  }

  public void setJoinedEventsCount(String joinedEventsCount) {
    this.joinedEventsCount = joinedEventsCount;
  }


  public GoogleCloudRetailV2betaUserEventImportSummary unjoinedEventsCount(String unjoinedEventsCount) {
    this.unjoinedEventsCount = unjoinedEventsCount;
    return this;
  }

  /**
   * Count of user events imported, but with catalog information not found in the imported catalog.
   * @return unjoinedEventsCount
   */
  @javax.annotation.Nullable
  public String getUnjoinedEventsCount() {
    return unjoinedEventsCount;
  }

  public void setUnjoinedEventsCount(String unjoinedEventsCount) {
    this.unjoinedEventsCount = unjoinedEventsCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2betaUserEventImportSummary googleCloudRetailV2betaUserEventImportSummary = (GoogleCloudRetailV2betaUserEventImportSummary) o;
    return Objects.equals(this.joinedEventsCount, googleCloudRetailV2betaUserEventImportSummary.joinedEventsCount) &&
        Objects.equals(this.unjoinedEventsCount, googleCloudRetailV2betaUserEventImportSummary.unjoinedEventsCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(joinedEventsCount, unjoinedEventsCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2betaUserEventImportSummary {\n");
    sb.append("    joinedEventsCount: ").append(toIndentedString(joinedEventsCount)).append("\n");
    sb.append("    unjoinedEventsCount: ").append(toIndentedString(unjoinedEventsCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("joinedEventsCount");
    openapiFields.add("unjoinedEventsCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2betaUserEventImportSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2betaUserEventImportSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2betaUserEventImportSummary is not found in the empty JSON string", GoogleCloudRetailV2betaUserEventImportSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2betaUserEventImportSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2betaUserEventImportSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("joinedEventsCount") != null && !jsonObj.get("joinedEventsCount").isJsonNull()) && !jsonObj.get("joinedEventsCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `joinedEventsCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("joinedEventsCount").toString()));
      }
      if ((jsonObj.get("unjoinedEventsCount") != null && !jsonObj.get("unjoinedEventsCount").isJsonNull()) && !jsonObj.get("unjoinedEventsCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unjoinedEventsCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unjoinedEventsCount").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2betaUserEventImportSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2betaUserEventImportSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2betaUserEventImportSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2betaUserEventImportSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2betaUserEventImportSummary>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2betaUserEventImportSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2betaUserEventImportSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2betaUserEventImportSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2betaUserEventImportSummary
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2betaUserEventImportSummary
   */
  public static GoogleCloudRetailV2betaUserEventImportSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2betaUserEventImportSummary.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2betaUserEventImportSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

