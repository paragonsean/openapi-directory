/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudRetailV2alphaProduct;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the search results.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:27.124881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2alphaSearchResponseSearchResult {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_MATCHING_VARIANT_COUNT = "matchingVariantCount";
  @SerializedName(SERIALIZED_NAME_MATCHING_VARIANT_COUNT)
  private Integer matchingVariantCount;

  public static final String SERIALIZED_NAME_MATCHING_VARIANT_FIELDS = "matchingVariantFields";
  @SerializedName(SERIALIZED_NAME_MATCHING_VARIANT_FIELDS)
  private Map<String, String> matchingVariantFields = new HashMap<>();

  public static final String SERIALIZED_NAME_PERSONAL_LABELS = "personalLabels";
  @SerializedName(SERIALIZED_NAME_PERSONAL_LABELS)
  private List<String> personalLabels = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRODUCT = "product";
  @SerializedName(SERIALIZED_NAME_PRODUCT)
  private GoogleCloudRetailV2alphaProduct product;

  public static final String SERIALIZED_NAME_VARIANT_ROLLUP_VALUES = "variantRollupValues";
  @SerializedName(SERIALIZED_NAME_VARIANT_ROLLUP_VALUES)
  private Map<String, Object> variantRollupValues = new HashMap<>();

  public GoogleCloudRetailV2alphaSearchResponseSearchResult() {
  }

  public GoogleCloudRetailV2alphaSearchResponseSearchResult id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Product.id of the searched Product.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public GoogleCloudRetailV2alphaSearchResponseSearchResult matchingVariantCount(Integer matchingVariantCount) {
    this.matchingVariantCount = matchingVariantCount;
    return this;
  }

  /**
   * The count of matched variant Products.
   * @return matchingVariantCount
   */
  @javax.annotation.Nullable
  public Integer getMatchingVariantCount() {
    return matchingVariantCount;
  }

  public void setMatchingVariantCount(Integer matchingVariantCount) {
    this.matchingVariantCount = matchingVariantCount;
  }


  public GoogleCloudRetailV2alphaSearchResponseSearchResult matchingVariantFields(Map<String, String> matchingVariantFields) {
    this.matchingVariantFields = matchingVariantFields;
    return this;
  }

  public GoogleCloudRetailV2alphaSearchResponseSearchResult putMatchingVariantFieldsItem(String key, String matchingVariantFieldsItem) {
    if (this.matchingVariantFields == null) {
      this.matchingVariantFields = new HashMap<>();
    }
    this.matchingVariantFields.put(key, matchingVariantFieldsItem);
    return this;
  }

  /**
   * If a variant Product matches the search query, this map indicates which Product fields are matched. The key is the Product.name, the value is a field mask of the matched Product fields. If matched attributes cannot be determined, this map will be empty. For example, a key \&quot;sku1\&quot; with field mask \&quot;products.color_info\&quot; indicates there is a match between \&quot;sku1\&quot; ColorInfo and the query.
   * @return matchingVariantFields
   */
  @javax.annotation.Nullable
  public Map<String, String> getMatchingVariantFields() {
    return matchingVariantFields;
  }

  public void setMatchingVariantFields(Map<String, String> matchingVariantFields) {
    this.matchingVariantFields = matchingVariantFields;
  }


  public GoogleCloudRetailV2alphaSearchResponseSearchResult personalLabels(List<String> personalLabels) {
    this.personalLabels = personalLabels;
    return this;
  }

  public GoogleCloudRetailV2alphaSearchResponseSearchResult addPersonalLabelsItem(String personalLabelsItem) {
    if (this.personalLabels == null) {
      this.personalLabels = new ArrayList<>();
    }
    this.personalLabels.add(personalLabelsItem);
    return this;
  }

  /**
   * Specifies previous events related to this product for this user based on UserEvent with same SearchRequest.visitor_id or UserInfo.user_id. This is set only when SearchRequest.PersonalizationSpec.mode is SearchRequest.PersonalizationSpec.Mode.AUTO. Possible values: * &#x60;purchased&#x60;: Indicates that this product has been purchased before.
   * @return personalLabels
   */
  @javax.annotation.Nullable
  public List<String> getPersonalLabels() {
    return personalLabels;
  }

  public void setPersonalLabels(List<String> personalLabels) {
    this.personalLabels = personalLabels;
  }


  public GoogleCloudRetailV2alphaSearchResponseSearchResult product(GoogleCloudRetailV2alphaProduct product) {
    this.product = product;
    return this;
  }

  /**
   * Get product
   * @return product
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2alphaProduct getProduct() {
    return product;
  }

  public void setProduct(GoogleCloudRetailV2alphaProduct product) {
    this.product = product;
  }


  public GoogleCloudRetailV2alphaSearchResponseSearchResult variantRollupValues(Map<String, Object> variantRollupValues) {
    this.variantRollupValues = variantRollupValues;
    return this;
  }

  public GoogleCloudRetailV2alphaSearchResponseSearchResult putVariantRollupValuesItem(String key, Object variantRollupValuesItem) {
    if (this.variantRollupValues == null) {
      this.variantRollupValues = new HashMap<>();
    }
    this.variantRollupValues.put(key, variantRollupValuesItem);
    return this;
  }

  /**
   * The rollup matching variant Product attributes. The key is one of the SearchRequest.variant_rollup_keys. The values are the merged and de-duplicated Product attributes. Notice that the rollup values are respect filter. For example, when filtering by \&quot;colorFamilies:ANY(\\\&quot;red\\\&quot;)\&quot; and rollup \&quot;colorFamilies\&quot;, only \&quot;red\&quot; is returned. For textual and numerical attributes, the rollup values is a list of string or double values with type google.protobuf.ListValue. For example, if there are two variants with colors \&quot;red\&quot; and \&quot;blue\&quot;, the rollup values are { key: \&quot;colorFamilies\&quot; value { list_value { values { string_value: \&quot;red\&quot; } values { string_value: \&quot;blue\&quot; } } } } For FulfillmentInfo, the rollup values is a double value with type google.protobuf.Value. For example, &#x60;{key: \&quot;pickupInStore.store1\&quot; value { number_value: 10 }}&#x60; means a there are 10 variants in this product are available in the store \&quot;store1\&quot;.
   * @return variantRollupValues
   */
  @javax.annotation.Nullable
  public Map<String, Object> getVariantRollupValues() {
    return variantRollupValues;
  }

  public void setVariantRollupValues(Map<String, Object> variantRollupValues) {
    this.variantRollupValues = variantRollupValues;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2alphaSearchResponseSearchResult googleCloudRetailV2alphaSearchResponseSearchResult = (GoogleCloudRetailV2alphaSearchResponseSearchResult) o;
    return Objects.equals(this.id, googleCloudRetailV2alphaSearchResponseSearchResult.id) &&
        Objects.equals(this.matchingVariantCount, googleCloudRetailV2alphaSearchResponseSearchResult.matchingVariantCount) &&
        Objects.equals(this.matchingVariantFields, googleCloudRetailV2alphaSearchResponseSearchResult.matchingVariantFields) &&
        Objects.equals(this.personalLabels, googleCloudRetailV2alphaSearchResponseSearchResult.personalLabels) &&
        Objects.equals(this.product, googleCloudRetailV2alphaSearchResponseSearchResult.product) &&
        Objects.equals(this.variantRollupValues, googleCloudRetailV2alphaSearchResponseSearchResult.variantRollupValues);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, matchingVariantCount, matchingVariantFields, personalLabels, product, variantRollupValues);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2alphaSearchResponseSearchResult {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    matchingVariantCount: ").append(toIndentedString(matchingVariantCount)).append("\n");
    sb.append("    matchingVariantFields: ").append(toIndentedString(matchingVariantFields)).append("\n");
    sb.append("    personalLabels: ").append(toIndentedString(personalLabels)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    variantRollupValues: ").append(toIndentedString(variantRollupValues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("matchingVariantCount");
    openapiFields.add("matchingVariantFields");
    openapiFields.add("personalLabels");
    openapiFields.add("product");
    openapiFields.add("variantRollupValues");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2alphaSearchResponseSearchResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2alphaSearchResponseSearchResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2alphaSearchResponseSearchResult is not found in the empty JSON string", GoogleCloudRetailV2alphaSearchResponseSearchResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2alphaSearchResponseSearchResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2alphaSearchResponseSearchResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("personalLabels") != null && !jsonObj.get("personalLabels").isJsonNull() && !jsonObj.get("personalLabels").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `personalLabels` to be an array in the JSON string but got `%s`", jsonObj.get("personalLabels").toString()));
      }
      // validate the optional field `product`
      if (jsonObj.get("product") != null && !jsonObj.get("product").isJsonNull()) {
        GoogleCloudRetailV2alphaProduct.validateJsonElement(jsonObj.get("product"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2alphaSearchResponseSearchResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2alphaSearchResponseSearchResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2alphaSearchResponseSearchResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2alphaSearchResponseSearchResult.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2alphaSearchResponseSearchResult>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2alphaSearchResponseSearchResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2alphaSearchResponseSearchResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2alphaSearchResponseSearchResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2alphaSearchResponseSearchResult
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2alphaSearchResponseSearchResult
   */
  public static GoogleCloudRetailV2alphaSearchResponseSearchResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2alphaSearchResponseSearchResult.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2alphaSearchResponseSearchResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

