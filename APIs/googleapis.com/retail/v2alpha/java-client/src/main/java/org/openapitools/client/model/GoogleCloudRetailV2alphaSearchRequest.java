/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudRetailV2alphaSearchRequestBoostSpec;
import org.openapitools.client.model.GoogleCloudRetailV2alphaSearchRequestDynamicFacetSpec;
import org.openapitools.client.model.GoogleCloudRetailV2alphaSearchRequestFacetSpec;
import org.openapitools.client.model.GoogleCloudRetailV2alphaSearchRequestPersonalizationSpec;
import org.openapitools.client.model.GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec;
import org.openapitools.client.model.GoogleCloudRetailV2alphaSearchRequestSpellCorrectionSpec;
import org.openapitools.client.model.GoogleCloudRetailV2alphaUserInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for SearchService.Search method.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:27.124881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2alphaSearchRequest {
  public static final String SERIALIZED_NAME_BOOST_SPEC = "boostSpec";
  @SerializedName(SERIALIZED_NAME_BOOST_SPEC)
  private GoogleCloudRetailV2alphaSearchRequestBoostSpec boostSpec;

  public static final String SERIALIZED_NAME_BRANCH = "branch";
  @SerializedName(SERIALIZED_NAME_BRANCH)
  private String branch;

  public static final String SERIALIZED_NAME_CANONICAL_FILTER = "canonicalFilter";
  @SerializedName(SERIALIZED_NAME_CANONICAL_FILTER)
  private String canonicalFilter;

  public static final String SERIALIZED_NAME_DYNAMIC_FACET_SPEC = "dynamicFacetSpec";
  @SerializedName(SERIALIZED_NAME_DYNAMIC_FACET_SPEC)
  private GoogleCloudRetailV2alphaSearchRequestDynamicFacetSpec dynamicFacetSpec;

  public static final String SERIALIZED_NAME_ENTITY = "entity";
  @SerializedName(SERIALIZED_NAME_ENTITY)
  private String entity;

  public static final String SERIALIZED_NAME_FACET_SPECS = "facetSpecs";
  @SerializedName(SERIALIZED_NAME_FACET_SPECS)
  private List<GoogleCloudRetailV2alphaSearchRequestFacetSpec> facetSpecs = new ArrayList<>();

  public static final String SERIALIZED_NAME_FILTER = "filter";
  @SerializedName(SERIALIZED_NAME_FILTER)
  private String filter;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_OFFSET = "offset";
  @SerializedName(SERIALIZED_NAME_OFFSET)
  private Integer offset;

  public static final String SERIALIZED_NAME_ORDER_BY = "orderBy";
  @SerializedName(SERIALIZED_NAME_ORDER_BY)
  private String orderBy;

  public static final String SERIALIZED_NAME_PAGE_CATEGORIES = "pageCategories";
  @SerializedName(SERIALIZED_NAME_PAGE_CATEGORIES)
  private List<String> pageCategories = new ArrayList<>();

  public static final String SERIALIZED_NAME_PAGE_SIZE = "pageSize";
  @SerializedName(SERIALIZED_NAME_PAGE_SIZE)
  private Integer pageSize;

  public static final String SERIALIZED_NAME_PAGE_TOKEN = "pageToken";
  @SerializedName(SERIALIZED_NAME_PAGE_TOKEN)
  private String pageToken;

  public static final String SERIALIZED_NAME_PERSONALIZATION_SPEC = "personalizationSpec";
  @SerializedName(SERIALIZED_NAME_PERSONALIZATION_SPEC)
  private GoogleCloudRetailV2alphaSearchRequestPersonalizationSpec personalizationSpec;

  public static final String SERIALIZED_NAME_QUERY = "query";
  @SerializedName(SERIALIZED_NAME_QUERY)
  private String query;

  public static final String SERIALIZED_NAME_QUERY_EXPANSION_SPEC = "queryExpansionSpec";
  @SerializedName(SERIALIZED_NAME_QUERY_EXPANSION_SPEC)
  private GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec queryExpansionSpec;

  /**
   * The relevance threshold of the search results. Defaults to RelevanceThreshold.HIGH, which means only the most relevant results are shown, and the least number of results are returned. For more information, see [Adjust result size](https://cloud.google.com/retail/docs/result-size#relevance_thresholding).
   */
  @JsonAdapter(RelevanceThresholdEnum.Adapter.class)
  public enum RelevanceThresholdEnum {
    RELEVANCE_THRESHOLD_UNSPECIFIED("RELEVANCE_THRESHOLD_UNSPECIFIED"),
    
    HIGH("HIGH"),
    
    MEDIUM("MEDIUM"),
    
    LOW("LOW"),
    
    LOWEST("LOWEST");

    private String value;

    RelevanceThresholdEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RelevanceThresholdEnum fromValue(String value) {
      for (RelevanceThresholdEnum b : RelevanceThresholdEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RelevanceThresholdEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RelevanceThresholdEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RelevanceThresholdEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RelevanceThresholdEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      RelevanceThresholdEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_RELEVANCE_THRESHOLD = "relevanceThreshold";
  @SerializedName(SERIALIZED_NAME_RELEVANCE_THRESHOLD)
  private RelevanceThresholdEnum relevanceThreshold;

  /**
   * The search mode of the search request. If not specified, a single search request triggers both product search and faceted search.
   */
  @JsonAdapter(SearchModeEnum.Adapter.class)
  public enum SearchModeEnum {
    SEARCH_MODE_UNSPECIFIED("SEARCH_MODE_UNSPECIFIED"),
    
    PRODUCT_SEARCH_ONLY("PRODUCT_SEARCH_ONLY"),
    
    FACETED_SEARCH_ONLY("FACETED_SEARCH_ONLY");

    private String value;

    SearchModeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SearchModeEnum fromValue(String value) {
      for (SearchModeEnum b : SearchModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SearchModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SearchModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SearchModeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SearchModeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      SearchModeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SEARCH_MODE = "searchMode";
  @SerializedName(SERIALIZED_NAME_SEARCH_MODE)
  private SearchModeEnum searchMode;

  public static final String SERIALIZED_NAME_SPELL_CORRECTION_SPEC = "spellCorrectionSpec";
  @SerializedName(SERIALIZED_NAME_SPELL_CORRECTION_SPEC)
  private GoogleCloudRetailV2alphaSearchRequestSpellCorrectionSpec spellCorrectionSpec;

  public static final String SERIALIZED_NAME_USER_INFO = "userInfo";
  @SerializedName(SERIALIZED_NAME_USER_INFO)
  private GoogleCloudRetailV2alphaUserInfo userInfo;

  public static final String SERIALIZED_NAME_VARIANT_ROLLUP_KEYS = "variantRollupKeys";
  @SerializedName(SERIALIZED_NAME_VARIANT_ROLLUP_KEYS)
  private List<String> variantRollupKeys = new ArrayList<>();

  public static final String SERIALIZED_NAME_VISITOR_ID = "visitorId";
  @SerializedName(SERIALIZED_NAME_VISITOR_ID)
  private String visitorId;

  public GoogleCloudRetailV2alphaSearchRequest() {
  }

  public GoogleCloudRetailV2alphaSearchRequest boostSpec(GoogleCloudRetailV2alphaSearchRequestBoostSpec boostSpec) {
    this.boostSpec = boostSpec;
    return this;
  }

  /**
   * Get boostSpec
   * @return boostSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2alphaSearchRequestBoostSpec getBoostSpec() {
    return boostSpec;
  }

  public void setBoostSpec(GoogleCloudRetailV2alphaSearchRequestBoostSpec boostSpec) {
    this.boostSpec = boostSpec;
  }


  public GoogleCloudRetailV2alphaSearchRequest branch(String branch) {
    this.branch = branch;
    return this;
  }

  /**
   * The branch resource name, such as &#x60;projects/_*_/locations/global/catalogs/default_catalog/branches/0&#x60;. Use \&quot;default_branch\&quot; as the branch ID or leave this field empty, to search products under the default branch.
   * @return branch
   */
  @javax.annotation.Nullable
  public String getBranch() {
    return branch;
  }

  public void setBranch(String branch) {
    this.branch = branch;
  }


  public GoogleCloudRetailV2alphaSearchRequest canonicalFilter(String canonicalFilter) {
    this.canonicalFilter = canonicalFilter;
    return this;
  }

  /**
   * The default filter that is applied when a user performs a search without checking any filters on the search page. The filter applied to every search request when quality improvement such as query expansion is needed. In the case a query does not have a sufficient amount of results this filter will be used to determine whether or not to enable the query expansion flow. The original filter will still be used for the query expanded search. This field is strongly recommended to achieve high search quality. For more information about filter syntax, see SearchRequest.filter.
   * @return canonicalFilter
   */
  @javax.annotation.Nullable
  public String getCanonicalFilter() {
    return canonicalFilter;
  }

  public void setCanonicalFilter(String canonicalFilter) {
    this.canonicalFilter = canonicalFilter;
  }


  public GoogleCloudRetailV2alphaSearchRequest dynamicFacetSpec(GoogleCloudRetailV2alphaSearchRequestDynamicFacetSpec dynamicFacetSpec) {
    this.dynamicFacetSpec = dynamicFacetSpec;
    return this;
  }

  /**
   * Get dynamicFacetSpec
   * @return dynamicFacetSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2alphaSearchRequestDynamicFacetSpec getDynamicFacetSpec() {
    return dynamicFacetSpec;
  }

  public void setDynamicFacetSpec(GoogleCloudRetailV2alphaSearchRequestDynamicFacetSpec dynamicFacetSpec) {
    this.dynamicFacetSpec = dynamicFacetSpec;
  }


  public GoogleCloudRetailV2alphaSearchRequest entity(String entity) {
    this.entity = entity;
    return this;
  }

  /**
   * The entity for customers that may run multiple different entities, domains, sites or regions, for example, &#x60;Google US&#x60;, &#x60;Google Ads&#x60;, &#x60;Waymo&#x60;, &#x60;google.com&#x60;, &#x60;youtube.com&#x60;, etc. If this is set, it should be exactly matched with UserEvent.entity to get search results boosted by entity.
   * @return entity
   */
  @javax.annotation.Nullable
  public String getEntity() {
    return entity;
  }

  public void setEntity(String entity) {
    this.entity = entity;
  }


  public GoogleCloudRetailV2alphaSearchRequest facetSpecs(List<GoogleCloudRetailV2alphaSearchRequestFacetSpec> facetSpecs) {
    this.facetSpecs = facetSpecs;
    return this;
  }

  public GoogleCloudRetailV2alphaSearchRequest addFacetSpecsItem(GoogleCloudRetailV2alphaSearchRequestFacetSpec facetSpecsItem) {
    if (this.facetSpecs == null) {
      this.facetSpecs = new ArrayList<>();
    }
    this.facetSpecs.add(facetSpecsItem);
    return this;
  }

  /**
   * Facet specifications for faceted search. If empty, no facets are returned. A maximum of 200 values are allowed. Otherwise, an INVALID_ARGUMENT error is returned.
   * @return facetSpecs
   */
  @javax.annotation.Nullable
  public List<GoogleCloudRetailV2alphaSearchRequestFacetSpec> getFacetSpecs() {
    return facetSpecs;
  }

  public void setFacetSpecs(List<GoogleCloudRetailV2alphaSearchRequestFacetSpec> facetSpecs) {
    this.facetSpecs = facetSpecs;
  }


  public GoogleCloudRetailV2alphaSearchRequest filter(String filter) {
    this.filter = filter;
    return this;
  }

  /**
   * The filter syntax consists of an expression language for constructing a predicate from one or more fields of the products being filtered. Filter expression is case-sensitive. For more information, see [Filter](https://cloud.google.com/retail/docs/filter-and-order#filter). If this field is unrecognizable, an INVALID_ARGUMENT is returned.
   * @return filter
   */
  @javax.annotation.Nullable
  public String getFilter() {
    return filter;
  }

  public void setFilter(String filter) {
    this.filter = filter;
  }


  public GoogleCloudRetailV2alphaSearchRequest labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public GoogleCloudRetailV2alphaSearchRequest putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * The labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. For more information, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) in the Resource Manager documentation.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  public GoogleCloudRetailV2alphaSearchRequest offset(Integer offset) {
    this.offset = offset;
    return this;
  }

  /**
   * A 0-indexed integer that specifies the current offset (that is, starting result location, amongst the Products deemed by the API as relevant) in search results. This field is only considered if page_token is unset. If this field is negative, an INVALID_ARGUMENT is returned.
   * @return offset
   */
  @javax.annotation.Nullable
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }


  public GoogleCloudRetailV2alphaSearchRequest orderBy(String orderBy) {
    this.orderBy = orderBy;
    return this;
  }

  /**
   * The order in which products are returned. Products can be ordered by a field in an Product object. Leave it unset if ordered by relevance. OrderBy expression is case-sensitive. For more information, see [Order](https://cloud.google.com/retail/docs/filter-and-order#order). If this field is unrecognizable, an INVALID_ARGUMENT is returned.
   * @return orderBy
   */
  @javax.annotation.Nullable
  public String getOrderBy() {
    return orderBy;
  }

  public void setOrderBy(String orderBy) {
    this.orderBy = orderBy;
  }


  public GoogleCloudRetailV2alphaSearchRequest pageCategories(List<String> pageCategories) {
    this.pageCategories = pageCategories;
    return this;
  }

  public GoogleCloudRetailV2alphaSearchRequest addPageCategoriesItem(String pageCategoriesItem) {
    if (this.pageCategories == null) {
      this.pageCategories = new ArrayList<>();
    }
    this.pageCategories.add(pageCategoriesItem);
    return this;
  }

  /**
   * The categories associated with a category page. Must be set for category navigation queries to achieve good search quality. The format should be the same as UserEvent.page_categories; To represent full path of category, use &#39;&gt;&#39; sign to separate different hierarchies. If &#39;&gt;&#39; is part of the category name, replace it with other character(s). Category pages include special pages such as sales or promotions. For instance, a special sale page may have the category hierarchy: \&quot;pageCategories\&quot; : [\&quot;Sales &gt; 2017 Black Friday Deals\&quot;].
   * @return pageCategories
   */
  @javax.annotation.Nullable
  public List<String> getPageCategories() {
    return pageCategories;
  }

  public void setPageCategories(List<String> pageCategories) {
    this.pageCategories = pageCategories;
  }


  public GoogleCloudRetailV2alphaSearchRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

  /**
   * Maximum number of Products to return. If unspecified, defaults to a reasonable value. The maximum allowed value is 120. Values above 120 will be coerced to 120. If this field is negative, an INVALID_ARGUMENT is returned.
   * @return pageSize
   */
  @javax.annotation.Nullable
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }


  public GoogleCloudRetailV2alphaSearchRequest pageToken(String pageToken) {
    this.pageToken = pageToken;
    return this;
  }

  /**
   * A page token SearchResponse.next_page_token, received from a previous SearchService.Search call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to SearchService.Search must match the call that provided the page token. Otherwise, an INVALID_ARGUMENT error is returned.
   * @return pageToken
   */
  @javax.annotation.Nullable
  public String getPageToken() {
    return pageToken;
  }

  public void setPageToken(String pageToken) {
    this.pageToken = pageToken;
  }


  public GoogleCloudRetailV2alphaSearchRequest personalizationSpec(GoogleCloudRetailV2alphaSearchRequestPersonalizationSpec personalizationSpec) {
    this.personalizationSpec = personalizationSpec;
    return this;
  }

  /**
   * Get personalizationSpec
   * @return personalizationSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2alphaSearchRequestPersonalizationSpec getPersonalizationSpec() {
    return personalizationSpec;
  }

  public void setPersonalizationSpec(GoogleCloudRetailV2alphaSearchRequestPersonalizationSpec personalizationSpec) {
    this.personalizationSpec = personalizationSpec;
  }


  public GoogleCloudRetailV2alphaSearchRequest query(String query) {
    this.query = query;
    return this;
  }

  /**
   * Raw search query. If this field is empty, the request is considered a category browsing request and returned results are based on filter and page_categories.
   * @return query
   */
  @javax.annotation.Nullable
  public String getQuery() {
    return query;
  }

  public void setQuery(String query) {
    this.query = query;
  }


  public GoogleCloudRetailV2alphaSearchRequest queryExpansionSpec(GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec queryExpansionSpec) {
    this.queryExpansionSpec = queryExpansionSpec;
    return this;
  }

  /**
   * Get queryExpansionSpec
   * @return queryExpansionSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec getQueryExpansionSpec() {
    return queryExpansionSpec;
  }

  public void setQueryExpansionSpec(GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec queryExpansionSpec) {
    this.queryExpansionSpec = queryExpansionSpec;
  }


  public GoogleCloudRetailV2alphaSearchRequest relevanceThreshold(RelevanceThresholdEnum relevanceThreshold) {
    this.relevanceThreshold = relevanceThreshold;
    return this;
  }

  /**
   * The relevance threshold of the search results. Defaults to RelevanceThreshold.HIGH, which means only the most relevant results are shown, and the least number of results are returned. For more information, see [Adjust result size](https://cloud.google.com/retail/docs/result-size#relevance_thresholding).
   * @return relevanceThreshold
   */
  @javax.annotation.Nullable
  public RelevanceThresholdEnum getRelevanceThreshold() {
    return relevanceThreshold;
  }

  public void setRelevanceThreshold(RelevanceThresholdEnum relevanceThreshold) {
    this.relevanceThreshold = relevanceThreshold;
  }


  public GoogleCloudRetailV2alphaSearchRequest searchMode(SearchModeEnum searchMode) {
    this.searchMode = searchMode;
    return this;
  }

  /**
   * The search mode of the search request. If not specified, a single search request triggers both product search and faceted search.
   * @return searchMode
   */
  @javax.annotation.Nullable
  public SearchModeEnum getSearchMode() {
    return searchMode;
  }

  public void setSearchMode(SearchModeEnum searchMode) {
    this.searchMode = searchMode;
  }


  public GoogleCloudRetailV2alphaSearchRequest spellCorrectionSpec(GoogleCloudRetailV2alphaSearchRequestSpellCorrectionSpec spellCorrectionSpec) {
    this.spellCorrectionSpec = spellCorrectionSpec;
    return this;
  }

  /**
   * Get spellCorrectionSpec
   * @return spellCorrectionSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2alphaSearchRequestSpellCorrectionSpec getSpellCorrectionSpec() {
    return spellCorrectionSpec;
  }

  public void setSpellCorrectionSpec(GoogleCloudRetailV2alphaSearchRequestSpellCorrectionSpec spellCorrectionSpec) {
    this.spellCorrectionSpec = spellCorrectionSpec;
  }


  public GoogleCloudRetailV2alphaSearchRequest userInfo(GoogleCloudRetailV2alphaUserInfo userInfo) {
    this.userInfo = userInfo;
    return this;
  }

  /**
   * Get userInfo
   * @return userInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2alphaUserInfo getUserInfo() {
    return userInfo;
  }

  public void setUserInfo(GoogleCloudRetailV2alphaUserInfo userInfo) {
    this.userInfo = userInfo;
  }


  public GoogleCloudRetailV2alphaSearchRequest variantRollupKeys(List<String> variantRollupKeys) {
    this.variantRollupKeys = variantRollupKeys;
    return this;
  }

  public GoogleCloudRetailV2alphaSearchRequest addVariantRollupKeysItem(String variantRollupKeysItem) {
    if (this.variantRollupKeys == null) {
      this.variantRollupKeys = new ArrayList<>();
    }
    this.variantRollupKeys.add(variantRollupKeysItem);
    return this;
  }

  /**
   * The keys to fetch and rollup the matching variant Products attributes, FulfillmentInfo or LocalInventorys attributes. The attributes from all the matching variant Products or LocalInventorys are merged and de-duplicated. Notice that rollup attributes will lead to extra query latency. Maximum number of keys is 30. For FulfillmentInfo, a fulfillment type and a fulfillment ID must be provided in the format of \&quot;fulfillmentType.fulfillmentId\&quot;. E.g., in \&quot;pickupInStore.store123\&quot;, \&quot;pickupInStore\&quot; is fulfillment type and \&quot;store123\&quot; is the store ID. Supported keys are: * colorFamilies * price * originalPrice * discount * variantId * inventory(place_id,price) * inventory(place_id,original_price) * inventory(place_id,attributes.key), where key is any key in the Product.local_inventories.attributes map. * attributes.key, where key is any key in the Product.attributes map. * pickupInStore.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \&quot;pickup-in-store\&quot;. * shipToStore.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \&quot;ship-to-store\&quot;. * sameDayDelivery.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \&quot;same-day-delivery\&quot;. * nextDayDelivery.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \&quot;next-day-delivery\&quot;. * customFulfillment1.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \&quot;custom-type-1\&quot;. * customFulfillment2.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \&quot;custom-type-2\&quot;. * customFulfillment3.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \&quot;custom-type-3\&quot;. * customFulfillment4.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \&quot;custom-type-4\&quot;. * customFulfillment5.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \&quot;custom-type-5\&quot;. If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned.
   * @return variantRollupKeys
   */
  @javax.annotation.Nullable
  public List<String> getVariantRollupKeys() {
    return variantRollupKeys;
  }

  public void setVariantRollupKeys(List<String> variantRollupKeys) {
    this.variantRollupKeys = variantRollupKeys;
  }


  public GoogleCloudRetailV2alphaSearchRequest visitorId(String visitorId) {
    this.visitorId = visitorId;
    return this;
  }

  /**
   * Required. A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor logs in or out of the website. This should be the same identifier as UserEvent.visitor_id. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.
   * @return visitorId
   */
  @javax.annotation.Nullable
  public String getVisitorId() {
    return visitorId;
  }

  public void setVisitorId(String visitorId) {
    this.visitorId = visitorId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2alphaSearchRequest googleCloudRetailV2alphaSearchRequest = (GoogleCloudRetailV2alphaSearchRequest) o;
    return Objects.equals(this.boostSpec, googleCloudRetailV2alphaSearchRequest.boostSpec) &&
        Objects.equals(this.branch, googleCloudRetailV2alphaSearchRequest.branch) &&
        Objects.equals(this.canonicalFilter, googleCloudRetailV2alphaSearchRequest.canonicalFilter) &&
        Objects.equals(this.dynamicFacetSpec, googleCloudRetailV2alphaSearchRequest.dynamicFacetSpec) &&
        Objects.equals(this.entity, googleCloudRetailV2alphaSearchRequest.entity) &&
        Objects.equals(this.facetSpecs, googleCloudRetailV2alphaSearchRequest.facetSpecs) &&
        Objects.equals(this.filter, googleCloudRetailV2alphaSearchRequest.filter) &&
        Objects.equals(this.labels, googleCloudRetailV2alphaSearchRequest.labels) &&
        Objects.equals(this.offset, googleCloudRetailV2alphaSearchRequest.offset) &&
        Objects.equals(this.orderBy, googleCloudRetailV2alphaSearchRequest.orderBy) &&
        Objects.equals(this.pageCategories, googleCloudRetailV2alphaSearchRequest.pageCategories) &&
        Objects.equals(this.pageSize, googleCloudRetailV2alphaSearchRequest.pageSize) &&
        Objects.equals(this.pageToken, googleCloudRetailV2alphaSearchRequest.pageToken) &&
        Objects.equals(this.personalizationSpec, googleCloudRetailV2alphaSearchRequest.personalizationSpec) &&
        Objects.equals(this.query, googleCloudRetailV2alphaSearchRequest.query) &&
        Objects.equals(this.queryExpansionSpec, googleCloudRetailV2alphaSearchRequest.queryExpansionSpec) &&
        Objects.equals(this.relevanceThreshold, googleCloudRetailV2alphaSearchRequest.relevanceThreshold) &&
        Objects.equals(this.searchMode, googleCloudRetailV2alphaSearchRequest.searchMode) &&
        Objects.equals(this.spellCorrectionSpec, googleCloudRetailV2alphaSearchRequest.spellCorrectionSpec) &&
        Objects.equals(this.userInfo, googleCloudRetailV2alphaSearchRequest.userInfo) &&
        Objects.equals(this.variantRollupKeys, googleCloudRetailV2alphaSearchRequest.variantRollupKeys) &&
        Objects.equals(this.visitorId, googleCloudRetailV2alphaSearchRequest.visitorId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(boostSpec, branch, canonicalFilter, dynamicFacetSpec, entity, facetSpecs, filter, labels, offset, orderBy, pageCategories, pageSize, pageToken, personalizationSpec, query, queryExpansionSpec, relevanceThreshold, searchMode, spellCorrectionSpec, userInfo, variantRollupKeys, visitorId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2alphaSearchRequest {\n");
    sb.append("    boostSpec: ").append(toIndentedString(boostSpec)).append("\n");
    sb.append("    branch: ").append(toIndentedString(branch)).append("\n");
    sb.append("    canonicalFilter: ").append(toIndentedString(canonicalFilter)).append("\n");
    sb.append("    dynamicFacetSpec: ").append(toIndentedString(dynamicFacetSpec)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    facetSpecs: ").append(toIndentedString(facetSpecs)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    orderBy: ").append(toIndentedString(orderBy)).append("\n");
    sb.append("    pageCategories: ").append(toIndentedString(pageCategories)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    pageToken: ").append(toIndentedString(pageToken)).append("\n");
    sb.append("    personalizationSpec: ").append(toIndentedString(personalizationSpec)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    queryExpansionSpec: ").append(toIndentedString(queryExpansionSpec)).append("\n");
    sb.append("    relevanceThreshold: ").append(toIndentedString(relevanceThreshold)).append("\n");
    sb.append("    searchMode: ").append(toIndentedString(searchMode)).append("\n");
    sb.append("    spellCorrectionSpec: ").append(toIndentedString(spellCorrectionSpec)).append("\n");
    sb.append("    userInfo: ").append(toIndentedString(userInfo)).append("\n");
    sb.append("    variantRollupKeys: ").append(toIndentedString(variantRollupKeys)).append("\n");
    sb.append("    visitorId: ").append(toIndentedString(visitorId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("boostSpec");
    openapiFields.add("branch");
    openapiFields.add("canonicalFilter");
    openapiFields.add("dynamicFacetSpec");
    openapiFields.add("entity");
    openapiFields.add("facetSpecs");
    openapiFields.add("filter");
    openapiFields.add("labels");
    openapiFields.add("offset");
    openapiFields.add("orderBy");
    openapiFields.add("pageCategories");
    openapiFields.add("pageSize");
    openapiFields.add("pageToken");
    openapiFields.add("personalizationSpec");
    openapiFields.add("query");
    openapiFields.add("queryExpansionSpec");
    openapiFields.add("relevanceThreshold");
    openapiFields.add("searchMode");
    openapiFields.add("spellCorrectionSpec");
    openapiFields.add("userInfo");
    openapiFields.add("variantRollupKeys");
    openapiFields.add("visitorId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2alphaSearchRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2alphaSearchRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2alphaSearchRequest is not found in the empty JSON string", GoogleCloudRetailV2alphaSearchRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2alphaSearchRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2alphaSearchRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `boostSpec`
      if (jsonObj.get("boostSpec") != null && !jsonObj.get("boostSpec").isJsonNull()) {
        GoogleCloudRetailV2alphaSearchRequestBoostSpec.validateJsonElement(jsonObj.get("boostSpec"));
      }
      if ((jsonObj.get("branch") != null && !jsonObj.get("branch").isJsonNull()) && !jsonObj.get("branch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `branch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("branch").toString()));
      }
      if ((jsonObj.get("canonicalFilter") != null && !jsonObj.get("canonicalFilter").isJsonNull()) && !jsonObj.get("canonicalFilter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `canonicalFilter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("canonicalFilter").toString()));
      }
      // validate the optional field `dynamicFacetSpec`
      if (jsonObj.get("dynamicFacetSpec") != null && !jsonObj.get("dynamicFacetSpec").isJsonNull()) {
        GoogleCloudRetailV2alphaSearchRequestDynamicFacetSpec.validateJsonElement(jsonObj.get("dynamicFacetSpec"));
      }
      if ((jsonObj.get("entity") != null && !jsonObj.get("entity").isJsonNull()) && !jsonObj.get("entity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entity").toString()));
      }
      if (jsonObj.get("facetSpecs") != null && !jsonObj.get("facetSpecs").isJsonNull()) {
        JsonArray jsonArrayfacetSpecs = jsonObj.getAsJsonArray("facetSpecs");
        if (jsonArrayfacetSpecs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("facetSpecs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `facetSpecs` to be an array in the JSON string but got `%s`", jsonObj.get("facetSpecs").toString()));
          }

          // validate the optional field `facetSpecs` (array)
          for (int i = 0; i < jsonArrayfacetSpecs.size(); i++) {
            GoogleCloudRetailV2alphaSearchRequestFacetSpec.validateJsonElement(jsonArrayfacetSpecs.get(i));
          };
        }
      }
      if ((jsonObj.get("filter") != null && !jsonObj.get("filter").isJsonNull()) && !jsonObj.get("filter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filter").toString()));
      }
      if ((jsonObj.get("orderBy") != null && !jsonObj.get("orderBy").isJsonNull()) && !jsonObj.get("orderBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderBy").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("pageCategories") != null && !jsonObj.get("pageCategories").isJsonNull() && !jsonObj.get("pageCategories").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `pageCategories` to be an array in the JSON string but got `%s`", jsonObj.get("pageCategories").toString()));
      }
      if ((jsonObj.get("pageToken") != null && !jsonObj.get("pageToken").isJsonNull()) && !jsonObj.get("pageToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pageToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pageToken").toString()));
      }
      // validate the optional field `personalizationSpec`
      if (jsonObj.get("personalizationSpec") != null && !jsonObj.get("personalizationSpec").isJsonNull()) {
        GoogleCloudRetailV2alphaSearchRequestPersonalizationSpec.validateJsonElement(jsonObj.get("personalizationSpec"));
      }
      if ((jsonObj.get("query") != null && !jsonObj.get("query").isJsonNull()) && !jsonObj.get("query").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `query` to be a primitive type in the JSON string but got `%s`", jsonObj.get("query").toString()));
      }
      // validate the optional field `queryExpansionSpec`
      if (jsonObj.get("queryExpansionSpec") != null && !jsonObj.get("queryExpansionSpec").isJsonNull()) {
        GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec.validateJsonElement(jsonObj.get("queryExpansionSpec"));
      }
      if ((jsonObj.get("relevanceThreshold") != null && !jsonObj.get("relevanceThreshold").isJsonNull()) && !jsonObj.get("relevanceThreshold").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `relevanceThreshold` to be a primitive type in the JSON string but got `%s`", jsonObj.get("relevanceThreshold").toString()));
      }
      // validate the optional field `relevanceThreshold`
      if (jsonObj.get("relevanceThreshold") != null && !jsonObj.get("relevanceThreshold").isJsonNull()) {
        RelevanceThresholdEnum.validateJsonElement(jsonObj.get("relevanceThreshold"));
      }
      if ((jsonObj.get("searchMode") != null && !jsonObj.get("searchMode").isJsonNull()) && !jsonObj.get("searchMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `searchMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("searchMode").toString()));
      }
      // validate the optional field `searchMode`
      if (jsonObj.get("searchMode") != null && !jsonObj.get("searchMode").isJsonNull()) {
        SearchModeEnum.validateJsonElement(jsonObj.get("searchMode"));
      }
      // validate the optional field `spellCorrectionSpec`
      if (jsonObj.get("spellCorrectionSpec") != null && !jsonObj.get("spellCorrectionSpec").isJsonNull()) {
        GoogleCloudRetailV2alphaSearchRequestSpellCorrectionSpec.validateJsonElement(jsonObj.get("spellCorrectionSpec"));
      }
      // validate the optional field `userInfo`
      if (jsonObj.get("userInfo") != null && !jsonObj.get("userInfo").isJsonNull()) {
        GoogleCloudRetailV2alphaUserInfo.validateJsonElement(jsonObj.get("userInfo"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("variantRollupKeys") != null && !jsonObj.get("variantRollupKeys").isJsonNull() && !jsonObj.get("variantRollupKeys").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `variantRollupKeys` to be an array in the JSON string but got `%s`", jsonObj.get("variantRollupKeys").toString()));
      }
      if ((jsonObj.get("visitorId") != null && !jsonObj.get("visitorId").isJsonNull()) && !jsonObj.get("visitorId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `visitorId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("visitorId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2alphaSearchRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2alphaSearchRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2alphaSearchRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2alphaSearchRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2alphaSearchRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2alphaSearchRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2alphaSearchRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2alphaSearchRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2alphaSearchRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2alphaSearchRequest
   */
  public static GoogleCloudRetailV2alphaSearchRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2alphaSearchRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2alphaSearchRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

