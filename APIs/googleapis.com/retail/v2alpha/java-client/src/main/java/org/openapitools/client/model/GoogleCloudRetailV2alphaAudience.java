/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An intended audience of the Product for whom it&#39;s sold.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:27.124881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2alphaAudience {
  public static final String SERIALIZED_NAME_AGE_GROUPS = "ageGroups";
  @SerializedName(SERIALIZED_NAME_AGE_GROUPS)
  private List<String> ageGroups = new ArrayList<>();

  public static final String SERIALIZED_NAME_GENDERS = "genders";
  @SerializedName(SERIALIZED_NAME_GENDERS)
  private List<String> genders = new ArrayList<>();

  public GoogleCloudRetailV2alphaAudience() {
  }

  public GoogleCloudRetailV2alphaAudience ageGroups(List<String> ageGroups) {
    this.ageGroups = ageGroups;
    return this;
  }

  public GoogleCloudRetailV2alphaAudience addAgeGroupsItem(String ageGroupsItem) {
    if (this.ageGroups == null) {
      this.ageGroups = new ArrayList<>();
    }
    this.ageGroups.add(ageGroupsItem);
    return this;
  }

  /**
   * The age groups of the audience. Strongly encouraged to use the standard values: \&quot;newborn\&quot; (up to 3 months old), \&quot;infant\&quot; (3–12 months old), \&quot;toddler\&quot; (1–5 years old), \&quot;kids\&quot; (5–13 years old), \&quot;adult\&quot; (typically teens or older). At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [age_group](https://support.google.com/merchants/answer/6324463). Schema.org property [Product.audience.suggestedMinAge](https://schema.org/suggestedMinAge) and [Product.audience.suggestedMaxAge](https://schema.org/suggestedMaxAge).
   * @return ageGroups
   */
  @javax.annotation.Nullable
  public List<String> getAgeGroups() {
    return ageGroups;
  }

  public void setAgeGroups(List<String> ageGroups) {
    this.ageGroups = ageGroups;
  }


  public GoogleCloudRetailV2alphaAudience genders(List<String> genders) {
    this.genders = genders;
    return this;
  }

  public GoogleCloudRetailV2alphaAudience addGendersItem(String gendersItem) {
    if (this.genders == null) {
      this.genders = new ArrayList<>();
    }
    this.genders.add(gendersItem);
    return this;
  }

  /**
   * The genders of the audience. Strongly encouraged to use the standard values: \&quot;male\&quot;, \&quot;female\&quot;, \&quot;unisex\&quot;. At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [gender](https://support.google.com/merchants/answer/6324479). Schema.org property [Product.audience.suggestedGender](https://schema.org/suggestedGender).
   * @return genders
   */
  @javax.annotation.Nullable
  public List<String> getGenders() {
    return genders;
  }

  public void setGenders(List<String> genders) {
    this.genders = genders;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2alphaAudience googleCloudRetailV2alphaAudience = (GoogleCloudRetailV2alphaAudience) o;
    return Objects.equals(this.ageGroups, googleCloudRetailV2alphaAudience.ageGroups) &&
        Objects.equals(this.genders, googleCloudRetailV2alphaAudience.genders);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ageGroups, genders);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2alphaAudience {\n");
    sb.append("    ageGroups: ").append(toIndentedString(ageGroups)).append("\n");
    sb.append("    genders: ").append(toIndentedString(genders)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ageGroups");
    openapiFields.add("genders");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2alphaAudience
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2alphaAudience.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2alphaAudience is not found in the empty JSON string", GoogleCloudRetailV2alphaAudience.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2alphaAudience.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2alphaAudience` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("ageGroups") != null && !jsonObj.get("ageGroups").isJsonNull() && !jsonObj.get("ageGroups").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `ageGroups` to be an array in the JSON string but got `%s`", jsonObj.get("ageGroups").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("genders") != null && !jsonObj.get("genders").isJsonNull() && !jsonObj.get("genders").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `genders` to be an array in the JSON string but got `%s`", jsonObj.get("genders").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2alphaAudience.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2alphaAudience' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2alphaAudience> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2alphaAudience.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2alphaAudience>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2alphaAudience value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2alphaAudience read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2alphaAudience given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2alphaAudience
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2alphaAudience
   */
  public static GoogleCloudRetailV2alphaAudience fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2alphaAudience.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2alphaAudience to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

