/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Merchant Center Feed filter criterion.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:27.124881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2alphaMerchantCenterFeedFilter {
  public static final String SERIALIZED_NAME_PRIMARY_FEED_ID = "primaryFeedId";
  @SerializedName(SERIALIZED_NAME_PRIMARY_FEED_ID)
  private String primaryFeedId;

  public static final String SERIALIZED_NAME_PRIMARY_FEED_NAME = "primaryFeedName";
  @SerializedName(SERIALIZED_NAME_PRIMARY_FEED_NAME)
  private String primaryFeedName;

  public GoogleCloudRetailV2alphaMerchantCenterFeedFilter() {
  }

  public GoogleCloudRetailV2alphaMerchantCenterFeedFilter primaryFeedId(String primaryFeedId) {
    this.primaryFeedId = primaryFeedId;
    return this;
  }

  /**
   * Merchant Center primary feed ID.
   * @return primaryFeedId
   */
  @javax.annotation.Nullable
  public String getPrimaryFeedId() {
    return primaryFeedId;
  }

  public void setPrimaryFeedId(String primaryFeedId) {
    this.primaryFeedId = primaryFeedId;
  }


  public GoogleCloudRetailV2alphaMerchantCenterFeedFilter primaryFeedName(String primaryFeedName) {
    this.primaryFeedName = primaryFeedName;
    return this;
  }

  /**
   * Merchant Center primary feed name. The name is used for the display purposes only.
   * @return primaryFeedName
   */
  @javax.annotation.Nullable
  public String getPrimaryFeedName() {
    return primaryFeedName;
  }

  public void setPrimaryFeedName(String primaryFeedName) {
    this.primaryFeedName = primaryFeedName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2alphaMerchantCenterFeedFilter googleCloudRetailV2alphaMerchantCenterFeedFilter = (GoogleCloudRetailV2alphaMerchantCenterFeedFilter) o;
    return Objects.equals(this.primaryFeedId, googleCloudRetailV2alphaMerchantCenterFeedFilter.primaryFeedId) &&
        Objects.equals(this.primaryFeedName, googleCloudRetailV2alphaMerchantCenterFeedFilter.primaryFeedName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(primaryFeedId, primaryFeedName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2alphaMerchantCenterFeedFilter {\n");
    sb.append("    primaryFeedId: ").append(toIndentedString(primaryFeedId)).append("\n");
    sb.append("    primaryFeedName: ").append(toIndentedString(primaryFeedName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("primaryFeedId");
    openapiFields.add("primaryFeedName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2alphaMerchantCenterFeedFilter
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2alphaMerchantCenterFeedFilter.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2alphaMerchantCenterFeedFilter is not found in the empty JSON string", GoogleCloudRetailV2alphaMerchantCenterFeedFilter.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2alphaMerchantCenterFeedFilter.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2alphaMerchantCenterFeedFilter` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("primaryFeedId") != null && !jsonObj.get("primaryFeedId").isJsonNull()) && !jsonObj.get("primaryFeedId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryFeedId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryFeedId").toString()));
      }
      if ((jsonObj.get("primaryFeedName") != null && !jsonObj.get("primaryFeedName").isJsonNull()) && !jsonObj.get("primaryFeedName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryFeedName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryFeedName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2alphaMerchantCenterFeedFilter.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2alphaMerchantCenterFeedFilter' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2alphaMerchantCenterFeedFilter> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2alphaMerchantCenterFeedFilter.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2alphaMerchantCenterFeedFilter>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2alphaMerchantCenterFeedFilter value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2alphaMerchantCenterFeedFilter read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2alphaMerchantCenterFeedFilter given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2alphaMerchantCenterFeedFilter
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2alphaMerchantCenterFeedFilter
   */
  public static GoogleCloudRetailV2alphaMerchantCenterFeedFilter fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2alphaMerchantCenterFeedFilter.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2alphaMerchantCenterFeedFilter to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

