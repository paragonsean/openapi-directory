/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudRetailV2alphaUserEvent;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The inline source for the input config for ImportUserEvents method.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:27.124881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2alphaUserEventInlineSource {
  public static final String SERIALIZED_NAME_USER_EVENTS = "userEvents";
  @SerializedName(SERIALIZED_NAME_USER_EVENTS)
  private List<GoogleCloudRetailV2alphaUserEvent> userEvents = new ArrayList<>();

  public GoogleCloudRetailV2alphaUserEventInlineSource() {
  }

  public GoogleCloudRetailV2alphaUserEventInlineSource userEvents(List<GoogleCloudRetailV2alphaUserEvent> userEvents) {
    this.userEvents = userEvents;
    return this;
  }

  public GoogleCloudRetailV2alphaUserEventInlineSource addUserEventsItem(GoogleCloudRetailV2alphaUserEvent userEventsItem) {
    if (this.userEvents == null) {
      this.userEvents = new ArrayList<>();
    }
    this.userEvents.add(userEventsItem);
    return this;
  }

  /**
   * Required. A list of user events to import. Recommended max of 10k items.
   * @return userEvents
   */
  @javax.annotation.Nullable
  public List<GoogleCloudRetailV2alphaUserEvent> getUserEvents() {
    return userEvents;
  }

  public void setUserEvents(List<GoogleCloudRetailV2alphaUserEvent> userEvents) {
    this.userEvents = userEvents;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2alphaUserEventInlineSource googleCloudRetailV2alphaUserEventInlineSource = (GoogleCloudRetailV2alphaUserEventInlineSource) o;
    return Objects.equals(this.userEvents, googleCloudRetailV2alphaUserEventInlineSource.userEvents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userEvents);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2alphaUserEventInlineSource {\n");
    sb.append("    userEvents: ").append(toIndentedString(userEvents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("userEvents");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2alphaUserEventInlineSource
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2alphaUserEventInlineSource.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2alphaUserEventInlineSource is not found in the empty JSON string", GoogleCloudRetailV2alphaUserEventInlineSource.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2alphaUserEventInlineSource.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2alphaUserEventInlineSource` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("userEvents") != null && !jsonObj.get("userEvents").isJsonNull()) {
        JsonArray jsonArrayuserEvents = jsonObj.getAsJsonArray("userEvents");
        if (jsonArrayuserEvents != null) {
          // ensure the json data is an array
          if (!jsonObj.get("userEvents").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `userEvents` to be an array in the JSON string but got `%s`", jsonObj.get("userEvents").toString()));
          }

          // validate the optional field `userEvents` (array)
          for (int i = 0; i < jsonArrayuserEvents.size(); i++) {
            GoogleCloudRetailV2alphaUserEvent.validateJsonElement(jsonArrayuserEvents.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2alphaUserEventInlineSource.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2alphaUserEventInlineSource' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2alphaUserEventInlineSource> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2alphaUserEventInlineSource.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2alphaUserEventInlineSource>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2alphaUserEventInlineSource value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2alphaUserEventInlineSource read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2alphaUserEventInlineSource given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2alphaUserEventInlineSource
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2alphaUserEventInlineSource
   */
  public static GoogleCloudRetailV2alphaUserEventInlineSource fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2alphaUserEventInlineSource.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2alphaUserEventInlineSource to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

