/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Specification to determine under which conditions query expansion should occur.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:27.124881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec {
  /**
   * The condition under which query expansion should occur. Default to Condition.DISABLED.
   */
  @JsonAdapter(ConditionEnum.Adapter.class)
  public enum ConditionEnum {
    CONDITION_UNSPECIFIED("CONDITION_UNSPECIFIED"),
    
    DISABLED("DISABLED"),
    
    AUTO("AUTO");

    private String value;

    ConditionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ConditionEnum fromValue(String value) {
      for (ConditionEnum b : ConditionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ConditionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ConditionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ConditionEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ConditionEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ConditionEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CONDITION = "condition";
  @SerializedName(SERIALIZED_NAME_CONDITION)
  private ConditionEnum condition;

  public static final String SERIALIZED_NAME_PIN_UNEXPANDED_RESULTS = "pinUnexpandedResults";
  @SerializedName(SERIALIZED_NAME_PIN_UNEXPANDED_RESULTS)
  private Boolean pinUnexpandedResults;

  public GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec() {
  }

  public GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec condition(ConditionEnum condition) {
    this.condition = condition;
    return this;
  }

  /**
   * The condition under which query expansion should occur. Default to Condition.DISABLED.
   * @return condition
   */
  @javax.annotation.Nullable
  public ConditionEnum getCondition() {
    return condition;
  }

  public void setCondition(ConditionEnum condition) {
    this.condition = condition;
  }


  public GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec pinUnexpandedResults(Boolean pinUnexpandedResults) {
    this.pinUnexpandedResults = pinUnexpandedResults;
    return this;
  }

  /**
   * Whether to pin unexpanded results. If this field is set to true, unexpanded products are always at the top of the search results, followed by the expanded results.
   * @return pinUnexpandedResults
   */
  @javax.annotation.Nullable
  public Boolean getPinUnexpandedResults() {
    return pinUnexpandedResults;
  }

  public void setPinUnexpandedResults(Boolean pinUnexpandedResults) {
    this.pinUnexpandedResults = pinUnexpandedResults;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec googleCloudRetailV2alphaSearchRequestQueryExpansionSpec = (GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec) o;
    return Objects.equals(this.condition, googleCloudRetailV2alphaSearchRequestQueryExpansionSpec.condition) &&
        Objects.equals(this.pinUnexpandedResults, googleCloudRetailV2alphaSearchRequestQueryExpansionSpec.pinUnexpandedResults);
  }

  @Override
  public int hashCode() {
    return Objects.hash(condition, pinUnexpandedResults);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec {\n");
    sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
    sb.append("    pinUnexpandedResults: ").append(toIndentedString(pinUnexpandedResults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("condition");
    openapiFields.add("pinUnexpandedResults");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec is not found in the empty JSON string", GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("condition") != null && !jsonObj.get("condition").isJsonNull()) && !jsonObj.get("condition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `condition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("condition").toString()));
      }
      // validate the optional field `condition`
      if (jsonObj.get("condition") != null && !jsonObj.get("condition").isJsonNull()) {
        ConditionEnum.validateJsonElement(jsonObj.get("condition"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec
   */
  public static GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

