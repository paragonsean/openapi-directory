/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudRetailV2alphaSearchRequestDynamicFacetSpec;
import org.openapitools.client.model.GoogleCloudRetailV2alphaSearchRequestPersonalizationSpec;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleCloudRetailV2alphaServingConfig
 */
public class GoogleCloudRetailV2alphaServingConfigTest {
    private final GoogleCloudRetailV2alphaServingConfig model = new GoogleCloudRetailV2alphaServingConfig();

    /**
     * Model tests for GoogleCloudRetailV2alphaServingConfig
     */
    @Test
    public void testGoogleCloudRetailV2alphaServingConfig() {
        // TODO: test GoogleCloudRetailV2alphaServingConfig
    }

    /**
     * Test the property 'boostControlIds'
     */
    @Test
    public void boostControlIdsTest() {
        // TODO: test boostControlIds
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'diversityLevel'
     */
    @Test
    public void diversityLevelTest() {
        // TODO: test diversityLevel
    }

    /**
     * Test the property 'diversityType'
     */
    @Test
    public void diversityTypeTest() {
        // TODO: test diversityType
    }

    /**
     * Test the property 'doNotAssociateControlIds'
     */
    @Test
    public void doNotAssociateControlIdsTest() {
        // TODO: test doNotAssociateControlIds
    }

    /**
     * Test the property 'dynamicFacetSpec'
     */
    @Test
    public void dynamicFacetSpecTest() {
        // TODO: test dynamicFacetSpec
    }

    /**
     * Test the property 'enableCategoryFilterLevel'
     */
    @Test
    public void enableCategoryFilterLevelTest() {
        // TODO: test enableCategoryFilterLevel
    }

    /**
     * Test the property 'facetControlIds'
     */
    @Test
    public void facetControlIdsTest() {
        // TODO: test facetControlIds
    }

    /**
     * Test the property 'filterControlIds'
     */
    @Test
    public void filterControlIdsTest() {
        // TODO: test filterControlIds
    }

    /**
     * Test the property 'ignoreControlIds'
     */
    @Test
    public void ignoreControlIdsTest() {
        // TODO: test ignoreControlIds
    }

    /**
     * Test the property 'modelId'
     */
    @Test
    public void modelIdTest() {
        // TODO: test modelId
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'onewaySynonymsControlIds'
     */
    @Test
    public void onewaySynonymsControlIdsTest() {
        // TODO: test onewaySynonymsControlIds
    }

    /**
     * Test the property 'personalizationSpec'
     */
    @Test
    public void personalizationSpecTest() {
        // TODO: test personalizationSpec
    }

    /**
     * Test the property 'priceRerankingLevel'
     */
    @Test
    public void priceRerankingLevelTest() {
        // TODO: test priceRerankingLevel
    }

    /**
     * Test the property 'redirectControlIds'
     */
    @Test
    public void redirectControlIdsTest() {
        // TODO: test redirectControlIds
    }

    /**
     * Test the property 'replacementControlIds'
     */
    @Test
    public void replacementControlIdsTest() {
        // TODO: test replacementControlIds
    }

    /**
     * Test the property 'solutionTypes'
     */
    @Test
    public void solutionTypesTest() {
        // TODO: test solutionTypes
    }

    /**
     * Test the property 'twowaySynonymsControlIds'
     */
    @Test
    public void twowaySynonymsControlIdsTest() {
        // TODO: test twowaySynonymsControlIds
    }

}
