/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudRetailV2betaMerchantCenterAccountLinkMerchantCenterFeedFilter;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a link between a Merchant Center account and a branch. After a link is established, products from the linked Merchant Center account are streamed to the linked branch.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:22.008824-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2betaMerchantCenterAccountLink {
  public static final String SERIALIZED_NAME_BRANCH_ID = "branchId";
  @SerializedName(SERIALIZED_NAME_BRANCH_ID)
  private String branchId;

  public static final String SERIALIZED_NAME_FEED_FILTERS = "feedFilters";
  @SerializedName(SERIALIZED_NAME_FEED_FILTERS)
  private List<GoogleCloudRetailV2betaMerchantCenterAccountLinkMerchantCenterFeedFilter> feedFilters = new ArrayList<>();

  public static final String SERIALIZED_NAME_FEED_LABEL = "feedLabel";
  @SerializedName(SERIALIZED_NAME_FEED_LABEL)
  private String feedLabel;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "languageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_MERCHANT_CENTER_ACCOUNT_ID = "merchantCenterAccountId";
  @SerializedName(SERIALIZED_NAME_MERCHANT_CENTER_ACCOUNT_ID)
  private String merchantCenterAccountId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PROJECT_ID = "projectId";
  @SerializedName(SERIALIZED_NAME_PROJECT_ID)
  private String projectId;

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private String source;

  /**
   * Output only. Represents the state of the link.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    STATE_UNSPECIFIED("STATE_UNSPECIFIED"),
    
    PENDING("PENDING"),
    
    ACTIVE("ACTIVE"),
    
    FAILED("FAILED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public GoogleCloudRetailV2betaMerchantCenterAccountLink() {
  }

  public GoogleCloudRetailV2betaMerchantCenterAccountLink(
     String id, 
     String name, 
     String projectId, 
     StateEnum state
  ) {
    this();
    this.id = id;
    this.name = name;
    this.projectId = projectId;
    this.state = state;
  }

  public GoogleCloudRetailV2betaMerchantCenterAccountLink branchId(String branchId) {
    this.branchId = branchId;
    return this;
  }

  /**
   * Required. The branch ID (e.g. 0/1/2) within the catalog that products from merchant_center_account_id are streamed to. When updating this field, an empty value will use the currently configured default branch. However, changing the default branch later on won&#39;t change the linked branch here. A single branch ID can only have one linked Merchant Center account ID.
   * @return branchId
   */
  @javax.annotation.Nullable
  public String getBranchId() {
    return branchId;
  }

  public void setBranchId(String branchId) {
    this.branchId = branchId;
  }


  public GoogleCloudRetailV2betaMerchantCenterAccountLink feedFilters(List<GoogleCloudRetailV2betaMerchantCenterAccountLinkMerchantCenterFeedFilter> feedFilters) {
    this.feedFilters = feedFilters;
    return this;
  }

  public GoogleCloudRetailV2betaMerchantCenterAccountLink addFeedFiltersItem(GoogleCloudRetailV2betaMerchantCenterAccountLinkMerchantCenterFeedFilter feedFiltersItem) {
    if (this.feedFilters == null) {
      this.feedFilters = new ArrayList<>();
    }
    this.feedFilters.add(feedFiltersItem);
    return this;
  }

  /**
   * Criteria for the Merchant Center feeds to be ingested via the link. All offers will be ingested if the list is empty. Otherwise the offers will be ingested from selected feeds.
   * @return feedFilters
   */
  @javax.annotation.Nullable
  public List<GoogleCloudRetailV2betaMerchantCenterAccountLinkMerchantCenterFeedFilter> getFeedFilters() {
    return feedFilters;
  }

  public void setFeedFilters(List<GoogleCloudRetailV2betaMerchantCenterAccountLinkMerchantCenterFeedFilter> feedFilters) {
    this.feedFilters = feedFilters;
  }


  public GoogleCloudRetailV2betaMerchantCenterAccountLink feedLabel(String feedLabel) {
    this.feedLabel = feedLabel;
    return this;
  }

  /**
   * The FeedLabel used to perform filtering. Note: this replaces [region_id](https://developers.google.com/shopping-content/reference/rest/v2.1/products#Product.FIELDS.feed_label). Example value: &#x60;US&#x60;. Example value: &#x60;FeedLabel1&#x60;.
   * @return feedLabel
   */
  @javax.annotation.Nullable
  public String getFeedLabel() {
    return feedLabel;
  }

  public void setFeedLabel(String feedLabel) {
    this.feedLabel = feedLabel;
  }


  /**
   * Output only. Immutable. MerchantCenterAccountLink identifier, which is the final component of name. This field is auto generated and follows the convention: &#x60;BranchId_MerchantCenterAccountId&#x60;. &#x60;projects/_*_/locations/global/catalogs/default_catalog/merchantCenterAccountLinks/id_1&#x60;.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }



  public GoogleCloudRetailV2betaMerchantCenterAccountLink languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * Language of the title/description and other string attributes. Use language tags defined by [BCP 47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). ISO 639-1. This specifies the language of offers in Merchant Center that will be accepted. If empty, no language filtering will be performed. Example value: &#x60;en&#x60;.
   * @return languageCode
   */
  @javax.annotation.Nullable
  public String getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public GoogleCloudRetailV2betaMerchantCenterAccountLink merchantCenterAccountId(String merchantCenterAccountId) {
    this.merchantCenterAccountId = merchantCenterAccountId;
    return this;
  }

  /**
   * Required. The linked [Merchant center account id](https://developers.google.com/shopping-content/guides/accountstatuses). The account must be a standalone account or a sub-account of a MCA.
   * @return merchantCenterAccountId
   */
  @javax.annotation.Nullable
  public String getMerchantCenterAccountId() {
    return merchantCenterAccountId;
  }

  public void setMerchantCenterAccountId(String merchantCenterAccountId) {
    this.merchantCenterAccountId = merchantCenterAccountId;
  }


  /**
   * Output only. Immutable. Full resource name of the Merchant Center Account Link, such as &#x60;projects/_*_/locations/global/catalogs/default_catalog/merchantCenterAccountLinks/merchant_center_account_link&#x60;.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  /**
   * Output only. Google Cloud project ID.
   * @return projectId
   */
  @javax.annotation.Nullable
  public String getProjectId() {
    return projectId;
  }



  public GoogleCloudRetailV2betaMerchantCenterAccountLink source(String source) {
    this.source = source;
    return this;
  }

  /**
   * Optional. An optional arbitrary string that could be used as a tag for tracking link source.
   * @return source
   */
  @javax.annotation.Nullable
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }


  /**
   * Output only. Represents the state of the link.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2betaMerchantCenterAccountLink googleCloudRetailV2betaMerchantCenterAccountLink = (GoogleCloudRetailV2betaMerchantCenterAccountLink) o;
    return Objects.equals(this.branchId, googleCloudRetailV2betaMerchantCenterAccountLink.branchId) &&
        Objects.equals(this.feedFilters, googleCloudRetailV2betaMerchantCenterAccountLink.feedFilters) &&
        Objects.equals(this.feedLabel, googleCloudRetailV2betaMerchantCenterAccountLink.feedLabel) &&
        Objects.equals(this.id, googleCloudRetailV2betaMerchantCenterAccountLink.id) &&
        Objects.equals(this.languageCode, googleCloudRetailV2betaMerchantCenterAccountLink.languageCode) &&
        Objects.equals(this.merchantCenterAccountId, googleCloudRetailV2betaMerchantCenterAccountLink.merchantCenterAccountId) &&
        Objects.equals(this.name, googleCloudRetailV2betaMerchantCenterAccountLink.name) &&
        Objects.equals(this.projectId, googleCloudRetailV2betaMerchantCenterAccountLink.projectId) &&
        Objects.equals(this.source, googleCloudRetailV2betaMerchantCenterAccountLink.source) &&
        Objects.equals(this.state, googleCloudRetailV2betaMerchantCenterAccountLink.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(branchId, feedFilters, feedLabel, id, languageCode, merchantCenterAccountId, name, projectId, source, state);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2betaMerchantCenterAccountLink {\n");
    sb.append("    branchId: ").append(toIndentedString(branchId)).append("\n");
    sb.append("    feedFilters: ").append(toIndentedString(feedFilters)).append("\n");
    sb.append("    feedLabel: ").append(toIndentedString(feedLabel)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    merchantCenterAccountId: ").append(toIndentedString(merchantCenterAccountId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("branchId");
    openapiFields.add("feedFilters");
    openapiFields.add("feedLabel");
    openapiFields.add("id");
    openapiFields.add("languageCode");
    openapiFields.add("merchantCenterAccountId");
    openapiFields.add("name");
    openapiFields.add("projectId");
    openapiFields.add("source");
    openapiFields.add("state");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2betaMerchantCenterAccountLink
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2betaMerchantCenterAccountLink.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2betaMerchantCenterAccountLink is not found in the empty JSON string", GoogleCloudRetailV2betaMerchantCenterAccountLink.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2betaMerchantCenterAccountLink.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2betaMerchantCenterAccountLink` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("branchId") != null && !jsonObj.get("branchId").isJsonNull()) && !jsonObj.get("branchId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `branchId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("branchId").toString()));
      }
      if (jsonObj.get("feedFilters") != null && !jsonObj.get("feedFilters").isJsonNull()) {
        JsonArray jsonArrayfeedFilters = jsonObj.getAsJsonArray("feedFilters");
        if (jsonArrayfeedFilters != null) {
          // ensure the json data is an array
          if (!jsonObj.get("feedFilters").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `feedFilters` to be an array in the JSON string but got `%s`", jsonObj.get("feedFilters").toString()));
          }

          // validate the optional field `feedFilters` (array)
          for (int i = 0; i < jsonArrayfeedFilters.size(); i++) {
            GoogleCloudRetailV2betaMerchantCenterAccountLinkMerchantCenterFeedFilter.validateJsonElement(jsonArrayfeedFilters.get(i));
          };
        }
      }
      if ((jsonObj.get("feedLabel") != null && !jsonObj.get("feedLabel").isJsonNull()) && !jsonObj.get("feedLabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `feedLabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("feedLabel").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("languageCode") != null && !jsonObj.get("languageCode").isJsonNull()) && !jsonObj.get("languageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `languageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("languageCode").toString()));
      }
      if ((jsonObj.get("merchantCenterAccountId") != null && !jsonObj.get("merchantCenterAccountId").isJsonNull()) && !jsonObj.get("merchantCenterAccountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchantCenterAccountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchantCenterAccountId").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("projectId") != null && !jsonObj.get("projectId").isJsonNull()) && !jsonObj.get("projectId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectId").toString()));
      }
      if ((jsonObj.get("source") != null && !jsonObj.get("source").isJsonNull()) && !jsonObj.get("source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("source").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2betaMerchantCenterAccountLink.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2betaMerchantCenterAccountLink' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2betaMerchantCenterAccountLink> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2betaMerchantCenterAccountLink.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2betaMerchantCenterAccountLink>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2betaMerchantCenterAccountLink value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2betaMerchantCenterAccountLink read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2betaMerchantCenterAccountLink given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2betaMerchantCenterAccountLink
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2betaMerchantCenterAccountLink
   */
  public static GoogleCloudRetailV2betaMerchantCenterAccountLink fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2betaMerchantCenterAccountLink.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2betaMerchantCenterAccountLink to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

