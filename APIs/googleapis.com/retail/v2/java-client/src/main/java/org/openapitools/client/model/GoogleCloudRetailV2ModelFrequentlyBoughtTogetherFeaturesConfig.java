/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Additional configs for the frequently-bought-together model type.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:22.008824-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig {
  /**
   * Optional. Specifies the context of the model when it is used in predict requests. Can only be set for the &#x60;frequently-bought-together&#x60; type. If it isn&#39;t specified, it defaults to MULTIPLE_CONTEXT_PRODUCTS.
   */
  @JsonAdapter(ContextProductsTypeEnum.Adapter.class)
  public enum ContextProductsTypeEnum {
    CONTEXT_PRODUCTS_TYPE_UNSPECIFIED("CONTEXT_PRODUCTS_TYPE_UNSPECIFIED"),
    
    SINGLE_CONTEXT_PRODUCT("SINGLE_CONTEXT_PRODUCT"),
    
    MULTIPLE_CONTEXT_PRODUCTS("MULTIPLE_CONTEXT_PRODUCTS");

    private String value;

    ContextProductsTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ContextProductsTypeEnum fromValue(String value) {
      for (ContextProductsTypeEnum b : ContextProductsTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ContextProductsTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ContextProductsTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ContextProductsTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ContextProductsTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ContextProductsTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CONTEXT_PRODUCTS_TYPE = "contextProductsType";
  @SerializedName(SERIALIZED_NAME_CONTEXT_PRODUCTS_TYPE)
  private ContextProductsTypeEnum contextProductsType;

  public GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig() {
  }

  public GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig contextProductsType(ContextProductsTypeEnum contextProductsType) {
    this.contextProductsType = contextProductsType;
    return this;
  }

  /**
   * Optional. Specifies the context of the model when it is used in predict requests. Can only be set for the &#x60;frequently-bought-together&#x60; type. If it isn&#39;t specified, it defaults to MULTIPLE_CONTEXT_PRODUCTS.
   * @return contextProductsType
   */
  @javax.annotation.Nullable
  public ContextProductsTypeEnum getContextProductsType() {
    return contextProductsType;
  }

  public void setContextProductsType(ContextProductsTypeEnum contextProductsType) {
    this.contextProductsType = contextProductsType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig googleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig = (GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig) o;
    return Objects.equals(this.contextProductsType, googleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig.contextProductsType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contextProductsType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig {\n");
    sb.append("    contextProductsType: ").append(toIndentedString(contextProductsType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("contextProductsType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig is not found in the empty JSON string", GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("contextProductsType") != null && !jsonObj.get("contextProductsType").isJsonNull()) && !jsonObj.get("contextProductsType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contextProductsType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contextProductsType").toString()));
      }
      // validate the optional field `contextProductsType`
      if (jsonObj.get("contextProductsType") != null && !jsonObj.get("contextProductsType").isJsonNull()) {
        ContextProductsTypeEnum.validateJsonElement(jsonObj.get("contextProductsType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig
   */
  public static GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

