/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudRetailV2CustomAttribute;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Resource that represents completion results.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:22.008824-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2CompleteQueryResponseCompletionResult {
  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Map<String, GoogleCloudRetailV2CustomAttribute> attributes = new HashMap<>();

  public static final String SERIALIZED_NAME_SUGGESTION = "suggestion";
  @SerializedName(SERIALIZED_NAME_SUGGESTION)
  private String suggestion;

  public GoogleCloudRetailV2CompleteQueryResponseCompletionResult() {
  }

  public GoogleCloudRetailV2CompleteQueryResponseCompletionResult attributes(Map<String, GoogleCloudRetailV2CustomAttribute> attributes) {
    this.attributes = attributes;
    return this;
  }

  public GoogleCloudRetailV2CompleteQueryResponseCompletionResult putAttributesItem(String key, GoogleCloudRetailV2CustomAttribute attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

  /**
   * Custom attributes for the suggestion term. * For \&quot;user-data\&quot;, the attributes are additional custom attributes ingested through BigQuery. * For \&quot;cloud-retail\&quot;, the attributes are product attributes generated by Cloud Retail. It requires UserEvent.product_details is imported properly.
   * @return attributes
   */
  @javax.annotation.Nullable
  public Map<String, GoogleCloudRetailV2CustomAttribute> getAttributes() {
    return attributes;
  }

  public void setAttributes(Map<String, GoogleCloudRetailV2CustomAttribute> attributes) {
    this.attributes = attributes;
  }


  public GoogleCloudRetailV2CompleteQueryResponseCompletionResult suggestion(String suggestion) {
    this.suggestion = suggestion;
    return this;
  }

  /**
   * The suggestion for the query.
   * @return suggestion
   */
  @javax.annotation.Nullable
  public String getSuggestion() {
    return suggestion;
  }

  public void setSuggestion(String suggestion) {
    this.suggestion = suggestion;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2CompleteQueryResponseCompletionResult googleCloudRetailV2CompleteQueryResponseCompletionResult = (GoogleCloudRetailV2CompleteQueryResponseCompletionResult) o;
    return Objects.equals(this.attributes, googleCloudRetailV2CompleteQueryResponseCompletionResult.attributes) &&
        Objects.equals(this.suggestion, googleCloudRetailV2CompleteQueryResponseCompletionResult.suggestion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributes, suggestion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2CompleteQueryResponseCompletionResult {\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    suggestion: ").append(toIndentedString(suggestion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attributes");
    openapiFields.add("suggestion");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2CompleteQueryResponseCompletionResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2CompleteQueryResponseCompletionResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2CompleteQueryResponseCompletionResult is not found in the empty JSON string", GoogleCloudRetailV2CompleteQueryResponseCompletionResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2CompleteQueryResponseCompletionResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2CompleteQueryResponseCompletionResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("suggestion") != null && !jsonObj.get("suggestion").isJsonNull()) && !jsonObj.get("suggestion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `suggestion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("suggestion").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2CompleteQueryResponseCompletionResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2CompleteQueryResponseCompletionResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2CompleteQueryResponseCompletionResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2CompleteQueryResponseCompletionResult.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2CompleteQueryResponseCompletionResult>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2CompleteQueryResponseCompletionResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2CompleteQueryResponseCompletionResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2CompleteQueryResponseCompletionResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2CompleteQueryResponseCompletionResult
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2CompleteQueryResponseCompletionResult
   */
  public static GoogleCloudRetailV2CompleteQueryResponseCompletionResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2CompleteQueryResponseCompletionResult.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2CompleteQueryResponseCompletionResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

