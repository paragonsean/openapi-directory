/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for RejoinUserEvents method.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:22.008824-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2RejoinUserEventsRequest {
  /**
   * The type of the user event rejoin to define the scope and range of the user events to be rejoined with the latest product catalog. Defaults to &#x60;USER_EVENT_REJOIN_SCOPE_UNSPECIFIED&#x60; if this field is not set, or set to an invalid integer value.
   */
  @JsonAdapter(UserEventRejoinScopeEnum.Adapter.class)
  public enum UserEventRejoinScopeEnum {
    USER_EVENT_REJOIN_SCOPE_UNSPECIFIED("USER_EVENT_REJOIN_SCOPE_UNSPECIFIED"),
    
    JOINED_EVENTS("JOINED_EVENTS"),
    
    UNJOINED_EVENTS("UNJOINED_EVENTS");

    private String value;

    UserEventRejoinScopeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static UserEventRejoinScopeEnum fromValue(String value) {
      for (UserEventRejoinScopeEnum b : UserEventRejoinScopeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<UserEventRejoinScopeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final UserEventRejoinScopeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public UserEventRejoinScopeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return UserEventRejoinScopeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      UserEventRejoinScopeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_USER_EVENT_REJOIN_SCOPE = "userEventRejoinScope";
  @SerializedName(SERIALIZED_NAME_USER_EVENT_REJOIN_SCOPE)
  private UserEventRejoinScopeEnum userEventRejoinScope;

  public GoogleCloudRetailV2RejoinUserEventsRequest() {
  }

  public GoogleCloudRetailV2RejoinUserEventsRequest userEventRejoinScope(UserEventRejoinScopeEnum userEventRejoinScope) {
    this.userEventRejoinScope = userEventRejoinScope;
    return this;
  }

  /**
   * The type of the user event rejoin to define the scope and range of the user events to be rejoined with the latest product catalog. Defaults to &#x60;USER_EVENT_REJOIN_SCOPE_UNSPECIFIED&#x60; if this field is not set, or set to an invalid integer value.
   * @return userEventRejoinScope
   */
  @javax.annotation.Nullable
  public UserEventRejoinScopeEnum getUserEventRejoinScope() {
    return userEventRejoinScope;
  }

  public void setUserEventRejoinScope(UserEventRejoinScopeEnum userEventRejoinScope) {
    this.userEventRejoinScope = userEventRejoinScope;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2RejoinUserEventsRequest googleCloudRetailV2RejoinUserEventsRequest = (GoogleCloudRetailV2RejoinUserEventsRequest) o;
    return Objects.equals(this.userEventRejoinScope, googleCloudRetailV2RejoinUserEventsRequest.userEventRejoinScope);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userEventRejoinScope);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2RejoinUserEventsRequest {\n");
    sb.append("    userEventRejoinScope: ").append(toIndentedString(userEventRejoinScope)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("userEventRejoinScope");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2RejoinUserEventsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2RejoinUserEventsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2RejoinUserEventsRequest is not found in the empty JSON string", GoogleCloudRetailV2RejoinUserEventsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2RejoinUserEventsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2RejoinUserEventsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("userEventRejoinScope") != null && !jsonObj.get("userEventRejoinScope").isJsonNull()) && !jsonObj.get("userEventRejoinScope").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userEventRejoinScope` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userEventRejoinScope").toString()));
      }
      // validate the optional field `userEventRejoinScope`
      if (jsonObj.get("userEventRejoinScope") != null && !jsonObj.get("userEventRejoinScope").isJsonNull()) {
        UserEventRejoinScopeEnum.validateJsonElement(jsonObj.get("userEventRejoinScope"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2RejoinUserEventsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2RejoinUserEventsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2RejoinUserEventsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2RejoinUserEventsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2RejoinUserEventsRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2RejoinUserEventsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2RejoinUserEventsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2RejoinUserEventsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2RejoinUserEventsRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2RejoinUserEventsRequest
   */
  public static GoogleCloudRetailV2RejoinUserEventsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2RejoinUserEventsRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2RejoinUserEventsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

