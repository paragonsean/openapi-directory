/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudRetailV2LocalInventory;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for ProductService.AddLocalInventories method.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:22.008824-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2AddLocalInventoriesRequest {
  public static final String SERIALIZED_NAME_ADD_MASK = "addMask";
  @SerializedName(SERIALIZED_NAME_ADD_MASK)
  private String addMask;

  public static final String SERIALIZED_NAME_ADD_TIME = "addTime";
  @SerializedName(SERIALIZED_NAME_ADD_TIME)
  private String addTime;

  public static final String SERIALIZED_NAME_ALLOW_MISSING = "allowMissing";
  @SerializedName(SERIALIZED_NAME_ALLOW_MISSING)
  private Boolean allowMissing;

  public static final String SERIALIZED_NAME_LOCAL_INVENTORIES = "localInventories";
  @SerializedName(SERIALIZED_NAME_LOCAL_INVENTORIES)
  private List<GoogleCloudRetailV2LocalInventory> localInventories = new ArrayList<>();

  public GoogleCloudRetailV2AddLocalInventoriesRequest() {
  }

  public GoogleCloudRetailV2AddLocalInventoriesRequest addMask(String addMask) {
    this.addMask = addMask;
    return this;
  }

  /**
   * Indicates which inventory fields in the provided list of LocalInventory to update. The field is updated to the provided value. If a field is set while the place does not have a previous local inventory, the local inventory at that store is created. If a field is set while the value of that field is not provided, the original field value, if it exists, is deleted. If the mask is not set or set with empty paths, all inventory fields will be updated. If an unsupported or unknown field is provided, an INVALID_ARGUMENT error is returned and the entire update will be ignored.
   * @return addMask
   */
  @javax.annotation.Nullable
  public String getAddMask() {
    return addMask;
  }

  public void setAddMask(String addMask) {
    this.addMask = addMask;
  }


  public GoogleCloudRetailV2AddLocalInventoriesRequest addTime(String addTime) {
    this.addTime = addTime;
    return this;
  }

  /**
   * The time when the inventory updates are issued. Used to prevent out-of-order updates on local inventory fields. If not provided, the internal system time will be used.
   * @return addTime
   */
  @javax.annotation.Nullable
  public String getAddTime() {
    return addTime;
  }

  public void setAddTime(String addTime) {
    this.addTime = addTime;
  }


  public GoogleCloudRetailV2AddLocalInventoriesRequest allowMissing(Boolean allowMissing) {
    this.allowMissing = allowMissing;
    return this;
  }

  /**
   * If set to true, and the Product is not found, the local inventory will still be processed and retained for at most 1 day and processed once the Product is created. If set to false, a NOT_FOUND error is returned if the Product is not found.
   * @return allowMissing
   */
  @javax.annotation.Nullable
  public Boolean getAllowMissing() {
    return allowMissing;
  }

  public void setAllowMissing(Boolean allowMissing) {
    this.allowMissing = allowMissing;
  }


  public GoogleCloudRetailV2AddLocalInventoriesRequest localInventories(List<GoogleCloudRetailV2LocalInventory> localInventories) {
    this.localInventories = localInventories;
    return this;
  }

  public GoogleCloudRetailV2AddLocalInventoriesRequest addLocalInventoriesItem(GoogleCloudRetailV2LocalInventory localInventoriesItem) {
    if (this.localInventories == null) {
      this.localInventories = new ArrayList<>();
    }
    this.localInventories.add(localInventoriesItem);
    return this;
  }

  /**
   * Required. A list of inventory information at difference places. Each place is identified by its place ID. At most 3000 inventories are allowed per request.
   * @return localInventories
   */
  @javax.annotation.Nullable
  public List<GoogleCloudRetailV2LocalInventory> getLocalInventories() {
    return localInventories;
  }

  public void setLocalInventories(List<GoogleCloudRetailV2LocalInventory> localInventories) {
    this.localInventories = localInventories;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2AddLocalInventoriesRequest googleCloudRetailV2AddLocalInventoriesRequest = (GoogleCloudRetailV2AddLocalInventoriesRequest) o;
    return Objects.equals(this.addMask, googleCloudRetailV2AddLocalInventoriesRequest.addMask) &&
        Objects.equals(this.addTime, googleCloudRetailV2AddLocalInventoriesRequest.addTime) &&
        Objects.equals(this.allowMissing, googleCloudRetailV2AddLocalInventoriesRequest.allowMissing) &&
        Objects.equals(this.localInventories, googleCloudRetailV2AddLocalInventoriesRequest.localInventories);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addMask, addTime, allowMissing, localInventories);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2AddLocalInventoriesRequest {\n");
    sb.append("    addMask: ").append(toIndentedString(addMask)).append("\n");
    sb.append("    addTime: ").append(toIndentedString(addTime)).append("\n");
    sb.append("    allowMissing: ").append(toIndentedString(allowMissing)).append("\n");
    sb.append("    localInventories: ").append(toIndentedString(localInventories)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("addMask");
    openapiFields.add("addTime");
    openapiFields.add("allowMissing");
    openapiFields.add("localInventories");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2AddLocalInventoriesRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2AddLocalInventoriesRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2AddLocalInventoriesRequest is not found in the empty JSON string", GoogleCloudRetailV2AddLocalInventoriesRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2AddLocalInventoriesRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2AddLocalInventoriesRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("addMask") != null && !jsonObj.get("addMask").isJsonNull()) && !jsonObj.get("addMask").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addMask` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addMask").toString()));
      }
      if ((jsonObj.get("addTime") != null && !jsonObj.get("addTime").isJsonNull()) && !jsonObj.get("addTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addTime").toString()));
      }
      if (jsonObj.get("localInventories") != null && !jsonObj.get("localInventories").isJsonNull()) {
        JsonArray jsonArraylocalInventories = jsonObj.getAsJsonArray("localInventories");
        if (jsonArraylocalInventories != null) {
          // ensure the json data is an array
          if (!jsonObj.get("localInventories").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `localInventories` to be an array in the JSON string but got `%s`", jsonObj.get("localInventories").toString()));
          }

          // validate the optional field `localInventories` (array)
          for (int i = 0; i < jsonArraylocalInventories.size(); i++) {
            GoogleCloudRetailV2LocalInventory.validateJsonElement(jsonArraylocalInventories.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2AddLocalInventoriesRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2AddLocalInventoriesRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2AddLocalInventoriesRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2AddLocalInventoriesRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2AddLocalInventoriesRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2AddLocalInventoriesRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2AddLocalInventoriesRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2AddLocalInventoriesRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2AddLocalInventoriesRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2AddLocalInventoriesRequest
   */
  public static GoogleCloudRetailV2AddLocalInventoriesRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2AddLocalInventoriesRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2AddLocalInventoriesRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

