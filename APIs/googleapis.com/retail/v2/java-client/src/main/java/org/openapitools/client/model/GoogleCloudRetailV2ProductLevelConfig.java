/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Configures what level the product should be uploaded with regards to how users will be send events and how predictions will be made.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:22.008824-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2ProductLevelConfig {
  public static final String SERIALIZED_NAME_INGESTION_PRODUCT_TYPE = "ingestionProductType";
  @SerializedName(SERIALIZED_NAME_INGESTION_PRODUCT_TYPE)
  private String ingestionProductType;

  public static final String SERIALIZED_NAME_MERCHANT_CENTER_PRODUCT_ID_FIELD = "merchantCenterProductIdField";
  @SerializedName(SERIALIZED_NAME_MERCHANT_CENTER_PRODUCT_ID_FIELD)
  private String merchantCenterProductIdField;

  public GoogleCloudRetailV2ProductLevelConfig() {
  }

  public GoogleCloudRetailV2ProductLevelConfig ingestionProductType(String ingestionProductType) {
    this.ingestionProductType = ingestionProductType;
    return this;
  }

  /**
   * The type of Products allowed to be ingested into the catalog. Acceptable values are: * &#x60;primary&#x60; (default): You can ingest Products of all types. When ingesting a Product, its type will default to Product.Type.PRIMARY if unset. * &#x60;variant&#x60; (incompatible with Retail Search): You can only ingest Product.Type.VARIANT Products. This means Product.primary_product_id cannot be empty. If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned. If this field is &#x60;variant&#x60; and merchant_center_product_id_field is &#x60;itemGroupId&#x60;, an INVALID_ARGUMENT error is returned. See [Product levels](https://cloud.google.com/retail/docs/catalog#product-levels) for more details.
   * @return ingestionProductType
   */
  @javax.annotation.Nullable
  public String getIngestionProductType() {
    return ingestionProductType;
  }

  public void setIngestionProductType(String ingestionProductType) {
    this.ingestionProductType = ingestionProductType;
  }


  public GoogleCloudRetailV2ProductLevelConfig merchantCenterProductIdField(String merchantCenterProductIdField) {
    this.merchantCenterProductIdField = merchantCenterProductIdField;
    return this;
  }

  /**
   * Which field of [Merchant Center Product](/bigquery-transfer/docs/merchant-center-products-schema) should be imported as Product.id. Acceptable values are: * &#x60;offerId&#x60; (default): Import &#x60;offerId&#x60; as the product ID. * &#x60;itemGroupId&#x60;: Import &#x60;itemGroupId&#x60; as the product ID. Notice that Retail API will choose one item from the ones with the same &#x60;itemGroupId&#x60;, and use it to represent the item group. If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned. If this field is &#x60;itemGroupId&#x60; and ingestion_product_type is &#x60;variant&#x60;, an INVALID_ARGUMENT error is returned. See [Product levels](https://cloud.google.com/retail/docs/catalog#product-levels) for more details.
   * @return merchantCenterProductIdField
   */
  @javax.annotation.Nullable
  public String getMerchantCenterProductIdField() {
    return merchantCenterProductIdField;
  }

  public void setMerchantCenterProductIdField(String merchantCenterProductIdField) {
    this.merchantCenterProductIdField = merchantCenterProductIdField;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2ProductLevelConfig googleCloudRetailV2ProductLevelConfig = (GoogleCloudRetailV2ProductLevelConfig) o;
    return Objects.equals(this.ingestionProductType, googleCloudRetailV2ProductLevelConfig.ingestionProductType) &&
        Objects.equals(this.merchantCenterProductIdField, googleCloudRetailV2ProductLevelConfig.merchantCenterProductIdField);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ingestionProductType, merchantCenterProductIdField);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2ProductLevelConfig {\n");
    sb.append("    ingestionProductType: ").append(toIndentedString(ingestionProductType)).append("\n");
    sb.append("    merchantCenterProductIdField: ").append(toIndentedString(merchantCenterProductIdField)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ingestionProductType");
    openapiFields.add("merchantCenterProductIdField");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2ProductLevelConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2ProductLevelConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2ProductLevelConfig is not found in the empty JSON string", GoogleCloudRetailV2ProductLevelConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2ProductLevelConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2ProductLevelConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("ingestionProductType") != null && !jsonObj.get("ingestionProductType").isJsonNull()) && !jsonObj.get("ingestionProductType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ingestionProductType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ingestionProductType").toString()));
      }
      if ((jsonObj.get("merchantCenterProductIdField") != null && !jsonObj.get("merchantCenterProductIdField").isJsonNull()) && !jsonObj.get("merchantCenterProductIdField").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchantCenterProductIdField` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchantCenterProductIdField").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2ProductLevelConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2ProductLevelConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2ProductLevelConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2ProductLevelConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2ProductLevelConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2ProductLevelConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2ProductLevelConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2ProductLevelConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2ProductLevelConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2ProductLevelConfig
   */
  public static GoogleCloudRetailV2ProductLevelConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2ProductLevelConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2ProductLevelConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

