/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudRetailV2PredictResponsePredictionResult;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Response message for predict method.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:22.008824-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2PredictResponse {
  public static final String SERIALIZED_NAME_ATTRIBUTION_TOKEN = "attributionToken";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTION_TOKEN)
  private String attributionToken;

  public static final String SERIALIZED_NAME_MISSING_IDS = "missingIds";
  @SerializedName(SERIALIZED_NAME_MISSING_IDS)
  private List<String> missingIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_RESULTS = "results";
  @SerializedName(SERIALIZED_NAME_RESULTS)
  private List<GoogleCloudRetailV2PredictResponsePredictionResult> results = new ArrayList<>();

  public static final String SERIALIZED_NAME_VALIDATE_ONLY = "validateOnly";
  @SerializedName(SERIALIZED_NAME_VALIDATE_ONLY)
  private Boolean validateOnly;

  public GoogleCloudRetailV2PredictResponse() {
  }

  public GoogleCloudRetailV2PredictResponse attributionToken(String attributionToken) {
    this.attributionToken = attributionToken;
    return this;
  }

  /**
   * A unique attribution token. This should be included in the UserEvent logs resulting from this recommendation, which enables accurate attribution of recommendation model performance.
   * @return attributionToken
   */
  @javax.annotation.Nullable
  public String getAttributionToken() {
    return attributionToken;
  }

  public void setAttributionToken(String attributionToken) {
    this.attributionToken = attributionToken;
  }


  public GoogleCloudRetailV2PredictResponse missingIds(List<String> missingIds) {
    this.missingIds = missingIds;
    return this;
  }

  public GoogleCloudRetailV2PredictResponse addMissingIdsItem(String missingIdsItem) {
    if (this.missingIds == null) {
      this.missingIds = new ArrayList<>();
    }
    this.missingIds.add(missingIdsItem);
    return this;
  }

  /**
   * IDs of products in the request that were missing from the inventory.
   * @return missingIds
   */
  @javax.annotation.Nullable
  public List<String> getMissingIds() {
    return missingIds;
  }

  public void setMissingIds(List<String> missingIds) {
    this.missingIds = missingIds;
  }


  public GoogleCloudRetailV2PredictResponse results(List<GoogleCloudRetailV2PredictResponsePredictionResult> results) {
    this.results = results;
    return this;
  }

  public GoogleCloudRetailV2PredictResponse addResultsItem(GoogleCloudRetailV2PredictResponsePredictionResult resultsItem) {
    if (this.results == null) {
      this.results = new ArrayList<>();
    }
    this.results.add(resultsItem);
    return this;
  }

  /**
   * A list of recommended products. The order represents the ranking (from the most relevant product to the least).
   * @return results
   */
  @javax.annotation.Nullable
  public List<GoogleCloudRetailV2PredictResponsePredictionResult> getResults() {
    return results;
  }

  public void setResults(List<GoogleCloudRetailV2PredictResponsePredictionResult> results) {
    this.results = results;
  }


  public GoogleCloudRetailV2PredictResponse validateOnly(Boolean validateOnly) {
    this.validateOnly = validateOnly;
    return this;
  }

  /**
   * True if the validateOnly property was set in the request.
   * @return validateOnly
   */
  @javax.annotation.Nullable
  public Boolean getValidateOnly() {
    return validateOnly;
  }

  public void setValidateOnly(Boolean validateOnly) {
    this.validateOnly = validateOnly;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2PredictResponse googleCloudRetailV2PredictResponse = (GoogleCloudRetailV2PredictResponse) o;
    return Objects.equals(this.attributionToken, googleCloudRetailV2PredictResponse.attributionToken) &&
        Objects.equals(this.missingIds, googleCloudRetailV2PredictResponse.missingIds) &&
        Objects.equals(this.results, googleCloudRetailV2PredictResponse.results) &&
        Objects.equals(this.validateOnly, googleCloudRetailV2PredictResponse.validateOnly);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributionToken, missingIds, results, validateOnly);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2PredictResponse {\n");
    sb.append("    attributionToken: ").append(toIndentedString(attributionToken)).append("\n");
    sb.append("    missingIds: ").append(toIndentedString(missingIds)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("    validateOnly: ").append(toIndentedString(validateOnly)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attributionToken");
    openapiFields.add("missingIds");
    openapiFields.add("results");
    openapiFields.add("validateOnly");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2PredictResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2PredictResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2PredictResponse is not found in the empty JSON string", GoogleCloudRetailV2PredictResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2PredictResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2PredictResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("attributionToken") != null && !jsonObj.get("attributionToken").isJsonNull()) && !jsonObj.get("attributionToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attributionToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attributionToken").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("missingIds") != null && !jsonObj.get("missingIds").isJsonNull() && !jsonObj.get("missingIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `missingIds` to be an array in the JSON string but got `%s`", jsonObj.get("missingIds").toString()));
      }
      if (jsonObj.get("results") != null && !jsonObj.get("results").isJsonNull()) {
        JsonArray jsonArrayresults = jsonObj.getAsJsonArray("results");
        if (jsonArrayresults != null) {
          // ensure the json data is an array
          if (!jsonObj.get("results").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `results` to be an array in the JSON string but got `%s`", jsonObj.get("results").toString()));
          }

          // validate the optional field `results` (array)
          for (int i = 0; i < jsonArrayresults.size(); i++) {
            GoogleCloudRetailV2PredictResponsePredictionResult.validateJsonElement(jsonArrayresults.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2PredictResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2PredictResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2PredictResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2PredictResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2PredictResponse>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2PredictResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2PredictResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2PredictResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2PredictResponse
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2PredictResponse
   */
  public static GoogleCloudRetailV2PredictResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2PredictResponse.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2PredictResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

