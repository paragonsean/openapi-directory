/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudRetailV2CatalogAttribute;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request for CatalogService.ReplaceCatalogAttribute method.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:22.008824-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2ReplaceCatalogAttributeRequest {
  public static final String SERIALIZED_NAME_CATALOG_ATTRIBUTE = "catalogAttribute";
  @SerializedName(SERIALIZED_NAME_CATALOG_ATTRIBUTE)
  private GoogleCloudRetailV2CatalogAttribute catalogAttribute;

  public static final String SERIALIZED_NAME_UPDATE_MASK = "updateMask";
  @SerializedName(SERIALIZED_NAME_UPDATE_MASK)
  private String updateMask;

  public GoogleCloudRetailV2ReplaceCatalogAttributeRequest() {
  }

  public GoogleCloudRetailV2ReplaceCatalogAttributeRequest catalogAttribute(GoogleCloudRetailV2CatalogAttribute catalogAttribute) {
    this.catalogAttribute = catalogAttribute;
    return this;
  }

  /**
   * Get catalogAttribute
   * @return catalogAttribute
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2CatalogAttribute getCatalogAttribute() {
    return catalogAttribute;
  }

  public void setCatalogAttribute(GoogleCloudRetailV2CatalogAttribute catalogAttribute) {
    this.catalogAttribute = catalogAttribute;
  }


  public GoogleCloudRetailV2ReplaceCatalogAttributeRequest updateMask(String updateMask) {
    this.updateMask = updateMask;
    return this;
  }

  /**
   * Indicates which fields in the provided CatalogAttribute to update. The following are NOT supported: * CatalogAttribute.key If not set, all supported fields are updated.
   * @return updateMask
   */
  @javax.annotation.Nullable
  public String getUpdateMask() {
    return updateMask;
  }

  public void setUpdateMask(String updateMask) {
    this.updateMask = updateMask;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2ReplaceCatalogAttributeRequest googleCloudRetailV2ReplaceCatalogAttributeRequest = (GoogleCloudRetailV2ReplaceCatalogAttributeRequest) o;
    return Objects.equals(this.catalogAttribute, googleCloudRetailV2ReplaceCatalogAttributeRequest.catalogAttribute) &&
        Objects.equals(this.updateMask, googleCloudRetailV2ReplaceCatalogAttributeRequest.updateMask);
  }

  @Override
  public int hashCode() {
    return Objects.hash(catalogAttribute, updateMask);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2ReplaceCatalogAttributeRequest {\n");
    sb.append("    catalogAttribute: ").append(toIndentedString(catalogAttribute)).append("\n");
    sb.append("    updateMask: ").append(toIndentedString(updateMask)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("catalogAttribute");
    openapiFields.add("updateMask");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2ReplaceCatalogAttributeRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2ReplaceCatalogAttributeRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2ReplaceCatalogAttributeRequest is not found in the empty JSON string", GoogleCloudRetailV2ReplaceCatalogAttributeRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2ReplaceCatalogAttributeRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2ReplaceCatalogAttributeRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `catalogAttribute`
      if (jsonObj.get("catalogAttribute") != null && !jsonObj.get("catalogAttribute").isJsonNull()) {
        GoogleCloudRetailV2CatalogAttribute.validateJsonElement(jsonObj.get("catalogAttribute"));
      }
      if ((jsonObj.get("updateMask") != null && !jsonObj.get("updateMask").isJsonNull()) && !jsonObj.get("updateMask").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateMask` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateMask").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2ReplaceCatalogAttributeRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2ReplaceCatalogAttributeRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2ReplaceCatalogAttributeRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2ReplaceCatalogAttributeRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2ReplaceCatalogAttributeRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2ReplaceCatalogAttributeRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2ReplaceCatalogAttributeRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2ReplaceCatalogAttributeRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2ReplaceCatalogAttributeRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2ReplaceCatalogAttributeRequest
   */
  public static GoogleCloudRetailV2ReplaceCatalogAttributeRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2ReplaceCatalogAttributeRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2ReplaceCatalogAttributeRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

