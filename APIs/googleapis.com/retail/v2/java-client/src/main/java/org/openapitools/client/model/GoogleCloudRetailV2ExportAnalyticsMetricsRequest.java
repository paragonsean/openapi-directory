/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudRetailV2OutputConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for the &#x60;ExportAnalyticsMetrics&#x60; method.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:22.008824-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2ExportAnalyticsMetricsRequest {
  public static final String SERIALIZED_NAME_FILTER = "filter";
  @SerializedName(SERIALIZED_NAME_FILTER)
  private String filter;

  public static final String SERIALIZED_NAME_OUTPUT_CONFIG = "outputConfig";
  @SerializedName(SERIALIZED_NAME_OUTPUT_CONFIG)
  private GoogleCloudRetailV2OutputConfig outputConfig;

  public GoogleCloudRetailV2ExportAnalyticsMetricsRequest() {
  }

  public GoogleCloudRetailV2ExportAnalyticsMetricsRequest filter(String filter) {
    this.filter = filter;
    return this;
  }

  /**
   * A filtering expression to specify restrictions on returned metrics. The expression is a sequence of terms. Each term applies a restriction to the returned metrics. Use this expression to restrict results to a specific time range. Currently we expect only one types of fields: * &#x60;timestamp&#x60;: This can be specified twice, once with a less than operator and once with a greater than operator. The &#x60;timestamp&#x60; restriction should result in one, contiguous, valid, &#x60;timestamp&#x60; range. Some examples of valid filters expressions: * Example 1: &#x60;timestamp &gt; \&quot;2012-04-23T18:25:43.511Z\&quot; timestamp &lt; \&quot;2012-04-23T18:30:43.511Z\&quot;&#x60; * Example 2: &#x60;timestamp &gt; \&quot;2012-04-23T18:25:43.511Z\&quot;&#x60;
   * @return filter
   */
  @javax.annotation.Nullable
  public String getFilter() {
    return filter;
  }

  public void setFilter(String filter) {
    this.filter = filter;
  }


  public GoogleCloudRetailV2ExportAnalyticsMetricsRequest outputConfig(GoogleCloudRetailV2OutputConfig outputConfig) {
    this.outputConfig = outputConfig;
    return this;
  }

  /**
   * Get outputConfig
   * @return outputConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2OutputConfig getOutputConfig() {
    return outputConfig;
  }

  public void setOutputConfig(GoogleCloudRetailV2OutputConfig outputConfig) {
    this.outputConfig = outputConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2ExportAnalyticsMetricsRequest googleCloudRetailV2ExportAnalyticsMetricsRequest = (GoogleCloudRetailV2ExportAnalyticsMetricsRequest) o;
    return Objects.equals(this.filter, googleCloudRetailV2ExportAnalyticsMetricsRequest.filter) &&
        Objects.equals(this.outputConfig, googleCloudRetailV2ExportAnalyticsMetricsRequest.outputConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filter, outputConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2ExportAnalyticsMetricsRequest {\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    outputConfig: ").append(toIndentedString(outputConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("filter");
    openapiFields.add("outputConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2ExportAnalyticsMetricsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2ExportAnalyticsMetricsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2ExportAnalyticsMetricsRequest is not found in the empty JSON string", GoogleCloudRetailV2ExportAnalyticsMetricsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2ExportAnalyticsMetricsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2ExportAnalyticsMetricsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("filter") != null && !jsonObj.get("filter").isJsonNull()) && !jsonObj.get("filter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filter").toString()));
      }
      // validate the optional field `outputConfig`
      if (jsonObj.get("outputConfig") != null && !jsonObj.get("outputConfig").isJsonNull()) {
        GoogleCloudRetailV2OutputConfig.validateJsonElement(jsonObj.get("outputConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2ExportAnalyticsMetricsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2ExportAnalyticsMetricsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2ExportAnalyticsMetricsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2ExportAnalyticsMetricsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2ExportAnalyticsMetricsRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2ExportAnalyticsMetricsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2ExportAnalyticsMetricsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2ExportAnalyticsMetricsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2ExportAnalyticsMetricsRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2ExportAnalyticsMetricsRequest
   */
  public static GoogleCloudRetailV2ExportAnalyticsMetricsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2ExportAnalyticsMetricsRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2ExportAnalyticsMetricsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

