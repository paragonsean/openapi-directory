/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Metadata related to transform user events operation.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:22.008824-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2alphaTransformedUserEventsMetadata {
  public static final String SERIALIZED_NAME_SOURCE_EVENTS_COUNT = "sourceEventsCount";
  @SerializedName(SERIALIZED_NAME_SOURCE_EVENTS_COUNT)
  private String sourceEventsCount;

  public static final String SERIALIZED_NAME_TRANSFORMED_EVENTS_COUNT = "transformedEventsCount";
  @SerializedName(SERIALIZED_NAME_TRANSFORMED_EVENTS_COUNT)
  private String transformedEventsCount;

  public GoogleCloudRetailV2alphaTransformedUserEventsMetadata() {
  }

  public GoogleCloudRetailV2alphaTransformedUserEventsMetadata sourceEventsCount(String sourceEventsCount) {
    this.sourceEventsCount = sourceEventsCount;
    return this;
  }

  /**
   * Count of entries in the source user events BigQuery table.
   * @return sourceEventsCount
   */
  @javax.annotation.Nullable
  public String getSourceEventsCount() {
    return sourceEventsCount;
  }

  public void setSourceEventsCount(String sourceEventsCount) {
    this.sourceEventsCount = sourceEventsCount;
  }


  public GoogleCloudRetailV2alphaTransformedUserEventsMetadata transformedEventsCount(String transformedEventsCount) {
    this.transformedEventsCount = transformedEventsCount;
    return this;
  }

  /**
   * Count of entries in the transformed user events BigQuery table, which could be different from the actually imported number of user events.
   * @return transformedEventsCount
   */
  @javax.annotation.Nullable
  public String getTransformedEventsCount() {
    return transformedEventsCount;
  }

  public void setTransformedEventsCount(String transformedEventsCount) {
    this.transformedEventsCount = transformedEventsCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2alphaTransformedUserEventsMetadata googleCloudRetailV2alphaTransformedUserEventsMetadata = (GoogleCloudRetailV2alphaTransformedUserEventsMetadata) o;
    return Objects.equals(this.sourceEventsCount, googleCloudRetailV2alphaTransformedUserEventsMetadata.sourceEventsCount) &&
        Objects.equals(this.transformedEventsCount, googleCloudRetailV2alphaTransformedUserEventsMetadata.transformedEventsCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceEventsCount, transformedEventsCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2alphaTransformedUserEventsMetadata {\n");
    sb.append("    sourceEventsCount: ").append(toIndentedString(sourceEventsCount)).append("\n");
    sb.append("    transformedEventsCount: ").append(toIndentedString(transformedEventsCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("sourceEventsCount");
    openapiFields.add("transformedEventsCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2alphaTransformedUserEventsMetadata
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2alphaTransformedUserEventsMetadata.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2alphaTransformedUserEventsMetadata is not found in the empty JSON string", GoogleCloudRetailV2alphaTransformedUserEventsMetadata.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2alphaTransformedUserEventsMetadata.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2alphaTransformedUserEventsMetadata` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("sourceEventsCount") != null && !jsonObj.get("sourceEventsCount").isJsonNull()) && !jsonObj.get("sourceEventsCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourceEventsCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourceEventsCount").toString()));
      }
      if ((jsonObj.get("transformedEventsCount") != null && !jsonObj.get("transformedEventsCount").isJsonNull()) && !jsonObj.get("transformedEventsCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transformedEventsCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transformedEventsCount").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2alphaTransformedUserEventsMetadata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2alphaTransformedUserEventsMetadata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2alphaTransformedUserEventsMetadata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2alphaTransformedUserEventsMetadata.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2alphaTransformedUserEventsMetadata>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2alphaTransformedUserEventsMetadata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2alphaTransformedUserEventsMetadata read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2alphaTransformedUserEventsMetadata given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2alphaTransformedUserEventsMetadata
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2alphaTransformedUserEventsMetadata
   */
  public static GoogleCloudRetailV2alphaTransformedUserEventsMetadata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2alphaTransformedUserEventsMetadata.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2alphaTransformedUserEventsMetadata to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

