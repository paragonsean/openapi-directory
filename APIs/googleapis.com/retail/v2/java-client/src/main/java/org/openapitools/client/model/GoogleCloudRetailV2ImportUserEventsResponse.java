/*
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudRetailV2ImportErrorsConfig;
import org.openapitools.client.model.GoogleCloudRetailV2UserEventImportSummary;
import org.openapitools.client.model.GoogleRpcStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Response of the ImportUserEventsRequest. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:22.008824-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRetailV2ImportUserEventsResponse {
  public static final String SERIALIZED_NAME_ERROR_SAMPLES = "errorSamples";
  @SerializedName(SERIALIZED_NAME_ERROR_SAMPLES)
  private List<GoogleRpcStatus> errorSamples = new ArrayList<>();

  public static final String SERIALIZED_NAME_ERRORS_CONFIG = "errorsConfig";
  @SerializedName(SERIALIZED_NAME_ERRORS_CONFIG)
  private GoogleCloudRetailV2ImportErrorsConfig errorsConfig;

  public static final String SERIALIZED_NAME_IMPORT_SUMMARY = "importSummary";
  @SerializedName(SERIALIZED_NAME_IMPORT_SUMMARY)
  private GoogleCloudRetailV2UserEventImportSummary importSummary;

  public GoogleCloudRetailV2ImportUserEventsResponse() {
  }

  public GoogleCloudRetailV2ImportUserEventsResponse errorSamples(List<GoogleRpcStatus> errorSamples) {
    this.errorSamples = errorSamples;
    return this;
  }

  public GoogleCloudRetailV2ImportUserEventsResponse addErrorSamplesItem(GoogleRpcStatus errorSamplesItem) {
    if (this.errorSamples == null) {
      this.errorSamples = new ArrayList<>();
    }
    this.errorSamples.add(errorSamplesItem);
    return this;
  }

  /**
   * A sample of errors encountered while processing the request.
   * @return errorSamples
   */
  @javax.annotation.Nullable
  public List<GoogleRpcStatus> getErrorSamples() {
    return errorSamples;
  }

  public void setErrorSamples(List<GoogleRpcStatus> errorSamples) {
    this.errorSamples = errorSamples;
  }


  public GoogleCloudRetailV2ImportUserEventsResponse errorsConfig(GoogleCloudRetailV2ImportErrorsConfig errorsConfig) {
    this.errorsConfig = errorsConfig;
    return this;
  }

  /**
   * Get errorsConfig
   * @return errorsConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2ImportErrorsConfig getErrorsConfig() {
    return errorsConfig;
  }

  public void setErrorsConfig(GoogleCloudRetailV2ImportErrorsConfig errorsConfig) {
    this.errorsConfig = errorsConfig;
  }


  public GoogleCloudRetailV2ImportUserEventsResponse importSummary(GoogleCloudRetailV2UserEventImportSummary importSummary) {
    this.importSummary = importSummary;
    return this;
  }

  /**
   * Get importSummary
   * @return importSummary
   */
  @javax.annotation.Nullable
  public GoogleCloudRetailV2UserEventImportSummary getImportSummary() {
    return importSummary;
  }

  public void setImportSummary(GoogleCloudRetailV2UserEventImportSummary importSummary) {
    this.importSummary = importSummary;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRetailV2ImportUserEventsResponse googleCloudRetailV2ImportUserEventsResponse = (GoogleCloudRetailV2ImportUserEventsResponse) o;
    return Objects.equals(this.errorSamples, googleCloudRetailV2ImportUserEventsResponse.errorSamples) &&
        Objects.equals(this.errorsConfig, googleCloudRetailV2ImportUserEventsResponse.errorsConfig) &&
        Objects.equals(this.importSummary, googleCloudRetailV2ImportUserEventsResponse.importSummary);
  }

  @Override
  public int hashCode() {
    return Objects.hash(errorSamples, errorsConfig, importSummary);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRetailV2ImportUserEventsResponse {\n");
    sb.append("    errorSamples: ").append(toIndentedString(errorSamples)).append("\n");
    sb.append("    errorsConfig: ").append(toIndentedString(errorsConfig)).append("\n");
    sb.append("    importSummary: ").append(toIndentedString(importSummary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("errorSamples");
    openapiFields.add("errorsConfig");
    openapiFields.add("importSummary");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRetailV2ImportUserEventsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRetailV2ImportUserEventsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRetailV2ImportUserEventsResponse is not found in the empty JSON string", GoogleCloudRetailV2ImportUserEventsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRetailV2ImportUserEventsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRetailV2ImportUserEventsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("errorSamples") != null && !jsonObj.get("errorSamples").isJsonNull()) {
        JsonArray jsonArrayerrorSamples = jsonObj.getAsJsonArray("errorSamples");
        if (jsonArrayerrorSamples != null) {
          // ensure the json data is an array
          if (!jsonObj.get("errorSamples").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `errorSamples` to be an array in the JSON string but got `%s`", jsonObj.get("errorSamples").toString()));
          }

          // validate the optional field `errorSamples` (array)
          for (int i = 0; i < jsonArrayerrorSamples.size(); i++) {
            GoogleRpcStatus.validateJsonElement(jsonArrayerrorSamples.get(i));
          };
        }
      }
      // validate the optional field `errorsConfig`
      if (jsonObj.get("errorsConfig") != null && !jsonObj.get("errorsConfig").isJsonNull()) {
        GoogleCloudRetailV2ImportErrorsConfig.validateJsonElement(jsonObj.get("errorsConfig"));
      }
      // validate the optional field `importSummary`
      if (jsonObj.get("importSummary") != null && !jsonObj.get("importSummary").isJsonNull()) {
        GoogleCloudRetailV2UserEventImportSummary.validateJsonElement(jsonObj.get("importSummary"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRetailV2ImportUserEventsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRetailV2ImportUserEventsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRetailV2ImportUserEventsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRetailV2ImportUserEventsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRetailV2ImportUserEventsResponse>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRetailV2ImportUserEventsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRetailV2ImportUserEventsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRetailV2ImportUserEventsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRetailV2ImportUserEventsResponse
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRetailV2ImportUserEventsResponse
   */
  public static GoogleCloudRetailV2ImportUserEventsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRetailV2ImportUserEventsResponse.class);
  }

  /**
   * Convert an instance of GoogleCloudRetailV2ImportUserEventsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

