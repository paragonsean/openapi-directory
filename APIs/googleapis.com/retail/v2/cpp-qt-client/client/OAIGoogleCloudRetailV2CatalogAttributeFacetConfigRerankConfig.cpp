/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig::OAIGoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig::OAIGoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig::~OAIGoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig() {}

void OAIGoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig::initializeModel() {

    m_facet_values_isSet = false;
    m_facet_values_isValid = false;

    m_rerank_facet_isSet = false;
    m_rerank_facet_isValid = false;
}

void OAIGoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig::fromJsonObject(QJsonObject json) {

    m_facet_values_isValid = ::OpenAPI::fromJsonValue(m_facet_values, json[QString("facetValues")]);
    m_facet_values_isSet = !json[QString("facetValues")].isNull() && m_facet_values_isValid;

    m_rerank_facet_isValid = ::OpenAPI::fromJsonValue(m_rerank_facet, json[QString("rerankFacet")]);
    m_rerank_facet_isSet = !json[QString("rerankFacet")].isNull() && m_rerank_facet_isValid;
}

QString OAIGoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_facet_values.size() > 0) {
        obj.insert(QString("facetValues"), ::OpenAPI::toJsonValue(m_facet_values));
    }
    if (m_rerank_facet_isSet) {
        obj.insert(QString("rerankFacet"), ::OpenAPI::toJsonValue(m_rerank_facet));
    }
    return obj;
}

QList<QString> OAIGoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig::getFacetValues() const {
    return m_facet_values;
}
void OAIGoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig::setFacetValues(const QList<QString> &facet_values) {
    m_facet_values = facet_values;
    m_facet_values_isSet = true;
}

bool OAIGoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig::is_facet_values_Set() const{
    return m_facet_values_isSet;
}

bool OAIGoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig::is_facet_values_Valid() const{
    return m_facet_values_isValid;
}

bool OAIGoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig::isRerankFacet() const {
    return m_rerank_facet;
}
void OAIGoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig::setRerankFacet(const bool &rerank_facet) {
    m_rerank_facet = rerank_facet;
    m_rerank_facet_isSet = true;
}

bool OAIGoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig::is_rerank_facet_Set() const{
    return m_rerank_facet_isSet;
}

bool OAIGoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig::is_rerank_facet_Valid() const{
    return m_rerank_facet_isValid;
}

bool OAIGoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_facet_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_rerank_facet_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
