/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2Product.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2Product::OAIGoogleCloudRetailV2Product(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2Product::OAIGoogleCloudRetailV2Product() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2Product::~OAIGoogleCloudRetailV2Product() {}

void OAIGoogleCloudRetailV2Product::initializeModel() {

    m_attributes_isSet = false;
    m_attributes_isValid = false;

    m_audience_isSet = false;
    m_audience_isValid = false;

    m_availability_isSet = false;
    m_availability_isValid = false;

    m_available_quantity_isSet = false;
    m_available_quantity_isValid = false;

    m_available_time_isSet = false;
    m_available_time_isValid = false;

    m_brands_isSet = false;
    m_brands_isValid = false;

    m_categories_isSet = false;
    m_categories_isValid = false;

    m_collection_member_ids_isSet = false;
    m_collection_member_ids_isValid = false;

    m_color_info_isSet = false;
    m_color_info_isValid = false;

    m_conditions_isSet = false;
    m_conditions_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_expire_time_isSet = false;
    m_expire_time_isValid = false;

    m_fulfillment_info_isSet = false;
    m_fulfillment_info_isValid = false;

    m_gtin_isSet = false;
    m_gtin_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_images_isSet = false;
    m_images_isValid = false;

    m_language_code_isSet = false;
    m_language_code_isValid = false;

    m_local_inventories_isSet = false;
    m_local_inventories_isValid = false;

    m_materials_isSet = false;
    m_materials_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_patterns_isSet = false;
    m_patterns_isValid = false;

    m_price_info_isSet = false;
    m_price_info_isValid = false;

    m_primary_product_id_isSet = false;
    m_primary_product_id_isValid = false;

    m_promotions_isSet = false;
    m_promotions_isValid = false;

    m_publish_time_isSet = false;
    m_publish_time_isValid = false;

    m_rating_isSet = false;
    m_rating_isValid = false;

    m_retrievable_fields_isSet = false;
    m_retrievable_fields_isValid = false;

    m_sizes_isSet = false;
    m_sizes_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_ttl_isSet = false;
    m_ttl_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;

    m_variants_isSet = false;
    m_variants_isValid = false;
}

void OAIGoogleCloudRetailV2Product::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2Product::fromJsonObject(QJsonObject json) {

    m_attributes_isValid = ::OpenAPI::fromJsonValue(m_attributes, json[QString("attributes")]);
    m_attributes_isSet = !json[QString("attributes")].isNull() && m_attributes_isValid;

    m_audience_isValid = ::OpenAPI::fromJsonValue(m_audience, json[QString("audience")]);
    m_audience_isSet = !json[QString("audience")].isNull() && m_audience_isValid;

    m_availability_isValid = ::OpenAPI::fromJsonValue(m_availability, json[QString("availability")]);
    m_availability_isSet = !json[QString("availability")].isNull() && m_availability_isValid;

    m_available_quantity_isValid = ::OpenAPI::fromJsonValue(m_available_quantity, json[QString("availableQuantity")]);
    m_available_quantity_isSet = !json[QString("availableQuantity")].isNull() && m_available_quantity_isValid;

    m_available_time_isValid = ::OpenAPI::fromJsonValue(m_available_time, json[QString("availableTime")]);
    m_available_time_isSet = !json[QString("availableTime")].isNull() && m_available_time_isValid;

    m_brands_isValid = ::OpenAPI::fromJsonValue(m_brands, json[QString("brands")]);
    m_brands_isSet = !json[QString("brands")].isNull() && m_brands_isValid;

    m_categories_isValid = ::OpenAPI::fromJsonValue(m_categories, json[QString("categories")]);
    m_categories_isSet = !json[QString("categories")].isNull() && m_categories_isValid;

    m_collection_member_ids_isValid = ::OpenAPI::fromJsonValue(m_collection_member_ids, json[QString("collectionMemberIds")]);
    m_collection_member_ids_isSet = !json[QString("collectionMemberIds")].isNull() && m_collection_member_ids_isValid;

    m_color_info_isValid = ::OpenAPI::fromJsonValue(m_color_info, json[QString("colorInfo")]);
    m_color_info_isSet = !json[QString("colorInfo")].isNull() && m_color_info_isValid;

    m_conditions_isValid = ::OpenAPI::fromJsonValue(m_conditions, json[QString("conditions")]);
    m_conditions_isSet = !json[QString("conditions")].isNull() && m_conditions_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_expire_time_isValid = ::OpenAPI::fromJsonValue(m_expire_time, json[QString("expireTime")]);
    m_expire_time_isSet = !json[QString("expireTime")].isNull() && m_expire_time_isValid;

    m_fulfillment_info_isValid = ::OpenAPI::fromJsonValue(m_fulfillment_info, json[QString("fulfillmentInfo")]);
    m_fulfillment_info_isSet = !json[QString("fulfillmentInfo")].isNull() && m_fulfillment_info_isValid;

    m_gtin_isValid = ::OpenAPI::fromJsonValue(m_gtin, json[QString("gtin")]);
    m_gtin_isSet = !json[QString("gtin")].isNull() && m_gtin_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_images_isValid = ::OpenAPI::fromJsonValue(m_images, json[QString("images")]);
    m_images_isSet = !json[QString("images")].isNull() && m_images_isValid;

    m_language_code_isValid = ::OpenAPI::fromJsonValue(m_language_code, json[QString("languageCode")]);
    m_language_code_isSet = !json[QString("languageCode")].isNull() && m_language_code_isValid;

    m_local_inventories_isValid = ::OpenAPI::fromJsonValue(m_local_inventories, json[QString("localInventories")]);
    m_local_inventories_isSet = !json[QString("localInventories")].isNull() && m_local_inventories_isValid;

    m_materials_isValid = ::OpenAPI::fromJsonValue(m_materials, json[QString("materials")]);
    m_materials_isSet = !json[QString("materials")].isNull() && m_materials_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_patterns_isValid = ::OpenAPI::fromJsonValue(m_patterns, json[QString("patterns")]);
    m_patterns_isSet = !json[QString("patterns")].isNull() && m_patterns_isValid;

    m_price_info_isValid = ::OpenAPI::fromJsonValue(m_price_info, json[QString("priceInfo")]);
    m_price_info_isSet = !json[QString("priceInfo")].isNull() && m_price_info_isValid;

    m_primary_product_id_isValid = ::OpenAPI::fromJsonValue(m_primary_product_id, json[QString("primaryProductId")]);
    m_primary_product_id_isSet = !json[QString("primaryProductId")].isNull() && m_primary_product_id_isValid;

    m_promotions_isValid = ::OpenAPI::fromJsonValue(m_promotions, json[QString("promotions")]);
    m_promotions_isSet = !json[QString("promotions")].isNull() && m_promotions_isValid;

    m_publish_time_isValid = ::OpenAPI::fromJsonValue(m_publish_time, json[QString("publishTime")]);
    m_publish_time_isSet = !json[QString("publishTime")].isNull() && m_publish_time_isValid;

    m_rating_isValid = ::OpenAPI::fromJsonValue(m_rating, json[QString("rating")]);
    m_rating_isSet = !json[QString("rating")].isNull() && m_rating_isValid;

    m_retrievable_fields_isValid = ::OpenAPI::fromJsonValue(m_retrievable_fields, json[QString("retrievableFields")]);
    m_retrievable_fields_isSet = !json[QString("retrievableFields")].isNull() && m_retrievable_fields_isValid;

    m_sizes_isValid = ::OpenAPI::fromJsonValue(m_sizes, json[QString("sizes")]);
    m_sizes_isSet = !json[QString("sizes")].isNull() && m_sizes_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_ttl_isValid = ::OpenAPI::fromJsonValue(m_ttl, json[QString("ttl")]);
    m_ttl_isSet = !json[QString("ttl")].isNull() && m_ttl_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;

    m_variants_isValid = ::OpenAPI::fromJsonValue(m_variants, json[QString("variants")]);
    m_variants_isSet = !json[QString("variants")].isNull() && m_variants_isValid;
}

QString OAIGoogleCloudRetailV2Product::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2Product::asJsonObject() const {
    QJsonObject obj;
    if (m_attributes.size() > 0) {
        obj.insert(QString("attributes"), ::OpenAPI::toJsonValue(m_attributes));
    }
    if (m_audience.isSet()) {
        obj.insert(QString("audience"), ::OpenAPI::toJsonValue(m_audience));
    }
    if (m_availability_isSet) {
        obj.insert(QString("availability"), ::OpenAPI::toJsonValue(m_availability));
    }
    if (m_available_quantity_isSet) {
        obj.insert(QString("availableQuantity"), ::OpenAPI::toJsonValue(m_available_quantity));
    }
    if (m_available_time_isSet) {
        obj.insert(QString("availableTime"), ::OpenAPI::toJsonValue(m_available_time));
    }
    if (m_brands.size() > 0) {
        obj.insert(QString("brands"), ::OpenAPI::toJsonValue(m_brands));
    }
    if (m_categories.size() > 0) {
        obj.insert(QString("categories"), ::OpenAPI::toJsonValue(m_categories));
    }
    if (m_collection_member_ids.size() > 0) {
        obj.insert(QString("collectionMemberIds"), ::OpenAPI::toJsonValue(m_collection_member_ids));
    }
    if (m_color_info.isSet()) {
        obj.insert(QString("colorInfo"), ::OpenAPI::toJsonValue(m_color_info));
    }
    if (m_conditions.size() > 0) {
        obj.insert(QString("conditions"), ::OpenAPI::toJsonValue(m_conditions));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_expire_time_isSet) {
        obj.insert(QString("expireTime"), ::OpenAPI::toJsonValue(m_expire_time));
    }
    if (m_fulfillment_info.size() > 0) {
        obj.insert(QString("fulfillmentInfo"), ::OpenAPI::toJsonValue(m_fulfillment_info));
    }
    if (m_gtin_isSet) {
        obj.insert(QString("gtin"), ::OpenAPI::toJsonValue(m_gtin));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_images.size() > 0) {
        obj.insert(QString("images"), ::OpenAPI::toJsonValue(m_images));
    }
    if (m_language_code_isSet) {
        obj.insert(QString("languageCode"), ::OpenAPI::toJsonValue(m_language_code));
    }
    if (m_local_inventories.size() > 0) {
        obj.insert(QString("localInventories"), ::OpenAPI::toJsonValue(m_local_inventories));
    }
    if (m_materials.size() > 0) {
        obj.insert(QString("materials"), ::OpenAPI::toJsonValue(m_materials));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_patterns.size() > 0) {
        obj.insert(QString("patterns"), ::OpenAPI::toJsonValue(m_patterns));
    }
    if (m_price_info.isSet()) {
        obj.insert(QString("priceInfo"), ::OpenAPI::toJsonValue(m_price_info));
    }
    if (m_primary_product_id_isSet) {
        obj.insert(QString("primaryProductId"), ::OpenAPI::toJsonValue(m_primary_product_id));
    }
    if (m_promotions.size() > 0) {
        obj.insert(QString("promotions"), ::OpenAPI::toJsonValue(m_promotions));
    }
    if (m_publish_time_isSet) {
        obj.insert(QString("publishTime"), ::OpenAPI::toJsonValue(m_publish_time));
    }
    if (m_rating.isSet()) {
        obj.insert(QString("rating"), ::OpenAPI::toJsonValue(m_rating));
    }
    if (m_retrievable_fields_isSet) {
        obj.insert(QString("retrievableFields"), ::OpenAPI::toJsonValue(m_retrievable_fields));
    }
    if (m_sizes.size() > 0) {
        obj.insert(QString("sizes"), ::OpenAPI::toJsonValue(m_sizes));
    }
    if (m_tags.size() > 0) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_ttl_isSet) {
        obj.insert(QString("ttl"), ::OpenAPI::toJsonValue(m_ttl));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    if (m_variants.size() > 0) {
        obj.insert(QString("variants"), ::OpenAPI::toJsonValue(m_variants));
    }
    return obj;
}

QMap<QString, OAIGoogleCloudRetailV2CustomAttribute> OAIGoogleCloudRetailV2Product::getAttributes() const {
    return m_attributes;
}
void OAIGoogleCloudRetailV2Product::setAttributes(const QMap<QString, OAIGoogleCloudRetailV2CustomAttribute> &attributes) {
    m_attributes = attributes;
    m_attributes_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_attributes_Set() const{
    return m_attributes_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_attributes_Valid() const{
    return m_attributes_isValid;
}

OAIGoogleCloudRetailV2Audience OAIGoogleCloudRetailV2Product::getAudience() const {
    return m_audience;
}
void OAIGoogleCloudRetailV2Product::setAudience(const OAIGoogleCloudRetailV2Audience &audience) {
    m_audience = audience;
    m_audience_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_audience_Set() const{
    return m_audience_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_audience_Valid() const{
    return m_audience_isValid;
}

QString OAIGoogleCloudRetailV2Product::getAvailability() const {
    return m_availability;
}
void OAIGoogleCloudRetailV2Product::setAvailability(const QString &availability) {
    m_availability = availability;
    m_availability_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_availability_Set() const{
    return m_availability_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_availability_Valid() const{
    return m_availability_isValid;
}

qint32 OAIGoogleCloudRetailV2Product::getAvailableQuantity() const {
    return m_available_quantity;
}
void OAIGoogleCloudRetailV2Product::setAvailableQuantity(const qint32 &available_quantity) {
    m_available_quantity = available_quantity;
    m_available_quantity_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_available_quantity_Set() const{
    return m_available_quantity_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_available_quantity_Valid() const{
    return m_available_quantity_isValid;
}

QString OAIGoogleCloudRetailV2Product::getAvailableTime() const {
    return m_available_time;
}
void OAIGoogleCloudRetailV2Product::setAvailableTime(const QString &available_time) {
    m_available_time = available_time;
    m_available_time_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_available_time_Set() const{
    return m_available_time_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_available_time_Valid() const{
    return m_available_time_isValid;
}

QList<QString> OAIGoogleCloudRetailV2Product::getBrands() const {
    return m_brands;
}
void OAIGoogleCloudRetailV2Product::setBrands(const QList<QString> &brands) {
    m_brands = brands;
    m_brands_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_brands_Set() const{
    return m_brands_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_brands_Valid() const{
    return m_brands_isValid;
}

QList<QString> OAIGoogleCloudRetailV2Product::getCategories() const {
    return m_categories;
}
void OAIGoogleCloudRetailV2Product::setCategories(const QList<QString> &categories) {
    m_categories = categories;
    m_categories_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_categories_Set() const{
    return m_categories_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_categories_Valid() const{
    return m_categories_isValid;
}

QList<QString> OAIGoogleCloudRetailV2Product::getCollectionMemberIds() const {
    return m_collection_member_ids;
}
void OAIGoogleCloudRetailV2Product::setCollectionMemberIds(const QList<QString> &collection_member_ids) {
    m_collection_member_ids = collection_member_ids;
    m_collection_member_ids_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_collection_member_ids_Set() const{
    return m_collection_member_ids_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_collection_member_ids_Valid() const{
    return m_collection_member_ids_isValid;
}

OAIGoogleCloudRetailV2ColorInfo OAIGoogleCloudRetailV2Product::getColorInfo() const {
    return m_color_info;
}
void OAIGoogleCloudRetailV2Product::setColorInfo(const OAIGoogleCloudRetailV2ColorInfo &color_info) {
    m_color_info = color_info;
    m_color_info_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_color_info_Set() const{
    return m_color_info_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_color_info_Valid() const{
    return m_color_info_isValid;
}

QList<QString> OAIGoogleCloudRetailV2Product::getConditions() const {
    return m_conditions;
}
void OAIGoogleCloudRetailV2Product::setConditions(const QList<QString> &conditions) {
    m_conditions = conditions;
    m_conditions_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_conditions_Set() const{
    return m_conditions_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_conditions_Valid() const{
    return m_conditions_isValid;
}

QString OAIGoogleCloudRetailV2Product::getDescription() const {
    return m_description;
}
void OAIGoogleCloudRetailV2Product::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudRetailV2Product::getExpireTime() const {
    return m_expire_time;
}
void OAIGoogleCloudRetailV2Product::setExpireTime(const QString &expire_time) {
    m_expire_time = expire_time;
    m_expire_time_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_expire_time_Set() const{
    return m_expire_time_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_expire_time_Valid() const{
    return m_expire_time_isValid;
}

QList<OAIGoogleCloudRetailV2FulfillmentInfo> OAIGoogleCloudRetailV2Product::getFulfillmentInfo() const {
    return m_fulfillment_info;
}
void OAIGoogleCloudRetailV2Product::setFulfillmentInfo(const QList<OAIGoogleCloudRetailV2FulfillmentInfo> &fulfillment_info) {
    m_fulfillment_info = fulfillment_info;
    m_fulfillment_info_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_fulfillment_info_Set() const{
    return m_fulfillment_info_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_fulfillment_info_Valid() const{
    return m_fulfillment_info_isValid;
}

QString OAIGoogleCloudRetailV2Product::getGtin() const {
    return m_gtin;
}
void OAIGoogleCloudRetailV2Product::setGtin(const QString &gtin) {
    m_gtin = gtin;
    m_gtin_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_gtin_Set() const{
    return m_gtin_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_gtin_Valid() const{
    return m_gtin_isValid;
}

QString OAIGoogleCloudRetailV2Product::getId() const {
    return m_id;
}
void OAIGoogleCloudRetailV2Product::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_id_Valid() const{
    return m_id_isValid;
}

QList<OAIGoogleCloudRetailV2Image> OAIGoogleCloudRetailV2Product::getImages() const {
    return m_images;
}
void OAIGoogleCloudRetailV2Product::setImages(const QList<OAIGoogleCloudRetailV2Image> &images) {
    m_images = images;
    m_images_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_images_Set() const{
    return m_images_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_images_Valid() const{
    return m_images_isValid;
}

QString OAIGoogleCloudRetailV2Product::getLanguageCode() const {
    return m_language_code;
}
void OAIGoogleCloudRetailV2Product::setLanguageCode(const QString &language_code) {
    m_language_code = language_code;
    m_language_code_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_language_code_Set() const{
    return m_language_code_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_language_code_Valid() const{
    return m_language_code_isValid;
}

QList<OAIGoogleCloudRetailV2LocalInventory> OAIGoogleCloudRetailV2Product::getLocalInventories() const {
    return m_local_inventories;
}
void OAIGoogleCloudRetailV2Product::setLocalInventories(const QList<OAIGoogleCloudRetailV2LocalInventory> &local_inventories) {
    m_local_inventories = local_inventories;
    m_local_inventories_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_local_inventories_Set() const{
    return m_local_inventories_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_local_inventories_Valid() const{
    return m_local_inventories_isValid;
}

QList<QString> OAIGoogleCloudRetailV2Product::getMaterials() const {
    return m_materials;
}
void OAIGoogleCloudRetailV2Product::setMaterials(const QList<QString> &materials) {
    m_materials = materials;
    m_materials_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_materials_Set() const{
    return m_materials_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_materials_Valid() const{
    return m_materials_isValid;
}

QString OAIGoogleCloudRetailV2Product::getName() const {
    return m_name;
}
void OAIGoogleCloudRetailV2Product::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_name_Valid() const{
    return m_name_isValid;
}

QList<QString> OAIGoogleCloudRetailV2Product::getPatterns() const {
    return m_patterns;
}
void OAIGoogleCloudRetailV2Product::setPatterns(const QList<QString> &patterns) {
    m_patterns = patterns;
    m_patterns_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_patterns_Set() const{
    return m_patterns_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_patterns_Valid() const{
    return m_patterns_isValid;
}

OAIGoogleCloudRetailV2PriceInfo OAIGoogleCloudRetailV2Product::getPriceInfo() const {
    return m_price_info;
}
void OAIGoogleCloudRetailV2Product::setPriceInfo(const OAIGoogleCloudRetailV2PriceInfo &price_info) {
    m_price_info = price_info;
    m_price_info_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_price_info_Set() const{
    return m_price_info_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_price_info_Valid() const{
    return m_price_info_isValid;
}

QString OAIGoogleCloudRetailV2Product::getPrimaryProductId() const {
    return m_primary_product_id;
}
void OAIGoogleCloudRetailV2Product::setPrimaryProductId(const QString &primary_product_id) {
    m_primary_product_id = primary_product_id;
    m_primary_product_id_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_primary_product_id_Set() const{
    return m_primary_product_id_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_primary_product_id_Valid() const{
    return m_primary_product_id_isValid;
}

QList<OAIGoogleCloudRetailV2Promotion> OAIGoogleCloudRetailV2Product::getPromotions() const {
    return m_promotions;
}
void OAIGoogleCloudRetailV2Product::setPromotions(const QList<OAIGoogleCloudRetailV2Promotion> &promotions) {
    m_promotions = promotions;
    m_promotions_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_promotions_Set() const{
    return m_promotions_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_promotions_Valid() const{
    return m_promotions_isValid;
}

QString OAIGoogleCloudRetailV2Product::getPublishTime() const {
    return m_publish_time;
}
void OAIGoogleCloudRetailV2Product::setPublishTime(const QString &publish_time) {
    m_publish_time = publish_time;
    m_publish_time_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_publish_time_Set() const{
    return m_publish_time_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_publish_time_Valid() const{
    return m_publish_time_isValid;
}

OAIGoogleCloudRetailV2Rating OAIGoogleCloudRetailV2Product::getRating() const {
    return m_rating;
}
void OAIGoogleCloudRetailV2Product::setRating(const OAIGoogleCloudRetailV2Rating &rating) {
    m_rating = rating;
    m_rating_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_rating_Set() const{
    return m_rating_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_rating_Valid() const{
    return m_rating_isValid;
}

QString OAIGoogleCloudRetailV2Product::getRetrievableFields() const {
    return m_retrievable_fields;
}
void OAIGoogleCloudRetailV2Product::setRetrievableFields(const QString &retrievable_fields) {
    m_retrievable_fields = retrievable_fields;
    m_retrievable_fields_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_retrievable_fields_Set() const{
    return m_retrievable_fields_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_retrievable_fields_Valid() const{
    return m_retrievable_fields_isValid;
}

QList<QString> OAIGoogleCloudRetailV2Product::getSizes() const {
    return m_sizes;
}
void OAIGoogleCloudRetailV2Product::setSizes(const QList<QString> &sizes) {
    m_sizes = sizes;
    m_sizes_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_sizes_Set() const{
    return m_sizes_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_sizes_Valid() const{
    return m_sizes_isValid;
}

QList<QString> OAIGoogleCloudRetailV2Product::getTags() const {
    return m_tags;
}
void OAIGoogleCloudRetailV2Product::setTags(const QList<QString> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_tags_Valid() const{
    return m_tags_isValid;
}

QString OAIGoogleCloudRetailV2Product::getTitle() const {
    return m_title;
}
void OAIGoogleCloudRetailV2Product::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_title_Set() const{
    return m_title_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIGoogleCloudRetailV2Product::getTtl() const {
    return m_ttl;
}
void OAIGoogleCloudRetailV2Product::setTtl(const QString &ttl) {
    m_ttl = ttl;
    m_ttl_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_ttl_Set() const{
    return m_ttl_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_ttl_Valid() const{
    return m_ttl_isValid;
}

QString OAIGoogleCloudRetailV2Product::getType() const {
    return m_type;
}
void OAIGoogleCloudRetailV2Product::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIGoogleCloudRetailV2Product::getUri() const {
    return m_uri;
}
void OAIGoogleCloudRetailV2Product::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_uri_Valid() const{
    return m_uri_isValid;
}

QList<OAIGoogleCloudRetailV2Product> OAIGoogleCloudRetailV2Product::getVariants() const {
    return m_variants;
}
void OAIGoogleCloudRetailV2Product::setVariants(const QList<OAIGoogleCloudRetailV2Product> &variants) {
    m_variants = variants;
    m_variants_isSet = true;
}

bool OAIGoogleCloudRetailV2Product::is_variants_Set() const{
    return m_variants_isSet;
}

bool OAIGoogleCloudRetailV2Product::is_variants_Valid() const{
    return m_variants_isValid;
}

bool OAIGoogleCloudRetailV2Product::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attributes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_audience.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_availability_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_available_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_available_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_brands.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_categories.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_collection_member_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_color_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_conditions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expire_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fulfillment_info.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_gtin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_images.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_local_inventories.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_materials.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_patterns.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_promotions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_publish_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rating.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_retrievable_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sizes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ttl_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_variants.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2Product::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
