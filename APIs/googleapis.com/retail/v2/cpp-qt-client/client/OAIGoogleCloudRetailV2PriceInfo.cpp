/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2PriceInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2PriceInfo::OAIGoogleCloudRetailV2PriceInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2PriceInfo::OAIGoogleCloudRetailV2PriceInfo() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2PriceInfo::~OAIGoogleCloudRetailV2PriceInfo() {}

void OAIGoogleCloudRetailV2PriceInfo::initializeModel() {

    m_cost_isSet = false;
    m_cost_isValid = false;

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;

    m_original_price_isSet = false;
    m_original_price_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_price_effective_time_isSet = false;
    m_price_effective_time_isValid = false;

    m_price_expire_time_isSet = false;
    m_price_expire_time_isValid = false;

    m_price_range_isSet = false;
    m_price_range_isValid = false;
}

void OAIGoogleCloudRetailV2PriceInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2PriceInfo::fromJsonObject(QJsonObject json) {

    m_cost_isValid = ::OpenAPI::fromJsonValue(m_cost, json[QString("cost")]);
    m_cost_isSet = !json[QString("cost")].isNull() && m_cost_isValid;

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("currencyCode")]);
    m_currency_code_isSet = !json[QString("currencyCode")].isNull() && m_currency_code_isValid;

    m_original_price_isValid = ::OpenAPI::fromJsonValue(m_original_price, json[QString("originalPrice")]);
    m_original_price_isSet = !json[QString("originalPrice")].isNull() && m_original_price_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_price_effective_time_isValid = ::OpenAPI::fromJsonValue(m_price_effective_time, json[QString("priceEffectiveTime")]);
    m_price_effective_time_isSet = !json[QString("priceEffectiveTime")].isNull() && m_price_effective_time_isValid;

    m_price_expire_time_isValid = ::OpenAPI::fromJsonValue(m_price_expire_time, json[QString("priceExpireTime")]);
    m_price_expire_time_isSet = !json[QString("priceExpireTime")].isNull() && m_price_expire_time_isValid;

    m_price_range_isValid = ::OpenAPI::fromJsonValue(m_price_range, json[QString("priceRange")]);
    m_price_range_isSet = !json[QString("priceRange")].isNull() && m_price_range_isValid;
}

QString OAIGoogleCloudRetailV2PriceInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2PriceInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_cost_isSet) {
        obj.insert(QString("cost"), ::OpenAPI::toJsonValue(m_cost));
    }
    if (m_currency_code_isSet) {
        obj.insert(QString("currencyCode"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    if (m_original_price_isSet) {
        obj.insert(QString("originalPrice"), ::OpenAPI::toJsonValue(m_original_price));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_price_effective_time_isSet) {
        obj.insert(QString("priceEffectiveTime"), ::OpenAPI::toJsonValue(m_price_effective_time));
    }
    if (m_price_expire_time_isSet) {
        obj.insert(QString("priceExpireTime"), ::OpenAPI::toJsonValue(m_price_expire_time));
    }
    if (m_price_range.isSet()) {
        obj.insert(QString("priceRange"), ::OpenAPI::toJsonValue(m_price_range));
    }
    return obj;
}

float OAIGoogleCloudRetailV2PriceInfo::getCost() const {
    return m_cost;
}
void OAIGoogleCloudRetailV2PriceInfo::setCost(const float &cost) {
    m_cost = cost;
    m_cost_isSet = true;
}

bool OAIGoogleCloudRetailV2PriceInfo::is_cost_Set() const{
    return m_cost_isSet;
}

bool OAIGoogleCloudRetailV2PriceInfo::is_cost_Valid() const{
    return m_cost_isValid;
}

QString OAIGoogleCloudRetailV2PriceInfo::getCurrencyCode() const {
    return m_currency_code;
}
void OAIGoogleCloudRetailV2PriceInfo::setCurrencyCode(const QString &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAIGoogleCloudRetailV2PriceInfo::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAIGoogleCloudRetailV2PriceInfo::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

float OAIGoogleCloudRetailV2PriceInfo::getOriginalPrice() const {
    return m_original_price;
}
void OAIGoogleCloudRetailV2PriceInfo::setOriginalPrice(const float &original_price) {
    m_original_price = original_price;
    m_original_price_isSet = true;
}

bool OAIGoogleCloudRetailV2PriceInfo::is_original_price_Set() const{
    return m_original_price_isSet;
}

bool OAIGoogleCloudRetailV2PriceInfo::is_original_price_Valid() const{
    return m_original_price_isValid;
}

float OAIGoogleCloudRetailV2PriceInfo::getPrice() const {
    return m_price;
}
void OAIGoogleCloudRetailV2PriceInfo::setPrice(const float &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIGoogleCloudRetailV2PriceInfo::is_price_Set() const{
    return m_price_isSet;
}

bool OAIGoogleCloudRetailV2PriceInfo::is_price_Valid() const{
    return m_price_isValid;
}

QString OAIGoogleCloudRetailV2PriceInfo::getPriceEffectiveTime() const {
    return m_price_effective_time;
}
void OAIGoogleCloudRetailV2PriceInfo::setPriceEffectiveTime(const QString &price_effective_time) {
    m_price_effective_time = price_effective_time;
    m_price_effective_time_isSet = true;
}

bool OAIGoogleCloudRetailV2PriceInfo::is_price_effective_time_Set() const{
    return m_price_effective_time_isSet;
}

bool OAIGoogleCloudRetailV2PriceInfo::is_price_effective_time_Valid() const{
    return m_price_effective_time_isValid;
}

QString OAIGoogleCloudRetailV2PriceInfo::getPriceExpireTime() const {
    return m_price_expire_time;
}
void OAIGoogleCloudRetailV2PriceInfo::setPriceExpireTime(const QString &price_expire_time) {
    m_price_expire_time = price_expire_time;
    m_price_expire_time_isSet = true;
}

bool OAIGoogleCloudRetailV2PriceInfo::is_price_expire_time_Set() const{
    return m_price_expire_time_isSet;
}

bool OAIGoogleCloudRetailV2PriceInfo::is_price_expire_time_Valid() const{
    return m_price_expire_time_isValid;
}

OAIGoogleCloudRetailV2PriceInfoPriceRange OAIGoogleCloudRetailV2PriceInfo::getPriceRange() const {
    return m_price_range;
}
void OAIGoogleCloudRetailV2PriceInfo::setPriceRange(const OAIGoogleCloudRetailV2PriceInfoPriceRange &price_range) {
    m_price_range = price_range;
    m_price_range_isSet = true;
}

bool OAIGoogleCloudRetailV2PriceInfo::is_price_range_Set() const{
    return m_price_range_isSet;
}

bool OAIGoogleCloudRetailV2PriceInfo::is_price_range_Valid() const{
    return m_price_range_isValid;
}

bool OAIGoogleCloudRetailV2PriceInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cost_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_original_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_effective_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_expire_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_range.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2PriceInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
