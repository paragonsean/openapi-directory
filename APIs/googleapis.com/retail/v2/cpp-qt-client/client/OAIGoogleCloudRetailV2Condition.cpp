/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2Condition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2Condition::OAIGoogleCloudRetailV2Condition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2Condition::OAIGoogleCloudRetailV2Condition() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2Condition::~OAIGoogleCloudRetailV2Condition() {}

void OAIGoogleCloudRetailV2Condition::initializeModel() {

    m_active_time_range_isSet = false;
    m_active_time_range_isValid = false;

    m_page_categories_isSet = false;
    m_page_categories_isValid = false;

    m_query_terms_isSet = false;
    m_query_terms_isValid = false;
}

void OAIGoogleCloudRetailV2Condition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2Condition::fromJsonObject(QJsonObject json) {

    m_active_time_range_isValid = ::OpenAPI::fromJsonValue(m_active_time_range, json[QString("activeTimeRange")]);
    m_active_time_range_isSet = !json[QString("activeTimeRange")].isNull() && m_active_time_range_isValid;

    m_page_categories_isValid = ::OpenAPI::fromJsonValue(m_page_categories, json[QString("pageCategories")]);
    m_page_categories_isSet = !json[QString("pageCategories")].isNull() && m_page_categories_isValid;

    m_query_terms_isValid = ::OpenAPI::fromJsonValue(m_query_terms, json[QString("queryTerms")]);
    m_query_terms_isSet = !json[QString("queryTerms")].isNull() && m_query_terms_isValid;
}

QString OAIGoogleCloudRetailV2Condition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2Condition::asJsonObject() const {
    QJsonObject obj;
    if (m_active_time_range.size() > 0) {
        obj.insert(QString("activeTimeRange"), ::OpenAPI::toJsonValue(m_active_time_range));
    }
    if (m_page_categories.size() > 0) {
        obj.insert(QString("pageCategories"), ::OpenAPI::toJsonValue(m_page_categories));
    }
    if (m_query_terms.size() > 0) {
        obj.insert(QString("queryTerms"), ::OpenAPI::toJsonValue(m_query_terms));
    }
    return obj;
}

QList<OAIGoogleCloudRetailV2ConditionTimeRange> OAIGoogleCloudRetailV2Condition::getActiveTimeRange() const {
    return m_active_time_range;
}
void OAIGoogleCloudRetailV2Condition::setActiveTimeRange(const QList<OAIGoogleCloudRetailV2ConditionTimeRange> &active_time_range) {
    m_active_time_range = active_time_range;
    m_active_time_range_isSet = true;
}

bool OAIGoogleCloudRetailV2Condition::is_active_time_range_Set() const{
    return m_active_time_range_isSet;
}

bool OAIGoogleCloudRetailV2Condition::is_active_time_range_Valid() const{
    return m_active_time_range_isValid;
}

QList<QString> OAIGoogleCloudRetailV2Condition::getPageCategories() const {
    return m_page_categories;
}
void OAIGoogleCloudRetailV2Condition::setPageCategories(const QList<QString> &page_categories) {
    m_page_categories = page_categories;
    m_page_categories_isSet = true;
}

bool OAIGoogleCloudRetailV2Condition::is_page_categories_Set() const{
    return m_page_categories_isSet;
}

bool OAIGoogleCloudRetailV2Condition::is_page_categories_Valid() const{
    return m_page_categories_isValid;
}

QList<OAIGoogleCloudRetailV2ConditionQueryTerm> OAIGoogleCloudRetailV2Condition::getQueryTerms() const {
    return m_query_terms;
}
void OAIGoogleCloudRetailV2Condition::setQueryTerms(const QList<OAIGoogleCloudRetailV2ConditionQueryTerm> &query_terms) {
    m_query_terms = query_terms;
    m_query_terms_isSet = true;
}

bool OAIGoogleCloudRetailV2Condition::is_query_terms_Set() const{
    return m_query_terms_isSet;
}

bool OAIGoogleCloudRetailV2Condition::is_query_terms_Valid() const{
    return m_query_terms_isValid;
}

bool OAIGoogleCloudRetailV2Condition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active_time_range.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_categories.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_terms.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2Condition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
