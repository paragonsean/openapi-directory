/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2UserInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2UserInfo::OAIGoogleCloudRetailV2UserInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2UserInfo::OAIGoogleCloudRetailV2UserInfo() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2UserInfo::~OAIGoogleCloudRetailV2UserInfo() {}

void OAIGoogleCloudRetailV2UserInfo::initializeModel() {

    m_direct_user_request_isSet = false;
    m_direct_user_request_isValid = false;

    m_ip_address_isSet = false;
    m_ip_address_isValid = false;

    m_user_agent_isSet = false;
    m_user_agent_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;
}

void OAIGoogleCloudRetailV2UserInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2UserInfo::fromJsonObject(QJsonObject json) {

    m_direct_user_request_isValid = ::OpenAPI::fromJsonValue(m_direct_user_request, json[QString("directUserRequest")]);
    m_direct_user_request_isSet = !json[QString("directUserRequest")].isNull() && m_direct_user_request_isValid;

    m_ip_address_isValid = ::OpenAPI::fromJsonValue(m_ip_address, json[QString("ipAddress")]);
    m_ip_address_isSet = !json[QString("ipAddress")].isNull() && m_ip_address_isValid;

    m_user_agent_isValid = ::OpenAPI::fromJsonValue(m_user_agent, json[QString("userAgent")]);
    m_user_agent_isSet = !json[QString("userAgent")].isNull() && m_user_agent_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("userId")]);
    m_user_id_isSet = !json[QString("userId")].isNull() && m_user_id_isValid;
}

QString OAIGoogleCloudRetailV2UserInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2UserInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_direct_user_request_isSet) {
        obj.insert(QString("directUserRequest"), ::OpenAPI::toJsonValue(m_direct_user_request));
    }
    if (m_ip_address_isSet) {
        obj.insert(QString("ipAddress"), ::OpenAPI::toJsonValue(m_ip_address));
    }
    if (m_user_agent_isSet) {
        obj.insert(QString("userAgent"), ::OpenAPI::toJsonValue(m_user_agent));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("userId"), ::OpenAPI::toJsonValue(m_user_id));
    }
    return obj;
}

bool OAIGoogleCloudRetailV2UserInfo::isDirectUserRequest() const {
    return m_direct_user_request;
}
void OAIGoogleCloudRetailV2UserInfo::setDirectUserRequest(const bool &direct_user_request) {
    m_direct_user_request = direct_user_request;
    m_direct_user_request_isSet = true;
}

bool OAIGoogleCloudRetailV2UserInfo::is_direct_user_request_Set() const{
    return m_direct_user_request_isSet;
}

bool OAIGoogleCloudRetailV2UserInfo::is_direct_user_request_Valid() const{
    return m_direct_user_request_isValid;
}

QString OAIGoogleCloudRetailV2UserInfo::getIpAddress() const {
    return m_ip_address;
}
void OAIGoogleCloudRetailV2UserInfo::setIpAddress(const QString &ip_address) {
    m_ip_address = ip_address;
    m_ip_address_isSet = true;
}

bool OAIGoogleCloudRetailV2UserInfo::is_ip_address_Set() const{
    return m_ip_address_isSet;
}

bool OAIGoogleCloudRetailV2UserInfo::is_ip_address_Valid() const{
    return m_ip_address_isValid;
}

QString OAIGoogleCloudRetailV2UserInfo::getUserAgent() const {
    return m_user_agent;
}
void OAIGoogleCloudRetailV2UserInfo::setUserAgent(const QString &user_agent) {
    m_user_agent = user_agent;
    m_user_agent_isSet = true;
}

bool OAIGoogleCloudRetailV2UserInfo::is_user_agent_Set() const{
    return m_user_agent_isSet;
}

bool OAIGoogleCloudRetailV2UserInfo::is_user_agent_Valid() const{
    return m_user_agent_isValid;
}

QString OAIGoogleCloudRetailV2UserInfo::getUserId() const {
    return m_user_id;
}
void OAIGoogleCloudRetailV2UserInfo::setUserId(const QString &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAIGoogleCloudRetailV2UserInfo::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAIGoogleCloudRetailV2UserInfo::is_user_id_Valid() const{
    return m_user_id_isValid;
}

bool OAIGoogleCloudRetailV2UserInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_direct_user_request_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ip_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_agent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2UserInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
