/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaTransformedUserEventsMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaTransformedUserEventsMetadata::OAIGoogleCloudRetailV2alphaTransformedUserEventsMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaTransformedUserEventsMetadata::OAIGoogleCloudRetailV2alphaTransformedUserEventsMetadata() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaTransformedUserEventsMetadata::~OAIGoogleCloudRetailV2alphaTransformedUserEventsMetadata() {}

void OAIGoogleCloudRetailV2alphaTransformedUserEventsMetadata::initializeModel() {

    m_source_events_count_isSet = false;
    m_source_events_count_isValid = false;

    m_transformed_events_count_isSet = false;
    m_transformed_events_count_isValid = false;
}

void OAIGoogleCloudRetailV2alphaTransformedUserEventsMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaTransformedUserEventsMetadata::fromJsonObject(QJsonObject json) {

    m_source_events_count_isValid = ::OpenAPI::fromJsonValue(m_source_events_count, json[QString("sourceEventsCount")]);
    m_source_events_count_isSet = !json[QString("sourceEventsCount")].isNull() && m_source_events_count_isValid;

    m_transformed_events_count_isValid = ::OpenAPI::fromJsonValue(m_transformed_events_count, json[QString("transformedEventsCount")]);
    m_transformed_events_count_isSet = !json[QString("transformedEventsCount")].isNull() && m_transformed_events_count_isValid;
}

QString OAIGoogleCloudRetailV2alphaTransformedUserEventsMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaTransformedUserEventsMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_source_events_count_isSet) {
        obj.insert(QString("sourceEventsCount"), ::OpenAPI::toJsonValue(m_source_events_count));
    }
    if (m_transformed_events_count_isSet) {
        obj.insert(QString("transformedEventsCount"), ::OpenAPI::toJsonValue(m_transformed_events_count));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2alphaTransformedUserEventsMetadata::getSourceEventsCount() const {
    return m_source_events_count;
}
void OAIGoogleCloudRetailV2alphaTransformedUserEventsMetadata::setSourceEventsCount(const QString &source_events_count) {
    m_source_events_count = source_events_count;
    m_source_events_count_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaTransformedUserEventsMetadata::is_source_events_count_Set() const{
    return m_source_events_count_isSet;
}

bool OAIGoogleCloudRetailV2alphaTransformedUserEventsMetadata::is_source_events_count_Valid() const{
    return m_source_events_count_isValid;
}

QString OAIGoogleCloudRetailV2alphaTransformedUserEventsMetadata::getTransformedEventsCount() const {
    return m_transformed_events_count;
}
void OAIGoogleCloudRetailV2alphaTransformedUserEventsMetadata::setTransformedEventsCount(const QString &transformed_events_count) {
    m_transformed_events_count = transformed_events_count;
    m_transformed_events_count_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaTransformedUserEventsMetadata::is_transformed_events_count_Set() const{
    return m_transformed_events_count_isSet;
}

bool OAIGoogleCloudRetailV2alphaTransformedUserEventsMetadata::is_transformed_events_count_Valid() const{
    return m_transformed_events_count_isValid;
}

bool OAIGoogleCloudRetailV2alphaTransformedUserEventsMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_source_events_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transformed_events_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaTransformedUserEventsMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
