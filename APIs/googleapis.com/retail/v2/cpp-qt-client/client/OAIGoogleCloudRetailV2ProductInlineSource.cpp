/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2ProductInlineSource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2ProductInlineSource::OAIGoogleCloudRetailV2ProductInlineSource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2ProductInlineSource::OAIGoogleCloudRetailV2ProductInlineSource() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2ProductInlineSource::~OAIGoogleCloudRetailV2ProductInlineSource() {}

void OAIGoogleCloudRetailV2ProductInlineSource::initializeModel() {

    m_products_isSet = false;
    m_products_isValid = false;
}

void OAIGoogleCloudRetailV2ProductInlineSource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2ProductInlineSource::fromJsonObject(QJsonObject json) {

    m_products_isValid = ::OpenAPI::fromJsonValue(m_products, json[QString("products")]);
    m_products_isSet = !json[QString("products")].isNull() && m_products_isValid;
}

QString OAIGoogleCloudRetailV2ProductInlineSource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2ProductInlineSource::asJsonObject() const {
    QJsonObject obj;
    if (m_products.size() > 0) {
        obj.insert(QString("products"), ::OpenAPI::toJsonValue(m_products));
    }
    return obj;
}

QList<OAIGoogleCloudRetailV2Product> OAIGoogleCloudRetailV2ProductInlineSource::getProducts() const {
    return m_products;
}
void OAIGoogleCloudRetailV2ProductInlineSource::setProducts(const QList<OAIGoogleCloudRetailV2Product> &products) {
    m_products = products;
    m_products_isSet = true;
}

bool OAIGoogleCloudRetailV2ProductInlineSource::is_products_Set() const{
    return m_products_isSet;
}

bool OAIGoogleCloudRetailV2ProductInlineSource::is_products_Valid() const{
    return m_products_isValid;
}

bool OAIGoogleCloudRetailV2ProductInlineSource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_products.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2ProductInlineSource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
