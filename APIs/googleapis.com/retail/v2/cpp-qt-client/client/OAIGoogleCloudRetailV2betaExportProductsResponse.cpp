/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2betaExportProductsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2betaExportProductsResponse::OAIGoogleCloudRetailV2betaExportProductsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2betaExportProductsResponse::OAIGoogleCloudRetailV2betaExportProductsResponse() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2betaExportProductsResponse::~OAIGoogleCloudRetailV2betaExportProductsResponse() {}

void OAIGoogleCloudRetailV2betaExportProductsResponse::initializeModel() {

    m_error_samples_isSet = false;
    m_error_samples_isValid = false;

    m_errors_config_isSet = false;
    m_errors_config_isValid = false;

    m_output_result_isSet = false;
    m_output_result_isValid = false;
}

void OAIGoogleCloudRetailV2betaExportProductsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2betaExportProductsResponse::fromJsonObject(QJsonObject json) {

    m_error_samples_isValid = ::OpenAPI::fromJsonValue(m_error_samples, json[QString("errorSamples")]);
    m_error_samples_isSet = !json[QString("errorSamples")].isNull() && m_error_samples_isValid;

    m_errors_config_isValid = ::OpenAPI::fromJsonValue(m_errors_config, json[QString("errorsConfig")]);
    m_errors_config_isSet = !json[QString("errorsConfig")].isNull() && m_errors_config_isValid;

    m_output_result_isValid = ::OpenAPI::fromJsonValue(m_output_result, json[QString("outputResult")]);
    m_output_result_isSet = !json[QString("outputResult")].isNull() && m_output_result_isValid;
}

QString OAIGoogleCloudRetailV2betaExportProductsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2betaExportProductsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_error_samples.size() > 0) {
        obj.insert(QString("errorSamples"), ::OpenAPI::toJsonValue(m_error_samples));
    }
    if (m_errors_config.isSet()) {
        obj.insert(QString("errorsConfig"), ::OpenAPI::toJsonValue(m_errors_config));
    }
    if (m_output_result.isSet()) {
        obj.insert(QString("outputResult"), ::OpenAPI::toJsonValue(m_output_result));
    }
    return obj;
}

QList<OAIGoogleRpcStatus> OAIGoogleCloudRetailV2betaExportProductsResponse::getErrorSamples() const {
    return m_error_samples;
}
void OAIGoogleCloudRetailV2betaExportProductsResponse::setErrorSamples(const QList<OAIGoogleRpcStatus> &error_samples) {
    m_error_samples = error_samples;
    m_error_samples_isSet = true;
}

bool OAIGoogleCloudRetailV2betaExportProductsResponse::is_error_samples_Set() const{
    return m_error_samples_isSet;
}

bool OAIGoogleCloudRetailV2betaExportProductsResponse::is_error_samples_Valid() const{
    return m_error_samples_isValid;
}

OAIGoogleCloudRetailV2betaExportErrorsConfig OAIGoogleCloudRetailV2betaExportProductsResponse::getErrorsConfig() const {
    return m_errors_config;
}
void OAIGoogleCloudRetailV2betaExportProductsResponse::setErrorsConfig(const OAIGoogleCloudRetailV2betaExportErrorsConfig &errors_config) {
    m_errors_config = errors_config;
    m_errors_config_isSet = true;
}

bool OAIGoogleCloudRetailV2betaExportProductsResponse::is_errors_config_Set() const{
    return m_errors_config_isSet;
}

bool OAIGoogleCloudRetailV2betaExportProductsResponse::is_errors_config_Valid() const{
    return m_errors_config_isValid;
}

OAIGoogleCloudRetailV2betaOutputResult OAIGoogleCloudRetailV2betaExportProductsResponse::getOutputResult() const {
    return m_output_result;
}
void OAIGoogleCloudRetailV2betaExportProductsResponse::setOutputResult(const OAIGoogleCloudRetailV2betaOutputResult &output_result) {
    m_output_result = output_result;
    m_output_result_isSet = true;
}

bool OAIGoogleCloudRetailV2betaExportProductsResponse::is_output_result_Set() const{
    return m_output_result_isSet;
}

bool OAIGoogleCloudRetailV2betaExportProductsResponse::is_output_result_Valid() const{
    return m_output_result_isValid;
}

bool OAIGoogleCloudRetailV2betaExportProductsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error_samples.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_errors_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_result.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2betaExportProductsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
