/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2CustomAttribute.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2CustomAttribute::OAIGoogleCloudRetailV2CustomAttribute(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2CustomAttribute::OAIGoogleCloudRetailV2CustomAttribute() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2CustomAttribute::~OAIGoogleCloudRetailV2CustomAttribute() {}

void OAIGoogleCloudRetailV2CustomAttribute::initializeModel() {

    m_indexable_isSet = false;
    m_indexable_isValid = false;

    m_numbers_isSet = false;
    m_numbers_isValid = false;

    m_searchable_isSet = false;
    m_searchable_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;
}

void OAIGoogleCloudRetailV2CustomAttribute::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2CustomAttribute::fromJsonObject(QJsonObject json) {

    m_indexable_isValid = ::OpenAPI::fromJsonValue(m_indexable, json[QString("indexable")]);
    m_indexable_isSet = !json[QString("indexable")].isNull() && m_indexable_isValid;

    m_numbers_isValid = ::OpenAPI::fromJsonValue(m_numbers, json[QString("numbers")]);
    m_numbers_isSet = !json[QString("numbers")].isNull() && m_numbers_isValid;

    m_searchable_isValid = ::OpenAPI::fromJsonValue(m_searchable, json[QString("searchable")]);
    m_searchable_isSet = !json[QString("searchable")].isNull() && m_searchable_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;
}

QString OAIGoogleCloudRetailV2CustomAttribute::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2CustomAttribute::asJsonObject() const {
    QJsonObject obj;
    if (m_indexable_isSet) {
        obj.insert(QString("indexable"), ::OpenAPI::toJsonValue(m_indexable));
    }
    if (m_numbers.size() > 0) {
        obj.insert(QString("numbers"), ::OpenAPI::toJsonValue(m_numbers));
    }
    if (m_searchable_isSet) {
        obj.insert(QString("searchable"), ::OpenAPI::toJsonValue(m_searchable));
    }
    if (m_text.size() > 0) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    return obj;
}

bool OAIGoogleCloudRetailV2CustomAttribute::isIndexable() const {
    return m_indexable;
}
void OAIGoogleCloudRetailV2CustomAttribute::setIndexable(const bool &indexable) {
    m_indexable = indexable;
    m_indexable_isSet = true;
}

bool OAIGoogleCloudRetailV2CustomAttribute::is_indexable_Set() const{
    return m_indexable_isSet;
}

bool OAIGoogleCloudRetailV2CustomAttribute::is_indexable_Valid() const{
    return m_indexable_isValid;
}

QList<double> OAIGoogleCloudRetailV2CustomAttribute::getNumbers() const {
    return m_numbers;
}
void OAIGoogleCloudRetailV2CustomAttribute::setNumbers(const QList<double> &numbers) {
    m_numbers = numbers;
    m_numbers_isSet = true;
}

bool OAIGoogleCloudRetailV2CustomAttribute::is_numbers_Set() const{
    return m_numbers_isSet;
}

bool OAIGoogleCloudRetailV2CustomAttribute::is_numbers_Valid() const{
    return m_numbers_isValid;
}

bool OAIGoogleCloudRetailV2CustomAttribute::isSearchable() const {
    return m_searchable;
}
void OAIGoogleCloudRetailV2CustomAttribute::setSearchable(const bool &searchable) {
    m_searchable = searchable;
    m_searchable_isSet = true;
}

bool OAIGoogleCloudRetailV2CustomAttribute::is_searchable_Set() const{
    return m_searchable_isSet;
}

bool OAIGoogleCloudRetailV2CustomAttribute::is_searchable_Valid() const{
    return m_searchable_isValid;
}

QList<QString> OAIGoogleCloudRetailV2CustomAttribute::getText() const {
    return m_text;
}
void OAIGoogleCloudRetailV2CustomAttribute::setText(const QList<QString> &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAIGoogleCloudRetailV2CustomAttribute::is_text_Set() const{
    return m_text_isSet;
}

bool OAIGoogleCloudRetailV2CustomAttribute::is_text_Valid() const{
    return m_text_isValid;
}

bool OAIGoogleCloudRetailV2CustomAttribute::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_indexable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_numbers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_searchable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2CustomAttribute::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
