/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2ConditionTimeRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2ConditionTimeRange::OAIGoogleCloudRetailV2ConditionTimeRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2ConditionTimeRange::OAIGoogleCloudRetailV2ConditionTimeRange() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2ConditionTimeRange::~OAIGoogleCloudRetailV2ConditionTimeRange() {}

void OAIGoogleCloudRetailV2ConditionTimeRange::initializeModel() {

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;
}

void OAIGoogleCloudRetailV2ConditionTimeRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2ConditionTimeRange::fromJsonObject(QJsonObject json) {

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;
}

QString OAIGoogleCloudRetailV2ConditionTimeRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2ConditionTimeRange::asJsonObject() const {
    QJsonObject obj;
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2ConditionTimeRange::getEndTime() const {
    return m_end_time;
}
void OAIGoogleCloudRetailV2ConditionTimeRange::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleCloudRetailV2ConditionTimeRange::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleCloudRetailV2ConditionTimeRange::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIGoogleCloudRetailV2ConditionTimeRange::getStartTime() const {
    return m_start_time;
}
void OAIGoogleCloudRetailV2ConditionTimeRange::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleCloudRetailV2ConditionTimeRange::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleCloudRetailV2ConditionTimeRange::is_start_time_Valid() const{
    return m_start_time_isValid;
}

bool OAIGoogleCloudRetailV2ConditionTimeRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2ConditionTimeRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
