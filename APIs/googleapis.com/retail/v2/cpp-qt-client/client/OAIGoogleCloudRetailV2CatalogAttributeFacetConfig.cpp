/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2CatalogAttributeFacetConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::OAIGoogleCloudRetailV2CatalogAttributeFacetConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::OAIGoogleCloudRetailV2CatalogAttributeFacetConfig() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::~OAIGoogleCloudRetailV2CatalogAttributeFacetConfig() {}

void OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::initializeModel() {

    m_facet_intervals_isSet = false;
    m_facet_intervals_isValid = false;

    m_ignored_facet_values_isSet = false;
    m_ignored_facet_values_isValid = false;

    m_merged_facet_isSet = false;
    m_merged_facet_isValid = false;

    m_merged_facet_values_isSet = false;
    m_merged_facet_values_isValid = false;

    m_rerank_config_isSet = false;
    m_rerank_config_isValid = false;
}

void OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::fromJsonObject(QJsonObject json) {

    m_facet_intervals_isValid = ::OpenAPI::fromJsonValue(m_facet_intervals, json[QString("facetIntervals")]);
    m_facet_intervals_isSet = !json[QString("facetIntervals")].isNull() && m_facet_intervals_isValid;

    m_ignored_facet_values_isValid = ::OpenAPI::fromJsonValue(m_ignored_facet_values, json[QString("ignoredFacetValues")]);
    m_ignored_facet_values_isSet = !json[QString("ignoredFacetValues")].isNull() && m_ignored_facet_values_isValid;

    m_merged_facet_isValid = ::OpenAPI::fromJsonValue(m_merged_facet, json[QString("mergedFacet")]);
    m_merged_facet_isSet = !json[QString("mergedFacet")].isNull() && m_merged_facet_isValid;

    m_merged_facet_values_isValid = ::OpenAPI::fromJsonValue(m_merged_facet_values, json[QString("mergedFacetValues")]);
    m_merged_facet_values_isSet = !json[QString("mergedFacetValues")].isNull() && m_merged_facet_values_isValid;

    m_rerank_config_isValid = ::OpenAPI::fromJsonValue(m_rerank_config, json[QString("rerankConfig")]);
    m_rerank_config_isSet = !json[QString("rerankConfig")].isNull() && m_rerank_config_isValid;
}

QString OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_facet_intervals.size() > 0) {
        obj.insert(QString("facetIntervals"), ::OpenAPI::toJsonValue(m_facet_intervals));
    }
    if (m_ignored_facet_values.size() > 0) {
        obj.insert(QString("ignoredFacetValues"), ::OpenAPI::toJsonValue(m_ignored_facet_values));
    }
    if (m_merged_facet.isSet()) {
        obj.insert(QString("mergedFacet"), ::OpenAPI::toJsonValue(m_merged_facet));
    }
    if (m_merged_facet_values.size() > 0) {
        obj.insert(QString("mergedFacetValues"), ::OpenAPI::toJsonValue(m_merged_facet_values));
    }
    if (m_rerank_config.isSet()) {
        obj.insert(QString("rerankConfig"), ::OpenAPI::toJsonValue(m_rerank_config));
    }
    return obj;
}

QList<OAIGoogleCloudRetailV2Interval> OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::getFacetIntervals() const {
    return m_facet_intervals;
}
void OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::setFacetIntervals(const QList<OAIGoogleCloudRetailV2Interval> &facet_intervals) {
    m_facet_intervals = facet_intervals;
    m_facet_intervals_isSet = true;
}

bool OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::is_facet_intervals_Set() const{
    return m_facet_intervals_isSet;
}

bool OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::is_facet_intervals_Valid() const{
    return m_facet_intervals_isValid;
}

QList<OAIGoogleCloudRetailV2CatalogAttributeFacetConfigIgnoredFacetValues> OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::getIgnoredFacetValues() const {
    return m_ignored_facet_values;
}
void OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::setIgnoredFacetValues(const QList<OAIGoogleCloudRetailV2CatalogAttributeFacetConfigIgnoredFacetValues> &ignored_facet_values) {
    m_ignored_facet_values = ignored_facet_values;
    m_ignored_facet_values_isSet = true;
}

bool OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::is_ignored_facet_values_Set() const{
    return m_ignored_facet_values_isSet;
}

bool OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::is_ignored_facet_values_Valid() const{
    return m_ignored_facet_values_isValid;
}

OAIGoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::getMergedFacet() const {
    return m_merged_facet;
}
void OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::setMergedFacet(const OAIGoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet &merged_facet) {
    m_merged_facet = merged_facet;
    m_merged_facet_isSet = true;
}

bool OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::is_merged_facet_Set() const{
    return m_merged_facet_isSet;
}

bool OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::is_merged_facet_Valid() const{
    return m_merged_facet_isValid;
}

QList<OAIGoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacetValue> OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::getMergedFacetValues() const {
    return m_merged_facet_values;
}
void OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::setMergedFacetValues(const QList<OAIGoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacetValue> &merged_facet_values) {
    m_merged_facet_values = merged_facet_values;
    m_merged_facet_values_isSet = true;
}

bool OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::is_merged_facet_values_Set() const{
    return m_merged_facet_values_isSet;
}

bool OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::is_merged_facet_values_Valid() const{
    return m_merged_facet_values_isValid;
}

OAIGoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::getRerankConfig() const {
    return m_rerank_config;
}
void OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::setRerankConfig(const OAIGoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig &rerank_config) {
    m_rerank_config = rerank_config;
    m_rerank_config_isSet = true;
}

bool OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::is_rerank_config_Set() const{
    return m_rerank_config_isSet;
}

bool OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::is_rerank_config_Valid() const{
    return m_rerank_config_isValid;
}

bool OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_facet_intervals.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_ignored_facet_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_merged_facet.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_merged_facet_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_rerank_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2CatalogAttributeFacetConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
