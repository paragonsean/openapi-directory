/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2RuleForceReturnFacetAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2RuleForceReturnFacetAction::OAIGoogleCloudRetailV2RuleForceReturnFacetAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2RuleForceReturnFacetAction::OAIGoogleCloudRetailV2RuleForceReturnFacetAction() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2RuleForceReturnFacetAction::~OAIGoogleCloudRetailV2RuleForceReturnFacetAction() {}

void OAIGoogleCloudRetailV2RuleForceReturnFacetAction::initializeModel() {

    m_facet_position_adjustments_isSet = false;
    m_facet_position_adjustments_isValid = false;
}

void OAIGoogleCloudRetailV2RuleForceReturnFacetAction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2RuleForceReturnFacetAction::fromJsonObject(QJsonObject json) {

    m_facet_position_adjustments_isValid = ::OpenAPI::fromJsonValue(m_facet_position_adjustments, json[QString("facetPositionAdjustments")]);
    m_facet_position_adjustments_isSet = !json[QString("facetPositionAdjustments")].isNull() && m_facet_position_adjustments_isValid;
}

QString OAIGoogleCloudRetailV2RuleForceReturnFacetAction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2RuleForceReturnFacetAction::asJsonObject() const {
    QJsonObject obj;
    if (m_facet_position_adjustments.size() > 0) {
        obj.insert(QString("facetPositionAdjustments"), ::OpenAPI::toJsonValue(m_facet_position_adjustments));
    }
    return obj;
}

QList<OAIGoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustment> OAIGoogleCloudRetailV2RuleForceReturnFacetAction::getFacetPositionAdjustments() const {
    return m_facet_position_adjustments;
}
void OAIGoogleCloudRetailV2RuleForceReturnFacetAction::setFacetPositionAdjustments(const QList<OAIGoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustment> &facet_position_adjustments) {
    m_facet_position_adjustments = facet_position_adjustments;
    m_facet_position_adjustments_isSet = true;
}

bool OAIGoogleCloudRetailV2RuleForceReturnFacetAction::is_facet_position_adjustments_Set() const{
    return m_facet_position_adjustments_isSet;
}

bool OAIGoogleCloudRetailV2RuleForceReturnFacetAction::is_facet_position_adjustments_Valid() const{
    return m_facet_position_adjustments_isValid;
}

bool OAIGoogleCloudRetailV2RuleForceReturnFacetAction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_facet_position_adjustments.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2RuleForceReturnFacetAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
