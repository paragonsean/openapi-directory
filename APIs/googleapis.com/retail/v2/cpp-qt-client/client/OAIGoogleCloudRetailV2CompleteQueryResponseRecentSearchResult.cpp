/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2CompleteQueryResponseRecentSearchResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2CompleteQueryResponseRecentSearchResult::OAIGoogleCloudRetailV2CompleteQueryResponseRecentSearchResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2CompleteQueryResponseRecentSearchResult::OAIGoogleCloudRetailV2CompleteQueryResponseRecentSearchResult() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2CompleteQueryResponseRecentSearchResult::~OAIGoogleCloudRetailV2CompleteQueryResponseRecentSearchResult() {}

void OAIGoogleCloudRetailV2CompleteQueryResponseRecentSearchResult::initializeModel() {

    m_recent_search_isSet = false;
    m_recent_search_isValid = false;
}

void OAIGoogleCloudRetailV2CompleteQueryResponseRecentSearchResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2CompleteQueryResponseRecentSearchResult::fromJsonObject(QJsonObject json) {

    m_recent_search_isValid = ::OpenAPI::fromJsonValue(m_recent_search, json[QString("recentSearch")]);
    m_recent_search_isSet = !json[QString("recentSearch")].isNull() && m_recent_search_isValid;
}

QString OAIGoogleCloudRetailV2CompleteQueryResponseRecentSearchResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2CompleteQueryResponseRecentSearchResult::asJsonObject() const {
    QJsonObject obj;
    if (m_recent_search_isSet) {
        obj.insert(QString("recentSearch"), ::OpenAPI::toJsonValue(m_recent_search));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2CompleteQueryResponseRecentSearchResult::getRecentSearch() const {
    return m_recent_search;
}
void OAIGoogleCloudRetailV2CompleteQueryResponseRecentSearchResult::setRecentSearch(const QString &recent_search) {
    m_recent_search = recent_search;
    m_recent_search_isSet = true;
}

bool OAIGoogleCloudRetailV2CompleteQueryResponseRecentSearchResult::is_recent_search_Set() const{
    return m_recent_search_isSet;
}

bool OAIGoogleCloudRetailV2CompleteQueryResponseRecentSearchResult::is_recent_search_Valid() const{
    return m_recent_search_isValid;
}

bool OAIGoogleCloudRetailV2CompleteQueryResponseRecentSearchResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_recent_search_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2CompleteQueryResponseRecentSearchResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
