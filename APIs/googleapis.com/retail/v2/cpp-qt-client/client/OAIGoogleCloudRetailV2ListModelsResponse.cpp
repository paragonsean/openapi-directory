/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2ListModelsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2ListModelsResponse::OAIGoogleCloudRetailV2ListModelsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2ListModelsResponse::OAIGoogleCloudRetailV2ListModelsResponse() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2ListModelsResponse::~OAIGoogleCloudRetailV2ListModelsResponse() {}

void OAIGoogleCloudRetailV2ListModelsResponse::initializeModel() {

    m_models_isSet = false;
    m_models_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;
}

void OAIGoogleCloudRetailV2ListModelsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2ListModelsResponse::fromJsonObject(QJsonObject json) {

    m_models_isValid = ::OpenAPI::fromJsonValue(m_models, json[QString("models")]);
    m_models_isSet = !json[QString("models")].isNull() && m_models_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;
}

QString OAIGoogleCloudRetailV2ListModelsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2ListModelsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_models.size() > 0) {
        obj.insert(QString("models"), ::OpenAPI::toJsonValue(m_models));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    return obj;
}

QList<OAIGoogleCloudRetailV2Model> OAIGoogleCloudRetailV2ListModelsResponse::getModels() const {
    return m_models;
}
void OAIGoogleCloudRetailV2ListModelsResponse::setModels(const QList<OAIGoogleCloudRetailV2Model> &models) {
    m_models = models;
    m_models_isSet = true;
}

bool OAIGoogleCloudRetailV2ListModelsResponse::is_models_Set() const{
    return m_models_isSet;
}

bool OAIGoogleCloudRetailV2ListModelsResponse::is_models_Valid() const{
    return m_models_isValid;
}

QString OAIGoogleCloudRetailV2ListModelsResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIGoogleCloudRetailV2ListModelsResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIGoogleCloudRetailV2ListModelsResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIGoogleCloudRetailV2ListModelsResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

bool OAIGoogleCloudRetailV2ListModelsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_models.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2ListModelsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
