/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailLoggingHttpRequestContext.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailLoggingHttpRequestContext::OAIGoogleCloudRetailLoggingHttpRequestContext(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailLoggingHttpRequestContext::OAIGoogleCloudRetailLoggingHttpRequestContext() {
    this->initializeModel();
}

OAIGoogleCloudRetailLoggingHttpRequestContext::~OAIGoogleCloudRetailLoggingHttpRequestContext() {}

void OAIGoogleCloudRetailLoggingHttpRequestContext::initializeModel() {

    m_response_status_code_isSet = false;
    m_response_status_code_isValid = false;
}

void OAIGoogleCloudRetailLoggingHttpRequestContext::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailLoggingHttpRequestContext::fromJsonObject(QJsonObject json) {

    m_response_status_code_isValid = ::OpenAPI::fromJsonValue(m_response_status_code, json[QString("responseStatusCode")]);
    m_response_status_code_isSet = !json[QString("responseStatusCode")].isNull() && m_response_status_code_isValid;
}

QString OAIGoogleCloudRetailLoggingHttpRequestContext::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailLoggingHttpRequestContext::asJsonObject() const {
    QJsonObject obj;
    if (m_response_status_code_isSet) {
        obj.insert(QString("responseStatusCode"), ::OpenAPI::toJsonValue(m_response_status_code));
    }
    return obj;
}

qint32 OAIGoogleCloudRetailLoggingHttpRequestContext::getResponseStatusCode() const {
    return m_response_status_code;
}
void OAIGoogleCloudRetailLoggingHttpRequestContext::setResponseStatusCode(const qint32 &response_status_code) {
    m_response_status_code = response_status_code;
    m_response_status_code_isSet = true;
}

bool OAIGoogleCloudRetailLoggingHttpRequestContext::is_response_status_code_Set() const{
    return m_response_status_code_isSet;
}

bool OAIGoogleCloudRetailLoggingHttpRequestContext::is_response_status_code_Valid() const{
    return m_response_status_code_isValid;
}

bool OAIGoogleCloudRetailLoggingHttpRequestContext::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_response_status_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailLoggingHttpRequestContext::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
