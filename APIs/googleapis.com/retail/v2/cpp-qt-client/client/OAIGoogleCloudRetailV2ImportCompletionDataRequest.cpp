/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2ImportCompletionDataRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2ImportCompletionDataRequest::OAIGoogleCloudRetailV2ImportCompletionDataRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2ImportCompletionDataRequest::OAIGoogleCloudRetailV2ImportCompletionDataRequest() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2ImportCompletionDataRequest::~OAIGoogleCloudRetailV2ImportCompletionDataRequest() {}

void OAIGoogleCloudRetailV2ImportCompletionDataRequest::initializeModel() {

    m_input_config_isSet = false;
    m_input_config_isValid = false;

    m_notification_pubsub_topic_isSet = false;
    m_notification_pubsub_topic_isValid = false;
}

void OAIGoogleCloudRetailV2ImportCompletionDataRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2ImportCompletionDataRequest::fromJsonObject(QJsonObject json) {

    m_input_config_isValid = ::OpenAPI::fromJsonValue(m_input_config, json[QString("inputConfig")]);
    m_input_config_isSet = !json[QString("inputConfig")].isNull() && m_input_config_isValid;

    m_notification_pubsub_topic_isValid = ::OpenAPI::fromJsonValue(m_notification_pubsub_topic, json[QString("notificationPubsubTopic")]);
    m_notification_pubsub_topic_isSet = !json[QString("notificationPubsubTopic")].isNull() && m_notification_pubsub_topic_isValid;
}

QString OAIGoogleCloudRetailV2ImportCompletionDataRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2ImportCompletionDataRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_input_config.isSet()) {
        obj.insert(QString("inputConfig"), ::OpenAPI::toJsonValue(m_input_config));
    }
    if (m_notification_pubsub_topic_isSet) {
        obj.insert(QString("notificationPubsubTopic"), ::OpenAPI::toJsonValue(m_notification_pubsub_topic));
    }
    return obj;
}

OAIGoogleCloudRetailV2CompletionDataInputConfig OAIGoogleCloudRetailV2ImportCompletionDataRequest::getInputConfig() const {
    return m_input_config;
}
void OAIGoogleCloudRetailV2ImportCompletionDataRequest::setInputConfig(const OAIGoogleCloudRetailV2CompletionDataInputConfig &input_config) {
    m_input_config = input_config;
    m_input_config_isSet = true;
}

bool OAIGoogleCloudRetailV2ImportCompletionDataRequest::is_input_config_Set() const{
    return m_input_config_isSet;
}

bool OAIGoogleCloudRetailV2ImportCompletionDataRequest::is_input_config_Valid() const{
    return m_input_config_isValid;
}

QString OAIGoogleCloudRetailV2ImportCompletionDataRequest::getNotificationPubsubTopic() const {
    return m_notification_pubsub_topic;
}
void OAIGoogleCloudRetailV2ImportCompletionDataRequest::setNotificationPubsubTopic(const QString &notification_pubsub_topic) {
    m_notification_pubsub_topic = notification_pubsub_topic;
    m_notification_pubsub_topic_isSet = true;
}

bool OAIGoogleCloudRetailV2ImportCompletionDataRequest::is_notification_pubsub_topic_Set() const{
    return m_notification_pubsub_topic_isSet;
}

bool OAIGoogleCloudRetailV2ImportCompletionDataRequest::is_notification_pubsub_topic_Valid() const{
    return m_notification_pubsub_topic_isValid;
}

bool OAIGoogleCloudRetailV2ImportCompletionDataRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_input_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_notification_pubsub_topic_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2ImportCompletionDataRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
