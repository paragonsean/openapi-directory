/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2betaImportErrorsConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2betaImportErrorsConfig::OAIGoogleCloudRetailV2betaImportErrorsConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2betaImportErrorsConfig::OAIGoogleCloudRetailV2betaImportErrorsConfig() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2betaImportErrorsConfig::~OAIGoogleCloudRetailV2betaImportErrorsConfig() {}

void OAIGoogleCloudRetailV2betaImportErrorsConfig::initializeModel() {

    m_gcs_prefix_isSet = false;
    m_gcs_prefix_isValid = false;
}

void OAIGoogleCloudRetailV2betaImportErrorsConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2betaImportErrorsConfig::fromJsonObject(QJsonObject json) {

    m_gcs_prefix_isValid = ::OpenAPI::fromJsonValue(m_gcs_prefix, json[QString("gcsPrefix")]);
    m_gcs_prefix_isSet = !json[QString("gcsPrefix")].isNull() && m_gcs_prefix_isValid;
}

QString OAIGoogleCloudRetailV2betaImportErrorsConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2betaImportErrorsConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_gcs_prefix_isSet) {
        obj.insert(QString("gcsPrefix"), ::OpenAPI::toJsonValue(m_gcs_prefix));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2betaImportErrorsConfig::getGcsPrefix() const {
    return m_gcs_prefix;
}
void OAIGoogleCloudRetailV2betaImportErrorsConfig::setGcsPrefix(const QString &gcs_prefix) {
    m_gcs_prefix = gcs_prefix;
    m_gcs_prefix_isSet = true;
}

bool OAIGoogleCloudRetailV2betaImportErrorsConfig::is_gcs_prefix_Set() const{
    return m_gcs_prefix_isSet;
}

bool OAIGoogleCloudRetailV2betaImportErrorsConfig::is_gcs_prefix_Valid() const{
    return m_gcs_prefix_isValid;
}

bool OAIGoogleCloudRetailV2betaImportErrorsConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_gcs_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2betaImportErrorsConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
