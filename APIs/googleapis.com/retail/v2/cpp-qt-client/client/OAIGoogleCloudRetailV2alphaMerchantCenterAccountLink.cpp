/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::~OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink() {}

void OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::initializeModel() {

    m_branch_id_isSet = false;
    m_branch_id_isValid = false;

    m_feed_filters_isSet = false;
    m_feed_filters_isValid = false;

    m_feed_label_isSet = false;
    m_feed_label_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_language_code_isSet = false;
    m_language_code_isValid = false;

    m_merchant_center_account_id_isSet = false;
    m_merchant_center_account_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_project_id_isSet = false;
    m_project_id_isValid = false;

    m_source_isSet = false;
    m_source_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::fromJsonObject(QJsonObject json) {

    m_branch_id_isValid = ::OpenAPI::fromJsonValue(m_branch_id, json[QString("branchId")]);
    m_branch_id_isSet = !json[QString("branchId")].isNull() && m_branch_id_isValid;

    m_feed_filters_isValid = ::OpenAPI::fromJsonValue(m_feed_filters, json[QString("feedFilters")]);
    m_feed_filters_isSet = !json[QString("feedFilters")].isNull() && m_feed_filters_isValid;

    m_feed_label_isValid = ::OpenAPI::fromJsonValue(m_feed_label, json[QString("feedLabel")]);
    m_feed_label_isSet = !json[QString("feedLabel")].isNull() && m_feed_label_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_language_code_isValid = ::OpenAPI::fromJsonValue(m_language_code, json[QString("languageCode")]);
    m_language_code_isSet = !json[QString("languageCode")].isNull() && m_language_code_isValid;

    m_merchant_center_account_id_isValid = ::OpenAPI::fromJsonValue(m_merchant_center_account_id, json[QString("merchantCenterAccountId")]);
    m_merchant_center_account_id_isSet = !json[QString("merchantCenterAccountId")].isNull() && m_merchant_center_account_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_project_id_isValid = ::OpenAPI::fromJsonValue(m_project_id, json[QString("projectId")]);
    m_project_id_isSet = !json[QString("projectId")].isNull() && m_project_id_isValid;

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("source")]);
    m_source_isSet = !json[QString("source")].isNull() && m_source_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::asJsonObject() const {
    QJsonObject obj;
    if (m_branch_id_isSet) {
        obj.insert(QString("branchId"), ::OpenAPI::toJsonValue(m_branch_id));
    }
    if (m_feed_filters.size() > 0) {
        obj.insert(QString("feedFilters"), ::OpenAPI::toJsonValue(m_feed_filters));
    }
    if (m_feed_label_isSet) {
        obj.insert(QString("feedLabel"), ::OpenAPI::toJsonValue(m_feed_label));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_language_code_isSet) {
        obj.insert(QString("languageCode"), ::OpenAPI::toJsonValue(m_language_code));
    }
    if (m_merchant_center_account_id_isSet) {
        obj.insert(QString("merchantCenterAccountId"), ::OpenAPI::toJsonValue(m_merchant_center_account_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_project_id_isSet) {
        obj.insert(QString("projectId"), ::OpenAPI::toJsonValue(m_project_id));
    }
    if (m_source_isSet) {
        obj.insert(QString("source"), ::OpenAPI::toJsonValue(m_source));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::getBranchId() const {
    return m_branch_id;
}
void OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::setBranchId(const QString &branch_id) {
    m_branch_id = branch_id;
    m_branch_id_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::is_branch_id_Set() const{
    return m_branch_id_isSet;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::is_branch_id_Valid() const{
    return m_branch_id_isValid;
}

QList<OAIGoogleCloudRetailV2alphaMerchantCenterAccountLinkMerchantCenterFeedFilter> OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::getFeedFilters() const {
    return m_feed_filters;
}
void OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::setFeedFilters(const QList<OAIGoogleCloudRetailV2alphaMerchantCenterAccountLinkMerchantCenterFeedFilter> &feed_filters) {
    m_feed_filters = feed_filters;
    m_feed_filters_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::is_feed_filters_Set() const{
    return m_feed_filters_isSet;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::is_feed_filters_Valid() const{
    return m_feed_filters_isValid;
}

QString OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::getFeedLabel() const {
    return m_feed_label;
}
void OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::setFeedLabel(const QString &feed_label) {
    m_feed_label = feed_label;
    m_feed_label_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::is_feed_label_Set() const{
    return m_feed_label_isSet;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::is_feed_label_Valid() const{
    return m_feed_label_isValid;
}

QString OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::getId() const {
    return m_id;
}
void OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::getLanguageCode() const {
    return m_language_code;
}
void OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::setLanguageCode(const QString &language_code) {
    m_language_code = language_code;
    m_language_code_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::is_language_code_Set() const{
    return m_language_code_isSet;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::is_language_code_Valid() const{
    return m_language_code_isValid;
}

QString OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::getMerchantCenterAccountId() const {
    return m_merchant_center_account_id;
}
void OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::setMerchantCenterAccountId(const QString &merchant_center_account_id) {
    m_merchant_center_account_id = merchant_center_account_id;
    m_merchant_center_account_id_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::is_merchant_center_account_id_Set() const{
    return m_merchant_center_account_id_isSet;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::is_merchant_center_account_id_Valid() const{
    return m_merchant_center_account_id_isValid;
}

QString OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::getName() const {
    return m_name;
}
void OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::getProjectId() const {
    return m_project_id;
}
void OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::setProjectId(const QString &project_id) {
    m_project_id = project_id;
    m_project_id_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::is_project_id_Set() const{
    return m_project_id_isSet;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::is_project_id_Valid() const{
    return m_project_id_isValid;
}

QString OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::getSource() const {
    return m_source;
}
void OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::setSource(const QString &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::is_source_Set() const{
    return m_source_isSet;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::is_source_Valid() const{
    return m_source_isValid;
}

QString OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::getState() const {
    return m_state;
}
void OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_branch_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_feed_filters.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_feed_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_center_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2alphaMerchantCenterAccountLink::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
