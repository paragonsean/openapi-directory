/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2GcsOutputResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2GcsOutputResult::OAIGoogleCloudRetailV2GcsOutputResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2GcsOutputResult::OAIGoogleCloudRetailV2GcsOutputResult() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2GcsOutputResult::~OAIGoogleCloudRetailV2GcsOutputResult() {}

void OAIGoogleCloudRetailV2GcsOutputResult::initializeModel() {

    m_output_uri_isSet = false;
    m_output_uri_isValid = false;
}

void OAIGoogleCloudRetailV2GcsOutputResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2GcsOutputResult::fromJsonObject(QJsonObject json) {

    m_output_uri_isValid = ::OpenAPI::fromJsonValue(m_output_uri, json[QString("outputUri")]);
    m_output_uri_isSet = !json[QString("outputUri")].isNull() && m_output_uri_isValid;
}

QString OAIGoogleCloudRetailV2GcsOutputResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2GcsOutputResult::asJsonObject() const {
    QJsonObject obj;
    if (m_output_uri_isSet) {
        obj.insert(QString("outputUri"), ::OpenAPI::toJsonValue(m_output_uri));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2GcsOutputResult::getOutputUri() const {
    return m_output_uri;
}
void OAIGoogleCloudRetailV2GcsOutputResult::setOutputUri(const QString &output_uri) {
    m_output_uri = output_uri;
    m_output_uri_isSet = true;
}

bool OAIGoogleCloudRetailV2GcsOutputResult::is_output_uri_Set() const{
    return m_output_uri_isSet;
}

bool OAIGoogleCloudRetailV2GcsOutputResult::is_output_uri_Valid() const{
    return m_output_uri_isValid;
}

bool OAIGoogleCloudRetailV2GcsOutputResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_output_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2GcsOutputResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
