/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2SearchRequestBoostSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2SearchRequestBoostSpec::OAIGoogleCloudRetailV2SearchRequestBoostSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2SearchRequestBoostSpec::OAIGoogleCloudRetailV2SearchRequestBoostSpec() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2SearchRequestBoostSpec::~OAIGoogleCloudRetailV2SearchRequestBoostSpec() {}

void OAIGoogleCloudRetailV2SearchRequestBoostSpec::initializeModel() {

    m_condition_boost_specs_isSet = false;
    m_condition_boost_specs_isValid = false;

    m_skip_boost_spec_validation_isSet = false;
    m_skip_boost_spec_validation_isValid = false;
}

void OAIGoogleCloudRetailV2SearchRequestBoostSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2SearchRequestBoostSpec::fromJsonObject(QJsonObject json) {

    m_condition_boost_specs_isValid = ::OpenAPI::fromJsonValue(m_condition_boost_specs, json[QString("conditionBoostSpecs")]);
    m_condition_boost_specs_isSet = !json[QString("conditionBoostSpecs")].isNull() && m_condition_boost_specs_isValid;

    m_skip_boost_spec_validation_isValid = ::OpenAPI::fromJsonValue(m_skip_boost_spec_validation, json[QString("skipBoostSpecValidation")]);
    m_skip_boost_spec_validation_isSet = !json[QString("skipBoostSpecValidation")].isNull() && m_skip_boost_spec_validation_isValid;
}

QString OAIGoogleCloudRetailV2SearchRequestBoostSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2SearchRequestBoostSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_condition_boost_specs.size() > 0) {
        obj.insert(QString("conditionBoostSpecs"), ::OpenAPI::toJsonValue(m_condition_boost_specs));
    }
    if (m_skip_boost_spec_validation_isSet) {
        obj.insert(QString("skipBoostSpecValidation"), ::OpenAPI::toJsonValue(m_skip_boost_spec_validation));
    }
    return obj;
}

QList<OAIGoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec> OAIGoogleCloudRetailV2SearchRequestBoostSpec::getConditionBoostSpecs() const {
    return m_condition_boost_specs;
}
void OAIGoogleCloudRetailV2SearchRequestBoostSpec::setConditionBoostSpecs(const QList<OAIGoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec> &condition_boost_specs) {
    m_condition_boost_specs = condition_boost_specs;
    m_condition_boost_specs_isSet = true;
}

bool OAIGoogleCloudRetailV2SearchRequestBoostSpec::is_condition_boost_specs_Set() const{
    return m_condition_boost_specs_isSet;
}

bool OAIGoogleCloudRetailV2SearchRequestBoostSpec::is_condition_boost_specs_Valid() const{
    return m_condition_boost_specs_isValid;
}

bool OAIGoogleCloudRetailV2SearchRequestBoostSpec::isSkipBoostSpecValidation() const {
    return m_skip_boost_spec_validation;
}
void OAIGoogleCloudRetailV2SearchRequestBoostSpec::setSkipBoostSpecValidation(const bool &skip_boost_spec_validation) {
    m_skip_boost_spec_validation = skip_boost_spec_validation;
    m_skip_boost_spec_validation_isSet = true;
}

bool OAIGoogleCloudRetailV2SearchRequestBoostSpec::is_skip_boost_spec_validation_Set() const{
    return m_skip_boost_spec_validation_isSet;
}

bool OAIGoogleCloudRetailV2SearchRequestBoostSpec::is_skip_boost_spec_validation_Valid() const{
    return m_skip_boost_spec_validation_isValid;
}

bool OAIGoogleCloudRetailV2SearchRequestBoostSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_condition_boost_specs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_skip_boost_spec_validation_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2SearchRequestBoostSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
