/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2CompleteQueryResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2CompleteQueryResponse::OAIGoogleCloudRetailV2CompleteQueryResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2CompleteQueryResponse::OAIGoogleCloudRetailV2CompleteQueryResponse() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2CompleteQueryResponse::~OAIGoogleCloudRetailV2CompleteQueryResponse() {}

void OAIGoogleCloudRetailV2CompleteQueryResponse::initializeModel() {

    m_attribution_token_isSet = false;
    m_attribution_token_isValid = false;

    m_completion_results_isSet = false;
    m_completion_results_isValid = false;

    m_recent_search_results_isSet = false;
    m_recent_search_results_isValid = false;
}

void OAIGoogleCloudRetailV2CompleteQueryResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2CompleteQueryResponse::fromJsonObject(QJsonObject json) {

    m_attribution_token_isValid = ::OpenAPI::fromJsonValue(m_attribution_token, json[QString("attributionToken")]);
    m_attribution_token_isSet = !json[QString("attributionToken")].isNull() && m_attribution_token_isValid;

    m_completion_results_isValid = ::OpenAPI::fromJsonValue(m_completion_results, json[QString("completionResults")]);
    m_completion_results_isSet = !json[QString("completionResults")].isNull() && m_completion_results_isValid;

    m_recent_search_results_isValid = ::OpenAPI::fromJsonValue(m_recent_search_results, json[QString("recentSearchResults")]);
    m_recent_search_results_isSet = !json[QString("recentSearchResults")].isNull() && m_recent_search_results_isValid;
}

QString OAIGoogleCloudRetailV2CompleteQueryResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2CompleteQueryResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_attribution_token_isSet) {
        obj.insert(QString("attributionToken"), ::OpenAPI::toJsonValue(m_attribution_token));
    }
    if (m_completion_results.size() > 0) {
        obj.insert(QString("completionResults"), ::OpenAPI::toJsonValue(m_completion_results));
    }
    if (m_recent_search_results.size() > 0) {
        obj.insert(QString("recentSearchResults"), ::OpenAPI::toJsonValue(m_recent_search_results));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2CompleteQueryResponse::getAttributionToken() const {
    return m_attribution_token;
}
void OAIGoogleCloudRetailV2CompleteQueryResponse::setAttributionToken(const QString &attribution_token) {
    m_attribution_token = attribution_token;
    m_attribution_token_isSet = true;
}

bool OAIGoogleCloudRetailV2CompleteQueryResponse::is_attribution_token_Set() const{
    return m_attribution_token_isSet;
}

bool OAIGoogleCloudRetailV2CompleteQueryResponse::is_attribution_token_Valid() const{
    return m_attribution_token_isValid;
}

QList<OAIGoogleCloudRetailV2CompleteQueryResponseCompletionResult> OAIGoogleCloudRetailV2CompleteQueryResponse::getCompletionResults() const {
    return m_completion_results;
}
void OAIGoogleCloudRetailV2CompleteQueryResponse::setCompletionResults(const QList<OAIGoogleCloudRetailV2CompleteQueryResponseCompletionResult> &completion_results) {
    m_completion_results = completion_results;
    m_completion_results_isSet = true;
}

bool OAIGoogleCloudRetailV2CompleteQueryResponse::is_completion_results_Set() const{
    return m_completion_results_isSet;
}

bool OAIGoogleCloudRetailV2CompleteQueryResponse::is_completion_results_Valid() const{
    return m_completion_results_isValid;
}

QList<OAIGoogleCloudRetailV2CompleteQueryResponseRecentSearchResult> OAIGoogleCloudRetailV2CompleteQueryResponse::getRecentSearchResults() const {
    return m_recent_search_results;
}
void OAIGoogleCloudRetailV2CompleteQueryResponse::setRecentSearchResults(const QList<OAIGoogleCloudRetailV2CompleteQueryResponseRecentSearchResult> &recent_search_results) {
    m_recent_search_results = recent_search_results;
    m_recent_search_results_isSet = true;
}

bool OAIGoogleCloudRetailV2CompleteQueryResponse::is_recent_search_results_Set() const{
    return m_recent_search_results_isSet;
}

bool OAIGoogleCloudRetailV2CompleteQueryResponse::is_recent_search_results_Valid() const{
    return m_recent_search_results_isValid;
}

bool OAIGoogleCloudRetailV2CompleteQueryResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribution_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_completion_results.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_recent_search_results.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2CompleteQueryResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
