/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2RuleFilterAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2RuleFilterAction::OAIGoogleCloudRetailV2RuleFilterAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2RuleFilterAction::OAIGoogleCloudRetailV2RuleFilterAction() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2RuleFilterAction::~OAIGoogleCloudRetailV2RuleFilterAction() {}

void OAIGoogleCloudRetailV2RuleFilterAction::initializeModel() {

    m_filter_isSet = false;
    m_filter_isValid = false;
}

void OAIGoogleCloudRetailV2RuleFilterAction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2RuleFilterAction::fromJsonObject(QJsonObject json) {

    m_filter_isValid = ::OpenAPI::fromJsonValue(m_filter, json[QString("filter")]);
    m_filter_isSet = !json[QString("filter")].isNull() && m_filter_isValid;
}

QString OAIGoogleCloudRetailV2RuleFilterAction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2RuleFilterAction::asJsonObject() const {
    QJsonObject obj;
    if (m_filter_isSet) {
        obj.insert(QString("filter"), ::OpenAPI::toJsonValue(m_filter));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2RuleFilterAction::getFilter() const {
    return m_filter;
}
void OAIGoogleCloudRetailV2RuleFilterAction::setFilter(const QString &filter) {
    m_filter = filter;
    m_filter_isSet = true;
}

bool OAIGoogleCloudRetailV2RuleFilterAction::is_filter_Set() const{
    return m_filter_isSet;
}

bool OAIGoogleCloudRetailV2RuleFilterAction::is_filter_Valid() const{
    return m_filter_isValid;
}

bool OAIGoogleCloudRetailV2RuleFilterAction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_filter_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2RuleFilterAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
