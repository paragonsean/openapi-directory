/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudRetailV2ImportErrorsConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudRetailV2ImportErrorsConfig::OAIGoogleCloudRetailV2ImportErrorsConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudRetailV2ImportErrorsConfig::OAIGoogleCloudRetailV2ImportErrorsConfig() {
    this->initializeModel();
}

OAIGoogleCloudRetailV2ImportErrorsConfig::~OAIGoogleCloudRetailV2ImportErrorsConfig() {}

void OAIGoogleCloudRetailV2ImportErrorsConfig::initializeModel() {

    m_gcs_prefix_isSet = false;
    m_gcs_prefix_isValid = false;
}

void OAIGoogleCloudRetailV2ImportErrorsConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudRetailV2ImportErrorsConfig::fromJsonObject(QJsonObject json) {

    m_gcs_prefix_isValid = ::OpenAPI::fromJsonValue(m_gcs_prefix, json[QString("gcsPrefix")]);
    m_gcs_prefix_isSet = !json[QString("gcsPrefix")].isNull() && m_gcs_prefix_isValid;
}

QString OAIGoogleCloudRetailV2ImportErrorsConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudRetailV2ImportErrorsConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_gcs_prefix_isSet) {
        obj.insert(QString("gcsPrefix"), ::OpenAPI::toJsonValue(m_gcs_prefix));
    }
    return obj;
}

QString OAIGoogleCloudRetailV2ImportErrorsConfig::getGcsPrefix() const {
    return m_gcs_prefix;
}
void OAIGoogleCloudRetailV2ImportErrorsConfig::setGcsPrefix(const QString &gcs_prefix) {
    m_gcs_prefix = gcs_prefix;
    m_gcs_prefix_isSet = true;
}

bool OAIGoogleCloudRetailV2ImportErrorsConfig::is_gcs_prefix_Set() const{
    return m_gcs_prefix_isSet;
}

bool OAIGoogleCloudRetailV2ImportErrorsConfig::is_gcs_prefix_Valid() const{
    return m_gcs_prefix_isValid;
}

bool OAIGoogleCloudRetailV2ImportErrorsConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_gcs_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudRetailV2ImportErrorsConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
