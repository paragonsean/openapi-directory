# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_retail_v2_experiment_info import GoogleCloudRetailV2ExperimentInfo
from openapi_server.models.google_cloud_retail_v2_search_request_boost_spec_condition_boost_spec import GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec
from openapi_server.models.google_cloud_retail_v2_search_response_facet import GoogleCloudRetailV2SearchResponseFacet
from openapi_server.models.google_cloud_retail_v2_search_response_query_expansion_info import GoogleCloudRetailV2SearchResponseQueryExpansionInfo
from openapi_server.models.google_cloud_retail_v2_search_response_search_result import GoogleCloudRetailV2SearchResponseSearchResult
from openapi_server import util


class GoogleCloudRetailV2SearchResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, applied_controls: List[str]=None, attribution_token: str=None, corrected_query: str=None, experiment_info: List[GoogleCloudRetailV2ExperimentInfo]=None, facets: List[GoogleCloudRetailV2SearchResponseFacet]=None, invalid_condition_boost_specs: List[GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec]=None, next_page_token: str=None, query_expansion_info: GoogleCloudRetailV2SearchResponseQueryExpansionInfo=None, redirect_uri: str=None, results: List[GoogleCloudRetailV2SearchResponseSearchResult]=None, total_size: int=None):
        """GoogleCloudRetailV2SearchResponse - a model defined in OpenAPI

        :param applied_controls: The applied_controls of this GoogleCloudRetailV2SearchResponse.
        :param attribution_token: The attribution_token of this GoogleCloudRetailV2SearchResponse.
        :param corrected_query: The corrected_query of this GoogleCloudRetailV2SearchResponse.
        :param experiment_info: The experiment_info of this GoogleCloudRetailV2SearchResponse.
        :param facets: The facets of this GoogleCloudRetailV2SearchResponse.
        :param invalid_condition_boost_specs: The invalid_condition_boost_specs of this GoogleCloudRetailV2SearchResponse.
        :param next_page_token: The next_page_token of this GoogleCloudRetailV2SearchResponse.
        :param query_expansion_info: The query_expansion_info of this GoogleCloudRetailV2SearchResponse.
        :param redirect_uri: The redirect_uri of this GoogleCloudRetailV2SearchResponse.
        :param results: The results of this GoogleCloudRetailV2SearchResponse.
        :param total_size: The total_size of this GoogleCloudRetailV2SearchResponse.
        """
        self.openapi_types = {
            'applied_controls': List[str],
            'attribution_token': str,
            'corrected_query': str,
            'experiment_info': List[GoogleCloudRetailV2ExperimentInfo],
            'facets': List[GoogleCloudRetailV2SearchResponseFacet],
            'invalid_condition_boost_specs': List[GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec],
            'next_page_token': str,
            'query_expansion_info': GoogleCloudRetailV2SearchResponseQueryExpansionInfo,
            'redirect_uri': str,
            'results': List[GoogleCloudRetailV2SearchResponseSearchResult],
            'total_size': int
        }

        self.attribute_map = {
            'applied_controls': 'appliedControls',
            'attribution_token': 'attributionToken',
            'corrected_query': 'correctedQuery',
            'experiment_info': 'experimentInfo',
            'facets': 'facets',
            'invalid_condition_boost_specs': 'invalidConditionBoostSpecs',
            'next_page_token': 'nextPageToken',
            'query_expansion_info': 'queryExpansionInfo',
            'redirect_uri': 'redirectUri',
            'results': 'results',
            'total_size': 'totalSize'
        }

        self._applied_controls = applied_controls
        self._attribution_token = attribution_token
        self._corrected_query = corrected_query
        self._experiment_info = experiment_info
        self._facets = facets
        self._invalid_condition_boost_specs = invalid_condition_boost_specs
        self._next_page_token = next_page_token
        self._query_expansion_info = query_expansion_info
        self._redirect_uri = redirect_uri
        self._results = results
        self._total_size = total_size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRetailV2SearchResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRetailV2SearchResponse of this GoogleCloudRetailV2SearchResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def applied_controls(self):
        """Gets the applied_controls of this GoogleCloudRetailV2SearchResponse.

        The fully qualified resource name of applied [controls](https://cloud.google.com/retail/docs/serving-control-rules).

        :return: The applied_controls of this GoogleCloudRetailV2SearchResponse.
        :rtype: List[str]
        """
        return self._applied_controls

    @applied_controls.setter
    def applied_controls(self, applied_controls):
        """Sets the applied_controls of this GoogleCloudRetailV2SearchResponse.

        The fully qualified resource name of applied [controls](https://cloud.google.com/retail/docs/serving-control-rules).

        :param applied_controls: The applied_controls of this GoogleCloudRetailV2SearchResponse.
        :type applied_controls: List[str]
        """

        self._applied_controls = applied_controls

    @property
    def attribution_token(self):
        """Gets the attribution_token of this GoogleCloudRetailV2SearchResponse.

        A unique search token. This should be included in the UserEvent logs resulting from this search, which enables accurate attribution of search model performance.

        :return: The attribution_token of this GoogleCloudRetailV2SearchResponse.
        :rtype: str
        """
        return self._attribution_token

    @attribution_token.setter
    def attribution_token(self, attribution_token):
        """Sets the attribution_token of this GoogleCloudRetailV2SearchResponse.

        A unique search token. This should be included in the UserEvent logs resulting from this search, which enables accurate attribution of search model performance.

        :param attribution_token: The attribution_token of this GoogleCloudRetailV2SearchResponse.
        :type attribution_token: str
        """

        self._attribution_token = attribution_token

    @property
    def corrected_query(self):
        """Gets the corrected_query of this GoogleCloudRetailV2SearchResponse.

        Contains the spell corrected query, if found. If the spell correction type is AUTOMATIC, then the search results are based on corrected_query. Otherwise the original query is used for search.

        :return: The corrected_query of this GoogleCloudRetailV2SearchResponse.
        :rtype: str
        """
        return self._corrected_query

    @corrected_query.setter
    def corrected_query(self, corrected_query):
        """Sets the corrected_query of this GoogleCloudRetailV2SearchResponse.

        Contains the spell corrected query, if found. If the spell correction type is AUTOMATIC, then the search results are based on corrected_query. Otherwise the original query is used for search.

        :param corrected_query: The corrected_query of this GoogleCloudRetailV2SearchResponse.
        :type corrected_query: str
        """

        self._corrected_query = corrected_query

    @property
    def experiment_info(self):
        """Gets the experiment_info of this GoogleCloudRetailV2SearchResponse.

        Metadata related to A/B testing Experiment associated with this response. Only exists when an experiment is triggered.

        :return: The experiment_info of this GoogleCloudRetailV2SearchResponse.
        :rtype: List[GoogleCloudRetailV2ExperimentInfo]
        """
        return self._experiment_info

    @experiment_info.setter
    def experiment_info(self, experiment_info):
        """Sets the experiment_info of this GoogleCloudRetailV2SearchResponse.

        Metadata related to A/B testing Experiment associated with this response. Only exists when an experiment is triggered.

        :param experiment_info: The experiment_info of this GoogleCloudRetailV2SearchResponse.
        :type experiment_info: List[GoogleCloudRetailV2ExperimentInfo]
        """

        self._experiment_info = experiment_info

    @property
    def facets(self):
        """Gets the facets of this GoogleCloudRetailV2SearchResponse.

        Results of facets requested by user.

        :return: The facets of this GoogleCloudRetailV2SearchResponse.
        :rtype: List[GoogleCloudRetailV2SearchResponseFacet]
        """
        return self._facets

    @facets.setter
    def facets(self, facets):
        """Sets the facets of this GoogleCloudRetailV2SearchResponse.

        Results of facets requested by user.

        :param facets: The facets of this GoogleCloudRetailV2SearchResponse.
        :type facets: List[GoogleCloudRetailV2SearchResponseFacet]
        """

        self._facets = facets

    @property
    def invalid_condition_boost_specs(self):
        """Gets the invalid_condition_boost_specs of this GoogleCloudRetailV2SearchResponse.

        The invalid SearchRequest.BoostSpec.condition_boost_specs that are not applied during serving.

        :return: The invalid_condition_boost_specs of this GoogleCloudRetailV2SearchResponse.
        :rtype: List[GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec]
        """
        return self._invalid_condition_boost_specs

    @invalid_condition_boost_specs.setter
    def invalid_condition_boost_specs(self, invalid_condition_boost_specs):
        """Sets the invalid_condition_boost_specs of this GoogleCloudRetailV2SearchResponse.

        The invalid SearchRequest.BoostSpec.condition_boost_specs that are not applied during serving.

        :param invalid_condition_boost_specs: The invalid_condition_boost_specs of this GoogleCloudRetailV2SearchResponse.
        :type invalid_condition_boost_specs: List[GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec]
        """

        self._invalid_condition_boost_specs = invalid_condition_boost_specs

    @property
    def next_page_token(self):
        """Gets the next_page_token of this GoogleCloudRetailV2SearchResponse.

        A token that can be sent as SearchRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.

        :return: The next_page_token of this GoogleCloudRetailV2SearchResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this GoogleCloudRetailV2SearchResponse.

        A token that can be sent as SearchRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.

        :param next_page_token: The next_page_token of this GoogleCloudRetailV2SearchResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def query_expansion_info(self):
        """Gets the query_expansion_info of this GoogleCloudRetailV2SearchResponse.


        :return: The query_expansion_info of this GoogleCloudRetailV2SearchResponse.
        :rtype: GoogleCloudRetailV2SearchResponseQueryExpansionInfo
        """
        return self._query_expansion_info

    @query_expansion_info.setter
    def query_expansion_info(self, query_expansion_info):
        """Sets the query_expansion_info of this GoogleCloudRetailV2SearchResponse.


        :param query_expansion_info: The query_expansion_info of this GoogleCloudRetailV2SearchResponse.
        :type query_expansion_info: GoogleCloudRetailV2SearchResponseQueryExpansionInfo
        """

        self._query_expansion_info = query_expansion_info

    @property
    def redirect_uri(self):
        """Gets the redirect_uri of this GoogleCloudRetailV2SearchResponse.

        The URI of a customer-defined redirect page. If redirect action is triggered, no search is performed, and only redirect_uri and attribution_token are set in the response.

        :return: The redirect_uri of this GoogleCloudRetailV2SearchResponse.
        :rtype: str
        """
        return self._redirect_uri

    @redirect_uri.setter
    def redirect_uri(self, redirect_uri):
        """Sets the redirect_uri of this GoogleCloudRetailV2SearchResponse.

        The URI of a customer-defined redirect page. If redirect action is triggered, no search is performed, and only redirect_uri and attribution_token are set in the response.

        :param redirect_uri: The redirect_uri of this GoogleCloudRetailV2SearchResponse.
        :type redirect_uri: str
        """

        self._redirect_uri = redirect_uri

    @property
    def results(self):
        """Gets the results of this GoogleCloudRetailV2SearchResponse.

        A list of matched items. The order represents the ranking.

        :return: The results of this GoogleCloudRetailV2SearchResponse.
        :rtype: List[GoogleCloudRetailV2SearchResponseSearchResult]
        """
        return self._results

    @results.setter
    def results(self, results):
        """Sets the results of this GoogleCloudRetailV2SearchResponse.

        A list of matched items. The order represents the ranking.

        :param results: The results of this GoogleCloudRetailV2SearchResponse.
        :type results: List[GoogleCloudRetailV2SearchResponseSearchResult]
        """

        self._results = results

    @property
    def total_size(self):
        """Gets the total_size of this GoogleCloudRetailV2SearchResponse.

        The estimated total count of matched items irrespective of pagination. The count of results returned by pagination may be less than the total_size that matches.

        :return: The total_size of this GoogleCloudRetailV2SearchResponse.
        :rtype: int
        """
        return self._total_size

    @total_size.setter
    def total_size(self, total_size):
        """Sets the total_size of this GoogleCloudRetailV2SearchResponse.

        The estimated total count of matched items irrespective of pagination. The count of results returned by pagination may be less than the total_size that matches.

        :param total_size: The total_size of this GoogleCloudRetailV2SearchResponse.
        :type total_size: int
        """

        self._total_size = total_size
