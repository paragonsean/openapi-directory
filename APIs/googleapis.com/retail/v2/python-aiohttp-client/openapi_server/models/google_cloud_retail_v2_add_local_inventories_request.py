# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_retail_v2_local_inventory import GoogleCloudRetailV2LocalInventory
from openapi_server import util


class GoogleCloudRetailV2AddLocalInventoriesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, add_mask: str=None, add_time: str=None, allow_missing: bool=None, local_inventories: List[GoogleCloudRetailV2LocalInventory]=None):
        """GoogleCloudRetailV2AddLocalInventoriesRequest - a model defined in OpenAPI

        :param add_mask: The add_mask of this GoogleCloudRetailV2AddLocalInventoriesRequest.
        :param add_time: The add_time of this GoogleCloudRetailV2AddLocalInventoriesRequest.
        :param allow_missing: The allow_missing of this GoogleCloudRetailV2AddLocalInventoriesRequest.
        :param local_inventories: The local_inventories of this GoogleCloudRetailV2AddLocalInventoriesRequest.
        """
        self.openapi_types = {
            'add_mask': str,
            'add_time': str,
            'allow_missing': bool,
            'local_inventories': List[GoogleCloudRetailV2LocalInventory]
        }

        self.attribute_map = {
            'add_mask': 'addMask',
            'add_time': 'addTime',
            'allow_missing': 'allowMissing',
            'local_inventories': 'localInventories'
        }

        self._add_mask = add_mask
        self._add_time = add_time
        self._allow_missing = allow_missing
        self._local_inventories = local_inventories

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRetailV2AddLocalInventoriesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRetailV2AddLocalInventoriesRequest of this GoogleCloudRetailV2AddLocalInventoriesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def add_mask(self):
        """Gets the add_mask of this GoogleCloudRetailV2AddLocalInventoriesRequest.

        Indicates which inventory fields in the provided list of LocalInventory to update. The field is updated to the provided value. If a field is set while the place does not have a previous local inventory, the local inventory at that store is created. If a field is set while the value of that field is not provided, the original field value, if it exists, is deleted. If the mask is not set or set with empty paths, all inventory fields will be updated. If an unsupported or unknown field is provided, an INVALID_ARGUMENT error is returned and the entire update will be ignored.

        :return: The add_mask of this GoogleCloudRetailV2AddLocalInventoriesRequest.
        :rtype: str
        """
        return self._add_mask

    @add_mask.setter
    def add_mask(self, add_mask):
        """Sets the add_mask of this GoogleCloudRetailV2AddLocalInventoriesRequest.

        Indicates which inventory fields in the provided list of LocalInventory to update. The field is updated to the provided value. If a field is set while the place does not have a previous local inventory, the local inventory at that store is created. If a field is set while the value of that field is not provided, the original field value, if it exists, is deleted. If the mask is not set or set with empty paths, all inventory fields will be updated. If an unsupported or unknown field is provided, an INVALID_ARGUMENT error is returned and the entire update will be ignored.

        :param add_mask: The add_mask of this GoogleCloudRetailV2AddLocalInventoriesRequest.
        :type add_mask: str
        """

        self._add_mask = add_mask

    @property
    def add_time(self):
        """Gets the add_time of this GoogleCloudRetailV2AddLocalInventoriesRequest.

        The time when the inventory updates are issued. Used to prevent out-of-order updates on local inventory fields. If not provided, the internal system time will be used.

        :return: The add_time of this GoogleCloudRetailV2AddLocalInventoriesRequest.
        :rtype: str
        """
        return self._add_time

    @add_time.setter
    def add_time(self, add_time):
        """Sets the add_time of this GoogleCloudRetailV2AddLocalInventoriesRequest.

        The time when the inventory updates are issued. Used to prevent out-of-order updates on local inventory fields. If not provided, the internal system time will be used.

        :param add_time: The add_time of this GoogleCloudRetailV2AddLocalInventoriesRequest.
        :type add_time: str
        """

        self._add_time = add_time

    @property
    def allow_missing(self):
        """Gets the allow_missing of this GoogleCloudRetailV2AddLocalInventoriesRequest.

        If set to true, and the Product is not found, the local inventory will still be processed and retained for at most 1 day and processed once the Product is created. If set to false, a NOT_FOUND error is returned if the Product is not found.

        :return: The allow_missing of this GoogleCloudRetailV2AddLocalInventoriesRequest.
        :rtype: bool
        """
        return self._allow_missing

    @allow_missing.setter
    def allow_missing(self, allow_missing):
        """Sets the allow_missing of this GoogleCloudRetailV2AddLocalInventoriesRequest.

        If set to true, and the Product is not found, the local inventory will still be processed and retained for at most 1 day and processed once the Product is created. If set to false, a NOT_FOUND error is returned if the Product is not found.

        :param allow_missing: The allow_missing of this GoogleCloudRetailV2AddLocalInventoriesRequest.
        :type allow_missing: bool
        """

        self._allow_missing = allow_missing

    @property
    def local_inventories(self):
        """Gets the local_inventories of this GoogleCloudRetailV2AddLocalInventoriesRequest.

        Required. A list of inventory information at difference places. Each place is identified by its place ID. At most 3000 inventories are allowed per request.

        :return: The local_inventories of this GoogleCloudRetailV2AddLocalInventoriesRequest.
        :rtype: List[GoogleCloudRetailV2LocalInventory]
        """
        return self._local_inventories

    @local_inventories.setter
    def local_inventories(self, local_inventories):
        """Sets the local_inventories of this GoogleCloudRetailV2AddLocalInventoriesRequest.

        Required. A list of inventory information at difference places. Each place is identified by its place ID. At most 3000 inventories are allowed per request.

        :param local_inventories: The local_inventories of this GoogleCloudRetailV2AddLocalInventoriesRequest.
        :type local_inventories: List[GoogleCloudRetailV2LocalInventory]
        """

        self._local_inventories = local_inventories
