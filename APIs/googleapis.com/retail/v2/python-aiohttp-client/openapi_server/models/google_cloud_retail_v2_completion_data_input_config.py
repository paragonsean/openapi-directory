# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_retail_v2_big_query_source import GoogleCloudRetailV2BigQuerySource
from openapi_server import util


class GoogleCloudRetailV2CompletionDataInputConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, big_query_source: GoogleCloudRetailV2BigQuerySource=None):
        """GoogleCloudRetailV2CompletionDataInputConfig - a model defined in OpenAPI

        :param big_query_source: The big_query_source of this GoogleCloudRetailV2CompletionDataInputConfig.
        """
        self.openapi_types = {
            'big_query_source': GoogleCloudRetailV2BigQuerySource
        }

        self.attribute_map = {
            'big_query_source': 'bigQuerySource'
        }

        self._big_query_source = big_query_source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRetailV2CompletionDataInputConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRetailV2CompletionDataInputConfig of this GoogleCloudRetailV2CompletionDataInputConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def big_query_source(self):
        """Gets the big_query_source of this GoogleCloudRetailV2CompletionDataInputConfig.


        :return: The big_query_source of this GoogleCloudRetailV2CompletionDataInputConfig.
        :rtype: GoogleCloudRetailV2BigQuerySource
        """
        return self._big_query_source

    @big_query_source.setter
    def big_query_source(self, big_query_source):
        """Sets the big_query_source of this GoogleCloudRetailV2CompletionDataInputConfig.


        :param big_query_source: The big_query_source of this GoogleCloudRetailV2CompletionDataInputConfig.
        :type big_query_source: GoogleCloudRetailV2BigQuerySource
        """

        self._big_query_source = big_query_source
