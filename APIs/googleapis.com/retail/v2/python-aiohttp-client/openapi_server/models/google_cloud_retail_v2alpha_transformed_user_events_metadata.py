# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudRetailV2alphaTransformedUserEventsMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_events_count: str=None, transformed_events_count: str=None):
        """GoogleCloudRetailV2alphaTransformedUserEventsMetadata - a model defined in OpenAPI

        :param source_events_count: The source_events_count of this GoogleCloudRetailV2alphaTransformedUserEventsMetadata.
        :param transformed_events_count: The transformed_events_count of this GoogleCloudRetailV2alphaTransformedUserEventsMetadata.
        """
        self.openapi_types = {
            'source_events_count': str,
            'transformed_events_count': str
        }

        self.attribute_map = {
            'source_events_count': 'sourceEventsCount',
            'transformed_events_count': 'transformedEventsCount'
        }

        self._source_events_count = source_events_count
        self._transformed_events_count = transformed_events_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRetailV2alphaTransformedUserEventsMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRetailV2alphaTransformedUserEventsMetadata of this GoogleCloudRetailV2alphaTransformedUserEventsMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_events_count(self):
        """Gets the source_events_count of this GoogleCloudRetailV2alphaTransformedUserEventsMetadata.

        Count of entries in the source user events BigQuery table.

        :return: The source_events_count of this GoogleCloudRetailV2alphaTransformedUserEventsMetadata.
        :rtype: str
        """
        return self._source_events_count

    @source_events_count.setter
    def source_events_count(self, source_events_count):
        """Sets the source_events_count of this GoogleCloudRetailV2alphaTransformedUserEventsMetadata.

        Count of entries in the source user events BigQuery table.

        :param source_events_count: The source_events_count of this GoogleCloudRetailV2alphaTransformedUserEventsMetadata.
        :type source_events_count: str
        """

        self._source_events_count = source_events_count

    @property
    def transformed_events_count(self):
        """Gets the transformed_events_count of this GoogleCloudRetailV2alphaTransformedUserEventsMetadata.

        Count of entries in the transformed user events BigQuery table, which could be different from the actually imported number of user events.

        :return: The transformed_events_count of this GoogleCloudRetailV2alphaTransformedUserEventsMetadata.
        :rtype: str
        """
        return self._transformed_events_count

    @transformed_events_count.setter
    def transformed_events_count(self, transformed_events_count):
        """Sets the transformed_events_count of this GoogleCloudRetailV2alphaTransformedUserEventsMetadata.

        Count of entries in the transformed user events BigQuery table, which could be different from the actually imported number of user events.

        :param transformed_events_count: The transformed_events_count of this GoogleCloudRetailV2alphaTransformedUserEventsMetadata.
        :type transformed_events_count: str
        """

        self._transformed_events_count = transformed_events_count
