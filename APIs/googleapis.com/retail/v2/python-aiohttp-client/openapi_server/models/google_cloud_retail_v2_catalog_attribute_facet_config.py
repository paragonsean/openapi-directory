# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_retail_v2_catalog_attribute_facet_config_ignored_facet_values import GoogleCloudRetailV2CatalogAttributeFacetConfigIgnoredFacetValues
from openapi_server.models.google_cloud_retail_v2_catalog_attribute_facet_config_merged_facet import GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet
from openapi_server.models.google_cloud_retail_v2_catalog_attribute_facet_config_merged_facet_value import GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacetValue
from openapi_server.models.google_cloud_retail_v2_catalog_attribute_facet_config_rerank_config import GoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig
from openapi_server.models.google_cloud_retail_v2_interval import GoogleCloudRetailV2Interval
from openapi_server import util


class GoogleCloudRetailV2CatalogAttributeFacetConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, facet_intervals: List[GoogleCloudRetailV2Interval]=None, ignored_facet_values: List[GoogleCloudRetailV2CatalogAttributeFacetConfigIgnoredFacetValues]=None, merged_facet: GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet=None, merged_facet_values: List[GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacetValue]=None, rerank_config: GoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig=None):
        """GoogleCloudRetailV2CatalogAttributeFacetConfig - a model defined in OpenAPI

        :param facet_intervals: The facet_intervals of this GoogleCloudRetailV2CatalogAttributeFacetConfig.
        :param ignored_facet_values: The ignored_facet_values of this GoogleCloudRetailV2CatalogAttributeFacetConfig.
        :param merged_facet: The merged_facet of this GoogleCloudRetailV2CatalogAttributeFacetConfig.
        :param merged_facet_values: The merged_facet_values of this GoogleCloudRetailV2CatalogAttributeFacetConfig.
        :param rerank_config: The rerank_config of this GoogleCloudRetailV2CatalogAttributeFacetConfig.
        """
        self.openapi_types = {
            'facet_intervals': List[GoogleCloudRetailV2Interval],
            'ignored_facet_values': List[GoogleCloudRetailV2CatalogAttributeFacetConfigIgnoredFacetValues],
            'merged_facet': GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet,
            'merged_facet_values': List[GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacetValue],
            'rerank_config': GoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig
        }

        self.attribute_map = {
            'facet_intervals': 'facetIntervals',
            'ignored_facet_values': 'ignoredFacetValues',
            'merged_facet': 'mergedFacet',
            'merged_facet_values': 'mergedFacetValues',
            'rerank_config': 'rerankConfig'
        }

        self._facet_intervals = facet_intervals
        self._ignored_facet_values = ignored_facet_values
        self._merged_facet = merged_facet
        self._merged_facet_values = merged_facet_values
        self._rerank_config = rerank_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRetailV2CatalogAttributeFacetConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRetailV2CatalogAttributeFacetConfig of this GoogleCloudRetailV2CatalogAttributeFacetConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def facet_intervals(self):
        """Gets the facet_intervals of this GoogleCloudRetailV2CatalogAttributeFacetConfig.

        If you don't set the facet SearchRequest.FacetSpec.FacetKey.intervals in the request to a numerical attribute, then we use the computed intervals with rounded bounds obtained from all its product numerical attribute values. The computed intervals might not be ideal for some attributes. Therefore, we give you the option to overwrite them with the facet_intervals field. The maximum of facet intervals per CatalogAttribute is 40. Each interval must have a lower bound or an upper bound. If both bounds are provided, then the lower bound must be smaller or equal than the upper bound.

        :return: The facet_intervals of this GoogleCloudRetailV2CatalogAttributeFacetConfig.
        :rtype: List[GoogleCloudRetailV2Interval]
        """
        return self._facet_intervals

    @facet_intervals.setter
    def facet_intervals(self, facet_intervals):
        """Sets the facet_intervals of this GoogleCloudRetailV2CatalogAttributeFacetConfig.

        If you don't set the facet SearchRequest.FacetSpec.FacetKey.intervals in the request to a numerical attribute, then we use the computed intervals with rounded bounds obtained from all its product numerical attribute values. The computed intervals might not be ideal for some attributes. Therefore, we give you the option to overwrite them with the facet_intervals field. The maximum of facet intervals per CatalogAttribute is 40. Each interval must have a lower bound or an upper bound. If both bounds are provided, then the lower bound must be smaller or equal than the upper bound.

        :param facet_intervals: The facet_intervals of this GoogleCloudRetailV2CatalogAttributeFacetConfig.
        :type facet_intervals: List[GoogleCloudRetailV2Interval]
        """

        self._facet_intervals = facet_intervals

    @property
    def ignored_facet_values(self):
        """Gets the ignored_facet_values of this GoogleCloudRetailV2CatalogAttributeFacetConfig.

        Each instance represents a list of attribute values to ignore as facet values for a specific time range. The maximum number of instances per CatalogAttribute is 25.

        :return: The ignored_facet_values of this GoogleCloudRetailV2CatalogAttributeFacetConfig.
        :rtype: List[GoogleCloudRetailV2CatalogAttributeFacetConfigIgnoredFacetValues]
        """
        return self._ignored_facet_values

    @ignored_facet_values.setter
    def ignored_facet_values(self, ignored_facet_values):
        """Sets the ignored_facet_values of this GoogleCloudRetailV2CatalogAttributeFacetConfig.

        Each instance represents a list of attribute values to ignore as facet values for a specific time range. The maximum number of instances per CatalogAttribute is 25.

        :param ignored_facet_values: The ignored_facet_values of this GoogleCloudRetailV2CatalogAttributeFacetConfig.
        :type ignored_facet_values: List[GoogleCloudRetailV2CatalogAttributeFacetConfigIgnoredFacetValues]
        """

        self._ignored_facet_values = ignored_facet_values

    @property
    def merged_facet(self):
        """Gets the merged_facet of this GoogleCloudRetailV2CatalogAttributeFacetConfig.


        :return: The merged_facet of this GoogleCloudRetailV2CatalogAttributeFacetConfig.
        :rtype: GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet
        """
        return self._merged_facet

    @merged_facet.setter
    def merged_facet(self, merged_facet):
        """Sets the merged_facet of this GoogleCloudRetailV2CatalogAttributeFacetConfig.


        :param merged_facet: The merged_facet of this GoogleCloudRetailV2CatalogAttributeFacetConfig.
        :type merged_facet: GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet
        """

        self._merged_facet = merged_facet

    @property
    def merged_facet_values(self):
        """Gets the merged_facet_values of this GoogleCloudRetailV2CatalogAttributeFacetConfig.

        Each instance replaces a list of facet values by a merged facet value. If a facet value is not in any list, then it will stay the same. To avoid conflicts, only paths of length 1 are accepted. In other words, if \"dark_blue\" merged into \"BLUE\", then the latter can't merge into \"blues\" because this would create a path of length 2. The maximum number of instances of MergedFacetValue per CatalogAttribute is 100. This feature is available only for textual custom attributes.

        :return: The merged_facet_values of this GoogleCloudRetailV2CatalogAttributeFacetConfig.
        :rtype: List[GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacetValue]
        """
        return self._merged_facet_values

    @merged_facet_values.setter
    def merged_facet_values(self, merged_facet_values):
        """Sets the merged_facet_values of this GoogleCloudRetailV2CatalogAttributeFacetConfig.

        Each instance replaces a list of facet values by a merged facet value. If a facet value is not in any list, then it will stay the same. To avoid conflicts, only paths of length 1 are accepted. In other words, if \"dark_blue\" merged into \"BLUE\", then the latter can't merge into \"blues\" because this would create a path of length 2. The maximum number of instances of MergedFacetValue per CatalogAttribute is 100. This feature is available only for textual custom attributes.

        :param merged_facet_values: The merged_facet_values of this GoogleCloudRetailV2CatalogAttributeFacetConfig.
        :type merged_facet_values: List[GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacetValue]
        """

        self._merged_facet_values = merged_facet_values

    @property
    def rerank_config(self):
        """Gets the rerank_config of this GoogleCloudRetailV2CatalogAttributeFacetConfig.


        :return: The rerank_config of this GoogleCloudRetailV2CatalogAttributeFacetConfig.
        :rtype: GoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig
        """
        return self._rerank_config

    @rerank_config.setter
    def rerank_config(self, rerank_config):
        """Sets the rerank_config of this GoogleCloudRetailV2CatalogAttributeFacetConfig.


        :param rerank_config: The rerank_config of this GoogleCloudRetailV2CatalogAttributeFacetConfig.
        :type rerank_config: GoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig
        """

        self._rerank_config = rerank_config
