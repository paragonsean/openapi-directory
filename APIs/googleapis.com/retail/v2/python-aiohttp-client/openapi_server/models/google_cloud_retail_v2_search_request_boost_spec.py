# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_retail_v2_search_request_boost_spec_condition_boost_spec import GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec
from openapi_server import util


class GoogleCloudRetailV2SearchRequestBoostSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, condition_boost_specs: List[GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec]=None, skip_boost_spec_validation: bool=None):
        """GoogleCloudRetailV2SearchRequestBoostSpec - a model defined in OpenAPI

        :param condition_boost_specs: The condition_boost_specs of this GoogleCloudRetailV2SearchRequestBoostSpec.
        :param skip_boost_spec_validation: The skip_boost_spec_validation of this GoogleCloudRetailV2SearchRequestBoostSpec.
        """
        self.openapi_types = {
            'condition_boost_specs': List[GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec],
            'skip_boost_spec_validation': bool
        }

        self.attribute_map = {
            'condition_boost_specs': 'conditionBoostSpecs',
            'skip_boost_spec_validation': 'skipBoostSpecValidation'
        }

        self._condition_boost_specs = condition_boost_specs
        self._skip_boost_spec_validation = skip_boost_spec_validation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudRetailV2SearchRequestBoostSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudRetailV2SearchRequestBoostSpec of this GoogleCloudRetailV2SearchRequestBoostSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def condition_boost_specs(self):
        """Gets the condition_boost_specs of this GoogleCloudRetailV2SearchRequestBoostSpec.

        Condition boost specifications. If a product matches multiple conditions in the specifictions, boost scores from these specifications are all applied and combined in a non-linear way. Maximum number of specifications is 20.

        :return: The condition_boost_specs of this GoogleCloudRetailV2SearchRequestBoostSpec.
        :rtype: List[GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec]
        """
        return self._condition_boost_specs

    @condition_boost_specs.setter
    def condition_boost_specs(self, condition_boost_specs):
        """Sets the condition_boost_specs of this GoogleCloudRetailV2SearchRequestBoostSpec.

        Condition boost specifications. If a product matches multiple conditions in the specifictions, boost scores from these specifications are all applied and combined in a non-linear way. Maximum number of specifications is 20.

        :param condition_boost_specs: The condition_boost_specs of this GoogleCloudRetailV2SearchRequestBoostSpec.
        :type condition_boost_specs: List[GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec]
        """

        self._condition_boost_specs = condition_boost_specs

    @property
    def skip_boost_spec_validation(self):
        """Gets the skip_boost_spec_validation of this GoogleCloudRetailV2SearchRequestBoostSpec.

        Whether to skip boostspec validation. If this field is set to true, invalid BoostSpec.condition_boost_specs will be ignored and valid BoostSpec.condition_boost_specs will still be applied.

        :return: The skip_boost_spec_validation of this GoogleCloudRetailV2SearchRequestBoostSpec.
        :rtype: bool
        """
        return self._skip_boost_spec_validation

    @skip_boost_spec_validation.setter
    def skip_boost_spec_validation(self, skip_boost_spec_validation):
        """Sets the skip_boost_spec_validation of this GoogleCloudRetailV2SearchRequestBoostSpec.

        Whether to skip boostspec validation. If this field is set to true, invalid BoostSpec.condition_boost_specs will be ignored and valid BoostSpec.condition_boost_specs will still be applied.

        :param skip_boost_spec_validation: The skip_boost_spec_validation of this GoogleCloudRetailV2SearchRequestBoostSpec.
        :type skip_boost_spec_validation: bool
        """

        self._skip_boost_spec_validation = skip_boost_spec_validation
