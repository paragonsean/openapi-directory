/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudRetailV2ExperimentInfo from './GoogleCloudRetailV2ExperimentInfo';
import GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec from './GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec';
import GoogleCloudRetailV2SearchResponseFacet from './GoogleCloudRetailV2SearchResponseFacet';
import GoogleCloudRetailV2SearchResponseQueryExpansionInfo from './GoogleCloudRetailV2SearchResponseQueryExpansionInfo';
import GoogleCloudRetailV2SearchResponseSearchResult from './GoogleCloudRetailV2SearchResponseSearchResult';

/**
 * The GoogleCloudRetailV2SearchResponse model module.
 * @module model/GoogleCloudRetailV2SearchResponse
 * @version v2
 */
class GoogleCloudRetailV2SearchResponse {
    /**
     * Constructs a new <code>GoogleCloudRetailV2SearchResponse</code>.
     * Response message for SearchService.Search method.
     * @alias module:model/GoogleCloudRetailV2SearchResponse
     */
    constructor() { 
        
        GoogleCloudRetailV2SearchResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRetailV2SearchResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRetailV2SearchResponse} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRetailV2SearchResponse} The populated <code>GoogleCloudRetailV2SearchResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRetailV2SearchResponse();

            if (data.hasOwnProperty('appliedControls')) {
                obj['appliedControls'] = ApiClient.convertToType(data['appliedControls'], ['String']);
            }
            if (data.hasOwnProperty('attributionToken')) {
                obj['attributionToken'] = ApiClient.convertToType(data['attributionToken'], 'String');
            }
            if (data.hasOwnProperty('correctedQuery')) {
                obj['correctedQuery'] = ApiClient.convertToType(data['correctedQuery'], 'String');
            }
            if (data.hasOwnProperty('experimentInfo')) {
                obj['experimentInfo'] = ApiClient.convertToType(data['experimentInfo'], [GoogleCloudRetailV2ExperimentInfo]);
            }
            if (data.hasOwnProperty('facets')) {
                obj['facets'] = ApiClient.convertToType(data['facets'], [GoogleCloudRetailV2SearchResponseFacet]);
            }
            if (data.hasOwnProperty('invalidConditionBoostSpecs')) {
                obj['invalidConditionBoostSpecs'] = ApiClient.convertToType(data['invalidConditionBoostSpecs'], [GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec]);
            }
            if (data.hasOwnProperty('nextPageToken')) {
                obj['nextPageToken'] = ApiClient.convertToType(data['nextPageToken'], 'String');
            }
            if (data.hasOwnProperty('queryExpansionInfo')) {
                obj['queryExpansionInfo'] = GoogleCloudRetailV2SearchResponseQueryExpansionInfo.constructFromObject(data['queryExpansionInfo']);
            }
            if (data.hasOwnProperty('redirectUri')) {
                obj['redirectUri'] = ApiClient.convertToType(data['redirectUri'], 'String');
            }
            if (data.hasOwnProperty('results')) {
                obj['results'] = ApiClient.convertToType(data['results'], [GoogleCloudRetailV2SearchResponseSearchResult]);
            }
            if (data.hasOwnProperty('totalSize')) {
                obj['totalSize'] = ApiClient.convertToType(data['totalSize'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRetailV2SearchResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRetailV2SearchResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['appliedControls'])) {
            throw new Error("Expected the field `appliedControls` to be an array in the JSON data but got " + data['appliedControls']);
        }
        // ensure the json data is a string
        if (data['attributionToken'] && !(typeof data['attributionToken'] === 'string' || data['attributionToken'] instanceof String)) {
            throw new Error("Expected the field `attributionToken` to be a primitive type in the JSON string but got " + data['attributionToken']);
        }
        // ensure the json data is a string
        if (data['correctedQuery'] && !(typeof data['correctedQuery'] === 'string' || data['correctedQuery'] instanceof String)) {
            throw new Error("Expected the field `correctedQuery` to be a primitive type in the JSON string but got " + data['correctedQuery']);
        }
        if (data['experimentInfo']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['experimentInfo'])) {
                throw new Error("Expected the field `experimentInfo` to be an array in the JSON data but got " + data['experimentInfo']);
            }
            // validate the optional field `experimentInfo` (array)
            for (const item of data['experimentInfo']) {
                GoogleCloudRetailV2ExperimentInfo.validateJSON(item);
            };
        }
        if (data['facets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['facets'])) {
                throw new Error("Expected the field `facets` to be an array in the JSON data but got " + data['facets']);
            }
            // validate the optional field `facets` (array)
            for (const item of data['facets']) {
                GoogleCloudRetailV2SearchResponseFacet.validateJSON(item);
            };
        }
        if (data['invalidConditionBoostSpecs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['invalidConditionBoostSpecs'])) {
                throw new Error("Expected the field `invalidConditionBoostSpecs` to be an array in the JSON data but got " + data['invalidConditionBoostSpecs']);
            }
            // validate the optional field `invalidConditionBoostSpecs` (array)
            for (const item of data['invalidConditionBoostSpecs']) {
                GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['nextPageToken'] && !(typeof data['nextPageToken'] === 'string' || data['nextPageToken'] instanceof String)) {
            throw new Error("Expected the field `nextPageToken` to be a primitive type in the JSON string but got " + data['nextPageToken']);
        }
        // validate the optional field `queryExpansionInfo`
        if (data['queryExpansionInfo']) { // data not null
          GoogleCloudRetailV2SearchResponseQueryExpansionInfo.validateJSON(data['queryExpansionInfo']);
        }
        // ensure the json data is a string
        if (data['redirectUri'] && !(typeof data['redirectUri'] === 'string' || data['redirectUri'] instanceof String)) {
            throw new Error("Expected the field `redirectUri` to be a primitive type in the JSON string but got " + data['redirectUri']);
        }
        if (data['results']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['results'])) {
                throw new Error("Expected the field `results` to be an array in the JSON data but got " + data['results']);
            }
            // validate the optional field `results` (array)
            for (const item of data['results']) {
                GoogleCloudRetailV2SearchResponseSearchResult.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The fully qualified resource name of applied [controls](https://cloud.google.com/retail/docs/serving-control-rules).
 * @member {Array.<String>} appliedControls
 */
GoogleCloudRetailV2SearchResponse.prototype['appliedControls'] = undefined;

/**
 * A unique search token. This should be included in the UserEvent logs resulting from this search, which enables accurate attribution of search model performance.
 * @member {String} attributionToken
 */
GoogleCloudRetailV2SearchResponse.prototype['attributionToken'] = undefined;

/**
 * Contains the spell corrected query, if found. If the spell correction type is AUTOMATIC, then the search results are based on corrected_query. Otherwise the original query is used for search.
 * @member {String} correctedQuery
 */
GoogleCloudRetailV2SearchResponse.prototype['correctedQuery'] = undefined;

/**
 * Metadata related to A/B testing Experiment associated with this response. Only exists when an experiment is triggered.
 * @member {Array.<module:model/GoogleCloudRetailV2ExperimentInfo>} experimentInfo
 */
GoogleCloudRetailV2SearchResponse.prototype['experimentInfo'] = undefined;

/**
 * Results of facets requested by user.
 * @member {Array.<module:model/GoogleCloudRetailV2SearchResponseFacet>} facets
 */
GoogleCloudRetailV2SearchResponse.prototype['facets'] = undefined;

/**
 * The invalid SearchRequest.BoostSpec.condition_boost_specs that are not applied during serving.
 * @member {Array.<module:model/GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec>} invalidConditionBoostSpecs
 */
GoogleCloudRetailV2SearchResponse.prototype['invalidConditionBoostSpecs'] = undefined;

/**
 * A token that can be sent as SearchRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
 * @member {String} nextPageToken
 */
GoogleCloudRetailV2SearchResponse.prototype['nextPageToken'] = undefined;

/**
 * @member {module:model/GoogleCloudRetailV2SearchResponseQueryExpansionInfo} queryExpansionInfo
 */
GoogleCloudRetailV2SearchResponse.prototype['queryExpansionInfo'] = undefined;

/**
 * The URI of a customer-defined redirect page. If redirect action is triggered, no search is performed, and only redirect_uri and attribution_token are set in the response.
 * @member {String} redirectUri
 */
GoogleCloudRetailV2SearchResponse.prototype['redirectUri'] = undefined;

/**
 * A list of matched items. The order represents the ranking.
 * @member {Array.<module:model/GoogleCloudRetailV2SearchResponseSearchResult>} results
 */
GoogleCloudRetailV2SearchResponse.prototype['results'] = undefined;

/**
 * The estimated total count of matched items irrespective of pagination. The count of results returned by pagination may be less than the total_size that matches.
 * @member {Number} totalSize
 */
GoogleCloudRetailV2SearchResponse.prototype['totalSize'] = undefined;






export default GoogleCloudRetailV2SearchResponse;

