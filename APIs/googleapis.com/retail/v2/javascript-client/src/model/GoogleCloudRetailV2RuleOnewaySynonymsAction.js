/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudRetailV2RuleOnewaySynonymsAction model module.
 * @module model/GoogleCloudRetailV2RuleOnewaySynonymsAction
 * @version v2
 */
class GoogleCloudRetailV2RuleOnewaySynonymsAction {
    /**
     * Constructs a new <code>GoogleCloudRetailV2RuleOnewaySynonymsAction</code>.
     * Maps a set of terms to a set of synonyms. Set of synonyms will be treated as synonyms of each query term only. &#x60;query_terms&#x60; will not be treated as synonyms of each other. Example: \&quot;sneakers\&quot; will use a synonym of \&quot;shoes\&quot;. \&quot;shoes\&quot; will not use a synonym of \&quot;sneakers\&quot;.
     * @alias module:model/GoogleCloudRetailV2RuleOnewaySynonymsAction
     */
    constructor() { 
        
        GoogleCloudRetailV2RuleOnewaySynonymsAction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRetailV2RuleOnewaySynonymsAction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRetailV2RuleOnewaySynonymsAction} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRetailV2RuleOnewaySynonymsAction} The populated <code>GoogleCloudRetailV2RuleOnewaySynonymsAction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRetailV2RuleOnewaySynonymsAction();

            if (data.hasOwnProperty('onewayTerms')) {
                obj['onewayTerms'] = ApiClient.convertToType(data['onewayTerms'], ['String']);
            }
            if (data.hasOwnProperty('queryTerms')) {
                obj['queryTerms'] = ApiClient.convertToType(data['queryTerms'], ['String']);
            }
            if (data.hasOwnProperty('synonyms')) {
                obj['synonyms'] = ApiClient.convertToType(data['synonyms'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRetailV2RuleOnewaySynonymsAction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRetailV2RuleOnewaySynonymsAction</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['onewayTerms'])) {
            throw new Error("Expected the field `onewayTerms` to be an array in the JSON data but got " + data['onewayTerms']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['queryTerms'])) {
            throw new Error("Expected the field `queryTerms` to be an array in the JSON data but got " + data['queryTerms']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['synonyms'])) {
            throw new Error("Expected the field `synonyms` to be an array in the JSON data but got " + data['synonyms']);
        }

        return true;
    }


}



/**
 * Will be [deprecated = true] post migration;
 * @member {Array.<String>} onewayTerms
 */
GoogleCloudRetailV2RuleOnewaySynonymsAction.prototype['onewayTerms'] = undefined;

/**
 * Terms from the search query. Will treat synonyms as their synonyms. Not themselves synonyms of the synonyms. Can specify up to 100 terms.
 * @member {Array.<String>} queryTerms
 */
GoogleCloudRetailV2RuleOnewaySynonymsAction.prototype['queryTerms'] = undefined;

/**
 * Defines a set of synonyms. Cannot contain duplicates. Can specify up to 100 synonyms.
 * @member {Array.<String>} synonyms
 */
GoogleCloudRetailV2RuleOnewaySynonymsAction.prototype['synonyms'] = undefined;






export default GoogleCloudRetailV2RuleOnewaySynonymsAction;

