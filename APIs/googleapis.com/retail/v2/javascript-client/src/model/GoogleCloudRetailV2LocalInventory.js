/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudRetailV2CustomAttribute from './GoogleCloudRetailV2CustomAttribute';
import GoogleCloudRetailV2PriceInfo from './GoogleCloudRetailV2PriceInfo';

/**
 * The GoogleCloudRetailV2LocalInventory model module.
 * @module model/GoogleCloudRetailV2LocalInventory
 * @version v2
 */
class GoogleCloudRetailV2LocalInventory {
    /**
     * Constructs a new <code>GoogleCloudRetailV2LocalInventory</code>.
     * The inventory information at a place (e.g. a store) identified by a place ID.
     * @alias module:model/GoogleCloudRetailV2LocalInventory
     */
    constructor() { 
        
        GoogleCloudRetailV2LocalInventory.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRetailV2LocalInventory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRetailV2LocalInventory} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRetailV2LocalInventory} The populated <code>GoogleCloudRetailV2LocalInventory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRetailV2LocalInventory();

            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], {'String': GoogleCloudRetailV2CustomAttribute});
            }
            if (data.hasOwnProperty('fulfillmentTypes')) {
                obj['fulfillmentTypes'] = ApiClient.convertToType(data['fulfillmentTypes'], ['String']);
            }
            if (data.hasOwnProperty('placeId')) {
                obj['placeId'] = ApiClient.convertToType(data['placeId'], 'String');
            }
            if (data.hasOwnProperty('priceInfo')) {
                obj['priceInfo'] = GoogleCloudRetailV2PriceInfo.constructFromObject(data['priceInfo']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRetailV2LocalInventory</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRetailV2LocalInventory</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['fulfillmentTypes'])) {
            throw new Error("Expected the field `fulfillmentTypes` to be an array in the JSON data but got " + data['fulfillmentTypes']);
        }
        // ensure the json data is a string
        if (data['placeId'] && !(typeof data['placeId'] === 'string' || data['placeId'] instanceof String)) {
            throw new Error("Expected the field `placeId` to be a primitive type in the JSON string but got " + data['placeId']);
        }
        // validate the optional field `priceInfo`
        if (data['priceInfo']) { // data not null
          GoogleCloudRetailV2PriceInfo.validateJSON(data['priceInfo']);
        }

        return true;
    }


}



/**
 * Additional local inventory attributes, for example, store name, promotion tags, etc. This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT error is returned: * At most 30 attributes are allowed. * The key must be a UTF-8 encoded string with a length limit of 32 characters. * The key must match the pattern: `a-zA-Z0-9*`. For example, key0LikeThis or KEY_1_LIKE_THIS. * The attribute values must be of the same type (text or number). * Only 1 value is allowed for each attribute. * For text values, the length limit is 256 UTF-8 characters. * The attribute does not support search. The `searchable` field should be unset or set to false. * The max summed total bytes of custom attribute keys and values per product is 5MiB.
 * @member {Object.<String, module:model/GoogleCloudRetailV2CustomAttribute>} attributes
 */
GoogleCloudRetailV2LocalInventory.prototype['attributes'] = undefined;

/**
 * Input only. Supported fulfillment types. Valid fulfillment type values include commonly used types (such as pickup in store and same day delivery), and custom types. Customers have to map custom types to their display names before rendering UI. Supported values: * \"pickup-in-store\" * \"ship-to-store\" * \"same-day-delivery\" * \"next-day-delivery\" * \"custom-type-1\" * \"custom-type-2\" * \"custom-type-3\" * \"custom-type-4\" * \"custom-type-5\" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned. All the elements must be distinct. Otherwise, an INVALID_ARGUMENT error is returned.
 * @member {Array.<String>} fulfillmentTypes
 */
GoogleCloudRetailV2LocalInventory.prototype['fulfillmentTypes'] = undefined;

/**
 * The place ID for the current set of inventory information.
 * @member {String} placeId
 */
GoogleCloudRetailV2LocalInventory.prototype['placeId'] = undefined;

/**
 * @member {module:model/GoogleCloudRetailV2PriceInfo} priceInfo
 */
GoogleCloudRetailV2LocalInventory.prototype['priceInfo'] = undefined;






export default GoogleCloudRetailV2LocalInventory;

