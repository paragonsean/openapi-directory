/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacetValue from './GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacetValue';

/**
 * The GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet model module.
 * @module model/GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet
 * @version v2
 */
class GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet {
    /**
     * Constructs a new <code>GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet</code>.
     * The current facet key (i.e. attribute config) maps into the merged_facet_key. A facet key can have at most one child. The current facet key and the merged facet key need both to be textual custom attributes or both numerical custom attributes (same type).
     * @alias module:model/GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet
     */
    constructor() { 
        
        GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet} The populated <code>GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet();

            if (data.hasOwnProperty('mergedFacetKey')) {
                obj['mergedFacetKey'] = ApiClient.convertToType(data['mergedFacetKey'], 'String');
            }
            if (data.hasOwnProperty('mergedFacetValues')) {
                obj['mergedFacetValues'] = ApiClient.convertToType(data['mergedFacetValues'], [GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacetValue]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['mergedFacetKey'] && !(typeof data['mergedFacetKey'] === 'string' || data['mergedFacetKey'] instanceof String)) {
            throw new Error("Expected the field `mergedFacetKey` to be a primitive type in the JSON string but got " + data['mergedFacetKey']);
        }
        if (data['mergedFacetValues']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['mergedFacetValues'])) {
                throw new Error("Expected the field `mergedFacetValues` to be an array in the JSON data but got " + data['mergedFacetValues']);
            }
            // validate the optional field `mergedFacetValues` (array)
            for (const item of data['mergedFacetValues']) {
                GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacetValue.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The merged facet key should be a valid facet key that is different than the facet key of the current catalog attribute. We refer this is merged facet key as the child of the current catalog attribute. This merged facet key can't be a parent of another facet key (i.e. no directed path of length 2). This merged facet key needs to be either a textual custom attribute or a numerical custom attribute.
 * @member {String} mergedFacetKey
 */
GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet.prototype['mergedFacetKey'] = undefined;

/**
 * Each instance is a list of facet values that map into the same (possibly different) merged facet value. For the current attribute config, each facet value should map to at most one merged facet value.
 * @member {Array.<module:model/GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacetValue>} mergedFacetValues
 */
GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet.prototype['mergedFacetValues'] = undefined;






export default GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet;

