/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudRetailV2SearchRequestFacetSpecFacetKey from './GoogleCloudRetailV2SearchRequestFacetSpecFacetKey';

/**
 * The GoogleCloudRetailV2SearchRequestFacetSpec model module.
 * @module model/GoogleCloudRetailV2SearchRequestFacetSpec
 * @version v2
 */
class GoogleCloudRetailV2SearchRequestFacetSpec {
    /**
     * Constructs a new <code>GoogleCloudRetailV2SearchRequestFacetSpec</code>.
     * A facet specification to perform faceted search.
     * @alias module:model/GoogleCloudRetailV2SearchRequestFacetSpec
     */
    constructor() { 
        
        GoogleCloudRetailV2SearchRequestFacetSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRetailV2SearchRequestFacetSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRetailV2SearchRequestFacetSpec} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRetailV2SearchRequestFacetSpec} The populated <code>GoogleCloudRetailV2SearchRequestFacetSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRetailV2SearchRequestFacetSpec();

            if (data.hasOwnProperty('enableDynamicPosition')) {
                obj['enableDynamicPosition'] = ApiClient.convertToType(data['enableDynamicPosition'], 'Boolean');
            }
            if (data.hasOwnProperty('excludedFilterKeys')) {
                obj['excludedFilterKeys'] = ApiClient.convertToType(data['excludedFilterKeys'], ['String']);
            }
            if (data.hasOwnProperty('facetKey')) {
                obj['facetKey'] = GoogleCloudRetailV2SearchRequestFacetSpecFacetKey.constructFromObject(data['facetKey']);
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRetailV2SearchRequestFacetSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRetailV2SearchRequestFacetSpec</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['excludedFilterKeys'])) {
            throw new Error("Expected the field `excludedFilterKeys` to be an array in the JSON data but got " + data['excludedFilterKeys']);
        }
        // validate the optional field `facetKey`
        if (data['facetKey']) { // data not null
          GoogleCloudRetailV2SearchRequestFacetSpecFacetKey.validateJSON(data['facetKey']);
        }

        return true;
    }


}



/**
 * Enables dynamic position for this facet. If set to true, the position of this facet among all facets in the response is determined by Google Retail Search. It is ordered together with dynamic facets if dynamic facets is enabled. If set to false, the position of this facet in the response is the same as in the request, and it is ranked before the facets with dynamic position enable and all dynamic facets. For example, you may always want to have rating facet returned in the response, but it's not necessarily to always display the rating facet at the top. In that case, you can set enable_dynamic_position to true so that the position of rating facet in response is determined by Google Retail Search. Another example, assuming you have the following facets in the request: * \"rating\", enable_dynamic_position = true * \"price\", enable_dynamic_position = false * \"brands\", enable_dynamic_position = false And also you have a dynamic facets enable, which generates a facet \"gender\". Then, the final order of the facets in the response can be (\"price\", \"brands\", \"rating\", \"gender\") or (\"price\", \"brands\", \"gender\", \"rating\") depends on how Google Retail Search orders \"gender\" and \"rating\" facets. However, notice that \"price\" and \"brands\" are always ranked at first and second position because their enable_dynamic_position values are false.
 * @member {Boolean} enableDynamicPosition
 */
GoogleCloudRetailV2SearchRequestFacetSpec.prototype['enableDynamicPosition'] = undefined;

/**
 * List of keys to exclude when faceting. By default, FacetKey.key is not excluded from the filter unless it is listed in this field. Listing a facet key in this field allows its values to appear as facet results, even when they are filtered out of search results. Using this field does not affect what search results are returned. For example, suppose there are 100 products with the color facet \"Red\" and 200 products with the color facet \"Blue\". A query containing the filter \"colorFamilies:ANY(\"Red\")\" and having \"colorFamilies\" as FacetKey.key would by default return only \"Red\" products in the search results, and also return \"Red\" with count 100 as the only color facet. Although there are also blue products available, \"Blue\" would not be shown as an available facet value. If \"colorFamilies\" is listed in \"excludedFilterKeys\", then the query returns the facet values \"Red\" with count 100 and \"Blue\" with count 200, because the \"colorFamilies\" key is now excluded from the filter. Because this field doesn't affect search results, the search results are still correctly filtered to return only \"Red\" products. A maximum of 100 values are allowed. Otherwise, an INVALID_ARGUMENT error is returned.
 * @member {Array.<String>} excludedFilterKeys
 */
GoogleCloudRetailV2SearchRequestFacetSpec.prototype['excludedFilterKeys'] = undefined;

/**
 * @member {module:model/GoogleCloudRetailV2SearchRequestFacetSpecFacetKey} facetKey
 */
GoogleCloudRetailV2SearchRequestFacetSpec.prototype['facetKey'] = undefined;

/**
 * Maximum of facet values that should be returned for this facet. If unspecified, defaults to 50. The maximum allowed value is 300. Values above 300 will be coerced to 300. If this field is negative, an INVALID_ARGUMENT is returned.
 * @member {Number} limit
 */
GoogleCloudRetailV2SearchRequestFacetSpec.prototype['limit'] = undefined;






export default GoogleCloudRetailV2SearchRequestFacetSpec;

