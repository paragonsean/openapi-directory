/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudRetailV2CatalogAttributeFacetConfigIgnoredFacetValues from './GoogleCloudRetailV2CatalogAttributeFacetConfigIgnoredFacetValues';
import GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet from './GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet';
import GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacetValue from './GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacetValue';
import GoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig from './GoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig';
import GoogleCloudRetailV2Interval from './GoogleCloudRetailV2Interval';

/**
 * The GoogleCloudRetailV2CatalogAttributeFacetConfig model module.
 * @module model/GoogleCloudRetailV2CatalogAttributeFacetConfig
 * @version v2
 */
class GoogleCloudRetailV2CatalogAttributeFacetConfig {
    /**
     * Constructs a new <code>GoogleCloudRetailV2CatalogAttributeFacetConfig</code>.
     * Possible options for the facet that corresponds to the current attribute config.
     * @alias module:model/GoogleCloudRetailV2CatalogAttributeFacetConfig
     */
    constructor() { 
        
        GoogleCloudRetailV2CatalogAttributeFacetConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudRetailV2CatalogAttributeFacetConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudRetailV2CatalogAttributeFacetConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudRetailV2CatalogAttributeFacetConfig} The populated <code>GoogleCloudRetailV2CatalogAttributeFacetConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudRetailV2CatalogAttributeFacetConfig();

            if (data.hasOwnProperty('facetIntervals')) {
                obj['facetIntervals'] = ApiClient.convertToType(data['facetIntervals'], [GoogleCloudRetailV2Interval]);
            }
            if (data.hasOwnProperty('ignoredFacetValues')) {
                obj['ignoredFacetValues'] = ApiClient.convertToType(data['ignoredFacetValues'], [GoogleCloudRetailV2CatalogAttributeFacetConfigIgnoredFacetValues]);
            }
            if (data.hasOwnProperty('mergedFacet')) {
                obj['mergedFacet'] = GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet.constructFromObject(data['mergedFacet']);
            }
            if (data.hasOwnProperty('mergedFacetValues')) {
                obj['mergedFacetValues'] = ApiClient.convertToType(data['mergedFacetValues'], [GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacetValue]);
            }
            if (data.hasOwnProperty('rerankConfig')) {
                obj['rerankConfig'] = GoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig.constructFromObject(data['rerankConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudRetailV2CatalogAttributeFacetConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudRetailV2CatalogAttributeFacetConfig</code>.
     */
    static validateJSON(data) {
        if (data['facetIntervals']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['facetIntervals'])) {
                throw new Error("Expected the field `facetIntervals` to be an array in the JSON data but got " + data['facetIntervals']);
            }
            // validate the optional field `facetIntervals` (array)
            for (const item of data['facetIntervals']) {
                GoogleCloudRetailV2Interval.validateJSON(item);
            };
        }
        if (data['ignoredFacetValues']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ignoredFacetValues'])) {
                throw new Error("Expected the field `ignoredFacetValues` to be an array in the JSON data but got " + data['ignoredFacetValues']);
            }
            // validate the optional field `ignoredFacetValues` (array)
            for (const item of data['ignoredFacetValues']) {
                GoogleCloudRetailV2CatalogAttributeFacetConfigIgnoredFacetValues.validateJSON(item);
            };
        }
        // validate the optional field `mergedFacet`
        if (data['mergedFacet']) { // data not null
          GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet.validateJSON(data['mergedFacet']);
        }
        if (data['mergedFacetValues']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['mergedFacetValues'])) {
                throw new Error("Expected the field `mergedFacetValues` to be an array in the JSON data but got " + data['mergedFacetValues']);
            }
            // validate the optional field `mergedFacetValues` (array)
            for (const item of data['mergedFacetValues']) {
                GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacetValue.validateJSON(item);
            };
        }
        // validate the optional field `rerankConfig`
        if (data['rerankConfig']) { // data not null
          GoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig.validateJSON(data['rerankConfig']);
        }

        return true;
    }


}



/**
 * If you don't set the facet SearchRequest.FacetSpec.FacetKey.intervals in the request to a numerical attribute, then we use the computed intervals with rounded bounds obtained from all its product numerical attribute values. The computed intervals might not be ideal for some attributes. Therefore, we give you the option to overwrite them with the facet_intervals field. The maximum of facet intervals per CatalogAttribute is 40. Each interval must have a lower bound or an upper bound. If both bounds are provided, then the lower bound must be smaller or equal than the upper bound.
 * @member {Array.<module:model/GoogleCloudRetailV2Interval>} facetIntervals
 */
GoogleCloudRetailV2CatalogAttributeFacetConfig.prototype['facetIntervals'] = undefined;

/**
 * Each instance represents a list of attribute values to ignore as facet values for a specific time range. The maximum number of instances per CatalogAttribute is 25.
 * @member {Array.<module:model/GoogleCloudRetailV2CatalogAttributeFacetConfigIgnoredFacetValues>} ignoredFacetValues
 */
GoogleCloudRetailV2CatalogAttributeFacetConfig.prototype['ignoredFacetValues'] = undefined;

/**
 * @member {module:model/GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet} mergedFacet
 */
GoogleCloudRetailV2CatalogAttributeFacetConfig.prototype['mergedFacet'] = undefined;

/**
 * Each instance replaces a list of facet values by a merged facet value. If a facet value is not in any list, then it will stay the same. To avoid conflicts, only paths of length 1 are accepted. In other words, if \"dark_blue\" merged into \"BLUE\", then the latter can't merge into \"blues\" because this would create a path of length 2. The maximum number of instances of MergedFacetValue per CatalogAttribute is 100. This feature is available only for textual custom attributes.
 * @member {Array.<module:model/GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacetValue>} mergedFacetValues
 */
GoogleCloudRetailV2CatalogAttributeFacetConfig.prototype['mergedFacetValues'] = undefined;

/**
 * @member {module:model/GoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig} rerankConfig
 */
GoogleCloudRetailV2CatalogAttributeFacetConfig.prototype['rerankConfig'] = undefined;






export default GoogleCloudRetailV2CatalogAttributeFacetConfig;

