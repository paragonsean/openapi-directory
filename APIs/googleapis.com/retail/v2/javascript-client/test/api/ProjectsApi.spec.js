/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.VertexAiSearchForRetailApi);
  }
}(this, function(expect, VertexAiSearchForRetailApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new VertexAiSearchForRetailApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('retailProjectsLocationsCatalogsAttributesConfigAddCatalogAttribute', function() {
      it('should call retailProjectsLocationsCatalogsAttributesConfigAddCatalogAttribute successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsAttributesConfigAddCatalogAttribute
        //instance.retailProjectsLocationsCatalogsAttributesConfigAddCatalogAttribute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsAttributesConfigRemoveCatalogAttribute', function() {
      it('should call retailProjectsLocationsCatalogsAttributesConfigRemoveCatalogAttribute successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsAttributesConfigRemoveCatalogAttribute
        //instance.retailProjectsLocationsCatalogsAttributesConfigRemoveCatalogAttribute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsAttributesConfigReplaceCatalogAttribute', function() {
      it('should call retailProjectsLocationsCatalogsAttributesConfigReplaceCatalogAttribute successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsAttributesConfigReplaceCatalogAttribute
        //instance.retailProjectsLocationsCatalogsAttributesConfigReplaceCatalogAttribute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsBranchesProductsAddFulfillmentPlaces', function() {
      it('should call retailProjectsLocationsCatalogsBranchesProductsAddFulfillmentPlaces successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsBranchesProductsAddFulfillmentPlaces
        //instance.retailProjectsLocationsCatalogsBranchesProductsAddFulfillmentPlaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsBranchesProductsAddLocalInventories', function() {
      it('should call retailProjectsLocationsCatalogsBranchesProductsAddLocalInventories successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsBranchesProductsAddLocalInventories
        //instance.retailProjectsLocationsCatalogsBranchesProductsAddLocalInventories(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsBranchesProductsCreate', function() {
      it('should call retailProjectsLocationsCatalogsBranchesProductsCreate successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsBranchesProductsCreate
        //instance.retailProjectsLocationsCatalogsBranchesProductsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsBranchesProductsImport', function() {
      it('should call retailProjectsLocationsCatalogsBranchesProductsImport successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsBranchesProductsImport
        //instance.retailProjectsLocationsCatalogsBranchesProductsImport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsBranchesProductsList', function() {
      it('should call retailProjectsLocationsCatalogsBranchesProductsList successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsBranchesProductsList
        //instance.retailProjectsLocationsCatalogsBranchesProductsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsBranchesProductsPurge', function() {
      it('should call retailProjectsLocationsCatalogsBranchesProductsPurge successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsBranchesProductsPurge
        //instance.retailProjectsLocationsCatalogsBranchesProductsPurge(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsBranchesProductsRemoveFulfillmentPlaces', function() {
      it('should call retailProjectsLocationsCatalogsBranchesProductsRemoveFulfillmentPlaces successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsBranchesProductsRemoveFulfillmentPlaces
        //instance.retailProjectsLocationsCatalogsBranchesProductsRemoveFulfillmentPlaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsBranchesProductsRemoveLocalInventories', function() {
      it('should call retailProjectsLocationsCatalogsBranchesProductsRemoveLocalInventories successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsBranchesProductsRemoveLocalInventories
        //instance.retailProjectsLocationsCatalogsBranchesProductsRemoveLocalInventories(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsBranchesProductsSetInventory', function() {
      it('should call retailProjectsLocationsCatalogsBranchesProductsSetInventory successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsBranchesProductsSetInventory
        //instance.retailProjectsLocationsCatalogsBranchesProductsSetInventory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsCompleteQuery', function() {
      it('should call retailProjectsLocationsCatalogsCompleteQuery successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsCompleteQuery
        //instance.retailProjectsLocationsCatalogsCompleteQuery(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsCompletionDataImport', function() {
      it('should call retailProjectsLocationsCatalogsCompletionDataImport successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsCompletionDataImport
        //instance.retailProjectsLocationsCatalogsCompletionDataImport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsControlsCreate', function() {
      it('should call retailProjectsLocationsCatalogsControlsCreate successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsControlsCreate
        //instance.retailProjectsLocationsCatalogsControlsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsControlsList', function() {
      it('should call retailProjectsLocationsCatalogsControlsList successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsControlsList
        //instance.retailProjectsLocationsCatalogsControlsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsExportAnalyticsMetrics', function() {
      it('should call retailProjectsLocationsCatalogsExportAnalyticsMetrics successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsExportAnalyticsMetrics
        //instance.retailProjectsLocationsCatalogsExportAnalyticsMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsGetDefaultBranch', function() {
      it('should call retailProjectsLocationsCatalogsGetDefaultBranch successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsGetDefaultBranch
        //instance.retailProjectsLocationsCatalogsGetDefaultBranch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsList', function() {
      it('should call retailProjectsLocationsCatalogsList successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsList
        //instance.retailProjectsLocationsCatalogsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsModelsCreate', function() {
      it('should call retailProjectsLocationsCatalogsModelsCreate successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsModelsCreate
        //instance.retailProjectsLocationsCatalogsModelsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsModelsList', function() {
      it('should call retailProjectsLocationsCatalogsModelsList successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsModelsList
        //instance.retailProjectsLocationsCatalogsModelsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsModelsPause', function() {
      it('should call retailProjectsLocationsCatalogsModelsPause successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsModelsPause
        //instance.retailProjectsLocationsCatalogsModelsPause(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsModelsResume', function() {
      it('should call retailProjectsLocationsCatalogsModelsResume successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsModelsResume
        //instance.retailProjectsLocationsCatalogsModelsResume(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsModelsTune', function() {
      it('should call retailProjectsLocationsCatalogsModelsTune successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsModelsTune
        //instance.retailProjectsLocationsCatalogsModelsTune(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsServingConfigsAddControl', function() {
      it('should call retailProjectsLocationsCatalogsServingConfigsAddControl successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsServingConfigsAddControl
        //instance.retailProjectsLocationsCatalogsServingConfigsAddControl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsServingConfigsCreate', function() {
      it('should call retailProjectsLocationsCatalogsServingConfigsCreate successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsServingConfigsCreate
        //instance.retailProjectsLocationsCatalogsServingConfigsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsServingConfigsDelete', function() {
      it('should call retailProjectsLocationsCatalogsServingConfigsDelete successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsServingConfigsDelete
        //instance.retailProjectsLocationsCatalogsServingConfigsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsServingConfigsList', function() {
      it('should call retailProjectsLocationsCatalogsServingConfigsList successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsServingConfigsList
        //instance.retailProjectsLocationsCatalogsServingConfigsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsServingConfigsPatch', function() {
      it('should call retailProjectsLocationsCatalogsServingConfigsPatch successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsServingConfigsPatch
        //instance.retailProjectsLocationsCatalogsServingConfigsPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsServingConfigsPredict', function() {
      it('should call retailProjectsLocationsCatalogsServingConfigsPredict successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsServingConfigsPredict
        //instance.retailProjectsLocationsCatalogsServingConfigsPredict(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsServingConfigsRemoveControl', function() {
      it('should call retailProjectsLocationsCatalogsServingConfigsRemoveControl successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsServingConfigsRemoveControl
        //instance.retailProjectsLocationsCatalogsServingConfigsRemoveControl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsServingConfigsSearch', function() {
      it('should call retailProjectsLocationsCatalogsServingConfigsSearch successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsServingConfigsSearch
        //instance.retailProjectsLocationsCatalogsServingConfigsSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsSetDefaultBranch', function() {
      it('should call retailProjectsLocationsCatalogsSetDefaultBranch successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsSetDefaultBranch
        //instance.retailProjectsLocationsCatalogsSetDefaultBranch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsUserEventsCollect', function() {
      it('should call retailProjectsLocationsCatalogsUserEventsCollect successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsUserEventsCollect
        //instance.retailProjectsLocationsCatalogsUserEventsCollect(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsUserEventsImport', function() {
      it('should call retailProjectsLocationsCatalogsUserEventsImport successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsUserEventsImport
        //instance.retailProjectsLocationsCatalogsUserEventsImport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsUserEventsPurge', function() {
      it('should call retailProjectsLocationsCatalogsUserEventsPurge successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsUserEventsPurge
        //instance.retailProjectsLocationsCatalogsUserEventsPurge(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsUserEventsRejoin', function() {
      it('should call retailProjectsLocationsCatalogsUserEventsRejoin successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsUserEventsRejoin
        //instance.retailProjectsLocationsCatalogsUserEventsRejoin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsLocationsCatalogsUserEventsWrite', function() {
      it('should call retailProjectsLocationsCatalogsUserEventsWrite successfully', function(done) {
        //uncomment below and update the code to test retailProjectsLocationsCatalogsUserEventsWrite
        //instance.retailProjectsLocationsCatalogsUserEventsWrite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsOperationsGet', function() {
      it('should call retailProjectsOperationsGet successfully', function(done) {
        //uncomment below and update the code to test retailProjectsOperationsGet
        //instance.retailProjectsOperationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retailProjectsOperationsList', function() {
      it('should call retailProjectsOperationsList successfully', function(done) {
        //uncomment below and update the code to test retailProjectsOperationsList
        //instance.retailProjectsOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
