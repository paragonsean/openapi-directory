/**
 * Vertex AI Search for Retail API
 * Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.VertexAiSearchForRetailApi);
  }
}(this, function(expect, VertexAiSearchForRetailApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2SearchRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GoogleCloudRetailV2SearchRequest', function() {
    it('should create an instance of GoogleCloudRetailV2SearchRequest', function() {
      // uncomment below and update the code to test GoogleCloudRetailV2SearchRequest
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2SearchRequest();
      //expect(instance).to.be.a(VertexAiSearchForRetailApi.GoogleCloudRetailV2SearchRequest);
    });

    it('should have the property boostSpec (base name: "boostSpec")', function() {
      // uncomment below and update the code to test the property boostSpec
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2SearchRequest();
      //expect(instance).to.be();
    });

    it('should have the property branch (base name: "branch")', function() {
      // uncomment below and update the code to test the property branch
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2SearchRequest();
      //expect(instance).to.be();
    });

    it('should have the property canonicalFilter (base name: "canonicalFilter")', function() {
      // uncomment below and update the code to test the property canonicalFilter
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2SearchRequest();
      //expect(instance).to.be();
    });

    it('should have the property dynamicFacetSpec (base name: "dynamicFacetSpec")', function() {
      // uncomment below and update the code to test the property dynamicFacetSpec
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2SearchRequest();
      //expect(instance).to.be();
    });

    it('should have the property entity (base name: "entity")', function() {
      // uncomment below and update the code to test the property entity
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2SearchRequest();
      //expect(instance).to.be();
    });

    it('should have the property facetSpecs (base name: "facetSpecs")', function() {
      // uncomment below and update the code to test the property facetSpecs
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2SearchRequest();
      //expect(instance).to.be();
    });

    it('should have the property filter (base name: "filter")', function() {
      // uncomment below and update the code to test the property filter
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2SearchRequest();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2SearchRequest();
      //expect(instance).to.be();
    });

    it('should have the property offset (base name: "offset")', function() {
      // uncomment below and update the code to test the property offset
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2SearchRequest();
      //expect(instance).to.be();
    });

    it('should have the property orderBy (base name: "orderBy")', function() {
      // uncomment below and update the code to test the property orderBy
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2SearchRequest();
      //expect(instance).to.be();
    });

    it('should have the property pageCategories (base name: "pageCategories")', function() {
      // uncomment below and update the code to test the property pageCategories
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2SearchRequest();
      //expect(instance).to.be();
    });

    it('should have the property pageSize (base name: "pageSize")', function() {
      // uncomment below and update the code to test the property pageSize
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2SearchRequest();
      //expect(instance).to.be();
    });

    it('should have the property pageToken (base name: "pageToken")', function() {
      // uncomment below and update the code to test the property pageToken
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2SearchRequest();
      //expect(instance).to.be();
    });

    it('should have the property personalizationSpec (base name: "personalizationSpec")', function() {
      // uncomment below and update the code to test the property personalizationSpec
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2SearchRequest();
      //expect(instance).to.be();
    });

    it('should have the property query (base name: "query")', function() {
      // uncomment below and update the code to test the property query
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2SearchRequest();
      //expect(instance).to.be();
    });

    it('should have the property queryExpansionSpec (base name: "queryExpansionSpec")', function() {
      // uncomment below and update the code to test the property queryExpansionSpec
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2SearchRequest();
      //expect(instance).to.be();
    });

    it('should have the property searchMode (base name: "searchMode")', function() {
      // uncomment below and update the code to test the property searchMode
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2SearchRequest();
      //expect(instance).to.be();
    });

    it('should have the property spellCorrectionSpec (base name: "spellCorrectionSpec")', function() {
      // uncomment below and update the code to test the property spellCorrectionSpec
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2SearchRequest();
      //expect(instance).to.be();
    });

    it('should have the property userInfo (base name: "userInfo")', function() {
      // uncomment below and update the code to test the property userInfo
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2SearchRequest();
      //expect(instance).to.be();
    });

    it('should have the property variantRollupKeys (base name: "variantRollupKeys")', function() {
      // uncomment below and update the code to test the property variantRollupKeys
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2SearchRequest();
      //expect(instance).to.be();
    });

    it('should have the property visitorId (base name: "visitorId")', function() {
      // uncomment below and update the code to test the property visitorId
      //var instance = new VertexAiSearchForRetailApi.GoogleCloudRetailV2SearchRequest();
      //expect(instance).to.be();
    });

  });

}));
