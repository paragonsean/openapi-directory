/*
 * ACME DNS API
 * Google Domains ACME DNS API that allows users to complete ACME DNS-01 challenges for a domain.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AcmeChallengeSet;
import org.openapitools.client.model.RotateChallengesRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AcmeChallengeSetsApi
 */
@Disabled
public class AcmeChallengeSetsApiTest {

    private final AcmeChallengeSetsApi api = new AcmeChallengeSetsApi();

    /**
     * Gets the ACME challenge set for a given domain name. Domain names must be provided in Punycode.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void acmednsAcmeChallengeSetsGetTest() throws ApiException {
        String rootDomain = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        AcmeChallengeSet response = api.acmednsAcmeChallengeSetsGet(rootDomain, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Rotate the ACME challenges for a given domain name. By default, removes any challenges that are older than 30 days. Domain names must be provided in Punycode.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void acmednsAcmeChallengeSetsRotateChallengesTest() throws ApiException {
        String rootDomain = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        RotateChallengesRequest rotateChallengesRequest = null;
        AcmeChallengeSet response = api.acmednsAcmeChallengeSetsRotateChallenges(rootDomain, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, rotateChallengesRequest);
        // TODO: test validations
    }

}
