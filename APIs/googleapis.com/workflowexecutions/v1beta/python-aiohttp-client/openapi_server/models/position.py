# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Position(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, column: str=None, length: str=None, line: str=None):
        """Position - a model defined in OpenAPI

        :param column: The column of this Position.
        :param length: The length of this Position.
        :param line: The line of this Position.
        """
        self.openapi_types = {
            'column': str,
            'length': str,
            'line': str
        }

        self.attribute_map = {
            'column': 'column',
            'length': 'length',
            'line': 'line'
        }

        self._column = column
        self._length = length
        self._line = line

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Position':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Position of this Position.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def column(self):
        """Gets the column of this Position.

        The source code column position (of the line) the current instruction was generated from.

        :return: The column of this Position.
        :rtype: str
        """
        return self._column

    @column.setter
    def column(self, column):
        """Sets the column of this Position.

        The source code column position (of the line) the current instruction was generated from.

        :param column: The column of this Position.
        :type column: str
        """

        self._column = column

    @property
    def length(self):
        """Gets the length of this Position.

        The number of bytes of source code making up this stack trace element.

        :return: The length of this Position.
        :rtype: str
        """
        return self._length

    @length.setter
    def length(self, length):
        """Sets the length of this Position.

        The number of bytes of source code making up this stack trace element.

        :param length: The length of this Position.
        :type length: str
        """

        self._length = length

    @property
    def line(self):
        """Gets the line of this Position.

        The source code line number the current instruction was generated from.

        :return: The line of this Position.
        :rtype: str
        """
        return self._line

    @line.setter
    def line(self, line):
        """Sets the line of this Position.

        The source code line number the current instruction was generated from.

        :param line: The line of this Position.
        :type line: str
        """

        self._line = line
