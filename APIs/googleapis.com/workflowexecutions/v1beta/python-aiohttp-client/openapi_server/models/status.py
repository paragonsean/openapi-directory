# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.step import Step
from openapi_server import util


class Status(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_steps: List[Step]=None):
        """Status - a model defined in OpenAPI

        :param current_steps: The current_steps of this Status.
        """
        self.openapi_types = {
            'current_steps': List[Step]
        }

        self.attribute_map = {
            'current_steps': 'currentSteps'
        }

        self._current_steps = current_steps

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Status':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Status of this Status.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_steps(self):
        """Gets the current_steps of this Status.

        A list of currently executing or last executed step names for the workflow execution currently running. If the workflow has succeeded or failed, this is the last attempted or executed step. Presently, if the current step is inside a subworkflow, the list only includes that step. In the future, the list will contain items for each step in the call stack, starting with the outermost step in the `main` subworkflow, and ending with the most deeply nested step.

        :return: The current_steps of this Status.
        :rtype: List[Step]
        """
        return self._current_steps

    @current_steps.setter
    def current_steps(self, current_steps):
        """Sets the current_steps of this Status.

        A list of currently executing or last executed step names for the workflow execution currently running. If the workflow has succeeded or failed, this is the last attempted or executed step. Presently, if the current step is inside a subworkflow, the list only includes that step. In the future, the list will contain items for each step in the call stack, starting with the outermost step in the `main` subworkflow, and ending with the most deeply nested step.

        :param current_steps: The current_steps of this Status.
        :type current_steps: List[Step]
        """

        self._current_steps = current_steps
