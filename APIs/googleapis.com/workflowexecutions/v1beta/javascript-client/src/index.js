/**
 * Workflow Executions API
 * Execute workflows created with Workflows API.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Error from './model/Error';
import Execution from './model/Execution';
import ListExecutionsResponse from './model/ListExecutionsResponse';
import Position from './model/Position';
import StackTrace from './model/StackTrace';
import StackTraceElement from './model/StackTraceElement';
import Status from './model/Status';
import Step from './model/Step';
import ProjectsApi from './api/ProjectsApi';


/**
* Execute workflows created with Workflows API..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var WorkflowExecutionsApi = require('index'); // See note below*.
* var xxxSvc = new WorkflowExecutionsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new WorkflowExecutionsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new WorkflowExecutionsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new WorkflowExecutionsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1beta
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The Execution model constructor.
     * @property {module:model/Execution}
     */
    Execution,

    /**
     * The ListExecutionsResponse model constructor.
     * @property {module:model/ListExecutionsResponse}
     */
    ListExecutionsResponse,

    /**
     * The Position model constructor.
     * @property {module:model/Position}
     */
    Position,

    /**
     * The StackTrace model constructor.
     * @property {module:model/StackTrace}
     */
    StackTrace,

    /**
     * The StackTraceElement model constructor.
     * @property {module:model/StackTraceElement}
     */
    StackTraceElement,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The Step model constructor.
     * @property {module:model/Step}
     */
    Step,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi
};
