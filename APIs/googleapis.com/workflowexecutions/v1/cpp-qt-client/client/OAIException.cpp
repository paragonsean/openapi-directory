/**
 * Workflow Executions API
 * Execute workflows created with Workflows API.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIException.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIException::OAIException(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIException::OAIException() {
    this->initializeModel();
}

OAIException::~OAIException() {}

void OAIException::initializeModel() {

    m_payload_isSet = false;
    m_payload_isValid = false;
}

void OAIException::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIException::fromJsonObject(QJsonObject json) {

    m_payload_isValid = ::OpenAPI::fromJsonValue(m_payload, json[QString("payload")]);
    m_payload_isSet = !json[QString("payload")].isNull() && m_payload_isValid;
}

QString OAIException::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIException::asJsonObject() const {
    QJsonObject obj;
    if (m_payload_isSet) {
        obj.insert(QString("payload"), ::OpenAPI::toJsonValue(m_payload));
    }
    return obj;
}

QString OAIException::getPayload() const {
    return m_payload;
}
void OAIException::setPayload(const QString &payload) {
    m_payload = payload;
    m_payload_isSet = true;
}

bool OAIException::is_payload_Set() const{
    return m_payload_isSet;
}

bool OAIException::is_payload_Valid() const{
    return m_payload_isValid;
}

bool OAIException::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_payload_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIException::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
