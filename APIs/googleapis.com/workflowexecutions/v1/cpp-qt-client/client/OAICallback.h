/**
 * Workflow Executions API
 * Execute workflows created with Workflows API.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICallback.h
 *
 * An instance of a Callback created by an execution.
 */

#ifndef OAICallback_H
#define OAICallback_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICallback : public OAIObject {
public:
    OAICallback();
    OAICallback(QString json);
    ~OAICallback() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAvailablePayloads() const;
    void setAvailablePayloads(const QList<QString> &available_payloads);
    bool is_available_payloads_Set() const;
    bool is_available_payloads_Valid() const;

    QString getMethod() const;
    void setMethod(const QString &method);
    bool is_method_Set() const;
    bool is_method_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getWaiters() const;
    void setWaiters(const QString &waiters);
    bool is_waiters_Set() const;
    bool is_waiters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_available_payloads;
    bool m_available_payloads_isSet;
    bool m_available_payloads_isValid;

    QString m_method;
    bool m_method_isSet;
    bool m_method_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_waiters;
    bool m_waiters_isSet;
    bool m_waiters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICallback)

#endif // OAICallback_H
