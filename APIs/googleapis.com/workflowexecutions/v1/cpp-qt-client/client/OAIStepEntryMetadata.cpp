/**
 * Workflow Executions API
 * Execute workflows created with Workflows API.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStepEntryMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStepEntryMetadata::OAIStepEntryMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStepEntryMetadata::OAIStepEntryMetadata() {
    this->initializeModel();
}

OAIStepEntryMetadata::~OAIStepEntryMetadata() {}

void OAIStepEntryMetadata::initializeModel() {

    m_progress_number_isSet = false;
    m_progress_number_isValid = false;

    m_progress_type_isSet = false;
    m_progress_type_isValid = false;

    m_thread_id_isSet = false;
    m_thread_id_isValid = false;
}

void OAIStepEntryMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStepEntryMetadata::fromJsonObject(QJsonObject json) {

    m_progress_number_isValid = ::OpenAPI::fromJsonValue(m_progress_number, json[QString("progressNumber")]);
    m_progress_number_isSet = !json[QString("progressNumber")].isNull() && m_progress_number_isValid;

    m_progress_type_isValid = ::OpenAPI::fromJsonValue(m_progress_type, json[QString("progressType")]);
    m_progress_type_isSet = !json[QString("progressType")].isNull() && m_progress_type_isValid;

    m_thread_id_isValid = ::OpenAPI::fromJsonValue(m_thread_id, json[QString("threadId")]);
    m_thread_id_isSet = !json[QString("threadId")].isNull() && m_thread_id_isValid;
}

QString OAIStepEntryMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStepEntryMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_progress_number_isSet) {
        obj.insert(QString("progressNumber"), ::OpenAPI::toJsonValue(m_progress_number));
    }
    if (m_progress_type_isSet) {
        obj.insert(QString("progressType"), ::OpenAPI::toJsonValue(m_progress_type));
    }
    if (m_thread_id_isSet) {
        obj.insert(QString("threadId"), ::OpenAPI::toJsonValue(m_thread_id));
    }
    return obj;
}

QString OAIStepEntryMetadata::getProgressNumber() const {
    return m_progress_number;
}
void OAIStepEntryMetadata::setProgressNumber(const QString &progress_number) {
    m_progress_number = progress_number;
    m_progress_number_isSet = true;
}

bool OAIStepEntryMetadata::is_progress_number_Set() const{
    return m_progress_number_isSet;
}

bool OAIStepEntryMetadata::is_progress_number_Valid() const{
    return m_progress_number_isValid;
}

QString OAIStepEntryMetadata::getProgressType() const {
    return m_progress_type;
}
void OAIStepEntryMetadata::setProgressType(const QString &progress_type) {
    m_progress_type = progress_type;
    m_progress_type_isSet = true;
}

bool OAIStepEntryMetadata::is_progress_type_Set() const{
    return m_progress_type_isSet;
}

bool OAIStepEntryMetadata::is_progress_type_Valid() const{
    return m_progress_type_isValid;
}

QString OAIStepEntryMetadata::getThreadId() const {
    return m_thread_id;
}
void OAIStepEntryMetadata::setThreadId(const QString &thread_id) {
    m_thread_id = thread_id;
    m_thread_id_isSet = true;
}

bool OAIStepEntryMetadata::is_thread_id_Set() const{
    return m_thread_id_isSet;
}

bool OAIStepEntryMetadata::is_thread_id_Valid() const{
    return m_thread_id_isValid;
}

bool OAIStepEntryMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_progress_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_progress_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_thread_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStepEntryMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
