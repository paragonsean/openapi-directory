# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StepEntryMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, progress_number: str=None, progress_type: str=None, thread_id: str=None):
        """StepEntryMetadata - a model defined in OpenAPI

        :param progress_number: The progress_number of this StepEntryMetadata.
        :param progress_type: The progress_type of this StepEntryMetadata.
        :param thread_id: The thread_id of this StepEntryMetadata.
        """
        self.openapi_types = {
            'progress_number': str,
            'progress_type': str,
            'thread_id': str
        }

        self.attribute_map = {
            'progress_number': 'progressNumber',
            'progress_type': 'progressType',
            'thread_id': 'threadId'
        }

        self._progress_number = progress_number
        self._progress_type = progress_type
        self._thread_id = thread_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StepEntryMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StepEntryMetadata of this StepEntryMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def progress_number(self):
        """Gets the progress_number of this StepEntryMetadata.

        Progress number represents the current state of the current progress. eg: A step entry represents the 4th iteration in a progress of PROGRESS_TYPE_FOR.

        :return: The progress_number of this StepEntryMetadata.
        :rtype: str
        """
        return self._progress_number

    @progress_number.setter
    def progress_number(self, progress_number):
        """Sets the progress_number of this StepEntryMetadata.

        Progress number represents the current state of the current progress. eg: A step entry represents the 4th iteration in a progress of PROGRESS_TYPE_FOR.

        :param progress_number: The progress_number of this StepEntryMetadata.
        :type progress_number: str
        """

        self._progress_number = progress_number

    @property
    def progress_type(self):
        """Gets the progress_type of this StepEntryMetadata.

        Progress type of this step entry.

        :return: The progress_type of this StepEntryMetadata.
        :rtype: str
        """
        return self._progress_type

    @progress_type.setter
    def progress_type(self, progress_type):
        """Sets the progress_type of this StepEntryMetadata.

        Progress type of this step entry.

        :param progress_type: The progress_type of this StepEntryMetadata.
        :type progress_type: str
        """
        allowed_values = ["PROGRESS_TYPE_UNSPECIFIED", "PROGRESS_TYPE_FOR", "PROGRESS_TYPE_SWITCH", "PROGRESS_TYPE_RETRY", "PROGRESS_TYPE_PARALLEL_FOR", "PROGRESS_TYPE_PARALLEL_BRANCH"]  # noqa: E501
        if progress_type not in allowed_values:
            raise ValueError(
                "Invalid value for `progress_type` ({0}), must be one of {1}"
                .format(progress_type, allowed_values)
            )

        self._progress_type = progress_type

    @property
    def thread_id(self):
        """Gets the thread_id of this StepEntryMetadata.

        Child thread id that this step entry belongs to.

        :return: The thread_id of this StepEntryMetadata.
        :rtype: str
        """
        return self._thread_id

    @thread_id.setter
    def thread_id(self, thread_id):
        """Sets the thread_id of this StepEntryMetadata.

        Child thread id that this step entry belongs to.

        :param thread_id: The thread_id of this StepEntryMetadata.
        :type thread_id: str
        """

        self._thread_id = thread_id
