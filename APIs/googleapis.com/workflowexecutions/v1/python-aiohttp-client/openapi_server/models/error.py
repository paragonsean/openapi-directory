# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.stack_trace import StackTrace
from openapi_server import util


class Error(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, context: str=None, payload: str=None, stack_trace: StackTrace=None):
        """Error - a model defined in OpenAPI

        :param context: The context of this Error.
        :param payload: The payload of this Error.
        :param stack_trace: The stack_trace of this Error.
        """
        self.openapi_types = {
            'context': str,
            'payload': str,
            'stack_trace': StackTrace
        }

        self.attribute_map = {
            'context': 'context',
            'payload': 'payload',
            'stack_trace': 'stackTrace'
        }

        self._context = context
        self._payload = payload
        self._stack_trace = stack_trace

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Error':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Error of this Error.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def context(self):
        """Gets the context of this Error.

        Human-readable stack trace string.

        :return: The context of this Error.
        :rtype: str
        """
        return self._context

    @context.setter
    def context(self, context):
        """Sets the context of this Error.

        Human-readable stack trace string.

        :param context: The context of this Error.
        :type context: str
        """

        self._context = context

    @property
    def payload(self):
        """Gets the payload of this Error.

        Error message and data returned represented as a JSON string.

        :return: The payload of this Error.
        :rtype: str
        """
        return self._payload

    @payload.setter
    def payload(self, payload):
        """Sets the payload of this Error.

        Error message and data returned represented as a JSON string.

        :param payload: The payload of this Error.
        :type payload: str
        """

        self._payload = payload

    @property
    def stack_trace(self):
        """Gets the stack_trace of this Error.


        :return: The stack_trace of this Error.
        :rtype: StackTrace
        """
        return self._stack_trace

    @stack_trace.setter
    def stack_trace(self, stack_trace):
        """Sets the stack_trace of this Error.


        :param stack_trace: The stack_trace of this Error.
        :type stack_trace: StackTrace
        """

        self._stack_trace = stack_trace
