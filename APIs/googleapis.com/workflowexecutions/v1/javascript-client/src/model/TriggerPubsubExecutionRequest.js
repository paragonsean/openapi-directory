/**
 * Workflow Executions API
 * Execute workflows created with Workflows API.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PubsubMessage from './PubsubMessage';

/**
 * The TriggerPubsubExecutionRequest model module.
 * @module model/TriggerPubsubExecutionRequest
 * @version v1
 */
class TriggerPubsubExecutionRequest {
    /**
     * Constructs a new <code>TriggerPubsubExecutionRequest</code>.
     * Request for the TriggerPubsubExecution method.
     * @alias module:model/TriggerPubsubExecutionRequest
     */
    constructor() { 
        
        TriggerPubsubExecutionRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TriggerPubsubExecutionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TriggerPubsubExecutionRequest} obj Optional instance to populate.
     * @return {module:model/TriggerPubsubExecutionRequest} The populated <code>TriggerPubsubExecutionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TriggerPubsubExecutionRequest();

            if (data.hasOwnProperty('GCPCloudEventsMode')) {
                obj['GCPCloudEventsMode'] = ApiClient.convertToType(data['GCPCloudEventsMode'], 'String');
            }
            if (data.hasOwnProperty('deliveryAttempt')) {
                obj['deliveryAttempt'] = ApiClient.convertToType(data['deliveryAttempt'], 'Number');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = PubsubMessage.constructFromObject(data['message']);
            }
            if (data.hasOwnProperty('subscription')) {
                obj['subscription'] = ApiClient.convertToType(data['subscription'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TriggerPubsubExecutionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TriggerPubsubExecutionRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['GCPCloudEventsMode'] && !(typeof data['GCPCloudEventsMode'] === 'string' || data['GCPCloudEventsMode'] instanceof String)) {
            throw new Error("Expected the field `GCPCloudEventsMode` to be a primitive type in the JSON string but got " + data['GCPCloudEventsMode']);
        }
        // validate the optional field `message`
        if (data['message']) { // data not null
          PubsubMessage.validateJSON(data['message']);
        }
        // ensure the json data is a string
        if (data['subscription'] && !(typeof data['subscription'] === 'string' || data['subscription'] instanceof String)) {
            throw new Error("Expected the field `subscription` to be a primitive type in the JSON string but got " + data['subscription']);
        }

        return true;
    }


}



/**
 * Required. LINT: LEGACY_NAMES The query parameter value for __GCP_CloudEventsMode, set by the Eventarc service when configuring triggers.
 * @member {String} GCPCloudEventsMode
 */
TriggerPubsubExecutionRequest.prototype['GCPCloudEventsMode'] = undefined;

/**
 * The number of attempts that have been made to deliver this message. This is set by Pub/Sub for subscriptions that have the \"dead letter\" feature enabled, and hence provided here for compatibility, but is ignored by Workflows.
 * @member {Number} deliveryAttempt
 */
TriggerPubsubExecutionRequest.prototype['deliveryAttempt'] = undefined;

/**
 * @member {module:model/PubsubMessage} message
 */
TriggerPubsubExecutionRequest.prototype['message'] = undefined;

/**
 * Required. The subscription of the Pub/Sub push notification. Format: projects/{project}/subscriptions/{sub}
 * @member {String} subscription
 */
TriggerPubsubExecutionRequest.prototype['subscription'] = undefined;






export default TriggerPubsubExecutionRequest;

