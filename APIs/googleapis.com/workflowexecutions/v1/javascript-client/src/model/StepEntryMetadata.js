/**
 * Workflow Executions API
 * Execute workflows created with Workflows API.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StepEntryMetadata model module.
 * @module model/StepEntryMetadata
 * @version v1
 */
class StepEntryMetadata {
    /**
     * Constructs a new <code>StepEntryMetadata</code>.
     * StepEntryMetadata contains metadata information about this step.
     * @alias module:model/StepEntryMetadata
     */
    constructor() { 
        
        StepEntryMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StepEntryMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StepEntryMetadata} obj Optional instance to populate.
     * @return {module:model/StepEntryMetadata} The populated <code>StepEntryMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StepEntryMetadata();

            if (data.hasOwnProperty('progressNumber')) {
                obj['progressNumber'] = ApiClient.convertToType(data['progressNumber'], 'String');
            }
            if (data.hasOwnProperty('progressType')) {
                obj['progressType'] = ApiClient.convertToType(data['progressType'], 'String');
            }
            if (data.hasOwnProperty('threadId')) {
                obj['threadId'] = ApiClient.convertToType(data['threadId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StepEntryMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StepEntryMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['progressNumber'] && !(typeof data['progressNumber'] === 'string' || data['progressNumber'] instanceof String)) {
            throw new Error("Expected the field `progressNumber` to be a primitive type in the JSON string but got " + data['progressNumber']);
        }
        // ensure the json data is a string
        if (data['progressType'] && !(typeof data['progressType'] === 'string' || data['progressType'] instanceof String)) {
            throw new Error("Expected the field `progressType` to be a primitive type in the JSON string but got " + data['progressType']);
        }
        // ensure the json data is a string
        if (data['threadId'] && !(typeof data['threadId'] === 'string' || data['threadId'] instanceof String)) {
            throw new Error("Expected the field `threadId` to be a primitive type in the JSON string but got " + data['threadId']);
        }

        return true;
    }


}



/**
 * Progress number represents the current state of the current progress. eg: A step entry represents the 4th iteration in a progress of PROGRESS_TYPE_FOR.
 * @member {String} progressNumber
 */
StepEntryMetadata.prototype['progressNumber'] = undefined;

/**
 * Progress type of this step entry.
 * @member {module:model/StepEntryMetadata.ProgressTypeEnum} progressType
 */
StepEntryMetadata.prototype['progressType'] = undefined;

/**
 * Child thread id that this step entry belongs to.
 * @member {String} threadId
 */
StepEntryMetadata.prototype['threadId'] = undefined;





/**
 * Allowed values for the <code>progressType</code> property.
 * @enum {String}
 * @readonly
 */
StepEntryMetadata['ProgressTypeEnum'] = {

    /**
     * value: "PROGRESS_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "PROGRESS_TYPE_UNSPECIFIED",

    /**
     * value: "PROGRESS_TYPE_FOR"
     * @const
     */
    "FOR": "PROGRESS_TYPE_FOR",

    /**
     * value: "PROGRESS_TYPE_SWITCH"
     * @const
     */
    "SWITCH": "PROGRESS_TYPE_SWITCH",

    /**
     * value: "PROGRESS_TYPE_RETRY"
     * @const
     */
    "RETRY": "PROGRESS_TYPE_RETRY",

    /**
     * value: "PROGRESS_TYPE_PARALLEL_FOR"
     * @const
     */
    "PARALLEL_FOR": "PROGRESS_TYPE_PARALLEL_FOR",

    /**
     * value: "PROGRESS_TYPE_PARALLEL_BRANCH"
     * @const
     */
    "PARALLEL_BRANCH": "PROGRESS_TYPE_PARALLEL_BRANCH"
};



export default StepEntryMetadata;

