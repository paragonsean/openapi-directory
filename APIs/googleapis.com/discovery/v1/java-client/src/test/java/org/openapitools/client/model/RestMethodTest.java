/*
 * API Discovery Service
 * Provides information about other Google APIs, such as what APIs are available, the resource, and method details for each API.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.JsonSchema;
import org.openapitools.client.model.RestMethodMediaUpload;
import org.openapitools.client.model.RestMethodRequest;
import org.openapitools.client.model.RestMethodResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for RestMethod
 */
public class RestMethodTest {
    private final RestMethod model = new RestMethod();

    /**
     * Model tests for RestMethod
     */
    @Test
    public void testRestMethod() {
        // TODO: test RestMethod
    }

    /**
     * Test the property 'deprecated'
     */
    @Test
    public void deprecatedTest() {
        // TODO: test deprecated
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'etagRequired'
     */
    @Test
    public void etagRequiredTest() {
        // TODO: test etagRequired
    }

    /**
     * Test the property 'flatPath'
     */
    @Test
    public void flatPathTest() {
        // TODO: test flatPath
    }

    /**
     * Test the property 'httpMethod'
     */
    @Test
    public void httpMethodTest() {
        // TODO: test httpMethod
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'mediaUpload'
     */
    @Test
    public void mediaUploadTest() {
        // TODO: test mediaUpload
    }

    /**
     * Test the property 'parameterOrder'
     */
    @Test
    public void parameterOrderTest() {
        // TODO: test parameterOrder
    }

    /**
     * Test the property 'parameters'
     */
    @Test
    public void parametersTest() {
        // TODO: test parameters
    }

    /**
     * Test the property 'path'
     */
    @Test
    public void pathTest() {
        // TODO: test path
    }

    /**
     * Test the property 'request'
     */
    @Test
    public void requestTest() {
        // TODO: test request
    }

    /**
     * Test the property 'response'
     */
    @Test
    public void responseTest() {
        // TODO: test response
    }

    /**
     * Test the property 'scopes'
     */
    @Test
    public void scopesTest() {
        // TODO: test scopes
    }

    /**
     * Test the property 'supportsMediaDownload'
     */
    @Test
    public void supportsMediaDownloadTest() {
        // TODO: test supportsMediaDownload
    }

    /**
     * Test the property 'supportsMediaUpload'
     */
    @Test
    public void supportsMediaUploadTest() {
        // TODO: test supportsMediaUpload
    }

    /**
     * Test the property 'supportsSubscription'
     */
    @Test
    public void supportsSubscriptionTest() {
        // TODO: test supportsSubscription
    }

    /**
     * Test the property 'useMediaDownloadService'
     */
    @Test
    public void useMediaDownloadServiceTest() {
        // TODO: test useMediaDownloadService
    }

}
