/*
 * API Discovery Service
 * Provides information about other Google APIs, such as what APIs are available, the resource, and method details for each API.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.JsonSchemaAnnotations;
import org.openapitools.client.model.JsonSchemaVariant;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for JsonSchema
 */
public class JsonSchemaTest {
    private final JsonSchema model = new JsonSchema();

    /**
     * Model tests for JsonSchema
     */
    @Test
    public void testJsonSchema() {
        // TODO: test JsonSchema
    }

    /**
     * Test the property '$ref'
     */
    @Test
    public void $refTest() {
        // TODO: test $ref
    }

    /**
     * Test the property 'additionalProperties'
     */
    @Test
    public void additionalPropertiesTest() {
        // TODO: test additionalProperties
    }

    /**
     * Test the property 'annotations'
     */
    @Test
    public void annotationsTest() {
        // TODO: test annotations
    }

    /**
     * Test the property 'deprecated'
     */
    @Test
    public void deprecatedTest() {
        // TODO: test deprecated
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property '_enum'
     */
    @Test
    public void _enumTest() {
        // TODO: test _enum
    }

    /**
     * Test the property 'enumDeprecated'
     */
    @Test
    public void enumDeprecatedTest() {
        // TODO: test enumDeprecated
    }

    /**
     * Test the property 'enumDescriptions'
     */
    @Test
    public void enumDescriptionsTest() {
        // TODO: test enumDescriptions
    }

    /**
     * Test the property 'format'
     */
    @Test
    public void formatTest() {
        // TODO: test format
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'items'
     */
    @Test
    public void itemsTest() {
        // TODO: test items
    }

    /**
     * Test the property 'location'
     */
    @Test
    public void locationTest() {
        // TODO: test location
    }

    /**
     * Test the property 'maximum'
     */
    @Test
    public void maximumTest() {
        // TODO: test maximum
    }

    /**
     * Test the property 'minimum'
     */
    @Test
    public void minimumTest() {
        // TODO: test minimum
    }

    /**
     * Test the property 'pattern'
     */
    @Test
    public void patternTest() {
        // TODO: test pattern
    }

    /**
     * Test the property 'properties'
     */
    @Test
    public void propertiesTest() {
        // TODO: test properties
    }

    /**
     * Test the property 'readOnly'
     */
    @Test
    public void readOnlyTest() {
        // TODO: test readOnly
    }

    /**
     * Test the property 'repeated'
     */
    @Test
    public void repeatedTest() {
        // TODO: test repeated
    }

    /**
     * Test the property 'required'
     */
    @Test
    public void requiredTest() {
        // TODO: test required
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'variant'
     */
    @Test
    public void variantTest() {
        // TODO: test variant
    }

}
