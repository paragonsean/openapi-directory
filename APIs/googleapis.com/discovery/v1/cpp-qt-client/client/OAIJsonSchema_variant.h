/**
 * API Discovery Service
 * Provides information about other Google APIs, such as what APIs are available, the resource, and method details for each API.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJsonSchema_variant.h
 *
 * In a variant data type, the value of one property is used to determine how to interpret the entire entity. Its value must exist in a map of descriminant values to schema names.
 */

#ifndef OAIJsonSchema_variant_H
#define OAIJsonSchema_variant_H

#include <QJsonObject>

#include "OAIJsonSchema_variant_map_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIJsonSchema_variant_map_inner;

class OAIJsonSchema_variant : public OAIObject {
public:
    OAIJsonSchema_variant();
    OAIJsonSchema_variant(QString json);
    ~OAIJsonSchema_variant() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDiscriminant() const;
    void setDiscriminant(const QString &discriminant);
    bool is_discriminant_Set() const;
    bool is_discriminant_Valid() const;

    QList<OAIJsonSchema_variant_map_inner> getMap() const;
    void setMap(const QList<OAIJsonSchema_variant_map_inner> &map);
    bool is_map_Set() const;
    bool is_map_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_discriminant;
    bool m_discriminant_isSet;
    bool m_discriminant_isValid;

    QList<OAIJsonSchema_variant_map_inner> m_map;
    bool m_map_isSet;
    bool m_map_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJsonSchema_variant)

#endif // OAIJsonSchema_variant_H
