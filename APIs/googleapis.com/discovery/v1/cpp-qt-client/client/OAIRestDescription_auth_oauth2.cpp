/**
 * API Discovery Service
 * Provides information about other Google APIs, such as what APIs are available, the resource, and method details for each API.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRestDescription_auth_oauth2.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRestDescription_auth_oauth2::OAIRestDescription_auth_oauth2(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRestDescription_auth_oauth2::OAIRestDescription_auth_oauth2() {
    this->initializeModel();
}

OAIRestDescription_auth_oauth2::~OAIRestDescription_auth_oauth2() {}

void OAIRestDescription_auth_oauth2::initializeModel() {

    m_scopes_isSet = false;
    m_scopes_isValid = false;
}

void OAIRestDescription_auth_oauth2::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRestDescription_auth_oauth2::fromJsonObject(QJsonObject json) {

    m_scopes_isValid = ::OpenAPI::fromJsonValue(m_scopes, json[QString("scopes")]);
    m_scopes_isSet = !json[QString("scopes")].isNull() && m_scopes_isValid;
}

QString OAIRestDescription_auth_oauth2::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRestDescription_auth_oauth2::asJsonObject() const {
    QJsonObject obj;
    if (m_scopes.size() > 0) {
        obj.insert(QString("scopes"), ::OpenAPI::toJsonValue(m_scopes));
    }
    return obj;
}

QMap<QString, OAIRestDescription_auth_oauth2_scopes_value> OAIRestDescription_auth_oauth2::getScopes() const {
    return m_scopes;
}
void OAIRestDescription_auth_oauth2::setScopes(const QMap<QString, OAIRestDescription_auth_oauth2_scopes_value> &scopes) {
    m_scopes = scopes;
    m_scopes_isSet = true;
}

bool OAIRestDescription_auth_oauth2::is_scopes_Set() const{
    return m_scopes_isSet;
}

bool OAIRestDescription_auth_oauth2::is_scopes_Valid() const{
    return m_scopes_isValid;
}

bool OAIRestDescription_auth_oauth2::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_scopes.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRestDescription_auth_oauth2::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
