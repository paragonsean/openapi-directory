/**
 * API Discovery Service
 * Provides information about other Google APIs, such as what APIs are available, the resource, and method details for each API.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRestDescription.h
 *
 * 
 */

#ifndef OAIRestDescription_H
#define OAIRestDescription_H

#include <QJsonObject>

#include "OAIDirectoryList_items_inner_icons.h"
#include "OAIJsonSchema.h"
#include "OAIRestDescription_auth.h"
#include "OAIRestDescription_endpoints_inner.h"
#include "OAIRestMethod.h"
#include "OAIRestResource.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRestDescription_auth;
class OAIRestDescription_endpoints_inner;
class OAIDirectoryList_items_inner_icons;
class OAIRestMethod;
class OAIJsonSchema;
class OAIRestResource;

class OAIRestDescription : public OAIObject {
public:
    OAIRestDescription();
    OAIRestDescription(QString json);
    ~OAIRestDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRestDescription_auth getAuth() const;
    void setAuth(const OAIRestDescription_auth &auth);
    bool is_auth_Set() const;
    bool is_auth_Valid() const;

    QString getBasePath() const;
    void setBasePath(const QString &base_path);
    bool is_base_path_Set() const;
    bool is_base_path_Valid() const;

    QString getBaseUrl() const;
    void setBaseUrl(const QString &base_url);
    bool is_base_url_Set() const;
    bool is_base_url_Valid() const;

    QString getBatchPath() const;
    void setBatchPath(const QString &batch_path);
    bool is_batch_path_Set() const;
    bool is_batch_path_Valid() const;

    QString getCanonicalName() const;
    void setCanonicalName(const QString &canonical_name);
    bool is_canonical_name_Set() const;
    bool is_canonical_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDiscoveryVersion() const;
    void setDiscoveryVersion(const QString &discovery_version);
    bool is_discovery_version_Set() const;
    bool is_discovery_version_Valid() const;

    QString getDocumentationLink() const;
    void setDocumentationLink(const QString &documentation_link);
    bool is_documentation_link_Set() const;
    bool is_documentation_link_Valid() const;

    QList<OAIRestDescription_endpoints_inner> getEndpoints() const;
    void setEndpoints(const QList<OAIRestDescription_endpoints_inner> &endpoints);
    bool is_endpoints_Set() const;
    bool is_endpoints_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    bool isExponentialBackoffDefault() const;
    void setExponentialBackoffDefault(const bool &exponential_backoff_default);
    bool is_exponential_backoff_default_Set() const;
    bool is_exponential_backoff_default_Valid() const;

    QList<QString> getFeatures() const;
    void setFeatures(const QList<QString> &features);
    bool is_features_Set() const;
    bool is_features_Valid() const;

    OAIDirectoryList_items_inner_icons getIcons() const;
    void setIcons(const OAIDirectoryList_items_inner_icons &icons);
    bool is_icons_Set() const;
    bool is_icons_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QList<QString> getLabels() const;
    void setLabels(const QList<QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QMap<QString, OAIRestMethod> getMethods() const;
    void setMethods(const QMap<QString, OAIRestMethod> &methods);
    bool is_methods_Set() const;
    bool is_methods_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOwnerDomain() const;
    void setOwnerDomain(const QString &owner_domain);
    bool is_owner_domain_Set() const;
    bool is_owner_domain_Valid() const;

    QString getOwnerName() const;
    void setOwnerName(const QString &owner_name);
    bool is_owner_name_Set() const;
    bool is_owner_name_Valid() const;

    QString getPackagePath() const;
    void setPackagePath(const QString &package_path);
    bool is_package_path_Set() const;
    bool is_package_path_Valid() const;

    QMap<QString, OAIJsonSchema> getParameters() const;
    void setParameters(const QMap<QString, OAIJsonSchema> &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QString getProtocol() const;
    void setProtocol(const QString &protocol);
    bool is_protocol_Set() const;
    bool is_protocol_Valid() const;

    QMap<QString, OAIRestResource> getResources() const;
    void setResources(const QMap<QString, OAIRestResource> &resources);
    bool is_resources_Set() const;
    bool is_resources_Valid() const;

    QString getRevision() const;
    void setRevision(const QString &revision);
    bool is_revision_Set() const;
    bool is_revision_Valid() const;

    QString getRootUrl() const;
    void setRootUrl(const QString &root_url);
    bool is_root_url_Set() const;
    bool is_root_url_Valid() const;

    QMap<QString, OAIJsonSchema> getSchemas() const;
    void setSchemas(const QMap<QString, OAIJsonSchema> &schemas);
    bool is_schemas_Set() const;
    bool is_schemas_Valid() const;

    QString getServicePath() const;
    void setServicePath(const QString &service_path);
    bool is_service_path_Set() const;
    bool is_service_path_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    bool isVersionModule() const;
    void setVersionModule(const bool &version_module);
    bool is_version_module_Set() const;
    bool is_version_module_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRestDescription_auth m_auth;
    bool m_auth_isSet;
    bool m_auth_isValid;

    QString m_base_path;
    bool m_base_path_isSet;
    bool m_base_path_isValid;

    QString m_base_url;
    bool m_base_url_isSet;
    bool m_base_url_isValid;

    QString m_batch_path;
    bool m_batch_path_isSet;
    bool m_batch_path_isValid;

    QString m_canonical_name;
    bool m_canonical_name_isSet;
    bool m_canonical_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_discovery_version;
    bool m_discovery_version_isSet;
    bool m_discovery_version_isValid;

    QString m_documentation_link;
    bool m_documentation_link_isSet;
    bool m_documentation_link_isValid;

    QList<OAIRestDescription_endpoints_inner> m_endpoints;
    bool m_endpoints_isSet;
    bool m_endpoints_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    bool m_exponential_backoff_default;
    bool m_exponential_backoff_default_isSet;
    bool m_exponential_backoff_default_isValid;

    QList<QString> m_features;
    bool m_features_isSet;
    bool m_features_isValid;

    OAIDirectoryList_items_inner_icons m_icons;
    bool m_icons_isSet;
    bool m_icons_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QList<QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QMap<QString, OAIRestMethod> m_methods;
    bool m_methods_isSet;
    bool m_methods_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_owner_domain;
    bool m_owner_domain_isSet;
    bool m_owner_domain_isValid;

    QString m_owner_name;
    bool m_owner_name_isSet;
    bool m_owner_name_isValid;

    QString m_package_path;
    bool m_package_path_isSet;
    bool m_package_path_isValid;

    QMap<QString, OAIJsonSchema> m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QString m_protocol;
    bool m_protocol_isSet;
    bool m_protocol_isValid;

    QMap<QString, OAIRestResource> m_resources;
    bool m_resources_isSet;
    bool m_resources_isValid;

    QString m_revision;
    bool m_revision_isSet;
    bool m_revision_isValid;

    QString m_root_url;
    bool m_root_url_isSet;
    bool m_root_url_isValid;

    QMap<QString, OAIJsonSchema> m_schemas;
    bool m_schemas_isSet;
    bool m_schemas_isValid;

    QString m_service_path;
    bool m_service_path_isSet;
    bool m_service_path_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    bool m_version_module;
    bool m_version_module_isSet;
    bool m_version_module_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRestDescription)

#endif // OAIRestDescription_H
