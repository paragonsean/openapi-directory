/**
 * API Discovery Service
 * Provides information about other Google APIs, such as what APIs are available, the resource, and method details for each API.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRestDescription_auth.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRestDescription_auth::OAIRestDescription_auth(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRestDescription_auth::OAIRestDescription_auth() {
    this->initializeModel();
}

OAIRestDescription_auth::~OAIRestDescription_auth() {}

void OAIRestDescription_auth::initializeModel() {

    m_oauth2_isSet = false;
    m_oauth2_isValid = false;
}

void OAIRestDescription_auth::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRestDescription_auth::fromJsonObject(QJsonObject json) {

    m_oauth2_isValid = ::OpenAPI::fromJsonValue(m_oauth2, json[QString("oauth2")]);
    m_oauth2_isSet = !json[QString("oauth2")].isNull() && m_oauth2_isValid;
}

QString OAIRestDescription_auth::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRestDescription_auth::asJsonObject() const {
    QJsonObject obj;
    if (m_oauth2.isSet()) {
        obj.insert(QString("oauth2"), ::OpenAPI::toJsonValue(m_oauth2));
    }
    return obj;
}

OAIRestDescription_auth_oauth2 OAIRestDescription_auth::getOauth2() const {
    return m_oauth2;
}
void OAIRestDescription_auth::setOauth2(const OAIRestDescription_auth_oauth2 &oauth2) {
    m_oauth2 = oauth2;
    m_oauth2_isSet = true;
}

bool OAIRestDescription_auth::is_oauth2_Set() const{
    return m_oauth2_isSet;
}

bool OAIRestDescription_auth::is_oauth2_Valid() const{
    return m_oauth2_isValid;
}

bool OAIRestDescription_auth::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_oauth2.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRestDescription_auth::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
