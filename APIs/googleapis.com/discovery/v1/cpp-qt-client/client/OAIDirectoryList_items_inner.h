/**
 * API Discovery Service
 * Provides information about other Google APIs, such as what APIs are available, the resource, and method details for each API.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDirectoryList_items_inner.h
 *
 * 
 */

#ifndef OAIDirectoryList_items_inner_H
#define OAIDirectoryList_items_inner_H

#include <QJsonObject>

#include "OAIDirectoryList_items_inner_icons.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDirectoryList_items_inner_icons;

class OAIDirectoryList_items_inner : public OAIObject {
public:
    OAIDirectoryList_items_inner();
    OAIDirectoryList_items_inner(QString json);
    ~OAIDirectoryList_items_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDiscoveryLink() const;
    void setDiscoveryLink(const QString &discovery_link);
    bool is_discovery_link_Set() const;
    bool is_discovery_link_Valid() const;

    QString getDiscoveryRestUrl() const;
    void setDiscoveryRestUrl(const QString &discovery_rest_url);
    bool is_discovery_rest_url_Set() const;
    bool is_discovery_rest_url_Valid() const;

    QString getDocumentationLink() const;
    void setDocumentationLink(const QString &documentation_link);
    bool is_documentation_link_Set() const;
    bool is_documentation_link_Valid() const;

    OAIDirectoryList_items_inner_icons getIcons() const;
    void setIcons(const OAIDirectoryList_items_inner_icons &icons);
    bool is_icons_Set() const;
    bool is_icons_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QList<QString> getLabels() const;
    void setLabels(const QList<QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isPreferred() const;
    void setPreferred(const bool &preferred);
    bool is_preferred_Set() const;
    bool is_preferred_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_discovery_link;
    bool m_discovery_link_isSet;
    bool m_discovery_link_isValid;

    QString m_discovery_rest_url;
    bool m_discovery_rest_url_isSet;
    bool m_discovery_rest_url_isValid;

    QString m_documentation_link;
    bool m_documentation_link_isSet;
    bool m_documentation_link_isValid;

    OAIDirectoryList_items_inner_icons m_icons;
    bool m_icons_isSet;
    bool m_icons_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QList<QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_preferred;
    bool m_preferred_isSet;
    bool m_preferred_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDirectoryList_items_inner)

#endif // OAIDirectoryList_items_inner_H
