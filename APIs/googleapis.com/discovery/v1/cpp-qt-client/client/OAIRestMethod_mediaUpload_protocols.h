/**
 * API Discovery Service
 * Provides information about other Google APIs, such as what APIs are available, the resource, and method details for each API.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRestMethod_mediaUpload_protocols.h
 *
 * Supported upload protocols.
 */

#ifndef OAIRestMethod_mediaUpload_protocols_H
#define OAIRestMethod_mediaUpload_protocols_H

#include <QJsonObject>

#include "OAIRestMethod_mediaUpload_protocols_resumable.h"
#include "OAIRestMethod_mediaUpload_protocols_simple.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRestMethod_mediaUpload_protocols_resumable;
class OAIRestMethod_mediaUpload_protocols_simple;

class OAIRestMethod_mediaUpload_protocols : public OAIObject {
public:
    OAIRestMethod_mediaUpload_protocols();
    OAIRestMethod_mediaUpload_protocols(QString json);
    ~OAIRestMethod_mediaUpload_protocols() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRestMethod_mediaUpload_protocols_resumable getResumable() const;
    void setResumable(const OAIRestMethod_mediaUpload_protocols_resumable &resumable);
    bool is_resumable_Set() const;
    bool is_resumable_Valid() const;

    OAIRestMethod_mediaUpload_protocols_simple getSimple() const;
    void setSimple(const OAIRestMethod_mediaUpload_protocols_simple &simple);
    bool is_simple_Set() const;
    bool is_simple_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRestMethod_mediaUpload_protocols_resumable m_resumable;
    bool m_resumable_isSet;
    bool m_resumable_isValid;

    OAIRestMethod_mediaUpload_protocols_simple m_simple;
    bool m_simple_isSet;
    bool m_simple_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRestMethod_mediaUpload_protocols)

#endif // OAIRestMethod_mediaUpload_protocols_H
