openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: "Provides information about other Google APIs, such as what APIs are\
    \ available, the resource, and method details for each API."
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: API Discovery Service
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - format: google
    url: https://discovery.googleapis.com/$discovery/rest?version=v1
    version: v1
  x-providerName: googleapis.com
  x-serviceName: discovery
externalDocs:
  url: https://developers.google.com/discovery/
servers:
- url: https://www.googleapis.com/discovery/v1
tags:
- name: apis
paths:
  /apis:
    get:
      description: Retrieve the list of APIs supported at this endpoint.
      operationId: discovery_apis_list
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      - description: Only include APIs with the given name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Return only the preferred version of an API.
        explode: true
        in: query
        name: preferred
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryList'
          description: Successful response
      tags:
      - apis
      x-openapi-router-controller: openapi_server.controllers.apis_controller
  /apis/{api}/{version}/rest:
    get:
      description: Retrieve the description of a particular version of an api.
      operationId: discovery_apis_get_rest
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      - description: The name of the API.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: The version of the API.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestDescription'
          description: Successful response
      tags:
      - apis
      x-openapi-router-controller: openapi_server.controllers.apis_controller
components:
  parameters:
    alt:
      description: Data format for the response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must
        not exceed 40 characters.
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    userIp:
      description: Deprecated. Please use quotaUser instead.
      explode: true
      in: query
      name: userIp
      required: false
      schema:
        type: string
      style: form
  schemas:
    DirectoryList:
      example:
        kind: discovery#directoryList
        items:
        - discoveryRestUrl: discoveryRestUrl
          kind: discovery#directoryItem
          name: name
          description: description
          discoveryLink: discoveryLink
          documentationLink: documentationLink
          id: id
          icons:
            x32: x32
            x16: x16
          title: title
          version: version
          preferred: true
          labels:
          - labels
          - labels
        - discoveryRestUrl: discoveryRestUrl
          kind: discovery#directoryItem
          name: name
          description: description
          discoveryLink: discoveryLink
          documentationLink: documentationLink
          id: id
          icons:
            x32: x32
            x16: x16
          title: title
          version: version
          preferred: true
          labels:
          - labels
          - labels
        discoveryVersion: v1
      properties:
        discoveryVersion:
          default: v1
          description: Indicate the version of the Discovery API used to generate
            this doc.
          title: discoveryVersion
          type: string
        items:
          description: The individual directory entries. One entry per api/version
            pair.
          items:
            $ref: '#/components/schemas/DirectoryList_items_inner'
          title: items
          type: array
        kind:
          default: discovery#directoryList
          description: The kind for this response.
          title: kind
          type: string
      title: DirectoryList
      type: object
    JsonSchema:
      example:
        deprecated: true
        format: format
        pattern: pattern
        annotations:
          required:
          - required
          - required
        description: description
        readOnly: true
        type: type
        repeated: true
        enum:
        - enum
        - enum
        required: true
        enumDeprecated:
        - true
        - true
        variant:
          discriminant: discriminant
          map:
          - $ref: $ref
            type_value: type_value
          - $ref: $ref
            type_value: type_value
        enumDescriptions:
        - enumDescriptions
        - enumDescriptions
        maximum: maximum
        location: location
        additionalProperties: null
        id: id
        $ref: $ref
        items: null
        minimum: minimum
        properties:
          key: null
      properties:
        $ref:
          description: A reference to another schema. The value of this property is
            the "id" of another schema.
          title: $ref
          type: string
        additionalProperties:
          $ref: '#/components/schemas/JsonSchema'
        annotations:
          $ref: '#/components/schemas/JsonSchema_annotations'
        deprecated:
          description: Whether the parameter is deprecated.
          title: deprecated
          type: boolean
        description:
          description: A description of this object.
          title: description
          type: string
        enum:
          description: Values this parameter may take (if it is an enum).
          items:
            type: string
          title: enum
          type: array
        enumDeprecated:
          description: The deprecation status for the enums. Each position maps to
            the corresponding value in the "enum" array.
          items:
            type: boolean
          title: enumDeprecated
          type: array
        enumDescriptions:
          description: The descriptions for the enums. Each position maps to the corresponding
            value in the "enum" array.
          items:
            type: string
          title: enumDescriptions
          type: array
        format:
          description: "An additional regular expression or key that helps constrain\
            \ the value. For more details see: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.23"
          title: format
          type: string
        id:
          description: Unique identifier for this schema.
          title: id
          type: string
        items:
          $ref: '#/components/schemas/JsonSchema'
        location:
          description: Whether this parameter goes in the query or the path for REST
            requests.
          title: location
          type: string
        maximum:
          description: The maximum value of this parameter.
          title: maximum
          type: string
        minimum:
          description: The minimum value of this parameter.
          title: minimum
          type: string
        pattern:
          description: "The regular expression this parameter must conform to. Uses\
            \ Java 6 regex format: http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html"
          title: pattern
          type: string
        properties:
          additionalProperties:
            $ref: '#/components/schemas/JsonSchema'
          description: "If this is a schema for an object, list the schema for each\
            \ property of this object."
          title: properties
          type: object
        readOnly:
          description: "The value is read-only, generated by the service. The value\
            \ cannot be modified by the client. If the value is included in a POST,\
            \ PUT, or PATCH request, it is ignored by the service."
          title: readOnly
          type: boolean
        repeated:
          description: Whether this parameter may appear multiple times.
          title: repeated
          type: boolean
        required:
          description: Whether the parameter is required.
          title: required
          type: boolean
        type:
          description: "The value type for this schema. A list of values can be found\
            \ here: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.1"
          title: type
          type: string
        variant:
          $ref: '#/components/schemas/JsonSchema_variant'
      title: JsonSchema
      type: object
    RestDescription:
      example:
        auth:
          oauth2:
            scopes:
              key:
                description: description
        exponentialBackoffDefault: true
        methods:
          key:
            request:
              parameterName: parameterName
              $ref: $ref
            supportsMediaDownload: true
            supportsSubscription: true
            deprecated: true
            description: description
            supportsMediaUpload: true
            etagRequired: true
            httpMethod: httpMethod
            parameterOrder:
            - parameterOrder
            - parameterOrder
            mediaUpload:
              maxSize: maxSize
              protocols:
                resumable:
                  path: path
                  multipart: true
                simple:
                  path: path
                  multipart: true
              accept:
              - accept
              - accept
            path: path
            response:
              $ref: $ref
            flatPath: flatPath
            id: id
            scopes:
            - scopes
            - scopes
            parameters:
              key:
                deprecated: true
                format: format
                pattern: pattern
                annotations:
                  required:
                  - required
                  - required
                description: description
                readOnly: true
                type: type
                repeated: true
                enum:
                - enum
                - enum
                required: true
                enumDeprecated:
                - true
                - true
                variant:
                  discriminant: discriminant
                  map:
                  - $ref: $ref
                    type_value: type_value
                  - $ref: $ref
                    type_value: type_value
                enumDescriptions:
                - enumDescriptions
                - enumDescriptions
                maximum: maximum
                location: location
                additionalProperties: null
                id: id
                $ref: $ref
                items: null
                minimum: minimum
                properties:
                  key: null
            useMediaDownloadService: true
        description: description
        title: title
        discoveryVersion: v1
        features:
        - features
        - features
        protocol: rest
        ownerName: ownerName
        batchPath: batchPath
        id: id
        canonicalName: canonicalName
        packagePath: packagePath
        endpoints:
        - endpointUrl: endpointUrl
          deprecated: true
          description: description
          location: location
        - endpointUrl: endpointUrl
          deprecated: true
          description: description
          location: location
        kind: discovery#restDescription
        resources:
          key:
            methods:
              key:
                request:
                  parameterName: parameterName
                  $ref: $ref
                supportsMediaDownload: true
                supportsSubscription: true
                deprecated: true
                description: description
                supportsMediaUpload: true
                etagRequired: true
                httpMethod: httpMethod
                parameterOrder:
                - parameterOrder
                - parameterOrder
                mediaUpload:
                  maxSize: maxSize
                  protocols:
                    resumable:
                      path: path
                      multipart: true
                    simple:
                      path: path
                      multipart: true
                  accept:
                  - accept
                  - accept
                path: path
                response:
                  $ref: $ref
                flatPath: flatPath
                id: id
                scopes:
                - scopes
                - scopes
                parameters:
                  key:
                    deprecated: true
                    format: format
                    pattern: pattern
                    annotations:
                      required:
                      - required
                      - required
                    description: description
                    readOnly: true
                    type: type
                    repeated: true
                    enum:
                    - enum
                    - enum
                    required: true
                    enumDeprecated:
                    - true
                    - true
                    variant:
                      discriminant: discriminant
                      map:
                      - $ref: $ref
                        type_value: type_value
                      - $ref: $ref
                        type_value: type_value
                    enumDescriptions:
                    - enumDescriptions
                    - enumDescriptions
                    maximum: maximum
                    location: location
                    additionalProperties: null
                    id: id
                    $ref: $ref
                    items: null
                    minimum: minimum
                    properties:
                      key: null
                useMediaDownloadService: true
            deprecated: true
            resources:
              key: null
        documentationLink: documentationLink
        icons:
          x32: x32
          x16: x16
        version: version
        labels:
        - labels
        - labels
        revision: revision
        rootUrl: rootUrl
        baseUrl: baseUrl
        basePath: basePath
        schemas:
          key:
            deprecated: true
            format: format
            pattern: pattern
            annotations:
              required:
              - required
              - required
            description: description
            readOnly: true
            type: type
            repeated: true
            enum:
            - enum
            - enum
            required: true
            enumDeprecated:
            - true
            - true
            variant:
              discriminant: discriminant
              map:
              - $ref: $ref
                type_value: type_value
              - $ref: $ref
                type_value: type_value
            enumDescriptions:
            - enumDescriptions
            - enumDescriptions
            maximum: maximum
            location: location
            additionalProperties: null
            id: id
            $ref: $ref
            items: null
            minimum: minimum
            properties:
              key: null
        servicePath: servicePath
        name: name
        etag: etag
        ownerDomain: ownerDomain
        parameters:
          key:
            deprecated: true
            format: format
            pattern: pattern
            annotations:
              required:
              - required
              - required
            description: description
            readOnly: true
            type: type
            repeated: true
            enum:
            - enum
            - enum
            required: true
            enumDeprecated:
            - true
            - true
            variant:
              discriminant: discriminant
              map:
              - $ref: $ref
                type_value: type_value
              - $ref: $ref
                type_value: type_value
            enumDescriptions:
            - enumDescriptions
            - enumDescriptions
            maximum: maximum
            location: location
            additionalProperties: null
            id: id
            $ref: $ref
            items: null
            minimum: minimum
            properties:
              key: null
        version_module: true
      properties:
        auth:
          $ref: '#/components/schemas/RestDescription_auth'
        basePath:
          description: "[DEPRECATED] The base path for REST requests."
          title: basePath
          type: string
        baseUrl:
          description: "[DEPRECATED] The base URL for REST requests."
          title: baseUrl
          type: string
        batchPath:
          description: The path for REST batch requests.
          title: batchPath
          type: string
        canonicalName:
          description: Indicates how the API name should be capitalized and split
            into various parts. Useful for generating pretty class names.
          title: canonicalName
          type: string
        description:
          description: The description of this API.
          title: description
          type: string
        discoveryVersion:
          default: v1
          description: Indicate the version of the Discovery API used to generate
            this doc.
          title: discoveryVersion
          type: string
        documentationLink:
          description: A link to human readable documentation for the API.
          title: documentationLink
          type: string
        endpoints:
          description: "A list of location-based endpoint objects for this API. Each\
            \ object contains the endpoint URL, location, description and deprecation\
            \ status."
          items:
            $ref: '#/components/schemas/RestDescription_endpoints_inner'
          title: endpoints
          type: array
        etag:
          description: The ETag for this response.
          readOnly: true
          title: etag
          type: string
        exponentialBackoffDefault:
          description: Enable exponential backoff for suitable methods in the generated
            clients.
          title: exponentialBackoffDefault
          type: boolean
        features:
          description: A list of supported features for this API.
          items:
            type: string
          title: features
          type: array
        icons:
          $ref: '#/components/schemas/DirectoryList_items_inner_icons'
        id:
          description: The ID of this API.
          title: id
          type: string
        kind:
          default: discovery#restDescription
          description: The kind for this response.
          title: kind
          type: string
        labels:
          description: "Labels for the status of this API, such as labs or deprecated."
          items:
            type: string
          title: labels
          type: array
        methods:
          additionalProperties:
            $ref: '#/components/schemas/RestMethod'
          description: API-level methods for this API.
          title: methods
          type: object
        name:
          description: The name of this API.
          title: name
          type: string
        ownerDomain:
          description: "The domain of the owner of this API. Together with the ownerName\
            \ and a packagePath values, this can be used to generate a library for\
            \ this API which would have a unique fully qualified name."
          title: ownerDomain
          type: string
        ownerName:
          description: The name of the owner of this API. See ownerDomain.
          title: ownerName
          type: string
        packagePath:
          description: The package of the owner of this API. See ownerDomain.
          title: packagePath
          type: string
        parameters:
          additionalProperties:
            $ref: '#/components/schemas/JsonSchema'
          description: Common parameters that apply across all apis.
          title: parameters
          type: object
        protocol:
          default: rest
          description: The protocol described by this document.
          title: protocol
          type: string
        resources:
          additionalProperties:
            $ref: '#/components/schemas/RestResource'
          description: The resources in this API.
          title: resources
          type: object
        revision:
          description: The version of this API.
          title: revision
          type: string
        rootUrl:
          description: The root URL under which all API services live.
          title: rootUrl
          type: string
        schemas:
          additionalProperties:
            $ref: '#/components/schemas/JsonSchema'
          description: The schemas for this API.
          title: schemas
          type: object
        servicePath:
          description: The base path for all REST requests.
          title: servicePath
          type: string
        title:
          description: The title of this API.
          title: title
          type: string
        version:
          description: The version of this API.
          title: version
          type: string
        version_module:
          title: version_module
          type: boolean
      title: RestDescription
      type: object
    RestMethod:
      example:
        request:
          parameterName: parameterName
          $ref: $ref
        supportsMediaDownload: true
        supportsSubscription: true
        deprecated: true
        description: description
        supportsMediaUpload: true
        etagRequired: true
        httpMethod: httpMethod
        parameterOrder:
        - parameterOrder
        - parameterOrder
        mediaUpload:
          maxSize: maxSize
          protocols:
            resumable:
              path: path
              multipart: true
            simple:
              path: path
              multipart: true
          accept:
          - accept
          - accept
        path: path
        response:
          $ref: $ref
        flatPath: flatPath
        id: id
        scopes:
        - scopes
        - scopes
        parameters:
          key:
            deprecated: true
            format: format
            pattern: pattern
            annotations:
              required:
              - required
              - required
            description: description
            readOnly: true
            type: type
            repeated: true
            enum:
            - enum
            - enum
            required: true
            enumDeprecated:
            - true
            - true
            variant:
              discriminant: discriminant
              map:
              - $ref: $ref
                type_value: type_value
              - $ref: $ref
                type_value: type_value
            enumDescriptions:
            - enumDescriptions
            - enumDescriptions
            maximum: maximum
            location: location
            additionalProperties: null
            id: id
            $ref: $ref
            items: null
            minimum: minimum
            properties:
              key: null
        useMediaDownloadService: true
      properties:
        deprecated:
          description: Whether this method is deprecated.
          title: deprecated
          type: boolean
        description:
          description: Description of this method.
          title: description
          type: string
        etagRequired:
          description: Whether this method requires an ETag to be specified. The ETag
            is sent as an HTTP If-Match or If-None-Match header.
          title: etagRequired
          type: boolean
        flatPath:
          description: "The URI path of this REST method in (RFC 6570) format without\
            \ level 2 features ({+var}). Supplementary to the path property."
          title: flatPath
          type: string
        httpMethod:
          description: HTTP method used by this method.
          title: httpMethod
          type: string
        id:
          description: A unique ID for this method. This property can be used to match
            methods between different versions of Discovery.
          title: id
          type: string
        mediaUpload:
          $ref: '#/components/schemas/RestMethod_mediaUpload'
        parameterOrder:
          description: "Ordered list of required parameters, serves as a hint to clients\
            \ on how to structure their method signatures. The array is ordered such\
            \ that the \"most-significant\" parameter appears first."
          items:
            type: string
          title: parameterOrder
          type: array
        parameters:
          additionalProperties:
            $ref: '#/components/schemas/JsonSchema'
          description: Details for all parameters in this method.
          title: parameters
          type: object
        path:
          description: The URI path of this REST method. Should be used in conjunction
            with the basePath property at the api-level.
          title: path
          type: string
        request:
          $ref: '#/components/schemas/RestMethod_request'
        response:
          $ref: '#/components/schemas/RestMethod_response'
        scopes:
          description: OAuth 2.0 scopes applicable to this method.
          items:
            type: string
          title: scopes
          type: array
        supportsMediaDownload:
          description: Whether this method supports media downloads.
          title: supportsMediaDownload
          type: boolean
        supportsMediaUpload:
          description: Whether this method supports media uploads.
          title: supportsMediaUpload
          type: boolean
        supportsSubscription:
          description: Whether this method supports subscriptions.
          title: supportsSubscription
          type: boolean
        useMediaDownloadService:
          description: Indicates that downloads from this method should use the download
            service URL (i.e. "/download"). Only applies if the method supports media
            download.
          title: useMediaDownloadService
          type: boolean
      title: RestMethod
      type: object
    RestResource:
      example:
        methods:
          key:
            request:
              parameterName: parameterName
              $ref: $ref
            supportsMediaDownload: true
            supportsSubscription: true
            deprecated: true
            description: description
            supportsMediaUpload: true
            etagRequired: true
            httpMethod: httpMethod
            parameterOrder:
            - parameterOrder
            - parameterOrder
            mediaUpload:
              maxSize: maxSize
              protocols:
                resumable:
                  path: path
                  multipart: true
                simple:
                  path: path
                  multipart: true
              accept:
              - accept
              - accept
            path: path
            response:
              $ref: $ref
            flatPath: flatPath
            id: id
            scopes:
            - scopes
            - scopes
            parameters:
              key:
                deprecated: true
                format: format
                pattern: pattern
                annotations:
                  required:
                  - required
                  - required
                description: description
                readOnly: true
                type: type
                repeated: true
                enum:
                - enum
                - enum
                required: true
                enumDeprecated:
                - true
                - true
                variant:
                  discriminant: discriminant
                  map:
                  - $ref: $ref
                    type_value: type_value
                  - $ref: $ref
                    type_value: type_value
                enumDescriptions:
                - enumDescriptions
                - enumDescriptions
                maximum: maximum
                location: location
                additionalProperties: null
                id: id
                $ref: $ref
                items: null
                minimum: minimum
                properties:
                  key: null
            useMediaDownloadService: true
        deprecated: true
        resources:
          key: null
      properties:
        deprecated:
          description: Whether this resource is deprecated.
          title: deprecated
          type: boolean
        methods:
          additionalProperties:
            $ref: '#/components/schemas/RestMethod'
          description: Methods on this resource.
          title: methods
          type: object
        resources:
          additionalProperties:
            $ref: '#/components/schemas/RestResource'
          description: Sub-resources on this resource.
          title: resources
          type: object
      title: RestResource
      type: object
    DirectoryList_items_inner_icons:
      description: Links to 16x16 and 32x32 icons representing the API.
      example:
        x32: x32
        x16: x16
      properties:
        x16:
          description: The URL of the 16x16 icon.
          title: x16
          type: string
        x32:
          description: The URL of the 32x32 icon.
          title: x32
          type: string
      title: DirectoryList_items_inner_icons
      type: object
    DirectoryList_items_inner:
      example:
        discoveryRestUrl: discoveryRestUrl
        kind: discovery#directoryItem
        name: name
        description: description
        discoveryLink: discoveryLink
        documentationLink: documentationLink
        id: id
        icons:
          x32: x32
          x16: x16
        title: title
        version: version
        preferred: true
        labels:
        - labels
        - labels
      properties:
        description:
          description: The description of this API.
          title: description
          type: string
        discoveryLink:
          description: A link to the discovery document.
          title: discoveryLink
          type: string
        discoveryRestUrl:
          description: The URL for the discovery REST document.
          title: discoveryRestUrl
          type: string
        documentationLink:
          description: A link to human readable documentation for the API.
          title: documentationLink
          type: string
        icons:
          $ref: '#/components/schemas/DirectoryList_items_inner_icons'
        id:
          description: The id of this API.
          title: id
          type: string
        kind:
          default: discovery#directoryItem
          description: The kind for this response.
          title: kind
          type: string
        labels:
          description: "Labels for the status of this API, such as labs or deprecated."
          items:
            type: string
          title: labels
          type: array
        name:
          description: The name of the API.
          title: name
          type: string
        preferred:
          description: True if this version is the preferred version to use.
          title: preferred
          type: boolean
        title:
          description: The title of this API.
          title: title
          type: string
        version:
          description: The version of the API.
          title: version
          type: string
      title: DirectoryList_items_inner
      type: object
    JsonSchema_annotations:
      description: Additional information about this property.
      example:
        required:
        - required
        - required
      properties:
        required:
          description: A list of methods for which this property is required on requests.
          items:
            type: string
          title: required
          type: array
      title: JsonSchema_annotations
      type: object
    JsonSchema_variant_map_inner:
      example:
        $ref: $ref
        type_value: type_value
      properties:
        $ref:
          title: $ref
          type: string
        type_value:
          title: type_value
          type: string
      title: JsonSchema_variant_map_inner
      type: object
    JsonSchema_variant:
      description: "In a variant data type, the value of one property is used to determine\
        \ how to interpret the entire entity. Its value must exist in a map of descriminant\
        \ values to schema names."
      example:
        discriminant: discriminant
        map:
        - $ref: $ref
          type_value: type_value
        - $ref: $ref
          type_value: type_value
      properties:
        discriminant:
          description: The name of the type discriminant property.
          title: discriminant
          type: string
        map:
          description: The map of discriminant value to schema to use for parsing..
          items:
            $ref: '#/components/schemas/JsonSchema_variant_map_inner'
          title: map
          type: array
      title: JsonSchema_variant
      type: object
    RestDescription_auth_oauth2_scopes_value:
      description: The scope value.
      example:
        description: description
      properties:
        description:
          description: Description of scope.
          title: description
          type: string
      title: RestDescription_auth_oauth2_scopes_value
      type: object
    RestDescription_auth_oauth2:
      description: OAuth 2.0 authentication information.
      example:
        scopes:
          key:
            description: description
      properties:
        scopes:
          additionalProperties:
            $ref: '#/components/schemas/RestDescription_auth_oauth2_scopes_value'
          description: Available OAuth 2.0 scopes.
          title: scopes
          type: object
      title: RestDescription_auth_oauth2
      type: object
    RestDescription_auth:
      description: Authentication information.
      example:
        oauth2:
          scopes:
            key:
              description: description
      properties:
        oauth2:
          $ref: '#/components/schemas/RestDescription_auth_oauth2'
      title: RestDescription_auth
      type: object
    RestDescription_endpoints_inner:
      description: A single endpoint object
      example:
        endpointUrl: endpointUrl
        deprecated: true
        description: description
        location: location
      properties:
        deprecated:
          description: Whether this endpoint is deprecated
          title: deprecated
          type: boolean
        description:
          description: A string describing the host designated by the URL
          title: description
          type: string
        endpointUrl:
          description: The URL of the endpoint target host
          title: endpointUrl
          type: string
        location:
          description: The location of the endpoint
          title: location
          type: string
      title: RestDescription_endpoints_inner
      type: object
    RestMethod_mediaUpload_protocols_resumable:
      description: Supports the Resumable Media Upload protocol.
      example:
        path: path
        multipart: true
      properties:
        multipart:
          default: true
          description: True if this endpoint supports uploading multipart media.
          title: multipart
          type: boolean
        path:
          description: The URI path to be used for upload. Should be used in conjunction
            with the basePath property at the api-level.
          title: path
          type: string
      title: RestMethod_mediaUpload_protocols_resumable
      type: object
    RestMethod_mediaUpload_protocols_simple:
      description: Supports uploading as a single HTTP request.
      example:
        path: path
        multipart: true
      properties:
        multipart:
          default: true
          description: True if this endpoint supports upload multipart media.
          title: multipart
          type: boolean
        path:
          description: The URI path to be used for upload. Should be used in conjunction
            with the basePath property at the api-level.
          title: path
          type: string
      title: RestMethod_mediaUpload_protocols_simple
      type: object
    RestMethod_mediaUpload_protocols:
      description: Supported upload protocols.
      example:
        resumable:
          path: path
          multipart: true
        simple:
          path: path
          multipart: true
      properties:
        resumable:
          $ref: '#/components/schemas/RestMethod_mediaUpload_protocols_resumable'
        simple:
          $ref: '#/components/schemas/RestMethod_mediaUpload_protocols_simple'
      title: RestMethod_mediaUpload_protocols
      type: object
    RestMethod_mediaUpload:
      description: Media upload parameters.
      example:
        maxSize: maxSize
        protocols:
          resumable:
            path: path
            multipart: true
          simple:
            path: path
            multipart: true
        accept:
        - accept
        - accept
      properties:
        accept:
          description: MIME Media Ranges for acceptable media uploads to this method.
          items:
            type: string
          title: accept
          type: array
        maxSize:
          description: "Maximum size of a media upload, such as \"1MB\", \"2GB\" or\
            \ \"3TB\"."
          title: maxSize
          type: string
        protocols:
          $ref: '#/components/schemas/RestMethod_mediaUpload_protocols'
      title: RestMethod_mediaUpload
      type: object
    RestMethod_request:
      description: The schema for the request.
      example:
        parameterName: parameterName
        $ref: $ref
      properties:
        $ref:
          description: Schema ID for the request schema.
          title: $ref
          type: string
        parameterName:
          description: parameter name.
          title: parameterName
          type: string
      title: RestMethod_request
      type: object
    RestMethod_response:
      description: The schema for the response.
      example:
        $ref: $ref
      properties:
        $ref:
          description: Schema ID for the response schema.
          title: $ref
          type: string
      title: RestMethod_response
      type: object
