/**
 * API Discovery Service
 * Provides information about other Google APIs, such as what APIs are available, the resource, and method details for each API.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DirectoryListItemsInnerIcons model module.
 * @module model/DirectoryListItemsInnerIcons
 * @version v1
 */
class DirectoryListItemsInnerIcons {
    /**
     * Constructs a new <code>DirectoryListItemsInnerIcons</code>.
     * Links to 16x16 and 32x32 icons representing the API.
     * @alias module:model/DirectoryListItemsInnerIcons
     */
    constructor() { 
        
        DirectoryListItemsInnerIcons.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DirectoryListItemsInnerIcons</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DirectoryListItemsInnerIcons} obj Optional instance to populate.
     * @return {module:model/DirectoryListItemsInnerIcons} The populated <code>DirectoryListItemsInnerIcons</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DirectoryListItemsInnerIcons();

            if (data.hasOwnProperty('x16')) {
                obj['x16'] = ApiClient.convertToType(data['x16'], 'String');
            }
            if (data.hasOwnProperty('x32')) {
                obj['x32'] = ApiClient.convertToType(data['x32'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DirectoryListItemsInnerIcons</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DirectoryListItemsInnerIcons</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['x16'] && !(typeof data['x16'] === 'string' || data['x16'] instanceof String)) {
            throw new Error("Expected the field `x16` to be a primitive type in the JSON string but got " + data['x16']);
        }
        // ensure the json data is a string
        if (data['x32'] && !(typeof data['x32'] === 'string' || data['x32'] instanceof String)) {
            throw new Error("Expected the field `x32` to be a primitive type in the JSON string but got " + data['x32']);
        }

        return true;
    }


}



/**
 * The URL of the 16x16 icon.
 * @member {String} x16
 */
DirectoryListItemsInnerIcons.prototype['x16'] = undefined;

/**
 * The URL of the 32x32 icon.
 * @member {String} x32
 */
DirectoryListItemsInnerIcons.prototype['x32'] = undefined;






export default DirectoryListItemsInnerIcons;

