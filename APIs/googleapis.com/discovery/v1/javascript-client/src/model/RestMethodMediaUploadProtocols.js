/**
 * API Discovery Service
 * Provides information about other Google APIs, such as what APIs are available, the resource, and method details for each API.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RestMethodMediaUploadProtocolsResumable from './RestMethodMediaUploadProtocolsResumable';
import RestMethodMediaUploadProtocolsSimple from './RestMethodMediaUploadProtocolsSimple';

/**
 * The RestMethodMediaUploadProtocols model module.
 * @module model/RestMethodMediaUploadProtocols
 * @version v1
 */
class RestMethodMediaUploadProtocols {
    /**
     * Constructs a new <code>RestMethodMediaUploadProtocols</code>.
     * Supported upload protocols.
     * @alias module:model/RestMethodMediaUploadProtocols
     */
    constructor() { 
        
        RestMethodMediaUploadProtocols.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RestMethodMediaUploadProtocols</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RestMethodMediaUploadProtocols} obj Optional instance to populate.
     * @return {module:model/RestMethodMediaUploadProtocols} The populated <code>RestMethodMediaUploadProtocols</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RestMethodMediaUploadProtocols();

            if (data.hasOwnProperty('resumable')) {
                obj['resumable'] = RestMethodMediaUploadProtocolsResumable.constructFromObject(data['resumable']);
            }
            if (data.hasOwnProperty('simple')) {
                obj['simple'] = RestMethodMediaUploadProtocolsSimple.constructFromObject(data['simple']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RestMethodMediaUploadProtocols</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RestMethodMediaUploadProtocols</code>.
     */
    static validateJSON(data) {
        // validate the optional field `resumable`
        if (data['resumable']) { // data not null
          RestMethodMediaUploadProtocolsResumable.validateJSON(data['resumable']);
        }
        // validate the optional field `simple`
        if (data['simple']) { // data not null
          RestMethodMediaUploadProtocolsSimple.validateJSON(data['simple']);
        }

        return true;
    }


}



/**
 * @member {module:model/RestMethodMediaUploadProtocolsResumable} resumable
 */
RestMethodMediaUploadProtocols.prototype['resumable'] = undefined;

/**
 * @member {module:model/RestMethodMediaUploadProtocolsSimple} simple
 */
RestMethodMediaUploadProtocols.prototype['simple'] = undefined;






export default RestMethodMediaUploadProtocols;

