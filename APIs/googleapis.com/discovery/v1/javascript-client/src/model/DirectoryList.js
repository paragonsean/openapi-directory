/**
 * API Discovery Service
 * Provides information about other Google APIs, such as what APIs are available, the resource, and method details for each API.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DirectoryListItemsInner from './DirectoryListItemsInner';

/**
 * The DirectoryList model module.
 * @module model/DirectoryList
 * @version v1
 */
class DirectoryList {
    /**
     * Constructs a new <code>DirectoryList</code>.
     * @alias module:model/DirectoryList
     */
    constructor() { 
        
        DirectoryList.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['discoveryVersion'] = 'v1';
        obj['kind'] = 'discovery#directoryList';
    }

    /**
     * Constructs a <code>DirectoryList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DirectoryList} obj Optional instance to populate.
     * @return {module:model/DirectoryList} The populated <code>DirectoryList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DirectoryList();

            if (data.hasOwnProperty('discoveryVersion')) {
                obj['discoveryVersion'] = ApiClient.convertToType(data['discoveryVersion'], 'String');
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [DirectoryListItemsInner]);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DirectoryList</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DirectoryList</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['discoveryVersion'] && !(typeof data['discoveryVersion'] === 'string' || data['discoveryVersion'] instanceof String)) {
            throw new Error("Expected the field `discoveryVersion` to be a primitive type in the JSON string but got " + data['discoveryVersion']);
        }
        if (data['items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['items'])) {
                throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
            }
            // validate the optional field `items` (array)
            for (const item of data['items']) {
                DirectoryListItemsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }

        return true;
    }


}



/**
 * Indicate the version of the Discovery API used to generate this doc.
 * @member {String} discoveryVersion
 * @default 'v1'
 */
DirectoryList.prototype['discoveryVersion'] = 'v1';

/**
 * The individual directory entries. One entry per api/version pair.
 * @member {Array.<module:model/DirectoryListItemsInner>} items
 */
DirectoryList.prototype['items'] = undefined;

/**
 * The kind for this response.
 * @member {String} kind
 * @default 'discovery#directoryList'
 */
DirectoryList.prototype['kind'] = 'discovery#directoryList';






export default DirectoryList;

