/*
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudBillingBillingaccountpricesV1betaAggregationInfo;
import org.openapitools.client.model.GoogleCloudBillingBillingaccountpricesV1betaRateTier;
import org.openapitools.client.model.GoogleCloudBillingBillingaccountpricesV1betaUnitInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Encapsulates a &#x60;Rate&#x60; price. Billing account SKUs with &#x60;Rate&#x60; price are offered by pricing tiers. The price have 1 or more rate pricing tiers.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:15.055795-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudBillingBillingaccountpricesV1betaRate {
  public static final String SERIALIZED_NAME_AGGREGATION_INFO = "aggregationInfo";
  @SerializedName(SERIALIZED_NAME_AGGREGATION_INFO)
  private GoogleCloudBillingBillingaccountpricesV1betaAggregationInfo aggregationInfo;

  public static final String SERIALIZED_NAME_TIERS = "tiers";
  @SerializedName(SERIALIZED_NAME_TIERS)
  private List<GoogleCloudBillingBillingaccountpricesV1betaRateTier> tiers = new ArrayList<>();

  public static final String SERIALIZED_NAME_UNIT_INFO = "unitInfo";
  @SerializedName(SERIALIZED_NAME_UNIT_INFO)
  private GoogleCloudBillingBillingaccountpricesV1betaUnitInfo unitInfo;

  public GoogleCloudBillingBillingaccountpricesV1betaRate() {
  }

  public GoogleCloudBillingBillingaccountpricesV1betaRate aggregationInfo(GoogleCloudBillingBillingaccountpricesV1betaAggregationInfo aggregationInfo) {
    this.aggregationInfo = aggregationInfo;
    return this;
  }

  /**
   * Get aggregationInfo
   * @return aggregationInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudBillingBillingaccountpricesV1betaAggregationInfo getAggregationInfo() {
    return aggregationInfo;
  }

  public void setAggregationInfo(GoogleCloudBillingBillingaccountpricesV1betaAggregationInfo aggregationInfo) {
    this.aggregationInfo = aggregationInfo;
  }


  public GoogleCloudBillingBillingaccountpricesV1betaRate tiers(List<GoogleCloudBillingBillingaccountpricesV1betaRateTier> tiers) {
    this.tiers = tiers;
    return this;
  }

  public GoogleCloudBillingBillingaccountpricesV1betaRate addTiersItem(GoogleCloudBillingBillingaccountpricesV1betaRateTier tiersItem) {
    if (this.tiers == null) {
      this.tiers = new ArrayList<>();
    }
    this.tiers.add(tiersItem);
    return this;
  }

  /**
   * All tiers associated with the &#x60;Rate&#x60; price.
   * @return tiers
   */
  @javax.annotation.Nullable
  public List<GoogleCloudBillingBillingaccountpricesV1betaRateTier> getTiers() {
    return tiers;
  }

  public void setTiers(List<GoogleCloudBillingBillingaccountpricesV1betaRateTier> tiers) {
    this.tiers = tiers;
  }


  public GoogleCloudBillingBillingaccountpricesV1betaRate unitInfo(GoogleCloudBillingBillingaccountpricesV1betaUnitInfo unitInfo) {
    this.unitInfo = unitInfo;
    return this;
  }

  /**
   * Get unitInfo
   * @return unitInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudBillingBillingaccountpricesV1betaUnitInfo getUnitInfo() {
    return unitInfo;
  }

  public void setUnitInfo(GoogleCloudBillingBillingaccountpricesV1betaUnitInfo unitInfo) {
    this.unitInfo = unitInfo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudBillingBillingaccountpricesV1betaRate googleCloudBillingBillingaccountpricesV1betaRate = (GoogleCloudBillingBillingaccountpricesV1betaRate) o;
    return Objects.equals(this.aggregationInfo, googleCloudBillingBillingaccountpricesV1betaRate.aggregationInfo) &&
        Objects.equals(this.tiers, googleCloudBillingBillingaccountpricesV1betaRate.tiers) &&
        Objects.equals(this.unitInfo, googleCloudBillingBillingaccountpricesV1betaRate.unitInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aggregationInfo, tiers, unitInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudBillingBillingaccountpricesV1betaRate {\n");
    sb.append("    aggregationInfo: ").append(toIndentedString(aggregationInfo)).append("\n");
    sb.append("    tiers: ").append(toIndentedString(tiers)).append("\n");
    sb.append("    unitInfo: ").append(toIndentedString(unitInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("aggregationInfo");
    openapiFields.add("tiers");
    openapiFields.add("unitInfo");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudBillingBillingaccountpricesV1betaRate
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudBillingBillingaccountpricesV1betaRate.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudBillingBillingaccountpricesV1betaRate is not found in the empty JSON string", GoogleCloudBillingBillingaccountpricesV1betaRate.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudBillingBillingaccountpricesV1betaRate.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudBillingBillingaccountpricesV1betaRate` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `aggregationInfo`
      if (jsonObj.get("aggregationInfo") != null && !jsonObj.get("aggregationInfo").isJsonNull()) {
        GoogleCloudBillingBillingaccountpricesV1betaAggregationInfo.validateJsonElement(jsonObj.get("aggregationInfo"));
      }
      if (jsonObj.get("tiers") != null && !jsonObj.get("tiers").isJsonNull()) {
        JsonArray jsonArraytiers = jsonObj.getAsJsonArray("tiers");
        if (jsonArraytiers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("tiers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `tiers` to be an array in the JSON string but got `%s`", jsonObj.get("tiers").toString()));
          }

          // validate the optional field `tiers` (array)
          for (int i = 0; i < jsonArraytiers.size(); i++) {
            GoogleCloudBillingBillingaccountpricesV1betaRateTier.validateJsonElement(jsonArraytiers.get(i));
          };
        }
      }
      // validate the optional field `unitInfo`
      if (jsonObj.get("unitInfo") != null && !jsonObj.get("unitInfo").isJsonNull()) {
        GoogleCloudBillingBillingaccountpricesV1betaUnitInfo.validateJsonElement(jsonObj.get("unitInfo"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudBillingBillingaccountpricesV1betaRate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudBillingBillingaccountpricesV1betaRate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudBillingBillingaccountpricesV1betaRate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudBillingBillingaccountpricesV1betaRate.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudBillingBillingaccountpricesV1betaRate>() {
           @Override
           public void write(JsonWriter out, GoogleCloudBillingBillingaccountpricesV1betaRate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudBillingBillingaccountpricesV1betaRate read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudBillingBillingaccountpricesV1betaRate given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudBillingBillingaccountpricesV1betaRate
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudBillingBillingaccountpricesV1betaRate
   */
  public static GoogleCloudBillingBillingaccountpricesV1betaRate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudBillingBillingaccountpricesV1betaRate.class);
  }

  /**
   * Convert an instance of GoogleCloudBillingBillingaccountpricesV1betaRate to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

