/*
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudBillingBillingaccountskugroupskusV1betaTaxonomyCategory;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Encapsulates product categories, such as &#x60;Serverless&#x60;, &#x60;Cloud Run&#x60;, &#x60;TaskQueue&#x60;, and others.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:15.055795-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy {
  public static final String SERIALIZED_NAME_TAXONOMY_CATEGORIES = "taxonomyCategories";
  @SerializedName(SERIALIZED_NAME_TAXONOMY_CATEGORIES)
  private List<GoogleCloudBillingBillingaccountskugroupskusV1betaTaxonomyCategory> taxonomyCategories = new ArrayList<>();

  public GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy() {
  }

  public GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy taxonomyCategories(List<GoogleCloudBillingBillingaccountskugroupskusV1betaTaxonomyCategory> taxonomyCategories) {
    this.taxonomyCategories = taxonomyCategories;
    return this;
  }

  public GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy addTaxonomyCategoriesItem(GoogleCloudBillingBillingaccountskugroupskusV1betaTaxonomyCategory taxonomyCategoriesItem) {
    if (this.taxonomyCategories == null) {
      this.taxonomyCategories = new ArrayList<>();
    }
    this.taxonomyCategories.add(taxonomyCategoriesItem);
    return this;
  }

  /**
   * All product categories that the billing account SKU group SKU belong to.
   * @return taxonomyCategories
   */
  @javax.annotation.Nullable
  public List<GoogleCloudBillingBillingaccountskugroupskusV1betaTaxonomyCategory> getTaxonomyCategories() {
    return taxonomyCategories;
  }

  public void setTaxonomyCategories(List<GoogleCloudBillingBillingaccountskugroupskusV1betaTaxonomyCategory> taxonomyCategories) {
    this.taxonomyCategories = taxonomyCategories;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy googleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy = (GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy) o;
    return Objects.equals(this.taxonomyCategories, googleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy.taxonomyCategories);
  }

  @Override
  public int hashCode() {
    return Objects.hash(taxonomyCategories);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy {\n");
    sb.append("    taxonomyCategories: ").append(toIndentedString(taxonomyCategories)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("taxonomyCategories");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy is not found in the empty JSON string", GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("taxonomyCategories") != null && !jsonObj.get("taxonomyCategories").isJsonNull()) {
        JsonArray jsonArraytaxonomyCategories = jsonObj.getAsJsonArray("taxonomyCategories");
        if (jsonArraytaxonomyCategories != null) {
          // ensure the json data is an array
          if (!jsonObj.get("taxonomyCategories").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `taxonomyCategories` to be an array in the JSON string but got `%s`", jsonObj.get("taxonomyCategories").toString()));
          }

          // validate the optional field `taxonomyCategories` (array)
          for (int i = 0; i < jsonArraytaxonomyCategories.size(); i++) {
            GoogleCloudBillingBillingaccountskugroupskusV1betaTaxonomyCategory.validateJsonElement(jsonArraytaxonomyCategories.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy>() {
           @Override
           public void write(JsonWriter out, GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy
   */
  public static GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy.class);
  }

  /**
   * Convert an instance of GoogleCloudBillingBillingaccountskugroupskusV1betaProductTaxonomy to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

