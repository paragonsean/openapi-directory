/*
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudBillingSkugroupskusV1betaGeoTaxonomy;
import org.openapitools.client.model.GoogleCloudBillingSkugroupskusV1betaProductTaxonomy;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Encapsulates a publicly listed stock keeping unit (SKU) that is part of a publicly listed SKU group. A SKU group represents a collection of SKUs that are related to each other. For example, the &#x60;AI Platform APIs&#x60; SKU group includes SKUs from the Cloud Dialogflow API, the Cloud Text-to-Speech API, and additional related APIs.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:15.055795-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudBillingSkugroupskusV1betaSkuGroupSku {
  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_GEO_TAXONOMY = "geoTaxonomy";
  @SerializedName(SERIALIZED_NAME_GEO_TAXONOMY)
  private GoogleCloudBillingSkugroupskusV1betaGeoTaxonomy geoTaxonomy;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRODUCT_TAXONOMY = "productTaxonomy";
  @SerializedName(SERIALIZED_NAME_PRODUCT_TAXONOMY)
  private GoogleCloudBillingSkugroupskusV1betaProductTaxonomy productTaxonomy;

  public static final String SERIALIZED_NAME_SERVICE = "service";
  @SerializedName(SERIALIZED_NAME_SERVICE)
  private String service;

  public static final String SERIALIZED_NAME_SKU_ID = "skuId";
  @SerializedName(SERIALIZED_NAME_SKU_ID)
  private String skuId;

  public GoogleCloudBillingSkugroupskusV1betaSkuGroupSku() {
  }

  public GoogleCloudBillingSkugroupskusV1betaSkuGroupSku displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Description of the SkuGroupSku. Example: \&quot;A2 Instance Core running in Hong Kong\&quot;.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudBillingSkugroupskusV1betaSkuGroupSku geoTaxonomy(GoogleCloudBillingSkugroupskusV1betaGeoTaxonomy geoTaxonomy) {
    this.geoTaxonomy = geoTaxonomy;
    return this;
  }

  /**
   * Get geoTaxonomy
   * @return geoTaxonomy
   */
  @javax.annotation.Nullable
  public GoogleCloudBillingSkugroupskusV1betaGeoTaxonomy getGeoTaxonomy() {
    return geoTaxonomy;
  }

  public void setGeoTaxonomy(GoogleCloudBillingSkugroupskusV1betaGeoTaxonomy geoTaxonomy) {
    this.geoTaxonomy = geoTaxonomy;
  }


  public GoogleCloudBillingSkugroupskusV1betaSkuGroupSku name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Resource name for the SkuGroupSku. Example: \&quot;skuGroups/0e6403d1-4694-44d2-a696-7a78b1a69301/skus/AA95-CD31-42FE\&quot;.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudBillingSkugroupskusV1betaSkuGroupSku productTaxonomy(GoogleCloudBillingSkugroupskusV1betaProductTaxonomy productTaxonomy) {
    this.productTaxonomy = productTaxonomy;
    return this;
  }

  /**
   * Get productTaxonomy
   * @return productTaxonomy
   */
  @javax.annotation.Nullable
  public GoogleCloudBillingSkugroupskusV1betaProductTaxonomy getProductTaxonomy() {
    return productTaxonomy;
  }

  public void setProductTaxonomy(GoogleCloudBillingSkugroupskusV1betaProductTaxonomy productTaxonomy) {
    this.productTaxonomy = productTaxonomy;
  }


  public GoogleCloudBillingSkugroupskusV1betaSkuGroupSku service(String service) {
    this.service = service;
    return this;
  }

  /**
   * Service that the SkuGroupSku belongs to.
   * @return service
   */
  @javax.annotation.Nullable
  public String getService() {
    return service;
  }

  public void setService(String service) {
    this.service = service;
  }


  public GoogleCloudBillingSkugroupskusV1betaSkuGroupSku skuId(String skuId) {
    this.skuId = skuId;
    return this;
  }

  /**
   * Unique identifier for the SKU. It is the string after the collection identifier \&quot;skus/\&quot; Example: \&quot;AA95-CD31-42FE\&quot;.
   * @return skuId
   */
  @javax.annotation.Nullable
  public String getSkuId() {
    return skuId;
  }

  public void setSkuId(String skuId) {
    this.skuId = skuId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudBillingSkugroupskusV1betaSkuGroupSku googleCloudBillingSkugroupskusV1betaSkuGroupSku = (GoogleCloudBillingSkugroupskusV1betaSkuGroupSku) o;
    return Objects.equals(this.displayName, googleCloudBillingSkugroupskusV1betaSkuGroupSku.displayName) &&
        Objects.equals(this.geoTaxonomy, googleCloudBillingSkugroupskusV1betaSkuGroupSku.geoTaxonomy) &&
        Objects.equals(this.name, googleCloudBillingSkugroupskusV1betaSkuGroupSku.name) &&
        Objects.equals(this.productTaxonomy, googleCloudBillingSkugroupskusV1betaSkuGroupSku.productTaxonomy) &&
        Objects.equals(this.service, googleCloudBillingSkugroupskusV1betaSkuGroupSku.service) &&
        Objects.equals(this.skuId, googleCloudBillingSkugroupskusV1betaSkuGroupSku.skuId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, geoTaxonomy, name, productTaxonomy, service, skuId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudBillingSkugroupskusV1betaSkuGroupSku {\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    geoTaxonomy: ").append(toIndentedString(geoTaxonomy)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    productTaxonomy: ").append(toIndentedString(productTaxonomy)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("    skuId: ").append(toIndentedString(skuId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("displayName");
    openapiFields.add("geoTaxonomy");
    openapiFields.add("name");
    openapiFields.add("productTaxonomy");
    openapiFields.add("service");
    openapiFields.add("skuId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudBillingSkugroupskusV1betaSkuGroupSku
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudBillingSkugroupskusV1betaSkuGroupSku.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudBillingSkugroupskusV1betaSkuGroupSku is not found in the empty JSON string", GoogleCloudBillingSkugroupskusV1betaSkuGroupSku.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudBillingSkugroupskusV1betaSkuGroupSku.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudBillingSkugroupskusV1betaSkuGroupSku` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      // validate the optional field `geoTaxonomy`
      if (jsonObj.get("geoTaxonomy") != null && !jsonObj.get("geoTaxonomy").isJsonNull()) {
        GoogleCloudBillingSkugroupskusV1betaGeoTaxonomy.validateJsonElement(jsonObj.get("geoTaxonomy"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `productTaxonomy`
      if (jsonObj.get("productTaxonomy") != null && !jsonObj.get("productTaxonomy").isJsonNull()) {
        GoogleCloudBillingSkugroupskusV1betaProductTaxonomy.validateJsonElement(jsonObj.get("productTaxonomy"));
      }
      if ((jsonObj.get("service") != null && !jsonObj.get("service").isJsonNull()) && !jsonObj.get("service").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service").toString()));
      }
      if ((jsonObj.get("skuId") != null && !jsonObj.get("skuId").isJsonNull()) && !jsonObj.get("skuId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `skuId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("skuId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudBillingSkugroupskusV1betaSkuGroupSku.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudBillingSkugroupskusV1betaSkuGroupSku' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudBillingSkugroupskusV1betaSkuGroupSku> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudBillingSkugroupskusV1betaSkuGroupSku.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudBillingSkugroupskusV1betaSkuGroupSku>() {
           @Override
           public void write(JsonWriter out, GoogleCloudBillingSkugroupskusV1betaSkuGroupSku value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudBillingSkugroupskusV1betaSkuGroupSku read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudBillingSkugroupskusV1betaSkuGroupSku given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudBillingSkugroupskusV1betaSkuGroupSku
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudBillingSkugroupskusV1betaSkuGroupSku
   */
  public static GoogleCloudBillingSkugroupskusV1betaSkuGroupSku fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudBillingSkugroupskusV1betaSkuGroupSku.class);
  }

  /**
   * Convert an instance of GoogleCloudBillingSkugroupskusV1betaSkuGroupSku to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

