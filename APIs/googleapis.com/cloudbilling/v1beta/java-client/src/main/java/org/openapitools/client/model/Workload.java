/*
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CloudCdnEgressWorkload;
import org.openapitools.client.model.CloudCdnWorkload;
import org.openapitools.client.model.CloudInterconnectEgressWorkload;
import org.openapitools.client.model.CloudInterconnectWorkload;
import org.openapitools.client.model.CloudStorageEgressWorkload;
import org.openapitools.client.model.CloudStorageWorkload;
import org.openapitools.client.model.ComputeVmWorkload;
import org.openapitools.client.model.PremiumTierEgressWorkload;
import org.openapitools.client.model.StandardTierEgressWorkload;
import org.openapitools.client.model.VmToVmEgressWorkload;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Specifies usage on a single Google Cloud product over a time frame. Each Google Cloud product has its own message, containing specific product configuration parameters of the product usage amounts along each dimension in which the product is billed.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:15.055795-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Workload {
  public static final String SERIALIZED_NAME_CLOUD_CDN_EGRESS_WORKLOAD = "cloudCdnEgressWorkload";
  @SerializedName(SERIALIZED_NAME_CLOUD_CDN_EGRESS_WORKLOAD)
  private CloudCdnEgressWorkload cloudCdnEgressWorkload;

  public static final String SERIALIZED_NAME_CLOUD_CDN_WORKLOAD = "cloudCdnWorkload";
  @SerializedName(SERIALIZED_NAME_CLOUD_CDN_WORKLOAD)
  private CloudCdnWorkload cloudCdnWorkload;

  public static final String SERIALIZED_NAME_CLOUD_INTERCONNECT_EGRESS_WORKLOAD = "cloudInterconnectEgressWorkload";
  @SerializedName(SERIALIZED_NAME_CLOUD_INTERCONNECT_EGRESS_WORKLOAD)
  private CloudInterconnectEgressWorkload cloudInterconnectEgressWorkload;

  public static final String SERIALIZED_NAME_CLOUD_INTERCONNECT_WORKLOAD = "cloudInterconnectWorkload";
  @SerializedName(SERIALIZED_NAME_CLOUD_INTERCONNECT_WORKLOAD)
  private CloudInterconnectWorkload cloudInterconnectWorkload;

  public static final String SERIALIZED_NAME_CLOUD_STORAGE_EGRESS_WORKLOAD = "cloudStorageEgressWorkload";
  @SerializedName(SERIALIZED_NAME_CLOUD_STORAGE_EGRESS_WORKLOAD)
  private CloudStorageEgressWorkload cloudStorageEgressWorkload;

  public static final String SERIALIZED_NAME_CLOUD_STORAGE_WORKLOAD = "cloudStorageWorkload";
  @SerializedName(SERIALIZED_NAME_CLOUD_STORAGE_WORKLOAD)
  private CloudStorageWorkload cloudStorageWorkload;

  public static final String SERIALIZED_NAME_COMPUTE_VM_WORKLOAD = "computeVmWorkload";
  @SerializedName(SERIALIZED_NAME_COMPUTE_VM_WORKLOAD)
  private ComputeVmWorkload computeVmWorkload;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PREMIUM_TIER_EGRESS_WORKLOAD = "premiumTierEgressWorkload";
  @SerializedName(SERIALIZED_NAME_PREMIUM_TIER_EGRESS_WORKLOAD)
  private PremiumTierEgressWorkload premiumTierEgressWorkload;

  public static final String SERIALIZED_NAME_STANDARD_TIER_EGRESS_WORKLOAD = "standardTierEgressWorkload";
  @SerializedName(SERIALIZED_NAME_STANDARD_TIER_EGRESS_WORKLOAD)
  private StandardTierEgressWorkload standardTierEgressWorkload;

  public static final String SERIALIZED_NAME_VM_TO_VM_EGRESS_WORKLOAD = "vmToVmEgressWorkload";
  @SerializedName(SERIALIZED_NAME_VM_TO_VM_EGRESS_WORKLOAD)
  private VmToVmEgressWorkload vmToVmEgressWorkload;

  public Workload() {
  }

  public Workload cloudCdnEgressWorkload(CloudCdnEgressWorkload cloudCdnEgressWorkload) {
    this.cloudCdnEgressWorkload = cloudCdnEgressWorkload;
    return this;
  }

  /**
   * Get cloudCdnEgressWorkload
   * @return cloudCdnEgressWorkload
   */
  @javax.annotation.Nullable
  public CloudCdnEgressWorkload getCloudCdnEgressWorkload() {
    return cloudCdnEgressWorkload;
  }

  public void setCloudCdnEgressWorkload(CloudCdnEgressWorkload cloudCdnEgressWorkload) {
    this.cloudCdnEgressWorkload = cloudCdnEgressWorkload;
  }


  public Workload cloudCdnWorkload(CloudCdnWorkload cloudCdnWorkload) {
    this.cloudCdnWorkload = cloudCdnWorkload;
    return this;
  }

  /**
   * Get cloudCdnWorkload
   * @return cloudCdnWorkload
   */
  @javax.annotation.Nullable
  public CloudCdnWorkload getCloudCdnWorkload() {
    return cloudCdnWorkload;
  }

  public void setCloudCdnWorkload(CloudCdnWorkload cloudCdnWorkload) {
    this.cloudCdnWorkload = cloudCdnWorkload;
  }


  public Workload cloudInterconnectEgressWorkload(CloudInterconnectEgressWorkload cloudInterconnectEgressWorkload) {
    this.cloudInterconnectEgressWorkload = cloudInterconnectEgressWorkload;
    return this;
  }

  /**
   * Get cloudInterconnectEgressWorkload
   * @return cloudInterconnectEgressWorkload
   */
  @javax.annotation.Nullable
  public CloudInterconnectEgressWorkload getCloudInterconnectEgressWorkload() {
    return cloudInterconnectEgressWorkload;
  }

  public void setCloudInterconnectEgressWorkload(CloudInterconnectEgressWorkload cloudInterconnectEgressWorkload) {
    this.cloudInterconnectEgressWorkload = cloudInterconnectEgressWorkload;
  }


  public Workload cloudInterconnectWorkload(CloudInterconnectWorkload cloudInterconnectWorkload) {
    this.cloudInterconnectWorkload = cloudInterconnectWorkload;
    return this;
  }

  /**
   * Get cloudInterconnectWorkload
   * @return cloudInterconnectWorkload
   */
  @javax.annotation.Nullable
  public CloudInterconnectWorkload getCloudInterconnectWorkload() {
    return cloudInterconnectWorkload;
  }

  public void setCloudInterconnectWorkload(CloudInterconnectWorkload cloudInterconnectWorkload) {
    this.cloudInterconnectWorkload = cloudInterconnectWorkload;
  }


  public Workload cloudStorageEgressWorkload(CloudStorageEgressWorkload cloudStorageEgressWorkload) {
    this.cloudStorageEgressWorkload = cloudStorageEgressWorkload;
    return this;
  }

  /**
   * Get cloudStorageEgressWorkload
   * @return cloudStorageEgressWorkload
   */
  @javax.annotation.Nullable
  public CloudStorageEgressWorkload getCloudStorageEgressWorkload() {
    return cloudStorageEgressWorkload;
  }

  public void setCloudStorageEgressWorkload(CloudStorageEgressWorkload cloudStorageEgressWorkload) {
    this.cloudStorageEgressWorkload = cloudStorageEgressWorkload;
  }


  public Workload cloudStorageWorkload(CloudStorageWorkload cloudStorageWorkload) {
    this.cloudStorageWorkload = cloudStorageWorkload;
    return this;
  }

  /**
   * Get cloudStorageWorkload
   * @return cloudStorageWorkload
   */
  @javax.annotation.Nullable
  public CloudStorageWorkload getCloudStorageWorkload() {
    return cloudStorageWorkload;
  }

  public void setCloudStorageWorkload(CloudStorageWorkload cloudStorageWorkload) {
    this.cloudStorageWorkload = cloudStorageWorkload;
  }


  public Workload computeVmWorkload(ComputeVmWorkload computeVmWorkload) {
    this.computeVmWorkload = computeVmWorkload;
    return this;
  }

  /**
   * Get computeVmWorkload
   * @return computeVmWorkload
   */
  @javax.annotation.Nullable
  public ComputeVmWorkload getComputeVmWorkload() {
    return computeVmWorkload;
  }

  public void setComputeVmWorkload(ComputeVmWorkload computeVmWorkload) {
    this.computeVmWorkload = computeVmWorkload;
  }


  public Workload name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. A name for this workload. All workloads in a &#x60;CostScenario&#x60; must have a unique &#x60;name&#x60;. Each &#x60;name&#x60; may be at most 128 characters long.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Workload premiumTierEgressWorkload(PremiumTierEgressWorkload premiumTierEgressWorkload) {
    this.premiumTierEgressWorkload = premiumTierEgressWorkload;
    return this;
  }

  /**
   * Get premiumTierEgressWorkload
   * @return premiumTierEgressWorkload
   */
  @javax.annotation.Nullable
  public PremiumTierEgressWorkload getPremiumTierEgressWorkload() {
    return premiumTierEgressWorkload;
  }

  public void setPremiumTierEgressWorkload(PremiumTierEgressWorkload premiumTierEgressWorkload) {
    this.premiumTierEgressWorkload = premiumTierEgressWorkload;
  }


  public Workload standardTierEgressWorkload(StandardTierEgressWorkload standardTierEgressWorkload) {
    this.standardTierEgressWorkload = standardTierEgressWorkload;
    return this;
  }

  /**
   * Get standardTierEgressWorkload
   * @return standardTierEgressWorkload
   */
  @javax.annotation.Nullable
  public StandardTierEgressWorkload getStandardTierEgressWorkload() {
    return standardTierEgressWorkload;
  }

  public void setStandardTierEgressWorkload(StandardTierEgressWorkload standardTierEgressWorkload) {
    this.standardTierEgressWorkload = standardTierEgressWorkload;
  }


  public Workload vmToVmEgressWorkload(VmToVmEgressWorkload vmToVmEgressWorkload) {
    this.vmToVmEgressWorkload = vmToVmEgressWorkload;
    return this;
  }

  /**
   * Get vmToVmEgressWorkload
   * @return vmToVmEgressWorkload
   */
  @javax.annotation.Nullable
  public VmToVmEgressWorkload getVmToVmEgressWorkload() {
    return vmToVmEgressWorkload;
  }

  public void setVmToVmEgressWorkload(VmToVmEgressWorkload vmToVmEgressWorkload) {
    this.vmToVmEgressWorkload = vmToVmEgressWorkload;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Workload workload = (Workload) o;
    return Objects.equals(this.cloudCdnEgressWorkload, workload.cloudCdnEgressWorkload) &&
        Objects.equals(this.cloudCdnWorkload, workload.cloudCdnWorkload) &&
        Objects.equals(this.cloudInterconnectEgressWorkload, workload.cloudInterconnectEgressWorkload) &&
        Objects.equals(this.cloudInterconnectWorkload, workload.cloudInterconnectWorkload) &&
        Objects.equals(this.cloudStorageEgressWorkload, workload.cloudStorageEgressWorkload) &&
        Objects.equals(this.cloudStorageWorkload, workload.cloudStorageWorkload) &&
        Objects.equals(this.computeVmWorkload, workload.computeVmWorkload) &&
        Objects.equals(this.name, workload.name) &&
        Objects.equals(this.premiumTierEgressWorkload, workload.premiumTierEgressWorkload) &&
        Objects.equals(this.standardTierEgressWorkload, workload.standardTierEgressWorkload) &&
        Objects.equals(this.vmToVmEgressWorkload, workload.vmToVmEgressWorkload);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cloudCdnEgressWorkload, cloudCdnWorkload, cloudInterconnectEgressWorkload, cloudInterconnectWorkload, cloudStorageEgressWorkload, cloudStorageWorkload, computeVmWorkload, name, premiumTierEgressWorkload, standardTierEgressWorkload, vmToVmEgressWorkload);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Workload {\n");
    sb.append("    cloudCdnEgressWorkload: ").append(toIndentedString(cloudCdnEgressWorkload)).append("\n");
    sb.append("    cloudCdnWorkload: ").append(toIndentedString(cloudCdnWorkload)).append("\n");
    sb.append("    cloudInterconnectEgressWorkload: ").append(toIndentedString(cloudInterconnectEgressWorkload)).append("\n");
    sb.append("    cloudInterconnectWorkload: ").append(toIndentedString(cloudInterconnectWorkload)).append("\n");
    sb.append("    cloudStorageEgressWorkload: ").append(toIndentedString(cloudStorageEgressWorkload)).append("\n");
    sb.append("    cloudStorageWorkload: ").append(toIndentedString(cloudStorageWorkload)).append("\n");
    sb.append("    computeVmWorkload: ").append(toIndentedString(computeVmWorkload)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    premiumTierEgressWorkload: ").append(toIndentedString(premiumTierEgressWorkload)).append("\n");
    sb.append("    standardTierEgressWorkload: ").append(toIndentedString(standardTierEgressWorkload)).append("\n");
    sb.append("    vmToVmEgressWorkload: ").append(toIndentedString(vmToVmEgressWorkload)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cloudCdnEgressWorkload");
    openapiFields.add("cloudCdnWorkload");
    openapiFields.add("cloudInterconnectEgressWorkload");
    openapiFields.add("cloudInterconnectWorkload");
    openapiFields.add("cloudStorageEgressWorkload");
    openapiFields.add("cloudStorageWorkload");
    openapiFields.add("computeVmWorkload");
    openapiFields.add("name");
    openapiFields.add("premiumTierEgressWorkload");
    openapiFields.add("standardTierEgressWorkload");
    openapiFields.add("vmToVmEgressWorkload");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Workload
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Workload.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Workload is not found in the empty JSON string", Workload.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Workload.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Workload` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `cloudCdnEgressWorkload`
      if (jsonObj.get("cloudCdnEgressWorkload") != null && !jsonObj.get("cloudCdnEgressWorkload").isJsonNull()) {
        CloudCdnEgressWorkload.validateJsonElement(jsonObj.get("cloudCdnEgressWorkload"));
      }
      // validate the optional field `cloudCdnWorkload`
      if (jsonObj.get("cloudCdnWorkload") != null && !jsonObj.get("cloudCdnWorkload").isJsonNull()) {
        CloudCdnWorkload.validateJsonElement(jsonObj.get("cloudCdnWorkload"));
      }
      // validate the optional field `cloudInterconnectEgressWorkload`
      if (jsonObj.get("cloudInterconnectEgressWorkload") != null && !jsonObj.get("cloudInterconnectEgressWorkload").isJsonNull()) {
        CloudInterconnectEgressWorkload.validateJsonElement(jsonObj.get("cloudInterconnectEgressWorkload"));
      }
      // validate the optional field `cloudInterconnectWorkload`
      if (jsonObj.get("cloudInterconnectWorkload") != null && !jsonObj.get("cloudInterconnectWorkload").isJsonNull()) {
        CloudInterconnectWorkload.validateJsonElement(jsonObj.get("cloudInterconnectWorkload"));
      }
      // validate the optional field `cloudStorageEgressWorkload`
      if (jsonObj.get("cloudStorageEgressWorkload") != null && !jsonObj.get("cloudStorageEgressWorkload").isJsonNull()) {
        CloudStorageEgressWorkload.validateJsonElement(jsonObj.get("cloudStorageEgressWorkload"));
      }
      // validate the optional field `cloudStorageWorkload`
      if (jsonObj.get("cloudStorageWorkload") != null && !jsonObj.get("cloudStorageWorkload").isJsonNull()) {
        CloudStorageWorkload.validateJsonElement(jsonObj.get("cloudStorageWorkload"));
      }
      // validate the optional field `computeVmWorkload`
      if (jsonObj.get("computeVmWorkload") != null && !jsonObj.get("computeVmWorkload").isJsonNull()) {
        ComputeVmWorkload.validateJsonElement(jsonObj.get("computeVmWorkload"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `premiumTierEgressWorkload`
      if (jsonObj.get("premiumTierEgressWorkload") != null && !jsonObj.get("premiumTierEgressWorkload").isJsonNull()) {
        PremiumTierEgressWorkload.validateJsonElement(jsonObj.get("premiumTierEgressWorkload"));
      }
      // validate the optional field `standardTierEgressWorkload`
      if (jsonObj.get("standardTierEgressWorkload") != null && !jsonObj.get("standardTierEgressWorkload").isJsonNull()) {
        StandardTierEgressWorkload.validateJsonElement(jsonObj.get("standardTierEgressWorkload"));
      }
      // validate the optional field `vmToVmEgressWorkload`
      if (jsonObj.get("vmToVmEgressWorkload") != null && !jsonObj.get("vmToVmEgressWorkload").isJsonNull()) {
        VmToVmEgressWorkload.validateJsonElement(jsonObj.get("vmToVmEgressWorkload"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Workload.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Workload' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Workload> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Workload.class));

       return (TypeAdapter<T>) new TypeAdapter<Workload>() {
           @Override
           public void write(JsonWriter out, Workload value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Workload read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Workload given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Workload
   * @throws IOException if the JSON string is invalid with respect to Workload
   */
  public static Workload fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Workload.class);
  }

  /**
   * Convert an instance of Workload to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

