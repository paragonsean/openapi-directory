/*
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudBillingBillingaccountpricesV1betaFixedDiscount;
import org.openapitools.client.model.GoogleCloudBillingBillingaccountpricesV1betaFloatingDiscount;
import org.openapitools.client.model.GoogleCloudBillingBillingaccountpricesV1betaMigratedPrice;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Encapsulates a price reason which contains background information about the origin of the price.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:15.055795-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudBillingBillingaccountpricesV1betaPriceReason {
  public static final String SERIALIZED_NAME_DEFAULT_PRICE = "defaultPrice";
  @SerializedName(SERIALIZED_NAME_DEFAULT_PRICE)
  private Object defaultPrice;

  public static final String SERIALIZED_NAME_FIXED_DISCOUNT = "fixedDiscount";
  @SerializedName(SERIALIZED_NAME_FIXED_DISCOUNT)
  private GoogleCloudBillingBillingaccountpricesV1betaFixedDiscount fixedDiscount;

  public static final String SERIALIZED_NAME_FIXED_PRICE = "fixedPrice";
  @SerializedName(SERIALIZED_NAME_FIXED_PRICE)
  private Object fixedPrice;

  public static final String SERIALIZED_NAME_FLOATING_DISCOUNT = "floatingDiscount";
  @SerializedName(SERIALIZED_NAME_FLOATING_DISCOUNT)
  private GoogleCloudBillingBillingaccountpricesV1betaFloatingDiscount floatingDiscount;

  public static final String SERIALIZED_NAME_LIST_PRICE_AS_CEILING = "listPriceAsCeiling";
  @SerializedName(SERIALIZED_NAME_LIST_PRICE_AS_CEILING)
  private Object listPriceAsCeiling;

  public static final String SERIALIZED_NAME_MERGED_PRICE = "mergedPrice";
  @SerializedName(SERIALIZED_NAME_MERGED_PRICE)
  private Object mergedPrice;

  public static final String SERIALIZED_NAME_MIGRATED_PRICE = "migratedPrice";
  @SerializedName(SERIALIZED_NAME_MIGRATED_PRICE)
  private GoogleCloudBillingBillingaccountpricesV1betaMigratedPrice migratedPrice;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public GoogleCloudBillingBillingaccountpricesV1betaPriceReason() {
  }

  public GoogleCloudBillingBillingaccountpricesV1betaPriceReason defaultPrice(Object defaultPrice) {
    this.defaultPrice = defaultPrice;
    return this;
  }

  /**
   * Encapsulates a default price which is the current list price.
   * @return defaultPrice
   */
  @javax.annotation.Nullable
  public Object getDefaultPrice() {
    return defaultPrice;
  }

  public void setDefaultPrice(Object defaultPrice) {
    this.defaultPrice = defaultPrice;
  }


  public GoogleCloudBillingBillingaccountpricesV1betaPriceReason fixedDiscount(GoogleCloudBillingBillingaccountpricesV1betaFixedDiscount fixedDiscount) {
    this.fixedDiscount = fixedDiscount;
    return this;
  }

  /**
   * Get fixedDiscount
   * @return fixedDiscount
   */
  @javax.annotation.Nullable
  public GoogleCloudBillingBillingaccountpricesV1betaFixedDiscount getFixedDiscount() {
    return fixedDiscount;
  }

  public void setFixedDiscount(GoogleCloudBillingBillingaccountpricesV1betaFixedDiscount fixedDiscount) {
    this.fixedDiscount = fixedDiscount;
  }


  public GoogleCloudBillingBillingaccountpricesV1betaPriceReason fixedPrice(Object fixedPrice) {
    this.fixedPrice = fixedPrice;
    return this;
  }

  /**
   * Encapsulates a set fixed price applicable during the terms of a contract agreement.
   * @return fixedPrice
   */
  @javax.annotation.Nullable
  public Object getFixedPrice() {
    return fixedPrice;
  }

  public void setFixedPrice(Object fixedPrice) {
    this.fixedPrice = fixedPrice;
  }


  public GoogleCloudBillingBillingaccountpricesV1betaPriceReason floatingDiscount(GoogleCloudBillingBillingaccountpricesV1betaFloatingDiscount floatingDiscount) {
    this.floatingDiscount = floatingDiscount;
    return this;
  }

  /**
   * Get floatingDiscount
   * @return floatingDiscount
   */
  @javax.annotation.Nullable
  public GoogleCloudBillingBillingaccountpricesV1betaFloatingDiscount getFloatingDiscount() {
    return floatingDiscount;
  }

  public void setFloatingDiscount(GoogleCloudBillingBillingaccountpricesV1betaFloatingDiscount floatingDiscount) {
    this.floatingDiscount = floatingDiscount;
  }


  public GoogleCloudBillingBillingaccountpricesV1betaPriceReason listPriceAsCeiling(Object listPriceAsCeiling) {
    this.listPriceAsCeiling = listPriceAsCeiling;
    return this;
  }

  /**
   * Encapsulates a contract feature that the list price (DefaultPrice) will be used for the price if the current list price drops lower than the custom fixed price. Available to new contracts after March 21, 2022. Applies to all fixed price SKUs in the contract, including FixedPrice, FixedDiscount, MigratedPrice, and MergedPrice.
   * @return listPriceAsCeiling
   */
  @javax.annotation.Nullable
  public Object getListPriceAsCeiling() {
    return listPriceAsCeiling;
  }

  public void setListPriceAsCeiling(Object listPriceAsCeiling) {
    this.listPriceAsCeiling = listPriceAsCeiling;
  }


  public GoogleCloudBillingBillingaccountpricesV1betaPriceReason mergedPrice(Object mergedPrice) {
    this.mergedPrice = mergedPrice;
    return this;
  }

  /**
   * Encapsulates a price after merging from multiple sources. With merged tiers, each individual tier can be from a different source with different discount types.
   * @return mergedPrice
   */
  @javax.annotation.Nullable
  public Object getMergedPrice() {
    return mergedPrice;
  }

  public void setMergedPrice(Object mergedPrice) {
    this.mergedPrice = mergedPrice;
  }


  public GoogleCloudBillingBillingaccountpricesV1betaPriceReason migratedPrice(GoogleCloudBillingBillingaccountpricesV1betaMigratedPrice migratedPrice) {
    this.migratedPrice = migratedPrice;
    return this;
  }

  /**
   * Get migratedPrice
   * @return migratedPrice
   */
  @javax.annotation.Nullable
  public GoogleCloudBillingBillingaccountpricesV1betaMigratedPrice getMigratedPrice() {
    return migratedPrice;
  }

  public void setMigratedPrice(GoogleCloudBillingBillingaccountpricesV1betaMigratedPrice migratedPrice) {
    this.migratedPrice = migratedPrice;
  }


  public GoogleCloudBillingBillingaccountpricesV1betaPriceReason type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Type of the price reason. It can have values such as &#39;unspecified&#39;, &#39;default-price&#39;, &#39;fixed-price&#39;, &#39;fixed-discount&#39;, &#39;floating-discount&#39;, &#39;migrated-price&#39;, &#39;merged-price&#39;, &#39;list-price-as-ceiling&#39;.
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudBillingBillingaccountpricesV1betaPriceReason googleCloudBillingBillingaccountpricesV1betaPriceReason = (GoogleCloudBillingBillingaccountpricesV1betaPriceReason) o;
    return Objects.equals(this.defaultPrice, googleCloudBillingBillingaccountpricesV1betaPriceReason.defaultPrice) &&
        Objects.equals(this.fixedDiscount, googleCloudBillingBillingaccountpricesV1betaPriceReason.fixedDiscount) &&
        Objects.equals(this.fixedPrice, googleCloudBillingBillingaccountpricesV1betaPriceReason.fixedPrice) &&
        Objects.equals(this.floatingDiscount, googleCloudBillingBillingaccountpricesV1betaPriceReason.floatingDiscount) &&
        Objects.equals(this.listPriceAsCeiling, googleCloudBillingBillingaccountpricesV1betaPriceReason.listPriceAsCeiling) &&
        Objects.equals(this.mergedPrice, googleCloudBillingBillingaccountpricesV1betaPriceReason.mergedPrice) &&
        Objects.equals(this.migratedPrice, googleCloudBillingBillingaccountpricesV1betaPriceReason.migratedPrice) &&
        Objects.equals(this.type, googleCloudBillingBillingaccountpricesV1betaPriceReason.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultPrice, fixedDiscount, fixedPrice, floatingDiscount, listPriceAsCeiling, mergedPrice, migratedPrice, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudBillingBillingaccountpricesV1betaPriceReason {\n");
    sb.append("    defaultPrice: ").append(toIndentedString(defaultPrice)).append("\n");
    sb.append("    fixedDiscount: ").append(toIndentedString(fixedDiscount)).append("\n");
    sb.append("    fixedPrice: ").append(toIndentedString(fixedPrice)).append("\n");
    sb.append("    floatingDiscount: ").append(toIndentedString(floatingDiscount)).append("\n");
    sb.append("    listPriceAsCeiling: ").append(toIndentedString(listPriceAsCeiling)).append("\n");
    sb.append("    mergedPrice: ").append(toIndentedString(mergedPrice)).append("\n");
    sb.append("    migratedPrice: ").append(toIndentedString(migratedPrice)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("defaultPrice");
    openapiFields.add("fixedDiscount");
    openapiFields.add("fixedPrice");
    openapiFields.add("floatingDiscount");
    openapiFields.add("listPriceAsCeiling");
    openapiFields.add("mergedPrice");
    openapiFields.add("migratedPrice");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudBillingBillingaccountpricesV1betaPriceReason
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudBillingBillingaccountpricesV1betaPriceReason.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudBillingBillingaccountpricesV1betaPriceReason is not found in the empty JSON string", GoogleCloudBillingBillingaccountpricesV1betaPriceReason.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudBillingBillingaccountpricesV1betaPriceReason.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudBillingBillingaccountpricesV1betaPriceReason` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `fixedDiscount`
      if (jsonObj.get("fixedDiscount") != null && !jsonObj.get("fixedDiscount").isJsonNull()) {
        GoogleCloudBillingBillingaccountpricesV1betaFixedDiscount.validateJsonElement(jsonObj.get("fixedDiscount"));
      }
      // validate the optional field `floatingDiscount`
      if (jsonObj.get("floatingDiscount") != null && !jsonObj.get("floatingDiscount").isJsonNull()) {
        GoogleCloudBillingBillingaccountpricesV1betaFloatingDiscount.validateJsonElement(jsonObj.get("floatingDiscount"));
      }
      // validate the optional field `migratedPrice`
      if (jsonObj.get("migratedPrice") != null && !jsonObj.get("migratedPrice").isJsonNull()) {
        GoogleCloudBillingBillingaccountpricesV1betaMigratedPrice.validateJsonElement(jsonObj.get("migratedPrice"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudBillingBillingaccountpricesV1betaPriceReason.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudBillingBillingaccountpricesV1betaPriceReason' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudBillingBillingaccountpricesV1betaPriceReason> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudBillingBillingaccountpricesV1betaPriceReason.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudBillingBillingaccountpricesV1betaPriceReason>() {
           @Override
           public void write(JsonWriter out, GoogleCloudBillingBillingaccountpricesV1betaPriceReason value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudBillingBillingaccountpricesV1betaPriceReason read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudBillingBillingaccountpricesV1betaPriceReason given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudBillingBillingaccountpricesV1betaPriceReason
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudBillingBillingaccountpricesV1betaPriceReason
   */
  public static GoogleCloudBillingBillingaccountpricesV1betaPriceReason fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudBillingBillingaccountpricesV1betaPriceReason.class);
  }

  /**
   * Convert an instance of GoogleCloudBillingBillingaccountpricesV1betaPriceReason to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

