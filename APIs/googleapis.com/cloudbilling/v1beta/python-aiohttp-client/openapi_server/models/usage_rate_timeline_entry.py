# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.estimation_time_point import EstimationTimePoint
from openapi_server import util


class UsageRateTimelineEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, effective_time: EstimationTimePoint=None, usage_rate: float=None):
        """UsageRateTimelineEntry - a model defined in OpenAPI

        :param effective_time: The effective_time of this UsageRateTimelineEntry.
        :param usage_rate: The usage_rate of this UsageRateTimelineEntry.
        """
        self.openapi_types = {
            'effective_time': EstimationTimePoint,
            'usage_rate': float
        }

        self.attribute_map = {
            'effective_time': 'effectiveTime',
            'usage_rate': 'usageRate'
        }

        self._effective_time = effective_time
        self._usage_rate = usage_rate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UsageRateTimelineEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UsageRateTimelineEntry of this UsageRateTimelineEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def effective_time(self):
        """Gets the effective_time of this UsageRateTimelineEntry.


        :return: The effective_time of this UsageRateTimelineEntry.
        :rtype: EstimationTimePoint
        """
        return self._effective_time

    @effective_time.setter
    def effective_time(self, effective_time):
        """Sets the effective_time of this UsageRateTimelineEntry.


        :param effective_time: The effective_time of this UsageRateTimelineEntry.
        :type effective_time: EstimationTimePoint
        """

        self._effective_time = effective_time

    @property
    def usage_rate(self):
        """Gets the usage_rate of this UsageRateTimelineEntry.

        The usage rate.

        :return: The usage_rate of this UsageRateTimelineEntry.
        :rtype: float
        """
        return self._usage_rate

    @usage_rate.setter
    def usage_rate(self, usage_rate):
        """Sets the usage_rate of this UsageRateTimelineEntry.

        The usage rate.

        :param usage_rate: The usage_rate of this UsageRateTimelineEntry.
        :type usage_rate: float
        """

        self._usage_rate = usage_rate
