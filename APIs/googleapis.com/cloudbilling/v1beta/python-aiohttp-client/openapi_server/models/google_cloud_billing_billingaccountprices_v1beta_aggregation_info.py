# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudBillingBillingaccountpricesV1betaAggregationInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, interval: str=None, level: str=None):
        """GoogleCloudBillingBillingaccountpricesV1betaAggregationInfo - a model defined in OpenAPI

        :param interval: The interval of this GoogleCloudBillingBillingaccountpricesV1betaAggregationInfo.
        :param level: The level of this GoogleCloudBillingBillingaccountpricesV1betaAggregationInfo.
        """
        self.openapi_types = {
            'interval': str,
            'level': str
        }

        self.attribute_map = {
            'interval': 'interval',
            'level': 'level'
        }

        self._interval = interval
        self._level = level

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudBillingBillingaccountpricesV1betaAggregationInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudBillingBillingaccountpricesV1betaAggregationInfo of this GoogleCloudBillingBillingaccountpricesV1betaAggregationInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def interval(self):
        """Gets the interval of this GoogleCloudBillingBillingaccountpricesV1betaAggregationInfo.

        Interval at which usage is aggregated to compute cost. Example: \"MONTHLY\" interval indicates that usage is aggregated every month.

        :return: The interval of this GoogleCloudBillingBillingaccountpricesV1betaAggregationInfo.
        :rtype: str
        """
        return self._interval

    @interval.setter
    def interval(self, interval):
        """Sets the interval of this GoogleCloudBillingBillingaccountpricesV1betaAggregationInfo.

        Interval at which usage is aggregated to compute cost. Example: \"MONTHLY\" interval indicates that usage is aggregated every month.

        :param interval: The interval of this GoogleCloudBillingBillingaccountpricesV1betaAggregationInfo.
        :type interval: str
        """
        allowed_values = ["INTERVAL_UNSPECIFIED", "INTERVAL_MONTHLY", "INTERVAL_DAILY"]  # noqa: E501
        if interval not in allowed_values:
            raise ValueError(
                "Invalid value for `interval` ({0}), must be one of {1}"
                .format(interval, allowed_values)
            )

        self._interval = interval

    @property
    def level(self):
        """Gets the level of this GoogleCloudBillingBillingaccountpricesV1betaAggregationInfo.

        Level at which usage is aggregated to compute cost. Example: \"ACCOUNT\" level indicates that usage is aggregated across all projects in a single account.

        :return: The level of this GoogleCloudBillingBillingaccountpricesV1betaAggregationInfo.
        :rtype: str
        """
        return self._level

    @level.setter
    def level(self, level):
        """Sets the level of this GoogleCloudBillingBillingaccountpricesV1betaAggregationInfo.

        Level at which usage is aggregated to compute cost. Example: \"ACCOUNT\" level indicates that usage is aggregated across all projects in a single account.

        :param level: The level of this GoogleCloudBillingBillingaccountpricesV1betaAggregationInfo.
        :type level: str
        """
        allowed_values = ["LEVEL_UNSPECIFIED", "LEVEL_ACCOUNT", "LEVEL_PROJECT"]  # noqa: E501
        if level not in allowed_values:
            raise ValueError(
                "Invalid value for `level` ({0}), must be one of {1}"
                .format(level, allowed_values)
            )

        self._level = level
