# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.price import Price
from openapi_server import util


class Sku(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, prices: List[Price]=None, sku: str=None):
        """Sku - a model defined in OpenAPI

        :param display_name: The display_name of this Sku.
        :param prices: The prices of this Sku.
        :param sku: The sku of this Sku.
        """
        self.openapi_types = {
            'display_name': str,
            'prices': List[Price],
            'sku': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'prices': 'prices',
            'sku': 'sku'
        }

        self._display_name = display_name
        self._prices = prices
        self._sku = sku

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Sku':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Sku of this Sku.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this Sku.

        The display name for the SKU. Example: A2 Instance Core running in Americas

        :return: The display_name of this Sku.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this Sku.

        The display name for the SKU. Example: A2 Instance Core running in Americas

        :param display_name: The display_name of this Sku.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def prices(self):
        """Gets the prices of this Sku.

        A timeline of prices for a SKU in chronological order. Note: The API currently only supports using a constant price for the entire estimation time frame so this list will contain a single value.

        :return: The prices of this Sku.
        :rtype: List[Price]
        """
        return self._prices

    @prices.setter
    def prices(self, prices):
        """Sets the prices of this Sku.

        A timeline of prices for a SKU in chronological order. Note: The API currently only supports using a constant price for the entire estimation time frame so this list will contain a single value.

        :param prices: The prices of this Sku.
        :type prices: List[Price]
        """

        self._prices = prices

    @property
    def sku(self):
        """Gets the sku of this Sku.

        The resource name for the SKU. Example: \"services/DA34-426B-A397/skus/AA95-CD31-42FE\"

        :return: The sku of this Sku.
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this Sku.

        The resource name for the SKU. Example: \"services/DA34-426B-A397/skus/AA95-CD31-42FE\"

        :param sku: The sku of this Sku.
        :type sku: str
        """

        self._sku = sku
