# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.segment_cost_estimate import SegmentCostEstimate
from openapi_server.models.sku import Sku
from openapi_server import util


class CostEstimationResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currency_code: str=None, segment_cost_estimates: List[SegmentCostEstimate]=None, skus: List[Sku]=None):
        """CostEstimationResult - a model defined in OpenAPI

        :param currency_code: The currency_code of this CostEstimationResult.
        :param segment_cost_estimates: The segment_cost_estimates of this CostEstimationResult.
        :param skus: The skus of this CostEstimationResult.
        """
        self.openapi_types = {
            'currency_code': str,
            'segment_cost_estimates': List[SegmentCostEstimate],
            'skus': List[Sku]
        }

        self.attribute_map = {
            'currency_code': 'currencyCode',
            'segment_cost_estimates': 'segmentCostEstimates',
            'skus': 'skus'
        }

        self._currency_code = currency_code
        self._segment_cost_estimates = segment_cost_estimates
        self._skus = skus

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CostEstimationResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CostEstimationResult of this CostEstimationResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currency_code(self):
        """Gets the currency_code of this CostEstimationResult.

        Required. The ISO 4217 currency code for the cost estimate.

        :return: The currency_code of this CostEstimationResult.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this CostEstimationResult.

        Required. The ISO 4217 currency code for the cost estimate.

        :param currency_code: The currency_code of this CostEstimationResult.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def segment_cost_estimates(self):
        """Gets the segment_cost_estimates of this CostEstimationResult.

        Required. Estimated costs for each idealized month of a `CostScenario`.

        :return: The segment_cost_estimates of this CostEstimationResult.
        :rtype: List[SegmentCostEstimate]
        """
        return self._segment_cost_estimates

    @segment_cost_estimates.setter
    def segment_cost_estimates(self, segment_cost_estimates):
        """Sets the segment_cost_estimates of this CostEstimationResult.

        Required. Estimated costs for each idealized month of a `CostScenario`.

        :param segment_cost_estimates: The segment_cost_estimates of this CostEstimationResult.
        :type segment_cost_estimates: List[SegmentCostEstimate]
        """

        self._segment_cost_estimates = segment_cost_estimates

    @property
    def skus(self):
        """Gets the skus of this CostEstimationResult.

        Required. Information about SKUs used in the estimate.

        :return: The skus of this CostEstimationResult.
        :rtype: List[Sku]
        """
        return self._skus

    @skus.setter
    def skus(self, skus):
        """Sets the skus of this CostEstimationResult.

        Required. Information about SKUs used in the estimate.

        :param skus: The skus of this CostEstimationResult.
        :type skus: List[Sku]
        """

        self._skus = skus
