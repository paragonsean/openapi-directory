# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.credit_estimate import CreditEstimate
from openapi_server.models.money import Money
from openapi_server import util


class CostEstimate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, credit_estimates: List[CreditEstimate]=None, net_cost_estimate: Money=None, pre_credit_cost_estimate: Money=None):
        """CostEstimate - a model defined in OpenAPI

        :param credit_estimates: The credit_estimates of this CostEstimate.
        :param net_cost_estimate: The net_cost_estimate of this CostEstimate.
        :param pre_credit_cost_estimate: The pre_credit_cost_estimate of this CostEstimate.
        """
        self.openapi_types = {
            'credit_estimates': List[CreditEstimate],
            'net_cost_estimate': Money,
            'pre_credit_cost_estimate': Money
        }

        self.attribute_map = {
            'credit_estimates': 'creditEstimates',
            'net_cost_estimate': 'netCostEstimate',
            'pre_credit_cost_estimate': 'preCreditCostEstimate'
        }

        self._credit_estimates = credit_estimates
        self._net_cost_estimate = net_cost_estimate
        self._pre_credit_cost_estimate = pre_credit_cost_estimate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CostEstimate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CostEstimate of this CostEstimate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def credit_estimates(self):
        """Gets the credit_estimates of this CostEstimate.

        The estimated credits applied.

        :return: The credit_estimates of this CostEstimate.
        :rtype: List[CreditEstimate]
        """
        return self._credit_estimates

    @credit_estimates.setter
    def credit_estimates(self, credit_estimates):
        """Sets the credit_estimates of this CostEstimate.

        The estimated credits applied.

        :param credit_estimates: The credit_estimates of this CostEstimate.
        :type credit_estimates: List[CreditEstimate]
        """

        self._credit_estimates = credit_estimates

    @property
    def net_cost_estimate(self):
        """Gets the net_cost_estimate of this CostEstimate.


        :return: The net_cost_estimate of this CostEstimate.
        :rtype: Money
        """
        return self._net_cost_estimate

    @net_cost_estimate.setter
    def net_cost_estimate(self, net_cost_estimate):
        """Sets the net_cost_estimate of this CostEstimate.


        :param net_cost_estimate: The net_cost_estimate of this CostEstimate.
        :type net_cost_estimate: Money
        """

        self._net_cost_estimate = net_cost_estimate

    @property
    def pre_credit_cost_estimate(self):
        """Gets the pre_credit_cost_estimate of this CostEstimate.


        :return: The pre_credit_cost_estimate of this CostEstimate.
        :rtype: Money
        """
        return self._pre_credit_cost_estimate

    @pre_credit_cost_estimate.setter
    def pre_credit_cost_estimate(self, pre_credit_cost_estimate):
        """Sets the pre_credit_cost_estimate of this CostEstimate.


        :param pre_credit_cost_estimate: The pre_credit_cost_estimate of this CostEstimate.
        :type pre_credit_cost_estimate: Money
        """

        self._pre_credit_cost_estimate = pre_credit_cost_estimate
