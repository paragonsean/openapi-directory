# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.inter_region_egress import InterRegionEgress
from openapi_server.models.intra_region_egress import IntraRegionEgress
from openapi_server import util


class VmToVmEgressWorkload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, inter_region_egress: InterRegionEgress=None, intra_region_egress: IntraRegionEgress=None):
        """VmToVmEgressWorkload - a model defined in OpenAPI

        :param inter_region_egress: The inter_region_egress of this VmToVmEgressWorkload.
        :param intra_region_egress: The intra_region_egress of this VmToVmEgressWorkload.
        """
        self.openapi_types = {
            'inter_region_egress': InterRegionEgress,
            'intra_region_egress': IntraRegionEgress
        }

        self.attribute_map = {
            'inter_region_egress': 'interRegionEgress',
            'intra_region_egress': 'intraRegionEgress'
        }

        self._inter_region_egress = inter_region_egress
        self._intra_region_egress = intra_region_egress

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VmToVmEgressWorkload':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VmToVmEgressWorkload of this VmToVmEgressWorkload.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inter_region_egress(self):
        """Gets the inter_region_egress of this VmToVmEgressWorkload.


        :return: The inter_region_egress of this VmToVmEgressWorkload.
        :rtype: InterRegionEgress
        """
        return self._inter_region_egress

    @inter_region_egress.setter
    def inter_region_egress(self, inter_region_egress):
        """Sets the inter_region_egress of this VmToVmEgressWorkload.


        :param inter_region_egress: The inter_region_egress of this VmToVmEgressWorkload.
        :type inter_region_egress: InterRegionEgress
        """

        self._inter_region_egress = inter_region_egress

    @property
    def intra_region_egress(self):
        """Gets the intra_region_egress of this VmToVmEgressWorkload.


        :return: The intra_region_egress of this VmToVmEgressWorkload.
        :rtype: IntraRegionEgress
        """
        return self._intra_region_egress

    @intra_region_egress.setter
    def intra_region_egress(self, intra_region_egress):
        """Sets the intra_region_egress of this VmToVmEgressWorkload.


        :param intra_region_egress: The intra_region_egress of this VmToVmEgressWorkload.
        :type intra_region_egress: IntraRegionEgress
        """

        self._intra_region_egress = intra_region_egress
