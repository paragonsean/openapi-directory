# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cloud_cdn_egress_workload import CloudCdnEgressWorkload
from openapi_server.models.cloud_cdn_workload import CloudCdnWorkload
from openapi_server.models.cloud_interconnect_egress_workload import CloudInterconnectEgressWorkload
from openapi_server.models.cloud_interconnect_workload import CloudInterconnectWorkload
from openapi_server.models.cloud_storage_egress_workload import CloudStorageEgressWorkload
from openapi_server.models.cloud_storage_workload import CloudStorageWorkload
from openapi_server.models.compute_vm_workload import ComputeVmWorkload
from openapi_server.models.premium_tier_egress_workload import PremiumTierEgressWorkload
from openapi_server.models.standard_tier_egress_workload import StandardTierEgressWorkload
from openapi_server.models.vm_to_vm_egress_workload import VmToVmEgressWorkload
from openapi_server import util


class Workload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cloud_cdn_egress_workload: CloudCdnEgressWorkload=None, cloud_cdn_workload: CloudCdnWorkload=None, cloud_interconnect_egress_workload: CloudInterconnectEgressWorkload=None, cloud_interconnect_workload: CloudInterconnectWorkload=None, cloud_storage_egress_workload: CloudStorageEgressWorkload=None, cloud_storage_workload: CloudStorageWorkload=None, compute_vm_workload: ComputeVmWorkload=None, name: str=None, premium_tier_egress_workload: PremiumTierEgressWorkload=None, standard_tier_egress_workload: StandardTierEgressWorkload=None, vm_to_vm_egress_workload: VmToVmEgressWorkload=None):
        """Workload - a model defined in OpenAPI

        :param cloud_cdn_egress_workload: The cloud_cdn_egress_workload of this Workload.
        :param cloud_cdn_workload: The cloud_cdn_workload of this Workload.
        :param cloud_interconnect_egress_workload: The cloud_interconnect_egress_workload of this Workload.
        :param cloud_interconnect_workload: The cloud_interconnect_workload of this Workload.
        :param cloud_storage_egress_workload: The cloud_storage_egress_workload of this Workload.
        :param cloud_storage_workload: The cloud_storage_workload of this Workload.
        :param compute_vm_workload: The compute_vm_workload of this Workload.
        :param name: The name of this Workload.
        :param premium_tier_egress_workload: The premium_tier_egress_workload of this Workload.
        :param standard_tier_egress_workload: The standard_tier_egress_workload of this Workload.
        :param vm_to_vm_egress_workload: The vm_to_vm_egress_workload of this Workload.
        """
        self.openapi_types = {
            'cloud_cdn_egress_workload': CloudCdnEgressWorkload,
            'cloud_cdn_workload': CloudCdnWorkload,
            'cloud_interconnect_egress_workload': CloudInterconnectEgressWorkload,
            'cloud_interconnect_workload': CloudInterconnectWorkload,
            'cloud_storage_egress_workload': CloudStorageEgressWorkload,
            'cloud_storage_workload': CloudStorageWorkload,
            'compute_vm_workload': ComputeVmWorkload,
            'name': str,
            'premium_tier_egress_workload': PremiumTierEgressWorkload,
            'standard_tier_egress_workload': StandardTierEgressWorkload,
            'vm_to_vm_egress_workload': VmToVmEgressWorkload
        }

        self.attribute_map = {
            'cloud_cdn_egress_workload': 'cloudCdnEgressWorkload',
            'cloud_cdn_workload': 'cloudCdnWorkload',
            'cloud_interconnect_egress_workload': 'cloudInterconnectEgressWorkload',
            'cloud_interconnect_workload': 'cloudInterconnectWorkload',
            'cloud_storage_egress_workload': 'cloudStorageEgressWorkload',
            'cloud_storage_workload': 'cloudStorageWorkload',
            'compute_vm_workload': 'computeVmWorkload',
            'name': 'name',
            'premium_tier_egress_workload': 'premiumTierEgressWorkload',
            'standard_tier_egress_workload': 'standardTierEgressWorkload',
            'vm_to_vm_egress_workload': 'vmToVmEgressWorkload'
        }

        self._cloud_cdn_egress_workload = cloud_cdn_egress_workload
        self._cloud_cdn_workload = cloud_cdn_workload
        self._cloud_interconnect_egress_workload = cloud_interconnect_egress_workload
        self._cloud_interconnect_workload = cloud_interconnect_workload
        self._cloud_storage_egress_workload = cloud_storage_egress_workload
        self._cloud_storage_workload = cloud_storage_workload
        self._compute_vm_workload = compute_vm_workload
        self._name = name
        self._premium_tier_egress_workload = premium_tier_egress_workload
        self._standard_tier_egress_workload = standard_tier_egress_workload
        self._vm_to_vm_egress_workload = vm_to_vm_egress_workload

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Workload':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Workload of this Workload.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cloud_cdn_egress_workload(self):
        """Gets the cloud_cdn_egress_workload of this Workload.


        :return: The cloud_cdn_egress_workload of this Workload.
        :rtype: CloudCdnEgressWorkload
        """
        return self._cloud_cdn_egress_workload

    @cloud_cdn_egress_workload.setter
    def cloud_cdn_egress_workload(self, cloud_cdn_egress_workload):
        """Sets the cloud_cdn_egress_workload of this Workload.


        :param cloud_cdn_egress_workload: The cloud_cdn_egress_workload of this Workload.
        :type cloud_cdn_egress_workload: CloudCdnEgressWorkload
        """

        self._cloud_cdn_egress_workload = cloud_cdn_egress_workload

    @property
    def cloud_cdn_workload(self):
        """Gets the cloud_cdn_workload of this Workload.


        :return: The cloud_cdn_workload of this Workload.
        :rtype: CloudCdnWorkload
        """
        return self._cloud_cdn_workload

    @cloud_cdn_workload.setter
    def cloud_cdn_workload(self, cloud_cdn_workload):
        """Sets the cloud_cdn_workload of this Workload.


        :param cloud_cdn_workload: The cloud_cdn_workload of this Workload.
        :type cloud_cdn_workload: CloudCdnWorkload
        """

        self._cloud_cdn_workload = cloud_cdn_workload

    @property
    def cloud_interconnect_egress_workload(self):
        """Gets the cloud_interconnect_egress_workload of this Workload.


        :return: The cloud_interconnect_egress_workload of this Workload.
        :rtype: CloudInterconnectEgressWorkload
        """
        return self._cloud_interconnect_egress_workload

    @cloud_interconnect_egress_workload.setter
    def cloud_interconnect_egress_workload(self, cloud_interconnect_egress_workload):
        """Sets the cloud_interconnect_egress_workload of this Workload.


        :param cloud_interconnect_egress_workload: The cloud_interconnect_egress_workload of this Workload.
        :type cloud_interconnect_egress_workload: CloudInterconnectEgressWorkload
        """

        self._cloud_interconnect_egress_workload = cloud_interconnect_egress_workload

    @property
    def cloud_interconnect_workload(self):
        """Gets the cloud_interconnect_workload of this Workload.


        :return: The cloud_interconnect_workload of this Workload.
        :rtype: CloudInterconnectWorkload
        """
        return self._cloud_interconnect_workload

    @cloud_interconnect_workload.setter
    def cloud_interconnect_workload(self, cloud_interconnect_workload):
        """Sets the cloud_interconnect_workload of this Workload.


        :param cloud_interconnect_workload: The cloud_interconnect_workload of this Workload.
        :type cloud_interconnect_workload: CloudInterconnectWorkload
        """

        self._cloud_interconnect_workload = cloud_interconnect_workload

    @property
    def cloud_storage_egress_workload(self):
        """Gets the cloud_storage_egress_workload of this Workload.


        :return: The cloud_storage_egress_workload of this Workload.
        :rtype: CloudStorageEgressWorkload
        """
        return self._cloud_storage_egress_workload

    @cloud_storage_egress_workload.setter
    def cloud_storage_egress_workload(self, cloud_storage_egress_workload):
        """Sets the cloud_storage_egress_workload of this Workload.


        :param cloud_storage_egress_workload: The cloud_storage_egress_workload of this Workload.
        :type cloud_storage_egress_workload: CloudStorageEgressWorkload
        """

        self._cloud_storage_egress_workload = cloud_storage_egress_workload

    @property
    def cloud_storage_workload(self):
        """Gets the cloud_storage_workload of this Workload.


        :return: The cloud_storage_workload of this Workload.
        :rtype: CloudStorageWorkload
        """
        return self._cloud_storage_workload

    @cloud_storage_workload.setter
    def cloud_storage_workload(self, cloud_storage_workload):
        """Sets the cloud_storage_workload of this Workload.


        :param cloud_storage_workload: The cloud_storage_workload of this Workload.
        :type cloud_storage_workload: CloudStorageWorkload
        """

        self._cloud_storage_workload = cloud_storage_workload

    @property
    def compute_vm_workload(self):
        """Gets the compute_vm_workload of this Workload.


        :return: The compute_vm_workload of this Workload.
        :rtype: ComputeVmWorkload
        """
        return self._compute_vm_workload

    @compute_vm_workload.setter
    def compute_vm_workload(self, compute_vm_workload):
        """Sets the compute_vm_workload of this Workload.


        :param compute_vm_workload: The compute_vm_workload of this Workload.
        :type compute_vm_workload: ComputeVmWorkload
        """

        self._compute_vm_workload = compute_vm_workload

    @property
    def name(self):
        """Gets the name of this Workload.

        Required. A name for this workload. All workloads in a `CostScenario` must have a unique `name`. Each `name` may be at most 128 characters long.

        :return: The name of this Workload.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Workload.

        Required. A name for this workload. All workloads in a `CostScenario` must have a unique `name`. Each `name` may be at most 128 characters long.

        :param name: The name of this Workload.
        :type name: str
        """

        self._name = name

    @property
    def premium_tier_egress_workload(self):
        """Gets the premium_tier_egress_workload of this Workload.


        :return: The premium_tier_egress_workload of this Workload.
        :rtype: PremiumTierEgressWorkload
        """
        return self._premium_tier_egress_workload

    @premium_tier_egress_workload.setter
    def premium_tier_egress_workload(self, premium_tier_egress_workload):
        """Sets the premium_tier_egress_workload of this Workload.


        :param premium_tier_egress_workload: The premium_tier_egress_workload of this Workload.
        :type premium_tier_egress_workload: PremiumTierEgressWorkload
        """

        self._premium_tier_egress_workload = premium_tier_egress_workload

    @property
    def standard_tier_egress_workload(self):
        """Gets the standard_tier_egress_workload of this Workload.


        :return: The standard_tier_egress_workload of this Workload.
        :rtype: StandardTierEgressWorkload
        """
        return self._standard_tier_egress_workload

    @standard_tier_egress_workload.setter
    def standard_tier_egress_workload(self, standard_tier_egress_workload):
        """Sets the standard_tier_egress_workload of this Workload.


        :param standard_tier_egress_workload: The standard_tier_egress_workload of this Workload.
        :type standard_tier_egress_workload: StandardTierEgressWorkload
        """

        self._standard_tier_egress_workload = standard_tier_egress_workload

    @property
    def vm_to_vm_egress_workload(self):
        """Gets the vm_to_vm_egress_workload of this Workload.


        :return: The vm_to_vm_egress_workload of this Workload.
        :rtype: VmToVmEgressWorkload
        """
        return self._vm_to_vm_egress_workload

    @vm_to_vm_egress_workload.setter
    def vm_to_vm_egress_workload(self, vm_to_vm_egress_workload):
        """Sets the vm_to_vm_egress_workload of this Workload.


        :param vm_to_vm_egress_workload: The vm_to_vm_egress_workload of this Workload.
        :type vm_to_vm_egress_workload: VmToVmEgressWorkload
        """

        self._vm_to_vm_egress_workload = vm_to_vm_egress_workload
