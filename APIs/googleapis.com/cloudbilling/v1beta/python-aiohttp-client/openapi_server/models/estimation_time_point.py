# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EstimationTimePoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, estimation_time_frame_offset: str=None):
        """EstimationTimePoint - a model defined in OpenAPI

        :param estimation_time_frame_offset: The estimation_time_frame_offset of this EstimationTimePoint.
        """
        self.openapi_types = {
            'estimation_time_frame_offset': str
        }

        self.attribute_map = {
            'estimation_time_frame_offset': 'estimationTimeFrameOffset'
        }

        self._estimation_time_frame_offset = estimation_time_frame_offset

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EstimationTimePoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EstimationTimePoint of this EstimationTimePoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def estimation_time_frame_offset(self):
        """Gets the estimation_time_frame_offset of this EstimationTimePoint.

        The point in time, relative to the start of the time frame covered by the cost estimate.

        :return: The estimation_time_frame_offset of this EstimationTimePoint.
        :rtype: str
        """
        return self._estimation_time_frame_offset

    @estimation_time_frame_offset.setter
    def estimation_time_frame_offset(self, estimation_time_frame_offset):
        """Sets the estimation_time_frame_offset of this EstimationTimePoint.

        The point in time, relative to the start of the time frame covered by the cost estimate.

        :param estimation_time_frame_offset: The estimation_time_frame_offset of this EstimationTimePoint.
        :type estimation_time_frame_offset: str
        """

        self._estimation_time_frame_offset = estimation_time_frame_offset
