# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cache_fill_regions import CacheFillRegions
from openapi_server.models.usage import Usage
from openapi_server import util


class CloudCdnWorkload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cache_fill_origin_service: str=None, cache_fill_rate: Usage=None, cache_fill_regions: CacheFillRegions=None, cache_look_up_rate: Usage=None):
        """CloudCdnWorkload - a model defined in OpenAPI

        :param cache_fill_origin_service: The cache_fill_origin_service of this CloudCdnWorkload.
        :param cache_fill_rate: The cache_fill_rate of this CloudCdnWorkload.
        :param cache_fill_regions: The cache_fill_regions of this CloudCdnWorkload.
        :param cache_look_up_rate: The cache_look_up_rate of this CloudCdnWorkload.
        """
        self.openapi_types = {
            'cache_fill_origin_service': str,
            'cache_fill_rate': Usage,
            'cache_fill_regions': CacheFillRegions,
            'cache_look_up_rate': Usage
        }

        self.attribute_map = {
            'cache_fill_origin_service': 'cacheFillOriginService',
            'cache_fill_rate': 'cacheFillRate',
            'cache_fill_regions': 'cacheFillRegions',
            'cache_look_up_rate': 'cacheLookUpRate'
        }

        self._cache_fill_origin_service = cache_fill_origin_service
        self._cache_fill_rate = cache_fill_rate
        self._cache_fill_regions = cache_fill_regions
        self._cache_look_up_rate = cache_look_up_rate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CloudCdnWorkload':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CloudCdnWorkload of this CloudCdnWorkload.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cache_fill_origin_service(self):
        """Gets the cache_fill_origin_service of this CloudCdnWorkload.

        The source service for the cache fill.

        :return: The cache_fill_origin_service of this CloudCdnWorkload.
        :rtype: str
        """
        return self._cache_fill_origin_service

    @cache_fill_origin_service.setter
    def cache_fill_origin_service(self, cache_fill_origin_service):
        """Sets the cache_fill_origin_service of this CloudCdnWorkload.

        The source service for the cache fill.

        :param cache_fill_origin_service: The cache_fill_origin_service of this CloudCdnWorkload.
        :type cache_fill_origin_service: str
        """
        allowed_values = ["CACHE_FILL_ORIGIN_SERVICE_UNSPECIFIED", "CACHE_FILL_ORIGIN_SERVICE_GOOGLE_CLOUD_STORAGE_BUCKET", "CACHE_FILL_ORIGIN_SERVICE_BACKEND_SERVICE"]  # noqa: E501
        if cache_fill_origin_service not in allowed_values:
            raise ValueError(
                "Invalid value for `cache_fill_origin_service` ({0}), must be one of {1}"
                .format(cache_fill_origin_service, allowed_values)
            )

        self._cache_fill_origin_service = cache_fill_origin_service

    @property
    def cache_fill_rate(self):
        """Gets the cache_fill_rate of this CloudCdnWorkload.


        :return: The cache_fill_rate of this CloudCdnWorkload.
        :rtype: Usage
        """
        return self._cache_fill_rate

    @cache_fill_rate.setter
    def cache_fill_rate(self, cache_fill_rate):
        """Sets the cache_fill_rate of this CloudCdnWorkload.


        :param cache_fill_rate: The cache_fill_rate of this CloudCdnWorkload.
        :type cache_fill_rate: Usage
        """

        self._cache_fill_rate = cache_fill_rate

    @property
    def cache_fill_regions(self):
        """Gets the cache_fill_regions of this CloudCdnWorkload.


        :return: The cache_fill_regions of this CloudCdnWorkload.
        :rtype: CacheFillRegions
        """
        return self._cache_fill_regions

    @cache_fill_regions.setter
    def cache_fill_regions(self, cache_fill_regions):
        """Sets the cache_fill_regions of this CloudCdnWorkload.


        :param cache_fill_regions: The cache_fill_regions of this CloudCdnWorkload.
        :type cache_fill_regions: CacheFillRegions
        """

        self._cache_fill_regions = cache_fill_regions

    @property
    def cache_look_up_rate(self):
        """Gets the cache_look_up_rate of this CloudCdnWorkload.


        :return: The cache_look_up_rate of this CloudCdnWorkload.
        :rtype: Usage
        """
        return self._cache_look_up_rate

    @cache_look_up_rate.setter
    def cache_look_up_rate(self, cache_look_up_rate):
        """Sets the cache_look_up_rate of this CloudCdnWorkload.


        :param cache_look_up_rate: The cache_look_up_rate of this CloudCdnWorkload.
        :type cache_look_up_rate: Usage
        """

        self._cache_look_up_rate = cache_look_up_rate
