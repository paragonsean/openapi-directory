# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cost_scenario import CostScenario
from openapi_server import util


class EstimateCostScenarioWithListPriceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cost_scenario: CostScenario=None):
        """EstimateCostScenarioWithListPriceRequest - a model defined in OpenAPI

        :param cost_scenario: The cost_scenario of this EstimateCostScenarioWithListPriceRequest.
        """
        self.openapi_types = {
            'cost_scenario': CostScenario
        }

        self.attribute_map = {
            'cost_scenario': 'costScenario'
        }

        self._cost_scenario = cost_scenario

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EstimateCostScenarioWithListPriceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EstimateCostScenarioWithListPriceRequest of this EstimateCostScenarioWithListPriceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cost_scenario(self):
        """Gets the cost_scenario of this EstimateCostScenarioWithListPriceRequest.


        :return: The cost_scenario of this EstimateCostScenarioWithListPriceRequest.
        :rtype: CostScenario
        """
        return self._cost_scenario

    @cost_scenario.setter
    def cost_scenario(self, cost_scenario):
        """Sets the cost_scenario of this EstimateCostScenarioWithListPriceRequest.


        :param cost_scenario: The cost_scenario of this EstimateCostScenarioWithListPriceRequest.
        :type cost_scenario: CostScenario
        """

        self._cost_scenario = cost_scenario
