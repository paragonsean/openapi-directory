/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWorkload.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWorkload::OAIWorkload(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWorkload::OAIWorkload() {
    this->initializeModel();
}

OAIWorkload::~OAIWorkload() {}

void OAIWorkload::initializeModel() {

    m_cloud_cdn_egress_workload_isSet = false;
    m_cloud_cdn_egress_workload_isValid = false;

    m_cloud_cdn_workload_isSet = false;
    m_cloud_cdn_workload_isValid = false;

    m_cloud_interconnect_egress_workload_isSet = false;
    m_cloud_interconnect_egress_workload_isValid = false;

    m_cloud_interconnect_workload_isSet = false;
    m_cloud_interconnect_workload_isValid = false;

    m_cloud_storage_egress_workload_isSet = false;
    m_cloud_storage_egress_workload_isValid = false;

    m_cloud_storage_workload_isSet = false;
    m_cloud_storage_workload_isValid = false;

    m_compute_vm_workload_isSet = false;
    m_compute_vm_workload_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_premium_tier_egress_workload_isSet = false;
    m_premium_tier_egress_workload_isValid = false;

    m_standard_tier_egress_workload_isSet = false;
    m_standard_tier_egress_workload_isValid = false;

    m_vm_to_vm_egress_workload_isSet = false;
    m_vm_to_vm_egress_workload_isValid = false;
}

void OAIWorkload::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWorkload::fromJsonObject(QJsonObject json) {

    m_cloud_cdn_egress_workload_isValid = ::OpenAPI::fromJsonValue(m_cloud_cdn_egress_workload, json[QString("cloudCdnEgressWorkload")]);
    m_cloud_cdn_egress_workload_isSet = !json[QString("cloudCdnEgressWorkload")].isNull() && m_cloud_cdn_egress_workload_isValid;

    m_cloud_cdn_workload_isValid = ::OpenAPI::fromJsonValue(m_cloud_cdn_workload, json[QString("cloudCdnWorkload")]);
    m_cloud_cdn_workload_isSet = !json[QString("cloudCdnWorkload")].isNull() && m_cloud_cdn_workload_isValid;

    m_cloud_interconnect_egress_workload_isValid = ::OpenAPI::fromJsonValue(m_cloud_interconnect_egress_workload, json[QString("cloudInterconnectEgressWorkload")]);
    m_cloud_interconnect_egress_workload_isSet = !json[QString("cloudInterconnectEgressWorkload")].isNull() && m_cloud_interconnect_egress_workload_isValid;

    m_cloud_interconnect_workload_isValid = ::OpenAPI::fromJsonValue(m_cloud_interconnect_workload, json[QString("cloudInterconnectWorkload")]);
    m_cloud_interconnect_workload_isSet = !json[QString("cloudInterconnectWorkload")].isNull() && m_cloud_interconnect_workload_isValid;

    m_cloud_storage_egress_workload_isValid = ::OpenAPI::fromJsonValue(m_cloud_storage_egress_workload, json[QString("cloudStorageEgressWorkload")]);
    m_cloud_storage_egress_workload_isSet = !json[QString("cloudStorageEgressWorkload")].isNull() && m_cloud_storage_egress_workload_isValid;

    m_cloud_storage_workload_isValid = ::OpenAPI::fromJsonValue(m_cloud_storage_workload, json[QString("cloudStorageWorkload")]);
    m_cloud_storage_workload_isSet = !json[QString("cloudStorageWorkload")].isNull() && m_cloud_storage_workload_isValid;

    m_compute_vm_workload_isValid = ::OpenAPI::fromJsonValue(m_compute_vm_workload, json[QString("computeVmWorkload")]);
    m_compute_vm_workload_isSet = !json[QString("computeVmWorkload")].isNull() && m_compute_vm_workload_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_premium_tier_egress_workload_isValid = ::OpenAPI::fromJsonValue(m_premium_tier_egress_workload, json[QString("premiumTierEgressWorkload")]);
    m_premium_tier_egress_workload_isSet = !json[QString("premiumTierEgressWorkload")].isNull() && m_premium_tier_egress_workload_isValid;

    m_standard_tier_egress_workload_isValid = ::OpenAPI::fromJsonValue(m_standard_tier_egress_workload, json[QString("standardTierEgressWorkload")]);
    m_standard_tier_egress_workload_isSet = !json[QString("standardTierEgressWorkload")].isNull() && m_standard_tier_egress_workload_isValid;

    m_vm_to_vm_egress_workload_isValid = ::OpenAPI::fromJsonValue(m_vm_to_vm_egress_workload, json[QString("vmToVmEgressWorkload")]);
    m_vm_to_vm_egress_workload_isSet = !json[QString("vmToVmEgressWorkload")].isNull() && m_vm_to_vm_egress_workload_isValid;
}

QString OAIWorkload::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWorkload::asJsonObject() const {
    QJsonObject obj;
    if (m_cloud_cdn_egress_workload.isSet()) {
        obj.insert(QString("cloudCdnEgressWorkload"), ::OpenAPI::toJsonValue(m_cloud_cdn_egress_workload));
    }
    if (m_cloud_cdn_workload.isSet()) {
        obj.insert(QString("cloudCdnWorkload"), ::OpenAPI::toJsonValue(m_cloud_cdn_workload));
    }
    if (m_cloud_interconnect_egress_workload.isSet()) {
        obj.insert(QString("cloudInterconnectEgressWorkload"), ::OpenAPI::toJsonValue(m_cloud_interconnect_egress_workload));
    }
    if (m_cloud_interconnect_workload.isSet()) {
        obj.insert(QString("cloudInterconnectWorkload"), ::OpenAPI::toJsonValue(m_cloud_interconnect_workload));
    }
    if (m_cloud_storage_egress_workload.isSet()) {
        obj.insert(QString("cloudStorageEgressWorkload"), ::OpenAPI::toJsonValue(m_cloud_storage_egress_workload));
    }
    if (m_cloud_storage_workload.isSet()) {
        obj.insert(QString("cloudStorageWorkload"), ::OpenAPI::toJsonValue(m_cloud_storage_workload));
    }
    if (m_compute_vm_workload.isSet()) {
        obj.insert(QString("computeVmWorkload"), ::OpenAPI::toJsonValue(m_compute_vm_workload));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_premium_tier_egress_workload.isSet()) {
        obj.insert(QString("premiumTierEgressWorkload"), ::OpenAPI::toJsonValue(m_premium_tier_egress_workload));
    }
    if (m_standard_tier_egress_workload.isSet()) {
        obj.insert(QString("standardTierEgressWorkload"), ::OpenAPI::toJsonValue(m_standard_tier_egress_workload));
    }
    if (m_vm_to_vm_egress_workload.isSet()) {
        obj.insert(QString("vmToVmEgressWorkload"), ::OpenAPI::toJsonValue(m_vm_to_vm_egress_workload));
    }
    return obj;
}

OAICloudCdnEgressWorkload OAIWorkload::getCloudCdnEgressWorkload() const {
    return m_cloud_cdn_egress_workload;
}
void OAIWorkload::setCloudCdnEgressWorkload(const OAICloudCdnEgressWorkload &cloud_cdn_egress_workload) {
    m_cloud_cdn_egress_workload = cloud_cdn_egress_workload;
    m_cloud_cdn_egress_workload_isSet = true;
}

bool OAIWorkload::is_cloud_cdn_egress_workload_Set() const{
    return m_cloud_cdn_egress_workload_isSet;
}

bool OAIWorkload::is_cloud_cdn_egress_workload_Valid() const{
    return m_cloud_cdn_egress_workload_isValid;
}

OAICloudCdnWorkload OAIWorkload::getCloudCdnWorkload() const {
    return m_cloud_cdn_workload;
}
void OAIWorkload::setCloudCdnWorkload(const OAICloudCdnWorkload &cloud_cdn_workload) {
    m_cloud_cdn_workload = cloud_cdn_workload;
    m_cloud_cdn_workload_isSet = true;
}

bool OAIWorkload::is_cloud_cdn_workload_Set() const{
    return m_cloud_cdn_workload_isSet;
}

bool OAIWorkload::is_cloud_cdn_workload_Valid() const{
    return m_cloud_cdn_workload_isValid;
}

OAICloudInterconnectEgressWorkload OAIWorkload::getCloudInterconnectEgressWorkload() const {
    return m_cloud_interconnect_egress_workload;
}
void OAIWorkload::setCloudInterconnectEgressWorkload(const OAICloudInterconnectEgressWorkload &cloud_interconnect_egress_workload) {
    m_cloud_interconnect_egress_workload = cloud_interconnect_egress_workload;
    m_cloud_interconnect_egress_workload_isSet = true;
}

bool OAIWorkload::is_cloud_interconnect_egress_workload_Set() const{
    return m_cloud_interconnect_egress_workload_isSet;
}

bool OAIWorkload::is_cloud_interconnect_egress_workload_Valid() const{
    return m_cloud_interconnect_egress_workload_isValid;
}

OAICloudInterconnectWorkload OAIWorkload::getCloudInterconnectWorkload() const {
    return m_cloud_interconnect_workload;
}
void OAIWorkload::setCloudInterconnectWorkload(const OAICloudInterconnectWorkload &cloud_interconnect_workload) {
    m_cloud_interconnect_workload = cloud_interconnect_workload;
    m_cloud_interconnect_workload_isSet = true;
}

bool OAIWorkload::is_cloud_interconnect_workload_Set() const{
    return m_cloud_interconnect_workload_isSet;
}

bool OAIWorkload::is_cloud_interconnect_workload_Valid() const{
    return m_cloud_interconnect_workload_isValid;
}

OAICloudStorageEgressWorkload OAIWorkload::getCloudStorageEgressWorkload() const {
    return m_cloud_storage_egress_workload;
}
void OAIWorkload::setCloudStorageEgressWorkload(const OAICloudStorageEgressWorkload &cloud_storage_egress_workload) {
    m_cloud_storage_egress_workload = cloud_storage_egress_workload;
    m_cloud_storage_egress_workload_isSet = true;
}

bool OAIWorkload::is_cloud_storage_egress_workload_Set() const{
    return m_cloud_storage_egress_workload_isSet;
}

bool OAIWorkload::is_cloud_storage_egress_workload_Valid() const{
    return m_cloud_storage_egress_workload_isValid;
}

OAICloudStorageWorkload OAIWorkload::getCloudStorageWorkload() const {
    return m_cloud_storage_workload;
}
void OAIWorkload::setCloudStorageWorkload(const OAICloudStorageWorkload &cloud_storage_workload) {
    m_cloud_storage_workload = cloud_storage_workload;
    m_cloud_storage_workload_isSet = true;
}

bool OAIWorkload::is_cloud_storage_workload_Set() const{
    return m_cloud_storage_workload_isSet;
}

bool OAIWorkload::is_cloud_storage_workload_Valid() const{
    return m_cloud_storage_workload_isValid;
}

OAIComputeVmWorkload OAIWorkload::getComputeVmWorkload() const {
    return m_compute_vm_workload;
}
void OAIWorkload::setComputeVmWorkload(const OAIComputeVmWorkload &compute_vm_workload) {
    m_compute_vm_workload = compute_vm_workload;
    m_compute_vm_workload_isSet = true;
}

bool OAIWorkload::is_compute_vm_workload_Set() const{
    return m_compute_vm_workload_isSet;
}

bool OAIWorkload::is_compute_vm_workload_Valid() const{
    return m_compute_vm_workload_isValid;
}

QString OAIWorkload::getName() const {
    return m_name;
}
void OAIWorkload::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIWorkload::is_name_Set() const{
    return m_name_isSet;
}

bool OAIWorkload::is_name_Valid() const{
    return m_name_isValid;
}

OAIPremiumTierEgressWorkload OAIWorkload::getPremiumTierEgressWorkload() const {
    return m_premium_tier_egress_workload;
}
void OAIWorkload::setPremiumTierEgressWorkload(const OAIPremiumTierEgressWorkload &premium_tier_egress_workload) {
    m_premium_tier_egress_workload = premium_tier_egress_workload;
    m_premium_tier_egress_workload_isSet = true;
}

bool OAIWorkload::is_premium_tier_egress_workload_Set() const{
    return m_premium_tier_egress_workload_isSet;
}

bool OAIWorkload::is_premium_tier_egress_workload_Valid() const{
    return m_premium_tier_egress_workload_isValid;
}

OAIStandardTierEgressWorkload OAIWorkload::getStandardTierEgressWorkload() const {
    return m_standard_tier_egress_workload;
}
void OAIWorkload::setStandardTierEgressWorkload(const OAIStandardTierEgressWorkload &standard_tier_egress_workload) {
    m_standard_tier_egress_workload = standard_tier_egress_workload;
    m_standard_tier_egress_workload_isSet = true;
}

bool OAIWorkload::is_standard_tier_egress_workload_Set() const{
    return m_standard_tier_egress_workload_isSet;
}

bool OAIWorkload::is_standard_tier_egress_workload_Valid() const{
    return m_standard_tier_egress_workload_isValid;
}

OAIVmToVmEgressWorkload OAIWorkload::getVmToVmEgressWorkload() const {
    return m_vm_to_vm_egress_workload;
}
void OAIWorkload::setVmToVmEgressWorkload(const OAIVmToVmEgressWorkload &vm_to_vm_egress_workload) {
    m_vm_to_vm_egress_workload = vm_to_vm_egress_workload;
    m_vm_to_vm_egress_workload_isSet = true;
}

bool OAIWorkload::is_vm_to_vm_egress_workload_Set() const{
    return m_vm_to_vm_egress_workload_isSet;
}

bool OAIWorkload::is_vm_to_vm_egress_workload_Valid() const{
    return m_vm_to_vm_egress_workload_isValid;
}

bool OAIWorkload::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cloud_cdn_egress_workload.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cloud_cdn_workload.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cloud_interconnect_egress_workload.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cloud_interconnect_workload.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cloud_storage_egress_workload.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cloud_storage_workload.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_compute_vm_workload.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_premium_tier_egress_workload.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_standard_tier_egress_workload.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vm_to_vm_egress_workload.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWorkload::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
