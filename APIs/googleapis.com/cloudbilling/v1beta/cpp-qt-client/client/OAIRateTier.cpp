/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRateTier.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRateTier::OAIRateTier(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRateTier::OAIRateTier() {
    this->initializeModel();
}

OAIRateTier::~OAIRateTier() {}

void OAIRateTier::initializeModel() {

    m_price_isSet = false;
    m_price_isValid = false;

    m_start_amount_isSet = false;
    m_start_amount_isValid = false;
}

void OAIRateTier::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRateTier::fromJsonObject(QJsonObject json) {

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_start_amount_isValid = ::OpenAPI::fromJsonValue(m_start_amount, json[QString("startAmount")]);
    m_start_amount_isSet = !json[QString("startAmount")].isNull() && m_start_amount_isValid;
}

QString OAIRateTier::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRateTier::asJsonObject() const {
    QJsonObject obj;
    if (m_price.isSet()) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_start_amount_isSet) {
        obj.insert(QString("startAmount"), ::OpenAPI::toJsonValue(m_start_amount));
    }
    return obj;
}

OAIMoney OAIRateTier::getPrice() const {
    return m_price;
}
void OAIRateTier::setPrice(const OAIMoney &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIRateTier::is_price_Set() const{
    return m_price_isSet;
}

bool OAIRateTier::is_price_Valid() const{
    return m_price_isValid;
}

double OAIRateTier::getStartAmount() const {
    return m_start_amount;
}
void OAIRateTier::setStartAmount(const double &start_amount) {
    m_start_amount = start_amount;
    m_start_amount_isSet = true;
}

bool OAIRateTier::is_start_amount_Set() const{
    return m_start_amount_isSet;
}

bool OAIRateTier::is_start_amount_Valid() const{
    return m_start_amount_isValid;
}

bool OAIRateTier::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_price.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_amount_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRateTier::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
