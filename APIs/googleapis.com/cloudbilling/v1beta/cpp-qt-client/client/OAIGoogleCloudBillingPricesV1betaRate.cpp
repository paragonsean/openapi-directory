/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudBillingPricesV1betaRate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudBillingPricesV1betaRate::OAIGoogleCloudBillingPricesV1betaRate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudBillingPricesV1betaRate::OAIGoogleCloudBillingPricesV1betaRate() {
    this->initializeModel();
}

OAIGoogleCloudBillingPricesV1betaRate::~OAIGoogleCloudBillingPricesV1betaRate() {}

void OAIGoogleCloudBillingPricesV1betaRate::initializeModel() {

    m_aggregation_info_isSet = false;
    m_aggregation_info_isValid = false;

    m_tiers_isSet = false;
    m_tiers_isValid = false;

    m_unit_info_isSet = false;
    m_unit_info_isValid = false;
}

void OAIGoogleCloudBillingPricesV1betaRate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudBillingPricesV1betaRate::fromJsonObject(QJsonObject json) {

    m_aggregation_info_isValid = ::OpenAPI::fromJsonValue(m_aggregation_info, json[QString("aggregationInfo")]);
    m_aggregation_info_isSet = !json[QString("aggregationInfo")].isNull() && m_aggregation_info_isValid;

    m_tiers_isValid = ::OpenAPI::fromJsonValue(m_tiers, json[QString("tiers")]);
    m_tiers_isSet = !json[QString("tiers")].isNull() && m_tiers_isValid;

    m_unit_info_isValid = ::OpenAPI::fromJsonValue(m_unit_info, json[QString("unitInfo")]);
    m_unit_info_isSet = !json[QString("unitInfo")].isNull() && m_unit_info_isValid;
}

QString OAIGoogleCloudBillingPricesV1betaRate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudBillingPricesV1betaRate::asJsonObject() const {
    QJsonObject obj;
    if (m_aggregation_info.isSet()) {
        obj.insert(QString("aggregationInfo"), ::OpenAPI::toJsonValue(m_aggregation_info));
    }
    if (m_tiers.size() > 0) {
        obj.insert(QString("tiers"), ::OpenAPI::toJsonValue(m_tiers));
    }
    if (m_unit_info.isSet()) {
        obj.insert(QString("unitInfo"), ::OpenAPI::toJsonValue(m_unit_info));
    }
    return obj;
}

OAIGoogleCloudBillingPricesV1betaAggregationInfo OAIGoogleCloudBillingPricesV1betaRate::getAggregationInfo() const {
    return m_aggregation_info;
}
void OAIGoogleCloudBillingPricesV1betaRate::setAggregationInfo(const OAIGoogleCloudBillingPricesV1betaAggregationInfo &aggregation_info) {
    m_aggregation_info = aggregation_info;
    m_aggregation_info_isSet = true;
}

bool OAIGoogleCloudBillingPricesV1betaRate::is_aggregation_info_Set() const{
    return m_aggregation_info_isSet;
}

bool OAIGoogleCloudBillingPricesV1betaRate::is_aggregation_info_Valid() const{
    return m_aggregation_info_isValid;
}

QList<OAIGoogleCloudBillingPricesV1betaRateTier> OAIGoogleCloudBillingPricesV1betaRate::getTiers() const {
    return m_tiers;
}
void OAIGoogleCloudBillingPricesV1betaRate::setTiers(const QList<OAIGoogleCloudBillingPricesV1betaRateTier> &tiers) {
    m_tiers = tiers;
    m_tiers_isSet = true;
}

bool OAIGoogleCloudBillingPricesV1betaRate::is_tiers_Set() const{
    return m_tiers_isSet;
}

bool OAIGoogleCloudBillingPricesV1betaRate::is_tiers_Valid() const{
    return m_tiers_isValid;
}

OAIGoogleCloudBillingPricesV1betaUnitInfo OAIGoogleCloudBillingPricesV1betaRate::getUnitInfo() const {
    return m_unit_info;
}
void OAIGoogleCloudBillingPricesV1betaRate::setUnitInfo(const OAIGoogleCloudBillingPricesV1betaUnitInfo &unit_info) {
    m_unit_info = unit_info;
    m_unit_info_isSet = true;
}

bool OAIGoogleCloudBillingPricesV1betaRate::is_unit_info_Set() const{
    return m_unit_info_isSet;
}

bool OAIGoogleCloudBillingPricesV1betaRate::is_unit_info_Valid() const{
    return m_unit_info_isValid;
}

bool OAIGoogleCloudBillingPricesV1betaRate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aggregation_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tiers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit_info.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudBillingPricesV1betaRate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
