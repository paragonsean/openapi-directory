/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICostEstimationResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICostEstimationResult::OAICostEstimationResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICostEstimationResult::OAICostEstimationResult() {
    this->initializeModel();
}

OAICostEstimationResult::~OAICostEstimationResult() {}

void OAICostEstimationResult::initializeModel() {

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;

    m_segment_cost_estimates_isSet = false;
    m_segment_cost_estimates_isValid = false;

    m_skus_isSet = false;
    m_skus_isValid = false;
}

void OAICostEstimationResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICostEstimationResult::fromJsonObject(QJsonObject json) {

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("currencyCode")]);
    m_currency_code_isSet = !json[QString("currencyCode")].isNull() && m_currency_code_isValid;

    m_segment_cost_estimates_isValid = ::OpenAPI::fromJsonValue(m_segment_cost_estimates, json[QString("segmentCostEstimates")]);
    m_segment_cost_estimates_isSet = !json[QString("segmentCostEstimates")].isNull() && m_segment_cost_estimates_isValid;

    m_skus_isValid = ::OpenAPI::fromJsonValue(m_skus, json[QString("skus")]);
    m_skus_isSet = !json[QString("skus")].isNull() && m_skus_isValid;
}

QString OAICostEstimationResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICostEstimationResult::asJsonObject() const {
    QJsonObject obj;
    if (m_currency_code_isSet) {
        obj.insert(QString("currencyCode"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    if (m_segment_cost_estimates.size() > 0) {
        obj.insert(QString("segmentCostEstimates"), ::OpenAPI::toJsonValue(m_segment_cost_estimates));
    }
    if (m_skus.size() > 0) {
        obj.insert(QString("skus"), ::OpenAPI::toJsonValue(m_skus));
    }
    return obj;
}

QString OAICostEstimationResult::getCurrencyCode() const {
    return m_currency_code;
}
void OAICostEstimationResult::setCurrencyCode(const QString &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAICostEstimationResult::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAICostEstimationResult::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

QList<OAISegmentCostEstimate> OAICostEstimationResult::getSegmentCostEstimates() const {
    return m_segment_cost_estimates;
}
void OAICostEstimationResult::setSegmentCostEstimates(const QList<OAISegmentCostEstimate> &segment_cost_estimates) {
    m_segment_cost_estimates = segment_cost_estimates;
    m_segment_cost_estimates_isSet = true;
}

bool OAICostEstimationResult::is_segment_cost_estimates_Set() const{
    return m_segment_cost_estimates_isSet;
}

bool OAICostEstimationResult::is_segment_cost_estimates_Valid() const{
    return m_segment_cost_estimates_isValid;
}

QList<OAISku> OAICostEstimationResult::getSkus() const {
    return m_skus;
}
void OAICostEstimationResult::setSkus(const QList<OAISku> &skus) {
    m_skus = skus;
    m_skus_isSet = true;
}

bool OAICostEstimationResult::is_skus_Set() const{
    return m_skus_isSet;
}

bool OAICostEstimationResult::is_skus_Valid() const{
    return m_skus_isValid;
}

bool OAICostEstimationResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_segment_cost_estimates.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_skus.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICostEstimationResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
