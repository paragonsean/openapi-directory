/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICloudStorageWorkload.h
 *
 * Specifies usage of Cloud Storage resources.
 */

#ifndef OAICloudStorageWorkload_H
#define OAICloudStorageWorkload_H

#include <QJsonObject>

#include "OAIDualRegional.h"
#include "OAIMultiRegional.h"
#include "OAIRegional.h"
#include "OAIUsage.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUsage;
class OAIDualRegional;
class OAIMultiRegional;
class OAIRegional;

class OAICloudStorageWorkload : public OAIObject {
public:
    OAICloudStorageWorkload();
    OAICloudStorageWorkload(QString json);
    ~OAICloudStorageWorkload() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUsage getDataRetrieval() const;
    void setDataRetrieval(const OAIUsage &data_retrieval);
    bool is_data_retrieval_Set() const;
    bool is_data_retrieval_Valid() const;

    OAIUsage getDataStored() const;
    void setDataStored(const OAIUsage &data_stored);
    bool is_data_stored_Set() const;
    bool is_data_stored_Valid() const;

    OAIDualRegional getDualRegion() const;
    void setDualRegion(const OAIDualRegional &dual_region);
    bool is_dual_region_Set() const;
    bool is_dual_region_Valid() const;

    OAIMultiRegional getMultiRegion() const;
    void setMultiRegion(const OAIMultiRegional &multi_region);
    bool is_multi_region_Set() const;
    bool is_multi_region_Valid() const;

    OAIUsage getOperationA() const;
    void setOperationA(const OAIUsage &operation_a);
    bool is_operation_a_Set() const;
    bool is_operation_a_Valid() const;

    OAIUsage getOperationB() const;
    void setOperationB(const OAIUsage &operation_b);
    bool is_operation_b_Set() const;
    bool is_operation_b_Valid() const;

    OAIRegional getRegion() const;
    void setRegion(const OAIRegional &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    QString getStorageClass() const;
    void setStorageClass(const QString &storage_class);
    bool is_storage_class_Set() const;
    bool is_storage_class_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUsage m_data_retrieval;
    bool m_data_retrieval_isSet;
    bool m_data_retrieval_isValid;

    OAIUsage m_data_stored;
    bool m_data_stored_isSet;
    bool m_data_stored_isValid;

    OAIDualRegional m_dual_region;
    bool m_dual_region_isSet;
    bool m_dual_region_isValid;

    OAIMultiRegional m_multi_region;
    bool m_multi_region_isSet;
    bool m_multi_region_isValid;

    OAIUsage m_operation_a;
    bool m_operation_a_isSet;
    bool m_operation_a_isValid;

    OAIUsage m_operation_b;
    bool m_operation_b_isSet;
    bool m_operation_b_isValid;

    OAIRegional m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    QString m_storage_class;
    bool m_storage_class_isSet;
    bool m_storage_class_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICloudStorageWorkload)

#endif // OAICloudStorageWorkload_H
