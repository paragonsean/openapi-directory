/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVlanAttachment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVlanAttachment::OAIVlanAttachment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVlanAttachment::OAIVlanAttachment() {
    this->initializeModel();
}

OAIVlanAttachment::~OAIVlanAttachment() {}

void OAIVlanAttachment::initializeModel() {

    m_bandwidth_isSet = false;
    m_bandwidth_isValid = false;

    m_vlan_count_isSet = false;
    m_vlan_count_isValid = false;
}

void OAIVlanAttachment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVlanAttachment::fromJsonObject(QJsonObject json) {

    m_bandwidth_isValid = ::OpenAPI::fromJsonValue(m_bandwidth, json[QString("bandwidth")]);
    m_bandwidth_isSet = !json[QString("bandwidth")].isNull() && m_bandwidth_isValid;

    m_vlan_count_isValid = ::OpenAPI::fromJsonValue(m_vlan_count, json[QString("vlanCount")]);
    m_vlan_count_isSet = !json[QString("vlanCount")].isNull() && m_vlan_count_isValid;
}

QString OAIVlanAttachment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVlanAttachment::asJsonObject() const {
    QJsonObject obj;
    if (m_bandwidth_isSet) {
        obj.insert(QString("bandwidth"), ::OpenAPI::toJsonValue(m_bandwidth));
    }
    if (m_vlan_count.isSet()) {
        obj.insert(QString("vlanCount"), ::OpenAPI::toJsonValue(m_vlan_count));
    }
    return obj;
}

QString OAIVlanAttachment::getBandwidth() const {
    return m_bandwidth;
}
void OAIVlanAttachment::setBandwidth(const QString &bandwidth) {
    m_bandwidth = bandwidth;
    m_bandwidth_isSet = true;
}

bool OAIVlanAttachment::is_bandwidth_Set() const{
    return m_bandwidth_isSet;
}

bool OAIVlanAttachment::is_bandwidth_Valid() const{
    return m_bandwidth_isValid;
}

OAIUsage OAIVlanAttachment::getVlanCount() const {
    return m_vlan_count;
}
void OAIVlanAttachment::setVlanCount(const OAIUsage &vlan_count) {
    m_vlan_count = vlan_count;
    m_vlan_count_isSet = true;
}

bool OAIVlanAttachment::is_vlan_count_Set() const{
    return m_vlan_count_isSet;
}

bool OAIVlanAttachment::is_vlan_count_Valid() const{
    return m_vlan_count_isValid;
}

bool OAIVlanAttachment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bandwidth_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vlan_count.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVlanAttachment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
