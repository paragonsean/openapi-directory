/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICloudCdnEgressWorkload.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICloudCdnEgressWorkload::OAICloudCdnEgressWorkload(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICloudCdnEgressWorkload::OAICloudCdnEgressWorkload() {
    this->initializeModel();
}

OAICloudCdnEgressWorkload::~OAICloudCdnEgressWorkload() {}

void OAICloudCdnEgressWorkload::initializeModel() {

    m_cache_egress_destination_isSet = false;
    m_cache_egress_destination_isValid = false;

    m_cache_egress_rate_isSet = false;
    m_cache_egress_rate_isValid = false;
}

void OAICloudCdnEgressWorkload::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICloudCdnEgressWorkload::fromJsonObject(QJsonObject json) {

    m_cache_egress_destination_isValid = ::OpenAPI::fromJsonValue(m_cache_egress_destination, json[QString("cacheEgressDestination")]);
    m_cache_egress_destination_isSet = !json[QString("cacheEgressDestination")].isNull() && m_cache_egress_destination_isValid;

    m_cache_egress_rate_isValid = ::OpenAPI::fromJsonValue(m_cache_egress_rate, json[QString("cacheEgressRate")]);
    m_cache_egress_rate_isSet = !json[QString("cacheEgressRate")].isNull() && m_cache_egress_rate_isValid;
}

QString OAICloudCdnEgressWorkload::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICloudCdnEgressWorkload::asJsonObject() const {
    QJsonObject obj;
    if (m_cache_egress_destination_isSet) {
        obj.insert(QString("cacheEgressDestination"), ::OpenAPI::toJsonValue(m_cache_egress_destination));
    }
    if (m_cache_egress_rate.isSet()) {
        obj.insert(QString("cacheEgressRate"), ::OpenAPI::toJsonValue(m_cache_egress_rate));
    }
    return obj;
}

QString OAICloudCdnEgressWorkload::getCacheEgressDestination() const {
    return m_cache_egress_destination;
}
void OAICloudCdnEgressWorkload::setCacheEgressDestination(const QString &cache_egress_destination) {
    m_cache_egress_destination = cache_egress_destination;
    m_cache_egress_destination_isSet = true;
}

bool OAICloudCdnEgressWorkload::is_cache_egress_destination_Set() const{
    return m_cache_egress_destination_isSet;
}

bool OAICloudCdnEgressWorkload::is_cache_egress_destination_Valid() const{
    return m_cache_egress_destination_isValid;
}

OAIUsage OAICloudCdnEgressWorkload::getCacheEgressRate() const {
    return m_cache_egress_rate;
}
void OAICloudCdnEgressWorkload::setCacheEgressRate(const OAIUsage &cache_egress_rate) {
    m_cache_egress_rate = cache_egress_rate;
    m_cache_egress_rate_isSet = true;
}

bool OAICloudCdnEgressWorkload::is_cache_egress_rate_Set() const{
    return m_cache_egress_rate_isSet;
}

bool OAICloudCdnEgressWorkload::is_cache_egress_rate_Valid() const{
    return m_cache_egress_rate_isValid;
}

bool OAICloudCdnEgressWorkload::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cache_egress_destination_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cache_egress_rate.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICloudCdnEgressWorkload::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
