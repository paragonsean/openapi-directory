/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPredefinedMachineType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPredefinedMachineType::OAIPredefinedMachineType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPredefinedMachineType::OAIPredefinedMachineType() {
    this->initializeModel();
}

OAIPredefinedMachineType::~OAIPredefinedMachineType() {}

void OAIPredefinedMachineType::initializeModel() {

    m_machine_type_isSet = false;
    m_machine_type_isValid = false;
}

void OAIPredefinedMachineType::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPredefinedMachineType::fromJsonObject(QJsonObject json) {

    m_machine_type_isValid = ::OpenAPI::fromJsonValue(m_machine_type, json[QString("machineType")]);
    m_machine_type_isSet = !json[QString("machineType")].isNull() && m_machine_type_isValid;
}

QString OAIPredefinedMachineType::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPredefinedMachineType::asJsonObject() const {
    QJsonObject obj;
    if (m_machine_type_isSet) {
        obj.insert(QString("machineType"), ::OpenAPI::toJsonValue(m_machine_type));
    }
    return obj;
}

QString OAIPredefinedMachineType::getMachineType() const {
    return m_machine_type;
}
void OAIPredefinedMachineType::setMachineType(const QString &machine_type) {
    m_machine_type = machine_type;
    m_machine_type_isSet = true;
}

bool OAIPredefinedMachineType::is_machine_type_Set() const{
    return m_machine_type_isSet;
}

bool OAIPredefinedMachineType::is_machine_type_Valid() const{
    return m_machine_type_isValid;
}

bool OAIPredefinedMachineType::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_machine_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPredefinedMachineType::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
