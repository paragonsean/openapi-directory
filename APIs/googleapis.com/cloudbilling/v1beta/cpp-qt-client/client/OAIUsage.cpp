/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUsage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUsage::OAIUsage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUsage::OAIUsage() {
    this->initializeModel();
}

OAIUsage::~OAIUsage() {}

void OAIUsage::initializeModel() {

    m_usage_rate_timeline_isSet = false;
    m_usage_rate_timeline_isValid = false;
}

void OAIUsage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUsage::fromJsonObject(QJsonObject json) {

    m_usage_rate_timeline_isValid = ::OpenAPI::fromJsonValue(m_usage_rate_timeline, json[QString("usageRateTimeline")]);
    m_usage_rate_timeline_isSet = !json[QString("usageRateTimeline")].isNull() && m_usage_rate_timeline_isValid;
}

QString OAIUsage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUsage::asJsonObject() const {
    QJsonObject obj;
    if (m_usage_rate_timeline.isSet()) {
        obj.insert(QString("usageRateTimeline"), ::OpenAPI::toJsonValue(m_usage_rate_timeline));
    }
    return obj;
}

OAIUsageRateTimeline OAIUsage::getUsageRateTimeline() const {
    return m_usage_rate_timeline;
}
void OAIUsage::setUsageRateTimeline(const OAIUsageRateTimeline &usage_rate_timeline) {
    m_usage_rate_timeline = usage_rate_timeline;
    m_usage_rate_timeline_isSet = true;
}

bool OAIUsage::is_usage_rate_timeline_Set() const{
    return m_usage_rate_timeline_isSet;
}

bool OAIUsage::is_usage_rate_timeline_Valid() const{
    return m_usage_rate_timeline_isValid;
}

bool OAIUsage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_usage_rate_timeline.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUsage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
