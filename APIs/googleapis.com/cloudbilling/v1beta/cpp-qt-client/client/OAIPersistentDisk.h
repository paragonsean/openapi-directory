/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPersistentDisk.h
 *
 * Specification of a persistent disk attached to a VM.
 */

#ifndef OAIPersistentDisk_H
#define OAIPersistentDisk_H

#include <QJsonObject>

#include "OAIUsage.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUsage;

class OAIPersistentDisk : public OAIObject {
public:
    OAIPersistentDisk();
    OAIPersistentDisk(QString json);
    ~OAIPersistentDisk() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUsage getDiskSize() const;
    void setDiskSize(const OAIUsage &disk_size);
    bool is_disk_size_Set() const;
    bool is_disk_size_Valid() const;

    QString getDiskType() const;
    void setDiskType(const QString &disk_type);
    bool is_disk_type_Set() const;
    bool is_disk_type_Valid() const;

    OAIUsage getProvisionedIops() const;
    void setProvisionedIops(const OAIUsage &provisioned_iops);
    bool is_provisioned_iops_Set() const;
    bool is_provisioned_iops_Valid() const;

    QString getScope() const;
    void setScope(const QString &scope);
    bool is_scope_Set() const;
    bool is_scope_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUsage m_disk_size;
    bool m_disk_size_isSet;
    bool m_disk_size_isValid;

    QString m_disk_type;
    bool m_disk_type_isSet;
    bool m_disk_type_isValid;

    OAIUsage m_provisioned_iops;
    bool m_provisioned_iops_isSet;
    bool m_provisioned_iops_isValid;

    QString m_scope;
    bool m_scope_isSet;
    bool m_scope_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPersistentDisk)

#endif // OAIPersistentDisk_H
