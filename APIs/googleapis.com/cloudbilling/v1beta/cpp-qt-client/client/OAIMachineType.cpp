/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMachineType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMachineType::OAIMachineType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMachineType::OAIMachineType() {
    this->initializeModel();
}

OAIMachineType::~OAIMachineType() {}

void OAIMachineType::initializeModel() {

    m_custom_machine_type_isSet = false;
    m_custom_machine_type_isValid = false;

    m_predefined_machine_type_isSet = false;
    m_predefined_machine_type_isValid = false;
}

void OAIMachineType::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMachineType::fromJsonObject(QJsonObject json) {

    m_custom_machine_type_isValid = ::OpenAPI::fromJsonValue(m_custom_machine_type, json[QString("customMachineType")]);
    m_custom_machine_type_isSet = !json[QString("customMachineType")].isNull() && m_custom_machine_type_isValid;

    m_predefined_machine_type_isValid = ::OpenAPI::fromJsonValue(m_predefined_machine_type, json[QString("predefinedMachineType")]);
    m_predefined_machine_type_isSet = !json[QString("predefinedMachineType")].isNull() && m_predefined_machine_type_isValid;
}

QString OAIMachineType::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMachineType::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_machine_type.isSet()) {
        obj.insert(QString("customMachineType"), ::OpenAPI::toJsonValue(m_custom_machine_type));
    }
    if (m_predefined_machine_type.isSet()) {
        obj.insert(QString("predefinedMachineType"), ::OpenAPI::toJsonValue(m_predefined_machine_type));
    }
    return obj;
}

OAICustomMachineType OAIMachineType::getCustomMachineType() const {
    return m_custom_machine_type;
}
void OAIMachineType::setCustomMachineType(const OAICustomMachineType &custom_machine_type) {
    m_custom_machine_type = custom_machine_type;
    m_custom_machine_type_isSet = true;
}

bool OAIMachineType::is_custom_machine_type_Set() const{
    return m_custom_machine_type_isSet;
}

bool OAIMachineType::is_custom_machine_type_Valid() const{
    return m_custom_machine_type_isValid;
}

OAIPredefinedMachineType OAIMachineType::getPredefinedMachineType() const {
    return m_predefined_machine_type;
}
void OAIMachineType::setPredefinedMachineType(const OAIPredefinedMachineType &predefined_machine_type) {
    m_predefined_machine_type = predefined_machine_type;
    m_predefined_machine_type_isSet = true;
}

bool OAIMachineType::is_predefined_machine_type_Set() const{
    return m_predefined_machine_type_isSet;
}

bool OAIMachineType::is_predefined_machine_type_Valid() const{
    return m_predefined_machine_type_isValid;
}

bool OAIMachineType::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_machine_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_predefined_machine_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMachineType::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
