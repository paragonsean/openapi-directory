/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICommitmentCostEstimate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICommitmentCostEstimate::OAICommitmentCostEstimate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICommitmentCostEstimate::OAICommitmentCostEstimate() {
    this->initializeModel();
}

OAICommitmentCostEstimate::~OAICommitmentCostEstimate() {}

void OAICommitmentCostEstimate::initializeModel() {

    m_commitment_total_cost_estimate_isSet = false;
    m_commitment_total_cost_estimate_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_sku_cost_estimates_isSet = false;
    m_sku_cost_estimates_isValid = false;
}

void OAICommitmentCostEstimate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICommitmentCostEstimate::fromJsonObject(QJsonObject json) {

    m_commitment_total_cost_estimate_isValid = ::OpenAPI::fromJsonValue(m_commitment_total_cost_estimate, json[QString("commitmentTotalCostEstimate")]);
    m_commitment_total_cost_estimate_isSet = !json[QString("commitmentTotalCostEstimate")].isNull() && m_commitment_total_cost_estimate_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_sku_cost_estimates_isValid = ::OpenAPI::fromJsonValue(m_sku_cost_estimates, json[QString("skuCostEstimates")]);
    m_sku_cost_estimates_isSet = !json[QString("skuCostEstimates")].isNull() && m_sku_cost_estimates_isValid;
}

QString OAICommitmentCostEstimate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICommitmentCostEstimate::asJsonObject() const {
    QJsonObject obj;
    if (m_commitment_total_cost_estimate.isSet()) {
        obj.insert(QString("commitmentTotalCostEstimate"), ::OpenAPI::toJsonValue(m_commitment_total_cost_estimate));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_sku_cost_estimates.size() > 0) {
        obj.insert(QString("skuCostEstimates"), ::OpenAPI::toJsonValue(m_sku_cost_estimates));
    }
    return obj;
}

OAICostEstimate OAICommitmentCostEstimate::getCommitmentTotalCostEstimate() const {
    return m_commitment_total_cost_estimate;
}
void OAICommitmentCostEstimate::setCommitmentTotalCostEstimate(const OAICostEstimate &commitment_total_cost_estimate) {
    m_commitment_total_cost_estimate = commitment_total_cost_estimate;
    m_commitment_total_cost_estimate_isSet = true;
}

bool OAICommitmentCostEstimate::is_commitment_total_cost_estimate_Set() const{
    return m_commitment_total_cost_estimate_isSet;
}

bool OAICommitmentCostEstimate::is_commitment_total_cost_estimate_Valid() const{
    return m_commitment_total_cost_estimate_isValid;
}

QString OAICommitmentCostEstimate::getName() const {
    return m_name;
}
void OAICommitmentCostEstimate::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICommitmentCostEstimate::is_name_Set() const{
    return m_name_isSet;
}

bool OAICommitmentCostEstimate::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAISkuCostEstimate> OAICommitmentCostEstimate::getSkuCostEstimates() const {
    return m_sku_cost_estimates;
}
void OAICommitmentCostEstimate::setSkuCostEstimates(const QList<OAISkuCostEstimate> &sku_cost_estimates) {
    m_sku_cost_estimates = sku_cost_estimates;
    m_sku_cost_estimates_isSet = true;
}

bool OAICommitmentCostEstimate::is_sku_cost_estimates_Set() const{
    return m_sku_cost_estimates_isSet;
}

bool OAICommitmentCostEstimate::is_sku_cost_estimates_Valid() const{
    return m_sku_cost_estimates_isValid;
}

bool OAICommitmentCostEstimate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_commitment_total_cost_estimate.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku_cost_estimates.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICommitmentCostEstimate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
