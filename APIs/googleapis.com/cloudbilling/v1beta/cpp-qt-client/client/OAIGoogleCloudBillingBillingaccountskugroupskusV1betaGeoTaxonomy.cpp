/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy() {
    this->initializeModel();
}

OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::~OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy() {}

void OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::initializeModel() {

    m_global_metadata_isSet = false;
    m_global_metadata_isValid = false;

    m_multi_regional_metadata_isSet = false;
    m_multi_regional_metadata_isValid = false;

    m_regional_metadata_isSet = false;
    m_regional_metadata_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::fromJsonObject(QJsonObject json) {

    m_global_metadata_isValid = ::OpenAPI::fromJsonValue(m_global_metadata, json[QString("globalMetadata")]);
    m_global_metadata_isSet = !json[QString("globalMetadata")].isNull() && m_global_metadata_isValid;

    m_multi_regional_metadata_isValid = ::OpenAPI::fromJsonValue(m_multi_regional_metadata, json[QString("multiRegionalMetadata")]);
    m_multi_regional_metadata_isSet = !json[QString("multiRegionalMetadata")].isNull() && m_multi_regional_metadata_isValid;

    m_regional_metadata_isValid = ::OpenAPI::fromJsonValue(m_regional_metadata, json[QString("regionalMetadata")]);
    m_regional_metadata_isSet = !json[QString("regionalMetadata")].isNull() && m_regional_metadata_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::asJsonObject() const {
    QJsonObject obj;
    if (m_global_metadata_isSet) {
        obj.insert(QString("globalMetadata"), ::OpenAPI::toJsonValue(m_global_metadata));
    }
    if (m_multi_regional_metadata.isSet()) {
        obj.insert(QString("multiRegionalMetadata"), ::OpenAPI::toJsonValue(m_multi_regional_metadata));
    }
    if (m_regional_metadata.isSet()) {
        obj.insert(QString("regionalMetadata"), ::OpenAPI::toJsonValue(m_regional_metadata));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

OAIObject OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::getGlobalMetadata() const {
    return m_global_metadata;
}
void OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::setGlobalMetadata(const OAIObject &global_metadata) {
    m_global_metadata = global_metadata;
    m_global_metadata_isSet = true;
}

bool OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::is_global_metadata_Set() const{
    return m_global_metadata_isSet;
}

bool OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::is_global_metadata_Valid() const{
    return m_global_metadata_isValid;
}

OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomyMultiRegional OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::getMultiRegionalMetadata() const {
    return m_multi_regional_metadata;
}
void OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::setMultiRegionalMetadata(const OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomyMultiRegional &multi_regional_metadata) {
    m_multi_regional_metadata = multi_regional_metadata;
    m_multi_regional_metadata_isSet = true;
}

bool OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::is_multi_regional_metadata_Set() const{
    return m_multi_regional_metadata_isSet;
}

bool OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::is_multi_regional_metadata_Valid() const{
    return m_multi_regional_metadata_isValid;
}

OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomyRegional OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::getRegionalMetadata() const {
    return m_regional_metadata;
}
void OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::setRegionalMetadata(const OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomyRegional &regional_metadata) {
    m_regional_metadata = regional_metadata;
    m_regional_metadata_isSet = true;
}

bool OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::is_regional_metadata_Set() const{
    return m_regional_metadata_isSet;
}

bool OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::is_regional_metadata_Valid() const{
    return m_regional_metadata_isValid;
}

QString OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::getType() const {
    return m_type;
}
void OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_global_metadata_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_multi_regional_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_regional_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudBillingBillingaccountskugroupskusV1betaGeoTaxonomy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
