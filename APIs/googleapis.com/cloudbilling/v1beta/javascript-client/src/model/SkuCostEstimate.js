/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CostEstimate from './CostEstimate';

/**
 * The SkuCostEstimate model module.
 * @module model/SkuCostEstimate
 * @version v1beta
 */
class SkuCostEstimate {
    /**
     * Constructs a new <code>SkuCostEstimate</code>.
     * Estimated cost for usage on a SKU.
     * @alias module:model/SkuCostEstimate
     */
    constructor() { 
        
        SkuCostEstimate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SkuCostEstimate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SkuCostEstimate} obj Optional instance to populate.
     * @return {module:model/SkuCostEstimate} The populated <code>SkuCostEstimate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SkuCostEstimate();

            if (data.hasOwnProperty('costEstimate')) {
                obj['costEstimate'] = CostEstimate.constructFromObject(data['costEstimate']);
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
            if (data.hasOwnProperty('usageAmount')) {
                obj['usageAmount'] = ApiClient.convertToType(data['usageAmount'], 'Number');
            }
            if (data.hasOwnProperty('usageUnit')) {
                obj['usageUnit'] = ApiClient.convertToType(data['usageUnit'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SkuCostEstimate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SkuCostEstimate</code>.
     */
    static validateJSON(data) {
        // validate the optional field `costEstimate`
        if (data['costEstimate']) { // data not null
          CostEstimate.validateJSON(data['costEstimate']);
        }
        // ensure the json data is a string
        if (data['sku'] && !(typeof data['sku'] === 'string' || data['sku'] instanceof String)) {
            throw new Error("Expected the field `sku` to be a primitive type in the JSON string but got " + data['sku']);
        }
        // ensure the json data is a string
        if (data['usageUnit'] && !(typeof data['usageUnit'] === 'string' || data['usageUnit'] instanceof String)) {
            throw new Error("Expected the field `usageUnit` to be a primitive type in the JSON string but got " + data['usageUnit']);
        }

        return true;
    }


}



/**
 * @member {module:model/CostEstimate} costEstimate
 */
SkuCostEstimate.prototype['costEstimate'] = undefined;

/**
 * The resource name for the SKU. Example: \"services/DA34-426B-A397/skus/AA95-CD31-42FE\" More information about the SKU can be found in the `skus` field of the `CostEstimationResult`.
 * @member {String} sku
 */
SkuCostEstimate.prototype['sku'] = undefined;

/**
 * The amount of usage on this SKU.
 * @member {Number} usageAmount
 */
SkuCostEstimate.prototype['usageAmount'] = undefined;

/**
 * The unit for the usage on this SKU.
 * @member {String} usageUnit
 */
SkuCostEstimate.prototype['usageUnit'] = undefined;






export default SkuCostEstimate;

