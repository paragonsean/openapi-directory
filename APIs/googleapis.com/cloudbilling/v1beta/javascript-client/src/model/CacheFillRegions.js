/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CacheFillRegions model module.
 * @module model/CacheFillRegions
 * @version v1beta
 */
class CacheFillRegions {
    /**
     * Constructs a new <code>CacheFillRegions</code>.
     * Specifies the regions for Cache Fill.
     * @alias module:model/CacheFillRegions
     */
    constructor() { 
        
        CacheFillRegions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CacheFillRegions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CacheFillRegions} obj Optional instance to populate.
     * @return {module:model/CacheFillRegions} The populated <code>CacheFillRegions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CacheFillRegions();

            if (data.hasOwnProperty('destinationRegion')) {
                obj['destinationRegion'] = ApiClient.convertToType(data['destinationRegion'], 'String');
            }
            if (data.hasOwnProperty('sourceRegion')) {
                obj['sourceRegion'] = ApiClient.convertToType(data['sourceRegion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CacheFillRegions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CacheFillRegions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['destinationRegion'] && !(typeof data['destinationRegion'] === 'string' || data['destinationRegion'] instanceof String)) {
            throw new Error("Expected the field `destinationRegion` to be a primitive type in the JSON string but got " + data['destinationRegion']);
        }
        // ensure the json data is a string
        if (data['sourceRegion'] && !(typeof data['sourceRegion'] === 'string' || data['sourceRegion'] instanceof String)) {
            throw new Error("Expected the field `sourceRegion` to be a primitive type in the JSON string but got " + data['sourceRegion']);
        }

        return true;
    }


}



/**
 * The destination region for cache fill.
 * @member {module:model/CacheFillRegions.DestinationRegionEnum} destinationRegion
 */
CacheFillRegions.prototype['destinationRegion'] = undefined;

/**
 * The source region for cache fill.
 * @member {module:model/CacheFillRegions.SourceRegionEnum} sourceRegion
 */
CacheFillRegions.prototype['sourceRegion'] = undefined;





/**
 * Allowed values for the <code>destinationRegion</code> property.
 * @enum {String}
 * @readonly
 */
CacheFillRegions['DestinationRegionEnum'] = {

    /**
     * value: "CACHE_FILL_DESTINATION_REGION_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "CACHE_FILL_DESTINATION_REGION_UNSPECIFIED",

    /**
     * value: "CACHE_FILL_DESTINATION_REGION_ASIA_PACIFIC"
     * @const
     */
    "ASIA_PACIFIC": "CACHE_FILL_DESTINATION_REGION_ASIA_PACIFIC",

    /**
     * value: "CACHE_FILL_DESTINATION_REGION_EUROPE"
     * @const
     */
    "EUROPE": "CACHE_FILL_DESTINATION_REGION_EUROPE",

    /**
     * value: "CACHE_FILL_DESTINATION_REGION_NORTH_AMERICA"
     * @const
     */
    "NORTH_AMERICA": "CACHE_FILL_DESTINATION_REGION_NORTH_AMERICA",

    /**
     * value: "CACHE_FILL_DESTINATION_REGION_OCEANIA"
     * @const
     */
    "OCEANIA": "CACHE_FILL_DESTINATION_REGION_OCEANIA",

    /**
     * value: "CACHE_FILL_DESTINATION_REGION_SOUTH_AMERICA"
     * @const
     */
    "SOUTH_AMERICA": "CACHE_FILL_DESTINATION_REGION_SOUTH_AMERICA",

    /**
     * value: "CACHE_FILL_DESTINATION_REGION_CHINA"
     * @const
     */
    "CHINA": "CACHE_FILL_DESTINATION_REGION_CHINA",

    /**
     * value: "CACHE_FILL_DESTINATION_REGION_OTHERS"
     * @const
     */
    "OTHERS": "CACHE_FILL_DESTINATION_REGION_OTHERS"
};


/**
 * Allowed values for the <code>sourceRegion</code> property.
 * @enum {String}
 * @readonly
 */
CacheFillRegions['SourceRegionEnum'] = {

    /**
     * value: "CACHE_FILL_SOURCE_REGION_UNSPECIFIED"
     * @const
     */
    "SOURCE_REGION_UNSPECIFIED": "CACHE_FILL_SOURCE_REGION_UNSPECIFIED",

    /**
     * value: "CACHE_FILL_REGION_ASIA_PACIFIC"
     * @const
     */
    "REGION_ASIA_PACIFIC": "CACHE_FILL_REGION_ASIA_PACIFIC",

    /**
     * value: "CACHE_FILL_SOURCE_REGION_EUROPE"
     * @const
     */
    "SOURCE_REGION_EUROPE": "CACHE_FILL_SOURCE_REGION_EUROPE",

    /**
     * value: "CACHE_FILL_SOURCE_REGION_NORTH_AMERICA"
     * @const
     */
    "SOURCE_REGION_NORTH_AMERICA": "CACHE_FILL_SOURCE_REGION_NORTH_AMERICA",

    /**
     * value: "CACHE_FILL_SOURCE_REGION_OCEANIA"
     * @const
     */
    "SOURCE_REGION_OCEANIA": "CACHE_FILL_SOURCE_REGION_OCEANIA",

    /**
     * value: "CACHE_FILL_SOURCE_REGION_SOUTH_AMERICA"
     * @const
     */
    "SOURCE_REGION_SOUTH_AMERICA": "CACHE_FILL_SOURCE_REGION_SOUTH_AMERICA"
};



export default CacheFillRegions;

