/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Usage from './Usage';

/**
 * The VlanAttachment model module.
 * @module model/VlanAttachment
 * @version v1beta
 */
class VlanAttachment {
    /**
     * Constructs a new <code>VlanAttachment</code>.
     * VLAN attachment for Cloud Interconnect.
     * @alias module:model/VlanAttachment
     */
    constructor() { 
        
        VlanAttachment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VlanAttachment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VlanAttachment} obj Optional instance to populate.
     * @return {module:model/VlanAttachment} The populated <code>VlanAttachment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VlanAttachment();

            if (data.hasOwnProperty('bandwidth')) {
                obj['bandwidth'] = ApiClient.convertToType(data['bandwidth'], 'String');
            }
            if (data.hasOwnProperty('vlanCount')) {
                obj['vlanCount'] = Usage.constructFromObject(data['vlanCount']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VlanAttachment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VlanAttachment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bandwidth'] && !(typeof data['bandwidth'] === 'string' || data['bandwidth'] instanceof String)) {
            throw new Error("Expected the field `bandwidth` to be a primitive type in the JSON string but got " + data['bandwidth']);
        }
        // validate the optional field `vlanCount`
        if (data['vlanCount']) { // data not null
          Usage.validateJSON(data['vlanCount']);
        }

        return true;
    }


}



/**
 * Capacities in the [pricing table](https://cloud.google.com/vpc/network-pricing#interconnect-pricing) Examples of capacity are: 50/100/200/300/400/500-Mbps, 1/2/5/10/20/50-Gbps.
 * @member {module:model/VlanAttachment.BandwidthEnum} bandwidth
 */
VlanAttachment.prototype['bandwidth'] = undefined;

/**
 * @member {module:model/Usage} vlanCount
 */
VlanAttachment.prototype['vlanCount'] = undefined;





/**
 * Allowed values for the <code>bandwidth</code> property.
 * @enum {String}
 * @readonly
 */
VlanAttachment['BandwidthEnum'] = {

    /**
     * value: "BANDWIDTH_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "BANDWIDTH_UNSPECIFIED",

    /**
     * value: "BANDWIDTH_BPS_50M"
     * @const
     */
    "BPS_50M": "BANDWIDTH_BPS_50M",

    /**
     * value: "BANDWIDTH_BPS_100M"
     * @const
     */
    "BPS_100M": "BANDWIDTH_BPS_100M",

    /**
     * value: "BANDWIDTH_BPS_200M"
     * @const
     */
    "BPS_200M": "BANDWIDTH_BPS_200M",

    /**
     * value: "BANDWIDTH_BPS_300M"
     * @const
     */
    "BPS_300M": "BANDWIDTH_BPS_300M",

    /**
     * value: "BANDWIDTH_BPS_400M"
     * @const
     */
    "BPS_400M": "BANDWIDTH_BPS_400M",

    /**
     * value: "BANDWIDTH_BPS_500M"
     * @const
     */
    "BPS_500M": "BANDWIDTH_BPS_500M",

    /**
     * value: "BANDWIDTH_BPS_1G"
     * @const
     */
    "BPS_1G": "BANDWIDTH_BPS_1G",

    /**
     * value: "BANDWIDTH_BPS_2G"
     * @const
     */
    "BPS_2G": "BANDWIDTH_BPS_2G",

    /**
     * value: "BANDWIDTH_BPS_5G"
     * @const
     */
    "BPS_5G": "BANDWIDTH_BPS_5G",

    /**
     * value: "BANDWIDTH_BPS_10G"
     * @const
     */
    "BPS_10G": "BANDWIDTH_BPS_10G",

    /**
     * value: "BANDWIDTH_BPS_20G"
     * @const
     */
    "BPS_20G": "BANDWIDTH_BPS_20G",

    /**
     * value: "BANDWIDTH_BPS_50G"
     * @const
     */
    "BPS_50G": "BANDWIDTH_BPS_50G"
};



export default VlanAttachment;

