/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CustomMachineType model module.
 * @module model/CustomMachineType
 * @version v1beta
 */
class CustomMachineType {
    /**
     * Constructs a new <code>CustomMachineType</code>.
     * Specification of a custom machine type.
     * @alias module:model/CustomMachineType
     */
    constructor() { 
        
        CustomMachineType.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomMachineType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomMachineType} obj Optional instance to populate.
     * @return {module:model/CustomMachineType} The populated <code>CustomMachineType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomMachineType();

            if (data.hasOwnProperty('machineSeries')) {
                obj['machineSeries'] = ApiClient.convertToType(data['machineSeries'], 'String');
            }
            if (data.hasOwnProperty('memorySizeGb')) {
                obj['memorySizeGb'] = ApiClient.convertToType(data['memorySizeGb'], 'Number');
            }
            if (data.hasOwnProperty('virtualCpuCount')) {
                obj['virtualCpuCount'] = ApiClient.convertToType(data['virtualCpuCount'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomMachineType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomMachineType</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['machineSeries'] && !(typeof data['machineSeries'] === 'string' || data['machineSeries'] instanceof String)) {
            throw new Error("Expected the field `machineSeries` to be a primitive type in the JSON string but got " + data['machineSeries']);
        }
        // ensure the json data is a string
        if (data['virtualCpuCount'] && !(typeof data['virtualCpuCount'] === 'string' || data['virtualCpuCount'] instanceof String)) {
            throw new Error("Expected the field `virtualCpuCount` to be a primitive type in the JSON string but got " + data['virtualCpuCount']);
        }

        return true;
    }


}



/**
 * Required. The machine series. Only certain [machine series](https://cloud.google.com/compute/docs/general-purpose-machines#custom_machine_types) support custom configurations. For example: \"n1\".
 * @member {String} machineSeries
 */
CustomMachineType.prototype['machineSeries'] = undefined;

/**
 * Required. Memory size of the VM in GB (2^30 bytes). Must be an increment of 0.25 (256 MB). Each [machine series](https://cloud.google.com/compute/docs/machine-types#machine_type_comparison) has limitations on allowed values for the ratio of memory-to-vCPU count.
 * @member {Number} memorySizeGb
 */
CustomMachineType.prototype['memorySizeGb'] = undefined;

/**
 * Required. The number of vCPUs. The allowed values depend on the [machine series](https://cloud.google.com/compute/docs/machine-types#machine_type_comparison).
 * @member {String} virtualCpuCount
 */
CustomMachineType.prototype['virtualCpuCount'] = undefined;






export default CustomMachineType;

