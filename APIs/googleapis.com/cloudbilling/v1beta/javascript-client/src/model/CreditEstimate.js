/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Money from './Money';

/**
 * The CreditEstimate model module.
 * @module model/CreditEstimate
 * @version v1beta
 */
class CreditEstimate {
    /**
     * Constructs a new <code>CreditEstimate</code>.
     * An estimated credit applied to the costs on a SKU.
     * @alias module:model/CreditEstimate
     */
    constructor() { 
        
        CreditEstimate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreditEstimate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreditEstimate} obj Optional instance to populate.
     * @return {module:model/CreditEstimate} The populated <code>CreditEstimate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreditEstimate();

            if (data.hasOwnProperty('creditAmount')) {
                obj['creditAmount'] = Money.constructFromObject(data['creditAmount']);
            }
            if (data.hasOwnProperty('creditDescription')) {
                obj['creditDescription'] = ApiClient.convertToType(data['creditDescription'], 'String');
            }
            if (data.hasOwnProperty('creditType')) {
                obj['creditType'] = ApiClient.convertToType(data['creditType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreditEstimate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreditEstimate</code>.
     */
    static validateJSON(data) {
        // validate the optional field `creditAmount`
        if (data['creditAmount']) { // data not null
          Money.validateJSON(data['creditAmount']);
        }
        // ensure the json data is a string
        if (data['creditDescription'] && !(typeof data['creditDescription'] === 'string' || data['creditDescription'] instanceof String)) {
            throw new Error("Expected the field `creditDescription` to be a primitive type in the JSON string but got " + data['creditDescription']);
        }
        // ensure the json data is a string
        if (data['creditType'] && !(typeof data['creditType'] === 'string' || data['creditType'] instanceof String)) {
            throw new Error("Expected the field `creditType` to be a primitive type in the JSON string but got " + data['creditType']);
        }

        return true;
    }


}



/**
 * @member {module:model/Money} creditAmount
 */
CreditEstimate.prototype['creditAmount'] = undefined;

/**
 * The credit description.
 * @member {String} creditDescription
 */
CreditEstimate.prototype['creditDescription'] = undefined;

/**
 * The credit type.
 * @member {String} creditType
 */
CreditEstimate.prototype['creditType'] = undefined;






export default CreditEstimate;

