/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DualRegional from './DualRegional';
import MultiRegional from './MultiRegional';
import Regional from './Regional';
import Usage from './Usage';

/**
 * The CloudStorageWorkload model module.
 * @module model/CloudStorageWorkload
 * @version v1beta
 */
class CloudStorageWorkload {
    /**
     * Constructs a new <code>CloudStorageWorkload</code>.
     * Specifies usage of Cloud Storage resources.
     * @alias module:model/CloudStorageWorkload
     */
    constructor() { 
        
        CloudStorageWorkload.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CloudStorageWorkload</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CloudStorageWorkload} obj Optional instance to populate.
     * @return {module:model/CloudStorageWorkload} The populated <code>CloudStorageWorkload</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CloudStorageWorkload();

            if (data.hasOwnProperty('dataRetrieval')) {
                obj['dataRetrieval'] = Usage.constructFromObject(data['dataRetrieval']);
            }
            if (data.hasOwnProperty('dataStored')) {
                obj['dataStored'] = Usage.constructFromObject(data['dataStored']);
            }
            if (data.hasOwnProperty('dualRegion')) {
                obj['dualRegion'] = DualRegional.constructFromObject(data['dualRegion']);
            }
            if (data.hasOwnProperty('multiRegion')) {
                obj['multiRegion'] = MultiRegional.constructFromObject(data['multiRegion']);
            }
            if (data.hasOwnProperty('operationA')) {
                obj['operationA'] = Usage.constructFromObject(data['operationA']);
            }
            if (data.hasOwnProperty('operationB')) {
                obj['operationB'] = Usage.constructFromObject(data['operationB']);
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = Regional.constructFromObject(data['region']);
            }
            if (data.hasOwnProperty('storageClass')) {
                obj['storageClass'] = ApiClient.convertToType(data['storageClass'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CloudStorageWorkload</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CloudStorageWorkload</code>.
     */
    static validateJSON(data) {
        // validate the optional field `dataRetrieval`
        if (data['dataRetrieval']) { // data not null
          Usage.validateJSON(data['dataRetrieval']);
        }
        // validate the optional field `dataStored`
        if (data['dataStored']) { // data not null
          Usage.validateJSON(data['dataStored']);
        }
        // validate the optional field `dualRegion`
        if (data['dualRegion']) { // data not null
          DualRegional.validateJSON(data['dualRegion']);
        }
        // validate the optional field `multiRegion`
        if (data['multiRegion']) { // data not null
          MultiRegional.validateJSON(data['multiRegion']);
        }
        // validate the optional field `operationA`
        if (data['operationA']) { // data not null
          Usage.validateJSON(data['operationA']);
        }
        // validate the optional field `operationB`
        if (data['operationB']) { // data not null
          Usage.validateJSON(data['operationB']);
        }
        // validate the optional field `region`
        if (data['region']) { // data not null
          Regional.validateJSON(data['region']);
        }
        // ensure the json data is a string
        if (data['storageClass'] && !(typeof data['storageClass'] === 'string' || data['storageClass'] instanceof String)) {
            throw new Error("Expected the field `storageClass` to be a primitive type in the JSON string but got " + data['storageClass']);
        }

        return true;
    }


}



/**
 * @member {module:model/Usage} dataRetrieval
 */
CloudStorageWorkload.prototype['dataRetrieval'] = undefined;

/**
 * @member {module:model/Usage} dataStored
 */
CloudStorageWorkload.prototype['dataStored'] = undefined;

/**
 * @member {module:model/DualRegional} dualRegion
 */
CloudStorageWorkload.prototype['dualRegion'] = undefined;

/**
 * @member {module:model/MultiRegional} multiRegion
 */
CloudStorageWorkload.prototype['multiRegion'] = undefined;

/**
 * @member {module:model/Usage} operationA
 */
CloudStorageWorkload.prototype['operationA'] = undefined;

/**
 * @member {module:model/Usage} operationB
 */
CloudStorageWorkload.prototype['operationB'] = undefined;

/**
 * @member {module:model/Regional} region
 */
CloudStorageWorkload.prototype['region'] = undefined;

/**
 * The [storage class](https://cloud.google.com/storage/docs/storage-classes#classes) of the data and operation. For example: \"standard\" and \"nearline\".
 * @member {String} storageClass
 */
CloudStorageWorkload.prototype['storageClass'] = undefined;






export default CloudStorageWorkload;

