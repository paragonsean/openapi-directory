/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GuestAccelerator model module.
 * @module model/GuestAccelerator
 * @version v1beta
 */
class GuestAccelerator {
    /**
     * Constructs a new <code>GuestAccelerator</code>.
     * Specification of a set of guest accelerators attached to a machine.
     * @alias module:model/GuestAccelerator
     */
    constructor() { 
        
        GuestAccelerator.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GuestAccelerator</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GuestAccelerator} obj Optional instance to populate.
     * @return {module:model/GuestAccelerator} The populated <code>GuestAccelerator</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GuestAccelerator();

            if (data.hasOwnProperty('acceleratorCount')) {
                obj['acceleratorCount'] = ApiClient.convertToType(data['acceleratorCount'], 'String');
            }
            if (data.hasOwnProperty('acceleratorType')) {
                obj['acceleratorType'] = ApiClient.convertToType(data['acceleratorType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GuestAccelerator</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GuestAccelerator</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['acceleratorCount'] && !(typeof data['acceleratorCount'] === 'string' || data['acceleratorCount'] instanceof String)) {
            throw new Error("Expected the field `acceleratorCount` to be a primitive type in the JSON string but got " + data['acceleratorCount']);
        }
        // ensure the json data is a string
        if (data['acceleratorType'] && !(typeof data['acceleratorType'] === 'string' || data['acceleratorType'] instanceof String)) {
            throw new Error("Expected the field `acceleratorType` to be a primitive type in the JSON string but got " + data['acceleratorType']);
        }

        return true;
    }


}



/**
 * The number of the guest accelerator cards exposed to each instance.
 * @member {String} acceleratorCount
 */
GuestAccelerator.prototype['acceleratorCount'] = undefined;

/**
 * The type of the guest accelerator cards. For example: \"nvidia-tesla-t4\".
 * @member {String} acceleratorType
 */
GuestAccelerator.prototype['acceleratorType'] = undefined;






export default GuestAccelerator;

