/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GuestAccelerator from './GuestAccelerator';

/**
 * The VmResourceBasedCud model module.
 * @module model/VmResourceBasedCud
 * @version v1beta
 */
class VmResourceBasedCud {
    /**
     * Constructs a new <code>VmResourceBasedCud</code>.
     * Specifies a resource-based committed use discount (CUD).
     * @alias module:model/VmResourceBasedCud
     */
    constructor() { 
        
        VmResourceBasedCud.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VmResourceBasedCud</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VmResourceBasedCud} obj Optional instance to populate.
     * @return {module:model/VmResourceBasedCud} The populated <code>VmResourceBasedCud</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VmResourceBasedCud();

            if (data.hasOwnProperty('guestAccelerator')) {
                obj['guestAccelerator'] = GuestAccelerator.constructFromObject(data['guestAccelerator']);
            }
            if (data.hasOwnProperty('machineSeries')) {
                obj['machineSeries'] = ApiClient.convertToType(data['machineSeries'], 'String');
            }
            if (data.hasOwnProperty('memorySizeGb')) {
                obj['memorySizeGb'] = ApiClient.convertToType(data['memorySizeGb'], 'Number');
            }
            if (data.hasOwnProperty('plan')) {
                obj['plan'] = ApiClient.convertToType(data['plan'], 'String');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
            if (data.hasOwnProperty('virtualCpuCount')) {
                obj['virtualCpuCount'] = ApiClient.convertToType(data['virtualCpuCount'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VmResourceBasedCud</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VmResourceBasedCud</code>.
     */
    static validateJSON(data) {
        // validate the optional field `guestAccelerator`
        if (data['guestAccelerator']) { // data not null
          GuestAccelerator.validateJSON(data['guestAccelerator']);
        }
        // ensure the json data is a string
        if (data['machineSeries'] && !(typeof data['machineSeries'] === 'string' || data['machineSeries'] instanceof String)) {
            throw new Error("Expected the field `machineSeries` to be a primitive type in the JSON string but got " + data['machineSeries']);
        }
        // ensure the json data is a string
        if (data['plan'] && !(typeof data['plan'] === 'string' || data['plan'] instanceof String)) {
            throw new Error("Expected the field `plan` to be a primitive type in the JSON string but got " + data['plan']);
        }
        // ensure the json data is a string
        if (data['region'] && !(typeof data['region'] === 'string' || data['region'] instanceof String)) {
            throw new Error("Expected the field `region` to be a primitive type in the JSON string but got " + data['region']);
        }
        // ensure the json data is a string
        if (data['virtualCpuCount'] && !(typeof data['virtualCpuCount'] === 'string' || data['virtualCpuCount'] instanceof String)) {
            throw new Error("Expected the field `virtualCpuCount` to be a primitive type in the JSON string but got " + data['virtualCpuCount']);
        }

        return true;
    }


}



/**
 * @member {module:model/GuestAccelerator} guestAccelerator
 */
VmResourceBasedCud.prototype['guestAccelerator'] = undefined;

/**
 * The machine series for CUD. For example: \"n1\" for general purpose N1 machine type commitments. \"n2\" for general purpose N2 machine type commitments. \"e2\" for general purpose E2 machine type commitments. \"n2d\" for general purpose N2D machine type commitments. \"t2d\" for general purpose T2D machine type commitments. \"c2\"/\"c2d\" for compute-optimized commitments. \"m1\"/\"m2\" for the memory-optimized commitments. \"a2' for the accelerator-optimized commitments.
 * @member {String} machineSeries
 */
VmResourceBasedCud.prototype['machineSeries'] = undefined;

/**
 * Memory size of the VM in GB (2^30 bytes). Must be an increment of 0.25 (256 MB).
 * @member {Number} memorySizeGb
 */
VmResourceBasedCud.prototype['memorySizeGb'] = undefined;

/**
 * Commitment usage plan.
 * @member {module:model/VmResourceBasedCud.PlanEnum} plan
 */
VmResourceBasedCud.prototype['plan'] = undefined;

/**
 * The region where the VM runs. For example: \"us-central1\"
 * @member {String} region
 */
VmResourceBasedCud.prototype['region'] = undefined;

/**
 * The number of vCPUs. The number of vCPUs must be an integer of 0 or more and can be even or odd.
 * @member {String} virtualCpuCount
 */
VmResourceBasedCud.prototype['virtualCpuCount'] = undefined;





/**
 * Allowed values for the <code>plan</code> property.
 * @enum {String}
 * @readonly
 */
VmResourceBasedCud['PlanEnum'] = {

    /**
     * value: "COMMITMENT_PLAN_UNSPECIFIED"
     * @const
     */
    "COMMITMENT_PLAN_UNSPECIFIED": "COMMITMENT_PLAN_UNSPECIFIED",

    /**
     * value: "TWELVE_MONTH"
     * @const
     */
    "TWELVE_MONTH": "TWELVE_MONTH",

    /**
     * value: "THIRTY_SIX_MONTH"
     * @const
     */
    "THIRTY_SIX_MONTH": "THIRTY_SIX_MONTH"
};



export default VmResourceBasedCud;

