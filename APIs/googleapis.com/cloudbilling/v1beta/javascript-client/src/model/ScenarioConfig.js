/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ScenarioConfig model module.
 * @module model/ScenarioConfig
 * @version v1beta
 */
class ScenarioConfig {
    /**
     * Constructs a new <code>ScenarioConfig</code>.
     * Configuration for a CostScenario. Specifies how costs are calculated.
     * @alias module:model/ScenarioConfig
     */
    constructor() { 
        
        ScenarioConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ScenarioConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScenarioConfig} obj Optional instance to populate.
     * @return {module:model/ScenarioConfig} The populated <code>ScenarioConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScenarioConfig();

            if (data.hasOwnProperty('estimateDuration')) {
                obj['estimateDuration'] = ApiClient.convertToType(data['estimateDuration'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScenarioConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScenarioConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['estimateDuration'] && !(typeof data['estimateDuration'] === 'string' || data['estimateDuration'] instanceof String)) {
            throw new Error("Expected the field `estimateDuration` to be a primitive type in the JSON string but got " + data['estimateDuration']);
        }

        return true;
    }


}



/**
 * Time frame for the estimate. Workloads must specify usage for this duration. Duration must be at least 1 hour (3,600 seconds) and at most 10 years (315,360,000 seconds). The calculations for years and months are based on a 730-hour (2,628,000-second) month. For durations longer than one month (2,628,000 seconds), the duration is rounded up to the next month, so the estimate shows you the costs for full months. For example, a duration of 3,232,800 seconds (roughly 5 weeks) is rounded up to 2 months.
 * @member {String} estimateDuration
 */
ScenarioConfig.prototype['estimateDuration'] = undefined;






export default ScenarioConfig;

