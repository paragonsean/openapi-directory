/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomyMultiRegional from './GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomyMultiRegional';
import GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomyRegional from './GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomyRegional';

/**
 * The GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomy model module.
 * @module model/GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomy
 * @version v1beta
 */
class GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomy {
    /**
     * Constructs a new <code>GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomy</code>.
     * Encapsulates geographic metadata, such as regions and multi-regions like &#x60;us-east4&#x60; or &#x60;European Union&#x60;.
     * @alias module:model/GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomy
     */
    constructor() { 
        
        GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomy} obj Optional instance to populate.
     * @return {module:model/GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomy} The populated <code>GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomy();

            if (data.hasOwnProperty('globalMetadata')) {
                obj['globalMetadata'] = ApiClient.convertToType(data['globalMetadata'], Object);
            }
            if (data.hasOwnProperty('multiRegionalMetadata')) {
                obj['multiRegionalMetadata'] = GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomyMultiRegional.constructFromObject(data['multiRegionalMetadata']);
            }
            if (data.hasOwnProperty('regionalMetadata')) {
                obj['regionalMetadata'] = GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomyRegional.constructFromObject(data['regionalMetadata']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomy</code>.
     */
    static validateJSON(data) {
        // validate the optional field `multiRegionalMetadata`
        if (data['multiRegionalMetadata']) { // data not null
          GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomyMultiRegional.validateJSON(data['multiRegionalMetadata']);
        }
        // validate the optional field `regionalMetadata`
        if (data['regionalMetadata']) { // data not null
          GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomyRegional.validateJSON(data['regionalMetadata']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Encapsulates a global geographic taxonomy.
 * @member {Object} globalMetadata
 */
GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomy.prototype['globalMetadata'] = undefined;

/**
 * @member {module:model/GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomyMultiRegional} multiRegionalMetadata
 */
GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomy.prototype['multiRegionalMetadata'] = undefined;

/**
 * @member {module:model/GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomyRegional} regionalMetadata
 */
GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomy.prototype['regionalMetadata'] = undefined;

/**
 * Type of geographic taxonomy associated with the billing account SKU.
 * @member {module:model/GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomy.TypeEnum} type
 */
GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomy.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomy['TypeEnum'] = {

    /**
     * value: "TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "TYPE_UNSPECIFIED",

    /**
     * value: "TYPE_GLOBAL"
     * @const
     */
    "GLOBAL": "TYPE_GLOBAL",

    /**
     * value: "TYPE_REGIONAL"
     * @const
     */
    "REGIONAL": "TYPE_REGIONAL",

    /**
     * value: "TYPE_MULTI_REGIONAL"
     * @const
     */
    "MULTI_REGIONAL": "TYPE_MULTI_REGIONAL"
};



export default GoogleCloudBillingBillingaccountskusV1betaGeoTaxonomy;

