/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAggregationInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAggregationInfo::OAIAggregationInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAggregationInfo::OAIAggregationInfo() {
    this->initializeModel();
}

OAIAggregationInfo::~OAIAggregationInfo() {}

void OAIAggregationInfo::initializeModel() {

    m_aggregation_count_isSet = false;
    m_aggregation_count_isValid = false;

    m_aggregation_interval_isSet = false;
    m_aggregation_interval_isValid = false;

    m_aggregation_level_isSet = false;
    m_aggregation_level_isValid = false;
}

void OAIAggregationInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAggregationInfo::fromJsonObject(QJsonObject json) {

    m_aggregation_count_isValid = ::OpenAPI::fromJsonValue(m_aggregation_count, json[QString("aggregationCount")]);
    m_aggregation_count_isSet = !json[QString("aggregationCount")].isNull() && m_aggregation_count_isValid;

    m_aggregation_interval_isValid = ::OpenAPI::fromJsonValue(m_aggregation_interval, json[QString("aggregationInterval")]);
    m_aggregation_interval_isSet = !json[QString("aggregationInterval")].isNull() && m_aggregation_interval_isValid;

    m_aggregation_level_isValid = ::OpenAPI::fromJsonValue(m_aggregation_level, json[QString("aggregationLevel")]);
    m_aggregation_level_isSet = !json[QString("aggregationLevel")].isNull() && m_aggregation_level_isValid;
}

QString OAIAggregationInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAggregationInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_aggregation_count_isSet) {
        obj.insert(QString("aggregationCount"), ::OpenAPI::toJsonValue(m_aggregation_count));
    }
    if (m_aggregation_interval_isSet) {
        obj.insert(QString("aggregationInterval"), ::OpenAPI::toJsonValue(m_aggregation_interval));
    }
    if (m_aggregation_level_isSet) {
        obj.insert(QString("aggregationLevel"), ::OpenAPI::toJsonValue(m_aggregation_level));
    }
    return obj;
}

qint32 OAIAggregationInfo::getAggregationCount() const {
    return m_aggregation_count;
}
void OAIAggregationInfo::setAggregationCount(const qint32 &aggregation_count) {
    m_aggregation_count = aggregation_count;
    m_aggregation_count_isSet = true;
}

bool OAIAggregationInfo::is_aggregation_count_Set() const{
    return m_aggregation_count_isSet;
}

bool OAIAggregationInfo::is_aggregation_count_Valid() const{
    return m_aggregation_count_isValid;
}

QString OAIAggregationInfo::getAggregationInterval() const {
    return m_aggregation_interval;
}
void OAIAggregationInfo::setAggregationInterval(const QString &aggregation_interval) {
    m_aggregation_interval = aggregation_interval;
    m_aggregation_interval_isSet = true;
}

bool OAIAggregationInfo::is_aggregation_interval_Set() const{
    return m_aggregation_interval_isSet;
}

bool OAIAggregationInfo::is_aggregation_interval_Valid() const{
    return m_aggregation_interval_isValid;
}

QString OAIAggregationInfo::getAggregationLevel() const {
    return m_aggregation_level;
}
void OAIAggregationInfo::setAggregationLevel(const QString &aggregation_level) {
    m_aggregation_level = aggregation_level;
    m_aggregation_level_isSet = true;
}

bool OAIAggregationInfo::is_aggregation_level_Set() const{
    return m_aggregation_level_isSet;
}

bool OAIAggregationInfo::is_aggregation_level_Valid() const{
    return m_aggregation_level_isValid;
}

bool OAIAggregationInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aggregation_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_aggregation_interval_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_aggregation_level_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAggregationInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
