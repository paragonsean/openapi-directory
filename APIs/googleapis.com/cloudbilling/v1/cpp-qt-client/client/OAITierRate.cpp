/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITierRate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITierRate::OAITierRate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITierRate::OAITierRate() {
    this->initializeModel();
}

OAITierRate::~OAITierRate() {}

void OAITierRate::initializeModel() {

    m_start_usage_amount_isSet = false;
    m_start_usage_amount_isValid = false;

    m_unit_price_isSet = false;
    m_unit_price_isValid = false;
}

void OAITierRate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITierRate::fromJsonObject(QJsonObject json) {

    m_start_usage_amount_isValid = ::OpenAPI::fromJsonValue(m_start_usage_amount, json[QString("startUsageAmount")]);
    m_start_usage_amount_isSet = !json[QString("startUsageAmount")].isNull() && m_start_usage_amount_isValid;

    m_unit_price_isValid = ::OpenAPI::fromJsonValue(m_unit_price, json[QString("unitPrice")]);
    m_unit_price_isSet = !json[QString("unitPrice")].isNull() && m_unit_price_isValid;
}

QString OAITierRate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITierRate::asJsonObject() const {
    QJsonObject obj;
    if (m_start_usage_amount_isSet) {
        obj.insert(QString("startUsageAmount"), ::OpenAPI::toJsonValue(m_start_usage_amount));
    }
    if (m_unit_price.isSet()) {
        obj.insert(QString("unitPrice"), ::OpenAPI::toJsonValue(m_unit_price));
    }
    return obj;
}

double OAITierRate::getStartUsageAmount() const {
    return m_start_usage_amount;
}
void OAITierRate::setStartUsageAmount(const double &start_usage_amount) {
    m_start_usage_amount = start_usage_amount;
    m_start_usage_amount_isSet = true;
}

bool OAITierRate::is_start_usage_amount_Set() const{
    return m_start_usage_amount_isSet;
}

bool OAITierRate::is_start_usage_amount_Valid() const{
    return m_start_usage_amount_isValid;
}

OAIMoney OAITierRate::getUnitPrice() const {
    return m_unit_price;
}
void OAITierRate::setUnitPrice(const OAIMoney &unit_price) {
    m_unit_price = unit_price;
    m_unit_price_isSet = true;
}

bool OAITierRate::is_unit_price_Set() const{
    return m_unit_price_isSet;
}

bool OAITierRate::is_unit_price_Valid() const{
    return m_unit_price_isValid;
}

bool OAITierRate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_start_usage_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit_price.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITierRate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
