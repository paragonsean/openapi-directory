# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.category import Category
from openapi_server.models.geo_taxonomy import GeoTaxonomy
from openapi_server.models.pricing_info import PricingInfo
from openapi_server import util


class Sku(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category: Category=None, description: str=None, geo_taxonomy: GeoTaxonomy=None, name: str=None, pricing_info: List[PricingInfo]=None, service_provider_name: str=None, service_regions: List[str]=None, sku_id: str=None):
        """Sku - a model defined in OpenAPI

        :param category: The category of this Sku.
        :param description: The description of this Sku.
        :param geo_taxonomy: The geo_taxonomy of this Sku.
        :param name: The name of this Sku.
        :param pricing_info: The pricing_info of this Sku.
        :param service_provider_name: The service_provider_name of this Sku.
        :param service_regions: The service_regions of this Sku.
        :param sku_id: The sku_id of this Sku.
        """
        self.openapi_types = {
            'category': Category,
            'description': str,
            'geo_taxonomy': GeoTaxonomy,
            'name': str,
            'pricing_info': List[PricingInfo],
            'service_provider_name': str,
            'service_regions': List[str],
            'sku_id': str
        }

        self.attribute_map = {
            'category': 'category',
            'description': 'description',
            'geo_taxonomy': 'geoTaxonomy',
            'name': 'name',
            'pricing_info': 'pricingInfo',
            'service_provider_name': 'serviceProviderName',
            'service_regions': 'serviceRegions',
            'sku_id': 'skuId'
        }

        self._category = category
        self._description = description
        self._geo_taxonomy = geo_taxonomy
        self._name = name
        self._pricing_info = pricing_info
        self._service_provider_name = service_provider_name
        self._service_regions = service_regions
        self._sku_id = sku_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Sku':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Sku of this Sku.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category(self):
        """Gets the category of this Sku.


        :return: The category of this Sku.
        :rtype: Category
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this Sku.


        :param category: The category of this Sku.
        :type category: Category
        """

        self._category = category

    @property
    def description(self):
        """Gets the description of this Sku.

        A human readable description of the SKU, has a maximum length of 256 characters.

        :return: The description of this Sku.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Sku.

        A human readable description of the SKU, has a maximum length of 256 characters.

        :param description: The description of this Sku.
        :type description: str
        """

        self._description = description

    @property
    def geo_taxonomy(self):
        """Gets the geo_taxonomy of this Sku.


        :return: The geo_taxonomy of this Sku.
        :rtype: GeoTaxonomy
        """
        return self._geo_taxonomy

    @geo_taxonomy.setter
    def geo_taxonomy(self, geo_taxonomy):
        """Sets the geo_taxonomy of this Sku.


        :param geo_taxonomy: The geo_taxonomy of this Sku.
        :type geo_taxonomy: GeoTaxonomy
        """

        self._geo_taxonomy = geo_taxonomy

    @property
    def name(self):
        """Gets the name of this Sku.

        The resource name for the SKU. Example: \"services/DA34-426B-A397/skus/AA95-CD31-42FE\"

        :return: The name of this Sku.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Sku.

        The resource name for the SKU. Example: \"services/DA34-426B-A397/skus/AA95-CD31-42FE\"

        :param name: The name of this Sku.
        :type name: str
        """

        self._name = name

    @property
    def pricing_info(self):
        """Gets the pricing_info of this Sku.

        A timeline of pricing info for this SKU in chronological order.

        :return: The pricing_info of this Sku.
        :rtype: List[PricingInfo]
        """
        return self._pricing_info

    @pricing_info.setter
    def pricing_info(self, pricing_info):
        """Sets the pricing_info of this Sku.

        A timeline of pricing info for this SKU in chronological order.

        :param pricing_info: The pricing_info of this Sku.
        :type pricing_info: List[PricingInfo]
        """

        self._pricing_info = pricing_info

    @property
    def service_provider_name(self):
        """Gets the service_provider_name of this Sku.

        Identifies the service provider. This is 'Google' for first party services in Google Cloud Platform.

        :return: The service_provider_name of this Sku.
        :rtype: str
        """
        return self._service_provider_name

    @service_provider_name.setter
    def service_provider_name(self, service_provider_name):
        """Sets the service_provider_name of this Sku.

        Identifies the service provider. This is 'Google' for first party services in Google Cloud Platform.

        :param service_provider_name: The service_provider_name of this Sku.
        :type service_provider_name: str
        """

        self._service_provider_name = service_provider_name

    @property
    def service_regions(self):
        """Gets the service_regions of this Sku.

        List of service regions this SKU is offered at. Example: \"asia-east1\" Service regions can be found at https://cloud.google.com/about/locations/

        :return: The service_regions of this Sku.
        :rtype: List[str]
        """
        return self._service_regions

    @service_regions.setter
    def service_regions(self, service_regions):
        """Sets the service_regions of this Sku.

        List of service regions this SKU is offered at. Example: \"asia-east1\" Service regions can be found at https://cloud.google.com/about/locations/

        :param service_regions: The service_regions of this Sku.
        :type service_regions: List[str]
        """

        self._service_regions = service_regions

    @property
    def sku_id(self):
        """Gets the sku_id of this Sku.

        The identifier for the SKU. Example: \"AA95-CD31-42FE\"

        :return: The sku_id of this Sku.
        :rtype: str
        """
        return self._sku_id

    @sku_id.setter
    def sku_id(self, sku_id):
        """Sets the sku_id of this Sku.

        The identifier for the SKU. Example: \"AA95-CD31-42FE\"

        :param sku_id: The sku_id of this Sku.
        :type sku_id: str
        """

        self._sku_id = sku_id
