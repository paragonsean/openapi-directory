/**
 * Cloud Billing API
 * Allows developers to manage billing for their Google Cloud Platform projects programmatically.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Category model module.
 * @module model/Category
 * @version v1
 */
class Category {
    /**
     * Constructs a new <code>Category</code>.
     * Represents the category hierarchy of a SKU.
     * @alias module:model/Category
     */
    constructor() { 
        
        Category.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Category</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Category} obj Optional instance to populate.
     * @return {module:model/Category} The populated <code>Category</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Category();

            if (data.hasOwnProperty('resourceFamily')) {
                obj['resourceFamily'] = ApiClient.convertToType(data['resourceFamily'], 'String');
            }
            if (data.hasOwnProperty('resourceGroup')) {
                obj['resourceGroup'] = ApiClient.convertToType(data['resourceGroup'], 'String');
            }
            if (data.hasOwnProperty('serviceDisplayName')) {
                obj['serviceDisplayName'] = ApiClient.convertToType(data['serviceDisplayName'], 'String');
            }
            if (data.hasOwnProperty('usageType')) {
                obj['usageType'] = ApiClient.convertToType(data['usageType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Category</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Category</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['resourceFamily'] && !(typeof data['resourceFamily'] === 'string' || data['resourceFamily'] instanceof String)) {
            throw new Error("Expected the field `resourceFamily` to be a primitive type in the JSON string but got " + data['resourceFamily']);
        }
        // ensure the json data is a string
        if (data['resourceGroup'] && !(typeof data['resourceGroup'] === 'string' || data['resourceGroup'] instanceof String)) {
            throw new Error("Expected the field `resourceGroup` to be a primitive type in the JSON string but got " + data['resourceGroup']);
        }
        // ensure the json data is a string
        if (data['serviceDisplayName'] && !(typeof data['serviceDisplayName'] === 'string' || data['serviceDisplayName'] instanceof String)) {
            throw new Error("Expected the field `serviceDisplayName` to be a primitive type in the JSON string but got " + data['serviceDisplayName']);
        }
        // ensure the json data is a string
        if (data['usageType'] && !(typeof data['usageType'] === 'string' || data['usageType'] instanceof String)) {
            throw new Error("Expected the field `usageType` to be a primitive type in the JSON string but got " + data['usageType']);
        }

        return true;
    }


}



/**
 * The type of product the SKU refers to. Example: \"Compute\", \"Storage\", \"Network\", \"ApplicationServices\" etc.
 * @member {String} resourceFamily
 */
Category.prototype['resourceFamily'] = undefined;

/**
 * A group classification for related SKUs. Example: \"RAM\", \"GPU\", \"Prediction\", \"Ops\", \"GoogleEgress\" etc.
 * @member {String} resourceGroup
 */
Category.prototype['resourceGroup'] = undefined;

/**
 * The display name of the service this SKU belongs to.
 * @member {String} serviceDisplayName
 */
Category.prototype['serviceDisplayName'] = undefined;

/**
 * Represents how the SKU is consumed. Example: \"OnDemand\", \"Preemptible\", \"Commit1Mo\", \"Commit1Yr\" etc.
 * @member {String} usageType
 */
Category.prototype['usageType'] = undefined;






export default Category;

