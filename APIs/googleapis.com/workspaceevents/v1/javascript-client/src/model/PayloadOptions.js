/**
 * Google Workspace Events API
 * The Google Workspace Events API lets you subscribe to events and manage change notifications across Google Workspace applications.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PayloadOptions model module.
 * @module model/PayloadOptions
 * @version v1
 */
class PayloadOptions {
    /**
     * Constructs a new <code>PayloadOptions</code>.
     * Options about what data to include in the event payload. Only supported for Google Chat events.
     * @alias module:model/PayloadOptions
     */
    constructor() { 
        
        PayloadOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PayloadOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PayloadOptions} obj Optional instance to populate.
     * @return {module:model/PayloadOptions} The populated <code>PayloadOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PayloadOptions();

            if (data.hasOwnProperty('fieldMask')) {
                obj['fieldMask'] = ApiClient.convertToType(data['fieldMask'], 'String');
            }
            if (data.hasOwnProperty('includeResource')) {
                obj['includeResource'] = ApiClient.convertToType(data['includeResource'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PayloadOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PayloadOptions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['fieldMask'] && !(typeof data['fieldMask'] === 'string' || data['fieldMask'] instanceof String)) {
            throw new Error("Expected the field `fieldMask` to be a primitive type in the JSON string but got " + data['fieldMask']);
        }

        return true;
    }


}



/**
 * Optional. If `include_resource` is set to `true`, the list of fields to include in the event payload. Separate fields with a comma. For example, to include a Google Chat message's sender and create time, enter `message.sender,message.createTime`. If omitted, the payload includes all fields for the resource. If you specify a field that doesn't exist for the resource, the system ignores the field.
 * @member {String} fieldMask
 */
PayloadOptions.prototype['fieldMask'] = undefined;

/**
 * Optional. Whether the event payload includes data about the resource that changed. For example, for an event where a Google Chat message was created, whether the payload contains data about the [`Message`](https://developers.google.com/chat/api/reference/rest/v1/spaces.messages) resource. If false, the event payload only includes the name of the changed resource.
 * @member {Boolean} includeResource
 */
PayloadOptions.prototype['includeResource'] = undefined;






export default PayloadOptions;

