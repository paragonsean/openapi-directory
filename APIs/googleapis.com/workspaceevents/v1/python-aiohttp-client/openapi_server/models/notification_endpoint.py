# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NotificationEndpoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pubsub_topic: str=None):
        """NotificationEndpoint - a model defined in OpenAPI

        :param pubsub_topic: The pubsub_topic of this NotificationEndpoint.
        """
        self.openapi_types = {
            'pubsub_topic': str
        }

        self.attribute_map = {
            'pubsub_topic': 'pubsubTopic'
        }

        self._pubsub_topic = pubsub_topic

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NotificationEndpoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NotificationEndpoint of this NotificationEndpoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pubsub_topic(self):
        """Gets the pubsub_topic of this NotificationEndpoint.

        Immutable. The Cloud Pub/Sub topic that receives events for the subscription. Format: `projects/{project}/topics/{topic}` You must create the topic in the same Google Cloud project where you create this subscription. When the topic receives events, the events are encoded as Cloud Pub/Sub messages. For details, see the [Google Cloud Pub/Sub Protocol Binding for CloudEvents](https://github.com/googleapis/google-cloudevents/blob/main/docs/spec/pubsub.md).

        :return: The pubsub_topic of this NotificationEndpoint.
        :rtype: str
        """
        return self._pubsub_topic

    @pubsub_topic.setter
    def pubsub_topic(self, pubsub_topic):
        """Sets the pubsub_topic of this NotificationEndpoint.

        Immutable. The Cloud Pub/Sub topic that receives events for the subscription. Format: `projects/{project}/topics/{topic}` You must create the topic in the same Google Cloud project where you create this subscription. When the topic receives events, the events are encoded as Cloud Pub/Sub messages. For details, see the [Google Cloud Pub/Sub Protocol Binding for CloudEvents](https://github.com/googleapis/google-cloudevents/blob/main/docs/spec/pubsub.md).

        :param pubsub_topic: The pubsub_topic of this NotificationEndpoint.
        :type pubsub_topic: str
        """

        self._pubsub_topic = pubsub_topic
