/**
 * Google Workspace Events API
 * The Google Workspace Events API lets you subscribe to events and manage change notifications across Google Workspace applications.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubscription.h
 *
 * [Developer Preview](https://developers.google.com/workspace/preview). A subscription to receive events about a Google Workspace resource. To learn more about subscriptions, see the [Google Workspace Events API overview](https://developers.google.com/workspace/events).
 */

#ifndef OAISubscription_H
#define OAISubscription_H

#include <QJsonObject>

#include "OAINotificationEndpoint.h"
#include "OAIPayloadOptions.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINotificationEndpoint;
class OAIPayloadOptions;

class OAISubscription : public OAIObject {
public:
    OAISubscription();
    OAISubscription(QString json);
    ~OAISubscription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthority() const;
    void setAuthority(const QString &authority);
    bool is_authority_Set() const;
    bool is_authority_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QList<QString> getEventTypes() const;
    void setEventTypes(const QList<QString> &event_types);
    bool is_event_types_Set() const;
    bool is_event_types_Valid() const;

    QString getExpireTime() const;
    void setExpireTime(const QString &expire_time);
    bool is_expire_time_Set() const;
    bool is_expire_time_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAINotificationEndpoint getNotificationEndpoint() const;
    void setNotificationEndpoint(const OAINotificationEndpoint &notification_endpoint);
    bool is_notification_endpoint_Set() const;
    bool is_notification_endpoint_Valid() const;

    OAIPayloadOptions getPayloadOptions() const;
    void setPayloadOptions(const OAIPayloadOptions &payload_options);
    bool is_payload_options_Set() const;
    bool is_payload_options_Valid() const;

    bool isReconciling() const;
    void setReconciling(const bool &reconciling);
    bool is_reconciling_Set() const;
    bool is_reconciling_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getSuspensionReason() const;
    void setSuspensionReason(const QString &suspension_reason);
    bool is_suspension_reason_Set() const;
    bool is_suspension_reason_Valid() const;

    QString getTargetResource() const;
    void setTargetResource(const QString &target_resource);
    bool is_target_resource_Set() const;
    bool is_target_resource_Valid() const;

    QString getTtl() const;
    void setTtl(const QString &ttl);
    bool is_ttl_Set() const;
    bool is_ttl_Valid() const;

    QString getUid() const;
    void setUid(const QString &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_authority;
    bool m_authority_isSet;
    bool m_authority_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QList<QString> m_event_types;
    bool m_event_types_isSet;
    bool m_event_types_isValid;

    QString m_expire_time;
    bool m_expire_time_isSet;
    bool m_expire_time_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAINotificationEndpoint m_notification_endpoint;
    bool m_notification_endpoint_isSet;
    bool m_notification_endpoint_isValid;

    OAIPayloadOptions m_payload_options;
    bool m_payload_options_isSet;
    bool m_payload_options_isValid;

    bool m_reconciling;
    bool m_reconciling_isSet;
    bool m_reconciling_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_suspension_reason;
    bool m_suspension_reason_isSet;
    bool m_suspension_reason_isValid;

    QString m_target_resource;
    bool m_target_resource_isSet;
    bool m_target_resource_isValid;

    QString m_ttl;
    bool m_ttl_isSet;
    bool m_ttl_isValid;

    QString m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubscription)

#endif // OAISubscription_H
