# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Report(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, download_url: str=None, end_time: str=None, id: str=None, job_expire_time: str=None, job_id: str=None, start_time: str=None):
        """Report - a model defined in OpenAPI

        :param create_time: The create_time of this Report.
        :param download_url: The download_url of this Report.
        :param end_time: The end_time of this Report.
        :param id: The id of this Report.
        :param job_expire_time: The job_expire_time of this Report.
        :param job_id: The job_id of this Report.
        :param start_time: The start_time of this Report.
        """
        self.openapi_types = {
            'create_time': str,
            'download_url': str,
            'end_time': str,
            'id': str,
            'job_expire_time': str,
            'job_id': str,
            'start_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'download_url': 'downloadUrl',
            'end_time': 'endTime',
            'id': 'id',
            'job_expire_time': 'jobExpireTime',
            'job_id': 'jobId',
            'start_time': 'startTime'
        }

        self._create_time = create_time
        self._download_url = download_url
        self._end_time = end_time
        self._id = id
        self._job_expire_time = job_expire_time
        self._job_id = job_id
        self._start_time = start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Report':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Report of this Report.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this Report.

        The date/time when this report was created.

        :return: The create_time of this Report.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this Report.

        The date/time when this report was created.

        :param create_time: The create_time of this Report.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def download_url(self):
        """Gets the download_url of this Report.

        The URL from which the report can be downloaded (max. 1000 characters).

        :return: The download_url of this Report.
        :rtype: str
        """
        return self._download_url

    @download_url.setter
    def download_url(self, download_url):
        """Sets the download_url of this Report.

        The URL from which the report can be downloaded (max. 1000 characters).

        :param download_url: The download_url of this Report.
        :type download_url: str
        """

        self._download_url = download_url

    @property
    def end_time(self):
        """Gets the end_time of this Report.

        The end of the time period that the report instance covers. The value is exclusive.

        :return: The end_time of this Report.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this Report.

        The end of the time period that the report instance covers. The value is exclusive.

        :param end_time: The end_time of this Report.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def id(self):
        """Gets the id of this Report.

        The server-generated ID of the report.

        :return: The id of this Report.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Report.

        The server-generated ID of the report.

        :param id: The id of this Report.
        :type id: str
        """

        self._id = id

    @property
    def job_expire_time(self):
        """Gets the job_expire_time of this Report.

        The date/time when the job this report belongs to will expire/expired.

        :return: The job_expire_time of this Report.
        :rtype: str
        """
        return self._job_expire_time

    @job_expire_time.setter
    def job_expire_time(self, job_expire_time):
        """Sets the job_expire_time of this Report.

        The date/time when the job this report belongs to will expire/expired.

        :param job_expire_time: The job_expire_time of this Report.
        :type job_expire_time: str
        """

        self._job_expire_time = job_expire_time

    @property
    def job_id(self):
        """Gets the job_id of this Report.

        The ID of the job that created this report.

        :return: The job_id of this Report.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this Report.

        The ID of the job that created this report.

        :param job_id: The job_id of this Report.
        :type job_id: str
        """

        self._job_id = job_id

    @property
    def start_time(self):
        """Gets the start_time of this Report.

        The start of the time period that the report instance covers. The value is inclusive.

        :return: The start_time of this Report.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this Report.

        The start of the time period that the report instance covers. The value is inclusive.

        :param start_time: The start_time of this Report.
        :type start_time: str
        """

        self._start_time = start_time
