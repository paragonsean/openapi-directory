# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GdataObjectId(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bucket_name: str=None, generation: str=None, object_name: str=None):
        """GdataObjectId - a model defined in OpenAPI

        :param bucket_name: The bucket_name of this GdataObjectId.
        :param generation: The generation of this GdataObjectId.
        :param object_name: The object_name of this GdataObjectId.
        """
        self.openapi_types = {
            'bucket_name': str,
            'generation': str,
            'object_name': str
        }

        self.attribute_map = {
            'bucket_name': 'bucketName',
            'generation': 'generation',
            'object_name': 'objectName'
        }

        self._bucket_name = bucket_name
        self._generation = generation
        self._object_name = object_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GdataObjectId':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GdataObjectId of this GdataObjectId.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bucket_name(self):
        """Gets the bucket_name of this GdataObjectId.

        gdata

        :return: The bucket_name of this GdataObjectId.
        :rtype: str
        """
        return self._bucket_name

    @bucket_name.setter
    def bucket_name(self, bucket_name):
        """Sets the bucket_name of this GdataObjectId.

        gdata

        :param bucket_name: The bucket_name of this GdataObjectId.
        :type bucket_name: str
        """

        self._bucket_name = bucket_name

    @property
    def generation(self):
        """Gets the generation of this GdataObjectId.

        gdata

        :return: The generation of this GdataObjectId.
        :rtype: str
        """
        return self._generation

    @generation.setter
    def generation(self, generation):
        """Sets the generation of this GdataObjectId.

        gdata

        :param generation: The generation of this GdataObjectId.
        :type generation: str
        """

        self._generation = generation

    @property
    def object_name(self):
        """Gets the object_name of this GdataObjectId.

        gdata

        :return: The object_name of this GdataObjectId.
        :rtype: str
        """
        return self._object_name

    @object_name.setter
    def object_name(self, object_name):
        """Sets the object_name of this GdataObjectId.

        gdata

        :param object_name: The object_name of this GdataObjectId.
        :type object_name: str
        """

        self._object_name = object_name
