# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GdataBlobstore2Info(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blob_generation: str=None, blob_id: str=None, download_read_handle: str=None, read_token: str=None, upload_metadata_container: str=None):
        """GdataBlobstore2Info - a model defined in OpenAPI

        :param blob_generation: The blob_generation of this GdataBlobstore2Info.
        :param blob_id: The blob_id of this GdataBlobstore2Info.
        :param download_read_handle: The download_read_handle of this GdataBlobstore2Info.
        :param read_token: The read_token of this GdataBlobstore2Info.
        :param upload_metadata_container: The upload_metadata_container of this GdataBlobstore2Info.
        """
        self.openapi_types = {
            'blob_generation': str,
            'blob_id': str,
            'download_read_handle': str,
            'read_token': str,
            'upload_metadata_container': str
        }

        self.attribute_map = {
            'blob_generation': 'blobGeneration',
            'blob_id': 'blobId',
            'download_read_handle': 'downloadReadHandle',
            'read_token': 'readToken',
            'upload_metadata_container': 'uploadMetadataContainer'
        }

        self._blob_generation = blob_generation
        self._blob_id = blob_id
        self._download_read_handle = download_read_handle
        self._read_token = read_token
        self._upload_metadata_container = upload_metadata_container

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GdataBlobstore2Info':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GdataBlobstore2Info of this GdataBlobstore2Info.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blob_generation(self):
        """Gets the blob_generation of this GdataBlobstore2Info.

        gdata

        :return: The blob_generation of this GdataBlobstore2Info.
        :rtype: str
        """
        return self._blob_generation

    @blob_generation.setter
    def blob_generation(self, blob_generation):
        """Sets the blob_generation of this GdataBlobstore2Info.

        gdata

        :param blob_generation: The blob_generation of this GdataBlobstore2Info.
        :type blob_generation: str
        """

        self._blob_generation = blob_generation

    @property
    def blob_id(self):
        """Gets the blob_id of this GdataBlobstore2Info.

        gdata

        :return: The blob_id of this GdataBlobstore2Info.
        :rtype: str
        """
        return self._blob_id

    @blob_id.setter
    def blob_id(self, blob_id):
        """Sets the blob_id of this GdataBlobstore2Info.

        gdata

        :param blob_id: The blob_id of this GdataBlobstore2Info.
        :type blob_id: str
        """

        self._blob_id = blob_id

    @property
    def download_read_handle(self):
        """Gets the download_read_handle of this GdataBlobstore2Info.

        gdata

        :return: The download_read_handle of this GdataBlobstore2Info.
        :rtype: str
        """
        return self._download_read_handle

    @download_read_handle.setter
    def download_read_handle(self, download_read_handle):
        """Sets the download_read_handle of this GdataBlobstore2Info.

        gdata

        :param download_read_handle: The download_read_handle of this GdataBlobstore2Info.
        :type download_read_handle: str
        """

        self._download_read_handle = download_read_handle

    @property
    def read_token(self):
        """Gets the read_token of this GdataBlobstore2Info.

        gdata

        :return: The read_token of this GdataBlobstore2Info.
        :rtype: str
        """
        return self._read_token

    @read_token.setter
    def read_token(self, read_token):
        """Sets the read_token of this GdataBlobstore2Info.

        gdata

        :param read_token: The read_token of this GdataBlobstore2Info.
        :type read_token: str
        """

        self._read_token = read_token

    @property
    def upload_metadata_container(self):
        """Gets the upload_metadata_container of this GdataBlobstore2Info.

        gdata

        :return: The upload_metadata_container of this GdataBlobstore2Info.
        :rtype: str
        """
        return self._upload_metadata_container

    @upload_metadata_container.setter
    def upload_metadata_container(self, upload_metadata_container):
        """Sets the upload_metadata_container of this GdataBlobstore2Info.

        gdata

        :param upload_metadata_container: The upload_metadata_container of this GdataBlobstore2Info.
        :type upload_metadata_container: str
        """

        self._upload_metadata_container = upload_metadata_container
