# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GdataContentTypeInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, best_guess: str=None, from_bytes: str=None, from_file_name: str=None, from_header: str=None, from_url_path: str=None):
        """GdataContentTypeInfo - a model defined in OpenAPI

        :param best_guess: The best_guess of this GdataContentTypeInfo.
        :param from_bytes: The from_bytes of this GdataContentTypeInfo.
        :param from_file_name: The from_file_name of this GdataContentTypeInfo.
        :param from_header: The from_header of this GdataContentTypeInfo.
        :param from_url_path: The from_url_path of this GdataContentTypeInfo.
        """
        self.openapi_types = {
            'best_guess': str,
            'from_bytes': str,
            'from_file_name': str,
            'from_header': str,
            'from_url_path': str
        }

        self.attribute_map = {
            'best_guess': 'bestGuess',
            'from_bytes': 'fromBytes',
            'from_file_name': 'fromFileName',
            'from_header': 'fromHeader',
            'from_url_path': 'fromUrlPath'
        }

        self._best_guess = best_guess
        self._from_bytes = from_bytes
        self._from_file_name = from_file_name
        self._from_header = from_header
        self._from_url_path = from_url_path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GdataContentTypeInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GdataContentTypeInfo of this GdataContentTypeInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def best_guess(self):
        """Gets the best_guess of this GdataContentTypeInfo.

        gdata

        :return: The best_guess of this GdataContentTypeInfo.
        :rtype: str
        """
        return self._best_guess

    @best_guess.setter
    def best_guess(self, best_guess):
        """Sets the best_guess of this GdataContentTypeInfo.

        gdata

        :param best_guess: The best_guess of this GdataContentTypeInfo.
        :type best_guess: str
        """

        self._best_guess = best_guess

    @property
    def from_bytes(self):
        """Gets the from_bytes of this GdataContentTypeInfo.

        gdata

        :return: The from_bytes of this GdataContentTypeInfo.
        :rtype: str
        """
        return self._from_bytes

    @from_bytes.setter
    def from_bytes(self, from_bytes):
        """Sets the from_bytes of this GdataContentTypeInfo.

        gdata

        :param from_bytes: The from_bytes of this GdataContentTypeInfo.
        :type from_bytes: str
        """

        self._from_bytes = from_bytes

    @property
    def from_file_name(self):
        """Gets the from_file_name of this GdataContentTypeInfo.

        gdata

        :return: The from_file_name of this GdataContentTypeInfo.
        :rtype: str
        """
        return self._from_file_name

    @from_file_name.setter
    def from_file_name(self, from_file_name):
        """Sets the from_file_name of this GdataContentTypeInfo.

        gdata

        :param from_file_name: The from_file_name of this GdataContentTypeInfo.
        :type from_file_name: str
        """

        self._from_file_name = from_file_name

    @property
    def from_header(self):
        """Gets the from_header of this GdataContentTypeInfo.

        gdata

        :return: The from_header of this GdataContentTypeInfo.
        :rtype: str
        """
        return self._from_header

    @from_header.setter
    def from_header(self, from_header):
        """Sets the from_header of this GdataContentTypeInfo.

        gdata

        :param from_header: The from_header of this GdataContentTypeInfo.
        :type from_header: str
        """

        self._from_header = from_header

    @property
    def from_url_path(self):
        """Gets the from_url_path of this GdataContentTypeInfo.

        gdata

        :return: The from_url_path of this GdataContentTypeInfo.
        :rtype: str
        """
        return self._from_url_path

    @from_url_path.setter
    def from_url_path(self, from_url_path):
        """Sets the from_url_path of this GdataContentTypeInfo.

        gdata

        :param from_url_path: The from_url_path of this GdataContentTypeInfo.
        :type from_url_path: str
        """

        self._from_url_path = from_url_path
