openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Schedules reporting jobs containing your YouTube Analytics data and
    downloads the resulting bulk data reports in the form of CSV files.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: YouTube Reporting API
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - converter:
      url: https://github.com/mermade/oas-kit
      version: 7.0.4
    format: google
    url: https://youtubereporting.googleapis.com/$discovery/rest?version=v1
    version: v1
  x-providerName: googleapis.com
  x-serviceName: youtubereporting
externalDocs:
  url: https://developers.google.com/youtube/reporting/v1/reports/
servers:
- url: https://youtubereporting.googleapis.com/
tags:
- name: jobs
- name: media
- name: reportTypes
paths:
  /v1/jobs:
    get:
      description: Lists jobs.
      operationId: youtubereporting.jobs.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "If set to true, also system-managed jobs will be returned; otherwise\
          \ only user-created jobs will be returned. System-managed jobs can neither\
          \ be modified nor deleted."
        explode: true
        in: query
        name: includeSystemManaged
        required: false
        schema:
          type: boolean
        style: form
      - description: "The content owner's external ID on which behalf the user is\
          \ acting on. If not set, the user is acting for himself (his own channel)."
        explode: true
        in: query
        name: onBehalfOfContentOwner
        required: false
        schema:
          type: string
        style: form
      - description: "Requested page size. Server may return fewer jobs than requested.\
          \ If unspecified, server will pick an appropriate default."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "A token identifying a page of results the server should return.\
          \ Typically, this is the value of ListReportTypesResponse.next_page_token\
          \ returned in response to the previous call to the `ListJobs` method."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/yt-analytics.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/yt-analytics.readonly
      tags:
      - jobs
      x-accepts:
      - application/json
    post:
      description: Creates a job and returns it.
      operationId: youtubereporting.jobs.create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "The content owner's external ID on which behalf the user is\
          \ acting on. If not set, the user is acting for himself (his own channel)."
        explode: true
        in: query
        name: onBehalfOfContentOwner
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/yt-analytics.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/yt-analytics.readonly
      tags:
      - jobs
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/jobs/{jobId}:
    delete:
      description: Deletes a job.
      operationId: youtubereporting.jobs.delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the job to delete.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: "The content owner's external ID on which behalf the user is\
          \ acting on. If not set, the user is acting for himself (his own channel)."
        explode: true
        in: query
        name: onBehalfOfContentOwner
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/yt-analytics.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/yt-analytics.readonly
      tags:
      - jobs
      x-accepts:
      - application/json
    get:
      description: Gets a job.
      operationId: youtubereporting.jobs.get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the job to retrieve.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: "The content owner's external ID on which behalf the user is\
          \ acting on. If not set, the user is acting for himself (his own channel)."
        explode: true
        in: query
        name: onBehalfOfContentOwner
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/yt-analytics.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/yt-analytics.readonly
      tags:
      - jobs
      x-accepts:
      - application/json
  /v1/jobs/{jobId}/reports:
    get:
      description: Lists reports created by a specific job. Returns NOT_FOUND if the
        job does not exist.
      operationId: youtubereporting.jobs.reports.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: "If set, only reports created after the specified date/time are\
          \ returned."
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          type: string
        style: form
      - description: "The content owner's external ID on which behalf the user is\
          \ acting on. If not set, the user is acting for himself (his own channel)."
        explode: true
        in: query
        name: onBehalfOfContentOwner
        required: false
        schema:
          type: string
        style: form
      - description: "Requested page size. Server may return fewer report types than\
          \ requested. If unspecified, server will pick an appropriate default."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "A token identifying a page of results the server should return.\
          \ Typically, this is the value of ListReportsResponse.next_page_token returned\
          \ in response to the previous call to the `ListReports` method."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: "If set, only reports whose start time is greater than or equal\
          \ the specified date/time are returned."
        explode: true
        in: query
        name: startTimeAtOrAfter
        required: false
        schema:
          type: string
        style: form
      - description: "If set, only reports whose start time is smaller than the specified\
          \ date/time are returned."
        explode: true
        in: query
        name: startTimeBefore
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReportsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/yt-analytics.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/yt-analytics.readonly
      tags:
      - jobs
      x-accepts:
      - application/json
  /v1/jobs/{jobId}/reports/{reportId}:
    get:
      description: Gets the metadata of a specific report.
      operationId: youtubereporting.jobs.reports.get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the report to retrieve.
        explode: false
        in: path
        name: reportId
        required: true
        schema:
          type: string
        style: simple
      - description: "The content owner's external ID on which behalf the user is\
          \ acting on. If not set, the user is acting for himself (his own channel)."
        explode: true
        in: query
        name: onBehalfOfContentOwner
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/yt-analytics.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/yt-analytics.readonly
      tags:
      - jobs
      x-accepts:
      - application/json
  /v1/media/{resourceName}:
    get:
      description: "Method for media download. Download is supported on the URI `/v1/media/{+name}?alt=media`."
      operationId: youtubereporting.media.download
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Name of the media that is being downloaded.
        explode: false
        in: path
        name: resourceName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GdataMedia'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/yt-analytics.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/yt-analytics.readonly
      tags:
      - media
      x-accepts:
      - application/json
  /v1/reportTypes:
    get:
      description: Lists report types.
      operationId: youtubereporting.reportTypes.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "If set to true, also system-managed report types will be returned;\
          \ otherwise only the report types that can be used to create new reporting\
          \ jobs will be returned."
        explode: true
        in: query
        name: includeSystemManaged
        required: false
        schema:
          type: boolean
        style: form
      - description: "The content owner's external ID on which behalf the user is\
          \ acting on. If not set, the user is acting for himself (his own channel)."
        explode: true
        in: query
        name: onBehalfOfContentOwner
        required: false
        schema:
          type: string
        style: form
      - description: "Requested page size. Server may return fewer report types than\
          \ requested. If unspecified, server will pick an appropriate default."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "A token identifying a page of results the server should return.\
          \ Typically, this is the value of ListReportTypesResponse.next_page_token\
          \ returned in response to the previous call to the `ListReportTypes` method."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReportTypesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/yt-analytics.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/yt-analytics.readonly
      tags:
      - reportTypes
      x-accepts:
      - application/json
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    Empty:
      description: "A generic empty message that you can re-use to avoid defining\
        \ duplicated empty messages in your APIs. A typical example is to use it as\
        \ the request or the response type of an API method. For instance: service\
        \ Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    GdataBlobstore2Info:
      description: gdata
      example:
        readToken: readToken
        blobId: blobId
        downloadReadHandle: downloadReadHandle
        uploadMetadataContainer: uploadMetadataContainer
        blobGeneration: blobGeneration
      properties:
        blobGeneration:
          description: gdata
          format: int64
          type: string
        blobId:
          description: gdata
          type: string
        downloadReadHandle:
          description: gdata
          format: byte
          type: string
        readToken:
          description: gdata
          type: string
        uploadMetadataContainer:
          description: gdata
          format: byte
          type: string
      type: object
    GdataCompositeMedia:
      description: gdata
      example:
        path: path
        cosmoBinaryReference: cosmoBinaryReference
        inline: inline
        md5Hash: md5Hash
        crc32cHash: 0
        length: length
        referenceType: PATH
        sha1Hash: sha1Hash
        blobstore2Info:
          readToken: readToken
          blobId: blobId
          downloadReadHandle: downloadReadHandle
          uploadMetadataContainer: uploadMetadataContainer
          blobGeneration: blobGeneration
        blobRef: blobRef
        objectId:
          generation: generation
          bucketName: bucketName
          objectName: objectName
      properties:
        blobRef:
          deprecated: true
          description: gdata
          format: byte
          type: string
        blobstore2Info:
          $ref: '#/components/schemas/GdataBlobstore2Info'
        cosmoBinaryReference:
          description: gdata
          format: byte
          type: string
        crc32cHash:
          description: gdata
          format: uint32
          type: integer
        inline:
          description: gdata
          format: byte
          type: string
        length:
          description: gdata
          format: int64
          type: string
        md5Hash:
          description: gdata
          format: byte
          type: string
        objectId:
          $ref: '#/components/schemas/GdataObjectId'
        path:
          description: gdata
          type: string
        referenceType:
          description: gdata
          enum:
          - PATH
          - BLOB_REF
          - INLINE
          - BIGSTORE_REF
          - COSMO_BINARY_REFERENCE
          type: string
        sha1Hash:
          description: gdata
          format: byte
          type: string
      type: object
    GdataContentTypeInfo:
      description: gdata
      example:
        bestGuess: bestGuess
        fromHeader: fromHeader
        fromBytes: fromBytes
        fromFileName: fromFileName
        fromUrlPath: fromUrlPath
      properties:
        bestGuess:
          description: gdata
          type: string
        fromBytes:
          description: gdata
          type: string
        fromFileName:
          description: gdata
          type: string
        fromHeader:
          description: gdata
          type: string
        fromUrlPath:
          description: gdata
          type: string
      type: object
    GdataDiffChecksumsResponse:
      description: gdata
      example:
        objectVersion: objectVersion
        chunkSizeBytes: chunkSizeBytes
        checksumsLocation:
          path: path
          cosmoBinaryReference: cosmoBinaryReference
          inline: inline
          md5Hash: md5Hash
          crc32cHash: 0
          length: length
          referenceType: PATH
          sha1Hash: sha1Hash
          blobstore2Info:
            readToken: readToken
            blobId: blobId
            downloadReadHandle: downloadReadHandle
            uploadMetadataContainer: uploadMetadataContainer
            blobGeneration: blobGeneration
          blobRef: blobRef
          objectId:
            generation: generation
            bucketName: bucketName
            objectName: objectName
        objectLocation:
          path: path
          cosmoBinaryReference: cosmoBinaryReference
          inline: inline
          md5Hash: md5Hash
          crc32cHash: 0
          length: length
          referenceType: PATH
          sha1Hash: sha1Hash
          blobstore2Info:
            readToken: readToken
            blobId: blobId
            downloadReadHandle: downloadReadHandle
            uploadMetadataContainer: uploadMetadataContainer
            blobGeneration: blobGeneration
          blobRef: blobRef
          objectId:
            generation: generation
            bucketName: bucketName
            objectName: objectName
        objectSizeBytes: objectSizeBytes
      properties:
        checksumsLocation:
          $ref: '#/components/schemas/GdataCompositeMedia'
        chunkSizeBytes:
          description: gdata
          format: int64
          type: string
        objectLocation:
          $ref: '#/components/schemas/GdataCompositeMedia'
        objectSizeBytes:
          description: gdata
          format: int64
          type: string
        objectVersion:
          description: gdata
          type: string
      type: object
    GdataDiffDownloadResponse:
      description: gdata
      example:
        objectLocation:
          path: path
          cosmoBinaryReference: cosmoBinaryReference
          inline: inline
          md5Hash: md5Hash
          crc32cHash: 0
          length: length
          referenceType: PATH
          sha1Hash: sha1Hash
          blobstore2Info:
            readToken: readToken
            blobId: blobId
            downloadReadHandle: downloadReadHandle
            uploadMetadataContainer: uploadMetadataContainer
            blobGeneration: blobGeneration
          blobRef: blobRef
          objectId:
            generation: generation
            bucketName: bucketName
            objectName: objectName
      properties:
        objectLocation:
          $ref: '#/components/schemas/GdataCompositeMedia'
      type: object
    GdataDiffUploadRequest:
      description: gdata
      example:
        objectVersion: objectVersion
        checksumsInfo:
          path: path
          cosmoBinaryReference: cosmoBinaryReference
          inline: inline
          md5Hash: md5Hash
          crc32cHash: 0
          length: length
          referenceType: PATH
          sha1Hash: sha1Hash
          blobstore2Info:
            readToken: readToken
            blobId: blobId
            downloadReadHandle: downloadReadHandle
            uploadMetadataContainer: uploadMetadataContainer
            blobGeneration: blobGeneration
          blobRef: blobRef
          objectId:
            generation: generation
            bucketName: bucketName
            objectName: objectName
        objectInfo:
          path: path
          cosmoBinaryReference: cosmoBinaryReference
          inline: inline
          md5Hash: md5Hash
          crc32cHash: 0
          length: length
          referenceType: PATH
          sha1Hash: sha1Hash
          blobstore2Info:
            readToken: readToken
            blobId: blobId
            downloadReadHandle: downloadReadHandle
            uploadMetadataContainer: uploadMetadataContainer
            blobGeneration: blobGeneration
          blobRef: blobRef
          objectId:
            generation: generation
            bucketName: bucketName
            objectName: objectName
      properties:
        checksumsInfo:
          $ref: '#/components/schemas/GdataCompositeMedia'
        objectInfo:
          $ref: '#/components/schemas/GdataCompositeMedia'
        objectVersion:
          description: gdata
          type: string
      type: object
    GdataDiffUploadResponse:
      description: gdata
      example:
        objectVersion: objectVersion
        originalObject:
          path: path
          cosmoBinaryReference: cosmoBinaryReference
          inline: inline
          md5Hash: md5Hash
          crc32cHash: 0
          length: length
          referenceType: PATH
          sha1Hash: sha1Hash
          blobstore2Info:
            readToken: readToken
            blobId: blobId
            downloadReadHandle: downloadReadHandle
            uploadMetadataContainer: uploadMetadataContainer
            blobGeneration: blobGeneration
          blobRef: blobRef
          objectId:
            generation: generation
            bucketName: bucketName
            objectName: objectName
      properties:
        objectVersion:
          description: gdata
          type: string
        originalObject:
          $ref: '#/components/schemas/GdataCompositeMedia'
      type: object
    GdataDiffVersionResponse:
      description: gdata
      example:
        objectVersion: objectVersion
        objectSizeBytes: objectSizeBytes
      properties:
        objectSizeBytes:
          description: gdata
          format: int64
          type: string
        objectVersion:
          description: gdata
          type: string
      type: object
    GdataDownloadParameters:
      description: gdata
      example:
        allowGzipCompression: true
        ignoreRange: true
      properties:
        allowGzipCompression:
          description: gdata
          type: boolean
        ignoreRange:
          description: gdata
          type: boolean
      type: object
    GdataMedia:
      description: gdata
      example:
        contentTypeInfo:
          bestGuess: bestGuess
          fromHeader: fromHeader
          fromBytes: fromBytes
          fromFileName: fromFileName
          fromUrlPath: fromUrlPath
        crc32cHash: 6
        referenceType: PATH
        mediaId: mediaId
        compositeMedia:
        - path: path
          cosmoBinaryReference: cosmoBinaryReference
          inline: inline
          md5Hash: md5Hash
          crc32cHash: 0
          length: length
          referenceType: PATH
          sha1Hash: sha1Hash
          blobstore2Info:
            readToken: readToken
            blobId: blobId
            downloadReadHandle: downloadReadHandle
            uploadMetadataContainer: uploadMetadataContainer
            blobGeneration: blobGeneration
          blobRef: blobRef
          objectId:
            generation: generation
            bucketName: bucketName
            objectName: objectName
        - path: path
          cosmoBinaryReference: cosmoBinaryReference
          inline: inline
          md5Hash: md5Hash
          crc32cHash: 0
          length: length
          referenceType: PATH
          sha1Hash: sha1Hash
          blobstore2Info:
            readToken: readToken
            blobId: blobId
            downloadReadHandle: downloadReadHandle
            uploadMetadataContainer: uploadMetadataContainer
            blobGeneration: blobGeneration
          blobRef: blobRef
          objectId:
            generation: generation
            bucketName: bucketName
            objectName: objectName
        blobRef: blobRef
        bigstoreObjectRef: bigstoreObjectRef
        isPotentialRetry: true
        path: path
        md5Hash: md5Hash
        contentType: contentType
        objectId:
          generation: generation
          bucketName: bucketName
          objectName: objectName
        algorithm: algorithm
        diffVersionResponse:
          objectVersion: objectVersion
          objectSizeBytes: objectSizeBytes
        timestamp: timestamp
        diffUploadResponse:
          objectVersion: objectVersion
          originalObject:
            path: path
            cosmoBinaryReference: cosmoBinaryReference
            inline: inline
            md5Hash: md5Hash
            crc32cHash: 0
            length: length
            referenceType: PATH
            sha1Hash: sha1Hash
            blobstore2Info:
              readToken: readToken
              blobId: blobId
              downloadReadHandle: downloadReadHandle
              uploadMetadataContainer: uploadMetadataContainer
              blobGeneration: blobGeneration
            blobRef: blobRef
            objectId:
              generation: generation
              bucketName: bucketName
              objectName: objectName
        diffDownloadResponse:
          objectLocation:
            path: path
            cosmoBinaryReference: cosmoBinaryReference
            inline: inline
            md5Hash: md5Hash
            crc32cHash: 0
            length: length
            referenceType: PATH
            sha1Hash: sha1Hash
            blobstore2Info:
              readToken: readToken
              blobId: blobId
              downloadReadHandle: downloadReadHandle
              uploadMetadataContainer: uploadMetadataContainer
              blobGeneration: blobGeneration
            blobRef: blobRef
            objectId:
              generation: generation
              bucketName: bucketName
              objectName: objectName
        length: length
        hashVerified: true
        token: token
        diffChecksumsResponse:
          objectVersion: objectVersion
          chunkSizeBytes: chunkSizeBytes
          checksumsLocation:
            path: path
            cosmoBinaryReference: cosmoBinaryReference
            inline: inline
            md5Hash: md5Hash
            crc32cHash: 0
            length: length
            referenceType: PATH
            sha1Hash: sha1Hash
            blobstore2Info:
              readToken: readToken
              blobId: blobId
              downloadReadHandle: downloadReadHandle
              uploadMetadataContainer: uploadMetadataContainer
              blobGeneration: blobGeneration
            blobRef: blobRef
            objectId:
              generation: generation
              bucketName: bucketName
              objectName: objectName
          objectLocation:
            path: path
            cosmoBinaryReference: cosmoBinaryReference
            inline: inline
            md5Hash: md5Hash
            crc32cHash: 0
            length: length
            referenceType: PATH
            sha1Hash: sha1Hash
            blobstore2Info:
              readToken: readToken
              blobId: blobId
              downloadReadHandle: downloadReadHandle
              uploadMetadataContainer: uploadMetadataContainer
              blobGeneration: blobGeneration
            blobRef: blobRef
            objectId:
              generation: generation
              bucketName: bucketName
              objectName: objectName
          objectSizeBytes: objectSizeBytes
        cosmoBinaryReference: cosmoBinaryReference
        filename: filename
        inline: inline
        sha256Hash: sha256Hash
        diffUploadRequest:
          objectVersion: objectVersion
          checksumsInfo:
            path: path
            cosmoBinaryReference: cosmoBinaryReference
            inline: inline
            md5Hash: md5Hash
            crc32cHash: 0
            length: length
            referenceType: PATH
            sha1Hash: sha1Hash
            blobstore2Info:
              readToken: readToken
              blobId: blobId
              downloadReadHandle: downloadReadHandle
              uploadMetadataContainer: uploadMetadataContainer
              blobGeneration: blobGeneration
            blobRef: blobRef
            objectId:
              generation: generation
              bucketName: bucketName
              objectName: objectName
          objectInfo:
            path: path
            cosmoBinaryReference: cosmoBinaryReference
            inline: inline
            md5Hash: md5Hash
            crc32cHash: 0
            length: length
            referenceType: PATH
            sha1Hash: sha1Hash
            blobstore2Info:
              readToken: readToken
              blobId: blobId
              downloadReadHandle: downloadReadHandle
              uploadMetadataContainer: uploadMetadataContainer
              blobGeneration: blobGeneration
            blobRef: blobRef
            objectId:
              generation: generation
              bucketName: bucketName
              objectName: objectName
        sha1Hash: sha1Hash
        blobstore2Info:
          readToken: readToken
          blobId: blobId
          downloadReadHandle: downloadReadHandle
          uploadMetadataContainer: uploadMetadataContainer
          blobGeneration: blobGeneration
        downloadParameters:
          allowGzipCompression: true
          ignoreRange: true
        hash: hash
      properties:
        algorithm:
          deprecated: true
          description: gdata
          type: string
        bigstoreObjectRef:
          deprecated: true
          description: gdata
          format: byte
          type: string
        blobRef:
          deprecated: true
          description: gdata
          format: byte
          type: string
        blobstore2Info:
          $ref: '#/components/schemas/GdataBlobstore2Info'
        compositeMedia:
          description: gdata
          items:
            $ref: '#/components/schemas/GdataCompositeMedia'
          type: array
        contentType:
          description: gdata
          type: string
        contentTypeInfo:
          $ref: '#/components/schemas/GdataContentTypeInfo'
        cosmoBinaryReference:
          description: gdata
          format: byte
          type: string
        crc32cHash:
          description: gdata
          format: uint32
          type: integer
        diffChecksumsResponse:
          $ref: '#/components/schemas/GdataDiffChecksumsResponse'
        diffDownloadResponse:
          $ref: '#/components/schemas/GdataDiffDownloadResponse'
        diffUploadRequest:
          $ref: '#/components/schemas/GdataDiffUploadRequest'
        diffUploadResponse:
          $ref: '#/components/schemas/GdataDiffUploadResponse'
        diffVersionResponse:
          $ref: '#/components/schemas/GdataDiffVersionResponse'
        downloadParameters:
          $ref: '#/components/schemas/GdataDownloadParameters'
        filename:
          description: gdata
          type: string
        hash:
          deprecated: true
          description: gdata
          type: string
        hashVerified:
          description: gdata
          type: boolean
        inline:
          description: gdata
          format: byte
          type: string
        isPotentialRetry:
          description: gdata
          type: boolean
        length:
          description: gdata
          format: int64
          type: string
        md5Hash:
          description: gdata
          format: byte
          type: string
        mediaId:
          description: gdata
          format: byte
          type: string
        objectId:
          $ref: '#/components/schemas/GdataObjectId'
        path:
          description: gdata
          type: string
        referenceType:
          description: gdata
          enum:
          - PATH
          - BLOB_REF
          - INLINE
          - GET_MEDIA
          - COMPOSITE_MEDIA
          - BIGSTORE_REF
          - DIFF_VERSION_RESPONSE
          - DIFF_CHECKSUMS_RESPONSE
          - DIFF_DOWNLOAD_RESPONSE
          - DIFF_UPLOAD_REQUEST
          - DIFF_UPLOAD_RESPONSE
          - COSMO_BINARY_REFERENCE
          - ARBITRARY_BYTES
          type: string
        sha1Hash:
          description: gdata
          format: byte
          type: string
        sha256Hash:
          description: gdata
          format: byte
          type: string
        timestamp:
          description: gdata
          format: uint64
          type: string
        token:
          description: gdata
          type: string
      type: object
    GdataObjectId:
      description: gdata
      example:
        generation: generation
        bucketName: bucketName
        objectName: objectName
      properties:
        bucketName:
          description: gdata
          type: string
        generation:
          description: gdata
          format: int64
          type: string
        objectName:
          description: gdata
          type: string
      type: object
    Job:
      description: A job creating reports of a specific type.
      example:
        expireTime: expireTime
        createTime: createTime
        name: name
        reportTypeId: reportTypeId
        systemManaged: true
        id: id
      properties:
        createTime:
          description: The creation date/time of the job.
          format: google-datetime
          type: string
        expireTime:
          description: "The date/time when this job will expire/expired. After a job\
            \ expired, no new reports are generated."
          format: google-datetime
          type: string
        id:
          description: The server-generated ID of the job (max. 40 characters).
          type: string
        name:
          description: The name of the job (max. 100 characters).
          type: string
        reportTypeId:
          description: The type of reports this job creates. Corresponds to the ID
            of a ReportType.
          type: string
        systemManaged:
          description: True if this a system-managed job that cannot be modified by
            the user; otherwise false.
          type: boolean
      type: object
    ListJobsResponse:
      description: Response message for ReportingService.ListJobs.
      example:
        nextPageToken: nextPageToken
        jobs:
        - expireTime: expireTime
          createTime: createTime
          name: name
          reportTypeId: reportTypeId
          systemManaged: true
          id: id
        - expireTime: expireTime
          createTime: createTime
          name: name
          reportTypeId: reportTypeId
          systemManaged: true
          id: id
      properties:
        jobs:
          description: The list of jobs.
          items:
            $ref: '#/components/schemas/Job'
          type: array
        nextPageToken:
          description: A token to retrieve next page of results. Pass this value in
            the ListJobsRequest.page_token field in the subsequent call to `ListJobs`
            method to retrieve the next page of results.
          type: string
      type: object
    ListReportTypesResponse:
      description: Response message for ReportingService.ListReportTypes.
      example:
        reportTypes:
        - name: name
          systemManaged: true
          id: id
          deprecateTime: deprecateTime
        - name: name
          systemManaged: true
          id: id
          deprecateTime: deprecateTime
        nextPageToken: nextPageToken
      properties:
        nextPageToken:
          description: A token to retrieve next page of results. Pass this value in
            the ListReportTypesRequest.page_token field in the subsequent call to
            `ListReportTypes` method to retrieve the next page of results.
          type: string
        reportTypes:
          description: The list of report types.
          items:
            $ref: '#/components/schemas/ReportType'
          type: array
      type: object
    ListReportsResponse:
      description: Response message for ReportingService.ListReports.
      example:
        reports:
        - jobId: jobId
          createTime: createTime
          downloadUrl: downloadUrl
          startTime: startTime
          endTime: endTime
          id: id
          jobExpireTime: jobExpireTime
        - jobId: jobId
          createTime: createTime
          downloadUrl: downloadUrl
          startTime: startTime
          endTime: endTime
          id: id
          jobExpireTime: jobExpireTime
        nextPageToken: nextPageToken
      properties:
        nextPageToken:
          description: A token to retrieve next page of results. Pass this value in
            the ListReportsRequest.page_token field in the subsequent call to `ListReports`
            method to retrieve the next page of results.
          type: string
        reports:
          description: The list of report types.
          items:
            $ref: '#/components/schemas/Report'
          type: array
      type: object
    Report:
      description: A report's metadata including the URL from which the report itself
        can be downloaded.
      example:
        jobId: jobId
        createTime: createTime
        downloadUrl: downloadUrl
        startTime: startTime
        endTime: endTime
        id: id
        jobExpireTime: jobExpireTime
      properties:
        createTime:
          description: The date/time when this report was created.
          format: google-datetime
          type: string
        downloadUrl:
          description: The URL from which the report can be downloaded (max. 1000
            characters).
          type: string
        endTime:
          description: The end of the time period that the report instance covers.
            The value is exclusive.
          format: google-datetime
          type: string
        id:
          description: The server-generated ID of the report.
          type: string
        jobExpireTime:
          description: The date/time when the job this report belongs to will expire/expired.
          format: google-datetime
          type: string
        jobId:
          description: The ID of the job that created this report.
          type: string
        startTime:
          description: The start of the time period that the report instance covers.
            The value is inclusive.
          format: google-datetime
          type: string
      type: object
    ReportType:
      description: A report type.
      example:
        name: name
        systemManaged: true
        id: id
        deprecateTime: deprecateTime
      properties:
        deprecateTime:
          description: The date/time when this report type was/will be deprecated.
          format: google-datetime
          type: string
        id:
          description: The ID of the report type (max. 100 characters).
          type: string
        name:
          description: The name of the report type (max. 100 characters).
          type: string
        systemManaged:
          description: True if this a system-managed report type; otherwise false.
            Reporting jobs for system-managed report types are created automatically
            and can thus not be used in the `CreateJob` method.
          type: boolean
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/yt-analytics-monetary.readonly: View monetary
              and non-monetary YouTube Analytics reports for your YouTube content
            https://www.googleapis.com/auth/yt-analytics.readonly: View YouTube Analytics
              reports for your YouTube content
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/yt-analytics-monetary.readonly: View monetary
              and non-monetary YouTube Analytics reports for your YouTube content
            https://www.googleapis.com/auth/yt-analytics.readonly: View YouTube Analytics
              reports for your YouTube content
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2

