/**
 * YouTube Reporting API
 * Schedules reporting jobs containing your YouTube Analytics data and downloads the resulting bulk data reports in the form of CSV files.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListReportTypesResponse.h
 *
 * Response message for ReportingService.ListReportTypes.
 */

#ifndef OAIListReportTypesResponse_H
#define OAIListReportTypesResponse_H

#include <QJsonObject>

#include "OAIReportType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReportType;

class OAIListReportTypesResponse : public OAIObject {
public:
    OAIListReportTypesResponse();
    OAIListReportTypesResponse(QString json);
    ~OAIListReportTypesResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    QList<OAIReportType> getReportTypes() const;
    void setReportTypes(const QList<OAIReportType> &report_types);
    bool is_report_types_Set() const;
    bool is_report_types_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;

    QList<OAIReportType> m_report_types;
    bool m_report_types_isSet;
    bool m_report_types_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListReportTypesResponse)

#endif // OAIListReportTypesResponse_H
