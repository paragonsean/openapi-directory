/**
 * YouTube Reporting API
 * Schedules reporting jobs containing your YouTube Analytics data and downloads the resulting bulk data reports in the form of CSV files.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Job model module.
 * @module model/Job
 * @version v1
 */
class Job {
    /**
     * Constructs a new <code>Job</code>.
     * A job creating reports of a specific type.
     * @alias module:model/Job
     */
    constructor() { 
        
        Job.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Job</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Job} obj Optional instance to populate.
     * @return {module:model/Job} The populated <code>Job</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Job();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('expireTime')) {
                obj['expireTime'] = ApiClient.convertToType(data['expireTime'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('reportTypeId')) {
                obj['reportTypeId'] = ApiClient.convertToType(data['reportTypeId'], 'String');
            }
            if (data.hasOwnProperty('systemManaged')) {
                obj['systemManaged'] = ApiClient.convertToType(data['systemManaged'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Job</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Job</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['expireTime'] && !(typeof data['expireTime'] === 'string' || data['expireTime'] instanceof String)) {
            throw new Error("Expected the field `expireTime` to be a primitive type in the JSON string but got " + data['expireTime']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['reportTypeId'] && !(typeof data['reportTypeId'] === 'string' || data['reportTypeId'] instanceof String)) {
            throw new Error("Expected the field `reportTypeId` to be a primitive type in the JSON string but got " + data['reportTypeId']);
        }

        return true;
    }


}



/**
 * The creation date/time of the job.
 * @member {String} createTime
 */
Job.prototype['createTime'] = undefined;

/**
 * The date/time when this job will expire/expired. After a job expired, no new reports are generated.
 * @member {String} expireTime
 */
Job.prototype['expireTime'] = undefined;

/**
 * The server-generated ID of the job (max. 40 characters).
 * @member {String} id
 */
Job.prototype['id'] = undefined;

/**
 * The name of the job (max. 100 characters).
 * @member {String} name
 */
Job.prototype['name'] = undefined;

/**
 * The type of reports this job creates. Corresponds to the ID of a ReportType.
 * @member {String} reportTypeId
 */
Job.prototype['reportTypeId'] = undefined;

/**
 * True if this a system-managed job that cannot be modified by the user; otherwise false.
 * @member {Boolean} systemManaged
 */
Job.prototype['systemManaged'] = undefined;






export default Job;

