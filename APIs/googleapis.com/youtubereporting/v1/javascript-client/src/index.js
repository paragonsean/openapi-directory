/**
 * YouTube Reporting API
 * Schedules reporting jobs containing your YouTube Analytics data and downloads the resulting bulk data reports in the form of CSV files.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import GdataBlobstore2Info from './model/GdataBlobstore2Info';
import GdataCompositeMedia from './model/GdataCompositeMedia';
import GdataContentTypeInfo from './model/GdataContentTypeInfo';
import GdataDiffChecksumsResponse from './model/GdataDiffChecksumsResponse';
import GdataDiffDownloadResponse from './model/GdataDiffDownloadResponse';
import GdataDiffUploadRequest from './model/GdataDiffUploadRequest';
import GdataDiffUploadResponse from './model/GdataDiffUploadResponse';
import GdataDiffVersionResponse from './model/GdataDiffVersionResponse';
import GdataDownloadParameters from './model/GdataDownloadParameters';
import GdataMedia from './model/GdataMedia';
import GdataObjectId from './model/GdataObjectId';
import Job from './model/Job';
import ListJobsResponse from './model/ListJobsResponse';
import ListReportTypesResponse from './model/ListReportTypesResponse';
import ListReportsResponse from './model/ListReportsResponse';
import Report from './model/Report';
import ReportType from './model/ReportType';
import JobsApi from './api/JobsApi';
import MediaApi from './api/MediaApi';
import ReportTypesApi from './api/ReportTypesApi';


/**
* Schedules reporting jobs containing your YouTube Analytics data and downloads the resulting bulk data reports in the form of CSV files..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var YouTubeReportingApi = require('index'); // See note below*.
* var xxxSvc = new YouTubeReportingApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new YouTubeReportingApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new YouTubeReportingApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new YouTubeReportingApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The GdataBlobstore2Info model constructor.
     * @property {module:model/GdataBlobstore2Info}
     */
    GdataBlobstore2Info,

    /**
     * The GdataCompositeMedia model constructor.
     * @property {module:model/GdataCompositeMedia}
     */
    GdataCompositeMedia,

    /**
     * The GdataContentTypeInfo model constructor.
     * @property {module:model/GdataContentTypeInfo}
     */
    GdataContentTypeInfo,

    /**
     * The GdataDiffChecksumsResponse model constructor.
     * @property {module:model/GdataDiffChecksumsResponse}
     */
    GdataDiffChecksumsResponse,

    /**
     * The GdataDiffDownloadResponse model constructor.
     * @property {module:model/GdataDiffDownloadResponse}
     */
    GdataDiffDownloadResponse,

    /**
     * The GdataDiffUploadRequest model constructor.
     * @property {module:model/GdataDiffUploadRequest}
     */
    GdataDiffUploadRequest,

    /**
     * The GdataDiffUploadResponse model constructor.
     * @property {module:model/GdataDiffUploadResponse}
     */
    GdataDiffUploadResponse,

    /**
     * The GdataDiffVersionResponse model constructor.
     * @property {module:model/GdataDiffVersionResponse}
     */
    GdataDiffVersionResponse,

    /**
     * The GdataDownloadParameters model constructor.
     * @property {module:model/GdataDownloadParameters}
     */
    GdataDownloadParameters,

    /**
     * The GdataMedia model constructor.
     * @property {module:model/GdataMedia}
     */
    GdataMedia,

    /**
     * The GdataObjectId model constructor.
     * @property {module:model/GdataObjectId}
     */
    GdataObjectId,

    /**
     * The Job model constructor.
     * @property {module:model/Job}
     */
    Job,

    /**
     * The ListJobsResponse model constructor.
     * @property {module:model/ListJobsResponse}
     */
    ListJobsResponse,

    /**
     * The ListReportTypesResponse model constructor.
     * @property {module:model/ListReportTypesResponse}
     */
    ListReportTypesResponse,

    /**
     * The ListReportsResponse model constructor.
     * @property {module:model/ListReportsResponse}
     */
    ListReportsResponse,

    /**
     * The Report model constructor.
     * @property {module:model/Report}
     */
    Report,

    /**
     * The ReportType model constructor.
     * @property {module:model/ReportType}
     */
    ReportType,

    /**
    * The JobsApi service constructor.
    * @property {module:api/JobsApi}
    */
    JobsApi,

    /**
    * The MediaApi service constructor.
    * @property {module:api/MediaApi}
    */
    MediaApi,

    /**
    * The ReportTypesApi service constructor.
    * @property {module:api/ReportTypesApi}
    */
    ReportTypesApi
};
