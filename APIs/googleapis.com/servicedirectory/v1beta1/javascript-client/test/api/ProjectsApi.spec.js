/**
 * Service Directory API
 * Service Directory is a platform for discovering, publishing, and connecting services. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ServiceDirectoryApi);
  }
}(this, function(expect, ServiceDirectoryApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ServiceDirectoryApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('servicedirectoryProjectsLocationsList', function() {
      it('should call servicedirectoryProjectsLocationsList successfully', function(done) {
        //uncomment below and update the code to test servicedirectoryProjectsLocationsList
        //instance.servicedirectoryProjectsLocationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicedirectoryProjectsLocationsNamespacesCreate', function() {
      it('should call servicedirectoryProjectsLocationsNamespacesCreate successfully', function(done) {
        //uncomment below and update the code to test servicedirectoryProjectsLocationsNamespacesCreate
        //instance.servicedirectoryProjectsLocationsNamespacesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicedirectoryProjectsLocationsNamespacesList', function() {
      it('should call servicedirectoryProjectsLocationsNamespacesList successfully', function(done) {
        //uncomment below and update the code to test servicedirectoryProjectsLocationsNamespacesList
        //instance.servicedirectoryProjectsLocationsNamespacesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicedirectoryProjectsLocationsNamespacesServicesCreate', function() {
      it('should call servicedirectoryProjectsLocationsNamespacesServicesCreate successfully', function(done) {
        //uncomment below and update the code to test servicedirectoryProjectsLocationsNamespacesServicesCreate
        //instance.servicedirectoryProjectsLocationsNamespacesServicesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicedirectoryProjectsLocationsNamespacesServicesEndpointsCreate', function() {
      it('should call servicedirectoryProjectsLocationsNamespacesServicesEndpointsCreate successfully', function(done) {
        //uncomment below and update the code to test servicedirectoryProjectsLocationsNamespacesServicesEndpointsCreate
        //instance.servicedirectoryProjectsLocationsNamespacesServicesEndpointsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicedirectoryProjectsLocationsNamespacesServicesEndpointsDelete', function() {
      it('should call servicedirectoryProjectsLocationsNamespacesServicesEndpointsDelete successfully', function(done) {
        //uncomment below and update the code to test servicedirectoryProjectsLocationsNamespacesServicesEndpointsDelete
        //instance.servicedirectoryProjectsLocationsNamespacesServicesEndpointsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicedirectoryProjectsLocationsNamespacesServicesEndpointsGet', function() {
      it('should call servicedirectoryProjectsLocationsNamespacesServicesEndpointsGet successfully', function(done) {
        //uncomment below and update the code to test servicedirectoryProjectsLocationsNamespacesServicesEndpointsGet
        //instance.servicedirectoryProjectsLocationsNamespacesServicesEndpointsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicedirectoryProjectsLocationsNamespacesServicesEndpointsList', function() {
      it('should call servicedirectoryProjectsLocationsNamespacesServicesEndpointsList successfully', function(done) {
        //uncomment below and update the code to test servicedirectoryProjectsLocationsNamespacesServicesEndpointsList
        //instance.servicedirectoryProjectsLocationsNamespacesServicesEndpointsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicedirectoryProjectsLocationsNamespacesServicesEndpointsPatch', function() {
      it('should call servicedirectoryProjectsLocationsNamespacesServicesEndpointsPatch successfully', function(done) {
        //uncomment below and update the code to test servicedirectoryProjectsLocationsNamespacesServicesEndpointsPatch
        //instance.servicedirectoryProjectsLocationsNamespacesServicesEndpointsPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicedirectoryProjectsLocationsNamespacesServicesList', function() {
      it('should call servicedirectoryProjectsLocationsNamespacesServicesList successfully', function(done) {
        //uncomment below and update the code to test servicedirectoryProjectsLocationsNamespacesServicesList
        //instance.servicedirectoryProjectsLocationsNamespacesServicesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicedirectoryProjectsLocationsNamespacesServicesResolve', function() {
      it('should call servicedirectoryProjectsLocationsNamespacesServicesResolve successfully', function(done) {
        //uncomment below and update the code to test servicedirectoryProjectsLocationsNamespacesServicesResolve
        //instance.servicedirectoryProjectsLocationsNamespacesServicesResolve(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicedirectoryProjectsLocationsNamespacesWorkloadsGetIamPolicy', function() {
      it('should call servicedirectoryProjectsLocationsNamespacesWorkloadsGetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test servicedirectoryProjectsLocationsNamespacesWorkloadsGetIamPolicy
        //instance.servicedirectoryProjectsLocationsNamespacesWorkloadsGetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicedirectoryProjectsLocationsNamespacesWorkloadsSetIamPolicy', function() {
      it('should call servicedirectoryProjectsLocationsNamespacesWorkloadsSetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test servicedirectoryProjectsLocationsNamespacesWorkloadsSetIamPolicy
        //instance.servicedirectoryProjectsLocationsNamespacesWorkloadsSetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicedirectoryProjectsLocationsNamespacesWorkloadsTestIamPermissions', function() {
      it('should call servicedirectoryProjectsLocationsNamespacesWorkloadsTestIamPermissions successfully', function(done) {
        //uncomment below and update the code to test servicedirectoryProjectsLocationsNamespacesWorkloadsTestIamPermissions
        //instance.servicedirectoryProjectsLocationsNamespacesWorkloadsTestIamPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
