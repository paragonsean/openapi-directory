/**
 * Service Directory API
 * Service Directory is a platform for discovering, publishing, and connecting services. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResolveServiceRequest.h
 *
 * The request message for LookupService.ResolveService. Looks up a service by its name, returns the service and its endpoints.
 */

#ifndef OAIResolveServiceRequest_H
#define OAIResolveServiceRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResolveServiceRequest : public OAIObject {
public:
    OAIResolveServiceRequest();
    OAIResolveServiceRequest(QString json);
    ~OAIResolveServiceRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEndpointFilter() const;
    void setEndpointFilter(const QString &endpoint_filter);
    bool is_endpoint_filter_Set() const;
    bool is_endpoint_filter_Valid() const;

    qint32 getMaxEndpoints() const;
    void setMaxEndpoints(const qint32 &max_endpoints);
    bool is_max_endpoints_Set() const;
    bool is_max_endpoints_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_endpoint_filter;
    bool m_endpoint_filter_isSet;
    bool m_endpoint_filter_isValid;

    qint32 m_max_endpoints;
    bool m_max_endpoints_isSet;
    bool m_max_endpoints_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResolveServiceRequest)

#endif // OAIResolveServiceRequest_H
