# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetPolicyOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, requested_policy_version: int=None):
        """GetPolicyOptions - a model defined in OpenAPI

        :param requested_policy_version: The requested_policy_version of this GetPolicyOptions.
        """
        self.openapi_types = {
            'requested_policy_version': int
        }

        self.attribute_map = {
            'requested_policy_version': 'requestedPolicyVersion'
        }

        self._requested_policy_version = requested_policy_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetPolicyOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetPolicyOptions of this GetPolicyOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def requested_policy_version(self):
        """Gets the requested_policy_version of this GetPolicyOptions.

        Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).

        :return: The requested_policy_version of this GetPolicyOptions.
        :rtype: int
        """
        return self._requested_policy_version

    @requested_policy_version.setter
    def requested_policy_version(self, requested_policy_version):
        """Sets the requested_policy_version of this GetPolicyOptions.

        Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).

        :param requested_policy_version: The requested_policy_version of this GetPolicyOptions.
        :type requested_policy_version: int
        """

        self._requested_policy_version = requested_policy_version
