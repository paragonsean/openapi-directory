/*
 * Cloud Storage JSON API
 * Lets you store and retrieve potentially-large, immutable data objects.
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BucketCorsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:49:12.695403-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BucketCorsInner {
  public static final String SERIALIZED_NAME_MAX_AGE_SECONDS = "maxAgeSeconds";
  @SerializedName(SERIALIZED_NAME_MAX_AGE_SECONDS)
  private Integer maxAgeSeconds;

  public static final String SERIALIZED_NAME_METHOD = "method";
  @SerializedName(SERIALIZED_NAME_METHOD)
  private List<String> method = new ArrayList<>();

  public static final String SERIALIZED_NAME_ORIGIN = "origin";
  @SerializedName(SERIALIZED_NAME_ORIGIN)
  private List<String> origin = new ArrayList<>();

  public static final String SERIALIZED_NAME_RESPONSE_HEADER = "responseHeader";
  @SerializedName(SERIALIZED_NAME_RESPONSE_HEADER)
  private List<String> responseHeader = new ArrayList<>();

  public BucketCorsInner() {
  }

  public BucketCorsInner maxAgeSeconds(Integer maxAgeSeconds) {
    this.maxAgeSeconds = maxAgeSeconds;
    return this;
  }

  /**
   * The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.
   * @return maxAgeSeconds
   */
  @javax.annotation.Nullable
  public Integer getMaxAgeSeconds() {
    return maxAgeSeconds;
  }

  public void setMaxAgeSeconds(Integer maxAgeSeconds) {
    this.maxAgeSeconds = maxAgeSeconds;
  }


  public BucketCorsInner method(List<String> method) {
    this.method = method;
    return this;
  }

  public BucketCorsInner addMethodItem(String methodItem) {
    if (this.method == null) {
      this.method = new ArrayList<>();
    }
    this.method.add(methodItem);
    return this;
  }

  /**
   * The list of HTTP methods on which to include CORS response headers: GET, OPTIONS, POST, etc. Note, \&quot;*\&quot; is permitted in the list of methods, and means \&quot;any method\&quot;.
   * @return method
   */
  @javax.annotation.Nullable
  public List<String> getMethod() {
    return method;
  }

  public void setMethod(List<String> method) {
    this.method = method;
  }


  public BucketCorsInner origin(List<String> origin) {
    this.origin = origin;
    return this;
  }

  public BucketCorsInner addOriginItem(String originItem) {
    if (this.origin == null) {
      this.origin = new ArrayList<>();
    }
    this.origin.add(originItem);
    return this;
  }

  /**
   * The list of Origins eligible to receive CORS response headers. Note: \&quot;*\&quot; is permitted in the list of origins, and means \&quot;any Origin\&quot;.
   * @return origin
   */
  @javax.annotation.Nullable
  public List<String> getOrigin() {
    return origin;
  }

  public void setOrigin(List<String> origin) {
    this.origin = origin;
  }


  public BucketCorsInner responseHeader(List<String> responseHeader) {
    this.responseHeader = responseHeader;
    return this;
  }

  public BucketCorsInner addResponseHeaderItem(String responseHeaderItem) {
    if (this.responseHeader == null) {
      this.responseHeader = new ArrayList<>();
    }
    this.responseHeader.add(responseHeaderItem);
    return this;
  }

  /**
   * The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.
   * @return responseHeader
   */
  @javax.annotation.Nullable
  public List<String> getResponseHeader() {
    return responseHeader;
  }

  public void setResponseHeader(List<String> responseHeader) {
    this.responseHeader = responseHeader;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BucketCorsInner bucketCorsInner = (BucketCorsInner) o;
    return Objects.equals(this.maxAgeSeconds, bucketCorsInner.maxAgeSeconds) &&
        Objects.equals(this.method, bucketCorsInner.method) &&
        Objects.equals(this.origin, bucketCorsInner.origin) &&
        Objects.equals(this.responseHeader, bucketCorsInner.responseHeader);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxAgeSeconds, method, origin, responseHeader);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BucketCorsInner {\n");
    sb.append("    maxAgeSeconds: ").append(toIndentedString(maxAgeSeconds)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    responseHeader: ").append(toIndentedString(responseHeader)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("maxAgeSeconds");
    openapiFields.add("method");
    openapiFields.add("origin");
    openapiFields.add("responseHeader");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BucketCorsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BucketCorsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BucketCorsInner is not found in the empty JSON string", BucketCorsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BucketCorsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BucketCorsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("method") != null && !jsonObj.get("method").isJsonNull() && !jsonObj.get("method").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `method` to be an array in the JSON string but got `%s`", jsonObj.get("method").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("origin") != null && !jsonObj.get("origin").isJsonNull() && !jsonObj.get("origin").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `origin` to be an array in the JSON string but got `%s`", jsonObj.get("origin").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("responseHeader") != null && !jsonObj.get("responseHeader").isJsonNull() && !jsonObj.get("responseHeader").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `responseHeader` to be an array in the JSON string but got `%s`", jsonObj.get("responseHeader").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BucketCorsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BucketCorsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BucketCorsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BucketCorsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<BucketCorsInner>() {
           @Override
           public void write(JsonWriter out, BucketCorsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BucketCorsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BucketCorsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BucketCorsInner
   * @throws IOException if the JSON string is invalid with respect to BucketCorsInner
   */
  public static BucketCorsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BucketCorsInner.class);
  }

  /**
   * Convert an instance of BucketCorsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

