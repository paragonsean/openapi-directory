/*
 * Cloud Storage JSON API
 * Lets you store and retrieve potentially-large, immutable data objects.
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.Channel;
import org.openapitools.client.model.ComposeRequest;
import org.openapitools.client.model.ModelObject;
import java.util.Objects;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ObjectsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ObjectsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ObjectsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for storageObjectsCompose
     * @param destinationBucket Name of the bucket containing the source objects. The destination object is stored in this bucket. (required)
     * @param destinationObject Name of the new object. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param composeRequest  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsComposeCall(String destinationBucket, String destinationObject, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String ifGenerationMatch, String ifMetagenerationMatch, ComposeRequest composeRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = composeRequest;

        // create path and map variables
        String localVarPath = "/b/{destinationBucket}/o/{destinationObject}/compose"
            .replace("{" + "destinationBucket" + "}", localVarApiClient.escapeString(destinationBucket.toString()))
            .replace("{" + "destinationObject" + "}", localVarApiClient.escapeString(destinationObject.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (userIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userIp", userIp));
        }

        if (ifGenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationMatch", ifGenerationMatch));
        }

        if (ifMetagenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationMatch", ifMetagenerationMatch));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageObjectsComposeValidateBeforeCall(String destinationBucket, String destinationObject, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String ifGenerationMatch, String ifMetagenerationMatch, ComposeRequest composeRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'destinationBucket' is set
        if (destinationBucket == null) {
            throw new ApiException("Missing the required parameter 'destinationBucket' when calling storageObjectsCompose(Async)");
        }

        // verify the required parameter 'destinationObject' is set
        if (destinationObject == null) {
            throw new ApiException("Missing the required parameter 'destinationObject' when calling storageObjectsCompose(Async)");
        }

        return storageObjectsComposeCall(destinationBucket, destinationObject, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, ifGenerationMatch, ifMetagenerationMatch, composeRequest, _callback);

    }

    /**
     * 
     * Concatenates a list of existing objects into a new object in the same bucket.
     * @param destinationBucket Name of the bucket containing the source objects. The destination object is stored in this bucket. (required)
     * @param destinationObject Name of the new object. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param composeRequest  (optional)
     * @return ModelObject
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ModelObject storageObjectsCompose(String destinationBucket, String destinationObject, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String ifGenerationMatch, String ifMetagenerationMatch, ComposeRequest composeRequest) throws ApiException {
        ApiResponse<ModelObject> localVarResp = storageObjectsComposeWithHttpInfo(destinationBucket, destinationObject, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, ifGenerationMatch, ifMetagenerationMatch, composeRequest);
        return localVarResp.getData();
    }

    /**
     * 
     * Concatenates a list of existing objects into a new object in the same bucket.
     * @param destinationBucket Name of the bucket containing the source objects. The destination object is stored in this bucket. (required)
     * @param destinationObject Name of the new object. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param composeRequest  (optional)
     * @return ApiResponse&lt;ModelObject&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ModelObject> storageObjectsComposeWithHttpInfo(String destinationBucket, String destinationObject, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String ifGenerationMatch, String ifMetagenerationMatch, ComposeRequest composeRequest) throws ApiException {
        okhttp3.Call localVarCall = storageObjectsComposeValidateBeforeCall(destinationBucket, destinationObject, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, ifGenerationMatch, ifMetagenerationMatch, composeRequest, null);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Concatenates a list of existing objects into a new object in the same bucket.
     * @param destinationBucket Name of the bucket containing the source objects. The destination object is stored in this bucket. (required)
     * @param destinationObject Name of the new object. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param composeRequest  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsComposeAsync(String destinationBucket, String destinationObject, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String ifGenerationMatch, String ifMetagenerationMatch, ComposeRequest composeRequest, final ApiCallback<ModelObject> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageObjectsComposeValidateBeforeCall(destinationBucket, destinationObject, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, ifGenerationMatch, ifMetagenerationMatch, composeRequest, _callback);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageObjectsCopy
     * @param sourceBucket Name of the bucket in which to find the source object. (required)
     * @param sourceObject Name of the source object. (required)
     * @param destinationBucket Name of the bucket in which to store the new object. Overrides the provided object metadata&#39;s bucket value, if any. (required)
     * @param destinationObject Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata&#39;s name value, if any. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the destination object&#39;s current generation matches the given value. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the destination object&#39;s current generation does not match the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the destination object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the destination object&#39;s current metageneration does not match the given value. (optional)
     * @param ifSourceGenerationMatch Makes the operation conditional on whether the source object&#39;s generation matches the given value. (optional)
     * @param ifSourceGenerationNotMatch Makes the operation conditional on whether the source object&#39;s generation does not match the given value. (optional)
     * @param ifSourceMetagenerationMatch Makes the operation conditional on whether the source object&#39;s current metageneration matches the given value. (optional)
     * @param ifSourceMetagenerationNotMatch Makes the operation conditional on whether the source object&#39;s current metageneration does not match the given value. (optional)
     * @param projection Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full. (optional)
     * @param sourceGeneration If present, selects a specific revision of the source object (as opposed to the latest version, the default). (optional)
     * @param modelObject  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsCopyCall(String sourceBucket, String sourceObject, String destinationBucket, String destinationObject, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String ifSourceGenerationMatch, String ifSourceGenerationNotMatch, String ifSourceMetagenerationMatch, String ifSourceMetagenerationNotMatch, String projection, String sourceGeneration, ModelObject modelObject, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = modelObject;

        // create path and map variables
        String localVarPath = "/b/{sourceBucket}/o/{sourceObject}/copyTo/b/{destinationBucket}/o/{destinationObject}"
            .replace("{" + "sourceBucket" + "}", localVarApiClient.escapeString(sourceBucket.toString()))
            .replace("{" + "sourceObject" + "}", localVarApiClient.escapeString(sourceObject.toString()))
            .replace("{" + "destinationBucket" + "}", localVarApiClient.escapeString(destinationBucket.toString()))
            .replace("{" + "destinationObject" + "}", localVarApiClient.escapeString(destinationObject.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (userIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userIp", userIp));
        }

        if (ifGenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationMatch", ifGenerationMatch));
        }

        if (ifGenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationNotMatch", ifGenerationNotMatch));
        }

        if (ifMetagenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationMatch", ifMetagenerationMatch));
        }

        if (ifMetagenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationNotMatch", ifMetagenerationNotMatch));
        }

        if (ifSourceGenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifSourceGenerationMatch", ifSourceGenerationMatch));
        }

        if (ifSourceGenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifSourceGenerationNotMatch", ifSourceGenerationNotMatch));
        }

        if (ifSourceMetagenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifSourceMetagenerationMatch", ifSourceMetagenerationMatch));
        }

        if (ifSourceMetagenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifSourceMetagenerationNotMatch", ifSourceMetagenerationNotMatch));
        }

        if (projection != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("projection", projection));
        }

        if (sourceGeneration != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sourceGeneration", sourceGeneration));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageObjectsCopyValidateBeforeCall(String sourceBucket, String sourceObject, String destinationBucket, String destinationObject, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String ifSourceGenerationMatch, String ifSourceGenerationNotMatch, String ifSourceMetagenerationMatch, String ifSourceMetagenerationNotMatch, String projection, String sourceGeneration, ModelObject modelObject, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'sourceBucket' is set
        if (sourceBucket == null) {
            throw new ApiException("Missing the required parameter 'sourceBucket' when calling storageObjectsCopy(Async)");
        }

        // verify the required parameter 'sourceObject' is set
        if (sourceObject == null) {
            throw new ApiException("Missing the required parameter 'sourceObject' when calling storageObjectsCopy(Async)");
        }

        // verify the required parameter 'destinationBucket' is set
        if (destinationBucket == null) {
            throw new ApiException("Missing the required parameter 'destinationBucket' when calling storageObjectsCopy(Async)");
        }

        // verify the required parameter 'destinationObject' is set
        if (destinationObject == null) {
            throw new ApiException("Missing the required parameter 'destinationObject' when calling storageObjectsCopy(Async)");
        }

        return storageObjectsCopyCall(sourceBucket, sourceObject, destinationBucket, destinationObject, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, ifSourceGenerationMatch, ifSourceGenerationNotMatch, ifSourceMetagenerationMatch, ifSourceMetagenerationNotMatch, projection, sourceGeneration, modelObject, _callback);

    }

    /**
     * 
     * Copies an object to a destination in the same location. Optionally overrides metadata.
     * @param sourceBucket Name of the bucket in which to find the source object. (required)
     * @param sourceObject Name of the source object. (required)
     * @param destinationBucket Name of the bucket in which to store the new object. Overrides the provided object metadata&#39;s bucket value, if any. (required)
     * @param destinationObject Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata&#39;s name value, if any. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the destination object&#39;s current generation matches the given value. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the destination object&#39;s current generation does not match the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the destination object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the destination object&#39;s current metageneration does not match the given value. (optional)
     * @param ifSourceGenerationMatch Makes the operation conditional on whether the source object&#39;s generation matches the given value. (optional)
     * @param ifSourceGenerationNotMatch Makes the operation conditional on whether the source object&#39;s generation does not match the given value. (optional)
     * @param ifSourceMetagenerationMatch Makes the operation conditional on whether the source object&#39;s current metageneration matches the given value. (optional)
     * @param ifSourceMetagenerationNotMatch Makes the operation conditional on whether the source object&#39;s current metageneration does not match the given value. (optional)
     * @param projection Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full. (optional)
     * @param sourceGeneration If present, selects a specific revision of the source object (as opposed to the latest version, the default). (optional)
     * @param modelObject  (optional)
     * @return ModelObject
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ModelObject storageObjectsCopy(String sourceBucket, String sourceObject, String destinationBucket, String destinationObject, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String ifSourceGenerationMatch, String ifSourceGenerationNotMatch, String ifSourceMetagenerationMatch, String ifSourceMetagenerationNotMatch, String projection, String sourceGeneration, ModelObject modelObject) throws ApiException {
        ApiResponse<ModelObject> localVarResp = storageObjectsCopyWithHttpInfo(sourceBucket, sourceObject, destinationBucket, destinationObject, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, ifSourceGenerationMatch, ifSourceGenerationNotMatch, ifSourceMetagenerationMatch, ifSourceMetagenerationNotMatch, projection, sourceGeneration, modelObject);
        return localVarResp.getData();
    }

    /**
     * 
     * Copies an object to a destination in the same location. Optionally overrides metadata.
     * @param sourceBucket Name of the bucket in which to find the source object. (required)
     * @param sourceObject Name of the source object. (required)
     * @param destinationBucket Name of the bucket in which to store the new object. Overrides the provided object metadata&#39;s bucket value, if any. (required)
     * @param destinationObject Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata&#39;s name value, if any. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the destination object&#39;s current generation matches the given value. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the destination object&#39;s current generation does not match the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the destination object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the destination object&#39;s current metageneration does not match the given value. (optional)
     * @param ifSourceGenerationMatch Makes the operation conditional on whether the source object&#39;s generation matches the given value. (optional)
     * @param ifSourceGenerationNotMatch Makes the operation conditional on whether the source object&#39;s generation does not match the given value. (optional)
     * @param ifSourceMetagenerationMatch Makes the operation conditional on whether the source object&#39;s current metageneration matches the given value. (optional)
     * @param ifSourceMetagenerationNotMatch Makes the operation conditional on whether the source object&#39;s current metageneration does not match the given value. (optional)
     * @param projection Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full. (optional)
     * @param sourceGeneration If present, selects a specific revision of the source object (as opposed to the latest version, the default). (optional)
     * @param modelObject  (optional)
     * @return ApiResponse&lt;ModelObject&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ModelObject> storageObjectsCopyWithHttpInfo(String sourceBucket, String sourceObject, String destinationBucket, String destinationObject, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String ifSourceGenerationMatch, String ifSourceGenerationNotMatch, String ifSourceMetagenerationMatch, String ifSourceMetagenerationNotMatch, String projection, String sourceGeneration, ModelObject modelObject) throws ApiException {
        okhttp3.Call localVarCall = storageObjectsCopyValidateBeforeCall(sourceBucket, sourceObject, destinationBucket, destinationObject, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, ifSourceGenerationMatch, ifSourceGenerationNotMatch, ifSourceMetagenerationMatch, ifSourceMetagenerationNotMatch, projection, sourceGeneration, modelObject, null);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Copies an object to a destination in the same location. Optionally overrides metadata.
     * @param sourceBucket Name of the bucket in which to find the source object. (required)
     * @param sourceObject Name of the source object. (required)
     * @param destinationBucket Name of the bucket in which to store the new object. Overrides the provided object metadata&#39;s bucket value, if any. (required)
     * @param destinationObject Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata&#39;s name value, if any. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the destination object&#39;s current generation matches the given value. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the destination object&#39;s current generation does not match the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the destination object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the destination object&#39;s current metageneration does not match the given value. (optional)
     * @param ifSourceGenerationMatch Makes the operation conditional on whether the source object&#39;s generation matches the given value. (optional)
     * @param ifSourceGenerationNotMatch Makes the operation conditional on whether the source object&#39;s generation does not match the given value. (optional)
     * @param ifSourceMetagenerationMatch Makes the operation conditional on whether the source object&#39;s current metageneration matches the given value. (optional)
     * @param ifSourceMetagenerationNotMatch Makes the operation conditional on whether the source object&#39;s current metageneration does not match the given value. (optional)
     * @param projection Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full. (optional)
     * @param sourceGeneration If present, selects a specific revision of the source object (as opposed to the latest version, the default). (optional)
     * @param modelObject  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsCopyAsync(String sourceBucket, String sourceObject, String destinationBucket, String destinationObject, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String ifSourceGenerationMatch, String ifSourceGenerationNotMatch, String ifSourceMetagenerationMatch, String ifSourceMetagenerationNotMatch, String projection, String sourceGeneration, ModelObject modelObject, final ApiCallback<ModelObject> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageObjectsCopyValidateBeforeCall(sourceBucket, sourceObject, destinationBucket, destinationObject, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, ifSourceGenerationMatch, ifSourceGenerationNotMatch, ifSourceMetagenerationMatch, ifSourceMetagenerationNotMatch, projection, sourceGeneration, modelObject, _callback);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageObjectsDelete
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsDeleteCall(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/b/{bucket}/o/{object}"
            .replace("{" + "bucket" + "}", localVarApiClient.escapeString(bucket.toString()))
            .replace("{" + "object" + "}", localVarApiClient.escapeString(_object.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (userIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userIp", userIp));
        }

        if (generation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("generation", generation));
        }

        if (ifGenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationMatch", ifGenerationMatch));
        }

        if (ifGenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationNotMatch", ifGenerationNotMatch));
        }

        if (ifMetagenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationMatch", ifMetagenerationMatch));
        }

        if (ifMetagenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationNotMatch", ifMetagenerationNotMatch));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageObjectsDeleteValidateBeforeCall(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'bucket' is set
        if (bucket == null) {
            throw new ApiException("Missing the required parameter 'bucket' when calling storageObjectsDelete(Async)");
        }

        // verify the required parameter '_object' is set
        if (_object == null) {
            throw new ApiException("Missing the required parameter '_object' when calling storageObjectsDelete(Async)");
        }

        return storageObjectsDeleteCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, _callback);

    }

    /**
     * 
     * Deletes data blobs and associated metadata. Deletions are permanent if versioning is not enabled for the bucket, or if the generation parameter is used.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public void storageObjectsDelete(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch) throws ApiException {
        storageObjectsDeleteWithHttpInfo(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch);
    }

    /**
     * 
     * Deletes data blobs and associated metadata. Deletions are permanent if versioning is not enabled for the bucket, or if the generation parameter is used.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> storageObjectsDeleteWithHttpInfo(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch) throws ApiException {
        okhttp3.Call localVarCall = storageObjectsDeleteValidateBeforeCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Deletes data blobs and associated metadata. Deletions are permanent if versioning is not enabled for the bucket, or if the generation parameter is used.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsDeleteAsync(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageObjectsDeleteValidateBeforeCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageObjectsGet
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s generation matches the given value. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s generation does not match the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param projection Set of properties to return. Defaults to noAcl. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsGetCall(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String projection, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/b/{bucket}/o/{object}"
            .replace("{" + "bucket" + "}", localVarApiClient.escapeString(bucket.toString()))
            .replace("{" + "object" + "}", localVarApiClient.escapeString(_object.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (userIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userIp", userIp));
        }

        if (generation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("generation", generation));
        }

        if (ifGenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationMatch", ifGenerationMatch));
        }

        if (ifGenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationNotMatch", ifGenerationNotMatch));
        }

        if (ifMetagenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationMatch", ifMetagenerationMatch));
        }

        if (ifMetagenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationNotMatch", ifMetagenerationNotMatch));
        }

        if (projection != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("projection", projection));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageObjectsGetValidateBeforeCall(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String projection, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'bucket' is set
        if (bucket == null) {
            throw new ApiException("Missing the required parameter 'bucket' when calling storageObjectsGet(Async)");
        }

        // verify the required parameter '_object' is set
        if (_object == null) {
            throw new ApiException("Missing the required parameter '_object' when calling storageObjectsGet(Async)");
        }

        return storageObjectsGetCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, projection, _callback);

    }

    /**
     * 
     * Retrieves objects or their associated metadata.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s generation matches the given value. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s generation does not match the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param projection Set of properties to return. Defaults to noAcl. (optional)
     * @return ModelObject
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ModelObject storageObjectsGet(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String projection) throws ApiException {
        ApiResponse<ModelObject> localVarResp = storageObjectsGetWithHttpInfo(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, projection);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieves objects or their associated metadata.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s generation matches the given value. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s generation does not match the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param projection Set of properties to return. Defaults to noAcl. (optional)
     * @return ApiResponse&lt;ModelObject&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ModelObject> storageObjectsGetWithHttpInfo(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String projection) throws ApiException {
        okhttp3.Call localVarCall = storageObjectsGetValidateBeforeCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, projection, null);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieves objects or their associated metadata.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s generation matches the given value. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s generation does not match the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param projection Set of properties to return. Defaults to noAcl. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsGetAsync(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String projection, final ApiCallback<ModelObject> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageObjectsGetValidateBeforeCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, projection, _callback);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageObjectsInsert
     * @param bucket Name of the bucket in which to store the new object. Overrides the provided object metadata&#39;s bucket value, if any. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param name Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata&#39;s name value, if any. (optional)
     * @param projection Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full. (optional)
     * @param modelObject  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsInsertCall(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String name, String projection, ModelObject modelObject, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = modelObject;

        // create path and map variables
        String localVarPath = "/b/{bucket}/o"
            .replace("{" + "bucket" + "}", localVarApiClient.escapeString(bucket.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (userIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userIp", userIp));
        }

        if (ifGenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationMatch", ifGenerationMatch));
        }

        if (ifGenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationNotMatch", ifGenerationNotMatch));
        }

        if (ifMetagenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationMatch", ifMetagenerationMatch));
        }

        if (ifMetagenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationNotMatch", ifMetagenerationNotMatch));
        }

        if (name != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("name", name));
        }

        if (projection != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("projection", projection));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/octet-stream"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageObjectsInsertValidateBeforeCall(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String name, String projection, ModelObject modelObject, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'bucket' is set
        if (bucket == null) {
            throw new ApiException("Missing the required parameter 'bucket' when calling storageObjectsInsert(Async)");
        }

        return storageObjectsInsertCall(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, name, projection, modelObject, _callback);

    }

    /**
     * 
     * Stores new data blobs and associated metadata.
     * @param bucket Name of the bucket in which to store the new object. Overrides the provided object metadata&#39;s bucket value, if any. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param name Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata&#39;s name value, if any. (optional)
     * @param projection Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full. (optional)
     * @param modelObject  (optional)
     * @return ModelObject
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ModelObject storageObjectsInsert(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String name, String projection, ModelObject modelObject) throws ApiException {
        ApiResponse<ModelObject> localVarResp = storageObjectsInsertWithHttpInfo(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, name, projection, modelObject);
        return localVarResp.getData();
    }

    /**
     * 
     * Stores new data blobs and associated metadata.
     * @param bucket Name of the bucket in which to store the new object. Overrides the provided object metadata&#39;s bucket value, if any. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param name Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata&#39;s name value, if any. (optional)
     * @param projection Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full. (optional)
     * @param modelObject  (optional)
     * @return ApiResponse&lt;ModelObject&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ModelObject> storageObjectsInsertWithHttpInfo(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String name, String projection, ModelObject modelObject) throws ApiException {
        okhttp3.Call localVarCall = storageObjectsInsertValidateBeforeCall(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, name, projection, modelObject, null);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Stores new data blobs and associated metadata.
     * @param bucket Name of the bucket in which to store the new object. Overrides the provided object metadata&#39;s bucket value, if any. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param name Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata&#39;s name value, if any. (optional)
     * @param projection Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full. (optional)
     * @param modelObject  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsInsertAsync(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String name, String projection, ModelObject modelObject, final ApiCallback<ModelObject> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageObjectsInsertValidateBeforeCall(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, name, projection, modelObject, _callback);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageObjectsList
     * @param bucket Name of the bucket in which to look for objects. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param delimiter Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted. (optional)
     * @param maxResults Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested. (optional)
     * @param pageToken A previously-returned page token representing part of the larger set of results to view. (optional)
     * @param prefix Filter results to objects whose names begin with this prefix. (optional)
     * @param projection Set of properties to return. Defaults to noAcl. (optional)
     * @param versions If true, lists all versions of a file as distinct results. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsListCall(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String delimiter, Integer maxResults, String pageToken, String prefix, String projection, Boolean versions, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/b/{bucket}/o"
            .replace("{" + "bucket" + "}", localVarApiClient.escapeString(bucket.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (userIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userIp", userIp));
        }

        if (delimiter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("delimiter", delimiter));
        }

        if (maxResults != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxResults", maxResults));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageToken", pageToken));
        }

        if (prefix != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prefix", prefix));
        }

        if (projection != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("projection", projection));
        }

        if (versions != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("versions", versions));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageObjectsListValidateBeforeCall(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String delimiter, Integer maxResults, String pageToken, String prefix, String projection, Boolean versions, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'bucket' is set
        if (bucket == null) {
            throw new ApiException("Missing the required parameter 'bucket' when calling storageObjectsList(Async)");
        }

        return storageObjectsListCall(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, delimiter, maxResults, pageToken, prefix, projection, versions, _callback);

    }

    /**
     * 
     * Retrieves a list of objects matching the criteria.
     * @param bucket Name of the bucket in which to look for objects. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param delimiter Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted. (optional)
     * @param maxResults Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested. (optional)
     * @param pageToken A previously-returned page token representing part of the larger set of results to view. (optional)
     * @param prefix Filter results to objects whose names begin with this prefix. (optional)
     * @param projection Set of properties to return. Defaults to noAcl. (optional)
     * @param versions If true, lists all versions of a file as distinct results. (optional)
     * @return Objects
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public Objects storageObjectsList(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String delimiter, Integer maxResults, String pageToken, String prefix, String projection, Boolean versions) throws ApiException {
        ApiResponse<Objects> localVarResp = storageObjectsListWithHttpInfo(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, delimiter, maxResults, pageToken, prefix, projection, versions);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieves a list of objects matching the criteria.
     * @param bucket Name of the bucket in which to look for objects. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param delimiter Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted. (optional)
     * @param maxResults Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested. (optional)
     * @param pageToken A previously-returned page token representing part of the larger set of results to view. (optional)
     * @param prefix Filter results to objects whose names begin with this prefix. (optional)
     * @param projection Set of properties to return. Defaults to noAcl. (optional)
     * @param versions If true, lists all versions of a file as distinct results. (optional)
     * @return ApiResponse&lt;Objects&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Objects> storageObjectsListWithHttpInfo(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String delimiter, Integer maxResults, String pageToken, String prefix, String projection, Boolean versions) throws ApiException {
        okhttp3.Call localVarCall = storageObjectsListValidateBeforeCall(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, delimiter, maxResults, pageToken, prefix, projection, versions, null);
        Type localVarReturnType = new TypeToken<Objects>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieves a list of objects matching the criteria.
     * @param bucket Name of the bucket in which to look for objects. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param delimiter Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted. (optional)
     * @param maxResults Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested. (optional)
     * @param pageToken A previously-returned page token representing part of the larger set of results to view. (optional)
     * @param prefix Filter results to objects whose names begin with this prefix. (optional)
     * @param projection Set of properties to return. Defaults to noAcl. (optional)
     * @param versions If true, lists all versions of a file as distinct results. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsListAsync(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String delimiter, Integer maxResults, String pageToken, String prefix, String projection, Boolean versions, final ApiCallback<Objects> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageObjectsListValidateBeforeCall(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, delimiter, maxResults, pageToken, prefix, projection, versions, _callback);
        Type localVarReturnType = new TypeToken<Objects>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageObjectsPatch
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param projection Set of properties to return. Defaults to full. (optional)
     * @param modelObject  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsPatchCall(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String projection, ModelObject modelObject, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = modelObject;

        // create path and map variables
        String localVarPath = "/b/{bucket}/o/{object}"
            .replace("{" + "bucket" + "}", localVarApiClient.escapeString(bucket.toString()))
            .replace("{" + "object" + "}", localVarApiClient.escapeString(_object.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (userIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userIp", userIp));
        }

        if (generation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("generation", generation));
        }

        if (ifGenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationMatch", ifGenerationMatch));
        }

        if (ifGenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationNotMatch", ifGenerationNotMatch));
        }

        if (ifMetagenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationMatch", ifMetagenerationMatch));
        }

        if (ifMetagenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationNotMatch", ifMetagenerationNotMatch));
        }

        if (projection != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("projection", projection));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageObjectsPatchValidateBeforeCall(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String projection, ModelObject modelObject, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'bucket' is set
        if (bucket == null) {
            throw new ApiException("Missing the required parameter 'bucket' when calling storageObjectsPatch(Async)");
        }

        // verify the required parameter '_object' is set
        if (_object == null) {
            throw new ApiException("Missing the required parameter '_object' when calling storageObjectsPatch(Async)");
        }

        return storageObjectsPatchCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, projection, modelObject, _callback);

    }

    /**
     * 
     * Updates a data blob&#39;s associated metadata. This method supports patch semantics.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param projection Set of properties to return. Defaults to full. (optional)
     * @param modelObject  (optional)
     * @return ModelObject
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ModelObject storageObjectsPatch(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String projection, ModelObject modelObject) throws ApiException {
        ApiResponse<ModelObject> localVarResp = storageObjectsPatchWithHttpInfo(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, projection, modelObject);
        return localVarResp.getData();
    }

    /**
     * 
     * Updates a data blob&#39;s associated metadata. This method supports patch semantics.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param projection Set of properties to return. Defaults to full. (optional)
     * @param modelObject  (optional)
     * @return ApiResponse&lt;ModelObject&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ModelObject> storageObjectsPatchWithHttpInfo(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String projection, ModelObject modelObject) throws ApiException {
        okhttp3.Call localVarCall = storageObjectsPatchValidateBeforeCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, projection, modelObject, null);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Updates a data blob&#39;s associated metadata. This method supports patch semantics.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param projection Set of properties to return. Defaults to full. (optional)
     * @param modelObject  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsPatchAsync(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String projection, ModelObject modelObject, final ApiCallback<ModelObject> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageObjectsPatchValidateBeforeCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, projection, modelObject, _callback);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageObjectsUpdate
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param projection Set of properties to return. Defaults to full. (optional)
     * @param modelObject  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsUpdateCall(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String projection, ModelObject modelObject, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = modelObject;

        // create path and map variables
        String localVarPath = "/b/{bucket}/o/{object}"
            .replace("{" + "bucket" + "}", localVarApiClient.escapeString(bucket.toString()))
            .replace("{" + "object" + "}", localVarApiClient.escapeString(_object.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (userIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userIp", userIp));
        }

        if (generation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("generation", generation));
        }

        if (ifGenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationMatch", ifGenerationMatch));
        }

        if (ifGenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationNotMatch", ifGenerationNotMatch));
        }

        if (ifMetagenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationMatch", ifMetagenerationMatch));
        }

        if (ifMetagenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationNotMatch", ifMetagenerationNotMatch));
        }

        if (projection != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("projection", projection));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageObjectsUpdateValidateBeforeCall(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String projection, ModelObject modelObject, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'bucket' is set
        if (bucket == null) {
            throw new ApiException("Missing the required parameter 'bucket' when calling storageObjectsUpdate(Async)");
        }

        // verify the required parameter '_object' is set
        if (_object == null) {
            throw new ApiException("Missing the required parameter '_object' when calling storageObjectsUpdate(Async)");
        }

        return storageObjectsUpdateCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, projection, modelObject, _callback);

    }

    /**
     * 
     * Updates a data blob&#39;s associated metadata.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param projection Set of properties to return. Defaults to full. (optional)
     * @param modelObject  (optional)
     * @return ModelObject
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ModelObject storageObjectsUpdate(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String projection, ModelObject modelObject) throws ApiException {
        ApiResponse<ModelObject> localVarResp = storageObjectsUpdateWithHttpInfo(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, projection, modelObject);
        return localVarResp.getData();
    }

    /**
     * 
     * Updates a data blob&#39;s associated metadata.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param projection Set of properties to return. Defaults to full. (optional)
     * @param modelObject  (optional)
     * @return ApiResponse&lt;ModelObject&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ModelObject> storageObjectsUpdateWithHttpInfo(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String projection, ModelObject modelObject) throws ApiException {
        okhttp3.Call localVarCall = storageObjectsUpdateValidateBeforeCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, projection, modelObject, null);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Updates a data blob&#39;s associated metadata.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param projection Set of properties to return. Defaults to full. (optional)
     * @param modelObject  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsUpdateAsync(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String projection, ModelObject modelObject, final ApiCallback<ModelObject> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageObjectsUpdateValidateBeforeCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, projection, modelObject, _callback);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageObjectsWatchAll
     * @param bucket Name of the bucket in which to look for objects. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param delimiter Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted. (optional)
     * @param maxResults Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested. (optional)
     * @param pageToken A previously-returned page token representing part of the larger set of results to view. (optional)
     * @param prefix Filter results to objects whose names begin with this prefix. (optional)
     * @param projection Set of properties to return. Defaults to noAcl. (optional)
     * @param versions If true, lists all versions of a file as distinct results. (optional)
     * @param channel  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsWatchAllCall(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String delimiter, Integer maxResults, String pageToken, String prefix, String projection, Boolean versions, Channel channel, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = channel;

        // create path and map variables
        String localVarPath = "/b/{bucket}/o/watch"
            .replace("{" + "bucket" + "}", localVarApiClient.escapeString(bucket.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (userIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userIp", userIp));
        }

        if (delimiter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("delimiter", delimiter));
        }

        if (maxResults != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxResults", maxResults));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageToken", pageToken));
        }

        if (prefix != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prefix", prefix));
        }

        if (projection != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("projection", projection));
        }

        if (versions != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("versions", versions));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageObjectsWatchAllValidateBeforeCall(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String delimiter, Integer maxResults, String pageToken, String prefix, String projection, Boolean versions, Channel channel, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'bucket' is set
        if (bucket == null) {
            throw new ApiException("Missing the required parameter 'bucket' when calling storageObjectsWatchAll(Async)");
        }

        return storageObjectsWatchAllCall(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, delimiter, maxResults, pageToken, prefix, projection, versions, channel, _callback);

    }

    /**
     * 
     * Watch for changes on all objects in a bucket.
     * @param bucket Name of the bucket in which to look for objects. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param delimiter Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted. (optional)
     * @param maxResults Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested. (optional)
     * @param pageToken A previously-returned page token representing part of the larger set of results to view. (optional)
     * @param prefix Filter results to objects whose names begin with this prefix. (optional)
     * @param projection Set of properties to return. Defaults to noAcl. (optional)
     * @param versions If true, lists all versions of a file as distinct results. (optional)
     * @param channel  (optional)
     * @return Channel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public Channel storageObjectsWatchAll(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String delimiter, Integer maxResults, String pageToken, String prefix, String projection, Boolean versions, Channel channel) throws ApiException {
        ApiResponse<Channel> localVarResp = storageObjectsWatchAllWithHttpInfo(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, delimiter, maxResults, pageToken, prefix, projection, versions, channel);
        return localVarResp.getData();
    }

    /**
     * 
     * Watch for changes on all objects in a bucket.
     * @param bucket Name of the bucket in which to look for objects. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param delimiter Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted. (optional)
     * @param maxResults Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested. (optional)
     * @param pageToken A previously-returned page token representing part of the larger set of results to view. (optional)
     * @param prefix Filter results to objects whose names begin with this prefix. (optional)
     * @param projection Set of properties to return. Defaults to noAcl. (optional)
     * @param versions If true, lists all versions of a file as distinct results. (optional)
     * @param channel  (optional)
     * @return ApiResponse&lt;Channel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Channel> storageObjectsWatchAllWithHttpInfo(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String delimiter, Integer maxResults, String pageToken, String prefix, String projection, Boolean versions, Channel channel) throws ApiException {
        okhttp3.Call localVarCall = storageObjectsWatchAllValidateBeforeCall(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, delimiter, maxResults, pageToken, prefix, projection, versions, channel, null);
        Type localVarReturnType = new TypeToken<Channel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Watch for changes on all objects in a bucket.
     * @param bucket Name of the bucket in which to look for objects. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param delimiter Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted. (optional)
     * @param maxResults Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested. (optional)
     * @param pageToken A previously-returned page token representing part of the larger set of results to view. (optional)
     * @param prefix Filter results to objects whose names begin with this prefix. (optional)
     * @param projection Set of properties to return. Defaults to noAcl. (optional)
     * @param versions If true, lists all versions of a file as distinct results. (optional)
     * @param channel  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsWatchAllAsync(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String userIp, String delimiter, Integer maxResults, String pageToken, String prefix, String projection, Boolean versions, Channel channel, final ApiCallback<Channel> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageObjectsWatchAllValidateBeforeCall(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, delimiter, maxResults, pageToken, prefix, projection, versions, channel, _callback);
        Type localVarReturnType = new TypeToken<Channel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
