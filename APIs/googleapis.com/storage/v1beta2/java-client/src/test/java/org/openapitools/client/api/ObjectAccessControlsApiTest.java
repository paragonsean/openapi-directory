/*
 * Cloud Storage JSON API
 * Lets you store and retrieve potentially-large, immutable data objects.
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ObjectAccessControl;
import org.openapitools.client.model.ObjectAccessControls;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ObjectAccessControlsApi
 */
@Disabled
public class ObjectAccessControlsApiTest {

    private final ObjectAccessControlsApi api = new ObjectAccessControlsApi();

    /**
     * Permanently deletes the ACL entry for the specified entity on the specified object.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storageObjectAccessControlsDeleteTest() throws ApiException {
        String bucket = null;
        String _object = null;
        String entity = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        String generation = null;
        api.storageObjectAccessControlsDelete(bucket, _object, entity, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, generation);
        // TODO: test validations
    }

    /**
     * Returns the ACL entry for the specified entity on the specified object.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storageObjectAccessControlsGetTest() throws ApiException {
        String bucket = null;
        String _object = null;
        String entity = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        String generation = null;
        ObjectAccessControl response = api.storageObjectAccessControlsGet(bucket, _object, entity, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, generation);
        // TODO: test validations
    }

    /**
     * Creates a new ACL entry on the specified object.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storageObjectAccessControlsInsertTest() throws ApiException {
        String bucket = null;
        String _object = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        String generation = null;
        ObjectAccessControl objectAccessControl = null;
        ObjectAccessControl response = api.storageObjectAccessControlsInsert(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, generation, objectAccessControl);
        // TODO: test validations
    }

    /**
     * Retrieves ACL entries on the specified object.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storageObjectAccessControlsListTest() throws ApiException {
        String bucket = null;
        String _object = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        String generation = null;
        ObjectAccessControls response = api.storageObjectAccessControlsList(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, generation);
        // TODO: test validations
    }

    /**
     * Updates an ACL entry on the specified object. This method supports patch semantics.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storageObjectAccessControlsPatchTest() throws ApiException {
        String bucket = null;
        String _object = null;
        String entity = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        String generation = null;
        ObjectAccessControl objectAccessControl = null;
        ObjectAccessControl response = api.storageObjectAccessControlsPatch(bucket, _object, entity, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, generation, objectAccessControl);
        // TODO: test validations
    }

    /**
     * Updates an ACL entry on the specified object.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storageObjectAccessControlsUpdateTest() throws ApiException {
        String bucket = null;
        String _object = null;
        String entity = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        String generation = null;
        ObjectAccessControl objectAccessControl = null;
        ObjectAccessControl response = api.storageObjectAccessControlsUpdate(bucket, _object, entity, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, generation, objectAccessControl);
        // TODO: test validations
    }

}
