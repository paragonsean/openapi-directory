/**
 * Cloud Storage JSON API
 * Lets you store and retrieve potentially-large, immutable data objects.
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ObjectAccessControl from './ObjectAccessControl';
import ObjectOwner from './ObjectOwner';

/**
 * The ModelObject model module.
 * @module model/ModelObject
 * @version v1beta2
 */
class ModelObject {
    /**
     * Constructs a new <code>ModelObject</code>.
     * An object.
     * @alias module:model/ModelObject
     */
    constructor() { 
        
        ModelObject.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['kind'] = 'storage#object';
    }

    /**
     * Constructs a <code>ModelObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModelObject} obj Optional instance to populate.
     * @return {module:model/ModelObject} The populated <code>ModelObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelObject();

            if (data.hasOwnProperty('acl')) {
                obj['acl'] = ApiClient.convertToType(data['acl'], [ObjectAccessControl]);
            }
            if (data.hasOwnProperty('bucket')) {
                obj['bucket'] = ApiClient.convertToType(data['bucket'], 'String');
            }
            if (data.hasOwnProperty('cacheControl')) {
                obj['cacheControl'] = ApiClient.convertToType(data['cacheControl'], 'String');
            }
            if (data.hasOwnProperty('componentCount')) {
                obj['componentCount'] = ApiClient.convertToType(data['componentCount'], 'Number');
            }
            if (data.hasOwnProperty('contentDisposition')) {
                obj['contentDisposition'] = ApiClient.convertToType(data['contentDisposition'], 'String');
            }
            if (data.hasOwnProperty('contentEncoding')) {
                obj['contentEncoding'] = ApiClient.convertToType(data['contentEncoding'], 'String');
            }
            if (data.hasOwnProperty('contentLanguage')) {
                obj['contentLanguage'] = ApiClient.convertToType(data['contentLanguage'], 'String');
            }
            if (data.hasOwnProperty('contentType')) {
                obj['contentType'] = ApiClient.convertToType(data['contentType'], 'String');
            }
            if (data.hasOwnProperty('crc32c')) {
                obj['crc32c'] = ApiClient.convertToType(data['crc32c'], 'String');
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('generation')) {
                obj['generation'] = ApiClient.convertToType(data['generation'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('md5Hash')) {
                obj['md5Hash'] = ApiClient.convertToType(data['md5Hash'], 'String');
            }
            if (data.hasOwnProperty('mediaLink')) {
                obj['mediaLink'] = ApiClient.convertToType(data['mediaLink'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], {'String': 'String'});
            }
            if (data.hasOwnProperty('metageneration')) {
                obj['metageneration'] = ApiClient.convertToType(data['metageneration'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ObjectOwner.constructFromObject(data['owner']);
            }
            if (data.hasOwnProperty('selfLink')) {
                obj['selfLink'] = ApiClient.convertToType(data['selfLink'], 'String');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'String');
            }
            if (data.hasOwnProperty('storageClass')) {
                obj['storageClass'] = ApiClient.convertToType(data['storageClass'], 'String');
            }
            if (data.hasOwnProperty('timeDeleted')) {
                obj['timeDeleted'] = ApiClient.convertToType(data['timeDeleted'], 'Date');
            }
            if (data.hasOwnProperty('updated')) {
                obj['updated'] = ApiClient.convertToType(data['updated'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModelObject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModelObject</code>.
     */
    static validateJSON(data) {
        if (data['acl']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['acl'])) {
                throw new Error("Expected the field `acl` to be an array in the JSON data but got " + data['acl']);
            }
            // validate the optional field `acl` (array)
            for (const item of data['acl']) {
                ObjectAccessControl.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['bucket'] && !(typeof data['bucket'] === 'string' || data['bucket'] instanceof String)) {
            throw new Error("Expected the field `bucket` to be a primitive type in the JSON string but got " + data['bucket']);
        }
        // ensure the json data is a string
        if (data['cacheControl'] && !(typeof data['cacheControl'] === 'string' || data['cacheControl'] instanceof String)) {
            throw new Error("Expected the field `cacheControl` to be a primitive type in the JSON string but got " + data['cacheControl']);
        }
        // ensure the json data is a string
        if (data['contentDisposition'] && !(typeof data['contentDisposition'] === 'string' || data['contentDisposition'] instanceof String)) {
            throw new Error("Expected the field `contentDisposition` to be a primitive type in the JSON string but got " + data['contentDisposition']);
        }
        // ensure the json data is a string
        if (data['contentEncoding'] && !(typeof data['contentEncoding'] === 'string' || data['contentEncoding'] instanceof String)) {
            throw new Error("Expected the field `contentEncoding` to be a primitive type in the JSON string but got " + data['contentEncoding']);
        }
        // ensure the json data is a string
        if (data['contentLanguage'] && !(typeof data['contentLanguage'] === 'string' || data['contentLanguage'] instanceof String)) {
            throw new Error("Expected the field `contentLanguage` to be a primitive type in the JSON string but got " + data['contentLanguage']);
        }
        // ensure the json data is a string
        if (data['contentType'] && !(typeof data['contentType'] === 'string' || data['contentType'] instanceof String)) {
            throw new Error("Expected the field `contentType` to be a primitive type in the JSON string but got " + data['contentType']);
        }
        // ensure the json data is a string
        if (data['crc32c'] && !(typeof data['crc32c'] === 'string' || data['crc32c'] instanceof String)) {
            throw new Error("Expected the field `crc32c` to be a primitive type in the JSON string but got " + data['crc32c']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['generation'] && !(typeof data['generation'] === 'string' || data['generation'] instanceof String)) {
            throw new Error("Expected the field `generation` to be a primitive type in the JSON string but got " + data['generation']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['md5Hash'] && !(typeof data['md5Hash'] === 'string' || data['md5Hash'] instanceof String)) {
            throw new Error("Expected the field `md5Hash` to be a primitive type in the JSON string but got " + data['md5Hash']);
        }
        // ensure the json data is a string
        if (data['mediaLink'] && !(typeof data['mediaLink'] === 'string' || data['mediaLink'] instanceof String)) {
            throw new Error("Expected the field `mediaLink` to be a primitive type in the JSON string but got " + data['mediaLink']);
        }
        // ensure the json data is a string
        if (data['metageneration'] && !(typeof data['metageneration'] === 'string' || data['metageneration'] instanceof String)) {
            throw new Error("Expected the field `metageneration` to be a primitive type in the JSON string but got " + data['metageneration']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `owner`
        if (data['owner']) { // data not null
          ObjectOwner.validateJSON(data['owner']);
        }
        // ensure the json data is a string
        if (data['selfLink'] && !(typeof data['selfLink'] === 'string' || data['selfLink'] instanceof String)) {
            throw new Error("Expected the field `selfLink` to be a primitive type in the JSON string but got " + data['selfLink']);
        }
        // ensure the json data is a string
        if (data['size'] && !(typeof data['size'] === 'string' || data['size'] instanceof String)) {
            throw new Error("Expected the field `size` to be a primitive type in the JSON string but got " + data['size']);
        }
        // ensure the json data is a string
        if (data['storageClass'] && !(typeof data['storageClass'] === 'string' || data['storageClass'] instanceof String)) {
            throw new Error("Expected the field `storageClass` to be a primitive type in the JSON string but got " + data['storageClass']);
        }

        return true;
    }


}



/**
 * Access controls on the object.
 * @member {Array.<module:model/ObjectAccessControl>} acl
 */
ModelObject.prototype['acl'] = undefined;

/**
 * The bucket containing this object.
 * @member {String} bucket
 */
ModelObject.prototype['bucket'] = undefined;

/**
 * Cache-Control directive for the object data.
 * @member {String} cacheControl
 */
ModelObject.prototype['cacheControl'] = undefined;

/**
 * Number of underlying components that make up this object. Components are accumulated by compose operations and are limited to a count of 32.
 * @member {Number} componentCount
 */
ModelObject.prototype['componentCount'] = undefined;

/**
 * Content-Disposition of the object data.
 * @member {String} contentDisposition
 */
ModelObject.prototype['contentDisposition'] = undefined;

/**
 * Content-Encoding of the object data.
 * @member {String} contentEncoding
 */
ModelObject.prototype['contentEncoding'] = undefined;

/**
 * Content-Language of the object data.
 * @member {String} contentLanguage
 */
ModelObject.prototype['contentLanguage'] = undefined;

/**
 * Content-Type of the object data.
 * @member {String} contentType
 */
ModelObject.prototype['contentType'] = undefined;

/**
 * CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64.
 * @member {String} crc32c
 */
ModelObject.prototype['crc32c'] = undefined;

/**
 * HTTP 1.1 Entity tag for the object.
 * @member {String} etag
 */
ModelObject.prototype['etag'] = undefined;

/**
 * The content generation of this object. Used for object versioning.
 * @member {String} generation
 */
ModelObject.prototype['generation'] = undefined;

/**
 * The ID of the object.
 * @member {String} id
 */
ModelObject.prototype['id'] = undefined;

/**
 * The kind of item this is. For objects, this is always storage#object.
 * @member {String} kind
 * @default 'storage#object'
 */
ModelObject.prototype['kind'] = 'storage#object';

/**
 * MD5 hash of the data; encoded using base64.
 * @member {String} md5Hash
 */
ModelObject.prototype['md5Hash'] = undefined;

/**
 * Media download link.
 * @member {String} mediaLink
 */
ModelObject.prototype['mediaLink'] = undefined;

/**
 * User-provided metadata, in key/value pairs.
 * @member {Object.<String, String>} metadata
 */
ModelObject.prototype['metadata'] = undefined;

/**
 * The generation of the metadata for this object at this generation. Used for metadata versioning. Has no meaning outside of the context of this generation.
 * @member {String} metageneration
 */
ModelObject.prototype['metageneration'] = undefined;

/**
 * The name of this object. Required if not specified by URL parameter.
 * @member {String} name
 */
ModelObject.prototype['name'] = undefined;

/**
 * @member {module:model/ObjectOwner} owner
 */
ModelObject.prototype['owner'] = undefined;

/**
 * The link to this object.
 * @member {String} selfLink
 */
ModelObject.prototype['selfLink'] = undefined;

/**
 * Content-Length of the data in bytes.
 * @member {String} size
 */
ModelObject.prototype['size'] = undefined;

/**
 * Storage class of the object.
 * @member {String} storageClass
 */
ModelObject.prototype['storageClass'] = undefined;

/**
 * Deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.
 * @member {Date} timeDeleted
 */
ModelObject.prototype['timeDeleted'] = undefined;

/**
 * Modification time of the object metadata in RFC 3339 format.
 * @member {Date} updated
 */
ModelObject.prototype['updated'] = undefined;






export default ModelObject;

