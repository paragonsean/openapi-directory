/**
 * Cloud Storage JSON API
 * Lets you store and retrieve potentially-large, immutable data objects.
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ObjectAccessControl from '../model/ObjectAccessControl';
import ObjectAccessControls from '../model/ObjectAccessControls';

/**
* DefaultObjectAccessControls service.
* @module api/DefaultObjectAccessControlsApi
* @version v1beta2
*/
export default class DefaultObjectAccessControlsApi {

    /**
    * Constructs a new DefaultObjectAccessControlsApi. 
    * @alias module:api/DefaultObjectAccessControlsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the storageDefaultObjectAccessControlsDelete operation.
     * @callback module:api/DefaultObjectAccessControlsApi~storageDefaultObjectAccessControlsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Permanently deletes the default object ACL entry for the specified entity on the specified bucket.
     * @param {String} bucket Name of a bucket.
     * @param {String} entity The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {module:api/DefaultObjectAccessControlsApi~storageDefaultObjectAccessControlsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    storageDefaultObjectAccessControlsDelete(bucket, entity, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageDefaultObjectAccessControlsDelete");
      }
      // verify the required parameter 'entity' is set
      if (entity === undefined || entity === null) {
        throw new Error("Missing the required parameter 'entity' when calling storageDefaultObjectAccessControlsDelete");
      }

      let pathParams = {
        'bucket': bucket,
        'entity': entity
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/b/{bucket}/defaultObjectAcl/{entity}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageDefaultObjectAccessControlsGet operation.
     * @callback module:api/DefaultObjectAccessControlsApi~storageDefaultObjectAccessControlsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ObjectAccessControl} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the default object ACL entry for the specified entity on the specified bucket.
     * @param {String} bucket Name of a bucket.
     * @param {String} entity The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {module:api/DefaultObjectAccessControlsApi~storageDefaultObjectAccessControlsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ObjectAccessControl}
     */
    storageDefaultObjectAccessControlsGet(bucket, entity, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageDefaultObjectAccessControlsGet");
      }
      // verify the required parameter 'entity' is set
      if (entity === undefined || entity === null) {
        throw new Error("Missing the required parameter 'entity' when calling storageDefaultObjectAccessControlsGet");
      }

      let pathParams = {
        'bucket': bucket,
        'entity': entity
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ObjectAccessControl;
      return this.apiClient.callApi(
        '/b/{bucket}/defaultObjectAcl/{entity}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageDefaultObjectAccessControlsInsert operation.
     * @callback module:api/DefaultObjectAccessControlsApi~storageDefaultObjectAccessControlsInsertCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ObjectAccessControl} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new default object ACL entry on the specified bucket.
     * @param {String} bucket Name of a bucket.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {module:model/ObjectAccessControl} [objectAccessControl] 
     * @param {module:api/DefaultObjectAccessControlsApi~storageDefaultObjectAccessControlsInsertCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ObjectAccessControl}
     */
    storageDefaultObjectAccessControlsInsert(bucket, opts, callback) {
      opts = opts || {};
      let postBody = opts['objectAccessControl'];
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageDefaultObjectAccessControlsInsert");
      }

      let pathParams = {
        'bucket': bucket
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ObjectAccessControl;
      return this.apiClient.callApi(
        '/b/{bucket}/defaultObjectAcl', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageDefaultObjectAccessControlsList operation.
     * @callback module:api/DefaultObjectAccessControlsApi~storageDefaultObjectAccessControlsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ObjectAccessControls} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves default object ACL entries on the specified bucket.
     * @param {String} bucket Name of a bucket.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [ifMetagenerationMatch] If present, only return default ACL listing if the bucket's current metageneration matches this value.
     * @param {String} [ifMetagenerationNotMatch] If present, only return default ACL listing if the bucket's current metageneration does not match the given value.
     * @param {module:api/DefaultObjectAccessControlsApi~storageDefaultObjectAccessControlsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ObjectAccessControls}
     */
    storageDefaultObjectAccessControlsList(bucket, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageDefaultObjectAccessControlsList");
      }

      let pathParams = {
        'bucket': bucket
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'ifMetagenerationMatch': opts['ifMetagenerationMatch'],
        'ifMetagenerationNotMatch': opts['ifMetagenerationNotMatch']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ObjectAccessControls;
      return this.apiClient.callApi(
        '/b/{bucket}/defaultObjectAcl', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageDefaultObjectAccessControlsPatch operation.
     * @callback module:api/DefaultObjectAccessControlsApi~storageDefaultObjectAccessControlsPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ObjectAccessControl} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a default object ACL entry on the specified bucket. This method supports patch semantics.
     * @param {String} bucket Name of a bucket.
     * @param {String} entity The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {module:model/ObjectAccessControl} [objectAccessControl] 
     * @param {module:api/DefaultObjectAccessControlsApi~storageDefaultObjectAccessControlsPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ObjectAccessControl}
     */
    storageDefaultObjectAccessControlsPatch(bucket, entity, opts, callback) {
      opts = opts || {};
      let postBody = opts['objectAccessControl'];
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageDefaultObjectAccessControlsPatch");
      }
      // verify the required parameter 'entity' is set
      if (entity === undefined || entity === null) {
        throw new Error("Missing the required parameter 'entity' when calling storageDefaultObjectAccessControlsPatch");
      }

      let pathParams = {
        'bucket': bucket,
        'entity': entity
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ObjectAccessControl;
      return this.apiClient.callApi(
        '/b/{bucket}/defaultObjectAcl/{entity}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageDefaultObjectAccessControlsUpdate operation.
     * @callback module:api/DefaultObjectAccessControlsApi~storageDefaultObjectAccessControlsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ObjectAccessControl} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a default object ACL entry on the specified bucket.
     * @param {String} bucket Name of a bucket.
     * @param {String} entity The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {module:model/ObjectAccessControl} [objectAccessControl] 
     * @param {module:api/DefaultObjectAccessControlsApi~storageDefaultObjectAccessControlsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ObjectAccessControl}
     */
    storageDefaultObjectAccessControlsUpdate(bucket, entity, opts, callback) {
      opts = opts || {};
      let postBody = opts['objectAccessControl'];
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageDefaultObjectAccessControlsUpdate");
      }
      // verify the required parameter 'entity' is set
      if (entity === undefined || entity === null) {
        throw new Error("Missing the required parameter 'entity' when calling storageDefaultObjectAccessControlsUpdate");
      }

      let pathParams = {
        'bucket': bucket,
        'entity': entity
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ObjectAccessControl;
      return this.apiClient.callApi(
        '/b/{bucket}/defaultObjectAcl/{entity}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
