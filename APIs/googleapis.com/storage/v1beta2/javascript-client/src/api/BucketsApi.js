/**
 * Cloud Storage JSON API
 * Lets you store and retrieve potentially-large, immutable data objects.
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Bucket from '../model/Bucket';
import Buckets from '../model/Buckets';

/**
* Buckets service.
* @module api/BucketsApi
* @version v1beta2
*/
export default class BucketsApi {

    /**
    * Constructs a new BucketsApi. 
    * @alias module:api/BucketsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the storageBucketsDelete operation.
     * @callback module:api/BucketsApi~storageBucketsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Permanently deletes an empty bucket.
     * @param {String} bucket Name of a bucket.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [ifMetagenerationMatch] Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value.
     * @param {String} [ifMetagenerationNotMatch] Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value.
     * @param {module:api/BucketsApi~storageBucketsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    storageBucketsDelete(bucket, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageBucketsDelete");
      }

      let pathParams = {
        'bucket': bucket
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'ifMetagenerationMatch': opts['ifMetagenerationMatch'],
        'ifMetagenerationNotMatch': opts['ifMetagenerationNotMatch']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/b/{bucket}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageBucketsGet operation.
     * @callback module:api/BucketsApi~storageBucketsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Bucket} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns metadata for the specified bucket.
     * @param {String} bucket Name of a bucket.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [ifMetagenerationMatch] Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value.
     * @param {String} [ifMetagenerationNotMatch] Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value.
     * @param {module:model/String} [projection] Set of properties to return. Defaults to noAcl.
     * @param {module:api/BucketsApi~storageBucketsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Bucket}
     */
    storageBucketsGet(bucket, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageBucketsGet");
      }

      let pathParams = {
        'bucket': bucket
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'ifMetagenerationMatch': opts['ifMetagenerationMatch'],
        'ifMetagenerationNotMatch': opts['ifMetagenerationNotMatch'],
        'projection': opts['projection']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Bucket;
      return this.apiClient.callApi(
        '/b/{bucket}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageBucketsInsert operation.
     * @callback module:api/BucketsApi~storageBucketsInsertCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Bucket} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new bucket.
     * @param {String} project A valid API project identifier.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {module:model/String} [projection] Set of properties to return. Defaults to noAcl, unless the bucket resource specifies acl or defaultObjectAcl properties, when it defaults to full.
     * @param {module:model/Bucket} [bucket] 
     * @param {module:api/BucketsApi~storageBucketsInsertCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Bucket}
     */
    storageBucketsInsert(project, opts, callback) {
      opts = opts || {};
      let postBody = opts['bucket'];
      // verify the required parameter 'project' is set
      if (project === undefined || project === null) {
        throw new Error("Missing the required parameter 'project' when calling storageBucketsInsert");
      }

      let pathParams = {
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'project': project,
        'projection': opts['projection']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Bucket;
      return this.apiClient.callApi(
        '/b', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageBucketsList operation.
     * @callback module:api/BucketsApi~storageBucketsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Buckets} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a list of buckets for a given project.
     * @param {String} project A valid API project identifier.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {Number} [maxResults] Maximum number of buckets to return.
     * @param {String} [pageToken] A previously-returned page token representing part of the larger set of results to view.
     * @param {module:model/String} [projection] Set of properties to return. Defaults to noAcl.
     * @param {module:api/BucketsApi~storageBucketsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Buckets}
     */
    storageBucketsList(project, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'project' is set
      if (project === undefined || project === null) {
        throw new Error("Missing the required parameter 'project' when calling storageBucketsList");
      }

      let pathParams = {
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'project': project,
        'maxResults': opts['maxResults'],
        'pageToken': opts['pageToken'],
        'projection': opts['projection']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Buckets;
      return this.apiClient.callApi(
        '/b', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageBucketsPatch operation.
     * @callback module:api/BucketsApi~storageBucketsPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Bucket} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a bucket. This method supports patch semantics.
     * @param {String} bucket Name of a bucket.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [ifMetagenerationMatch] Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value.
     * @param {String} [ifMetagenerationNotMatch] Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value.
     * @param {module:model/String} [projection] Set of properties to return. Defaults to full.
     * @param {module:model/Bucket} [bucket2] 
     * @param {module:api/BucketsApi~storageBucketsPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Bucket}
     */
    storageBucketsPatch(bucket, opts, callback) {
      opts = opts || {};
      let postBody = opts['bucket2'];
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageBucketsPatch");
      }

      let pathParams = {
        'bucket': bucket
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'ifMetagenerationMatch': opts['ifMetagenerationMatch'],
        'ifMetagenerationNotMatch': opts['ifMetagenerationNotMatch'],
        'projection': opts['projection']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Bucket;
      return this.apiClient.callApi(
        '/b/{bucket}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageBucketsUpdate operation.
     * @callback module:api/BucketsApi~storageBucketsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Bucket} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a bucket.
     * @param {String} bucket Name of a bucket.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [ifMetagenerationMatch] Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value.
     * @param {String} [ifMetagenerationNotMatch] Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value.
     * @param {module:model/String} [projection] Set of properties to return. Defaults to full.
     * @param {module:model/Bucket} [bucket2] 
     * @param {module:api/BucketsApi~storageBucketsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Bucket}
     */
    storageBucketsUpdate(bucket, opts, callback) {
      opts = opts || {};
      let postBody = opts['bucket2'];
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageBucketsUpdate");
      }

      let pathParams = {
        'bucket': bucket
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'ifMetagenerationMatch': opts['ifMetagenerationMatch'],
        'ifMetagenerationNotMatch': opts['ifMetagenerationNotMatch'],
        'projection': opts['projection']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Bucket;
      return this.apiClient.callApi(
        '/b/{bucket}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
