/**
 * Cloud Storage JSON API
 * Lets you store and retrieve potentially-large, immutable data objects.
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Channel from '../model/Channel';
import ComposeRequest from '../model/ComposeRequest';
import ModelObject from '../model/ModelObject';
import Objects from '../model/Objects';

/**
* Objects service.
* @module api/ObjectsApi
* @version v1beta2
*/
export default class ObjectsApi {

    /**
    * Constructs a new ObjectsApi. 
    * @alias module:api/ObjectsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the storageObjectsCompose operation.
     * @callback module:api/ObjectsApi~storageObjectsComposeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Concatenates a list of existing objects into a new object in the same bucket.
     * @param {String} destinationBucket Name of the bucket containing the source objects. The destination object is stored in this bucket.
     * @param {String} destinationObject Name of the new object.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [ifGenerationMatch] Makes the operation conditional on whether the object's current generation matches the given value.
     * @param {String} [ifMetagenerationMatch] Makes the operation conditional on whether the object's current metageneration matches the given value.
     * @param {module:model/ComposeRequest} [composeRequest] 
     * @param {module:api/ObjectsApi~storageObjectsComposeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelObject}
     */
    storageObjectsCompose(destinationBucket, destinationObject, opts, callback) {
      opts = opts || {};
      let postBody = opts['composeRequest'];
      // verify the required parameter 'destinationBucket' is set
      if (destinationBucket === undefined || destinationBucket === null) {
        throw new Error("Missing the required parameter 'destinationBucket' when calling storageObjectsCompose");
      }
      // verify the required parameter 'destinationObject' is set
      if (destinationObject === undefined || destinationObject === null) {
        throw new Error("Missing the required parameter 'destinationObject' when calling storageObjectsCompose");
      }

      let pathParams = {
        'destinationBucket': destinationBucket,
        'destinationObject': destinationObject
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'ifGenerationMatch': opts['ifGenerationMatch'],
        'ifMetagenerationMatch': opts['ifMetagenerationMatch']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ModelObject;
      return this.apiClient.callApi(
        '/b/{destinationBucket}/o/{destinationObject}/compose', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageObjectsCopy operation.
     * @callback module:api/ObjectsApi~storageObjectsCopyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Copies an object to a destination in the same location. Optionally overrides metadata.
     * @param {String} sourceBucket Name of the bucket in which to find the source object.
     * @param {String} sourceObject Name of the source object.
     * @param {String} destinationBucket Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.
     * @param {String} destinationObject Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [ifGenerationMatch] Makes the operation conditional on whether the destination object's current generation matches the given value.
     * @param {String} [ifGenerationNotMatch] Makes the operation conditional on whether the destination object's current generation does not match the given value.
     * @param {String} [ifMetagenerationMatch] Makes the operation conditional on whether the destination object's current metageneration matches the given value.
     * @param {String} [ifMetagenerationNotMatch] Makes the operation conditional on whether the destination object's current metageneration does not match the given value.
     * @param {String} [ifSourceGenerationMatch] Makes the operation conditional on whether the source object's generation matches the given value.
     * @param {String} [ifSourceGenerationNotMatch] Makes the operation conditional on whether the source object's generation does not match the given value.
     * @param {String} [ifSourceMetagenerationMatch] Makes the operation conditional on whether the source object's current metageneration matches the given value.
     * @param {String} [ifSourceMetagenerationNotMatch] Makes the operation conditional on whether the source object's current metageneration does not match the given value.
     * @param {module:model/String} [projection] Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
     * @param {String} [sourceGeneration] If present, selects a specific revision of the source object (as opposed to the latest version, the default).
     * @param {module:model/ModelObject} [modelObject] 
     * @param {module:api/ObjectsApi~storageObjectsCopyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelObject}
     */
    storageObjectsCopy(sourceBucket, sourceObject, destinationBucket, destinationObject, opts, callback) {
      opts = opts || {};
      let postBody = opts['modelObject'];
      // verify the required parameter 'sourceBucket' is set
      if (sourceBucket === undefined || sourceBucket === null) {
        throw new Error("Missing the required parameter 'sourceBucket' when calling storageObjectsCopy");
      }
      // verify the required parameter 'sourceObject' is set
      if (sourceObject === undefined || sourceObject === null) {
        throw new Error("Missing the required parameter 'sourceObject' when calling storageObjectsCopy");
      }
      // verify the required parameter 'destinationBucket' is set
      if (destinationBucket === undefined || destinationBucket === null) {
        throw new Error("Missing the required parameter 'destinationBucket' when calling storageObjectsCopy");
      }
      // verify the required parameter 'destinationObject' is set
      if (destinationObject === undefined || destinationObject === null) {
        throw new Error("Missing the required parameter 'destinationObject' when calling storageObjectsCopy");
      }

      let pathParams = {
        'sourceBucket': sourceBucket,
        'sourceObject': sourceObject,
        'destinationBucket': destinationBucket,
        'destinationObject': destinationObject
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'ifGenerationMatch': opts['ifGenerationMatch'],
        'ifGenerationNotMatch': opts['ifGenerationNotMatch'],
        'ifMetagenerationMatch': opts['ifMetagenerationMatch'],
        'ifMetagenerationNotMatch': opts['ifMetagenerationNotMatch'],
        'ifSourceGenerationMatch': opts['ifSourceGenerationMatch'],
        'ifSourceGenerationNotMatch': opts['ifSourceGenerationNotMatch'],
        'ifSourceMetagenerationMatch': opts['ifSourceMetagenerationMatch'],
        'ifSourceMetagenerationNotMatch': opts['ifSourceMetagenerationNotMatch'],
        'projection': opts['projection'],
        'sourceGeneration': opts['sourceGeneration']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ModelObject;
      return this.apiClient.callApi(
        '/b/{sourceBucket}/o/{sourceObject}/copyTo/b/{destinationBucket}/o/{destinationObject}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageObjectsDelete operation.
     * @callback module:api/ObjectsApi~storageObjectsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes data blobs and associated metadata. Deletions are permanent if versioning is not enabled for the bucket, or if the generation parameter is used.
     * @param {String} bucket Name of the bucket in which the object resides.
     * @param {String} object Name of the object.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [generation] If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default).
     * @param {String} [ifGenerationMatch] Makes the operation conditional on whether the object's current generation matches the given value.
     * @param {String} [ifGenerationNotMatch] Makes the operation conditional on whether the object's current generation does not match the given value.
     * @param {String} [ifMetagenerationMatch] Makes the operation conditional on whether the object's current metageneration matches the given value.
     * @param {String} [ifMetagenerationNotMatch] Makes the operation conditional on whether the object's current metageneration does not match the given value.
     * @param {module:api/ObjectsApi~storageObjectsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    storageObjectsDelete(bucket, object, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageObjectsDelete");
      }
      // verify the required parameter 'object' is set
      if (object === undefined || object === null) {
        throw new Error("Missing the required parameter 'object' when calling storageObjectsDelete");
      }

      let pathParams = {
        'bucket': bucket,
        'object': object
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'generation': opts['generation'],
        'ifGenerationMatch': opts['ifGenerationMatch'],
        'ifGenerationNotMatch': opts['ifGenerationNotMatch'],
        'ifMetagenerationMatch': opts['ifMetagenerationMatch'],
        'ifMetagenerationNotMatch': opts['ifMetagenerationNotMatch']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/b/{bucket}/o/{object}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageObjectsGet operation.
     * @callback module:api/ObjectsApi~storageObjectsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves objects or their associated metadata.
     * @param {String} bucket Name of the bucket in which the object resides.
     * @param {String} object Name of the object.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [generation] If present, selects a specific revision of this object (as opposed to the latest version, the default).
     * @param {String} [ifGenerationMatch] Makes the operation conditional on whether the object's generation matches the given value.
     * @param {String} [ifGenerationNotMatch] Makes the operation conditional on whether the object's generation does not match the given value.
     * @param {String} [ifMetagenerationMatch] Makes the operation conditional on whether the object's current metageneration matches the given value.
     * @param {String} [ifMetagenerationNotMatch] Makes the operation conditional on whether the object's current metageneration does not match the given value.
     * @param {module:model/String} [projection] Set of properties to return. Defaults to noAcl.
     * @param {module:api/ObjectsApi~storageObjectsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelObject}
     */
    storageObjectsGet(bucket, object, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageObjectsGet");
      }
      // verify the required parameter 'object' is set
      if (object === undefined || object === null) {
        throw new Error("Missing the required parameter 'object' when calling storageObjectsGet");
      }

      let pathParams = {
        'bucket': bucket,
        'object': object
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'generation': opts['generation'],
        'ifGenerationMatch': opts['ifGenerationMatch'],
        'ifGenerationNotMatch': opts['ifGenerationNotMatch'],
        'ifMetagenerationMatch': opts['ifMetagenerationMatch'],
        'ifMetagenerationNotMatch': opts['ifMetagenerationNotMatch'],
        'projection': opts['projection']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModelObject;
      return this.apiClient.callApi(
        '/b/{bucket}/o/{object}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageObjectsInsert operation.
     * @callback module:api/ObjectsApi~storageObjectsInsertCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Stores new data blobs and associated metadata.
     * @param {String} bucket Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [ifGenerationMatch] Makes the operation conditional on whether the object's current generation matches the given value.
     * @param {String} [ifGenerationNotMatch] Makes the operation conditional on whether the object's current generation does not match the given value.
     * @param {String} [ifMetagenerationMatch] Makes the operation conditional on whether the object's current metageneration matches the given value.
     * @param {String} [ifMetagenerationNotMatch] Makes the operation conditional on whether the object's current metageneration does not match the given value.
     * @param {String} [name] Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.
     * @param {module:model/String} [projection] Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
     * @param {module:model/ModelObject} [modelObject] 
     * @param {module:api/ObjectsApi~storageObjectsInsertCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelObject}
     */
    storageObjectsInsert(bucket, opts, callback) {
      opts = opts || {};
      let postBody = opts['modelObject'];
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageObjectsInsert");
      }

      let pathParams = {
        'bucket': bucket
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'ifGenerationMatch': opts['ifGenerationMatch'],
        'ifGenerationNotMatch': opts['ifGenerationNotMatch'],
        'ifMetagenerationMatch': opts['ifMetagenerationMatch'],
        'ifMetagenerationNotMatch': opts['ifMetagenerationNotMatch'],
        'name': opts['name'],
        'projection': opts['projection']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/octet-stream'];
      let accepts = ['application/json'];
      let returnType = ModelObject;
      return this.apiClient.callApi(
        '/b/{bucket}/o', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageObjectsList operation.
     * @callback module:api/ObjectsApi~storageObjectsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Objects} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a list of objects matching the criteria.
     * @param {String} bucket Name of the bucket in which to look for objects.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [delimiter] Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.
     * @param {Number} [maxResults] Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested.
     * @param {String} [pageToken] A previously-returned page token representing part of the larger set of results to view.
     * @param {String} [prefix] Filter results to objects whose names begin with this prefix.
     * @param {module:model/String} [projection] Set of properties to return. Defaults to noAcl.
     * @param {Boolean} [versions] If true, lists all versions of a file as distinct results.
     * @param {module:api/ObjectsApi~storageObjectsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Objects}
     */
    storageObjectsList(bucket, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageObjectsList");
      }

      let pathParams = {
        'bucket': bucket
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'delimiter': opts['delimiter'],
        'maxResults': opts['maxResults'],
        'pageToken': opts['pageToken'],
        'prefix': opts['prefix'],
        'projection': opts['projection'],
        'versions': opts['versions']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Objects;
      return this.apiClient.callApi(
        '/b/{bucket}/o', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageObjectsPatch operation.
     * @callback module:api/ObjectsApi~storageObjectsPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a data blob's associated metadata. This method supports patch semantics.
     * @param {String} bucket Name of the bucket in which the object resides.
     * @param {String} object Name of the object.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [generation] If present, selects a specific revision of this object (as opposed to the latest version, the default).
     * @param {String} [ifGenerationMatch] Makes the operation conditional on whether the object's current generation matches the given value.
     * @param {String} [ifGenerationNotMatch] Makes the operation conditional on whether the object's current generation does not match the given value.
     * @param {String} [ifMetagenerationMatch] Makes the operation conditional on whether the object's current metageneration matches the given value.
     * @param {String} [ifMetagenerationNotMatch] Makes the operation conditional on whether the object's current metageneration does not match the given value.
     * @param {module:model/String} [projection] Set of properties to return. Defaults to full.
     * @param {module:model/ModelObject} [modelObject] 
     * @param {module:api/ObjectsApi~storageObjectsPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelObject}
     */
    storageObjectsPatch(bucket, object, opts, callback) {
      opts = opts || {};
      let postBody = opts['modelObject'];
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageObjectsPatch");
      }
      // verify the required parameter 'object' is set
      if (object === undefined || object === null) {
        throw new Error("Missing the required parameter 'object' when calling storageObjectsPatch");
      }

      let pathParams = {
        'bucket': bucket,
        'object': object
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'generation': opts['generation'],
        'ifGenerationMatch': opts['ifGenerationMatch'],
        'ifGenerationNotMatch': opts['ifGenerationNotMatch'],
        'ifMetagenerationMatch': opts['ifMetagenerationMatch'],
        'ifMetagenerationNotMatch': opts['ifMetagenerationNotMatch'],
        'projection': opts['projection']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ModelObject;
      return this.apiClient.callApi(
        '/b/{bucket}/o/{object}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageObjectsUpdate operation.
     * @callback module:api/ObjectsApi~storageObjectsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a data blob's associated metadata.
     * @param {String} bucket Name of the bucket in which the object resides.
     * @param {String} object Name of the object.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [generation] If present, selects a specific revision of this object (as opposed to the latest version, the default).
     * @param {String} [ifGenerationMatch] Makes the operation conditional on whether the object's current generation matches the given value.
     * @param {String} [ifGenerationNotMatch] Makes the operation conditional on whether the object's current generation does not match the given value.
     * @param {String} [ifMetagenerationMatch] Makes the operation conditional on whether the object's current metageneration matches the given value.
     * @param {String} [ifMetagenerationNotMatch] Makes the operation conditional on whether the object's current metageneration does not match the given value.
     * @param {module:model/String} [projection] Set of properties to return. Defaults to full.
     * @param {module:model/ModelObject} [modelObject] 
     * @param {module:api/ObjectsApi~storageObjectsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelObject}
     */
    storageObjectsUpdate(bucket, object, opts, callback) {
      opts = opts || {};
      let postBody = opts['modelObject'];
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageObjectsUpdate");
      }
      // verify the required parameter 'object' is set
      if (object === undefined || object === null) {
        throw new Error("Missing the required parameter 'object' when calling storageObjectsUpdate");
      }

      let pathParams = {
        'bucket': bucket,
        'object': object
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'generation': opts['generation'],
        'ifGenerationMatch': opts['ifGenerationMatch'],
        'ifGenerationNotMatch': opts['ifGenerationNotMatch'],
        'ifMetagenerationMatch': opts['ifMetagenerationMatch'],
        'ifMetagenerationNotMatch': opts['ifMetagenerationNotMatch'],
        'projection': opts['projection']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ModelObject;
      return this.apiClient.callApi(
        '/b/{bucket}/o/{object}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageObjectsWatchAll operation.
     * @callback module:api/ObjectsApi~storageObjectsWatchAllCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Channel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Watch for changes on all objects in a bucket.
     * @param {String} bucket Name of the bucket in which to look for objects.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [delimiter] Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.
     * @param {Number} [maxResults] Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested.
     * @param {String} [pageToken] A previously-returned page token representing part of the larger set of results to view.
     * @param {String} [prefix] Filter results to objects whose names begin with this prefix.
     * @param {module:model/String} [projection] Set of properties to return. Defaults to noAcl.
     * @param {Boolean} [versions] If true, lists all versions of a file as distinct results.
     * @param {module:model/Channel} [channel] 
     * @param {module:api/ObjectsApi~storageObjectsWatchAllCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Channel}
     */
    storageObjectsWatchAll(bucket, opts, callback) {
      opts = opts || {};
      let postBody = opts['channel'];
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageObjectsWatchAll");
      }

      let pathParams = {
        'bucket': bucket
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'delimiter': opts['delimiter'],
        'maxResults': opts['maxResults'],
        'pageToken': opts['pageToken'],
        'prefix': opts['prefix'],
        'projection': opts['projection'],
        'versions': opts['versions']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Channel;
      return this.apiClient.callApi(
        '/b/{bucket}/o/watch', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
