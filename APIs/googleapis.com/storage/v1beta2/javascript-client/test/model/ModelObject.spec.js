/**
 * Cloud Storage JSON API
 * Lets you store and retrieve potentially-large, immutable data objects.
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudStorageJsonApi);
  }
}(this, function(expect, CloudStorageJsonApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudStorageJsonApi.ModelObject();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ModelObject', function() {
    it('should create an instance of ModelObject', function() {
      // uncomment below and update the code to test ModelObject
      //var instance = new CloudStorageJsonApi.ModelObject();
      //expect(instance).to.be.a(CloudStorageJsonApi.ModelObject);
    });

    it('should have the property acl (base name: "acl")', function() {
      // uncomment below and update the code to test the property acl
      //var instance = new CloudStorageJsonApi.ModelObject();
      //expect(instance).to.be();
    });

    it('should have the property bucket (base name: "bucket")', function() {
      // uncomment below and update the code to test the property bucket
      //var instance = new CloudStorageJsonApi.ModelObject();
      //expect(instance).to.be();
    });

    it('should have the property cacheControl (base name: "cacheControl")', function() {
      // uncomment below and update the code to test the property cacheControl
      //var instance = new CloudStorageJsonApi.ModelObject();
      //expect(instance).to.be();
    });

    it('should have the property componentCount (base name: "componentCount")', function() {
      // uncomment below and update the code to test the property componentCount
      //var instance = new CloudStorageJsonApi.ModelObject();
      //expect(instance).to.be();
    });

    it('should have the property contentDisposition (base name: "contentDisposition")', function() {
      // uncomment below and update the code to test the property contentDisposition
      //var instance = new CloudStorageJsonApi.ModelObject();
      //expect(instance).to.be();
    });

    it('should have the property contentEncoding (base name: "contentEncoding")', function() {
      // uncomment below and update the code to test the property contentEncoding
      //var instance = new CloudStorageJsonApi.ModelObject();
      //expect(instance).to.be();
    });

    it('should have the property contentLanguage (base name: "contentLanguage")', function() {
      // uncomment below and update the code to test the property contentLanguage
      //var instance = new CloudStorageJsonApi.ModelObject();
      //expect(instance).to.be();
    });

    it('should have the property contentType (base name: "contentType")', function() {
      // uncomment below and update the code to test the property contentType
      //var instance = new CloudStorageJsonApi.ModelObject();
      //expect(instance).to.be();
    });

    it('should have the property crc32c (base name: "crc32c")', function() {
      // uncomment below and update the code to test the property crc32c
      //var instance = new CloudStorageJsonApi.ModelObject();
      //expect(instance).to.be();
    });

    it('should have the property etag (base name: "etag")', function() {
      // uncomment below and update the code to test the property etag
      //var instance = new CloudStorageJsonApi.ModelObject();
      //expect(instance).to.be();
    });

    it('should have the property generation (base name: "generation")', function() {
      // uncomment below and update the code to test the property generation
      //var instance = new CloudStorageJsonApi.ModelObject();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new CloudStorageJsonApi.ModelObject();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new CloudStorageJsonApi.ModelObject();
      //expect(instance).to.be();
    });

    it('should have the property md5Hash (base name: "md5Hash")', function() {
      // uncomment below and update the code to test the property md5Hash
      //var instance = new CloudStorageJsonApi.ModelObject();
      //expect(instance).to.be();
    });

    it('should have the property mediaLink (base name: "mediaLink")', function() {
      // uncomment below and update the code to test the property mediaLink
      //var instance = new CloudStorageJsonApi.ModelObject();
      //expect(instance).to.be();
    });

    it('should have the property metadata (base name: "metadata")', function() {
      // uncomment below and update the code to test the property metadata
      //var instance = new CloudStorageJsonApi.ModelObject();
      //expect(instance).to.be();
    });

    it('should have the property metageneration (base name: "metageneration")', function() {
      // uncomment below and update the code to test the property metageneration
      //var instance = new CloudStorageJsonApi.ModelObject();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new CloudStorageJsonApi.ModelObject();
      //expect(instance).to.be();
    });

    it('should have the property owner (base name: "owner")', function() {
      // uncomment below and update the code to test the property owner
      //var instance = new CloudStorageJsonApi.ModelObject();
      //expect(instance).to.be();
    });

    it('should have the property selfLink (base name: "selfLink")', function() {
      // uncomment below and update the code to test the property selfLink
      //var instance = new CloudStorageJsonApi.ModelObject();
      //expect(instance).to.be();
    });

    it('should have the property size (base name: "size")', function() {
      // uncomment below and update the code to test the property size
      //var instance = new CloudStorageJsonApi.ModelObject();
      //expect(instance).to.be();
    });

    it('should have the property storageClass (base name: "storageClass")', function() {
      // uncomment below and update the code to test the property storageClass
      //var instance = new CloudStorageJsonApi.ModelObject();
      //expect(instance).to.be();
    });

    it('should have the property timeDeleted (base name: "timeDeleted")', function() {
      // uncomment below and update the code to test the property timeDeleted
      //var instance = new CloudStorageJsonApi.ModelObject();
      //expect(instance).to.be();
    });

    it('should have the property updated (base name: "updated")', function() {
      // uncomment below and update the code to test the property updated
      //var instance = new CloudStorageJsonApi.ModelObject();
      //expect(instance).to.be();
    });

  });

}));
