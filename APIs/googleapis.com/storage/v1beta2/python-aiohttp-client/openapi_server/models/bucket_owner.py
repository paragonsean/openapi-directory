# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BucketOwner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity: str=None, entity_id: str=None):
        """BucketOwner - a model defined in OpenAPI

        :param entity: The entity of this BucketOwner.
        :param entity_id: The entity_id of this BucketOwner.
        """
        self.openapi_types = {
            'entity': str,
            'entity_id': str
        }

        self.attribute_map = {
            'entity': 'entity',
            'entity_id': 'entityId'
        }

        self._entity = entity
        self._entity_id = entity_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BucketOwner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Bucket_owner of this BucketOwner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity(self):
        """Gets the entity of this BucketOwner.

        The entity, in the form group-groupId.

        :return: The entity of this BucketOwner.
        :rtype: str
        """
        return self._entity

    @entity.setter
    def entity(self, entity):
        """Sets the entity of this BucketOwner.

        The entity, in the form group-groupId.

        :param entity: The entity of this BucketOwner.
        :type entity: str
        """

        self._entity = entity

    @property
    def entity_id(self):
        """Gets the entity_id of this BucketOwner.

        The ID for the entity.

        :return: The entity_id of this BucketOwner.
        :rtype: str
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this BucketOwner.

        The ID for the entity.

        :param entity_id: The entity_id of this BucketOwner.
        :type entity_id: str
        """

        self._entity_id = entity_id
