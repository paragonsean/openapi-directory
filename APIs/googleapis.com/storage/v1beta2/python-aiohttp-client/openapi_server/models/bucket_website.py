# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BucketWebsite(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, main_page_suffix: str=None, not_found_page: str=None):
        """BucketWebsite - a model defined in OpenAPI

        :param main_page_suffix: The main_page_suffix of this BucketWebsite.
        :param not_found_page: The not_found_page of this BucketWebsite.
        """
        self.openapi_types = {
            'main_page_suffix': str,
            'not_found_page': str
        }

        self.attribute_map = {
            'main_page_suffix': 'mainPageSuffix',
            'not_found_page': 'notFoundPage'
        }

        self._main_page_suffix = main_page_suffix
        self._not_found_page = not_found_page

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BucketWebsite':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Bucket_website of this BucketWebsite.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def main_page_suffix(self):
        """Gets the main_page_suffix of this BucketWebsite.

        Behaves as the bucket's directory index where missing objects are treated as potential directories.

        :return: The main_page_suffix of this BucketWebsite.
        :rtype: str
        """
        return self._main_page_suffix

    @main_page_suffix.setter
    def main_page_suffix(self, main_page_suffix):
        """Sets the main_page_suffix of this BucketWebsite.

        Behaves as the bucket's directory index where missing objects are treated as potential directories.

        :param main_page_suffix: The main_page_suffix of this BucketWebsite.
        :type main_page_suffix: str
        """

        self._main_page_suffix = main_page_suffix

    @property
    def not_found_page(self):
        """Gets the not_found_page of this BucketWebsite.

        The custom object to return when a requested resource is not found.

        :return: The not_found_page of this BucketWebsite.
        :rtype: str
        """
        return self._not_found_page

    @not_found_page.setter
    def not_found_page(self, not_found_page):
        """Sets the not_found_page of this BucketWebsite.

        The custom object to return when a requested resource is not found.

        :param not_found_page: The not_found_page of this BucketWebsite.
        :type not_found_page: str
        """

        self._not_found_page = not_found_page
