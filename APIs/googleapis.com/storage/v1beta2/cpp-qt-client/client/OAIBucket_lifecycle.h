/**
 * Cloud Storage JSON API
 * Lets you store and retrieve potentially-large, immutable data objects.
 *
 * The version of the OpenAPI document: v1beta2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBucket_lifecycle.h
 *
 * The bucket&#39;s lifecycle configuration. See object lifecycle management for more information.
 */

#ifndef OAIBucket_lifecycle_H
#define OAIBucket_lifecycle_H

#include <QJsonObject>

#include "OAIBucket_lifecycle_rule_inner.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBucket_lifecycle_rule_inner;

class OAIBucket_lifecycle : public OAIObject {
public:
    OAIBucket_lifecycle();
    OAIBucket_lifecycle(QString json);
    ~OAIBucket_lifecycle() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIBucket_lifecycle_rule_inner> getRule() const;
    void setRule(const QList<OAIBucket_lifecycle_rule_inner> &rule);
    bool is_rule_Set() const;
    bool is_rule_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIBucket_lifecycle_rule_inner> m_rule;
    bool m_rule_isSet;
    bool m_rule_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBucket_lifecycle)

#endif // OAIBucket_lifecycle_H
