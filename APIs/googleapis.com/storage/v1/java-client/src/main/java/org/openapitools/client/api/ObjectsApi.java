/*
 * Cloud Storage JSON API
 * Stores and retrieves potentially large, immutable data objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.BulkRestoreObjectsRequest;
import org.openapitools.client.model.Channel;
import org.openapitools.client.model.ComposeRequest;
import org.openapitools.client.model.GoogleLongrunningOperation;
import org.openapitools.client.model.ModelObject;
import java.util.Objects;
import org.openapitools.client.model.Policy;
import org.openapitools.client.model.RewriteResponse;
import org.openapitools.client.model.TestIamPermissionsResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ObjectsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ObjectsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ObjectsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for storageObjectsBulkRestore
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param bulkRestoreObjectsRequest  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsBulkRestoreCall(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, BulkRestoreObjectsRequest bulkRestoreObjectsRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = bulkRestoreObjectsRequest;

        // create path and map variables
        String localVarPath = "/b/{bucket}/o/bulkRestore"
            .replace("{" + "bucket" + "}", localVarApiClient.escapeString(bucket.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (userIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userIp", userIp));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageObjectsBulkRestoreValidateBeforeCall(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, BulkRestoreObjectsRequest bulkRestoreObjectsRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'bucket' is set
        if (bucket == null) {
            throw new ApiException("Missing the required parameter 'bucket' when calling storageObjectsBulkRestore(Async)");
        }

        return storageObjectsBulkRestoreCall(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, bulkRestoreObjectsRequest, _callback);

    }

    /**
     * 
     * Initiates a long-running bulk restore operation on the specified bucket.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param bulkRestoreObjectsRequest  (optional)
     * @return GoogleLongrunningOperation
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleLongrunningOperation storageObjectsBulkRestore(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, BulkRestoreObjectsRequest bulkRestoreObjectsRequest) throws ApiException {
        ApiResponse<GoogleLongrunningOperation> localVarResp = storageObjectsBulkRestoreWithHttpInfo(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, bulkRestoreObjectsRequest);
        return localVarResp.getData();
    }

    /**
     * 
     * Initiates a long-running bulk restore operation on the specified bucket.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param bulkRestoreObjectsRequest  (optional)
     * @return ApiResponse&lt;GoogleLongrunningOperation&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleLongrunningOperation> storageObjectsBulkRestoreWithHttpInfo(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, BulkRestoreObjectsRequest bulkRestoreObjectsRequest) throws ApiException {
        okhttp3.Call localVarCall = storageObjectsBulkRestoreValidateBeforeCall(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, bulkRestoreObjectsRequest, null);
        Type localVarReturnType = new TypeToken<GoogleLongrunningOperation>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Initiates a long-running bulk restore operation on the specified bucket.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param bulkRestoreObjectsRequest  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsBulkRestoreAsync(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, BulkRestoreObjectsRequest bulkRestoreObjectsRequest, final ApiCallback<GoogleLongrunningOperation> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageObjectsBulkRestoreValidateBeforeCall(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, bulkRestoreObjectsRequest, _callback);
        Type localVarReturnType = new TypeToken<GoogleLongrunningOperation>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageObjectsCompose
     * @param destinationBucket Name of the bucket containing the source objects. The destination object is stored in this bucket. (required)
     * @param destinationObject Name of the new object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param destinationPredefinedAcl Apply a predefined set of access controls to the destination object. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param kmsKeyName Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata&#39;s kms_key_name value, if any. (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param composeRequest  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsComposeCall(String destinationBucket, String destinationObject, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String destinationPredefinedAcl, String ifGenerationMatch, String ifMetagenerationMatch, String kmsKeyName, String userProject, ComposeRequest composeRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = composeRequest;

        // create path and map variables
        String localVarPath = "/b/{destinationBucket}/o/{destinationObject}/compose"
            .replace("{" + "destinationBucket" + "}", localVarApiClient.escapeString(destinationBucket.toString()))
            .replace("{" + "destinationObject" + "}", localVarApiClient.escapeString(destinationObject.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (userIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userIp", userIp));
        }

        if (destinationPredefinedAcl != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("destinationPredefinedAcl", destinationPredefinedAcl));
        }

        if (ifGenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationMatch", ifGenerationMatch));
        }

        if (ifMetagenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationMatch", ifMetagenerationMatch));
        }

        if (kmsKeyName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("kmsKeyName", kmsKeyName));
        }

        if (userProject != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userProject", userProject));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageObjectsComposeValidateBeforeCall(String destinationBucket, String destinationObject, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String destinationPredefinedAcl, String ifGenerationMatch, String ifMetagenerationMatch, String kmsKeyName, String userProject, ComposeRequest composeRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'destinationBucket' is set
        if (destinationBucket == null) {
            throw new ApiException("Missing the required parameter 'destinationBucket' when calling storageObjectsCompose(Async)");
        }

        // verify the required parameter 'destinationObject' is set
        if (destinationObject == null) {
            throw new ApiException("Missing the required parameter 'destinationObject' when calling storageObjectsCompose(Async)");
        }

        return storageObjectsComposeCall(destinationBucket, destinationObject, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, destinationPredefinedAcl, ifGenerationMatch, ifMetagenerationMatch, kmsKeyName, userProject, composeRequest, _callback);

    }

    /**
     * 
     * Concatenates a list of existing objects into a new object in the same bucket.
     * @param destinationBucket Name of the bucket containing the source objects. The destination object is stored in this bucket. (required)
     * @param destinationObject Name of the new object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param destinationPredefinedAcl Apply a predefined set of access controls to the destination object. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param kmsKeyName Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata&#39;s kms_key_name value, if any. (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param composeRequest  (optional)
     * @return ModelObject
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ModelObject storageObjectsCompose(String destinationBucket, String destinationObject, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String destinationPredefinedAcl, String ifGenerationMatch, String ifMetagenerationMatch, String kmsKeyName, String userProject, ComposeRequest composeRequest) throws ApiException {
        ApiResponse<ModelObject> localVarResp = storageObjectsComposeWithHttpInfo(destinationBucket, destinationObject, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, destinationPredefinedAcl, ifGenerationMatch, ifMetagenerationMatch, kmsKeyName, userProject, composeRequest);
        return localVarResp.getData();
    }

    /**
     * 
     * Concatenates a list of existing objects into a new object in the same bucket.
     * @param destinationBucket Name of the bucket containing the source objects. The destination object is stored in this bucket. (required)
     * @param destinationObject Name of the new object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param destinationPredefinedAcl Apply a predefined set of access controls to the destination object. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param kmsKeyName Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata&#39;s kms_key_name value, if any. (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param composeRequest  (optional)
     * @return ApiResponse&lt;ModelObject&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ModelObject> storageObjectsComposeWithHttpInfo(String destinationBucket, String destinationObject, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String destinationPredefinedAcl, String ifGenerationMatch, String ifMetagenerationMatch, String kmsKeyName, String userProject, ComposeRequest composeRequest) throws ApiException {
        okhttp3.Call localVarCall = storageObjectsComposeValidateBeforeCall(destinationBucket, destinationObject, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, destinationPredefinedAcl, ifGenerationMatch, ifMetagenerationMatch, kmsKeyName, userProject, composeRequest, null);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Concatenates a list of existing objects into a new object in the same bucket.
     * @param destinationBucket Name of the bucket containing the source objects. The destination object is stored in this bucket. (required)
     * @param destinationObject Name of the new object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param destinationPredefinedAcl Apply a predefined set of access controls to the destination object. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param kmsKeyName Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata&#39;s kms_key_name value, if any. (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param composeRequest  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsComposeAsync(String destinationBucket, String destinationObject, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String destinationPredefinedAcl, String ifGenerationMatch, String ifMetagenerationMatch, String kmsKeyName, String userProject, ComposeRequest composeRequest, final ApiCallback<ModelObject> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageObjectsComposeValidateBeforeCall(destinationBucket, destinationObject, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, destinationPredefinedAcl, ifGenerationMatch, ifMetagenerationMatch, kmsKeyName, userProject, composeRequest, _callback);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageObjectsCopy
     * @param sourceBucket Name of the bucket in which to find the source object. (required)
     * @param sourceObject Name of the source object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param destinationBucket Name of the bucket in which to store the new object. Overrides the provided object metadata&#39;s bucket value, if any.For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param destinationObject Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata&#39;s name value, if any. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param destinationKmsKeyName Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata&#39;s kms_key_name value, if any. (optional)
     * @param destinationPredefinedAcl Apply a predefined set of access controls to the destination object. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the destination object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the destination object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the destination object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the destination object&#39;s current metageneration does not match the given value. (optional)
     * @param ifSourceGenerationMatch Makes the operation conditional on whether the source object&#39;s current generation matches the given value. (optional)
     * @param ifSourceGenerationNotMatch Makes the operation conditional on whether the source object&#39;s current generation does not match the given value. (optional)
     * @param ifSourceMetagenerationMatch Makes the operation conditional on whether the source object&#39;s current metageneration matches the given value. (optional)
     * @param ifSourceMetagenerationNotMatch Makes the operation conditional on whether the source object&#39;s current metageneration does not match the given value. (optional)
     * @param projection Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full. (optional)
     * @param sourceGeneration If present, selects a specific revision of the source object (as opposed to the latest version, the default). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param modelObject  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsCopyCall(String sourceBucket, String sourceObject, String destinationBucket, String destinationObject, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String destinationKmsKeyName, String destinationPredefinedAcl, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String ifSourceGenerationMatch, String ifSourceGenerationNotMatch, String ifSourceMetagenerationMatch, String ifSourceMetagenerationNotMatch, String projection, String sourceGeneration, String userProject, ModelObject modelObject, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = modelObject;

        // create path and map variables
        String localVarPath = "/b/{sourceBucket}/o/{sourceObject}/copyTo/b/{destinationBucket}/o/{destinationObject}"
            .replace("{" + "sourceBucket" + "}", localVarApiClient.escapeString(sourceBucket.toString()))
            .replace("{" + "sourceObject" + "}", localVarApiClient.escapeString(sourceObject.toString()))
            .replace("{" + "destinationBucket" + "}", localVarApiClient.escapeString(destinationBucket.toString()))
            .replace("{" + "destinationObject" + "}", localVarApiClient.escapeString(destinationObject.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (userIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userIp", userIp));
        }

        if (destinationKmsKeyName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("destinationKmsKeyName", destinationKmsKeyName));
        }

        if (destinationPredefinedAcl != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("destinationPredefinedAcl", destinationPredefinedAcl));
        }

        if (ifGenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationMatch", ifGenerationMatch));
        }

        if (ifGenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationNotMatch", ifGenerationNotMatch));
        }

        if (ifMetagenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationMatch", ifMetagenerationMatch));
        }

        if (ifMetagenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationNotMatch", ifMetagenerationNotMatch));
        }

        if (ifSourceGenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifSourceGenerationMatch", ifSourceGenerationMatch));
        }

        if (ifSourceGenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifSourceGenerationNotMatch", ifSourceGenerationNotMatch));
        }

        if (ifSourceMetagenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifSourceMetagenerationMatch", ifSourceMetagenerationMatch));
        }

        if (ifSourceMetagenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifSourceMetagenerationNotMatch", ifSourceMetagenerationNotMatch));
        }

        if (projection != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("projection", projection));
        }

        if (sourceGeneration != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sourceGeneration", sourceGeneration));
        }

        if (userProject != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userProject", userProject));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageObjectsCopyValidateBeforeCall(String sourceBucket, String sourceObject, String destinationBucket, String destinationObject, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String destinationKmsKeyName, String destinationPredefinedAcl, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String ifSourceGenerationMatch, String ifSourceGenerationNotMatch, String ifSourceMetagenerationMatch, String ifSourceMetagenerationNotMatch, String projection, String sourceGeneration, String userProject, ModelObject modelObject, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'sourceBucket' is set
        if (sourceBucket == null) {
            throw new ApiException("Missing the required parameter 'sourceBucket' when calling storageObjectsCopy(Async)");
        }

        // verify the required parameter 'sourceObject' is set
        if (sourceObject == null) {
            throw new ApiException("Missing the required parameter 'sourceObject' when calling storageObjectsCopy(Async)");
        }

        // verify the required parameter 'destinationBucket' is set
        if (destinationBucket == null) {
            throw new ApiException("Missing the required parameter 'destinationBucket' when calling storageObjectsCopy(Async)");
        }

        // verify the required parameter 'destinationObject' is set
        if (destinationObject == null) {
            throw new ApiException("Missing the required parameter 'destinationObject' when calling storageObjectsCopy(Async)");
        }

        return storageObjectsCopyCall(sourceBucket, sourceObject, destinationBucket, destinationObject, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, destinationKmsKeyName, destinationPredefinedAcl, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, ifSourceGenerationMatch, ifSourceGenerationNotMatch, ifSourceMetagenerationMatch, ifSourceMetagenerationNotMatch, projection, sourceGeneration, userProject, modelObject, _callback);

    }

    /**
     * 
     * Copies a source object to a destination object. Optionally overrides metadata.
     * @param sourceBucket Name of the bucket in which to find the source object. (required)
     * @param sourceObject Name of the source object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param destinationBucket Name of the bucket in which to store the new object. Overrides the provided object metadata&#39;s bucket value, if any.For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param destinationObject Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata&#39;s name value, if any. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param destinationKmsKeyName Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata&#39;s kms_key_name value, if any. (optional)
     * @param destinationPredefinedAcl Apply a predefined set of access controls to the destination object. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the destination object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the destination object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the destination object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the destination object&#39;s current metageneration does not match the given value. (optional)
     * @param ifSourceGenerationMatch Makes the operation conditional on whether the source object&#39;s current generation matches the given value. (optional)
     * @param ifSourceGenerationNotMatch Makes the operation conditional on whether the source object&#39;s current generation does not match the given value. (optional)
     * @param ifSourceMetagenerationMatch Makes the operation conditional on whether the source object&#39;s current metageneration matches the given value. (optional)
     * @param ifSourceMetagenerationNotMatch Makes the operation conditional on whether the source object&#39;s current metageneration does not match the given value. (optional)
     * @param projection Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full. (optional)
     * @param sourceGeneration If present, selects a specific revision of the source object (as opposed to the latest version, the default). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param modelObject  (optional)
     * @return ModelObject
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ModelObject storageObjectsCopy(String sourceBucket, String sourceObject, String destinationBucket, String destinationObject, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String destinationKmsKeyName, String destinationPredefinedAcl, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String ifSourceGenerationMatch, String ifSourceGenerationNotMatch, String ifSourceMetagenerationMatch, String ifSourceMetagenerationNotMatch, String projection, String sourceGeneration, String userProject, ModelObject modelObject) throws ApiException {
        ApiResponse<ModelObject> localVarResp = storageObjectsCopyWithHttpInfo(sourceBucket, sourceObject, destinationBucket, destinationObject, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, destinationKmsKeyName, destinationPredefinedAcl, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, ifSourceGenerationMatch, ifSourceGenerationNotMatch, ifSourceMetagenerationMatch, ifSourceMetagenerationNotMatch, projection, sourceGeneration, userProject, modelObject);
        return localVarResp.getData();
    }

    /**
     * 
     * Copies a source object to a destination object. Optionally overrides metadata.
     * @param sourceBucket Name of the bucket in which to find the source object. (required)
     * @param sourceObject Name of the source object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param destinationBucket Name of the bucket in which to store the new object. Overrides the provided object metadata&#39;s bucket value, if any.For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param destinationObject Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata&#39;s name value, if any. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param destinationKmsKeyName Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata&#39;s kms_key_name value, if any. (optional)
     * @param destinationPredefinedAcl Apply a predefined set of access controls to the destination object. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the destination object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the destination object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the destination object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the destination object&#39;s current metageneration does not match the given value. (optional)
     * @param ifSourceGenerationMatch Makes the operation conditional on whether the source object&#39;s current generation matches the given value. (optional)
     * @param ifSourceGenerationNotMatch Makes the operation conditional on whether the source object&#39;s current generation does not match the given value. (optional)
     * @param ifSourceMetagenerationMatch Makes the operation conditional on whether the source object&#39;s current metageneration matches the given value. (optional)
     * @param ifSourceMetagenerationNotMatch Makes the operation conditional on whether the source object&#39;s current metageneration does not match the given value. (optional)
     * @param projection Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full. (optional)
     * @param sourceGeneration If present, selects a specific revision of the source object (as opposed to the latest version, the default). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param modelObject  (optional)
     * @return ApiResponse&lt;ModelObject&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ModelObject> storageObjectsCopyWithHttpInfo(String sourceBucket, String sourceObject, String destinationBucket, String destinationObject, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String destinationKmsKeyName, String destinationPredefinedAcl, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String ifSourceGenerationMatch, String ifSourceGenerationNotMatch, String ifSourceMetagenerationMatch, String ifSourceMetagenerationNotMatch, String projection, String sourceGeneration, String userProject, ModelObject modelObject) throws ApiException {
        okhttp3.Call localVarCall = storageObjectsCopyValidateBeforeCall(sourceBucket, sourceObject, destinationBucket, destinationObject, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, destinationKmsKeyName, destinationPredefinedAcl, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, ifSourceGenerationMatch, ifSourceGenerationNotMatch, ifSourceMetagenerationMatch, ifSourceMetagenerationNotMatch, projection, sourceGeneration, userProject, modelObject, null);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Copies a source object to a destination object. Optionally overrides metadata.
     * @param sourceBucket Name of the bucket in which to find the source object. (required)
     * @param sourceObject Name of the source object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param destinationBucket Name of the bucket in which to store the new object. Overrides the provided object metadata&#39;s bucket value, if any.For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param destinationObject Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata&#39;s name value, if any. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param destinationKmsKeyName Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata&#39;s kms_key_name value, if any. (optional)
     * @param destinationPredefinedAcl Apply a predefined set of access controls to the destination object. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the destination object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the destination object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the destination object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the destination object&#39;s current metageneration does not match the given value. (optional)
     * @param ifSourceGenerationMatch Makes the operation conditional on whether the source object&#39;s current generation matches the given value. (optional)
     * @param ifSourceGenerationNotMatch Makes the operation conditional on whether the source object&#39;s current generation does not match the given value. (optional)
     * @param ifSourceMetagenerationMatch Makes the operation conditional on whether the source object&#39;s current metageneration matches the given value. (optional)
     * @param ifSourceMetagenerationNotMatch Makes the operation conditional on whether the source object&#39;s current metageneration does not match the given value. (optional)
     * @param projection Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full. (optional)
     * @param sourceGeneration If present, selects a specific revision of the source object (as opposed to the latest version, the default). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param modelObject  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsCopyAsync(String sourceBucket, String sourceObject, String destinationBucket, String destinationObject, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String destinationKmsKeyName, String destinationPredefinedAcl, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String ifSourceGenerationMatch, String ifSourceGenerationNotMatch, String ifSourceMetagenerationMatch, String ifSourceMetagenerationNotMatch, String projection, String sourceGeneration, String userProject, ModelObject modelObject, final ApiCallback<ModelObject> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageObjectsCopyValidateBeforeCall(sourceBucket, sourceObject, destinationBucket, destinationObject, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, destinationKmsKeyName, destinationPredefinedAcl, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, ifSourceGenerationMatch, ifSourceGenerationNotMatch, ifSourceMetagenerationMatch, ifSourceMetagenerationNotMatch, projection, sourceGeneration, userProject, modelObject, _callback);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageObjectsDelete
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsDeleteCall(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String userProject, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/b/{bucket}/o/{object}"
            .replace("{" + "bucket" + "}", localVarApiClient.escapeString(bucket.toString()))
            .replace("{" + "object" + "}", localVarApiClient.escapeString(_object.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (userIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userIp", userIp));
        }

        if (generation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("generation", generation));
        }

        if (ifGenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationMatch", ifGenerationMatch));
        }

        if (ifGenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationNotMatch", ifGenerationNotMatch));
        }

        if (ifMetagenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationMatch", ifMetagenerationMatch));
        }

        if (ifMetagenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationNotMatch", ifMetagenerationNotMatch));
        }

        if (userProject != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userProject", userProject));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageObjectsDeleteValidateBeforeCall(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String userProject, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'bucket' is set
        if (bucket == null) {
            throw new ApiException("Missing the required parameter 'bucket' when calling storageObjectsDelete(Async)");
        }

        // verify the required parameter '_object' is set
        if (_object == null) {
            throw new ApiException("Missing the required parameter '_object' when calling storageObjectsDelete(Async)");
        }

        return storageObjectsDeleteCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, userProject, _callback);

    }

    /**
     * 
     * Deletes an object and its metadata. Deletions are permanent if versioning is not enabled for the bucket, or if the generation parameter is used.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public void storageObjectsDelete(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String userProject) throws ApiException {
        storageObjectsDeleteWithHttpInfo(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, userProject);
    }

    /**
     * 
     * Deletes an object and its metadata. Deletions are permanent if versioning is not enabled for the bucket, or if the generation parameter is used.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> storageObjectsDeleteWithHttpInfo(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String userProject) throws ApiException {
        okhttp3.Call localVarCall = storageObjectsDeleteValidateBeforeCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, userProject, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Deletes an object and its metadata. Deletions are permanent if versioning is not enabled for the bucket, or if the generation parameter is used.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsDeleteAsync(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String userProject, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageObjectsDeleteValidateBeforeCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, userProject, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageObjectsGet
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param projection Set of properties to return. Defaults to noAcl. (optional)
     * @param softDeleted If true, only soft-deleted object versions will be listed. The default is false. For more information, see Soft Delete. (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsGetCall(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String projection, Boolean softDeleted, String userProject, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/b/{bucket}/o/{object}"
            .replace("{" + "bucket" + "}", localVarApiClient.escapeString(bucket.toString()))
            .replace("{" + "object" + "}", localVarApiClient.escapeString(_object.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (userIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userIp", userIp));
        }

        if (generation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("generation", generation));
        }

        if (ifGenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationMatch", ifGenerationMatch));
        }

        if (ifGenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationNotMatch", ifGenerationNotMatch));
        }

        if (ifMetagenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationMatch", ifMetagenerationMatch));
        }

        if (ifMetagenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationNotMatch", ifMetagenerationNotMatch));
        }

        if (projection != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("projection", projection));
        }

        if (softDeleted != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("softDeleted", softDeleted));
        }

        if (userProject != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userProject", userProject));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageObjectsGetValidateBeforeCall(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String projection, Boolean softDeleted, String userProject, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'bucket' is set
        if (bucket == null) {
            throw new ApiException("Missing the required parameter 'bucket' when calling storageObjectsGet(Async)");
        }

        // verify the required parameter '_object' is set
        if (_object == null) {
            throw new ApiException("Missing the required parameter '_object' when calling storageObjectsGet(Async)");
        }

        return storageObjectsGetCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, projection, softDeleted, userProject, _callback);

    }

    /**
     * 
     * Retrieves an object or its metadata.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param projection Set of properties to return. Defaults to noAcl. (optional)
     * @param softDeleted If true, only soft-deleted object versions will be listed. The default is false. For more information, see Soft Delete. (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @return ModelObject
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ModelObject storageObjectsGet(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String projection, Boolean softDeleted, String userProject) throws ApiException {
        ApiResponse<ModelObject> localVarResp = storageObjectsGetWithHttpInfo(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, projection, softDeleted, userProject);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieves an object or its metadata.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param projection Set of properties to return. Defaults to noAcl. (optional)
     * @param softDeleted If true, only soft-deleted object versions will be listed. The default is false. For more information, see Soft Delete. (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @return ApiResponse&lt;ModelObject&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ModelObject> storageObjectsGetWithHttpInfo(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String projection, Boolean softDeleted, String userProject) throws ApiException {
        okhttp3.Call localVarCall = storageObjectsGetValidateBeforeCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, projection, softDeleted, userProject, null);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieves an object or its metadata.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param projection Set of properties to return. Defaults to noAcl. (optional)
     * @param softDeleted If true, only soft-deleted object versions will be listed. The default is false. For more information, see Soft Delete. (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsGetAsync(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String projection, Boolean softDeleted, String userProject, final ApiCallback<ModelObject> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageObjectsGetValidateBeforeCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, projection, softDeleted, userProject, _callback);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageObjectsGetIamPolicy
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsGetIamPolicyCall(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String userProject, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/b/{bucket}/o/{object}/iam"
            .replace("{" + "bucket" + "}", localVarApiClient.escapeString(bucket.toString()))
            .replace("{" + "object" + "}", localVarApiClient.escapeString(_object.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (userIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userIp", userIp));
        }

        if (generation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("generation", generation));
        }

        if (userProject != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userProject", userProject));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageObjectsGetIamPolicyValidateBeforeCall(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String userProject, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'bucket' is set
        if (bucket == null) {
            throw new ApiException("Missing the required parameter 'bucket' when calling storageObjectsGetIamPolicy(Async)");
        }

        // verify the required parameter '_object' is set
        if (_object == null) {
            throw new ApiException("Missing the required parameter '_object' when calling storageObjectsGetIamPolicy(Async)");
        }

        return storageObjectsGetIamPolicyCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, userProject, _callback);

    }

    /**
     * 
     * Returns an IAM policy for the specified object.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @return Policy
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public Policy storageObjectsGetIamPolicy(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String userProject) throws ApiException {
        ApiResponse<Policy> localVarResp = storageObjectsGetIamPolicyWithHttpInfo(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, userProject);
        return localVarResp.getData();
    }

    /**
     * 
     * Returns an IAM policy for the specified object.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @return ApiResponse&lt;Policy&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Policy> storageObjectsGetIamPolicyWithHttpInfo(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String userProject) throws ApiException {
        okhttp3.Call localVarCall = storageObjectsGetIamPolicyValidateBeforeCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, userProject, null);
        Type localVarReturnType = new TypeToken<Policy>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns an IAM policy for the specified object.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsGetIamPolicyAsync(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String userProject, final ApiCallback<Policy> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageObjectsGetIamPolicyValidateBeforeCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, userProject, _callback);
        Type localVarReturnType = new TypeToken<Policy>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageObjectsInsert
     * @param bucket Name of the bucket in which to store the new object. Overrides the provided object metadata&#39;s bucket value, if any. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param contentEncoding If set, sets the contentEncoding property of the final object to this value. Setting this parameter is equivalent to setting the contentEncoding metadata property. This can be useful when uploading an object with uploadType&#x3D;media to indicate the encoding of the content being uploaded. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param kmsKeyName Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata&#39;s kms_key_name value, if any. (optional)
     * @param name Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata&#39;s name value, if any. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (optional)
     * @param predefinedAcl Apply a predefined set of access controls to this object. (optional)
     * @param projection Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full. (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param modelObject  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsInsertCall(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String contentEncoding, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String kmsKeyName, String name, String predefinedAcl, String projection, String userProject, ModelObject modelObject, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = modelObject;

        // create path and map variables
        String localVarPath = "/b/{bucket}/o"
            .replace("{" + "bucket" + "}", localVarApiClient.escapeString(bucket.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (userIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userIp", userIp));
        }

        if (contentEncoding != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("contentEncoding", contentEncoding));
        }

        if (ifGenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationMatch", ifGenerationMatch));
        }

        if (ifGenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationNotMatch", ifGenerationNotMatch));
        }

        if (ifMetagenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationMatch", ifMetagenerationMatch));
        }

        if (ifMetagenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationNotMatch", ifMetagenerationNotMatch));
        }

        if (kmsKeyName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("kmsKeyName", kmsKeyName));
        }

        if (name != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("name", name));
        }

        if (predefinedAcl != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("predefinedAcl", predefinedAcl));
        }

        if (projection != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("projection", projection));
        }

        if (userProject != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userProject", userProject));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/octet-stream"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageObjectsInsertValidateBeforeCall(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String contentEncoding, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String kmsKeyName, String name, String predefinedAcl, String projection, String userProject, ModelObject modelObject, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'bucket' is set
        if (bucket == null) {
            throw new ApiException("Missing the required parameter 'bucket' when calling storageObjectsInsert(Async)");
        }

        return storageObjectsInsertCall(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, contentEncoding, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, kmsKeyName, name, predefinedAcl, projection, userProject, modelObject, _callback);

    }

    /**
     * 
     * Stores a new object and metadata.
     * @param bucket Name of the bucket in which to store the new object. Overrides the provided object metadata&#39;s bucket value, if any. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param contentEncoding If set, sets the contentEncoding property of the final object to this value. Setting this parameter is equivalent to setting the contentEncoding metadata property. This can be useful when uploading an object with uploadType&#x3D;media to indicate the encoding of the content being uploaded. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param kmsKeyName Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata&#39;s kms_key_name value, if any. (optional)
     * @param name Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata&#39;s name value, if any. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (optional)
     * @param predefinedAcl Apply a predefined set of access controls to this object. (optional)
     * @param projection Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full. (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param modelObject  (optional)
     * @return ModelObject
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ModelObject storageObjectsInsert(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String contentEncoding, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String kmsKeyName, String name, String predefinedAcl, String projection, String userProject, ModelObject modelObject) throws ApiException {
        ApiResponse<ModelObject> localVarResp = storageObjectsInsertWithHttpInfo(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, contentEncoding, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, kmsKeyName, name, predefinedAcl, projection, userProject, modelObject);
        return localVarResp.getData();
    }

    /**
     * 
     * Stores a new object and metadata.
     * @param bucket Name of the bucket in which to store the new object. Overrides the provided object metadata&#39;s bucket value, if any. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param contentEncoding If set, sets the contentEncoding property of the final object to this value. Setting this parameter is equivalent to setting the contentEncoding metadata property. This can be useful when uploading an object with uploadType&#x3D;media to indicate the encoding of the content being uploaded. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param kmsKeyName Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata&#39;s kms_key_name value, if any. (optional)
     * @param name Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata&#39;s name value, if any. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (optional)
     * @param predefinedAcl Apply a predefined set of access controls to this object. (optional)
     * @param projection Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full. (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param modelObject  (optional)
     * @return ApiResponse&lt;ModelObject&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ModelObject> storageObjectsInsertWithHttpInfo(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String contentEncoding, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String kmsKeyName, String name, String predefinedAcl, String projection, String userProject, ModelObject modelObject) throws ApiException {
        okhttp3.Call localVarCall = storageObjectsInsertValidateBeforeCall(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, contentEncoding, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, kmsKeyName, name, predefinedAcl, projection, userProject, modelObject, null);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Stores a new object and metadata.
     * @param bucket Name of the bucket in which to store the new object. Overrides the provided object metadata&#39;s bucket value, if any. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param contentEncoding If set, sets the contentEncoding property of the final object to this value. Setting this parameter is equivalent to setting the contentEncoding metadata property. This can be useful when uploading an object with uploadType&#x3D;media to indicate the encoding of the content being uploaded. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param kmsKeyName Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata&#39;s kms_key_name value, if any. (optional)
     * @param name Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata&#39;s name value, if any. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (optional)
     * @param predefinedAcl Apply a predefined set of access controls to this object. (optional)
     * @param projection Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full. (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param modelObject  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsInsertAsync(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String contentEncoding, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String kmsKeyName, String name, String predefinedAcl, String projection, String userProject, ModelObject modelObject, final ApiCallback<ModelObject> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageObjectsInsertValidateBeforeCall(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, contentEncoding, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, kmsKeyName, name, predefinedAcl, projection, userProject, modelObject, _callback);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageObjectsList
     * @param bucket Name of the bucket in which to look for objects. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param delimiter Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted. (optional)
     * @param endOffset Filter results to objects whose names are lexicographically before endOffset. If startOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive). (optional)
     * @param includeFoldersAsPrefixes Only applicable if delimiter is set to &#39;/&#39;. If true, will also include folders and managed folders (besides objects) in the returned prefixes. (optional)
     * @param includeTrailingDelimiter If true, objects that end in exactly one instance of delimiter will have their metadata included in items in addition to prefixes. (optional)
     * @param matchGlob Filter results to objects and prefixes that match this glob pattern. (optional)
     * @param maxResults Maximum number of items plus prefixes to return in a single page of responses. As duplicate prefixes are omitted, fewer total results may be returned than requested. The service will use this parameter or 1,000 items, whichever is smaller. (optional)
     * @param pageToken A previously-returned page token representing part of the larger set of results to view. (optional)
     * @param prefix Filter results to objects whose names begin with this prefix. (optional)
     * @param projection Set of properties to return. Defaults to noAcl. (optional)
     * @param softDeleted If true, only soft-deleted object versions will be listed. The default is false. For more information, see Soft Delete. (optional)
     * @param startOffset Filter results to objects whose names are lexicographically equal to or after startOffset. If endOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param versions If true, lists all versions of an object as distinct results. The default is false. For more information, see Object Versioning. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsListCall(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String delimiter, String endOffset, Boolean includeFoldersAsPrefixes, Boolean includeTrailingDelimiter, String matchGlob, Integer maxResults, String pageToken, String prefix, String projection, Boolean softDeleted, String startOffset, String userProject, Boolean versions, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/b/{bucket}/o"
            .replace("{" + "bucket" + "}", localVarApiClient.escapeString(bucket.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (userIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userIp", userIp));
        }

        if (delimiter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("delimiter", delimiter));
        }

        if (endOffset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("endOffset", endOffset));
        }

        if (includeFoldersAsPrefixes != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeFoldersAsPrefixes", includeFoldersAsPrefixes));
        }

        if (includeTrailingDelimiter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeTrailingDelimiter", includeTrailingDelimiter));
        }

        if (matchGlob != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("matchGlob", matchGlob));
        }

        if (maxResults != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxResults", maxResults));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageToken", pageToken));
        }

        if (prefix != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prefix", prefix));
        }

        if (projection != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("projection", projection));
        }

        if (softDeleted != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("softDeleted", softDeleted));
        }

        if (startOffset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("startOffset", startOffset));
        }

        if (userProject != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userProject", userProject));
        }

        if (versions != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("versions", versions));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageObjectsListValidateBeforeCall(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String delimiter, String endOffset, Boolean includeFoldersAsPrefixes, Boolean includeTrailingDelimiter, String matchGlob, Integer maxResults, String pageToken, String prefix, String projection, Boolean softDeleted, String startOffset, String userProject, Boolean versions, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'bucket' is set
        if (bucket == null) {
            throw new ApiException("Missing the required parameter 'bucket' when calling storageObjectsList(Async)");
        }

        return storageObjectsListCall(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, delimiter, endOffset, includeFoldersAsPrefixes, includeTrailingDelimiter, matchGlob, maxResults, pageToken, prefix, projection, softDeleted, startOffset, userProject, versions, _callback);

    }

    /**
     * 
     * Retrieves a list of objects matching the criteria.
     * @param bucket Name of the bucket in which to look for objects. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param delimiter Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted. (optional)
     * @param endOffset Filter results to objects whose names are lexicographically before endOffset. If startOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive). (optional)
     * @param includeFoldersAsPrefixes Only applicable if delimiter is set to &#39;/&#39;. If true, will also include folders and managed folders (besides objects) in the returned prefixes. (optional)
     * @param includeTrailingDelimiter If true, objects that end in exactly one instance of delimiter will have their metadata included in items in addition to prefixes. (optional)
     * @param matchGlob Filter results to objects and prefixes that match this glob pattern. (optional)
     * @param maxResults Maximum number of items plus prefixes to return in a single page of responses. As duplicate prefixes are omitted, fewer total results may be returned than requested. The service will use this parameter or 1,000 items, whichever is smaller. (optional)
     * @param pageToken A previously-returned page token representing part of the larger set of results to view. (optional)
     * @param prefix Filter results to objects whose names begin with this prefix. (optional)
     * @param projection Set of properties to return. Defaults to noAcl. (optional)
     * @param softDeleted If true, only soft-deleted object versions will be listed. The default is false. For more information, see Soft Delete. (optional)
     * @param startOffset Filter results to objects whose names are lexicographically equal to or after startOffset. If endOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param versions If true, lists all versions of an object as distinct results. The default is false. For more information, see Object Versioning. (optional)
     * @return Objects
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public Objects storageObjectsList(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String delimiter, String endOffset, Boolean includeFoldersAsPrefixes, Boolean includeTrailingDelimiter, String matchGlob, Integer maxResults, String pageToken, String prefix, String projection, Boolean softDeleted, String startOffset, String userProject, Boolean versions) throws ApiException {
        ApiResponse<Objects> localVarResp = storageObjectsListWithHttpInfo(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, delimiter, endOffset, includeFoldersAsPrefixes, includeTrailingDelimiter, matchGlob, maxResults, pageToken, prefix, projection, softDeleted, startOffset, userProject, versions);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieves a list of objects matching the criteria.
     * @param bucket Name of the bucket in which to look for objects. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param delimiter Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted. (optional)
     * @param endOffset Filter results to objects whose names are lexicographically before endOffset. If startOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive). (optional)
     * @param includeFoldersAsPrefixes Only applicable if delimiter is set to &#39;/&#39;. If true, will also include folders and managed folders (besides objects) in the returned prefixes. (optional)
     * @param includeTrailingDelimiter If true, objects that end in exactly one instance of delimiter will have their metadata included in items in addition to prefixes. (optional)
     * @param matchGlob Filter results to objects and prefixes that match this glob pattern. (optional)
     * @param maxResults Maximum number of items plus prefixes to return in a single page of responses. As duplicate prefixes are omitted, fewer total results may be returned than requested. The service will use this parameter or 1,000 items, whichever is smaller. (optional)
     * @param pageToken A previously-returned page token representing part of the larger set of results to view. (optional)
     * @param prefix Filter results to objects whose names begin with this prefix. (optional)
     * @param projection Set of properties to return. Defaults to noAcl. (optional)
     * @param softDeleted If true, only soft-deleted object versions will be listed. The default is false. For more information, see Soft Delete. (optional)
     * @param startOffset Filter results to objects whose names are lexicographically equal to or after startOffset. If endOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param versions If true, lists all versions of an object as distinct results. The default is false. For more information, see Object Versioning. (optional)
     * @return ApiResponse&lt;Objects&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Objects> storageObjectsListWithHttpInfo(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String delimiter, String endOffset, Boolean includeFoldersAsPrefixes, Boolean includeTrailingDelimiter, String matchGlob, Integer maxResults, String pageToken, String prefix, String projection, Boolean softDeleted, String startOffset, String userProject, Boolean versions) throws ApiException {
        okhttp3.Call localVarCall = storageObjectsListValidateBeforeCall(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, delimiter, endOffset, includeFoldersAsPrefixes, includeTrailingDelimiter, matchGlob, maxResults, pageToken, prefix, projection, softDeleted, startOffset, userProject, versions, null);
        Type localVarReturnType = new TypeToken<Objects>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieves a list of objects matching the criteria.
     * @param bucket Name of the bucket in which to look for objects. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param delimiter Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted. (optional)
     * @param endOffset Filter results to objects whose names are lexicographically before endOffset. If startOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive). (optional)
     * @param includeFoldersAsPrefixes Only applicable if delimiter is set to &#39;/&#39;. If true, will also include folders and managed folders (besides objects) in the returned prefixes. (optional)
     * @param includeTrailingDelimiter If true, objects that end in exactly one instance of delimiter will have their metadata included in items in addition to prefixes. (optional)
     * @param matchGlob Filter results to objects and prefixes that match this glob pattern. (optional)
     * @param maxResults Maximum number of items plus prefixes to return in a single page of responses. As duplicate prefixes are omitted, fewer total results may be returned than requested. The service will use this parameter or 1,000 items, whichever is smaller. (optional)
     * @param pageToken A previously-returned page token representing part of the larger set of results to view. (optional)
     * @param prefix Filter results to objects whose names begin with this prefix. (optional)
     * @param projection Set of properties to return. Defaults to noAcl. (optional)
     * @param softDeleted If true, only soft-deleted object versions will be listed. The default is false. For more information, see Soft Delete. (optional)
     * @param startOffset Filter results to objects whose names are lexicographically equal to or after startOffset. If endOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param versions If true, lists all versions of an object as distinct results. The default is false. For more information, see Object Versioning. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsListAsync(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String delimiter, String endOffset, Boolean includeFoldersAsPrefixes, Boolean includeTrailingDelimiter, String matchGlob, Integer maxResults, String pageToken, String prefix, String projection, Boolean softDeleted, String startOffset, String userProject, Boolean versions, final ApiCallback<Objects> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageObjectsListValidateBeforeCall(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, delimiter, endOffset, includeFoldersAsPrefixes, includeTrailingDelimiter, matchGlob, maxResults, pageToken, prefix, projection, softDeleted, startOffset, userProject, versions, _callback);
        Type localVarReturnType = new TypeToken<Objects>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageObjectsPatch
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param overrideUnlockedRetention Must be true to remove the retention configuration, reduce its unlocked retention period, or change its mode from unlocked to locked. (optional)
     * @param predefinedAcl Apply a predefined set of access controls to this object. (optional)
     * @param projection Set of properties to return. Defaults to full. (optional)
     * @param userProject The project to be billed for this request, for Requester Pays buckets. (optional)
     * @param modelObject  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsPatchCall(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, Boolean overrideUnlockedRetention, String predefinedAcl, String projection, String userProject, ModelObject modelObject, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = modelObject;

        // create path and map variables
        String localVarPath = "/b/{bucket}/o/{object}"
            .replace("{" + "bucket" + "}", localVarApiClient.escapeString(bucket.toString()))
            .replace("{" + "object" + "}", localVarApiClient.escapeString(_object.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (userIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userIp", userIp));
        }

        if (generation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("generation", generation));
        }

        if (ifGenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationMatch", ifGenerationMatch));
        }

        if (ifGenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationNotMatch", ifGenerationNotMatch));
        }

        if (ifMetagenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationMatch", ifMetagenerationMatch));
        }

        if (ifMetagenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationNotMatch", ifMetagenerationNotMatch));
        }

        if (overrideUnlockedRetention != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("overrideUnlockedRetention", overrideUnlockedRetention));
        }

        if (predefinedAcl != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("predefinedAcl", predefinedAcl));
        }

        if (projection != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("projection", projection));
        }

        if (userProject != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userProject", userProject));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageObjectsPatchValidateBeforeCall(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, Boolean overrideUnlockedRetention, String predefinedAcl, String projection, String userProject, ModelObject modelObject, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'bucket' is set
        if (bucket == null) {
            throw new ApiException("Missing the required parameter 'bucket' when calling storageObjectsPatch(Async)");
        }

        // verify the required parameter '_object' is set
        if (_object == null) {
            throw new ApiException("Missing the required parameter '_object' when calling storageObjectsPatch(Async)");
        }

        return storageObjectsPatchCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, overrideUnlockedRetention, predefinedAcl, projection, userProject, modelObject, _callback);

    }

    /**
     * 
     * Patches an object&#39;s metadata.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param overrideUnlockedRetention Must be true to remove the retention configuration, reduce its unlocked retention period, or change its mode from unlocked to locked. (optional)
     * @param predefinedAcl Apply a predefined set of access controls to this object. (optional)
     * @param projection Set of properties to return. Defaults to full. (optional)
     * @param userProject The project to be billed for this request, for Requester Pays buckets. (optional)
     * @param modelObject  (optional)
     * @return ModelObject
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ModelObject storageObjectsPatch(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, Boolean overrideUnlockedRetention, String predefinedAcl, String projection, String userProject, ModelObject modelObject) throws ApiException {
        ApiResponse<ModelObject> localVarResp = storageObjectsPatchWithHttpInfo(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, overrideUnlockedRetention, predefinedAcl, projection, userProject, modelObject);
        return localVarResp.getData();
    }

    /**
     * 
     * Patches an object&#39;s metadata.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param overrideUnlockedRetention Must be true to remove the retention configuration, reduce its unlocked retention period, or change its mode from unlocked to locked. (optional)
     * @param predefinedAcl Apply a predefined set of access controls to this object. (optional)
     * @param projection Set of properties to return. Defaults to full. (optional)
     * @param userProject The project to be billed for this request, for Requester Pays buckets. (optional)
     * @param modelObject  (optional)
     * @return ApiResponse&lt;ModelObject&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ModelObject> storageObjectsPatchWithHttpInfo(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, Boolean overrideUnlockedRetention, String predefinedAcl, String projection, String userProject, ModelObject modelObject) throws ApiException {
        okhttp3.Call localVarCall = storageObjectsPatchValidateBeforeCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, overrideUnlockedRetention, predefinedAcl, projection, userProject, modelObject, null);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Patches an object&#39;s metadata.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param overrideUnlockedRetention Must be true to remove the retention configuration, reduce its unlocked retention period, or change its mode from unlocked to locked. (optional)
     * @param predefinedAcl Apply a predefined set of access controls to this object. (optional)
     * @param projection Set of properties to return. Defaults to full. (optional)
     * @param userProject The project to be billed for this request, for Requester Pays buckets. (optional)
     * @param modelObject  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsPatchAsync(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, Boolean overrideUnlockedRetention, String predefinedAcl, String projection, String userProject, ModelObject modelObject, final ApiCallback<ModelObject> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageObjectsPatchValidateBeforeCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, overrideUnlockedRetention, predefinedAcl, projection, userProject, modelObject, _callback);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageObjectsRestore
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts. (required)
     * @param generation Selects a specific revision of this object. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param copySourceAcl If true, copies the source object&#39;s ACL; otherwise, uses the bucket&#39;s default object ACL. The default is false. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s one live generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether none of the object&#39;s live generations match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s one live metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether none of the object&#39;s live metagenerations match the given value. (optional)
     * @param projection Set of properties to return. Defaults to full. (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param modelObject  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsRestoreCall(String bucket, String _object, String generation, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, Boolean copySourceAcl, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String projection, String userProject, ModelObject modelObject, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = modelObject;

        // create path and map variables
        String localVarPath = "/b/{bucket}/o/{object}/restore"
            .replace("{" + "bucket" + "}", localVarApiClient.escapeString(bucket.toString()))
            .replace("{" + "object" + "}", localVarApiClient.escapeString(_object.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (userIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userIp", userIp));
        }

        if (copySourceAcl != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("copySourceAcl", copySourceAcl));
        }

        if (generation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("generation", generation));
        }

        if (ifGenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationMatch", ifGenerationMatch));
        }

        if (ifGenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationNotMatch", ifGenerationNotMatch));
        }

        if (ifMetagenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationMatch", ifMetagenerationMatch));
        }

        if (ifMetagenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationNotMatch", ifMetagenerationNotMatch));
        }

        if (projection != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("projection", projection));
        }

        if (userProject != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userProject", userProject));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageObjectsRestoreValidateBeforeCall(String bucket, String _object, String generation, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, Boolean copySourceAcl, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String projection, String userProject, ModelObject modelObject, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'bucket' is set
        if (bucket == null) {
            throw new ApiException("Missing the required parameter 'bucket' when calling storageObjectsRestore(Async)");
        }

        // verify the required parameter '_object' is set
        if (_object == null) {
            throw new ApiException("Missing the required parameter '_object' when calling storageObjectsRestore(Async)");
        }

        // verify the required parameter 'generation' is set
        if (generation == null) {
            throw new ApiException("Missing the required parameter 'generation' when calling storageObjectsRestore(Async)");
        }

        return storageObjectsRestoreCall(bucket, _object, generation, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, copySourceAcl, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, projection, userProject, modelObject, _callback);

    }

    /**
     * 
     * Restores a soft-deleted object.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts. (required)
     * @param generation Selects a specific revision of this object. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param copySourceAcl If true, copies the source object&#39;s ACL; otherwise, uses the bucket&#39;s default object ACL. The default is false. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s one live generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether none of the object&#39;s live generations match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s one live metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether none of the object&#39;s live metagenerations match the given value. (optional)
     * @param projection Set of properties to return. Defaults to full. (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param modelObject  (optional)
     * @return ModelObject
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ModelObject storageObjectsRestore(String bucket, String _object, String generation, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, Boolean copySourceAcl, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String projection, String userProject, ModelObject modelObject) throws ApiException {
        ApiResponse<ModelObject> localVarResp = storageObjectsRestoreWithHttpInfo(bucket, _object, generation, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, copySourceAcl, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, projection, userProject, modelObject);
        return localVarResp.getData();
    }

    /**
     * 
     * Restores a soft-deleted object.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts. (required)
     * @param generation Selects a specific revision of this object. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param copySourceAcl If true, copies the source object&#39;s ACL; otherwise, uses the bucket&#39;s default object ACL. The default is false. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s one live generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether none of the object&#39;s live generations match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s one live metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether none of the object&#39;s live metagenerations match the given value. (optional)
     * @param projection Set of properties to return. Defaults to full. (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param modelObject  (optional)
     * @return ApiResponse&lt;ModelObject&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ModelObject> storageObjectsRestoreWithHttpInfo(String bucket, String _object, String generation, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, Boolean copySourceAcl, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String projection, String userProject, ModelObject modelObject) throws ApiException {
        okhttp3.Call localVarCall = storageObjectsRestoreValidateBeforeCall(bucket, _object, generation, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, copySourceAcl, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, projection, userProject, modelObject, null);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Restores a soft-deleted object.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts. (required)
     * @param generation Selects a specific revision of this object. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param copySourceAcl If true, copies the source object&#39;s ACL; otherwise, uses the bucket&#39;s default object ACL. The default is false. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s one live generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether none of the object&#39;s live generations match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s one live metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether none of the object&#39;s live metagenerations match the given value. (optional)
     * @param projection Set of properties to return. Defaults to full. (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param modelObject  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsRestoreAsync(String bucket, String _object, String generation, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, Boolean copySourceAcl, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String projection, String userProject, ModelObject modelObject, final ApiCallback<ModelObject> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageObjectsRestoreValidateBeforeCall(bucket, _object, generation, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, copySourceAcl, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, projection, userProject, modelObject, _callback);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageObjectsRewrite
     * @param sourceBucket Name of the bucket in which to find the source object. (required)
     * @param sourceObject Name of the source object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param destinationBucket Name of the bucket in which to store the new object. Overrides the provided object metadata&#39;s bucket value, if any. (required)
     * @param destinationObject Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata&#39;s name value, if any. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param destinationKmsKeyName Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata&#39;s kms_key_name value, if any. (optional)
     * @param destinationPredefinedAcl Apply a predefined set of access controls to the destination object. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the destination object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the destination object&#39;s current metageneration does not match the given value. (optional)
     * @param ifSourceGenerationMatch Makes the operation conditional on whether the source object&#39;s current generation matches the given value. (optional)
     * @param ifSourceGenerationNotMatch Makes the operation conditional on whether the source object&#39;s current generation does not match the given value. (optional)
     * @param ifSourceMetagenerationMatch Makes the operation conditional on whether the source object&#39;s current metageneration matches the given value. (optional)
     * @param ifSourceMetagenerationNotMatch Makes the operation conditional on whether the source object&#39;s current metageneration does not match the given value. (optional)
     * @param maxBytesRewrittenPerCall The maximum number of bytes that will be rewritten per rewrite request. Most callers shouldn&#39;t need to specify this parameter - it is primarily in place to support testing. If specified the value must be an integral multiple of 1 MiB (1048576). Also, this only applies to requests where the source and destination span locations and/or storage classes. Finally, this value must not change across rewrite calls else you&#39;ll get an error that the rewriteToken is invalid. (optional)
     * @param projection Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full. (optional)
     * @param rewriteToken Include this field (from the previous rewrite response) on each rewrite request after the first one, until the rewrite response &#39;done&#39; flag is true. Calls that provide a rewriteToken can omit all other request fields, but if included those fields must match the values provided in the first rewrite request. (optional)
     * @param sourceGeneration If present, selects a specific revision of the source object (as opposed to the latest version, the default). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param modelObject  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsRewriteCall(String sourceBucket, String sourceObject, String destinationBucket, String destinationObject, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String destinationKmsKeyName, String destinationPredefinedAcl, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String ifSourceGenerationMatch, String ifSourceGenerationNotMatch, String ifSourceMetagenerationMatch, String ifSourceMetagenerationNotMatch, String maxBytesRewrittenPerCall, String projection, String rewriteToken, String sourceGeneration, String userProject, ModelObject modelObject, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = modelObject;

        // create path and map variables
        String localVarPath = "/b/{sourceBucket}/o/{sourceObject}/rewriteTo/b/{destinationBucket}/o/{destinationObject}"
            .replace("{" + "sourceBucket" + "}", localVarApiClient.escapeString(sourceBucket.toString()))
            .replace("{" + "sourceObject" + "}", localVarApiClient.escapeString(sourceObject.toString()))
            .replace("{" + "destinationBucket" + "}", localVarApiClient.escapeString(destinationBucket.toString()))
            .replace("{" + "destinationObject" + "}", localVarApiClient.escapeString(destinationObject.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (userIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userIp", userIp));
        }

        if (destinationKmsKeyName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("destinationKmsKeyName", destinationKmsKeyName));
        }

        if (destinationPredefinedAcl != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("destinationPredefinedAcl", destinationPredefinedAcl));
        }

        if (ifGenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationMatch", ifGenerationMatch));
        }

        if (ifGenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationNotMatch", ifGenerationNotMatch));
        }

        if (ifMetagenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationMatch", ifMetagenerationMatch));
        }

        if (ifMetagenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationNotMatch", ifMetagenerationNotMatch));
        }

        if (ifSourceGenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifSourceGenerationMatch", ifSourceGenerationMatch));
        }

        if (ifSourceGenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifSourceGenerationNotMatch", ifSourceGenerationNotMatch));
        }

        if (ifSourceMetagenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifSourceMetagenerationMatch", ifSourceMetagenerationMatch));
        }

        if (ifSourceMetagenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifSourceMetagenerationNotMatch", ifSourceMetagenerationNotMatch));
        }

        if (maxBytesRewrittenPerCall != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxBytesRewrittenPerCall", maxBytesRewrittenPerCall));
        }

        if (projection != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("projection", projection));
        }

        if (rewriteToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rewriteToken", rewriteToken));
        }

        if (sourceGeneration != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sourceGeneration", sourceGeneration));
        }

        if (userProject != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userProject", userProject));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageObjectsRewriteValidateBeforeCall(String sourceBucket, String sourceObject, String destinationBucket, String destinationObject, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String destinationKmsKeyName, String destinationPredefinedAcl, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String ifSourceGenerationMatch, String ifSourceGenerationNotMatch, String ifSourceMetagenerationMatch, String ifSourceMetagenerationNotMatch, String maxBytesRewrittenPerCall, String projection, String rewriteToken, String sourceGeneration, String userProject, ModelObject modelObject, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'sourceBucket' is set
        if (sourceBucket == null) {
            throw new ApiException("Missing the required parameter 'sourceBucket' when calling storageObjectsRewrite(Async)");
        }

        // verify the required parameter 'sourceObject' is set
        if (sourceObject == null) {
            throw new ApiException("Missing the required parameter 'sourceObject' when calling storageObjectsRewrite(Async)");
        }

        // verify the required parameter 'destinationBucket' is set
        if (destinationBucket == null) {
            throw new ApiException("Missing the required parameter 'destinationBucket' when calling storageObjectsRewrite(Async)");
        }

        // verify the required parameter 'destinationObject' is set
        if (destinationObject == null) {
            throw new ApiException("Missing the required parameter 'destinationObject' when calling storageObjectsRewrite(Async)");
        }

        return storageObjectsRewriteCall(sourceBucket, sourceObject, destinationBucket, destinationObject, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, destinationKmsKeyName, destinationPredefinedAcl, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, ifSourceGenerationMatch, ifSourceGenerationNotMatch, ifSourceMetagenerationMatch, ifSourceMetagenerationNotMatch, maxBytesRewrittenPerCall, projection, rewriteToken, sourceGeneration, userProject, modelObject, _callback);

    }

    /**
     * 
     * Rewrites a source object to a destination object. Optionally overrides metadata.
     * @param sourceBucket Name of the bucket in which to find the source object. (required)
     * @param sourceObject Name of the source object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param destinationBucket Name of the bucket in which to store the new object. Overrides the provided object metadata&#39;s bucket value, if any. (required)
     * @param destinationObject Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata&#39;s name value, if any. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param destinationKmsKeyName Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata&#39;s kms_key_name value, if any. (optional)
     * @param destinationPredefinedAcl Apply a predefined set of access controls to the destination object. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the destination object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the destination object&#39;s current metageneration does not match the given value. (optional)
     * @param ifSourceGenerationMatch Makes the operation conditional on whether the source object&#39;s current generation matches the given value. (optional)
     * @param ifSourceGenerationNotMatch Makes the operation conditional on whether the source object&#39;s current generation does not match the given value. (optional)
     * @param ifSourceMetagenerationMatch Makes the operation conditional on whether the source object&#39;s current metageneration matches the given value. (optional)
     * @param ifSourceMetagenerationNotMatch Makes the operation conditional on whether the source object&#39;s current metageneration does not match the given value. (optional)
     * @param maxBytesRewrittenPerCall The maximum number of bytes that will be rewritten per rewrite request. Most callers shouldn&#39;t need to specify this parameter - it is primarily in place to support testing. If specified the value must be an integral multiple of 1 MiB (1048576). Also, this only applies to requests where the source and destination span locations and/or storage classes. Finally, this value must not change across rewrite calls else you&#39;ll get an error that the rewriteToken is invalid. (optional)
     * @param projection Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full. (optional)
     * @param rewriteToken Include this field (from the previous rewrite response) on each rewrite request after the first one, until the rewrite response &#39;done&#39; flag is true. Calls that provide a rewriteToken can omit all other request fields, but if included those fields must match the values provided in the first rewrite request. (optional)
     * @param sourceGeneration If present, selects a specific revision of the source object (as opposed to the latest version, the default). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param modelObject  (optional)
     * @return RewriteResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public RewriteResponse storageObjectsRewrite(String sourceBucket, String sourceObject, String destinationBucket, String destinationObject, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String destinationKmsKeyName, String destinationPredefinedAcl, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String ifSourceGenerationMatch, String ifSourceGenerationNotMatch, String ifSourceMetagenerationMatch, String ifSourceMetagenerationNotMatch, String maxBytesRewrittenPerCall, String projection, String rewriteToken, String sourceGeneration, String userProject, ModelObject modelObject) throws ApiException {
        ApiResponse<RewriteResponse> localVarResp = storageObjectsRewriteWithHttpInfo(sourceBucket, sourceObject, destinationBucket, destinationObject, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, destinationKmsKeyName, destinationPredefinedAcl, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, ifSourceGenerationMatch, ifSourceGenerationNotMatch, ifSourceMetagenerationMatch, ifSourceMetagenerationNotMatch, maxBytesRewrittenPerCall, projection, rewriteToken, sourceGeneration, userProject, modelObject);
        return localVarResp.getData();
    }

    /**
     * 
     * Rewrites a source object to a destination object. Optionally overrides metadata.
     * @param sourceBucket Name of the bucket in which to find the source object. (required)
     * @param sourceObject Name of the source object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param destinationBucket Name of the bucket in which to store the new object. Overrides the provided object metadata&#39;s bucket value, if any. (required)
     * @param destinationObject Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata&#39;s name value, if any. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param destinationKmsKeyName Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata&#39;s kms_key_name value, if any. (optional)
     * @param destinationPredefinedAcl Apply a predefined set of access controls to the destination object. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the destination object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the destination object&#39;s current metageneration does not match the given value. (optional)
     * @param ifSourceGenerationMatch Makes the operation conditional on whether the source object&#39;s current generation matches the given value. (optional)
     * @param ifSourceGenerationNotMatch Makes the operation conditional on whether the source object&#39;s current generation does not match the given value. (optional)
     * @param ifSourceMetagenerationMatch Makes the operation conditional on whether the source object&#39;s current metageneration matches the given value. (optional)
     * @param ifSourceMetagenerationNotMatch Makes the operation conditional on whether the source object&#39;s current metageneration does not match the given value. (optional)
     * @param maxBytesRewrittenPerCall The maximum number of bytes that will be rewritten per rewrite request. Most callers shouldn&#39;t need to specify this parameter - it is primarily in place to support testing. If specified the value must be an integral multiple of 1 MiB (1048576). Also, this only applies to requests where the source and destination span locations and/or storage classes. Finally, this value must not change across rewrite calls else you&#39;ll get an error that the rewriteToken is invalid. (optional)
     * @param projection Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full. (optional)
     * @param rewriteToken Include this field (from the previous rewrite response) on each rewrite request after the first one, until the rewrite response &#39;done&#39; flag is true. Calls that provide a rewriteToken can omit all other request fields, but if included those fields must match the values provided in the first rewrite request. (optional)
     * @param sourceGeneration If present, selects a specific revision of the source object (as opposed to the latest version, the default). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param modelObject  (optional)
     * @return ApiResponse&lt;RewriteResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RewriteResponse> storageObjectsRewriteWithHttpInfo(String sourceBucket, String sourceObject, String destinationBucket, String destinationObject, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String destinationKmsKeyName, String destinationPredefinedAcl, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String ifSourceGenerationMatch, String ifSourceGenerationNotMatch, String ifSourceMetagenerationMatch, String ifSourceMetagenerationNotMatch, String maxBytesRewrittenPerCall, String projection, String rewriteToken, String sourceGeneration, String userProject, ModelObject modelObject) throws ApiException {
        okhttp3.Call localVarCall = storageObjectsRewriteValidateBeforeCall(sourceBucket, sourceObject, destinationBucket, destinationObject, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, destinationKmsKeyName, destinationPredefinedAcl, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, ifSourceGenerationMatch, ifSourceGenerationNotMatch, ifSourceMetagenerationMatch, ifSourceMetagenerationNotMatch, maxBytesRewrittenPerCall, projection, rewriteToken, sourceGeneration, userProject, modelObject, null);
        Type localVarReturnType = new TypeToken<RewriteResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Rewrites a source object to a destination object. Optionally overrides metadata.
     * @param sourceBucket Name of the bucket in which to find the source object. (required)
     * @param sourceObject Name of the source object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param destinationBucket Name of the bucket in which to store the new object. Overrides the provided object metadata&#39;s bucket value, if any. (required)
     * @param destinationObject Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata&#39;s name value, if any. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param destinationKmsKeyName Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata&#39;s kms_key_name value, if any. (optional)
     * @param destinationPredefinedAcl Apply a predefined set of access controls to the destination object. (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the destination object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the destination object&#39;s current metageneration does not match the given value. (optional)
     * @param ifSourceGenerationMatch Makes the operation conditional on whether the source object&#39;s current generation matches the given value. (optional)
     * @param ifSourceGenerationNotMatch Makes the operation conditional on whether the source object&#39;s current generation does not match the given value. (optional)
     * @param ifSourceMetagenerationMatch Makes the operation conditional on whether the source object&#39;s current metageneration matches the given value. (optional)
     * @param ifSourceMetagenerationNotMatch Makes the operation conditional on whether the source object&#39;s current metageneration does not match the given value. (optional)
     * @param maxBytesRewrittenPerCall The maximum number of bytes that will be rewritten per rewrite request. Most callers shouldn&#39;t need to specify this parameter - it is primarily in place to support testing. If specified the value must be an integral multiple of 1 MiB (1048576). Also, this only applies to requests where the source and destination span locations and/or storage classes. Finally, this value must not change across rewrite calls else you&#39;ll get an error that the rewriteToken is invalid. (optional)
     * @param projection Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full. (optional)
     * @param rewriteToken Include this field (from the previous rewrite response) on each rewrite request after the first one, until the rewrite response &#39;done&#39; flag is true. Calls that provide a rewriteToken can omit all other request fields, but if included those fields must match the values provided in the first rewrite request. (optional)
     * @param sourceGeneration If present, selects a specific revision of the source object (as opposed to the latest version, the default). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param modelObject  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsRewriteAsync(String sourceBucket, String sourceObject, String destinationBucket, String destinationObject, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String destinationKmsKeyName, String destinationPredefinedAcl, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, String ifSourceGenerationMatch, String ifSourceGenerationNotMatch, String ifSourceMetagenerationMatch, String ifSourceMetagenerationNotMatch, String maxBytesRewrittenPerCall, String projection, String rewriteToken, String sourceGeneration, String userProject, ModelObject modelObject, final ApiCallback<RewriteResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageObjectsRewriteValidateBeforeCall(sourceBucket, sourceObject, destinationBucket, destinationObject, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, destinationKmsKeyName, destinationPredefinedAcl, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, ifSourceGenerationMatch, ifSourceGenerationNotMatch, ifSourceMetagenerationMatch, ifSourceMetagenerationNotMatch, maxBytesRewrittenPerCall, projection, rewriteToken, sourceGeneration, userProject, modelObject, _callback);
        Type localVarReturnType = new TypeToken<RewriteResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageObjectsSetIamPolicy
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param policy  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsSetIamPolicyCall(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String userProject, Policy policy, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = policy;

        // create path and map variables
        String localVarPath = "/b/{bucket}/o/{object}/iam"
            .replace("{" + "bucket" + "}", localVarApiClient.escapeString(bucket.toString()))
            .replace("{" + "object" + "}", localVarApiClient.escapeString(_object.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (userIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userIp", userIp));
        }

        if (generation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("generation", generation));
        }

        if (userProject != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userProject", userProject));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageObjectsSetIamPolicyValidateBeforeCall(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String userProject, Policy policy, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'bucket' is set
        if (bucket == null) {
            throw new ApiException("Missing the required parameter 'bucket' when calling storageObjectsSetIamPolicy(Async)");
        }

        // verify the required parameter '_object' is set
        if (_object == null) {
            throw new ApiException("Missing the required parameter '_object' when calling storageObjectsSetIamPolicy(Async)");
        }

        return storageObjectsSetIamPolicyCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, userProject, policy, _callback);

    }

    /**
     * 
     * Updates an IAM policy for the specified object.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param policy  (optional)
     * @return Policy
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public Policy storageObjectsSetIamPolicy(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String userProject, Policy policy) throws ApiException {
        ApiResponse<Policy> localVarResp = storageObjectsSetIamPolicyWithHttpInfo(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, userProject, policy);
        return localVarResp.getData();
    }

    /**
     * 
     * Updates an IAM policy for the specified object.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param policy  (optional)
     * @return ApiResponse&lt;Policy&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Policy> storageObjectsSetIamPolicyWithHttpInfo(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String userProject, Policy policy) throws ApiException {
        okhttp3.Call localVarCall = storageObjectsSetIamPolicyValidateBeforeCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, userProject, policy, null);
        Type localVarReturnType = new TypeToken<Policy>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Updates an IAM policy for the specified object.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param policy  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsSetIamPolicyAsync(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String userProject, Policy policy, final ApiCallback<Policy> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageObjectsSetIamPolicyValidateBeforeCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, userProject, policy, _callback);
        Type localVarReturnType = new TypeToken<Policy>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageObjectsTestIamPermissions
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param permissions Permissions to test. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsTestIamPermissionsCall(String bucket, String _object, List<String> permissions, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String userProject, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/b/{bucket}/o/{object}/iam/testPermissions"
            .replace("{" + "bucket" + "}", localVarApiClient.escapeString(bucket.toString()))
            .replace("{" + "object" + "}", localVarApiClient.escapeString(_object.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (userIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userIp", userIp));
        }

        if (permissions != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "permissions", permissions));
        }

        if (generation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("generation", generation));
        }

        if (userProject != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userProject", userProject));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageObjectsTestIamPermissionsValidateBeforeCall(String bucket, String _object, List<String> permissions, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String userProject, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'bucket' is set
        if (bucket == null) {
            throw new ApiException("Missing the required parameter 'bucket' when calling storageObjectsTestIamPermissions(Async)");
        }

        // verify the required parameter '_object' is set
        if (_object == null) {
            throw new ApiException("Missing the required parameter '_object' when calling storageObjectsTestIamPermissions(Async)");
        }

        // verify the required parameter 'permissions' is set
        if (permissions == null) {
            throw new ApiException("Missing the required parameter 'permissions' when calling storageObjectsTestIamPermissions(Async)");
        }

        return storageObjectsTestIamPermissionsCall(bucket, _object, permissions, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, userProject, _callback);

    }

    /**
     * 
     * Tests a set of permissions on the given object to see which, if any, are held by the caller.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param permissions Permissions to test. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @return TestIamPermissionsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public TestIamPermissionsResponse storageObjectsTestIamPermissions(String bucket, String _object, List<String> permissions, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String userProject) throws ApiException {
        ApiResponse<TestIamPermissionsResponse> localVarResp = storageObjectsTestIamPermissionsWithHttpInfo(bucket, _object, permissions, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, userProject);
        return localVarResp.getData();
    }

    /**
     * 
     * Tests a set of permissions on the given object to see which, if any, are held by the caller.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param permissions Permissions to test. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @return ApiResponse&lt;TestIamPermissionsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<TestIamPermissionsResponse> storageObjectsTestIamPermissionsWithHttpInfo(String bucket, String _object, List<String> permissions, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String userProject) throws ApiException {
        okhttp3.Call localVarCall = storageObjectsTestIamPermissionsValidateBeforeCall(bucket, _object, permissions, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, userProject, null);
        Type localVarReturnType = new TypeToken<TestIamPermissionsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Tests a set of permissions on the given object to see which, if any, are held by the caller.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param permissions Permissions to test. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsTestIamPermissionsAsync(String bucket, String _object, List<String> permissions, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String userProject, final ApiCallback<TestIamPermissionsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageObjectsTestIamPermissionsValidateBeforeCall(bucket, _object, permissions, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, userProject, _callback);
        Type localVarReturnType = new TypeToken<TestIamPermissionsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageObjectsUpdate
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param overrideUnlockedRetention Must be true to remove the retention configuration, reduce its unlocked retention period, or change its mode from unlocked to locked. (optional)
     * @param predefinedAcl Apply a predefined set of access controls to this object. (optional)
     * @param projection Set of properties to return. Defaults to full. (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param modelObject  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsUpdateCall(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, Boolean overrideUnlockedRetention, String predefinedAcl, String projection, String userProject, ModelObject modelObject, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = modelObject;

        // create path and map variables
        String localVarPath = "/b/{bucket}/o/{object}"
            .replace("{" + "bucket" + "}", localVarApiClient.escapeString(bucket.toString()))
            .replace("{" + "object" + "}", localVarApiClient.escapeString(_object.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (userIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userIp", userIp));
        }

        if (generation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("generation", generation));
        }

        if (ifGenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationMatch", ifGenerationMatch));
        }

        if (ifGenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifGenerationNotMatch", ifGenerationNotMatch));
        }

        if (ifMetagenerationMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationMatch", ifMetagenerationMatch));
        }

        if (ifMetagenerationNotMatch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ifMetagenerationNotMatch", ifMetagenerationNotMatch));
        }

        if (overrideUnlockedRetention != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("overrideUnlockedRetention", overrideUnlockedRetention));
        }

        if (predefinedAcl != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("predefinedAcl", predefinedAcl));
        }

        if (projection != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("projection", projection));
        }

        if (userProject != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userProject", userProject));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageObjectsUpdateValidateBeforeCall(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, Boolean overrideUnlockedRetention, String predefinedAcl, String projection, String userProject, ModelObject modelObject, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'bucket' is set
        if (bucket == null) {
            throw new ApiException("Missing the required parameter 'bucket' when calling storageObjectsUpdate(Async)");
        }

        // verify the required parameter '_object' is set
        if (_object == null) {
            throw new ApiException("Missing the required parameter '_object' when calling storageObjectsUpdate(Async)");
        }

        return storageObjectsUpdateCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, overrideUnlockedRetention, predefinedAcl, projection, userProject, modelObject, _callback);

    }

    /**
     * 
     * Updates an object&#39;s metadata.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param overrideUnlockedRetention Must be true to remove the retention configuration, reduce its unlocked retention period, or change its mode from unlocked to locked. (optional)
     * @param predefinedAcl Apply a predefined set of access controls to this object. (optional)
     * @param projection Set of properties to return. Defaults to full. (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param modelObject  (optional)
     * @return ModelObject
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ModelObject storageObjectsUpdate(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, Boolean overrideUnlockedRetention, String predefinedAcl, String projection, String userProject, ModelObject modelObject) throws ApiException {
        ApiResponse<ModelObject> localVarResp = storageObjectsUpdateWithHttpInfo(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, overrideUnlockedRetention, predefinedAcl, projection, userProject, modelObject);
        return localVarResp.getData();
    }

    /**
     * 
     * Updates an object&#39;s metadata.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param overrideUnlockedRetention Must be true to remove the retention configuration, reduce its unlocked retention period, or change its mode from unlocked to locked. (optional)
     * @param predefinedAcl Apply a predefined set of access controls to this object. (optional)
     * @param projection Set of properties to return. Defaults to full. (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param modelObject  (optional)
     * @return ApiResponse&lt;ModelObject&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ModelObject> storageObjectsUpdateWithHttpInfo(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, Boolean overrideUnlockedRetention, String predefinedAcl, String projection, String userProject, ModelObject modelObject) throws ApiException {
        okhttp3.Call localVarCall = storageObjectsUpdateValidateBeforeCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, overrideUnlockedRetention, predefinedAcl, projection, userProject, modelObject, null);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Updates an object&#39;s metadata.
     * @param bucket Name of the bucket in which the object resides. (required)
     * @param _object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding). (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param generation If present, selects a specific revision of this object (as opposed to the latest version, the default). (optional)
     * @param ifGenerationMatch Makes the operation conditional on whether the object&#39;s current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object. (optional)
     * @param ifGenerationNotMatch Makes the operation conditional on whether the object&#39;s current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object. (optional)
     * @param ifMetagenerationMatch Makes the operation conditional on whether the object&#39;s current metageneration matches the given value. (optional)
     * @param ifMetagenerationNotMatch Makes the operation conditional on whether the object&#39;s current metageneration does not match the given value. (optional)
     * @param overrideUnlockedRetention Must be true to remove the retention configuration, reduce its unlocked retention period, or change its mode from unlocked to locked. (optional)
     * @param predefinedAcl Apply a predefined set of access controls to this object. (optional)
     * @param projection Set of properties to return. Defaults to full. (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param modelObject  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsUpdateAsync(String bucket, String _object, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String generation, String ifGenerationMatch, String ifGenerationNotMatch, String ifMetagenerationMatch, String ifMetagenerationNotMatch, Boolean overrideUnlockedRetention, String predefinedAcl, String projection, String userProject, ModelObject modelObject, final ApiCallback<ModelObject> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageObjectsUpdateValidateBeforeCall(bucket, _object, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, generation, ifGenerationMatch, ifGenerationNotMatch, ifMetagenerationMatch, ifMetagenerationNotMatch, overrideUnlockedRetention, predefinedAcl, projection, userProject, modelObject, _callback);
        Type localVarReturnType = new TypeToken<ModelObject>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageObjectsWatchAll
     * @param bucket Name of the bucket in which to look for objects. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param delimiter Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted. (optional)
     * @param endOffset Filter results to objects whose names are lexicographically before endOffset. If startOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive). (optional)
     * @param includeTrailingDelimiter If true, objects that end in exactly one instance of delimiter will have their metadata included in items in addition to prefixes. (optional)
     * @param maxResults Maximum number of items plus prefixes to return in a single page of responses. As duplicate prefixes are omitted, fewer total results may be returned than requested. The service will use this parameter or 1,000 items, whichever is smaller. (optional)
     * @param pageToken A previously-returned page token representing part of the larger set of results to view. (optional)
     * @param prefix Filter results to objects whose names begin with this prefix. (optional)
     * @param projection Set of properties to return. Defaults to noAcl. (optional)
     * @param startOffset Filter results to objects whose names are lexicographically equal to or after startOffset. If endOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param versions If true, lists all versions of an object as distinct results. The default is false. For more information, see Object Versioning. (optional)
     * @param channel  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsWatchAllCall(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String delimiter, String endOffset, Boolean includeTrailingDelimiter, Integer maxResults, String pageToken, String prefix, String projection, String startOffset, String userProject, Boolean versions, Channel channel, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = channel;

        // create path and map variables
        String localVarPath = "/b/{bucket}/o/watch"
            .replace("{" + "bucket" + "}", localVarApiClient.escapeString(bucket.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (userIp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userIp", userIp));
        }

        if (delimiter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("delimiter", delimiter));
        }

        if (endOffset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("endOffset", endOffset));
        }

        if (includeTrailingDelimiter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeTrailingDelimiter", includeTrailingDelimiter));
        }

        if (maxResults != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxResults", maxResults));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageToken", pageToken));
        }

        if (prefix != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prefix", prefix));
        }

        if (projection != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("projection", projection));
        }

        if (startOffset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("startOffset", startOffset));
        }

        if (userProject != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userProject", userProject));
        }

        if (versions != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("versions", versions));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageObjectsWatchAllValidateBeforeCall(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String delimiter, String endOffset, Boolean includeTrailingDelimiter, Integer maxResults, String pageToken, String prefix, String projection, String startOffset, String userProject, Boolean versions, Channel channel, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'bucket' is set
        if (bucket == null) {
            throw new ApiException("Missing the required parameter 'bucket' when calling storageObjectsWatchAll(Async)");
        }

        return storageObjectsWatchAllCall(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, delimiter, endOffset, includeTrailingDelimiter, maxResults, pageToken, prefix, projection, startOffset, userProject, versions, channel, _callback);

    }

    /**
     * 
     * Watch for changes on all objects in a bucket.
     * @param bucket Name of the bucket in which to look for objects. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param delimiter Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted. (optional)
     * @param endOffset Filter results to objects whose names are lexicographically before endOffset. If startOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive). (optional)
     * @param includeTrailingDelimiter If true, objects that end in exactly one instance of delimiter will have their metadata included in items in addition to prefixes. (optional)
     * @param maxResults Maximum number of items plus prefixes to return in a single page of responses. As duplicate prefixes are omitted, fewer total results may be returned than requested. The service will use this parameter or 1,000 items, whichever is smaller. (optional)
     * @param pageToken A previously-returned page token representing part of the larger set of results to view. (optional)
     * @param prefix Filter results to objects whose names begin with this prefix. (optional)
     * @param projection Set of properties to return. Defaults to noAcl. (optional)
     * @param startOffset Filter results to objects whose names are lexicographically equal to or after startOffset. If endOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param versions If true, lists all versions of an object as distinct results. The default is false. For more information, see Object Versioning. (optional)
     * @param channel  (optional)
     * @return Channel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public Channel storageObjectsWatchAll(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String delimiter, String endOffset, Boolean includeTrailingDelimiter, Integer maxResults, String pageToken, String prefix, String projection, String startOffset, String userProject, Boolean versions, Channel channel) throws ApiException {
        ApiResponse<Channel> localVarResp = storageObjectsWatchAllWithHttpInfo(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, delimiter, endOffset, includeTrailingDelimiter, maxResults, pageToken, prefix, projection, startOffset, userProject, versions, channel);
        return localVarResp.getData();
    }

    /**
     * 
     * Watch for changes on all objects in a bucket.
     * @param bucket Name of the bucket in which to look for objects. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param delimiter Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted. (optional)
     * @param endOffset Filter results to objects whose names are lexicographically before endOffset. If startOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive). (optional)
     * @param includeTrailingDelimiter If true, objects that end in exactly one instance of delimiter will have their metadata included in items in addition to prefixes. (optional)
     * @param maxResults Maximum number of items plus prefixes to return in a single page of responses. As duplicate prefixes are omitted, fewer total results may be returned than requested. The service will use this parameter or 1,000 items, whichever is smaller. (optional)
     * @param pageToken A previously-returned page token representing part of the larger set of results to view. (optional)
     * @param prefix Filter results to objects whose names begin with this prefix. (optional)
     * @param projection Set of properties to return. Defaults to noAcl. (optional)
     * @param startOffset Filter results to objects whose names are lexicographically equal to or after startOffset. If endOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param versions If true, lists all versions of an object as distinct results. The default is false. For more information, see Object Versioning. (optional)
     * @param channel  (optional)
     * @return ApiResponse&lt;Channel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Channel> storageObjectsWatchAllWithHttpInfo(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String delimiter, String endOffset, Boolean includeTrailingDelimiter, Integer maxResults, String pageToken, String prefix, String projection, String startOffset, String userProject, Boolean versions, Channel channel) throws ApiException {
        okhttp3.Call localVarCall = storageObjectsWatchAllValidateBeforeCall(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, delimiter, endOffset, includeTrailingDelimiter, maxResults, pageToken, prefix, projection, startOffset, userProject, versions, channel, null);
        Type localVarReturnType = new TypeToken<Channel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Watch for changes on all objects in a bucket.
     * @param bucket Name of the bucket in which to look for objects. (required)
     * @param alt Data format for the response. (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser An opaque string that represents a user for quota purposes. Must not exceed 40 characters. (optional)
     * @param uploadType Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;). (optional)
     * @param userIp Deprecated. Please use quotaUser instead. (optional)
     * @param delimiter Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted. (optional)
     * @param endOffset Filter results to objects whose names are lexicographically before endOffset. If startOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive). (optional)
     * @param includeTrailingDelimiter If true, objects that end in exactly one instance of delimiter will have their metadata included in items in addition to prefixes. (optional)
     * @param maxResults Maximum number of items plus prefixes to return in a single page of responses. As duplicate prefixes are omitted, fewer total results may be returned than requested. The service will use this parameter or 1,000 items, whichever is smaller. (optional)
     * @param pageToken A previously-returned page token representing part of the larger set of results to view. (optional)
     * @param prefix Filter results to objects whose names begin with this prefix. (optional)
     * @param projection Set of properties to return. Defaults to noAcl. (optional)
     * @param startOffset Filter results to objects whose names are lexicographically equal to or after startOffset. If endOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive). (optional)
     * @param userProject The project to be billed for this request. Required for Requester Pays buckets. (optional)
     * @param versions If true, lists all versions of an object as distinct results. The default is false. For more information, see Object Versioning. (optional)
     * @param channel  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageObjectsWatchAllAsync(String bucket, String alt, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadType, String userIp, String delimiter, String endOffset, Boolean includeTrailingDelimiter, Integer maxResults, String pageToken, String prefix, String projection, String startOffset, String userProject, Boolean versions, Channel channel, final ApiCallback<Channel> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageObjectsWatchAllValidateBeforeCall(bucket, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, delimiter, endOffset, includeTrailingDelimiter, maxResults, pageToken, prefix, projection, startOffset, userProject, versions, channel, _callback);
        Type localVarReturnType = new TypeToken<Channel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
