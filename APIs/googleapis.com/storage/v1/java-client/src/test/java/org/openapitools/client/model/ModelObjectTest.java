/*
 * Cloud Storage JSON API
 * Stores and retrieves potentially large, immutable data objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.ObjectAccessControl;
import org.openapitools.client.model.ObjectCustomerEncryption;
import org.openapitools.client.model.ObjectOwner;
import org.openapitools.client.model.ObjectRetention;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ModelObject
 */
public class ModelObjectTest {
    private final ModelObject model = new ModelObject();

    /**
     * Model tests for ModelObject
     */
    @Test
    public void testModelObject() {
        // TODO: test ModelObject
    }

    /**
     * Test the property 'acl'
     */
    @Test
    public void aclTest() {
        // TODO: test acl
    }

    /**
     * Test the property 'bucket'
     */
    @Test
    public void bucketTest() {
        // TODO: test bucket
    }

    /**
     * Test the property 'cacheControl'
     */
    @Test
    public void cacheControlTest() {
        // TODO: test cacheControl
    }

    /**
     * Test the property 'componentCount'
     */
    @Test
    public void componentCountTest() {
        // TODO: test componentCount
    }

    /**
     * Test the property 'contentDisposition'
     */
    @Test
    public void contentDispositionTest() {
        // TODO: test contentDisposition
    }

    /**
     * Test the property 'contentEncoding'
     */
    @Test
    public void contentEncodingTest() {
        // TODO: test contentEncoding
    }

    /**
     * Test the property 'contentLanguage'
     */
    @Test
    public void contentLanguageTest() {
        // TODO: test contentLanguage
    }

    /**
     * Test the property 'contentType'
     */
    @Test
    public void contentTypeTest() {
        // TODO: test contentType
    }

    /**
     * Test the property 'crc32c'
     */
    @Test
    public void crc32cTest() {
        // TODO: test crc32c
    }

    /**
     * Test the property 'customTime'
     */
    @Test
    public void customTimeTest() {
        // TODO: test customTime
    }

    /**
     * Test the property 'customerEncryption'
     */
    @Test
    public void customerEncryptionTest() {
        // TODO: test customerEncryption
    }

    /**
     * Test the property 'etag'
     */
    @Test
    public void etagTest() {
        // TODO: test etag
    }

    /**
     * Test the property 'eventBasedHold'
     */
    @Test
    public void eventBasedHoldTest() {
        // TODO: test eventBasedHold
    }

    /**
     * Test the property 'generation'
     */
    @Test
    public void generationTest() {
        // TODO: test generation
    }

    /**
     * Test the property 'hardDeleteTime'
     */
    @Test
    public void hardDeleteTimeTest() {
        // TODO: test hardDeleteTime
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'kind'
     */
    @Test
    public void kindTest() {
        // TODO: test kind
    }

    /**
     * Test the property 'kmsKeyName'
     */
    @Test
    public void kmsKeyNameTest() {
        // TODO: test kmsKeyName
    }

    /**
     * Test the property 'md5Hash'
     */
    @Test
    public void md5HashTest() {
        // TODO: test md5Hash
    }

    /**
     * Test the property 'mediaLink'
     */
    @Test
    public void mediaLinkTest() {
        // TODO: test mediaLink
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'metageneration'
     */
    @Test
    public void metagenerationTest() {
        // TODO: test metageneration
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'owner'
     */
    @Test
    public void ownerTest() {
        // TODO: test owner
    }

    /**
     * Test the property 'retention'
     */
    @Test
    public void retentionTest() {
        // TODO: test retention
    }

    /**
     * Test the property 'retentionExpirationTime'
     */
    @Test
    public void retentionExpirationTimeTest() {
        // TODO: test retentionExpirationTime
    }

    /**
     * Test the property 'selfLink'
     */
    @Test
    public void selfLinkTest() {
        // TODO: test selfLink
    }

    /**
     * Test the property 'size'
     */
    @Test
    public void sizeTest() {
        // TODO: test size
    }

    /**
     * Test the property 'softDeleteTime'
     */
    @Test
    public void softDeleteTimeTest() {
        // TODO: test softDeleteTime
    }

    /**
     * Test the property 'storageClass'
     */
    @Test
    public void storageClassTest() {
        // TODO: test storageClass
    }

    /**
     * Test the property 'temporaryHold'
     */
    @Test
    public void temporaryHoldTest() {
        // TODO: test temporaryHold
    }

    /**
     * Test the property 'timeCreated'
     */
    @Test
    public void timeCreatedTest() {
        // TODO: test timeCreated
    }

    /**
     * Test the property 'timeDeleted'
     */
    @Test
    public void timeDeletedTest() {
        // TODO: test timeDeleted
    }

    /**
     * Test the property 'timeStorageClassUpdated'
     */
    @Test
    public void timeStorageClassUpdatedTest() {
        // TODO: test timeStorageClassUpdated
    }

    /**
     * Test the property 'updated'
     */
    @Test
    public void updatedTest() {
        // TODO: test updated
    }

}
