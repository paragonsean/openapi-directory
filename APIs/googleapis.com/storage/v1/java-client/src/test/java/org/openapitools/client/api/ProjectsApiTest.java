/*
 * Cloud Storage JSON API
 * Stores and retrieves potentially large, immutable data objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.HmacKey;
import org.openapitools.client.model.HmacKeyMetadata;
import org.openapitools.client.model.HmacKeysMetadata;
import org.openapitools.client.model.ServiceAccount;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectsApi
 */
@Disabled
public class ProjectsApiTest {

    private final ProjectsApi api = new ProjectsApi();

    /**
     * Creates a new HMAC key for the specified service account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storageProjectsHmacKeysCreateTest() throws ApiException {
        String projectId = null;
        String serviceAccountEmail = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadType = null;
        String userIp = null;
        String userProject = null;
        HmacKey response = api.storageProjectsHmacKeysCreate(projectId, serviceAccountEmail, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, userProject);
        // TODO: test validations
    }

    /**
     * Deletes an HMAC key.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storageProjectsHmacKeysDeleteTest() throws ApiException {
        String projectId = null;
        String accessId = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadType = null;
        String userIp = null;
        String userProject = null;
        api.storageProjectsHmacKeysDelete(projectId, accessId, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, userProject);
        // TODO: test validations
    }

    /**
     * Retrieves an HMAC key&#39;s metadata
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storageProjectsHmacKeysGetTest() throws ApiException {
        String projectId = null;
        String accessId = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadType = null;
        String userIp = null;
        String userProject = null;
        HmacKeyMetadata response = api.storageProjectsHmacKeysGet(projectId, accessId, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, userProject);
        // TODO: test validations
    }

    /**
     * Retrieves a list of HMAC keys matching the criteria.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storageProjectsHmacKeysListTest() throws ApiException {
        String projectId = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadType = null;
        String userIp = null;
        Integer maxResults = null;
        String pageToken = null;
        String serviceAccountEmail = null;
        Boolean showDeletedKeys = null;
        String userProject = null;
        HmacKeysMetadata response = api.storageProjectsHmacKeysList(projectId, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, maxResults, pageToken, serviceAccountEmail, showDeletedKeys, userProject);
        // TODO: test validations
    }

    /**
     * Updates the state of an HMAC key. See the HMAC Key resource descriptor for valid states.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storageProjectsHmacKeysUpdateTest() throws ApiException {
        String projectId = null;
        String accessId = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadType = null;
        String userIp = null;
        String userProject = null;
        HmacKeyMetadata hmacKeyMetadata = null;
        HmacKeyMetadata response = api.storageProjectsHmacKeysUpdate(projectId, accessId, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, userProject, hmacKeyMetadata);
        // TODO: test validations
    }

    /**
     * Get the email address of this project&#39;s Google Cloud Storage service account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storageProjectsServiceAccountGetTest() throws ApiException {
        String projectId = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadType = null;
        String userIp = null;
        String userProject = null;
        ServiceAccount response = api.storageProjectsServiceAccountGet(projectId, alt, fields, key, oauthToken, prettyPrint, quotaUser, uploadType, userIp, userProject);
        // TODO: test validations
    }

}
