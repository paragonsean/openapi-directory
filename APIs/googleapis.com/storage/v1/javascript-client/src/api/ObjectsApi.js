/**
 * Cloud Storage JSON API
 * Stores and retrieves potentially large, immutable data objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BulkRestoreObjectsRequest from '../model/BulkRestoreObjectsRequest';
import Channel from '../model/Channel';
import ComposeRequest from '../model/ComposeRequest';
import GoogleLongrunningOperation from '../model/GoogleLongrunningOperation';
import ModelObject from '../model/ModelObject';
import Objects from '../model/Objects';
import Policy from '../model/Policy';
import RewriteResponse from '../model/RewriteResponse';
import TestIamPermissionsResponse from '../model/TestIamPermissionsResponse';

/**
* Objects service.
* @module api/ObjectsApi
* @version v1
*/
export default class ObjectsApi {

    /**
    * Constructs a new ObjectsApi. 
    * @alias module:api/ObjectsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the storageObjectsBulkRestore operation.
     * @callback module:api/ObjectsApi~storageObjectsBulkRestoreCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Initiates a long-running bulk restore operation on the specified bucket.
     * @param {String} bucket Name of the bucket in which the object resides.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [uploadType] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {module:model/BulkRestoreObjectsRequest} [bulkRestoreObjectsRequest] 
     * @param {module:api/ObjectsApi~storageObjectsBulkRestoreCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    storageObjectsBulkRestore(bucket, opts, callback) {
      opts = opts || {};
      let postBody = opts['bulkRestoreObjectsRequest'];
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageObjectsBulkRestore");
      }

      let pathParams = {
        'bucket': bucket
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'uploadType': opts['uploadType'],
        'userIp': opts['userIp']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/b/{bucket}/o/bulkRestore', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageObjectsCompose operation.
     * @callback module:api/ObjectsApi~storageObjectsComposeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Concatenates a list of existing objects into a new object in the same bucket.
     * @param {String} destinationBucket Name of the bucket containing the source objects. The destination object is stored in this bucket.
     * @param {String} destinationObject Name of the new object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [uploadType] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {module:model/String} [destinationPredefinedAcl] Apply a predefined set of access controls to the destination object.
     * @param {String} [ifGenerationMatch] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
     * @param {String} [ifMetagenerationMatch] Makes the operation conditional on whether the object's current metageneration matches the given value.
     * @param {String} [kmsKeyName] Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata's kms_key_name value, if any.
     * @param {String} [userProject] The project to be billed for this request. Required for Requester Pays buckets.
     * @param {module:model/ComposeRequest} [composeRequest] 
     * @param {module:api/ObjectsApi~storageObjectsComposeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelObject}
     */
    storageObjectsCompose(destinationBucket, destinationObject, opts, callback) {
      opts = opts || {};
      let postBody = opts['composeRequest'];
      // verify the required parameter 'destinationBucket' is set
      if (destinationBucket === undefined || destinationBucket === null) {
        throw new Error("Missing the required parameter 'destinationBucket' when calling storageObjectsCompose");
      }
      // verify the required parameter 'destinationObject' is set
      if (destinationObject === undefined || destinationObject === null) {
        throw new Error("Missing the required parameter 'destinationObject' when calling storageObjectsCompose");
      }

      let pathParams = {
        'destinationBucket': destinationBucket,
        'destinationObject': destinationObject
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'uploadType': opts['uploadType'],
        'userIp': opts['userIp'],
        'destinationPredefinedAcl': opts['destinationPredefinedAcl'],
        'ifGenerationMatch': opts['ifGenerationMatch'],
        'ifMetagenerationMatch': opts['ifMetagenerationMatch'],
        'kmsKeyName': opts['kmsKeyName'],
        'userProject': opts['userProject']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ModelObject;
      return this.apiClient.callApi(
        '/b/{destinationBucket}/o/{destinationObject}/compose', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageObjectsCopy operation.
     * @callback module:api/ObjectsApi~storageObjectsCopyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Copies a source object to a destination object. Optionally overrides metadata.
     * @param {String} sourceBucket Name of the bucket in which to find the source object.
     * @param {String} sourceObject Name of the source object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
     * @param {String} destinationBucket Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
     * @param {String} destinationObject Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [uploadType] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [destinationKmsKeyName] Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata's kms_key_name value, if any.
     * @param {module:model/String} [destinationPredefinedAcl] Apply a predefined set of access controls to the destination object.
     * @param {String} [ifGenerationMatch] Makes the operation conditional on whether the destination object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
     * @param {String} [ifGenerationNotMatch] Makes the operation conditional on whether the destination object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
     * @param {String} [ifMetagenerationMatch] Makes the operation conditional on whether the destination object's current metageneration matches the given value.
     * @param {String} [ifMetagenerationNotMatch] Makes the operation conditional on whether the destination object's current metageneration does not match the given value.
     * @param {String} [ifSourceGenerationMatch] Makes the operation conditional on whether the source object's current generation matches the given value.
     * @param {String} [ifSourceGenerationNotMatch] Makes the operation conditional on whether the source object's current generation does not match the given value.
     * @param {String} [ifSourceMetagenerationMatch] Makes the operation conditional on whether the source object's current metageneration matches the given value.
     * @param {String} [ifSourceMetagenerationNotMatch] Makes the operation conditional on whether the source object's current metageneration does not match the given value.
     * @param {module:model/String} [projection] Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
     * @param {String} [sourceGeneration] If present, selects a specific revision of the source object (as opposed to the latest version, the default).
     * @param {String} [userProject] The project to be billed for this request. Required for Requester Pays buckets.
     * @param {module:model/ModelObject} [modelObject] 
     * @param {module:api/ObjectsApi~storageObjectsCopyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelObject}
     */
    storageObjectsCopy(sourceBucket, sourceObject, destinationBucket, destinationObject, opts, callback) {
      opts = opts || {};
      let postBody = opts['modelObject'];
      // verify the required parameter 'sourceBucket' is set
      if (sourceBucket === undefined || sourceBucket === null) {
        throw new Error("Missing the required parameter 'sourceBucket' when calling storageObjectsCopy");
      }
      // verify the required parameter 'sourceObject' is set
      if (sourceObject === undefined || sourceObject === null) {
        throw new Error("Missing the required parameter 'sourceObject' when calling storageObjectsCopy");
      }
      // verify the required parameter 'destinationBucket' is set
      if (destinationBucket === undefined || destinationBucket === null) {
        throw new Error("Missing the required parameter 'destinationBucket' when calling storageObjectsCopy");
      }
      // verify the required parameter 'destinationObject' is set
      if (destinationObject === undefined || destinationObject === null) {
        throw new Error("Missing the required parameter 'destinationObject' when calling storageObjectsCopy");
      }

      let pathParams = {
        'sourceBucket': sourceBucket,
        'sourceObject': sourceObject,
        'destinationBucket': destinationBucket,
        'destinationObject': destinationObject
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'uploadType': opts['uploadType'],
        'userIp': opts['userIp'],
        'destinationKmsKeyName': opts['destinationKmsKeyName'],
        'destinationPredefinedAcl': opts['destinationPredefinedAcl'],
        'ifGenerationMatch': opts['ifGenerationMatch'],
        'ifGenerationNotMatch': opts['ifGenerationNotMatch'],
        'ifMetagenerationMatch': opts['ifMetagenerationMatch'],
        'ifMetagenerationNotMatch': opts['ifMetagenerationNotMatch'],
        'ifSourceGenerationMatch': opts['ifSourceGenerationMatch'],
        'ifSourceGenerationNotMatch': opts['ifSourceGenerationNotMatch'],
        'ifSourceMetagenerationMatch': opts['ifSourceMetagenerationMatch'],
        'ifSourceMetagenerationNotMatch': opts['ifSourceMetagenerationNotMatch'],
        'projection': opts['projection'],
        'sourceGeneration': opts['sourceGeneration'],
        'userProject': opts['userProject']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ModelObject;
      return this.apiClient.callApi(
        '/b/{sourceBucket}/o/{sourceObject}/copyTo/b/{destinationBucket}/o/{destinationObject}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageObjectsDelete operation.
     * @callback module:api/ObjectsApi~storageObjectsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes an object and its metadata. Deletions are permanent if versioning is not enabled for the bucket, or if the generation parameter is used.
     * @param {String} bucket Name of the bucket in which the object resides.
     * @param {String} object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [uploadType] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [generation] If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default).
     * @param {String} [ifGenerationMatch] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
     * @param {String} [ifGenerationNotMatch] Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
     * @param {String} [ifMetagenerationMatch] Makes the operation conditional on whether the object's current metageneration matches the given value.
     * @param {String} [ifMetagenerationNotMatch] Makes the operation conditional on whether the object's current metageneration does not match the given value.
     * @param {String} [userProject] The project to be billed for this request. Required for Requester Pays buckets.
     * @param {module:api/ObjectsApi~storageObjectsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    storageObjectsDelete(bucket, object, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageObjectsDelete");
      }
      // verify the required parameter 'object' is set
      if (object === undefined || object === null) {
        throw new Error("Missing the required parameter 'object' when calling storageObjectsDelete");
      }

      let pathParams = {
        'bucket': bucket,
        'object': object
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'uploadType': opts['uploadType'],
        'userIp': opts['userIp'],
        'generation': opts['generation'],
        'ifGenerationMatch': opts['ifGenerationMatch'],
        'ifGenerationNotMatch': opts['ifGenerationNotMatch'],
        'ifMetagenerationMatch': opts['ifMetagenerationMatch'],
        'ifMetagenerationNotMatch': opts['ifMetagenerationNotMatch'],
        'userProject': opts['userProject']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/b/{bucket}/o/{object}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageObjectsGet operation.
     * @callback module:api/ObjectsApi~storageObjectsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves an object or its metadata.
     * @param {String} bucket Name of the bucket in which the object resides.
     * @param {String} object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [uploadType] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [generation] If present, selects a specific revision of this object (as opposed to the latest version, the default).
     * @param {String} [ifGenerationMatch] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
     * @param {String} [ifGenerationNotMatch] Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
     * @param {String} [ifMetagenerationMatch] Makes the operation conditional on whether the object's current metageneration matches the given value.
     * @param {String} [ifMetagenerationNotMatch] Makes the operation conditional on whether the object's current metageneration does not match the given value.
     * @param {module:model/String} [projection] Set of properties to return. Defaults to noAcl.
     * @param {Boolean} [softDeleted] If true, only soft-deleted object versions will be listed. The default is false. For more information, see Soft Delete.
     * @param {String} [userProject] The project to be billed for this request. Required for Requester Pays buckets.
     * @param {module:api/ObjectsApi~storageObjectsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelObject}
     */
    storageObjectsGet(bucket, object, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageObjectsGet");
      }
      // verify the required parameter 'object' is set
      if (object === undefined || object === null) {
        throw new Error("Missing the required parameter 'object' when calling storageObjectsGet");
      }

      let pathParams = {
        'bucket': bucket,
        'object': object
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'uploadType': opts['uploadType'],
        'userIp': opts['userIp'],
        'generation': opts['generation'],
        'ifGenerationMatch': opts['ifGenerationMatch'],
        'ifGenerationNotMatch': opts['ifGenerationNotMatch'],
        'ifMetagenerationMatch': opts['ifMetagenerationMatch'],
        'ifMetagenerationNotMatch': opts['ifMetagenerationNotMatch'],
        'projection': opts['projection'],
        'softDeleted': opts['softDeleted'],
        'userProject': opts['userProject']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModelObject;
      return this.apiClient.callApi(
        '/b/{bucket}/o/{object}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageObjectsGetIamPolicy operation.
     * @callback module:api/ObjectsApi~storageObjectsGetIamPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Policy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns an IAM policy for the specified object.
     * @param {String} bucket Name of the bucket in which the object resides.
     * @param {String} object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [uploadType] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [generation] If present, selects a specific revision of this object (as opposed to the latest version, the default).
     * @param {String} [userProject] The project to be billed for this request. Required for Requester Pays buckets.
     * @param {module:api/ObjectsApi~storageObjectsGetIamPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Policy}
     */
    storageObjectsGetIamPolicy(bucket, object, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageObjectsGetIamPolicy");
      }
      // verify the required parameter 'object' is set
      if (object === undefined || object === null) {
        throw new Error("Missing the required parameter 'object' when calling storageObjectsGetIamPolicy");
      }

      let pathParams = {
        'bucket': bucket,
        'object': object
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'uploadType': opts['uploadType'],
        'userIp': opts['userIp'],
        'generation': opts['generation'],
        'userProject': opts['userProject']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Policy;
      return this.apiClient.callApi(
        '/b/{bucket}/o/{object}/iam', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageObjectsInsert operation.
     * @callback module:api/ObjectsApi~storageObjectsInsertCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Stores a new object and metadata.
     * @param {String} bucket Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [uploadType] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [contentEncoding] If set, sets the contentEncoding property of the final object to this value. Setting this parameter is equivalent to setting the contentEncoding metadata property. This can be useful when uploading an object with uploadType=media to indicate the encoding of the content being uploaded.
     * @param {String} [ifGenerationMatch] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
     * @param {String} [ifGenerationNotMatch] Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
     * @param {String} [ifMetagenerationMatch] Makes the operation conditional on whether the object's current metageneration matches the given value.
     * @param {String} [ifMetagenerationNotMatch] Makes the operation conditional on whether the object's current metageneration does not match the given value.
     * @param {String} [kmsKeyName] Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata's kms_key_name value, if any.
     * @param {String} [name] Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
     * @param {module:model/String} [predefinedAcl] Apply a predefined set of access controls to this object.
     * @param {module:model/String} [projection] Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
     * @param {String} [userProject] The project to be billed for this request. Required for Requester Pays buckets.
     * @param {module:model/ModelObject} [modelObject] 
     * @param {module:api/ObjectsApi~storageObjectsInsertCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelObject}
     */
    storageObjectsInsert(bucket, opts, callback) {
      opts = opts || {};
      let postBody = opts['modelObject'];
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageObjectsInsert");
      }

      let pathParams = {
        'bucket': bucket
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'uploadType': opts['uploadType'],
        'userIp': opts['userIp'],
        'contentEncoding': opts['contentEncoding'],
        'ifGenerationMatch': opts['ifGenerationMatch'],
        'ifGenerationNotMatch': opts['ifGenerationNotMatch'],
        'ifMetagenerationMatch': opts['ifMetagenerationMatch'],
        'ifMetagenerationNotMatch': opts['ifMetagenerationNotMatch'],
        'kmsKeyName': opts['kmsKeyName'],
        'name': opts['name'],
        'predefinedAcl': opts['predefinedAcl'],
        'projection': opts['projection'],
        'userProject': opts['userProject']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/octet-stream'];
      let accepts = ['application/json'];
      let returnType = ModelObject;
      return this.apiClient.callApi(
        '/b/{bucket}/o', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageObjectsList operation.
     * @callback module:api/ObjectsApi~storageObjectsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Objects} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a list of objects matching the criteria.
     * @param {String} bucket Name of the bucket in which to look for objects.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [uploadType] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [delimiter] Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.
     * @param {String} [endOffset] Filter results to objects whose names are lexicographically before endOffset. If startOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive).
     * @param {Boolean} [includeFoldersAsPrefixes] Only applicable if delimiter is set to '/'. If true, will also include folders and managed folders (besides objects) in the returned prefixes.
     * @param {Boolean} [includeTrailingDelimiter] If true, objects that end in exactly one instance of delimiter will have their metadata included in items in addition to prefixes.
     * @param {String} [matchGlob] Filter results to objects and prefixes that match this glob pattern.
     * @param {Number} [maxResults] Maximum number of items plus prefixes to return in a single page of responses. As duplicate prefixes are omitted, fewer total results may be returned than requested. The service will use this parameter or 1,000 items, whichever is smaller.
     * @param {String} [pageToken] A previously-returned page token representing part of the larger set of results to view.
     * @param {String} [prefix] Filter results to objects whose names begin with this prefix.
     * @param {module:model/String} [projection] Set of properties to return. Defaults to noAcl.
     * @param {Boolean} [softDeleted] If true, only soft-deleted object versions will be listed. The default is false. For more information, see Soft Delete.
     * @param {String} [startOffset] Filter results to objects whose names are lexicographically equal to or after startOffset. If endOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive).
     * @param {String} [userProject] The project to be billed for this request. Required for Requester Pays buckets.
     * @param {Boolean} [versions] If true, lists all versions of an object as distinct results. The default is false. For more information, see Object Versioning.
     * @param {module:api/ObjectsApi~storageObjectsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Objects}
     */
    storageObjectsList(bucket, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageObjectsList");
      }

      let pathParams = {
        'bucket': bucket
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'uploadType': opts['uploadType'],
        'userIp': opts['userIp'],
        'delimiter': opts['delimiter'],
        'endOffset': opts['endOffset'],
        'includeFoldersAsPrefixes': opts['includeFoldersAsPrefixes'],
        'includeTrailingDelimiter': opts['includeTrailingDelimiter'],
        'matchGlob': opts['matchGlob'],
        'maxResults': opts['maxResults'],
        'pageToken': opts['pageToken'],
        'prefix': opts['prefix'],
        'projection': opts['projection'],
        'softDeleted': opts['softDeleted'],
        'startOffset': opts['startOffset'],
        'userProject': opts['userProject'],
        'versions': opts['versions']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Objects;
      return this.apiClient.callApi(
        '/b/{bucket}/o', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageObjectsPatch operation.
     * @callback module:api/ObjectsApi~storageObjectsPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Patches an object's metadata.
     * @param {String} bucket Name of the bucket in which the object resides.
     * @param {String} object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [uploadType] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [generation] If present, selects a specific revision of this object (as opposed to the latest version, the default).
     * @param {String} [ifGenerationMatch] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
     * @param {String} [ifGenerationNotMatch] Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
     * @param {String} [ifMetagenerationMatch] Makes the operation conditional on whether the object's current metageneration matches the given value.
     * @param {String} [ifMetagenerationNotMatch] Makes the operation conditional on whether the object's current metageneration does not match the given value.
     * @param {Boolean} [overrideUnlockedRetention] Must be true to remove the retention configuration, reduce its unlocked retention period, or change its mode from unlocked to locked.
     * @param {module:model/String} [predefinedAcl] Apply a predefined set of access controls to this object.
     * @param {module:model/String} [projection] Set of properties to return. Defaults to full.
     * @param {String} [userProject] The project to be billed for this request, for Requester Pays buckets.
     * @param {module:model/ModelObject} [modelObject] 
     * @param {module:api/ObjectsApi~storageObjectsPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelObject}
     */
    storageObjectsPatch(bucket, object, opts, callback) {
      opts = opts || {};
      let postBody = opts['modelObject'];
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageObjectsPatch");
      }
      // verify the required parameter 'object' is set
      if (object === undefined || object === null) {
        throw new Error("Missing the required parameter 'object' when calling storageObjectsPatch");
      }

      let pathParams = {
        'bucket': bucket,
        'object': object
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'uploadType': opts['uploadType'],
        'userIp': opts['userIp'],
        'generation': opts['generation'],
        'ifGenerationMatch': opts['ifGenerationMatch'],
        'ifGenerationNotMatch': opts['ifGenerationNotMatch'],
        'ifMetagenerationMatch': opts['ifMetagenerationMatch'],
        'ifMetagenerationNotMatch': opts['ifMetagenerationNotMatch'],
        'overrideUnlockedRetention': opts['overrideUnlockedRetention'],
        'predefinedAcl': opts['predefinedAcl'],
        'projection': opts['projection'],
        'userProject': opts['userProject']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ModelObject;
      return this.apiClient.callApi(
        '/b/{bucket}/o/{object}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageObjectsRestore operation.
     * @callback module:api/ObjectsApi~storageObjectsRestoreCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Restores a soft-deleted object.
     * @param {String} bucket Name of the bucket in which the object resides.
     * @param {String} object Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
     * @param {String} generation Selects a specific revision of this object.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [uploadType] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {Boolean} [copySourceAcl] If true, copies the source object's ACL; otherwise, uses the bucket's default object ACL. The default is false.
     * @param {String} [ifGenerationMatch] Makes the operation conditional on whether the object's one live generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
     * @param {String} [ifGenerationNotMatch] Makes the operation conditional on whether none of the object's live generations match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
     * @param {String} [ifMetagenerationMatch] Makes the operation conditional on whether the object's one live metageneration matches the given value.
     * @param {String} [ifMetagenerationNotMatch] Makes the operation conditional on whether none of the object's live metagenerations match the given value.
     * @param {module:model/String} [projection] Set of properties to return. Defaults to full.
     * @param {String} [userProject] The project to be billed for this request. Required for Requester Pays buckets.
     * @param {module:model/ModelObject} [modelObject] 
     * @param {module:api/ObjectsApi~storageObjectsRestoreCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelObject}
     */
    storageObjectsRestore(bucket, object, generation, opts, callback) {
      opts = opts || {};
      let postBody = opts['modelObject'];
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageObjectsRestore");
      }
      // verify the required parameter 'object' is set
      if (object === undefined || object === null) {
        throw new Error("Missing the required parameter 'object' when calling storageObjectsRestore");
      }
      // verify the required parameter 'generation' is set
      if (generation === undefined || generation === null) {
        throw new Error("Missing the required parameter 'generation' when calling storageObjectsRestore");
      }

      let pathParams = {
        'bucket': bucket,
        'object': object
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'uploadType': opts['uploadType'],
        'userIp': opts['userIp'],
        'copySourceAcl': opts['copySourceAcl'],
        'generation': generation,
        'ifGenerationMatch': opts['ifGenerationMatch'],
        'ifGenerationNotMatch': opts['ifGenerationNotMatch'],
        'ifMetagenerationMatch': opts['ifMetagenerationMatch'],
        'ifMetagenerationNotMatch': opts['ifMetagenerationNotMatch'],
        'projection': opts['projection'],
        'userProject': opts['userProject']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ModelObject;
      return this.apiClient.callApi(
        '/b/{bucket}/o/{object}/restore', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageObjectsRewrite operation.
     * @callback module:api/ObjectsApi~storageObjectsRewriteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RewriteResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Rewrites a source object to a destination object. Optionally overrides metadata.
     * @param {String} sourceBucket Name of the bucket in which to find the source object.
     * @param {String} sourceObject Name of the source object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
     * @param {String} destinationBucket Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.
     * @param {String} destinationObject Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [uploadType] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [destinationKmsKeyName] Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata's kms_key_name value, if any.
     * @param {module:model/String} [destinationPredefinedAcl] Apply a predefined set of access controls to the destination object.
     * @param {String} [ifGenerationMatch] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
     * @param {String} [ifGenerationNotMatch] Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
     * @param {String} [ifMetagenerationMatch] Makes the operation conditional on whether the destination object's current metageneration matches the given value.
     * @param {String} [ifMetagenerationNotMatch] Makes the operation conditional on whether the destination object's current metageneration does not match the given value.
     * @param {String} [ifSourceGenerationMatch] Makes the operation conditional on whether the source object's current generation matches the given value.
     * @param {String} [ifSourceGenerationNotMatch] Makes the operation conditional on whether the source object's current generation does not match the given value.
     * @param {String} [ifSourceMetagenerationMatch] Makes the operation conditional on whether the source object's current metageneration matches the given value.
     * @param {String} [ifSourceMetagenerationNotMatch] Makes the operation conditional on whether the source object's current metageneration does not match the given value.
     * @param {String} [maxBytesRewrittenPerCall] The maximum number of bytes that will be rewritten per rewrite request. Most callers shouldn't need to specify this parameter - it is primarily in place to support testing. If specified the value must be an integral multiple of 1 MiB (1048576). Also, this only applies to requests where the source and destination span locations and/or storage classes. Finally, this value must not change across rewrite calls else you'll get an error that the rewriteToken is invalid.
     * @param {module:model/String} [projection] Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
     * @param {String} [rewriteToken] Include this field (from the previous rewrite response) on each rewrite request after the first one, until the rewrite response 'done' flag is true. Calls that provide a rewriteToken can omit all other request fields, but if included those fields must match the values provided in the first rewrite request.
     * @param {String} [sourceGeneration] If present, selects a specific revision of the source object (as opposed to the latest version, the default).
     * @param {String} [userProject] The project to be billed for this request. Required for Requester Pays buckets.
     * @param {module:model/ModelObject} [modelObject] 
     * @param {module:api/ObjectsApi~storageObjectsRewriteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RewriteResponse}
     */
    storageObjectsRewrite(sourceBucket, sourceObject, destinationBucket, destinationObject, opts, callback) {
      opts = opts || {};
      let postBody = opts['modelObject'];
      // verify the required parameter 'sourceBucket' is set
      if (sourceBucket === undefined || sourceBucket === null) {
        throw new Error("Missing the required parameter 'sourceBucket' when calling storageObjectsRewrite");
      }
      // verify the required parameter 'sourceObject' is set
      if (sourceObject === undefined || sourceObject === null) {
        throw new Error("Missing the required parameter 'sourceObject' when calling storageObjectsRewrite");
      }
      // verify the required parameter 'destinationBucket' is set
      if (destinationBucket === undefined || destinationBucket === null) {
        throw new Error("Missing the required parameter 'destinationBucket' when calling storageObjectsRewrite");
      }
      // verify the required parameter 'destinationObject' is set
      if (destinationObject === undefined || destinationObject === null) {
        throw new Error("Missing the required parameter 'destinationObject' when calling storageObjectsRewrite");
      }

      let pathParams = {
        'sourceBucket': sourceBucket,
        'sourceObject': sourceObject,
        'destinationBucket': destinationBucket,
        'destinationObject': destinationObject
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'uploadType': opts['uploadType'],
        'userIp': opts['userIp'],
        'destinationKmsKeyName': opts['destinationKmsKeyName'],
        'destinationPredefinedAcl': opts['destinationPredefinedAcl'],
        'ifGenerationMatch': opts['ifGenerationMatch'],
        'ifGenerationNotMatch': opts['ifGenerationNotMatch'],
        'ifMetagenerationMatch': opts['ifMetagenerationMatch'],
        'ifMetagenerationNotMatch': opts['ifMetagenerationNotMatch'],
        'ifSourceGenerationMatch': opts['ifSourceGenerationMatch'],
        'ifSourceGenerationNotMatch': opts['ifSourceGenerationNotMatch'],
        'ifSourceMetagenerationMatch': opts['ifSourceMetagenerationMatch'],
        'ifSourceMetagenerationNotMatch': opts['ifSourceMetagenerationNotMatch'],
        'maxBytesRewrittenPerCall': opts['maxBytesRewrittenPerCall'],
        'projection': opts['projection'],
        'rewriteToken': opts['rewriteToken'],
        'sourceGeneration': opts['sourceGeneration'],
        'userProject': opts['userProject']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = RewriteResponse;
      return this.apiClient.callApi(
        '/b/{sourceBucket}/o/{sourceObject}/rewriteTo/b/{destinationBucket}/o/{destinationObject}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageObjectsSetIamPolicy operation.
     * @callback module:api/ObjectsApi~storageObjectsSetIamPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Policy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an IAM policy for the specified object.
     * @param {String} bucket Name of the bucket in which the object resides.
     * @param {String} object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [uploadType] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [generation] If present, selects a specific revision of this object (as opposed to the latest version, the default).
     * @param {String} [userProject] The project to be billed for this request. Required for Requester Pays buckets.
     * @param {module:model/Policy} [policy] 
     * @param {module:api/ObjectsApi~storageObjectsSetIamPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Policy}
     */
    storageObjectsSetIamPolicy(bucket, object, opts, callback) {
      opts = opts || {};
      let postBody = opts['policy'];
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageObjectsSetIamPolicy");
      }
      // verify the required parameter 'object' is set
      if (object === undefined || object === null) {
        throw new Error("Missing the required parameter 'object' when calling storageObjectsSetIamPolicy");
      }

      let pathParams = {
        'bucket': bucket,
        'object': object
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'uploadType': opts['uploadType'],
        'userIp': opts['userIp'],
        'generation': opts['generation'],
        'userProject': opts['userProject']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Policy;
      return this.apiClient.callApi(
        '/b/{bucket}/o/{object}/iam', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageObjectsTestIamPermissions operation.
     * @callback module:api/ObjectsApi~storageObjectsTestIamPermissionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TestIamPermissionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Tests a set of permissions on the given object to see which, if any, are held by the caller.
     * @param {String} bucket Name of the bucket in which the object resides.
     * @param {String} object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
     * @param {Array.<String>} permissions Permissions to test.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [uploadType] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [generation] If present, selects a specific revision of this object (as opposed to the latest version, the default).
     * @param {String} [userProject] The project to be billed for this request. Required for Requester Pays buckets.
     * @param {module:api/ObjectsApi~storageObjectsTestIamPermissionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TestIamPermissionsResponse}
     */
    storageObjectsTestIamPermissions(bucket, object, permissions, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageObjectsTestIamPermissions");
      }
      // verify the required parameter 'object' is set
      if (object === undefined || object === null) {
        throw new Error("Missing the required parameter 'object' when calling storageObjectsTestIamPermissions");
      }
      // verify the required parameter 'permissions' is set
      if (permissions === undefined || permissions === null) {
        throw new Error("Missing the required parameter 'permissions' when calling storageObjectsTestIamPermissions");
      }

      let pathParams = {
        'bucket': bucket,
        'object': object
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'uploadType': opts['uploadType'],
        'userIp': opts['userIp'],
        'permissions': this.apiClient.buildCollectionParam(permissions, 'multi'),
        'generation': opts['generation'],
        'userProject': opts['userProject']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TestIamPermissionsResponse;
      return this.apiClient.callApi(
        '/b/{bucket}/o/{object}/iam/testPermissions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageObjectsUpdate operation.
     * @callback module:api/ObjectsApi~storageObjectsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an object's metadata.
     * @param {String} bucket Name of the bucket in which the object resides.
     * @param {String} object Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [uploadType] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [generation] If present, selects a specific revision of this object (as opposed to the latest version, the default).
     * @param {String} [ifGenerationMatch] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
     * @param {String} [ifGenerationNotMatch] Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
     * @param {String} [ifMetagenerationMatch] Makes the operation conditional on whether the object's current metageneration matches the given value.
     * @param {String} [ifMetagenerationNotMatch] Makes the operation conditional on whether the object's current metageneration does not match the given value.
     * @param {Boolean} [overrideUnlockedRetention] Must be true to remove the retention configuration, reduce its unlocked retention period, or change its mode from unlocked to locked.
     * @param {module:model/String} [predefinedAcl] Apply a predefined set of access controls to this object.
     * @param {module:model/String} [projection] Set of properties to return. Defaults to full.
     * @param {String} [userProject] The project to be billed for this request. Required for Requester Pays buckets.
     * @param {module:model/ModelObject} [modelObject] 
     * @param {module:api/ObjectsApi~storageObjectsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelObject}
     */
    storageObjectsUpdate(bucket, object, opts, callback) {
      opts = opts || {};
      let postBody = opts['modelObject'];
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageObjectsUpdate");
      }
      // verify the required parameter 'object' is set
      if (object === undefined || object === null) {
        throw new Error("Missing the required parameter 'object' when calling storageObjectsUpdate");
      }

      let pathParams = {
        'bucket': bucket,
        'object': object
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'uploadType': opts['uploadType'],
        'userIp': opts['userIp'],
        'generation': opts['generation'],
        'ifGenerationMatch': opts['ifGenerationMatch'],
        'ifGenerationNotMatch': opts['ifGenerationNotMatch'],
        'ifMetagenerationMatch': opts['ifMetagenerationMatch'],
        'ifMetagenerationNotMatch': opts['ifMetagenerationNotMatch'],
        'overrideUnlockedRetention': opts['overrideUnlockedRetention'],
        'predefinedAcl': opts['predefinedAcl'],
        'projection': opts['projection'],
        'userProject': opts['userProject']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ModelObject;
      return this.apiClient.callApi(
        '/b/{bucket}/o/{object}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageObjectsWatchAll operation.
     * @callback module:api/ObjectsApi~storageObjectsWatchAllCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Channel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Watch for changes on all objects in a bucket.
     * @param {String} bucket Name of the bucket in which to look for objects.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [uploadType] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {String} [delimiter] Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.
     * @param {String} [endOffset] Filter results to objects whose names are lexicographically before endOffset. If startOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive).
     * @param {Boolean} [includeTrailingDelimiter] If true, objects that end in exactly one instance of delimiter will have their metadata included in items in addition to prefixes.
     * @param {Number} [maxResults] Maximum number of items plus prefixes to return in a single page of responses. As duplicate prefixes are omitted, fewer total results may be returned than requested. The service will use this parameter or 1,000 items, whichever is smaller.
     * @param {String} [pageToken] A previously-returned page token representing part of the larger set of results to view.
     * @param {String} [prefix] Filter results to objects whose names begin with this prefix.
     * @param {module:model/String} [projection] Set of properties to return. Defaults to noAcl.
     * @param {String} [startOffset] Filter results to objects whose names are lexicographically equal to or after startOffset. If endOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive).
     * @param {String} [userProject] The project to be billed for this request. Required for Requester Pays buckets.
     * @param {Boolean} [versions] If true, lists all versions of an object as distinct results. The default is false. For more information, see Object Versioning.
     * @param {module:model/Channel} [channel] 
     * @param {module:api/ObjectsApi~storageObjectsWatchAllCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Channel}
     */
    storageObjectsWatchAll(bucket, opts, callback) {
      opts = opts || {};
      let postBody = opts['channel'];
      // verify the required parameter 'bucket' is set
      if (bucket === undefined || bucket === null) {
        throw new Error("Missing the required parameter 'bucket' when calling storageObjectsWatchAll");
      }

      let pathParams = {
        'bucket': bucket
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'uploadType': opts['uploadType'],
        'userIp': opts['userIp'],
        'delimiter': opts['delimiter'],
        'endOffset': opts['endOffset'],
        'includeTrailingDelimiter': opts['includeTrailingDelimiter'],
        'maxResults': opts['maxResults'],
        'pageToken': opts['pageToken'],
        'prefix': opts['prefix'],
        'projection': opts['projection'],
        'startOffset': opts['startOffset'],
        'userProject': opts['userProject'],
        'versions': opts['versions']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Channel;
      return this.apiClient.callApi(
        '/b/{bucket}/o/watch', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
