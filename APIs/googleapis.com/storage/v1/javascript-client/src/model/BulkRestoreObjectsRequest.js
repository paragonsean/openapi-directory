/**
 * Cloud Storage JSON API
 * Stores and retrieves potentially large, immutable data objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BulkRestoreObjectsRequest model module.
 * @module model/BulkRestoreObjectsRequest
 * @version v1
 */
class BulkRestoreObjectsRequest {
    /**
     * Constructs a new <code>BulkRestoreObjectsRequest</code>.
     * A bulk restore objects request.
     * @alias module:model/BulkRestoreObjectsRequest
     */
    constructor() { 
        
        BulkRestoreObjectsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BulkRestoreObjectsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BulkRestoreObjectsRequest} obj Optional instance to populate.
     * @return {module:model/BulkRestoreObjectsRequest} The populated <code>BulkRestoreObjectsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BulkRestoreObjectsRequest();

            if (data.hasOwnProperty('allowOverwrite')) {
                obj['allowOverwrite'] = ApiClient.convertToType(data['allowOverwrite'], 'Boolean');
            }
            if (data.hasOwnProperty('copySourceAcl')) {
                obj['copySourceAcl'] = ApiClient.convertToType(data['copySourceAcl'], 'Boolean');
            }
            if (data.hasOwnProperty('matchGlobs')) {
                obj['matchGlobs'] = ApiClient.convertToType(data['matchGlobs'], ['String']);
            }
            if (data.hasOwnProperty('softDeletedAfterTime')) {
                obj['softDeletedAfterTime'] = ApiClient.convertToType(data['softDeletedAfterTime'], 'Date');
            }
            if (data.hasOwnProperty('softDeletedBeforeTime')) {
                obj['softDeletedBeforeTime'] = ApiClient.convertToType(data['softDeletedBeforeTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BulkRestoreObjectsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BulkRestoreObjectsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['matchGlobs'])) {
            throw new Error("Expected the field `matchGlobs` to be an array in the JSON data but got " + data['matchGlobs']);
        }

        return true;
    }


}



/**
 * If false (default), the restore will not overwrite live objects with the same name at the destination. This means some deleted objects may be skipped. If true, live objects will be overwritten resulting in a noncurrent object (if versioning is enabled). If versioning is not enabled, overwriting the object will result in a soft-deleted object. In either case, if a noncurrent object already exists with the same name, a live version can be written without issue.
 * @member {Boolean} allowOverwrite
 */
BulkRestoreObjectsRequest.prototype['allowOverwrite'] = undefined;

/**
 * If true, copies the source object's ACL; otherwise, uses the bucket's default object ACL. The default is false.
 * @member {Boolean} copySourceAcl
 */
BulkRestoreObjectsRequest.prototype['copySourceAcl'] = undefined;

/**
 * Restores only the objects matching any of the specified glob(s). If this parameter is not specified, all objects will be restored within the specified time range.
 * @member {Array.<String>} matchGlobs
 */
BulkRestoreObjectsRequest.prototype['matchGlobs'] = undefined;

/**
 * Restores only the objects that were soft-deleted after this time.
 * @member {Date} softDeletedAfterTime
 */
BulkRestoreObjectsRequest.prototype['softDeletedAfterTime'] = undefined;

/**
 * Restores only the objects that were soft-deleted before this time.
 * @member {Date} softDeletedBeforeTime
 */
BulkRestoreObjectsRequest.prototype['softDeletedBeforeTime'] = undefined;






export default BulkRestoreObjectsRequest;

