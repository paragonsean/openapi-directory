/**
 * Cloud Storage JSON API
 * Stores and retrieves potentially large, immutable data objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HmacKeyMetadata from './HmacKeyMetadata';

/**
 * The HmacKey model module.
 * @module model/HmacKey
 * @version v1
 */
class HmacKey {
    /**
     * Constructs a new <code>HmacKey</code>.
     * JSON template to produce a JSON-style HMAC Key resource for Create responses.
     * @alias module:model/HmacKey
     */
    constructor() { 
        
        HmacKey.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['kind'] = 'storage#hmacKey';
    }

    /**
     * Constructs a <code>HmacKey</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HmacKey} obj Optional instance to populate.
     * @return {module:model/HmacKey} The populated <code>HmacKey</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HmacKey();

            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = HmacKeyMetadata.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('secret')) {
                obj['secret'] = ApiClient.convertToType(data['secret'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HmacKey</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HmacKey</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          HmacKeyMetadata.validateJSON(data['metadata']);
        }
        // ensure the json data is a string
        if (data['secret'] && !(typeof data['secret'] === 'string' || data['secret'] instanceof String)) {
            throw new Error("Expected the field `secret` to be a primitive type in the JSON string but got " + data['secret']);
        }

        return true;
    }


}



/**
 * The kind of item this is. For HMAC keys, this is always storage#hmacKey.
 * @member {String} kind
 * @default 'storage#hmacKey'
 */
HmacKey.prototype['kind'] = 'storage#hmacKey';

/**
 * @member {module:model/HmacKeyMetadata} metadata
 */
HmacKey.prototype['metadata'] = undefined;

/**
 * HMAC secret key material.
 * @member {String} secret
 */
HmacKey.prototype['secret'] = undefined;






export default HmacKey;

