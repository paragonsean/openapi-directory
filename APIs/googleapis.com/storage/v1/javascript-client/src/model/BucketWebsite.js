/**
 * Cloud Storage JSON API
 * Stores and retrieves potentially large, immutable data objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BucketWebsite model module.
 * @module model/BucketWebsite
 * @version v1
 */
class BucketWebsite {
    /**
     * Constructs a new <code>BucketWebsite</code>.
     * The bucket&#39;s website configuration, controlling how the service behaves when accessing bucket contents as a web site. See the Static Website Examples for more information.
     * @alias module:model/BucketWebsite
     */
    constructor() { 
        
        BucketWebsite.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BucketWebsite</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BucketWebsite} obj Optional instance to populate.
     * @return {module:model/BucketWebsite} The populated <code>BucketWebsite</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BucketWebsite();

            if (data.hasOwnProperty('mainPageSuffix')) {
                obj['mainPageSuffix'] = ApiClient.convertToType(data['mainPageSuffix'], 'String');
            }
            if (data.hasOwnProperty('notFoundPage')) {
                obj['notFoundPage'] = ApiClient.convertToType(data['notFoundPage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BucketWebsite</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BucketWebsite</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['mainPageSuffix'] && !(typeof data['mainPageSuffix'] === 'string' || data['mainPageSuffix'] instanceof String)) {
            throw new Error("Expected the field `mainPageSuffix` to be a primitive type in the JSON string but got " + data['mainPageSuffix']);
        }
        // ensure the json data is a string
        if (data['notFoundPage'] && !(typeof data['notFoundPage'] === 'string' || data['notFoundPage'] instanceof String)) {
            throw new Error("Expected the field `notFoundPage` to be a primitive type in the JSON string but got " + data['notFoundPage']);
        }

        return true;
    }


}



/**
 * If the requested object path is missing, the service will ensure the path has a trailing '/', append this suffix, and attempt to retrieve the resulting object. This allows the creation of index.html objects to represent directory pages.
 * @member {String} mainPageSuffix
 */
BucketWebsite.prototype['mainPageSuffix'] = undefined;

/**
 * If the requested object path is missing, and any mainPageSuffix object is missing, if applicable, the service will return the named object from this bucket as the content for a 404 Not Found result.
 * @member {String} notFoundPage
 */
BucketWebsite.prototype['notFoundPage'] = undefined;






export default BucketWebsite;

