/**
 * Cloud Storage JSON API
 * Stores and retrieves potentially large, immutable data objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BucketLifecycleRuleInnerCondition model module.
 * @module model/BucketLifecycleRuleInnerCondition
 * @version v1
 */
class BucketLifecycleRuleInnerCondition {
    /**
     * Constructs a new <code>BucketLifecycleRuleInnerCondition</code>.
     * The condition(s) under which the action will be taken.
     * @alias module:model/BucketLifecycleRuleInnerCondition
     */
    constructor() { 
        
        BucketLifecycleRuleInnerCondition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BucketLifecycleRuleInnerCondition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BucketLifecycleRuleInnerCondition} obj Optional instance to populate.
     * @return {module:model/BucketLifecycleRuleInnerCondition} The populated <code>BucketLifecycleRuleInnerCondition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BucketLifecycleRuleInnerCondition();

            if (data.hasOwnProperty('age')) {
                obj['age'] = ApiClient.convertToType(data['age'], 'Number');
            }
            if (data.hasOwnProperty('createdBefore')) {
                obj['createdBefore'] = ApiClient.convertToType(data['createdBefore'], 'Date');
            }
            if (data.hasOwnProperty('customTimeBefore')) {
                obj['customTimeBefore'] = ApiClient.convertToType(data['customTimeBefore'], 'Date');
            }
            if (data.hasOwnProperty('daysSinceCustomTime')) {
                obj['daysSinceCustomTime'] = ApiClient.convertToType(data['daysSinceCustomTime'], 'Number');
            }
            if (data.hasOwnProperty('daysSinceNoncurrentTime')) {
                obj['daysSinceNoncurrentTime'] = ApiClient.convertToType(data['daysSinceNoncurrentTime'], 'Number');
            }
            if (data.hasOwnProperty('isLive')) {
                obj['isLive'] = ApiClient.convertToType(data['isLive'], 'Boolean');
            }
            if (data.hasOwnProperty('matchesPattern')) {
                obj['matchesPattern'] = ApiClient.convertToType(data['matchesPattern'], 'String');
            }
            if (data.hasOwnProperty('matchesPrefix')) {
                obj['matchesPrefix'] = ApiClient.convertToType(data['matchesPrefix'], ['String']);
            }
            if (data.hasOwnProperty('matchesStorageClass')) {
                obj['matchesStorageClass'] = ApiClient.convertToType(data['matchesStorageClass'], ['String']);
            }
            if (data.hasOwnProperty('matchesSuffix')) {
                obj['matchesSuffix'] = ApiClient.convertToType(data['matchesSuffix'], ['String']);
            }
            if (data.hasOwnProperty('noncurrentTimeBefore')) {
                obj['noncurrentTimeBefore'] = ApiClient.convertToType(data['noncurrentTimeBefore'], 'Date');
            }
            if (data.hasOwnProperty('numNewerVersions')) {
                obj['numNewerVersions'] = ApiClient.convertToType(data['numNewerVersions'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BucketLifecycleRuleInnerCondition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BucketLifecycleRuleInnerCondition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['matchesPattern'] && !(typeof data['matchesPattern'] === 'string' || data['matchesPattern'] instanceof String)) {
            throw new Error("Expected the field `matchesPattern` to be a primitive type in the JSON string but got " + data['matchesPattern']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['matchesPrefix'])) {
            throw new Error("Expected the field `matchesPrefix` to be an array in the JSON data but got " + data['matchesPrefix']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['matchesStorageClass'])) {
            throw new Error("Expected the field `matchesStorageClass` to be an array in the JSON data but got " + data['matchesStorageClass']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['matchesSuffix'])) {
            throw new Error("Expected the field `matchesSuffix` to be an array in the JSON data but got " + data['matchesSuffix']);
        }

        return true;
    }


}



/**
 * Age of an object (in days). This condition is satisfied when an object reaches the specified age.
 * @member {Number} age
 */
BucketLifecycleRuleInnerCondition.prototype['age'] = undefined;

/**
 * A date in RFC 3339 format with only the date part (for instance, \"2013-01-15\"). This condition is satisfied when an object is created before midnight of the specified date in UTC.
 * @member {Date} createdBefore
 */
BucketLifecycleRuleInnerCondition.prototype['createdBefore'] = undefined;

/**
 * A date in RFC 3339 format with only the date part (for instance, \"2013-01-15\"). This condition is satisfied when the custom time on an object is before this date in UTC.
 * @member {Date} customTimeBefore
 */
BucketLifecycleRuleInnerCondition.prototype['customTimeBefore'] = undefined;

/**
 * Number of days elapsed since the user-specified timestamp set on an object. The condition is satisfied if the days elapsed is at least this number. If no custom timestamp is specified on an object, the condition does not apply.
 * @member {Number} daysSinceCustomTime
 */
BucketLifecycleRuleInnerCondition.prototype['daysSinceCustomTime'] = undefined;

/**
 * Number of days elapsed since the noncurrent timestamp of an object. The condition is satisfied if the days elapsed is at least this number. This condition is relevant only for versioned objects. The value of the field must be a nonnegative integer. If it's zero, the object version will become eligible for Lifecycle action as soon as it becomes noncurrent.
 * @member {Number} daysSinceNoncurrentTime
 */
BucketLifecycleRuleInnerCondition.prototype['daysSinceNoncurrentTime'] = undefined;

/**
 * Relevant only for versioned objects. If the value is true, this condition matches live objects; if the value is false, it matches archived objects.
 * @member {Boolean} isLive
 */
BucketLifecycleRuleInnerCondition.prototype['isLive'] = undefined;

/**
 * A regular expression that satisfies the RE2 syntax. This condition is satisfied when the name of the object matches the RE2 pattern. Note: This feature is currently in the \"Early Access\" launch stage and is only available to a whitelisted set of users; that means that this feature may be changed in backward-incompatible ways and that it is not guaranteed to be released.
 * @member {String} matchesPattern
 */
BucketLifecycleRuleInnerCondition.prototype['matchesPattern'] = undefined;

/**
 * List of object name prefixes. This condition will be satisfied when at least one of the prefixes exactly matches the beginning of the object name.
 * @member {Array.<String>} matchesPrefix
 */
BucketLifecycleRuleInnerCondition.prototype['matchesPrefix'] = undefined;

/**
 * Objects having any of the storage classes specified by this condition will be matched. Values include MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, STANDARD, and DURABLE_REDUCED_AVAILABILITY.
 * @member {Array.<String>} matchesStorageClass
 */
BucketLifecycleRuleInnerCondition.prototype['matchesStorageClass'] = undefined;

/**
 * List of object name suffixes. This condition will be satisfied when at least one of the suffixes exactly matches the end of the object name.
 * @member {Array.<String>} matchesSuffix
 */
BucketLifecycleRuleInnerCondition.prototype['matchesSuffix'] = undefined;

/**
 * A date in RFC 3339 format with only the date part (for instance, \"2013-01-15\"). This condition is satisfied when the noncurrent time on an object is before this date in UTC. This condition is relevant only for versioned objects.
 * @member {Date} noncurrentTimeBefore
 */
BucketLifecycleRuleInnerCondition.prototype['noncurrentTimeBefore'] = undefined;

/**
 * Relevant only for versioned objects. If the value is N, this condition is satisfied when there are at least N versions (including the live version) newer than this version of the object.
 * @member {Number} numNewerVersions
 */
BucketLifecycleRuleInnerCondition.prototype['numNewerVersions'] = undefined;






export default BucketLifecycleRuleInnerCondition;

