/**
 * Cloud Storage JSON API
 * Stores and retrieves potentially large, immutable data objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ObjectCustomerEncryption model module.
 * @module model/ObjectCustomerEncryption
 * @version v1
 */
class ObjectCustomerEncryption {
    /**
     * Constructs a new <code>ObjectCustomerEncryption</code>.
     * Metadata of customer-supplied encryption key, if the object is encrypted by such a key.
     * @alias module:model/ObjectCustomerEncryption
     */
    constructor() { 
        
        ObjectCustomerEncryption.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ObjectCustomerEncryption</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ObjectCustomerEncryption} obj Optional instance to populate.
     * @return {module:model/ObjectCustomerEncryption} The populated <code>ObjectCustomerEncryption</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ObjectCustomerEncryption();

            if (data.hasOwnProperty('encryptionAlgorithm')) {
                obj['encryptionAlgorithm'] = ApiClient.convertToType(data['encryptionAlgorithm'], 'String');
            }
            if (data.hasOwnProperty('keySha256')) {
                obj['keySha256'] = ApiClient.convertToType(data['keySha256'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ObjectCustomerEncryption</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ObjectCustomerEncryption</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['encryptionAlgorithm'] && !(typeof data['encryptionAlgorithm'] === 'string' || data['encryptionAlgorithm'] instanceof String)) {
            throw new Error("Expected the field `encryptionAlgorithm` to be a primitive type in the JSON string but got " + data['encryptionAlgorithm']);
        }
        // ensure the json data is a string
        if (data['keySha256'] && !(typeof data['keySha256'] === 'string' || data['keySha256'] instanceof String)) {
            throw new Error("Expected the field `keySha256` to be a primitive type in the JSON string but got " + data['keySha256']);
        }

        return true;
    }


}



/**
 * The encryption algorithm.
 * @member {String} encryptionAlgorithm
 */
ObjectCustomerEncryption.prototype['encryptionAlgorithm'] = undefined;

/**
 * SHA256 hash value of the encryption key.
 * @member {String} keySha256
 */
ObjectCustomerEncryption.prototype['keySha256'] = undefined;






export default ObjectCustomerEncryption;

