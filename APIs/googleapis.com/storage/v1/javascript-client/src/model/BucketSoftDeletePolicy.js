/**
 * Cloud Storage JSON API
 * Stores and retrieves potentially large, immutable data objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BucketSoftDeletePolicy model module.
 * @module model/BucketSoftDeletePolicy
 * @version v1
 */
class BucketSoftDeletePolicy {
    /**
     * Constructs a new <code>BucketSoftDeletePolicy</code>.
     * The bucket&#39;s soft delete policy, which defines the period of time that soft-deleted objects will be retained, and cannot be permanently deleted.
     * @alias module:model/BucketSoftDeletePolicy
     */
    constructor() { 
        
        BucketSoftDeletePolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BucketSoftDeletePolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BucketSoftDeletePolicy} obj Optional instance to populate.
     * @return {module:model/BucketSoftDeletePolicy} The populated <code>BucketSoftDeletePolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BucketSoftDeletePolicy();

            if (data.hasOwnProperty('effectiveTime')) {
                obj['effectiveTime'] = ApiClient.convertToType(data['effectiveTime'], 'Date');
            }
            if (data.hasOwnProperty('retentionDurationSeconds')) {
                obj['retentionDurationSeconds'] = ApiClient.convertToType(data['retentionDurationSeconds'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BucketSoftDeletePolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BucketSoftDeletePolicy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['retentionDurationSeconds'] && !(typeof data['retentionDurationSeconds'] === 'string' || data['retentionDurationSeconds'] instanceof String)) {
            throw new Error("Expected the field `retentionDurationSeconds` to be a primitive type in the JSON string but got " + data['retentionDurationSeconds']);
        }

        return true;
    }


}



/**
 * Server-determined value that indicates the time from which the policy, or one with a greater retention, was effective. This value is in RFC 3339 format.
 * @member {Date} effectiveTime
 */
BucketSoftDeletePolicy.prototype['effectiveTime'] = undefined;

/**
 * The duration in seconds that soft-deleted objects in the bucket will be retained and cannot be permanently deleted.
 * @member {String} retentionDurationSeconds
 */
BucketSoftDeletePolicy.prototype['retentionDurationSeconds'] = undefined;






export default BucketSoftDeletePolicy;

