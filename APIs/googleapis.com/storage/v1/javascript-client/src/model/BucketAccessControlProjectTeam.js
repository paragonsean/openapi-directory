/**
 * Cloud Storage JSON API
 * Stores and retrieves potentially large, immutable data objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BucketAccessControlProjectTeam model module.
 * @module model/BucketAccessControlProjectTeam
 * @version v1
 */
class BucketAccessControlProjectTeam {
    /**
     * Constructs a new <code>BucketAccessControlProjectTeam</code>.
     * The project team associated with the entity, if any.
     * @alias module:model/BucketAccessControlProjectTeam
     */
    constructor() { 
        
        BucketAccessControlProjectTeam.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BucketAccessControlProjectTeam</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BucketAccessControlProjectTeam} obj Optional instance to populate.
     * @return {module:model/BucketAccessControlProjectTeam} The populated <code>BucketAccessControlProjectTeam</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BucketAccessControlProjectTeam();

            if (data.hasOwnProperty('projectNumber')) {
                obj['projectNumber'] = ApiClient.convertToType(data['projectNumber'], 'String');
            }
            if (data.hasOwnProperty('team')) {
                obj['team'] = ApiClient.convertToType(data['team'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BucketAccessControlProjectTeam</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BucketAccessControlProjectTeam</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['projectNumber'] && !(typeof data['projectNumber'] === 'string' || data['projectNumber'] instanceof String)) {
            throw new Error("Expected the field `projectNumber` to be a primitive type in the JSON string but got " + data['projectNumber']);
        }
        // ensure the json data is a string
        if (data['team'] && !(typeof data['team'] === 'string' || data['team'] instanceof String)) {
            throw new Error("Expected the field `team` to be a primitive type in the JSON string but got " + data['team']);
        }

        return true;
    }


}



/**
 * The project number.
 * @member {String} projectNumber
 */
BucketAccessControlProjectTeam.prototype['projectNumber'] = undefined;

/**
 * The team.
 * @member {String} team
 */
BucketAccessControlProjectTeam.prototype['team'] = undefined;






export default BucketAccessControlProjectTeam;

