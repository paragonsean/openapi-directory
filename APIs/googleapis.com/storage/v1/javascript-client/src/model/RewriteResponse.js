/**
 * Cloud Storage JSON API
 * Stores and retrieves potentially large, immutable data objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelObject from './ModelObject';

/**
 * The RewriteResponse model module.
 * @module model/RewriteResponse
 * @version v1
 */
class RewriteResponse {
    /**
     * Constructs a new <code>RewriteResponse</code>.
     * A rewrite response.
     * @alias module:model/RewriteResponse
     */
    constructor() { 
        
        RewriteResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['kind'] = 'storage#rewriteResponse';
    }

    /**
     * Constructs a <code>RewriteResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RewriteResponse} obj Optional instance to populate.
     * @return {module:model/RewriteResponse} The populated <code>RewriteResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RewriteResponse();

            if (data.hasOwnProperty('done')) {
                obj['done'] = ApiClient.convertToType(data['done'], 'Boolean');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('objectSize')) {
                obj['objectSize'] = ApiClient.convertToType(data['objectSize'], 'String');
            }
            if (data.hasOwnProperty('resource')) {
                obj['resource'] = ModelObject.constructFromObject(data['resource']);
            }
            if (data.hasOwnProperty('rewriteToken')) {
                obj['rewriteToken'] = ApiClient.convertToType(data['rewriteToken'], 'String');
            }
            if (data.hasOwnProperty('totalBytesRewritten')) {
                obj['totalBytesRewritten'] = ApiClient.convertToType(data['totalBytesRewritten'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RewriteResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RewriteResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['objectSize'] && !(typeof data['objectSize'] === 'string' || data['objectSize'] instanceof String)) {
            throw new Error("Expected the field `objectSize` to be a primitive type in the JSON string but got " + data['objectSize']);
        }
        // validate the optional field `resource`
        if (data['resource']) { // data not null
          ModelObject.validateJSON(data['resource']);
        }
        // ensure the json data is a string
        if (data['rewriteToken'] && !(typeof data['rewriteToken'] === 'string' || data['rewriteToken'] instanceof String)) {
            throw new Error("Expected the field `rewriteToken` to be a primitive type in the JSON string but got " + data['rewriteToken']);
        }
        // ensure the json data is a string
        if (data['totalBytesRewritten'] && !(typeof data['totalBytesRewritten'] === 'string' || data['totalBytesRewritten'] instanceof String)) {
            throw new Error("Expected the field `totalBytesRewritten` to be a primitive type in the JSON string but got " + data['totalBytesRewritten']);
        }

        return true;
    }


}



/**
 * true if the copy is finished; otherwise, false if the copy is in progress. This property is always present in the response.
 * @member {Boolean} done
 */
RewriteResponse.prototype['done'] = undefined;

/**
 * The kind of item this is.
 * @member {String} kind
 * @default 'storage#rewriteResponse'
 */
RewriteResponse.prototype['kind'] = 'storage#rewriteResponse';

/**
 * The total size of the object being copied in bytes. This property is always present in the response.
 * @member {String} objectSize
 */
RewriteResponse.prototype['objectSize'] = undefined;

/**
 * @member {module:model/ModelObject} resource
 */
RewriteResponse.prototype['resource'] = undefined;

/**
 * A token to use in subsequent requests to continue copying data. This token is present in the response only when there is more data to copy.
 * @member {String} rewriteToken
 */
RewriteResponse.prototype['rewriteToken'] = undefined;

/**
 * The total bytes written so far, which can be used to provide a waiting user with a progress indicator. This property is always present in the response.
 * @member {String} totalBytesRewritten
 */
RewriteResponse.prototype['totalBytesRewritten'] = undefined;






export default RewriteResponse;

