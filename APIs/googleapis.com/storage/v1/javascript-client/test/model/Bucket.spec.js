/**
 * Cloud Storage JSON API
 * Stores and retrieves potentially large, immutable data objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudStorageJsonApi);
  }
}(this, function(expect, CloudStorageJsonApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudStorageJsonApi.Bucket();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Bucket', function() {
    it('should create an instance of Bucket', function() {
      // uncomment below and update the code to test Bucket
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be.a(CloudStorageJsonApi.Bucket);
    });

    it('should have the property acl (base name: "acl")', function() {
      // uncomment below and update the code to test the property acl
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property autoclass (base name: "autoclass")', function() {
      // uncomment below and update the code to test the property autoclass
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property billing (base name: "billing")', function() {
      // uncomment below and update the code to test the property billing
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property cors (base name: "cors")', function() {
      // uncomment below and update the code to test the property cors
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property customPlacementConfig (base name: "customPlacementConfig")', function() {
      // uncomment below and update the code to test the property customPlacementConfig
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property defaultEventBasedHold (base name: "defaultEventBasedHold")', function() {
      // uncomment below and update the code to test the property defaultEventBasedHold
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property defaultObjectAcl (base name: "defaultObjectAcl")', function() {
      // uncomment below and update the code to test the property defaultObjectAcl
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property encryption (base name: "encryption")', function() {
      // uncomment below and update the code to test the property encryption
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property etag (base name: "etag")', function() {
      // uncomment below and update the code to test the property etag
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property hierarchicalNamespace (base name: "hierarchicalNamespace")', function() {
      // uncomment below and update the code to test the property hierarchicalNamespace
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property iamConfiguration (base name: "iamConfiguration")', function() {
      // uncomment below and update the code to test the property iamConfiguration
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property lifecycle (base name: "lifecycle")', function() {
      // uncomment below and update the code to test the property lifecycle
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property locationType (base name: "locationType")', function() {
      // uncomment below and update the code to test the property locationType
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property logging (base name: "logging")', function() {
      // uncomment below and update the code to test the property logging
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property metageneration (base name: "metageneration")', function() {
      // uncomment below and update the code to test the property metageneration
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property objectRetention (base name: "objectRetention")', function() {
      // uncomment below and update the code to test the property objectRetention
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property owner (base name: "owner")', function() {
      // uncomment below and update the code to test the property owner
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property projectNumber (base name: "projectNumber")', function() {
      // uncomment below and update the code to test the property projectNumber
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property retentionPolicy (base name: "retentionPolicy")', function() {
      // uncomment below and update the code to test the property retentionPolicy
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property rpo (base name: "rpo")', function() {
      // uncomment below and update the code to test the property rpo
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property satisfiesPZS (base name: "satisfiesPZS")', function() {
      // uncomment below and update the code to test the property satisfiesPZS
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property selfLink (base name: "selfLink")', function() {
      // uncomment below and update the code to test the property selfLink
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property softDeletePolicy (base name: "softDeletePolicy")', function() {
      // uncomment below and update the code to test the property softDeletePolicy
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property storageClass (base name: "storageClass")', function() {
      // uncomment below and update the code to test the property storageClass
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property timeCreated (base name: "timeCreated")', function() {
      // uncomment below and update the code to test the property timeCreated
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property updated (base name: "updated")', function() {
      // uncomment below and update the code to test the property updated
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property versioning (base name: "versioning")', function() {
      // uncomment below and update the code to test the property versioning
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

    it('should have the property website (base name: "website")', function() {
      // uncomment below and update the code to test the property website
      //var instance = new CloudStorageJsonApi.Bucket();
      //expect(instance).to.be();
    });

  });

}));
