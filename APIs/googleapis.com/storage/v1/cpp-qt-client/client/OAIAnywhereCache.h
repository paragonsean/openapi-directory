/**
 * Cloud Storage JSON API
 * Stores and retrieves potentially large, immutable data objects.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnywhereCache.h
 *
 * An Anywhere Cache instance.
 */

#ifndef OAIAnywhereCache_H
#define OAIAnywhereCache_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAnywhereCache : public OAIObject {
public:
    OAIAnywhereCache();
    OAIAnywhereCache(QString json);
    ~OAIAnywhereCache() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdmissionPolicy() const;
    void setAdmissionPolicy(const QString &admission_policy);
    bool is_admission_policy_Set() const;
    bool is_admission_policy_Valid() const;

    QString getAnywhereCacheId() const;
    void setAnywhereCacheId(const QString &anywhere_cache_id);
    bool is_anywhere_cache_id_Set() const;
    bool is_anywhere_cache_id_Valid() const;

    QString getBucket() const;
    void setBucket(const QString &bucket);
    bool is_bucket_Set() const;
    bool is_bucket_Valid() const;

    QDateTime getCreateTime() const;
    void setCreateTime(const QDateTime &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    bool isPendingUpdate() const;
    void setPendingUpdate(const bool &pending_update);
    bool is_pending_update_Set() const;
    bool is_pending_update_Valid() const;

    QString getSelfLink() const;
    void setSelfLink(const QString &self_link);
    bool is_self_link_Set() const;
    bool is_self_link_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getTtl() const;
    void setTtl(const QString &ttl);
    bool is_ttl_Set() const;
    bool is_ttl_Valid() const;

    QDateTime getUpdateTime() const;
    void setUpdateTime(const QDateTime &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    QString getZone() const;
    void setZone(const QString &zone);
    bool is_zone_Set() const;
    bool is_zone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_admission_policy;
    bool m_admission_policy_isSet;
    bool m_admission_policy_isValid;

    QString m_anywhere_cache_id;
    bool m_anywhere_cache_id_isSet;
    bool m_anywhere_cache_id_isValid;

    QString m_bucket;
    bool m_bucket_isSet;
    bool m_bucket_isValid;

    QDateTime m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    bool m_pending_update;
    bool m_pending_update_isSet;
    bool m_pending_update_isValid;

    QString m_self_link;
    bool m_self_link_isSet;
    bool m_self_link_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_ttl;
    bool m_ttl_isSet;
    bool m_ttl_isValid;

    QDateTime m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;

    QString m_zone;
    bool m_zone_isSet;
    bool m_zone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnywhereCache)

#endif // OAIAnywhereCache_H
