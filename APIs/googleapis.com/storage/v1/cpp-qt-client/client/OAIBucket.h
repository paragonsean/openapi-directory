/**
 * Cloud Storage JSON API
 * Stores and retrieves potentially large, immutable data objects.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBucket.h
 *
 * A bucket.
 */

#ifndef OAIBucket_H
#define OAIBucket_H

#include <QJsonObject>

#include "OAIBucketAccessControl.h"
#include "OAIBucket_autoclass.h"
#include "OAIBucket_billing.h"
#include "OAIBucket_cors_inner.h"
#include "OAIBucket_customPlacementConfig.h"
#include "OAIBucket_encryption.h"
#include "OAIBucket_hierarchicalNamespace.h"
#include "OAIBucket_iamConfiguration.h"
#include "OAIBucket_lifecycle.h"
#include "OAIBucket_logging.h"
#include "OAIBucket_objectRetention.h"
#include "OAIBucket_owner.h"
#include "OAIBucket_retentionPolicy.h"
#include "OAIBucket_softDeletePolicy.h"
#include "OAIBucket_versioning.h"
#include "OAIBucket_website.h"
#include "OAIObjectAccessControl.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBucketAccessControl;
class OAIBucket_autoclass;
class OAIBucket_billing;
class OAIBucket_cors_inner;
class OAIBucket_customPlacementConfig;
class OAIObjectAccessControl;
class OAIBucket_encryption;
class OAIBucket_hierarchicalNamespace;
class OAIBucket_iamConfiguration;
class OAIBucket_lifecycle;
class OAIBucket_logging;
class OAIBucket_objectRetention;
class OAIBucket_owner;
class OAIBucket_retentionPolicy;
class OAIBucket_softDeletePolicy;
class OAIBucket_versioning;
class OAIBucket_website;

class OAIBucket : public OAIObject {
public:
    OAIBucket();
    OAIBucket(QString json);
    ~OAIBucket() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIBucketAccessControl> getAcl() const;
    void setAcl(const QList<OAIBucketAccessControl> &acl);
    bool is_acl_Set() const;
    bool is_acl_Valid() const;

    OAIBucket_autoclass getAutoclass() const;
    void setAutoclass(const OAIBucket_autoclass &autoclass);
    bool is_autoclass_Set() const;
    bool is_autoclass_Valid() const;

    OAIBucket_billing getBilling() const;
    void setBilling(const OAIBucket_billing &billing);
    bool is_billing_Set() const;
    bool is_billing_Valid() const;

    QList<OAIBucket_cors_inner> getCors() const;
    void setCors(const QList<OAIBucket_cors_inner> &cors);
    bool is_cors_Set() const;
    bool is_cors_Valid() const;

    OAIBucket_customPlacementConfig getCustomPlacementConfig() const;
    void setCustomPlacementConfig(const OAIBucket_customPlacementConfig &custom_placement_config);
    bool is_custom_placement_config_Set() const;
    bool is_custom_placement_config_Valid() const;

    bool isDefaultEventBasedHold() const;
    void setDefaultEventBasedHold(const bool &default_event_based_hold);
    bool is_default_event_based_hold_Set() const;
    bool is_default_event_based_hold_Valid() const;

    QList<OAIObjectAccessControl> getDefaultObjectAcl() const;
    void setDefaultObjectAcl(const QList<OAIObjectAccessControl> &default_object_acl);
    bool is_default_object_acl_Set() const;
    bool is_default_object_acl_Valid() const;

    OAIBucket_encryption getEncryption() const;
    void setEncryption(const OAIBucket_encryption &encryption);
    bool is_encryption_Set() const;
    bool is_encryption_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    OAIBucket_hierarchicalNamespace getHierarchicalNamespace() const;
    void setHierarchicalNamespace(const OAIBucket_hierarchicalNamespace &hierarchical_namespace);
    bool is_hierarchical_namespace_Set() const;
    bool is_hierarchical_namespace_Valid() const;

    OAIBucket_iamConfiguration getIamConfiguration() const;
    void setIamConfiguration(const OAIBucket_iamConfiguration &iam_configuration);
    bool is_iam_configuration_Set() const;
    bool is_iam_configuration_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    OAIBucket_lifecycle getLifecycle() const;
    void setLifecycle(const OAIBucket_lifecycle &lifecycle);
    bool is_lifecycle_Set() const;
    bool is_lifecycle_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getLocationType() const;
    void setLocationType(const QString &location_type);
    bool is_location_type_Set() const;
    bool is_location_type_Valid() const;

    OAIBucket_logging getLogging() const;
    void setLogging(const OAIBucket_logging &logging);
    bool is_logging_Set() const;
    bool is_logging_Valid() const;

    QString getMetageneration() const;
    void setMetageneration(const QString &metageneration);
    bool is_metageneration_Set() const;
    bool is_metageneration_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIBucket_objectRetention getObjectRetention() const;
    void setObjectRetention(const OAIBucket_objectRetention &object_retention);
    bool is_object_retention_Set() const;
    bool is_object_retention_Valid() const;

    OAIBucket_owner getOwner() const;
    void setOwner(const OAIBucket_owner &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    QString getProjectNumber() const;
    void setProjectNumber(const QString &project_number);
    bool is_project_number_Set() const;
    bool is_project_number_Valid() const;

    OAIBucket_retentionPolicy getRetentionPolicy() const;
    void setRetentionPolicy(const OAIBucket_retentionPolicy &retention_policy);
    bool is_retention_policy_Set() const;
    bool is_retention_policy_Valid() const;

    QString getRpo() const;
    void setRpo(const QString &rpo);
    bool is_rpo_Set() const;
    bool is_rpo_Valid() const;

    bool isSatisfiesPzs() const;
    void setSatisfiesPzs(const bool &satisfies_pzs);
    bool is_satisfies_pzs_Set() const;
    bool is_satisfies_pzs_Valid() const;

    QString getSelfLink() const;
    void setSelfLink(const QString &self_link);
    bool is_self_link_Set() const;
    bool is_self_link_Valid() const;

    OAIBucket_softDeletePolicy getSoftDeletePolicy() const;
    void setSoftDeletePolicy(const OAIBucket_softDeletePolicy &soft_delete_policy);
    bool is_soft_delete_policy_Set() const;
    bool is_soft_delete_policy_Valid() const;

    QString getStorageClass() const;
    void setStorageClass(const QString &storage_class);
    bool is_storage_class_Set() const;
    bool is_storage_class_Valid() const;

    QDateTime getTimeCreated() const;
    void setTimeCreated(const QDateTime &time_created);
    bool is_time_created_Set() const;
    bool is_time_created_Valid() const;

    QDateTime getUpdated() const;
    void setUpdated(const QDateTime &updated);
    bool is_updated_Set() const;
    bool is_updated_Valid() const;

    OAIBucket_versioning getVersioning() const;
    void setVersioning(const OAIBucket_versioning &versioning);
    bool is_versioning_Set() const;
    bool is_versioning_Valid() const;

    OAIBucket_website getWebsite() const;
    void setWebsite(const OAIBucket_website &website);
    bool is_website_Set() const;
    bool is_website_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIBucketAccessControl> m_acl;
    bool m_acl_isSet;
    bool m_acl_isValid;

    OAIBucket_autoclass m_autoclass;
    bool m_autoclass_isSet;
    bool m_autoclass_isValid;

    OAIBucket_billing m_billing;
    bool m_billing_isSet;
    bool m_billing_isValid;

    QList<OAIBucket_cors_inner> m_cors;
    bool m_cors_isSet;
    bool m_cors_isValid;

    OAIBucket_customPlacementConfig m_custom_placement_config;
    bool m_custom_placement_config_isSet;
    bool m_custom_placement_config_isValid;

    bool m_default_event_based_hold;
    bool m_default_event_based_hold_isSet;
    bool m_default_event_based_hold_isValid;

    QList<OAIObjectAccessControl> m_default_object_acl;
    bool m_default_object_acl_isSet;
    bool m_default_object_acl_isValid;

    OAIBucket_encryption m_encryption;
    bool m_encryption_isSet;
    bool m_encryption_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    OAIBucket_hierarchicalNamespace m_hierarchical_namespace;
    bool m_hierarchical_namespace_isSet;
    bool m_hierarchical_namespace_isValid;

    OAIBucket_iamConfiguration m_iam_configuration;
    bool m_iam_configuration_isSet;
    bool m_iam_configuration_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    OAIBucket_lifecycle m_lifecycle;
    bool m_lifecycle_isSet;
    bool m_lifecycle_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_location_type;
    bool m_location_type_isSet;
    bool m_location_type_isValid;

    OAIBucket_logging m_logging;
    bool m_logging_isSet;
    bool m_logging_isValid;

    QString m_metageneration;
    bool m_metageneration_isSet;
    bool m_metageneration_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIBucket_objectRetention m_object_retention;
    bool m_object_retention_isSet;
    bool m_object_retention_isValid;

    OAIBucket_owner m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    QString m_project_number;
    bool m_project_number_isSet;
    bool m_project_number_isValid;

    OAIBucket_retentionPolicy m_retention_policy;
    bool m_retention_policy_isSet;
    bool m_retention_policy_isValid;

    QString m_rpo;
    bool m_rpo_isSet;
    bool m_rpo_isValid;

    bool m_satisfies_pzs;
    bool m_satisfies_pzs_isSet;
    bool m_satisfies_pzs_isValid;

    QString m_self_link;
    bool m_self_link_isSet;
    bool m_self_link_isValid;

    OAIBucket_softDeletePolicy m_soft_delete_policy;
    bool m_soft_delete_policy_isSet;
    bool m_soft_delete_policy_isValid;

    QString m_storage_class;
    bool m_storage_class_isSet;
    bool m_storage_class_isValid;

    QDateTime m_time_created;
    bool m_time_created_isSet;
    bool m_time_created_isValid;

    QDateTime m_updated;
    bool m_updated_isSet;
    bool m_updated_isValid;

    OAIBucket_versioning m_versioning;
    bool m_versioning_isSet;
    bool m_versioning_isValid;

    OAIBucket_website m_website;
    bool m_website_isSet;
    bool m_website_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBucket)

#endif // OAIBucket_H
