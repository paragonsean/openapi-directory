/**
 * Cloud Storage JSON API
 * Stores and retrieves potentially large, immutable data objects.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIComposeRequest_sourceObjects_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIComposeRequest_sourceObjects_inner::OAIComposeRequest_sourceObjects_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIComposeRequest_sourceObjects_inner::OAIComposeRequest_sourceObjects_inner() {
    this->initializeModel();
}

OAIComposeRequest_sourceObjects_inner::~OAIComposeRequest_sourceObjects_inner() {}

void OAIComposeRequest_sourceObjects_inner::initializeModel() {

    m_generation_isSet = false;
    m_generation_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_object_preconditions_isSet = false;
    m_object_preconditions_isValid = false;
}

void OAIComposeRequest_sourceObjects_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIComposeRequest_sourceObjects_inner::fromJsonObject(QJsonObject json) {

    m_generation_isValid = ::OpenAPI::fromJsonValue(m_generation, json[QString("generation")]);
    m_generation_isSet = !json[QString("generation")].isNull() && m_generation_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_object_preconditions_isValid = ::OpenAPI::fromJsonValue(m_object_preconditions, json[QString("objectPreconditions")]);
    m_object_preconditions_isSet = !json[QString("objectPreconditions")].isNull() && m_object_preconditions_isValid;
}

QString OAIComposeRequest_sourceObjects_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIComposeRequest_sourceObjects_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_generation_isSet) {
        obj.insert(QString("generation"), ::OpenAPI::toJsonValue(m_generation));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_object_preconditions.isSet()) {
        obj.insert(QString("objectPreconditions"), ::OpenAPI::toJsonValue(m_object_preconditions));
    }
    return obj;
}

QString OAIComposeRequest_sourceObjects_inner::getGeneration() const {
    return m_generation;
}
void OAIComposeRequest_sourceObjects_inner::setGeneration(const QString &generation) {
    m_generation = generation;
    m_generation_isSet = true;
}

bool OAIComposeRequest_sourceObjects_inner::is_generation_Set() const{
    return m_generation_isSet;
}

bool OAIComposeRequest_sourceObjects_inner::is_generation_Valid() const{
    return m_generation_isValid;
}

QString OAIComposeRequest_sourceObjects_inner::getName() const {
    return m_name;
}
void OAIComposeRequest_sourceObjects_inner::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIComposeRequest_sourceObjects_inner::is_name_Set() const{
    return m_name_isSet;
}

bool OAIComposeRequest_sourceObjects_inner::is_name_Valid() const{
    return m_name_isValid;
}

OAIComposeRequest_sourceObjects_inner_objectPreconditions OAIComposeRequest_sourceObjects_inner::getObjectPreconditions() const {
    return m_object_preconditions;
}
void OAIComposeRequest_sourceObjects_inner::setObjectPreconditions(const OAIComposeRequest_sourceObjects_inner_objectPreconditions &object_preconditions) {
    m_object_preconditions = object_preconditions;
    m_object_preconditions_isSet = true;
}

bool OAIComposeRequest_sourceObjects_inner::is_object_preconditions_Set() const{
    return m_object_preconditions_isSet;
}

bool OAIComposeRequest_sourceObjects_inner::is_object_preconditions_Valid() const{
    return m_object_preconditions_isValid;
}

bool OAIComposeRequest_sourceObjects_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_generation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_preconditions.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIComposeRequest_sourceObjects_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
