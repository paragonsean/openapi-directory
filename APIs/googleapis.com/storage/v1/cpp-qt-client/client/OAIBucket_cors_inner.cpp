/**
 * Cloud Storage JSON API
 * Stores and retrieves potentially large, immutable data objects.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBucket_cors_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBucket_cors_inner::OAIBucket_cors_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBucket_cors_inner::OAIBucket_cors_inner() {
    this->initializeModel();
}

OAIBucket_cors_inner::~OAIBucket_cors_inner() {}

void OAIBucket_cors_inner::initializeModel() {

    m_max_age_seconds_isSet = false;
    m_max_age_seconds_isValid = false;

    m_method_isSet = false;
    m_method_isValid = false;

    m_origin_isSet = false;
    m_origin_isValid = false;

    m_response_header_isSet = false;
    m_response_header_isValid = false;
}

void OAIBucket_cors_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBucket_cors_inner::fromJsonObject(QJsonObject json) {

    m_max_age_seconds_isValid = ::OpenAPI::fromJsonValue(m_max_age_seconds, json[QString("maxAgeSeconds")]);
    m_max_age_seconds_isSet = !json[QString("maxAgeSeconds")].isNull() && m_max_age_seconds_isValid;

    m_method_isValid = ::OpenAPI::fromJsonValue(m_method, json[QString("method")]);
    m_method_isSet = !json[QString("method")].isNull() && m_method_isValid;

    m_origin_isValid = ::OpenAPI::fromJsonValue(m_origin, json[QString("origin")]);
    m_origin_isSet = !json[QString("origin")].isNull() && m_origin_isValid;

    m_response_header_isValid = ::OpenAPI::fromJsonValue(m_response_header, json[QString("responseHeader")]);
    m_response_header_isSet = !json[QString("responseHeader")].isNull() && m_response_header_isValid;
}

QString OAIBucket_cors_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBucket_cors_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_max_age_seconds_isSet) {
        obj.insert(QString("maxAgeSeconds"), ::OpenAPI::toJsonValue(m_max_age_seconds));
    }
    if (m_method.size() > 0) {
        obj.insert(QString("method"), ::OpenAPI::toJsonValue(m_method));
    }
    if (m_origin.size() > 0) {
        obj.insert(QString("origin"), ::OpenAPI::toJsonValue(m_origin));
    }
    if (m_response_header.size() > 0) {
        obj.insert(QString("responseHeader"), ::OpenAPI::toJsonValue(m_response_header));
    }
    return obj;
}

qint32 OAIBucket_cors_inner::getMaxAgeSeconds() const {
    return m_max_age_seconds;
}
void OAIBucket_cors_inner::setMaxAgeSeconds(const qint32 &max_age_seconds) {
    m_max_age_seconds = max_age_seconds;
    m_max_age_seconds_isSet = true;
}

bool OAIBucket_cors_inner::is_max_age_seconds_Set() const{
    return m_max_age_seconds_isSet;
}

bool OAIBucket_cors_inner::is_max_age_seconds_Valid() const{
    return m_max_age_seconds_isValid;
}

QList<QString> OAIBucket_cors_inner::getMethod() const {
    return m_method;
}
void OAIBucket_cors_inner::setMethod(const QList<QString> &method) {
    m_method = method;
    m_method_isSet = true;
}

bool OAIBucket_cors_inner::is_method_Set() const{
    return m_method_isSet;
}

bool OAIBucket_cors_inner::is_method_Valid() const{
    return m_method_isValid;
}

QList<QString> OAIBucket_cors_inner::getOrigin() const {
    return m_origin;
}
void OAIBucket_cors_inner::setOrigin(const QList<QString> &origin) {
    m_origin = origin;
    m_origin_isSet = true;
}

bool OAIBucket_cors_inner::is_origin_Set() const{
    return m_origin_isSet;
}

bool OAIBucket_cors_inner::is_origin_Valid() const{
    return m_origin_isValid;
}

QList<QString> OAIBucket_cors_inner::getResponseHeader() const {
    return m_response_header;
}
void OAIBucket_cors_inner::setResponseHeader(const QList<QString> &response_header) {
    m_response_header = response_header;
    m_response_header_isSet = true;
}

bool OAIBucket_cors_inner::is_response_header_Set() const{
    return m_response_header_isSet;
}

bool OAIBucket_cors_inner::is_response_header_Valid() const{
    return m_response_header_isValid;
}

bool OAIBucket_cors_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_max_age_seconds_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_method.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_origin.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_header.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBucket_cors_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
