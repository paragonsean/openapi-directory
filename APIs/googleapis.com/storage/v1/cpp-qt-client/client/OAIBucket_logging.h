/**
 * Cloud Storage JSON API
 * Stores and retrieves potentially large, immutable data objects.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBucket_logging.h
 *
 * The bucket&#39;s logging configuration, which defines the destination bucket and optional name prefix for the current bucket&#39;s logs.
 */

#ifndef OAIBucket_logging_H
#define OAIBucket_logging_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBucket_logging : public OAIObject {
public:
    OAIBucket_logging();
    OAIBucket_logging(QString json);
    ~OAIBucket_logging() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLogBucket() const;
    void setLogBucket(const QString &log_bucket);
    bool is_log_bucket_Set() const;
    bool is_log_bucket_Valid() const;

    QString getLogObjectPrefix() const;
    void setLogObjectPrefix(const QString &log_object_prefix);
    bool is_log_object_prefix_Set() const;
    bool is_log_object_prefix_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_log_bucket;
    bool m_log_bucket_isSet;
    bool m_log_bucket_isValid;

    QString m_log_object_prefix;
    bool m_log_object_prefix_isSet;
    bool m_log_object_prefix_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBucket_logging)

#endif // OAIBucket_logging_H
