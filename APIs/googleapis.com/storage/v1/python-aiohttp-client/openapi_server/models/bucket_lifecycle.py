# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bucket_lifecycle_rule_inner import BucketLifecycleRuleInner
from openapi_server import util


class BucketLifecycle(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rule: List[BucketLifecycleRuleInner]=None):
        """BucketLifecycle - a model defined in OpenAPI

        :param rule: The rule of this BucketLifecycle.
        """
        self.openapi_types = {
            'rule': List[BucketLifecycleRuleInner]
        }

        self.attribute_map = {
            'rule': 'rule'
        }

        self._rule = rule

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BucketLifecycle':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Bucket_lifecycle of this BucketLifecycle.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rule(self):
        """Gets the rule of this BucketLifecycle.

        A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.

        :return: The rule of this BucketLifecycle.
        :rtype: List[BucketLifecycleRuleInner]
        """
        return self._rule

    @rule.setter
    def rule(self, rule):
        """Sets the rule of this BucketLifecycle.

        A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.

        :param rule: The rule of this BucketLifecycle.
        :type rule: List[BucketLifecycleRuleInner]
        """

        self._rule = rule
