# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ObjectCustomerEncryption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, encryption_algorithm: str=None, key_sha256: str=None):
        """ObjectCustomerEncryption - a model defined in OpenAPI

        :param encryption_algorithm: The encryption_algorithm of this ObjectCustomerEncryption.
        :param key_sha256: The key_sha256 of this ObjectCustomerEncryption.
        """
        self.openapi_types = {
            'encryption_algorithm': str,
            'key_sha256': str
        }

        self.attribute_map = {
            'encryption_algorithm': 'encryptionAlgorithm',
            'key_sha256': 'keySha256'
        }

        self._encryption_algorithm = encryption_algorithm
        self._key_sha256 = key_sha256

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ObjectCustomerEncryption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Object_customerEncryption of this ObjectCustomerEncryption.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def encryption_algorithm(self):
        """Gets the encryption_algorithm of this ObjectCustomerEncryption.

        The encryption algorithm.

        :return: The encryption_algorithm of this ObjectCustomerEncryption.
        :rtype: str
        """
        return self._encryption_algorithm

    @encryption_algorithm.setter
    def encryption_algorithm(self, encryption_algorithm):
        """Sets the encryption_algorithm of this ObjectCustomerEncryption.

        The encryption algorithm.

        :param encryption_algorithm: The encryption_algorithm of this ObjectCustomerEncryption.
        :type encryption_algorithm: str
        """

        self._encryption_algorithm = encryption_algorithm

    @property
    def key_sha256(self):
        """Gets the key_sha256 of this ObjectCustomerEncryption.

        SHA256 hash value of the encryption key.

        :return: The key_sha256 of this ObjectCustomerEncryption.
        :rtype: str
        """
        return self._key_sha256

    @key_sha256.setter
    def key_sha256(self, key_sha256):
        """Sets the key_sha256 of this ObjectCustomerEncryption.

        SHA256 hash value of the encryption key.

        :param key_sha256: The key_sha256 of this ObjectCustomerEncryption.
        :type key_sha256: str
        """

        self._key_sha256 = key_sha256
