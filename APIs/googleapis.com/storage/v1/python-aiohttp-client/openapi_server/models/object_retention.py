# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ObjectRetention(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mode: str=None, retain_until_time: datetime=None):
        """ObjectRetention - a model defined in OpenAPI

        :param mode: The mode of this ObjectRetention.
        :param retain_until_time: The retain_until_time of this ObjectRetention.
        """
        self.openapi_types = {
            'mode': str,
            'retain_until_time': datetime
        }

        self.attribute_map = {
            'mode': 'mode',
            'retain_until_time': 'retainUntilTime'
        }

        self._mode = mode
        self._retain_until_time = retain_until_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ObjectRetention':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Object_retention of this ObjectRetention.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mode(self):
        """Gets the mode of this ObjectRetention.

        The bucket's object retention mode, can only be Unlocked or Locked.

        :return: The mode of this ObjectRetention.
        :rtype: str
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this ObjectRetention.

        The bucket's object retention mode, can only be Unlocked or Locked.

        :param mode: The mode of this ObjectRetention.
        :type mode: str
        """

        self._mode = mode

    @property
    def retain_until_time(self):
        """Gets the retain_until_time of this ObjectRetention.

        A time in RFC 3339 format until which object retention protects this object.

        :return: The retain_until_time of this ObjectRetention.
        :rtype: datetime
        """
        return self._retain_until_time

    @retain_until_time.setter
    def retain_until_time(self, retain_until_time):
        """Sets the retain_until_time of this ObjectRetention.

        A time in RFC 3339 format until which object retention protects this object.

        :param retain_until_time: The retain_until_time of this ObjectRetention.
        :type retain_until_time: datetime
        """

        self._retain_until_time = retain_until_time
