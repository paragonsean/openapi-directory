# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.compose_request_source_objects_inner_object_preconditions import ComposeRequestSourceObjectsInnerObjectPreconditions
from openapi_server import util


class ComposeRequestSourceObjectsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, generation: str=None, name: str=None, object_preconditions: ComposeRequestSourceObjectsInnerObjectPreconditions=None):
        """ComposeRequestSourceObjectsInner - a model defined in OpenAPI

        :param generation: The generation of this ComposeRequestSourceObjectsInner.
        :param name: The name of this ComposeRequestSourceObjectsInner.
        :param object_preconditions: The object_preconditions of this ComposeRequestSourceObjectsInner.
        """
        self.openapi_types = {
            'generation': str,
            'name': str,
            'object_preconditions': ComposeRequestSourceObjectsInnerObjectPreconditions
        }

        self.attribute_map = {
            'generation': 'generation',
            'name': 'name',
            'object_preconditions': 'objectPreconditions'
        }

        self._generation = generation
        self._name = name
        self._object_preconditions = object_preconditions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComposeRequestSourceObjectsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComposeRequest_sourceObjects_inner of this ComposeRequestSourceObjectsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def generation(self):
        """Gets the generation of this ComposeRequestSourceObjectsInner.

        The generation of this object to use as the source.

        :return: The generation of this ComposeRequestSourceObjectsInner.
        :rtype: str
        """
        return self._generation

    @generation.setter
    def generation(self, generation):
        """Sets the generation of this ComposeRequestSourceObjectsInner.

        The generation of this object to use as the source.

        :param generation: The generation of this ComposeRequestSourceObjectsInner.
        :type generation: str
        """

        self._generation = generation

    @property
    def name(self):
        """Gets the name of this ComposeRequestSourceObjectsInner.

        The source object's name. All source objects must reside in the same bucket.

        :return: The name of this ComposeRequestSourceObjectsInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ComposeRequestSourceObjectsInner.

        The source object's name. All source objects must reside in the same bucket.

        :param name: The name of this ComposeRequestSourceObjectsInner.
        :type name: str
        """

        self._name = name

    @property
    def object_preconditions(self):
        """Gets the object_preconditions of this ComposeRequestSourceObjectsInner.


        :return: The object_preconditions of this ComposeRequestSourceObjectsInner.
        :rtype: ComposeRequestSourceObjectsInnerObjectPreconditions
        """
        return self._object_preconditions

    @object_preconditions.setter
    def object_preconditions(self, object_preconditions):
        """Sets the object_preconditions of this ComposeRequestSourceObjectsInner.


        :param object_preconditions: The object_preconditions of this ComposeRequestSourceObjectsInner.
        :type object_preconditions: ComposeRequestSourceObjectsInnerObjectPreconditions
        """

        self._object_preconditions = object_preconditions
