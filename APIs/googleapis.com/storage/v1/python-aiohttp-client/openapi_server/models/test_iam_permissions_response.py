# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TestIamPermissionsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: str='storage#testIamPermissionsResponse', permissions: List[str]=None):
        """TestIamPermissionsResponse - a model defined in OpenAPI

        :param kind: The kind of this TestIamPermissionsResponse.
        :param permissions: The permissions of this TestIamPermissionsResponse.
        """
        self.openapi_types = {
            'kind': str,
            'permissions': List[str]
        }

        self.attribute_map = {
            'kind': 'kind',
            'permissions': 'permissions'
        }

        self._kind = kind
        self._permissions = permissions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestIamPermissionsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TestIamPermissionsResponse of this TestIamPermissionsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this TestIamPermissionsResponse.

        The kind of item this is.

        :return: The kind of this TestIamPermissionsResponse.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this TestIamPermissionsResponse.

        The kind of item this is.

        :param kind: The kind of this TestIamPermissionsResponse.
        :type kind: str
        """

        self._kind = kind

    @property
    def permissions(self):
        """Gets the permissions of this TestIamPermissionsResponse.

        The permissions held by the caller. Permissions are always of the format storage.resource.capability, where resource is one of buckets, objects, or managedFolders. The supported permissions are as follows:   - storage.buckets.delete — Delete bucket.   - storage.buckets.get — Read bucket metadata.   - storage.buckets.getIamPolicy — Read bucket IAM policy.   - storage.buckets.create — Create bucket.   - storage.buckets.list — List buckets.   - storage.buckets.setIamPolicy — Update bucket IAM policy.   - storage.buckets.update — Update bucket metadata.   - storage.objects.delete — Delete object.   - storage.objects.get — Read object data and metadata.   - storage.objects.getIamPolicy — Read object IAM policy.   - storage.objects.create — Create object.   - storage.objects.list — List objects.   - storage.objects.setIamPolicy — Update object IAM policy.   - storage.objects.update — Update object metadata.  - storage.managedFolders.delete — Delete managed folder.   - storage.managedFolders.get — Read managed folder metadata.   - storage.managedFolders.getIamPolicy — Read managed folder IAM policy.   - storage.managedFolders.create — Create managed folder.   - storage.managedFolders.list — List managed folders.   - storage.managedFolders.setIamPolicy — Update managed folder IAM policy.

        :return: The permissions of this TestIamPermissionsResponse.
        :rtype: List[str]
        """
        return self._permissions

    @permissions.setter
    def permissions(self, permissions):
        """Sets the permissions of this TestIamPermissionsResponse.

        The permissions held by the caller. Permissions are always of the format storage.resource.capability, where resource is one of buckets, objects, or managedFolders. The supported permissions are as follows:   - storage.buckets.delete — Delete bucket.   - storage.buckets.get — Read bucket metadata.   - storage.buckets.getIamPolicy — Read bucket IAM policy.   - storage.buckets.create — Create bucket.   - storage.buckets.list — List buckets.   - storage.buckets.setIamPolicy — Update bucket IAM policy.   - storage.buckets.update — Update bucket metadata.   - storage.objects.delete — Delete object.   - storage.objects.get — Read object data and metadata.   - storage.objects.getIamPolicy — Read object IAM policy.   - storage.objects.create — Create object.   - storage.objects.list — List objects.   - storage.objects.setIamPolicy — Update object IAM policy.   - storage.objects.update — Update object metadata.  - storage.managedFolders.delete — Delete managed folder.   - storage.managedFolders.get — Read managed folder metadata.   - storage.managedFolders.getIamPolicy — Read managed folder IAM policy.   - storage.managedFolders.create — Create managed folder.   - storage.managedFolders.list — List managed folders.   - storage.managedFolders.setIamPolicy — Update managed folder IAM policy.

        :param permissions: The permissions of this TestIamPermissionsResponse.
        :type permissions: List[str]
        """

        self._permissions = permissions
