# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceAccount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email_address: str=None, kind: str='storage#serviceAccount'):
        """ServiceAccount - a model defined in OpenAPI

        :param email_address: The email_address of this ServiceAccount.
        :param kind: The kind of this ServiceAccount.
        """
        self.openapi_types = {
            'email_address': str,
            'kind': str
        }

        self.attribute_map = {
            'email_address': 'email_address',
            'kind': 'kind'
        }

        self._email_address = email_address
        self._kind = kind

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceAccount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceAccount of this ServiceAccount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email_address(self):
        """Gets the email_address of this ServiceAccount.

        The ID of the notification.

        :return: The email_address of this ServiceAccount.
        :rtype: str
        """
        return self._email_address

    @email_address.setter
    def email_address(self, email_address):
        """Sets the email_address of this ServiceAccount.

        The ID of the notification.

        :param email_address: The email_address of this ServiceAccount.
        :type email_address: str
        """

        self._email_address = email_address

    @property
    def kind(self):
        """Gets the kind of this ServiceAccount.

        The kind of item this is. For notifications, this is always storage#notification.

        :return: The kind of this ServiceAccount.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ServiceAccount.

        The kind of item this is. For notifications, this is always storage#notification.

        :param kind: The kind of this ServiceAccount.
        :type kind: str
        """

        self._kind = kind
