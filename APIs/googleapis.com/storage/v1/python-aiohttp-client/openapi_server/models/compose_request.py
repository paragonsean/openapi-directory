# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.compose_request_source_objects_inner import ComposeRequestSourceObjectsInner
from openapi_server.models.object import Object
from openapi_server import util


class ComposeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination: Object=None, kind: str='storage#composeRequest', source_objects: List[ComposeRequestSourceObjectsInner]=None):
        """ComposeRequest - a model defined in OpenAPI

        :param destination: The destination of this ComposeRequest.
        :param kind: The kind of this ComposeRequest.
        :param source_objects: The source_objects of this ComposeRequest.
        """
        self.openapi_types = {
            'destination': Object,
            'kind': str,
            'source_objects': List[ComposeRequestSourceObjectsInner]
        }

        self.attribute_map = {
            'destination': 'destination',
            'kind': 'kind',
            'source_objects': 'sourceObjects'
        }

        self._destination = destination
        self._kind = kind
        self._source_objects = source_objects

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComposeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComposeRequest of this ComposeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination(self):
        """Gets the destination of this ComposeRequest.


        :return: The destination of this ComposeRequest.
        :rtype: Object
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this ComposeRequest.


        :param destination: The destination of this ComposeRequest.
        :type destination: Object
        """

        self._destination = destination

    @property
    def kind(self):
        """Gets the kind of this ComposeRequest.

        The kind of item this is.

        :return: The kind of this ComposeRequest.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ComposeRequest.

        The kind of item this is.

        :param kind: The kind of this ComposeRequest.
        :type kind: str
        """

        self._kind = kind

    @property
    def source_objects(self):
        """Gets the source_objects of this ComposeRequest.

        The list of source objects that will be concatenated into a single object.

        :return: The source_objects of this ComposeRequest.
        :rtype: List[ComposeRequestSourceObjectsInner]
        """
        return self._source_objects

    @source_objects.setter
    def source_objects(self, source_objects):
        """Sets the source_objects of this ComposeRequest.

        The list of source objects that will be concatenated into a single object.

        :param source_objects: The source_objects of this ComposeRequest.
        :type source_objects: List[ComposeRequestSourceObjectsInner]
        """

        self._source_objects = source_objects
