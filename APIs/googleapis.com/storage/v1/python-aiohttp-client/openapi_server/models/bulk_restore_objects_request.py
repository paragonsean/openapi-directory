# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BulkRestoreObjectsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_overwrite: bool=None, copy_source_acl: bool=None, match_globs: List[str]=None, soft_deleted_after_time: datetime=None, soft_deleted_before_time: datetime=None):
        """BulkRestoreObjectsRequest - a model defined in OpenAPI

        :param allow_overwrite: The allow_overwrite of this BulkRestoreObjectsRequest.
        :param copy_source_acl: The copy_source_acl of this BulkRestoreObjectsRequest.
        :param match_globs: The match_globs of this BulkRestoreObjectsRequest.
        :param soft_deleted_after_time: The soft_deleted_after_time of this BulkRestoreObjectsRequest.
        :param soft_deleted_before_time: The soft_deleted_before_time of this BulkRestoreObjectsRequest.
        """
        self.openapi_types = {
            'allow_overwrite': bool,
            'copy_source_acl': bool,
            'match_globs': List[str],
            'soft_deleted_after_time': datetime,
            'soft_deleted_before_time': datetime
        }

        self.attribute_map = {
            'allow_overwrite': 'allowOverwrite',
            'copy_source_acl': 'copySourceAcl',
            'match_globs': 'matchGlobs',
            'soft_deleted_after_time': 'softDeletedAfterTime',
            'soft_deleted_before_time': 'softDeletedBeforeTime'
        }

        self._allow_overwrite = allow_overwrite
        self._copy_source_acl = copy_source_acl
        self._match_globs = match_globs
        self._soft_deleted_after_time = soft_deleted_after_time
        self._soft_deleted_before_time = soft_deleted_before_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BulkRestoreObjectsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BulkRestoreObjectsRequest of this BulkRestoreObjectsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_overwrite(self):
        """Gets the allow_overwrite of this BulkRestoreObjectsRequest.

        If false (default), the restore will not overwrite live objects with the same name at the destination. This means some deleted objects may be skipped. If true, live objects will be overwritten resulting in a noncurrent object (if versioning is enabled). If versioning is not enabled, overwriting the object will result in a soft-deleted object. In either case, if a noncurrent object already exists with the same name, a live version can be written without issue.

        :return: The allow_overwrite of this BulkRestoreObjectsRequest.
        :rtype: bool
        """
        return self._allow_overwrite

    @allow_overwrite.setter
    def allow_overwrite(self, allow_overwrite):
        """Sets the allow_overwrite of this BulkRestoreObjectsRequest.

        If false (default), the restore will not overwrite live objects with the same name at the destination. This means some deleted objects may be skipped. If true, live objects will be overwritten resulting in a noncurrent object (if versioning is enabled). If versioning is not enabled, overwriting the object will result in a soft-deleted object. In either case, if a noncurrent object already exists with the same name, a live version can be written without issue.

        :param allow_overwrite: The allow_overwrite of this BulkRestoreObjectsRequest.
        :type allow_overwrite: bool
        """

        self._allow_overwrite = allow_overwrite

    @property
    def copy_source_acl(self):
        """Gets the copy_source_acl of this BulkRestoreObjectsRequest.

        If true, copies the source object's ACL; otherwise, uses the bucket's default object ACL. The default is false.

        :return: The copy_source_acl of this BulkRestoreObjectsRequest.
        :rtype: bool
        """
        return self._copy_source_acl

    @copy_source_acl.setter
    def copy_source_acl(self, copy_source_acl):
        """Sets the copy_source_acl of this BulkRestoreObjectsRequest.

        If true, copies the source object's ACL; otherwise, uses the bucket's default object ACL. The default is false.

        :param copy_source_acl: The copy_source_acl of this BulkRestoreObjectsRequest.
        :type copy_source_acl: bool
        """

        self._copy_source_acl = copy_source_acl

    @property
    def match_globs(self):
        """Gets the match_globs of this BulkRestoreObjectsRequest.

        Restores only the objects matching any of the specified glob(s). If this parameter is not specified, all objects will be restored within the specified time range.

        :return: The match_globs of this BulkRestoreObjectsRequest.
        :rtype: List[str]
        """
        return self._match_globs

    @match_globs.setter
    def match_globs(self, match_globs):
        """Sets the match_globs of this BulkRestoreObjectsRequest.

        Restores only the objects matching any of the specified glob(s). If this parameter is not specified, all objects will be restored within the specified time range.

        :param match_globs: The match_globs of this BulkRestoreObjectsRequest.
        :type match_globs: List[str]
        """

        self._match_globs = match_globs

    @property
    def soft_deleted_after_time(self):
        """Gets the soft_deleted_after_time of this BulkRestoreObjectsRequest.

        Restores only the objects that were soft-deleted after this time.

        :return: The soft_deleted_after_time of this BulkRestoreObjectsRequest.
        :rtype: datetime
        """
        return self._soft_deleted_after_time

    @soft_deleted_after_time.setter
    def soft_deleted_after_time(self, soft_deleted_after_time):
        """Sets the soft_deleted_after_time of this BulkRestoreObjectsRequest.

        Restores only the objects that were soft-deleted after this time.

        :param soft_deleted_after_time: The soft_deleted_after_time of this BulkRestoreObjectsRequest.
        :type soft_deleted_after_time: datetime
        """

        self._soft_deleted_after_time = soft_deleted_after_time

    @property
    def soft_deleted_before_time(self):
        """Gets the soft_deleted_before_time of this BulkRestoreObjectsRequest.

        Restores only the objects that were soft-deleted before this time.

        :return: The soft_deleted_before_time of this BulkRestoreObjectsRequest.
        :rtype: datetime
        """
        return self._soft_deleted_before_time

    @soft_deleted_before_time.setter
    def soft_deleted_before_time(self, soft_deleted_before_time):
        """Sets the soft_deleted_before_time of this BulkRestoreObjectsRequest.

        Restores only the objects that were soft-deleted before this time.

        :param soft_deleted_before_time: The soft_deleted_before_time of this BulkRestoreObjectsRequest.
        :type soft_deleted_before_time: datetime
        """

        self._soft_deleted_before_time = soft_deleted_before_time
