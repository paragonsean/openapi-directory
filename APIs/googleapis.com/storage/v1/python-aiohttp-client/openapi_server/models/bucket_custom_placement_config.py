# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BucketCustomPlacementConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_locations: List[str]=None):
        """BucketCustomPlacementConfig - a model defined in OpenAPI

        :param data_locations: The data_locations of this BucketCustomPlacementConfig.
        """
        self.openapi_types = {
            'data_locations': List[str]
        }

        self.attribute_map = {
            'data_locations': 'dataLocations'
        }

        self._data_locations = data_locations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BucketCustomPlacementConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Bucket_customPlacementConfig of this BucketCustomPlacementConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_locations(self):
        """Gets the data_locations of this BucketCustomPlacementConfig.

        The list of regional locations in which data is placed.

        :return: The data_locations of this BucketCustomPlacementConfig.
        :rtype: List[str]
        """
        return self._data_locations

    @data_locations.setter
    def data_locations(self, data_locations):
        """Sets the data_locations of this BucketCustomPlacementConfig.

        The list of regional locations in which data is placed.

        :param data_locations: The data_locations of this BucketCustomPlacementConfig.
        :type data_locations: List[str]
        """

        self._data_locations = data_locations
