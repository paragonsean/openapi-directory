# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ManagedFolder(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bucket: str=None, create_time: datetime=None, id: str=None, kind: str='storage#managedFolder', metageneration: str=None, name: str=None, self_link: str=None, update_time: datetime=None):
        """ManagedFolder - a model defined in OpenAPI

        :param bucket: The bucket of this ManagedFolder.
        :param create_time: The create_time of this ManagedFolder.
        :param id: The id of this ManagedFolder.
        :param kind: The kind of this ManagedFolder.
        :param metageneration: The metageneration of this ManagedFolder.
        :param name: The name of this ManagedFolder.
        :param self_link: The self_link of this ManagedFolder.
        :param update_time: The update_time of this ManagedFolder.
        """
        self.openapi_types = {
            'bucket': str,
            'create_time': datetime,
            'id': str,
            'kind': str,
            'metageneration': str,
            'name': str,
            'self_link': str,
            'update_time': datetime
        }

        self.attribute_map = {
            'bucket': 'bucket',
            'create_time': 'createTime',
            'id': 'id',
            'kind': 'kind',
            'metageneration': 'metageneration',
            'name': 'name',
            'self_link': 'selfLink',
            'update_time': 'updateTime'
        }

        self._bucket = bucket
        self._create_time = create_time
        self._id = id
        self._kind = kind
        self._metageneration = metageneration
        self._name = name
        self._self_link = self_link
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManagedFolder':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManagedFolder of this ManagedFolder.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bucket(self):
        """Gets the bucket of this ManagedFolder.

        The name of the bucket containing this managed folder.

        :return: The bucket of this ManagedFolder.
        :rtype: str
        """
        return self._bucket

    @bucket.setter
    def bucket(self, bucket):
        """Sets the bucket of this ManagedFolder.

        The name of the bucket containing this managed folder.

        :param bucket: The bucket of this ManagedFolder.
        :type bucket: str
        """

        self._bucket = bucket

    @property
    def create_time(self):
        """Gets the create_time of this ManagedFolder.

        The creation time of the managed folder in RFC 3339 format.

        :return: The create_time of this ManagedFolder.
        :rtype: datetime
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this ManagedFolder.

        The creation time of the managed folder in RFC 3339 format.

        :param create_time: The create_time of this ManagedFolder.
        :type create_time: datetime
        """

        self._create_time = create_time

    @property
    def id(self):
        """Gets the id of this ManagedFolder.

        The ID of the managed folder, including the bucket name and managed folder name.

        :return: The id of this ManagedFolder.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ManagedFolder.

        The ID of the managed folder, including the bucket name and managed folder name.

        :param id: The id of this ManagedFolder.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this ManagedFolder.

        The kind of item this is. For managed folders, this is always storage#managedFolder.

        :return: The kind of this ManagedFolder.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ManagedFolder.

        The kind of item this is. For managed folders, this is always storage#managedFolder.

        :param kind: The kind of this ManagedFolder.
        :type kind: str
        """

        self._kind = kind

    @property
    def metageneration(self):
        """Gets the metageneration of this ManagedFolder.

        The version of the metadata for this managed folder. Used for preconditions and for detecting changes in metadata.

        :return: The metageneration of this ManagedFolder.
        :rtype: str
        """
        return self._metageneration

    @metageneration.setter
    def metageneration(self, metageneration):
        """Sets the metageneration of this ManagedFolder.

        The version of the metadata for this managed folder. Used for preconditions and for detecting changes in metadata.

        :param metageneration: The metageneration of this ManagedFolder.
        :type metageneration: str
        """

        self._metageneration = metageneration

    @property
    def name(self):
        """Gets the name of this ManagedFolder.

        The name of the managed folder. Required if not specified by URL parameter.

        :return: The name of this ManagedFolder.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ManagedFolder.

        The name of the managed folder. Required if not specified by URL parameter.

        :param name: The name of this ManagedFolder.
        :type name: str
        """

        self._name = name

    @property
    def self_link(self):
        """Gets the self_link of this ManagedFolder.

        The link to this managed folder.

        :return: The self_link of this ManagedFolder.
        :rtype: str
        """
        return self._self_link

    @self_link.setter
    def self_link(self, self_link):
        """Sets the self_link of this ManagedFolder.

        The link to this managed folder.

        :param self_link: The self_link of this ManagedFolder.
        :type self_link: str
        """

        self._self_link = self_link

    @property
    def update_time(self):
        """Gets the update_time of this ManagedFolder.

        The last update time of the managed folder metadata in RFC 3339 format.

        :return: The update_time of this ManagedFolder.
        :rtype: datetime
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this ManagedFolder.

        The last update time of the managed folder metadata in RFC 3339 format.

        :param update_time: The update_time of this ManagedFolder.
        :type update_time: datetime
        """

        self._update_time = update_time
