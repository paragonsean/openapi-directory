# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.hmac_key_metadata import HmacKeyMetadata
from openapi_server import util


class HmacKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: str='storage#hmacKey', metadata: HmacKeyMetadata=None, secret: str=None):
        """HmacKey - a model defined in OpenAPI

        :param kind: The kind of this HmacKey.
        :param metadata: The metadata of this HmacKey.
        :param secret: The secret of this HmacKey.
        """
        self.openapi_types = {
            'kind': str,
            'metadata': HmacKeyMetadata,
            'secret': str
        }

        self.attribute_map = {
            'kind': 'kind',
            'metadata': 'metadata',
            'secret': 'secret'
        }

        self._kind = kind
        self._metadata = metadata
        self._secret = secret

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HmacKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HmacKey of this HmacKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this HmacKey.

        The kind of item this is. For HMAC keys, this is always storage#hmacKey.

        :return: The kind of this HmacKey.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this HmacKey.

        The kind of item this is. For HMAC keys, this is always storage#hmacKey.

        :param kind: The kind of this HmacKey.
        :type kind: str
        """

        self._kind = kind

    @property
    def metadata(self):
        """Gets the metadata of this HmacKey.


        :return: The metadata of this HmacKey.
        :rtype: HmacKeyMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this HmacKey.


        :param metadata: The metadata of this HmacKey.
        :type metadata: HmacKeyMetadata
        """

        self._metadata = metadata

    @property
    def secret(self):
        """Gets the secret of this HmacKey.

        HMAC secret key material.

        :return: The secret of this HmacKey.
        :rtype: str
        """
        return self._secret

    @secret.setter
    def secret(self, secret):
        """Sets the secret of this HmacKey.

        HMAC secret key material.

        :param secret: The secret of this HmacKey.
        :type secret: str
        """

        self._secret = secret
