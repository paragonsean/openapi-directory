# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HmacKeyMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_id: str=None, etag: str=None, id: str=None, kind: str='storage#hmacKeyMetadata', project_id: str=None, self_link: str=None, service_account_email: str=None, state: str=None, time_created: datetime=None, updated: datetime=None):
        """HmacKeyMetadata - a model defined in OpenAPI

        :param access_id: The access_id of this HmacKeyMetadata.
        :param etag: The etag of this HmacKeyMetadata.
        :param id: The id of this HmacKeyMetadata.
        :param kind: The kind of this HmacKeyMetadata.
        :param project_id: The project_id of this HmacKeyMetadata.
        :param self_link: The self_link of this HmacKeyMetadata.
        :param service_account_email: The service_account_email of this HmacKeyMetadata.
        :param state: The state of this HmacKeyMetadata.
        :param time_created: The time_created of this HmacKeyMetadata.
        :param updated: The updated of this HmacKeyMetadata.
        """
        self.openapi_types = {
            'access_id': str,
            'etag': str,
            'id': str,
            'kind': str,
            'project_id': str,
            'self_link': str,
            'service_account_email': str,
            'state': str,
            'time_created': datetime,
            'updated': datetime
        }

        self.attribute_map = {
            'access_id': 'accessId',
            'etag': 'etag',
            'id': 'id',
            'kind': 'kind',
            'project_id': 'projectId',
            'self_link': 'selfLink',
            'service_account_email': 'serviceAccountEmail',
            'state': 'state',
            'time_created': 'timeCreated',
            'updated': 'updated'
        }

        self._access_id = access_id
        self._etag = etag
        self._id = id
        self._kind = kind
        self._project_id = project_id
        self._self_link = self_link
        self._service_account_email = service_account_email
        self._state = state
        self._time_created = time_created
        self._updated = updated

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HmacKeyMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HmacKeyMetadata of this HmacKeyMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_id(self):
        """Gets the access_id of this HmacKeyMetadata.

        The ID of the HMAC Key.

        :return: The access_id of this HmacKeyMetadata.
        :rtype: str
        """
        return self._access_id

    @access_id.setter
    def access_id(self, access_id):
        """Sets the access_id of this HmacKeyMetadata.

        The ID of the HMAC Key.

        :param access_id: The access_id of this HmacKeyMetadata.
        :type access_id: str
        """

        self._access_id = access_id

    @property
    def etag(self):
        """Gets the etag of this HmacKeyMetadata.

        HTTP 1.1 Entity tag for the HMAC key.

        :return: The etag of this HmacKeyMetadata.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this HmacKeyMetadata.

        HTTP 1.1 Entity tag for the HMAC key.

        :param etag: The etag of this HmacKeyMetadata.
        :type etag: str
        """

        self._etag = etag

    @property
    def id(self):
        """Gets the id of this HmacKeyMetadata.

        The ID of the HMAC key, including the Project ID and the Access ID.

        :return: The id of this HmacKeyMetadata.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this HmacKeyMetadata.

        The ID of the HMAC key, including the Project ID and the Access ID.

        :param id: The id of this HmacKeyMetadata.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this HmacKeyMetadata.

        The kind of item this is. For HMAC Key metadata, this is always storage#hmacKeyMetadata.

        :return: The kind of this HmacKeyMetadata.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this HmacKeyMetadata.

        The kind of item this is. For HMAC Key metadata, this is always storage#hmacKeyMetadata.

        :param kind: The kind of this HmacKeyMetadata.
        :type kind: str
        """

        self._kind = kind

    @property
    def project_id(self):
        """Gets the project_id of this HmacKeyMetadata.

        Project ID owning the service account to which the key authenticates.

        :return: The project_id of this HmacKeyMetadata.
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this HmacKeyMetadata.

        Project ID owning the service account to which the key authenticates.

        :param project_id: The project_id of this HmacKeyMetadata.
        :type project_id: str
        """

        self._project_id = project_id

    @property
    def self_link(self):
        """Gets the self_link of this HmacKeyMetadata.

        The link to this resource.

        :return: The self_link of this HmacKeyMetadata.
        :rtype: str
        """
        return self._self_link

    @self_link.setter
    def self_link(self, self_link):
        """Sets the self_link of this HmacKeyMetadata.

        The link to this resource.

        :param self_link: The self_link of this HmacKeyMetadata.
        :type self_link: str
        """

        self._self_link = self_link

    @property
    def service_account_email(self):
        """Gets the service_account_email of this HmacKeyMetadata.

        The email address of the key's associated service account.

        :return: The service_account_email of this HmacKeyMetadata.
        :rtype: str
        """
        return self._service_account_email

    @service_account_email.setter
    def service_account_email(self, service_account_email):
        """Sets the service_account_email of this HmacKeyMetadata.

        The email address of the key's associated service account.

        :param service_account_email: The service_account_email of this HmacKeyMetadata.
        :type service_account_email: str
        """

        self._service_account_email = service_account_email

    @property
    def state(self):
        """Gets the state of this HmacKeyMetadata.

        The state of the key. Can be one of ACTIVE, INACTIVE, or DELETED.

        :return: The state of this HmacKeyMetadata.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this HmacKeyMetadata.

        The state of the key. Can be one of ACTIVE, INACTIVE, or DELETED.

        :param state: The state of this HmacKeyMetadata.
        :type state: str
        """

        self._state = state

    @property
    def time_created(self):
        """Gets the time_created of this HmacKeyMetadata.

        The creation time of the HMAC key in RFC 3339 format.

        :return: The time_created of this HmacKeyMetadata.
        :rtype: datetime
        """
        return self._time_created

    @time_created.setter
    def time_created(self, time_created):
        """Sets the time_created of this HmacKeyMetadata.

        The creation time of the HMAC key in RFC 3339 format.

        :param time_created: The time_created of this HmacKeyMetadata.
        :type time_created: datetime
        """

        self._time_created = time_created

    @property
    def updated(self):
        """Gets the updated of this HmacKeyMetadata.

        The last modification time of the HMAC key metadata in RFC 3339 format.

        :return: The updated of this HmacKeyMetadata.
        :rtype: datetime
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this HmacKeyMetadata.

        The last modification time of the HMAC key metadata in RFC 3339 format.

        :param updated: The updated of this HmacKeyMetadata.
        :type updated: datetime
        """

        self._updated = updated
