# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ComposeRequestSourceObjectsInnerObjectPreconditions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, if_generation_match: str=None):
        """ComposeRequestSourceObjectsInnerObjectPreconditions - a model defined in OpenAPI

        :param if_generation_match: The if_generation_match of this ComposeRequestSourceObjectsInnerObjectPreconditions.
        """
        self.openapi_types = {
            'if_generation_match': str
        }

        self.attribute_map = {
            'if_generation_match': 'ifGenerationMatch'
        }

        self._if_generation_match = if_generation_match

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComposeRequestSourceObjectsInnerObjectPreconditions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComposeRequest_sourceObjects_inner_objectPreconditions of this ComposeRequestSourceObjectsInnerObjectPreconditions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def if_generation_match(self):
        """Gets the if_generation_match of this ComposeRequestSourceObjectsInnerObjectPreconditions.

        Only perform the composition if the generation of the source object that would be used matches this value. If this value and a generation are both specified, they must be the same value or the call will fail.

        :return: The if_generation_match of this ComposeRequestSourceObjectsInnerObjectPreconditions.
        :rtype: str
        """
        return self._if_generation_match

    @if_generation_match.setter
    def if_generation_match(self, if_generation_match):
        """Sets the if_generation_match of this ComposeRequestSourceObjectsInnerObjectPreconditions.

        Only perform the composition if the generation of the source object that would be used matches this value. If this value and a generation are both specified, they must be the same value or the call will fail.

        :param if_generation_match: The if_generation_match of this ComposeRequestSourceObjectsInnerObjectPreconditions.
        :type if_generation_match: str
        """

        self._if_generation_match = if_generation_match
