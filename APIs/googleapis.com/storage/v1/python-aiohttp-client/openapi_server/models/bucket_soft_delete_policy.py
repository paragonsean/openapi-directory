# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BucketSoftDeletePolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, effective_time: datetime=None, retention_duration_seconds: str=None):
        """BucketSoftDeletePolicy - a model defined in OpenAPI

        :param effective_time: The effective_time of this BucketSoftDeletePolicy.
        :param retention_duration_seconds: The retention_duration_seconds of this BucketSoftDeletePolicy.
        """
        self.openapi_types = {
            'effective_time': datetime,
            'retention_duration_seconds': str
        }

        self.attribute_map = {
            'effective_time': 'effectiveTime',
            'retention_duration_seconds': 'retentionDurationSeconds'
        }

        self._effective_time = effective_time
        self._retention_duration_seconds = retention_duration_seconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BucketSoftDeletePolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Bucket_softDeletePolicy of this BucketSoftDeletePolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def effective_time(self):
        """Gets the effective_time of this BucketSoftDeletePolicy.

        Server-determined value that indicates the time from which the policy, or one with a greater retention, was effective. This value is in RFC 3339 format.

        :return: The effective_time of this BucketSoftDeletePolicy.
        :rtype: datetime
        """
        return self._effective_time

    @effective_time.setter
    def effective_time(self, effective_time):
        """Sets the effective_time of this BucketSoftDeletePolicy.

        Server-determined value that indicates the time from which the policy, or one with a greater retention, was effective. This value is in RFC 3339 format.

        :param effective_time: The effective_time of this BucketSoftDeletePolicy.
        :type effective_time: datetime
        """

        self._effective_time = effective_time

    @property
    def retention_duration_seconds(self):
        """Gets the retention_duration_seconds of this BucketSoftDeletePolicy.

        The duration in seconds that soft-deleted objects in the bucket will be retained and cannot be permanently deleted.

        :return: The retention_duration_seconds of this BucketSoftDeletePolicy.
        :rtype: str
        """
        return self._retention_duration_seconds

    @retention_duration_seconds.setter
    def retention_duration_seconds(self, retention_duration_seconds):
        """Sets the retention_duration_seconds of this BucketSoftDeletePolicy.

        The duration in seconds that soft-deleted objects in the bucket will be retained and cannot be permanently deleted.

        :param retention_duration_seconds: The retention_duration_seconds of this BucketSoftDeletePolicy.
        :type retention_duration_seconds: str
        """

        self._retention_duration_seconds = retention_duration_seconds
