/*
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.UptimeCheckIp;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The protocol for the ListUptimeCheckIps response.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:42.831469-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListUptimeCheckIpsResponse {
  public static final String SERIALIZED_NAME_NEXT_PAGE_TOKEN = "nextPageToken";
  @SerializedName(SERIALIZED_NAME_NEXT_PAGE_TOKEN)
  private String nextPageToken;

  public static final String SERIALIZED_NAME_UPTIME_CHECK_IPS = "uptimeCheckIps";
  @SerializedName(SERIALIZED_NAME_UPTIME_CHECK_IPS)
  private List<UptimeCheckIp> uptimeCheckIps = new ArrayList<>();

  public ListUptimeCheckIpsResponse() {
  }

  public ListUptimeCheckIpsResponse nextPageToken(String nextPageToken) {
    this.nextPageToken = nextPageToken;
    return this;
  }

  /**
   * This field represents the pagination token to retrieve the next page of results. If the value is empty, it means no further results for the request. To retrieve the next page of results, the value of the next_page_token is passed to the subsequent List method call (in the request message&#39;s page_token field). NOTE: this field is not yet implemented
   * @return nextPageToken
   */
  @javax.annotation.Nullable
  public String getNextPageToken() {
    return nextPageToken;
  }

  public void setNextPageToken(String nextPageToken) {
    this.nextPageToken = nextPageToken;
  }


  public ListUptimeCheckIpsResponse uptimeCheckIps(List<UptimeCheckIp> uptimeCheckIps) {
    this.uptimeCheckIps = uptimeCheckIps;
    return this;
  }

  public ListUptimeCheckIpsResponse addUptimeCheckIpsItem(UptimeCheckIp uptimeCheckIpsItem) {
    if (this.uptimeCheckIps == null) {
      this.uptimeCheckIps = new ArrayList<>();
    }
    this.uptimeCheckIps.add(uptimeCheckIpsItem);
    return this;
  }

  /**
   * The returned list of IP addresses (including region and location) that the checkers run from.
   * @return uptimeCheckIps
   */
  @javax.annotation.Nullable
  public List<UptimeCheckIp> getUptimeCheckIps() {
    return uptimeCheckIps;
  }

  public void setUptimeCheckIps(List<UptimeCheckIp> uptimeCheckIps) {
    this.uptimeCheckIps = uptimeCheckIps;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListUptimeCheckIpsResponse listUptimeCheckIpsResponse = (ListUptimeCheckIpsResponse) o;
    return Objects.equals(this.nextPageToken, listUptimeCheckIpsResponse.nextPageToken) &&
        Objects.equals(this.uptimeCheckIps, listUptimeCheckIpsResponse.uptimeCheckIps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nextPageToken, uptimeCheckIps);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListUptimeCheckIpsResponse {\n");
    sb.append("    nextPageToken: ").append(toIndentedString(nextPageToken)).append("\n");
    sb.append("    uptimeCheckIps: ").append(toIndentedString(uptimeCheckIps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("nextPageToken");
    openapiFields.add("uptimeCheckIps");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListUptimeCheckIpsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListUptimeCheckIpsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListUptimeCheckIpsResponse is not found in the empty JSON string", ListUptimeCheckIpsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListUptimeCheckIpsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListUptimeCheckIpsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("nextPageToken") != null && !jsonObj.get("nextPageToken").isJsonNull()) && !jsonObj.get("nextPageToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nextPageToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nextPageToken").toString()));
      }
      if (jsonObj.get("uptimeCheckIps") != null && !jsonObj.get("uptimeCheckIps").isJsonNull()) {
        JsonArray jsonArrayuptimeCheckIps = jsonObj.getAsJsonArray("uptimeCheckIps");
        if (jsonArrayuptimeCheckIps != null) {
          // ensure the json data is an array
          if (!jsonObj.get("uptimeCheckIps").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `uptimeCheckIps` to be an array in the JSON string but got `%s`", jsonObj.get("uptimeCheckIps").toString()));
          }

          // validate the optional field `uptimeCheckIps` (array)
          for (int i = 0; i < jsonArrayuptimeCheckIps.size(); i++) {
            UptimeCheckIp.validateJsonElement(jsonArrayuptimeCheckIps.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListUptimeCheckIpsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListUptimeCheckIpsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListUptimeCheckIpsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListUptimeCheckIpsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<ListUptimeCheckIpsResponse>() {
           @Override
           public void write(JsonWriter out, ListUptimeCheckIpsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListUptimeCheckIpsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListUptimeCheckIpsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListUptimeCheckIpsResponse
   * @throws IOException if the JSON string is invalid with respect to ListUptimeCheckIpsResponse
   */
  public static ListUptimeCheckIpsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListUptimeCheckIpsResponse.class);
  }

  /**
   * Convert an instance of ListUptimeCheckIpsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

