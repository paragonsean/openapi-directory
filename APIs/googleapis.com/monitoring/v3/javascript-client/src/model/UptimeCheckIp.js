/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UptimeCheckIp model module.
 * @module model/UptimeCheckIp
 * @version v3
 */
class UptimeCheckIp {
    /**
     * Constructs a new <code>UptimeCheckIp</code>.
     * Contains the region, location, and list of IP addresses where checkers in the location run from.
     * @alias module:model/UptimeCheckIp
     */
    constructor() { 
        
        UptimeCheckIp.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UptimeCheckIp</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UptimeCheckIp} obj Optional instance to populate.
     * @return {module:model/UptimeCheckIp} The populated <code>UptimeCheckIp</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UptimeCheckIp();

            if (data.hasOwnProperty('ipAddress')) {
                obj['ipAddress'] = ApiClient.convertToType(data['ipAddress'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UptimeCheckIp</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UptimeCheckIp</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ipAddress'] && !(typeof data['ipAddress'] === 'string' || data['ipAddress'] instanceof String)) {
            throw new Error("Expected the field `ipAddress` to be a primitive type in the JSON string but got " + data['ipAddress']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['region'] && !(typeof data['region'] === 'string' || data['region'] instanceof String)) {
            throw new Error("Expected the field `region` to be a primitive type in the JSON string but got " + data['region']);
        }

        return true;
    }


}



/**
 * The IP address from which the Uptime check originates. This is a fully specified IP address (not an IP address range). Most IP addresses, as of this publication, are in IPv4 format; however, one should not rely on the IP addresses being in IPv4 format indefinitely, and should support interpreting this field in either IPv4 or IPv6 format.
 * @member {String} ipAddress
 */
UptimeCheckIp.prototype['ipAddress'] = undefined;

/**
 * A more specific location within the region that typically encodes a particular city/town/metro (and its containing state/province or country) within the broader umbrella region category.
 * @member {String} location
 */
UptimeCheckIp.prototype['location'] = undefined;

/**
 * A broad region category in which the IP address is located.
 * @member {module:model/UptimeCheckIp.RegionEnum} region
 */
UptimeCheckIp.prototype['region'] = undefined;





/**
 * Allowed values for the <code>region</code> property.
 * @enum {String}
 * @readonly
 */
UptimeCheckIp['RegionEnum'] = {

    /**
     * value: "REGION_UNSPECIFIED"
     * @const
     */
    "REGION_UNSPECIFIED": "REGION_UNSPECIFIED",

    /**
     * value: "USA"
     * @const
     */
    "USA": "USA",

    /**
     * value: "EUROPE"
     * @const
     */
    "EUROPE": "EUROPE",

    /**
     * value: "SOUTH_AMERICA"
     * @const
     */
    "SOUTH_AMERICA": "SOUTH_AMERICA",

    /**
     * value: "ASIA_PACIFIC"
     * @const
     */
    "ASIA_PACIFIC": "ASIA_PACIFIC",

    /**
     * value: "USA_OREGON"
     * @const
     */
    "USA_OREGON": "USA_OREGON",

    /**
     * value: "USA_IOWA"
     * @const
     */
    "USA_IOWA": "USA_IOWA",

    /**
     * value: "USA_VIRGINIA"
     * @const
     */
    "USA_VIRGINIA": "USA_VIRGINIA"
};



export default UptimeCheckIp;

