/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BasicService model module.
 * @module model/BasicService
 * @version v3
 */
class BasicService {
    /**
     * Constructs a new <code>BasicService</code>.
     * A well-known service type, defined by its service type and service labels. Documentation and examples here (https://cloud.google.com/stackdriver/docs/solutions/slo-monitoring/api/api-structures#basic-svc-w-basic-sli).
     * @alias module:model/BasicService
     */
    constructor() { 
        
        BasicService.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BasicService</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BasicService} obj Optional instance to populate.
     * @return {module:model/BasicService} The populated <code>BasicService</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BasicService();

            if (data.hasOwnProperty('serviceLabels')) {
                obj['serviceLabels'] = ApiClient.convertToType(data['serviceLabels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('serviceType')) {
                obj['serviceType'] = ApiClient.convertToType(data['serviceType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BasicService</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BasicService</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['serviceType'] && !(typeof data['serviceType'] === 'string' || data['serviceType'] instanceof String)) {
            throw new Error("Expected the field `serviceType` to be a primitive type in the JSON string but got " + data['serviceType']);
        }

        return true;
    }


}



/**
 * Labels that specify the resource that emits the monitoring data which is used for SLO reporting of this Service. Documentation and valid values for given service types here (https://cloud.google.com/stackdriver/docs/solutions/slo-monitoring/api/api-structures#basic-svc-w-basic-sli).
 * @member {Object.<String, String>} serviceLabels
 */
BasicService.prototype['serviceLabels'] = undefined;

/**
 * The type of service that this basic service defines, e.g. APP_ENGINE service type. Documentation and valid values here (https://cloud.google.com/stackdriver/docs/solutions/slo-monitoring/api/api-structures#basic-svc-w-basic-sli).
 * @member {String} serviceType
 */
BasicService.prototype['serviceType'] = undefined;






export default BasicService;

