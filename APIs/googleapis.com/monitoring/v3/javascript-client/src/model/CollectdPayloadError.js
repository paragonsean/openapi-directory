/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CollectdValueError from './CollectdValueError';
import Status from './Status';

/**
 * The CollectdPayloadError model module.
 * @module model/CollectdPayloadError
 * @version v3
 */
class CollectdPayloadError {
    /**
     * Constructs a new <code>CollectdPayloadError</code>.
     * Describes the error status for payloads that were not written.
     * @alias module:model/CollectdPayloadError
     */
    constructor() { 
        
        CollectdPayloadError.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CollectdPayloadError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CollectdPayloadError} obj Optional instance to populate.
     * @return {module:model/CollectdPayloadError} The populated <code>CollectdPayloadError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CollectdPayloadError();

            if (data.hasOwnProperty('error')) {
                obj['error'] = Status.constructFromObject(data['error']);
            }
            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'Number');
            }
            if (data.hasOwnProperty('valueErrors')) {
                obj['valueErrors'] = ApiClient.convertToType(data['valueErrors'], [CollectdValueError]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CollectdPayloadError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CollectdPayloadError</code>.
     */
    static validateJSON(data) {
        // validate the optional field `error`
        if (data['error']) { // data not null
          Status.validateJSON(data['error']);
        }
        if (data['valueErrors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['valueErrors'])) {
                throw new Error("Expected the field `valueErrors` to be an array in the JSON data but got " + data['valueErrors']);
            }
            // validate the optional field `valueErrors` (array)
            for (const item of data['valueErrors']) {
                CollectdValueError.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/Status} error
 */
CollectdPayloadError.prototype['error'] = undefined;

/**
 * The zero-based index in CreateCollectdTimeSeriesRequest.collectd_payloads.
 * @member {Number} index
 */
CollectdPayloadError.prototype['index'] = undefined;

/**
 * Records the error status for values that were not written due to an error.Failed payloads for which nothing is written will not include partial value errors.
 * @member {Array.<module:model/CollectdValueError>} valueErrors
 */
CollectdPayloadError.prototype['valueErrors'] = undefined;






export default CollectdPayloadError;

