/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Distribution from './Distribution';

/**
 * The TypedValue model module.
 * @module model/TypedValue
 * @version v3
 */
class TypedValue {
    /**
     * Constructs a new <code>TypedValue</code>.
     * A single strongly-typed value.
     * @alias module:model/TypedValue
     */
    constructor() { 
        
        TypedValue.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TypedValue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TypedValue} obj Optional instance to populate.
     * @return {module:model/TypedValue} The populated <code>TypedValue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TypedValue();

            if (data.hasOwnProperty('boolValue')) {
                obj['boolValue'] = ApiClient.convertToType(data['boolValue'], 'Boolean');
            }
            if (data.hasOwnProperty('distributionValue')) {
                obj['distributionValue'] = Distribution.constructFromObject(data['distributionValue']);
            }
            if (data.hasOwnProperty('doubleValue')) {
                obj['doubleValue'] = ApiClient.convertToType(data['doubleValue'], 'Number');
            }
            if (data.hasOwnProperty('int64Value')) {
                obj['int64Value'] = ApiClient.convertToType(data['int64Value'], 'String');
            }
            if (data.hasOwnProperty('stringValue')) {
                obj['stringValue'] = ApiClient.convertToType(data['stringValue'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TypedValue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TypedValue</code>.
     */
    static validateJSON(data) {
        // validate the optional field `distributionValue`
        if (data['distributionValue']) { // data not null
          Distribution.validateJSON(data['distributionValue']);
        }
        // ensure the json data is a string
        if (data['int64Value'] && !(typeof data['int64Value'] === 'string' || data['int64Value'] instanceof String)) {
            throw new Error("Expected the field `int64Value` to be a primitive type in the JSON string but got " + data['int64Value']);
        }
        // ensure the json data is a string
        if (data['stringValue'] && !(typeof data['stringValue'] === 'string' || data['stringValue'] instanceof String)) {
            throw new Error("Expected the field `stringValue` to be a primitive type in the JSON string but got " + data['stringValue']);
        }

        return true;
    }


}



/**
 * A Boolean value: true or false.
 * @member {Boolean} boolValue
 */
TypedValue.prototype['boolValue'] = undefined;

/**
 * @member {module:model/Distribution} distributionValue
 */
TypedValue.prototype['distributionValue'] = undefined;

/**
 * A 64-bit double-precision floating-point number. Its magnitude is approximately ±10±300 and it has 16 significant digits of precision.
 * @member {Number} doubleValue
 */
TypedValue.prototype['doubleValue'] = undefined;

/**
 * A 64-bit integer. Its range is approximately ±9.2x1018.
 * @member {String} int64Value
 */
TypedValue.prototype['int64Value'] = undefined;

/**
 * A variable-length string value.
 * @member {String} stringValue
 */
TypedValue.prototype['stringValue'] = undefined;






export default TypedValue;

