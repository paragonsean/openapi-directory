/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UptimeCheckIp from './UptimeCheckIp';

/**
 * The ListUptimeCheckIpsResponse model module.
 * @module model/ListUptimeCheckIpsResponse
 * @version v3
 */
class ListUptimeCheckIpsResponse {
    /**
     * Constructs a new <code>ListUptimeCheckIpsResponse</code>.
     * The protocol for the ListUptimeCheckIps response.
     * @alias module:model/ListUptimeCheckIpsResponse
     */
    constructor() { 
        
        ListUptimeCheckIpsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListUptimeCheckIpsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListUptimeCheckIpsResponse} obj Optional instance to populate.
     * @return {module:model/ListUptimeCheckIpsResponse} The populated <code>ListUptimeCheckIpsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListUptimeCheckIpsResponse();

            if (data.hasOwnProperty('nextPageToken')) {
                obj['nextPageToken'] = ApiClient.convertToType(data['nextPageToken'], 'String');
            }
            if (data.hasOwnProperty('uptimeCheckIps')) {
                obj['uptimeCheckIps'] = ApiClient.convertToType(data['uptimeCheckIps'], [UptimeCheckIp]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListUptimeCheckIpsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListUptimeCheckIpsResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['nextPageToken'] && !(typeof data['nextPageToken'] === 'string' || data['nextPageToken'] instanceof String)) {
            throw new Error("Expected the field `nextPageToken` to be a primitive type in the JSON string but got " + data['nextPageToken']);
        }
        if (data['uptimeCheckIps']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['uptimeCheckIps'])) {
                throw new Error("Expected the field `uptimeCheckIps` to be an array in the JSON data but got " + data['uptimeCheckIps']);
            }
            // validate the optional field `uptimeCheckIps` (array)
            for (const item of data['uptimeCheckIps']) {
                UptimeCheckIp.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * This field represents the pagination token to retrieve the next page of results. If the value is empty, it means no further results for the request. To retrieve the next page of results, the value of the next_page_token is passed to the subsequent List method call (in the request message's page_token field). NOTE: this field is not yet implemented
 * @member {String} nextPageToken
 */
ListUptimeCheckIpsResponse.prototype['nextPageToken'] = undefined;

/**
 * The returned list of IP addresses (including region and location) that the checkers run from.
 * @member {Array.<module:model/UptimeCheckIp>} uptimeCheckIps
 */
ListUptimeCheckIpsResponse.prototype['uptimeCheckIps'] = undefined;






export default ListUptimeCheckIpsResponse;

