/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CollectdPayloadError from './CollectdPayloadError';
import CreateTimeSeriesSummary from './CreateTimeSeriesSummary';

/**
 * The CreateCollectdTimeSeriesResponse model module.
 * @module model/CreateCollectdTimeSeriesResponse
 * @version v3
 */
class CreateCollectdTimeSeriesResponse {
    /**
     * Constructs a new <code>CreateCollectdTimeSeriesResponse</code>.
     * The CreateCollectdTimeSeries response.
     * @alias module:model/CreateCollectdTimeSeriesResponse
     */
    constructor() { 
        
        CreateCollectdTimeSeriesResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateCollectdTimeSeriesResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateCollectdTimeSeriesResponse} obj Optional instance to populate.
     * @return {module:model/CreateCollectdTimeSeriesResponse} The populated <code>CreateCollectdTimeSeriesResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateCollectdTimeSeriesResponse();

            if (data.hasOwnProperty('payloadErrors')) {
                obj['payloadErrors'] = ApiClient.convertToType(data['payloadErrors'], [CollectdPayloadError]);
            }
            if (data.hasOwnProperty('summary')) {
                obj['summary'] = CreateTimeSeriesSummary.constructFromObject(data['summary']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateCollectdTimeSeriesResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateCollectdTimeSeriesResponse</code>.
     */
    static validateJSON(data) {
        if (data['payloadErrors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['payloadErrors'])) {
                throw new Error("Expected the field `payloadErrors` to be an array in the JSON data but got " + data['payloadErrors']);
            }
            // validate the optional field `payloadErrors` (array)
            for (const item of data['payloadErrors']) {
                CollectdPayloadError.validateJSON(item);
            };
        }
        // validate the optional field `summary`
        if (data['summary']) { // data not null
          CreateTimeSeriesSummary.validateJSON(data['summary']);
        }

        return true;
    }


}



/**
 * Records the error status for points that were not written due to an error in the request.Failed requests for which nothing is written will return an error response instead. Requests where data points were rejected by the backend will set summary instead.
 * @member {Array.<module:model/CollectdPayloadError>} payloadErrors
 */
CreateCollectdTimeSeriesResponse.prototype['payloadErrors'] = undefined;

/**
 * @member {module:model/CreateTimeSeriesSummary} summary
 */
CreateCollectdTimeSeriesResponse.prototype['summary'] = undefined;






export default CreateCollectdTimeSeriesResponse;

