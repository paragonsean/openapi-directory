/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Explicit model module.
 * @module model/Explicit
 * @version v3
 */
class Explicit {
    /**
     * Constructs a new <code>Explicit</code>.
     * Specifies a set of buckets with arbitrary widths.There are size(bounds) + 1 (&#x3D; N) buckets. Bucket i has the following boundaries:Upper bound (0 &lt;&#x3D; i &lt; N-1): boundsi Lower bound (1 &lt;&#x3D; i &lt; N); boundsi - 1The bounds field must contain at least one element. If bounds has only one element, then there are no finite buckets, and that single element is the common boundary of the overflow and underflow buckets.
     * @alias module:model/Explicit
     */
    constructor() { 
        
        Explicit.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Explicit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Explicit} obj Optional instance to populate.
     * @return {module:model/Explicit} The populated <code>Explicit</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Explicit();

            if (data.hasOwnProperty('bounds')) {
                obj['bounds'] = ApiClient.convertToType(data['bounds'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Explicit</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Explicit</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['bounds'])) {
            throw new Error("Expected the field `bounds` to be an array in the JSON data but got " + data['bounds']);
        }

        return true;
    }


}



/**
 * The values must be monotonically increasing.
 * @member {Array.<Number>} bounds
 */
Explicit.prototype['bounds'] = undefined;






export default Explicit;

