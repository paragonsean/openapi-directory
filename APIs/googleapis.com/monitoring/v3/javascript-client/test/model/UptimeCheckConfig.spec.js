/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudMonitoringApi);
  }
}(this, function(expect, CloudMonitoringApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudMonitoringApi.UptimeCheckConfig();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UptimeCheckConfig', function() {
    it('should create an instance of UptimeCheckConfig', function() {
      // uncomment below and update the code to test UptimeCheckConfig
      //var instance = new CloudMonitoringApi.UptimeCheckConfig();
      //expect(instance).to.be.a(CloudMonitoringApi.UptimeCheckConfig);
    });

    it('should have the property checkerType (base name: "checkerType")', function() {
      // uncomment below and update the code to test the property checkerType
      //var instance = new CloudMonitoringApi.UptimeCheckConfig();
      //expect(instance).to.be();
    });

    it('should have the property contentMatchers (base name: "contentMatchers")', function() {
      // uncomment below and update the code to test the property contentMatchers
      //var instance = new CloudMonitoringApi.UptimeCheckConfig();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new CloudMonitoringApi.UptimeCheckConfig();
      //expect(instance).to.be();
    });

    it('should have the property httpCheck (base name: "httpCheck")', function() {
      // uncomment below and update the code to test the property httpCheck
      //var instance = new CloudMonitoringApi.UptimeCheckConfig();
      //expect(instance).to.be();
    });

    it('should have the property internalCheckers (base name: "internalCheckers")', function() {
      // uncomment below and update the code to test the property internalCheckers
      //var instance = new CloudMonitoringApi.UptimeCheckConfig();
      //expect(instance).to.be();
    });

    it('should have the property isInternal (base name: "isInternal")', function() {
      // uncomment below and update the code to test the property isInternal
      //var instance = new CloudMonitoringApi.UptimeCheckConfig();
      //expect(instance).to.be();
    });

    it('should have the property monitoredResource (base name: "monitoredResource")', function() {
      // uncomment below and update the code to test the property monitoredResource
      //var instance = new CloudMonitoringApi.UptimeCheckConfig();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new CloudMonitoringApi.UptimeCheckConfig();
      //expect(instance).to.be();
    });

    it('should have the property period (base name: "period")', function() {
      // uncomment below and update the code to test the property period
      //var instance = new CloudMonitoringApi.UptimeCheckConfig();
      //expect(instance).to.be();
    });

    it('should have the property resourceGroup (base name: "resourceGroup")', function() {
      // uncomment below and update the code to test the property resourceGroup
      //var instance = new CloudMonitoringApi.UptimeCheckConfig();
      //expect(instance).to.be();
    });

    it('should have the property selectedRegions (base name: "selectedRegions")', function() {
      // uncomment below and update the code to test the property selectedRegions
      //var instance = new CloudMonitoringApi.UptimeCheckConfig();
      //expect(instance).to.be();
    });

    it('should have the property syntheticMonitor (base name: "syntheticMonitor")', function() {
      // uncomment below and update the code to test the property syntheticMonitor
      //var instance = new CloudMonitoringApi.UptimeCheckConfig();
      //expect(instance).to.be();
    });

    it('should have the property tcpCheck (base name: "tcpCheck")', function() {
      // uncomment below and update the code to test the property tcpCheck
      //var instance = new CloudMonitoringApi.UptimeCheckConfig();
      //expect(instance).to.be();
    });

    it('should have the property timeout (base name: "timeout")', function() {
      // uncomment below and update the code to test the property timeout
      //var instance = new CloudMonitoringApi.UptimeCheckConfig();
      //expect(instance).to.be();
    });

    it('should have the property userLabels (base name: "userLabels")', function() {
      // uncomment below and update the code to test the property userLabels
      //var instance = new CloudMonitoringApi.UptimeCheckConfig();
      //expect(instance).to.be();
    });

  });

}));
