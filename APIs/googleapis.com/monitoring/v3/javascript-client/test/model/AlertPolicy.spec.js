/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudMonitoringApi);
  }
}(this, function(expect, CloudMonitoringApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudMonitoringApi.AlertPolicy();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AlertPolicy', function() {
    it('should create an instance of AlertPolicy', function() {
      // uncomment below and update the code to test AlertPolicy
      //var instance = new CloudMonitoringApi.AlertPolicy();
      //expect(instance).to.be.a(CloudMonitoringApi.AlertPolicy);
    });

    it('should have the property alertStrategy (base name: "alertStrategy")', function() {
      // uncomment below and update the code to test the property alertStrategy
      //var instance = new CloudMonitoringApi.AlertPolicy();
      //expect(instance).to.be();
    });

    it('should have the property combiner (base name: "combiner")', function() {
      // uncomment below and update the code to test the property combiner
      //var instance = new CloudMonitoringApi.AlertPolicy();
      //expect(instance).to.be();
    });

    it('should have the property conditions (base name: "conditions")', function() {
      // uncomment below and update the code to test the property conditions
      //var instance = new CloudMonitoringApi.AlertPolicy();
      //expect(instance).to.be();
    });

    it('should have the property creationRecord (base name: "creationRecord")', function() {
      // uncomment below and update the code to test the property creationRecord
      //var instance = new CloudMonitoringApi.AlertPolicy();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new CloudMonitoringApi.AlertPolicy();
      //expect(instance).to.be();
    });

    it('should have the property documentation (base name: "documentation")', function() {
      // uncomment below and update the code to test the property documentation
      //var instance = new CloudMonitoringApi.AlertPolicy();
      //expect(instance).to.be();
    });

    it('should have the property enabled (base name: "enabled")', function() {
      // uncomment below and update the code to test the property enabled
      //var instance = new CloudMonitoringApi.AlertPolicy();
      //expect(instance).to.be();
    });

    it('should have the property mutationRecord (base name: "mutationRecord")', function() {
      // uncomment below and update the code to test the property mutationRecord
      //var instance = new CloudMonitoringApi.AlertPolicy();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new CloudMonitoringApi.AlertPolicy();
      //expect(instance).to.be();
    });

    it('should have the property notificationChannels (base name: "notificationChannels")', function() {
      // uncomment below and update the code to test the property notificationChannels
      //var instance = new CloudMonitoringApi.AlertPolicy();
      //expect(instance).to.be();
    });

    it('should have the property severity (base name: "severity")', function() {
      // uncomment below and update the code to test the property severity
      //var instance = new CloudMonitoringApi.AlertPolicy();
      //expect(instance).to.be();
    });

    it('should have the property userLabels (base name: "userLabels")', function() {
      // uncomment below and update the code to test the property userLabels
      //var instance = new CloudMonitoringApi.AlertPolicy();
      //expect(instance).to.be();
    });

    it('should have the property validity (base name: "validity")', function() {
      // uncomment below and update the code to test the property validity
      //var instance = new CloudMonitoringApi.AlertPolicy();
      //expect(instance).to.be();
    });

  });

}));
