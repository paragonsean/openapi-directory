/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudMonitoringApi);
  }
}(this, function(expect, CloudMonitoringApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudMonitoringApi.HttpCheck();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('HttpCheck', function() {
    it('should create an instance of HttpCheck', function() {
      // uncomment below and update the code to test HttpCheck
      //var instance = new CloudMonitoringApi.HttpCheck();
      //expect(instance).to.be.a(CloudMonitoringApi.HttpCheck);
    });

    it('should have the property acceptedResponseStatusCodes (base name: "acceptedResponseStatusCodes")', function() {
      // uncomment below and update the code to test the property acceptedResponseStatusCodes
      //var instance = new CloudMonitoringApi.HttpCheck();
      //expect(instance).to.be();
    });

    it('should have the property authInfo (base name: "authInfo")', function() {
      // uncomment below and update the code to test the property authInfo
      //var instance = new CloudMonitoringApi.HttpCheck();
      //expect(instance).to.be();
    });

    it('should have the property body (base name: "body")', function() {
      // uncomment below and update the code to test the property body
      //var instance = new CloudMonitoringApi.HttpCheck();
      //expect(instance).to.be();
    });

    it('should have the property contentType (base name: "contentType")', function() {
      // uncomment below and update the code to test the property contentType
      //var instance = new CloudMonitoringApi.HttpCheck();
      //expect(instance).to.be();
    });

    it('should have the property customContentType (base name: "customContentType")', function() {
      // uncomment below and update the code to test the property customContentType
      //var instance = new CloudMonitoringApi.HttpCheck();
      //expect(instance).to.be();
    });

    it('should have the property headers (base name: "headers")', function() {
      // uncomment below and update the code to test the property headers
      //var instance = new CloudMonitoringApi.HttpCheck();
      //expect(instance).to.be();
    });

    it('should have the property maskHeaders (base name: "maskHeaders")', function() {
      // uncomment below and update the code to test the property maskHeaders
      //var instance = new CloudMonitoringApi.HttpCheck();
      //expect(instance).to.be();
    });

    it('should have the property path (base name: "path")', function() {
      // uncomment below and update the code to test the property path
      //var instance = new CloudMonitoringApi.HttpCheck();
      //expect(instance).to.be();
    });

    it('should have the property pingConfig (base name: "pingConfig")', function() {
      // uncomment below and update the code to test the property pingConfig
      //var instance = new CloudMonitoringApi.HttpCheck();
      //expect(instance).to.be();
    });

    it('should have the property port (base name: "port")', function() {
      // uncomment below and update the code to test the property port
      //var instance = new CloudMonitoringApi.HttpCheck();
      //expect(instance).to.be();
    });

    it('should have the property requestMethod (base name: "requestMethod")', function() {
      // uncomment below and update the code to test the property requestMethod
      //var instance = new CloudMonitoringApi.HttpCheck();
      //expect(instance).to.be();
    });

    it('should have the property useSsl (base name: "useSsl")', function() {
      // uncomment below and update the code to test the property useSsl
      //var instance = new CloudMonitoringApi.HttpCheck();
      //expect(instance).to.be();
    });

    it('should have the property validateSsl (base name: "validateSsl")', function() {
      // uncomment below and update the code to test the property validateSsl
      //var instance = new CloudMonitoringApi.HttpCheck();
      //expect(instance).to.be();
    });

  });

}));
