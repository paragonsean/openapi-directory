/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDistributionCut.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDistributionCut::OAIDistributionCut(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDistributionCut::OAIDistributionCut() {
    this->initializeModel();
}

OAIDistributionCut::~OAIDistributionCut() {}

void OAIDistributionCut::initializeModel() {

    m_distribution_filter_isSet = false;
    m_distribution_filter_isValid = false;

    m_range_isSet = false;
    m_range_isValid = false;
}

void OAIDistributionCut::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDistributionCut::fromJsonObject(QJsonObject json) {

    m_distribution_filter_isValid = ::OpenAPI::fromJsonValue(m_distribution_filter, json[QString("distributionFilter")]);
    m_distribution_filter_isSet = !json[QString("distributionFilter")].isNull() && m_distribution_filter_isValid;

    m_range_isValid = ::OpenAPI::fromJsonValue(m_range, json[QString("range")]);
    m_range_isSet = !json[QString("range")].isNull() && m_range_isValid;
}

QString OAIDistributionCut::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDistributionCut::asJsonObject() const {
    QJsonObject obj;
    if (m_distribution_filter_isSet) {
        obj.insert(QString("distributionFilter"), ::OpenAPI::toJsonValue(m_distribution_filter));
    }
    if (m_range.isSet()) {
        obj.insert(QString("range"), ::OpenAPI::toJsonValue(m_range));
    }
    return obj;
}

QString OAIDistributionCut::getDistributionFilter() const {
    return m_distribution_filter;
}
void OAIDistributionCut::setDistributionFilter(const QString &distribution_filter) {
    m_distribution_filter = distribution_filter;
    m_distribution_filter_isSet = true;
}

bool OAIDistributionCut::is_distribution_filter_Set() const{
    return m_distribution_filter_isSet;
}

bool OAIDistributionCut::is_distribution_filter_Valid() const{
    return m_distribution_filter_isValid;
}

OAIGoogleMonitoringV3Range OAIDistributionCut::getRange() const {
    return m_range;
}
void OAIDistributionCut::setRange(const OAIGoogleMonitoringV3Range &range) {
    m_range = range;
    m_range_isSet = true;
}

bool OAIDistributionCut::is_range_Set() const{
    return m_range_isSet;
}

bool OAIDistributionCut::is_range_Valid() const{
    return m_range_isValid;
}

bool OAIDistributionCut::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_distribution_filter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_range.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDistributionCut::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
