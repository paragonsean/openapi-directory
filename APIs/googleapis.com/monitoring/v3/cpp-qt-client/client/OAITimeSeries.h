/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITimeSeries.h
 *
 * A collection of data points that describes the time-varying values of a metric. A time series is identified by a combination of a fully-specified monitored resource and a fully-specified metric. This type is used for both listing and creating time series.
 */

#ifndef OAITimeSeries_H
#define OAITimeSeries_H

#include <QJsonObject>

#include "OAIMetric.h"
#include "OAIMonitoredResource.h"
#include "OAIMonitoredResourceMetadata.h"
#include "OAIPoint.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMonitoredResourceMetadata;
class OAIMetric;
class OAIPoint;
class OAIMonitoredResource;

class OAITimeSeries : public OAIObject {
public:
    OAITimeSeries();
    OAITimeSeries(QString json);
    ~OAITimeSeries() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMonitoredResourceMetadata getMetadata() const;
    void setMetadata(const OAIMonitoredResourceMetadata &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    OAIMetric getMetric() const;
    void setMetric(const OAIMetric &metric);
    bool is_metric_Set() const;
    bool is_metric_Valid() const;

    QString getMetricKind() const;
    void setMetricKind(const QString &metric_kind);
    bool is_metric_kind_Set() const;
    bool is_metric_kind_Valid() const;

    QList<OAIPoint> getPoints() const;
    void setPoints(const QList<OAIPoint> &points);
    bool is_points_Set() const;
    bool is_points_Valid() const;

    OAIMonitoredResource getResource() const;
    void setResource(const OAIMonitoredResource &resource);
    bool is_resource_Set() const;
    bool is_resource_Valid() const;

    QString getUnit() const;
    void setUnit(const QString &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    QString getValueType() const;
    void setValueType(const QString &value_type);
    bool is_value_type_Set() const;
    bool is_value_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMonitoredResourceMetadata m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    OAIMetric m_metric;
    bool m_metric_isSet;
    bool m_metric_isValid;

    QString m_metric_kind;
    bool m_metric_kind_isSet;
    bool m_metric_kind_isValid;

    QList<OAIPoint> m_points;
    bool m_points_isSet;
    bool m_points_isValid;

    OAIMonitoredResource m_resource;
    bool m_resource_isSet;
    bool m_resource_isValid;

    QString m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;

    QString m_value_type;
    bool m_value_type_isSet;
    bool m_value_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITimeSeries)

#endif // OAITimeSeries_H
