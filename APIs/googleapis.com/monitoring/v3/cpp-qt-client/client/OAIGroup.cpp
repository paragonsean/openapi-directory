/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGroup::OAIGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGroup::OAIGroup() {
    this->initializeModel();
}

OAIGroup::~OAIGroup() {}

void OAIGroup::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_filter_isSet = false;
    m_filter_isValid = false;

    m_is_cluster_isSet = false;
    m_is_cluster_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_parent_name_isSet = false;
    m_parent_name_isValid = false;
}

void OAIGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGroup::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_filter_isValid = ::OpenAPI::fromJsonValue(m_filter, json[QString("filter")]);
    m_filter_isSet = !json[QString("filter")].isNull() && m_filter_isValid;

    m_is_cluster_isValid = ::OpenAPI::fromJsonValue(m_is_cluster, json[QString("isCluster")]);
    m_is_cluster_isSet = !json[QString("isCluster")].isNull() && m_is_cluster_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_parent_name_isValid = ::OpenAPI::fromJsonValue(m_parent_name, json[QString("parentName")]);
    m_parent_name_isSet = !json[QString("parentName")].isNull() && m_parent_name_isValid;
}

QString OAIGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_filter_isSet) {
        obj.insert(QString("filter"), ::OpenAPI::toJsonValue(m_filter));
    }
    if (m_is_cluster_isSet) {
        obj.insert(QString("isCluster"), ::OpenAPI::toJsonValue(m_is_cluster));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_parent_name_isSet) {
        obj.insert(QString("parentName"), ::OpenAPI::toJsonValue(m_parent_name));
    }
    return obj;
}

QString OAIGroup::getDisplayName() const {
    return m_display_name;
}
void OAIGroup::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGroup::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGroup::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGroup::getFilter() const {
    return m_filter;
}
void OAIGroup::setFilter(const QString &filter) {
    m_filter = filter;
    m_filter_isSet = true;
}

bool OAIGroup::is_filter_Set() const{
    return m_filter_isSet;
}

bool OAIGroup::is_filter_Valid() const{
    return m_filter_isValid;
}

bool OAIGroup::isIsCluster() const {
    return m_is_cluster;
}
void OAIGroup::setIsCluster(const bool &is_cluster) {
    m_is_cluster = is_cluster;
    m_is_cluster_isSet = true;
}

bool OAIGroup::is_is_cluster_Set() const{
    return m_is_cluster_isSet;
}

bool OAIGroup::is_is_cluster_Valid() const{
    return m_is_cluster_isValid;
}

QString OAIGroup::getName() const {
    return m_name;
}
void OAIGroup::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGroup::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGroup::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGroup::getParentName() const {
    return m_parent_name;
}
void OAIGroup::setParentName(const QString &parent_name) {
    m_parent_name = parent_name;
    m_parent_name_isSet = true;
}

bool OAIGroup::is_parent_name_Set() const{
    return m_parent_name_isSet;
}

bool OAIGroup::is_parent_name_Valid() const{
    return m_parent_name_isValid;
}

bool OAIGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_filter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_cluster_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
