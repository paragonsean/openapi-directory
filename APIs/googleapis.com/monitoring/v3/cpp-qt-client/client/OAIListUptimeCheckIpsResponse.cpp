/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListUptimeCheckIpsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListUptimeCheckIpsResponse::OAIListUptimeCheckIpsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListUptimeCheckIpsResponse::OAIListUptimeCheckIpsResponse() {
    this->initializeModel();
}

OAIListUptimeCheckIpsResponse::~OAIListUptimeCheckIpsResponse() {}

void OAIListUptimeCheckIpsResponse::initializeModel() {

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;

    m_uptime_check_ips_isSet = false;
    m_uptime_check_ips_isValid = false;
}

void OAIListUptimeCheckIpsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListUptimeCheckIpsResponse::fromJsonObject(QJsonObject json) {

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;

    m_uptime_check_ips_isValid = ::OpenAPI::fromJsonValue(m_uptime_check_ips, json[QString("uptimeCheckIps")]);
    m_uptime_check_ips_isSet = !json[QString("uptimeCheckIps")].isNull() && m_uptime_check_ips_isValid;
}

QString OAIListUptimeCheckIpsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListUptimeCheckIpsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    if (m_uptime_check_ips.size() > 0) {
        obj.insert(QString("uptimeCheckIps"), ::OpenAPI::toJsonValue(m_uptime_check_ips));
    }
    return obj;
}

QString OAIListUptimeCheckIpsResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIListUptimeCheckIpsResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIListUptimeCheckIpsResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIListUptimeCheckIpsResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

QList<OAIUptimeCheckIp> OAIListUptimeCheckIpsResponse::getUptimeCheckIps() const {
    return m_uptime_check_ips;
}
void OAIListUptimeCheckIpsResponse::setUptimeCheckIps(const QList<OAIUptimeCheckIp> &uptime_check_ips) {
    m_uptime_check_ips = uptime_check_ips;
    m_uptime_check_ips_isSet = true;
}

bool OAIListUptimeCheckIpsResponse::is_uptime_check_ips_Set() const{
    return m_uptime_check_ips_isSet;
}

bool OAIListUptimeCheckIpsResponse::is_uptime_check_ips_Valid() const{
    return m_uptime_check_ips_isValid;
}

bool OAIListUptimeCheckIpsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uptime_check_ips.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListUptimeCheckIpsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
