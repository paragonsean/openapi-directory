/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUptimeCheckConfig.h
 *
 * This message configures which resources and services to monitor for availability.
 */

#ifndef OAIUptimeCheckConfig_H
#define OAIUptimeCheckConfig_H

#include <QJsonObject>

#include "OAIContentMatcher.h"
#include "OAIHttpCheck.h"
#include "OAIInternalChecker.h"
#include "OAIMonitoredResource.h"
#include "OAIResourceGroup.h"
#include "OAISyntheticMonitorTarget.h"
#include "OAITcpCheck.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContentMatcher;
class OAIHttpCheck;
class OAIInternalChecker;
class OAIMonitoredResource;
class OAIResourceGroup;
class OAISyntheticMonitorTarget;
class OAITcpCheck;

class OAIUptimeCheckConfig : public OAIObject {
public:
    OAIUptimeCheckConfig();
    OAIUptimeCheckConfig(QString json);
    ~OAIUptimeCheckConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCheckerType() const;
    void setCheckerType(const QString &checker_type);
    bool is_checker_type_Set() const;
    bool is_checker_type_Valid() const;

    QList<OAIContentMatcher> getContentMatchers() const;
    void setContentMatchers(const QList<OAIContentMatcher> &content_matchers);
    bool is_content_matchers_Set() const;
    bool is_content_matchers_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    OAIHttpCheck getHttpCheck() const;
    void setHttpCheck(const OAIHttpCheck &http_check);
    bool is_http_check_Set() const;
    bool is_http_check_Valid() const;

    Q_DECL_DEPRECATED QList<OAIInternalChecker> getInternalCheckers() const;
    Q_DECL_DEPRECATED void setInternalCheckers(const QList<OAIInternalChecker> &internal_checkers);
    Q_DECL_DEPRECATED bool is_internal_checkers_Set() const;
    Q_DECL_DEPRECATED bool is_internal_checkers_Valid() const;

    Q_DECL_DEPRECATED bool isIsInternal() const;
    Q_DECL_DEPRECATED void setIsInternal(const bool &is_internal);
    Q_DECL_DEPRECATED bool is_is_internal_Set() const;
    Q_DECL_DEPRECATED bool is_is_internal_Valid() const;

    OAIMonitoredResource getMonitoredResource() const;
    void setMonitoredResource(const OAIMonitoredResource &monitored_resource);
    bool is_monitored_resource_Set() const;
    bool is_monitored_resource_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPeriod() const;
    void setPeriod(const QString &period);
    bool is_period_Set() const;
    bool is_period_Valid() const;

    OAIResourceGroup getResourceGroup() const;
    void setResourceGroup(const OAIResourceGroup &resource_group);
    bool is_resource_group_Set() const;
    bool is_resource_group_Valid() const;

    QList<QString> getSelectedRegions() const;
    void setSelectedRegions(const QList<QString> &selected_regions);
    bool is_selected_regions_Set() const;
    bool is_selected_regions_Valid() const;

    OAISyntheticMonitorTarget getSyntheticMonitor() const;
    void setSyntheticMonitor(const OAISyntheticMonitorTarget &synthetic_monitor);
    bool is_synthetic_monitor_Set() const;
    bool is_synthetic_monitor_Valid() const;

    OAITcpCheck getTcpCheck() const;
    void setTcpCheck(const OAITcpCheck &tcp_check);
    bool is_tcp_check_Set() const;
    bool is_tcp_check_Valid() const;

    QString getTimeout() const;
    void setTimeout(const QString &timeout);
    bool is_timeout_Set() const;
    bool is_timeout_Valid() const;

    QMap<QString, QString> getUserLabels() const;
    void setUserLabels(const QMap<QString, QString> &user_labels);
    bool is_user_labels_Set() const;
    bool is_user_labels_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_checker_type;
    bool m_checker_type_isSet;
    bool m_checker_type_isValid;

    QList<OAIContentMatcher> m_content_matchers;
    bool m_content_matchers_isSet;
    bool m_content_matchers_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    OAIHttpCheck m_http_check;
    bool m_http_check_isSet;
    bool m_http_check_isValid;

    QList<OAIInternalChecker> m_internal_checkers;
    bool m_internal_checkers_isSet;
    bool m_internal_checkers_isValid;

    bool m_is_internal;
    bool m_is_internal_isSet;
    bool m_is_internal_isValid;

    OAIMonitoredResource m_monitored_resource;
    bool m_monitored_resource_isSet;
    bool m_monitored_resource_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_period;
    bool m_period_isSet;
    bool m_period_isValid;

    OAIResourceGroup m_resource_group;
    bool m_resource_group_isSet;
    bool m_resource_group_isValid;

    QList<QString> m_selected_regions;
    bool m_selected_regions_isSet;
    bool m_selected_regions_isValid;

    OAISyntheticMonitorTarget m_synthetic_monitor;
    bool m_synthetic_monitor_isSet;
    bool m_synthetic_monitor_isValid;

    OAITcpCheck m_tcp_check;
    bool m_tcp_check_isSet;
    bool m_tcp_check_isValid;

    QString m_timeout;
    bool m_timeout_isSet;
    bool m_timeout_isValid;

    QMap<QString, QString> m_user_labels;
    bool m_user_labels_isSet;
    bool m_user_labels_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUptimeCheckConfig)

#endif // OAIUptimeCheckConfig_H
