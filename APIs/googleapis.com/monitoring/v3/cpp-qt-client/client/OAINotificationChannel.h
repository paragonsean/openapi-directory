/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINotificationChannel.h
 *
 * A NotificationChannel is a medium through which an alert is delivered when a policy violation is detected. Examples of channels include email, SMS, and third-party messaging applications. Fields containing sensitive information like authentication tokens or contact info are only partially populated on retrieval.
 */

#ifndef OAINotificationChannel_H
#define OAINotificationChannel_H

#include <QJsonObject>

#include "OAIMutationRecord.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMutationRecord;

class OAINotificationChannel : public OAIObject {
public:
    OAINotificationChannel();
    OAINotificationChannel(QString json);
    ~OAINotificationChannel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMutationRecord getCreationRecord() const;
    void setCreationRecord(const OAIMutationRecord &creation_record);
    bool is_creation_record_Set() const;
    bool is_creation_record_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QList<OAIMutationRecord> getMutationRecords() const;
    void setMutationRecords(const QList<OAIMutationRecord> &mutation_records);
    bool is_mutation_records_Set() const;
    bool is_mutation_records_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QMap<QString, QString> getUserLabels() const;
    void setUserLabels(const QMap<QString, QString> &user_labels);
    bool is_user_labels_Set() const;
    bool is_user_labels_Valid() const;

    QString getVerificationStatus() const;
    void setVerificationStatus(const QString &verification_status);
    bool is_verification_status_Set() const;
    bool is_verification_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMutationRecord m_creation_record;
    bool m_creation_record_isSet;
    bool m_creation_record_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QList<OAIMutationRecord> m_mutation_records;
    bool m_mutation_records_isSet;
    bool m_mutation_records_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QMap<QString, QString> m_user_labels;
    bool m_user_labels_isSet;
    bool m_user_labels_isValid;

    QString m_verification_status;
    bool m_verification_status_isSet;
    bool m_verification_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINotificationChannel)

#endif // OAINotificationChannel_H
