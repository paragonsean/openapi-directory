/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITimeSeriesRatio.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITimeSeriesRatio::OAITimeSeriesRatio(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITimeSeriesRatio::OAITimeSeriesRatio() {
    this->initializeModel();
}

OAITimeSeriesRatio::~OAITimeSeriesRatio() {}

void OAITimeSeriesRatio::initializeModel() {

    m_bad_service_filter_isSet = false;
    m_bad_service_filter_isValid = false;

    m_good_service_filter_isSet = false;
    m_good_service_filter_isValid = false;

    m_total_service_filter_isSet = false;
    m_total_service_filter_isValid = false;
}

void OAITimeSeriesRatio::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITimeSeriesRatio::fromJsonObject(QJsonObject json) {

    m_bad_service_filter_isValid = ::OpenAPI::fromJsonValue(m_bad_service_filter, json[QString("badServiceFilter")]);
    m_bad_service_filter_isSet = !json[QString("badServiceFilter")].isNull() && m_bad_service_filter_isValid;

    m_good_service_filter_isValid = ::OpenAPI::fromJsonValue(m_good_service_filter, json[QString("goodServiceFilter")]);
    m_good_service_filter_isSet = !json[QString("goodServiceFilter")].isNull() && m_good_service_filter_isValid;

    m_total_service_filter_isValid = ::OpenAPI::fromJsonValue(m_total_service_filter, json[QString("totalServiceFilter")]);
    m_total_service_filter_isSet = !json[QString("totalServiceFilter")].isNull() && m_total_service_filter_isValid;
}

QString OAITimeSeriesRatio::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITimeSeriesRatio::asJsonObject() const {
    QJsonObject obj;
    if (m_bad_service_filter_isSet) {
        obj.insert(QString("badServiceFilter"), ::OpenAPI::toJsonValue(m_bad_service_filter));
    }
    if (m_good_service_filter_isSet) {
        obj.insert(QString("goodServiceFilter"), ::OpenAPI::toJsonValue(m_good_service_filter));
    }
    if (m_total_service_filter_isSet) {
        obj.insert(QString("totalServiceFilter"), ::OpenAPI::toJsonValue(m_total_service_filter));
    }
    return obj;
}

QString OAITimeSeriesRatio::getBadServiceFilter() const {
    return m_bad_service_filter;
}
void OAITimeSeriesRatio::setBadServiceFilter(const QString &bad_service_filter) {
    m_bad_service_filter = bad_service_filter;
    m_bad_service_filter_isSet = true;
}

bool OAITimeSeriesRatio::is_bad_service_filter_Set() const{
    return m_bad_service_filter_isSet;
}

bool OAITimeSeriesRatio::is_bad_service_filter_Valid() const{
    return m_bad_service_filter_isValid;
}

QString OAITimeSeriesRatio::getGoodServiceFilter() const {
    return m_good_service_filter;
}
void OAITimeSeriesRatio::setGoodServiceFilter(const QString &good_service_filter) {
    m_good_service_filter = good_service_filter;
    m_good_service_filter_isSet = true;
}

bool OAITimeSeriesRatio::is_good_service_filter_Set() const{
    return m_good_service_filter_isSet;
}

bool OAITimeSeriesRatio::is_good_service_filter_Valid() const{
    return m_good_service_filter_isValid;
}

QString OAITimeSeriesRatio::getTotalServiceFilter() const {
    return m_total_service_filter;
}
void OAITimeSeriesRatio::setTotalServiceFilter(const QString &total_service_filter) {
    m_total_service_filter = total_service_filter;
    m_total_service_filter_isSet = true;
}

bool OAITimeSeriesRatio::is_total_service_filter_Set() const{
    return m_total_service_filter_isSet;
}

bool OAITimeSeriesRatio::is_total_service_filter_Valid() const{
    return m_total_service_filter_isValid;
}

bool OAITimeSeriesRatio::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bad_service_filter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_good_service_filter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_service_filter_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITimeSeriesRatio::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
