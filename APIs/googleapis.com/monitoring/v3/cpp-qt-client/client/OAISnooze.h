/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISnooze.h
 *
 * A Snooze will prevent any alerts from being opened, and close any that are already open. The Snooze will work on alerts that match the criteria defined in the Snooze. The Snooze will be active from interval.start_time through interval.end_time.
 */

#ifndef OAISnooze_H
#define OAISnooze_H

#include <QJsonObject>

#include "OAICriteria.h"
#include "OAITimeInterval.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICriteria;
class OAITimeInterval;

class OAISnooze : public OAIObject {
public:
    OAISnooze();
    OAISnooze(QString json);
    ~OAISnooze() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICriteria getCriteria() const;
    void setCriteria(const OAICriteria &criteria);
    bool is_criteria_Set() const;
    bool is_criteria_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    OAITimeInterval getInterval() const;
    void setInterval(const OAITimeInterval &interval);
    bool is_interval_Set() const;
    bool is_interval_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICriteria m_criteria;
    bool m_criteria_isSet;
    bool m_criteria_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    OAITimeInterval m_interval;
    bool m_interval_isSet;
    bool m_interval_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISnooze)

#endif // OAISnooze_H
