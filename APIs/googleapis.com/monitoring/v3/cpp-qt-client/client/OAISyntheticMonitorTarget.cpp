/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISyntheticMonitorTarget.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISyntheticMonitorTarget::OAISyntheticMonitorTarget(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISyntheticMonitorTarget::OAISyntheticMonitorTarget() {
    this->initializeModel();
}

OAISyntheticMonitorTarget::~OAISyntheticMonitorTarget() {}

void OAISyntheticMonitorTarget::initializeModel() {

    m_cloud_function_v2_isSet = false;
    m_cloud_function_v2_isValid = false;
}

void OAISyntheticMonitorTarget::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISyntheticMonitorTarget::fromJsonObject(QJsonObject json) {

    m_cloud_function_v2_isValid = ::OpenAPI::fromJsonValue(m_cloud_function_v2, json[QString("cloudFunctionV2")]);
    m_cloud_function_v2_isSet = !json[QString("cloudFunctionV2")].isNull() && m_cloud_function_v2_isValid;
}

QString OAISyntheticMonitorTarget::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISyntheticMonitorTarget::asJsonObject() const {
    QJsonObject obj;
    if (m_cloud_function_v2.isSet()) {
        obj.insert(QString("cloudFunctionV2"), ::OpenAPI::toJsonValue(m_cloud_function_v2));
    }
    return obj;
}

OAICloudFunctionV2Target OAISyntheticMonitorTarget::getCloudFunctionV2() const {
    return m_cloud_function_v2;
}
void OAISyntheticMonitorTarget::setCloudFunctionV2(const OAICloudFunctionV2Target &cloud_function_v2) {
    m_cloud_function_v2 = cloud_function_v2;
    m_cloud_function_v2_isSet = true;
}

bool OAISyntheticMonitorTarget::is_cloud_function_v2_Set() const{
    return m_cloud_function_v2_isSet;
}

bool OAISyntheticMonitorTarget::is_cloud_function_v2_Valid() const{
    return m_cloud_function_v2_isValid;
}

bool OAISyntheticMonitorTarget::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cloud_function_v2.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISyntheticMonitorTarget::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
