/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceLevelIndicator.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceLevelIndicator::OAIServiceLevelIndicator(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceLevelIndicator::OAIServiceLevelIndicator() {
    this->initializeModel();
}

OAIServiceLevelIndicator::~OAIServiceLevelIndicator() {}

void OAIServiceLevelIndicator::initializeModel() {

    m_basic_sli_isSet = false;
    m_basic_sli_isValid = false;

    m_request_based_isSet = false;
    m_request_based_isValid = false;

    m_windows_based_isSet = false;
    m_windows_based_isValid = false;
}

void OAIServiceLevelIndicator::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServiceLevelIndicator::fromJsonObject(QJsonObject json) {

    m_basic_sli_isValid = ::OpenAPI::fromJsonValue(m_basic_sli, json[QString("basicSli")]);
    m_basic_sli_isSet = !json[QString("basicSli")].isNull() && m_basic_sli_isValid;

    m_request_based_isValid = ::OpenAPI::fromJsonValue(m_request_based, json[QString("requestBased")]);
    m_request_based_isSet = !json[QString("requestBased")].isNull() && m_request_based_isValid;

    m_windows_based_isValid = ::OpenAPI::fromJsonValue(m_windows_based, json[QString("windowsBased")]);
    m_windows_based_isSet = !json[QString("windowsBased")].isNull() && m_windows_based_isValid;
}

QString OAIServiceLevelIndicator::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServiceLevelIndicator::asJsonObject() const {
    QJsonObject obj;
    if (m_basic_sli.isSet()) {
        obj.insert(QString("basicSli"), ::OpenAPI::toJsonValue(m_basic_sli));
    }
    if (m_request_based.isSet()) {
        obj.insert(QString("requestBased"), ::OpenAPI::toJsonValue(m_request_based));
    }
    if (m_windows_based.isSet()) {
        obj.insert(QString("windowsBased"), ::OpenAPI::toJsonValue(m_windows_based));
    }
    return obj;
}

OAIBasicSli OAIServiceLevelIndicator::getBasicSli() const {
    return m_basic_sli;
}
void OAIServiceLevelIndicator::setBasicSli(const OAIBasicSli &basic_sli) {
    m_basic_sli = basic_sli;
    m_basic_sli_isSet = true;
}

bool OAIServiceLevelIndicator::is_basic_sli_Set() const{
    return m_basic_sli_isSet;
}

bool OAIServiceLevelIndicator::is_basic_sli_Valid() const{
    return m_basic_sli_isValid;
}

OAIRequestBasedSli OAIServiceLevelIndicator::getRequestBased() const {
    return m_request_based;
}
void OAIServiceLevelIndicator::setRequestBased(const OAIRequestBasedSli &request_based) {
    m_request_based = request_based;
    m_request_based_isSet = true;
}

bool OAIServiceLevelIndicator::is_request_based_Set() const{
    return m_request_based_isSet;
}

bool OAIServiceLevelIndicator::is_request_based_Valid() const{
    return m_request_based_isValid;
}

OAIWindowsBasedSli OAIServiceLevelIndicator::getWindowsBased() const {
    return m_windows_based;
}
void OAIServiceLevelIndicator::setWindowsBased(const OAIWindowsBasedSli &windows_based) {
    m_windows_based = windows_based;
    m_windows_based_isSet = true;
}

bool OAIServiceLevelIndicator::is_windows_based_Set() const{
    return m_windows_based_isSet;
}

bool OAIServiceLevelIndicator::is_windows_based_Valid() const{
    return m_windows_based_isValid;
}

bool OAIServiceLevelIndicator::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_basic_sli.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_based.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_windows_based.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServiceLevelIndicator::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
