/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITimeSeriesData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITimeSeriesData::OAITimeSeriesData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITimeSeriesData::OAITimeSeriesData() {
    this->initializeModel();
}

OAITimeSeriesData::~OAITimeSeriesData() {}

void OAITimeSeriesData::initializeModel() {

    m_label_values_isSet = false;
    m_label_values_isValid = false;

    m_point_data_isSet = false;
    m_point_data_isValid = false;
}

void OAITimeSeriesData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITimeSeriesData::fromJsonObject(QJsonObject json) {

    m_label_values_isValid = ::OpenAPI::fromJsonValue(m_label_values, json[QString("labelValues")]);
    m_label_values_isSet = !json[QString("labelValues")].isNull() && m_label_values_isValid;

    m_point_data_isValid = ::OpenAPI::fromJsonValue(m_point_data, json[QString("pointData")]);
    m_point_data_isSet = !json[QString("pointData")].isNull() && m_point_data_isValid;
}

QString OAITimeSeriesData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITimeSeriesData::asJsonObject() const {
    QJsonObject obj;
    if (m_label_values.size() > 0) {
        obj.insert(QString("labelValues"), ::OpenAPI::toJsonValue(m_label_values));
    }
    if (m_point_data.size() > 0) {
        obj.insert(QString("pointData"), ::OpenAPI::toJsonValue(m_point_data));
    }
    return obj;
}

QList<OAILabelValue> OAITimeSeriesData::getLabelValues() const {
    return m_label_values;
}
void OAITimeSeriesData::setLabelValues(const QList<OAILabelValue> &label_values) {
    m_label_values = label_values;
    m_label_values_isSet = true;
}

bool OAITimeSeriesData::is_label_values_Set() const{
    return m_label_values_isSet;
}

bool OAITimeSeriesData::is_label_values_Valid() const{
    return m_label_values_isValid;
}

QList<OAIPointData> OAITimeSeriesData::getPointData() const {
    return m_point_data;
}
void OAITimeSeriesData::setPointData(const QList<OAIPointData> &point_data) {
    m_point_data = point_data;
    m_point_data_isSet = true;
}

bool OAITimeSeriesData::is_point_data_Set() const{
    return m_point_data_isSet;
}

bool OAITimeSeriesData::is_point_data_Valid() const{
    return m_point_data_isValid;
}

bool OAITimeSeriesData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_label_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_point_data.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITimeSeriesData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
