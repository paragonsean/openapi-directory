/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILabelValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILabelValue::OAILabelValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILabelValue::OAILabelValue() {
    this->initializeModel();
}

OAILabelValue::~OAILabelValue() {}

void OAILabelValue::initializeModel() {

    m_bool_value_isSet = false;
    m_bool_value_isValid = false;

    m_int64_value_isSet = false;
    m_int64_value_isValid = false;

    m_string_value_isSet = false;
    m_string_value_isValid = false;
}

void OAILabelValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILabelValue::fromJsonObject(QJsonObject json) {

    m_bool_value_isValid = ::OpenAPI::fromJsonValue(m_bool_value, json[QString("boolValue")]);
    m_bool_value_isSet = !json[QString("boolValue")].isNull() && m_bool_value_isValid;

    m_int64_value_isValid = ::OpenAPI::fromJsonValue(m_int64_value, json[QString("int64Value")]);
    m_int64_value_isSet = !json[QString("int64Value")].isNull() && m_int64_value_isValid;

    m_string_value_isValid = ::OpenAPI::fromJsonValue(m_string_value, json[QString("stringValue")]);
    m_string_value_isSet = !json[QString("stringValue")].isNull() && m_string_value_isValid;
}

QString OAILabelValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILabelValue::asJsonObject() const {
    QJsonObject obj;
    if (m_bool_value_isSet) {
        obj.insert(QString("boolValue"), ::OpenAPI::toJsonValue(m_bool_value));
    }
    if (m_int64_value_isSet) {
        obj.insert(QString("int64Value"), ::OpenAPI::toJsonValue(m_int64_value));
    }
    if (m_string_value_isSet) {
        obj.insert(QString("stringValue"), ::OpenAPI::toJsonValue(m_string_value));
    }
    return obj;
}

bool OAILabelValue::isBoolValue() const {
    return m_bool_value;
}
void OAILabelValue::setBoolValue(const bool &bool_value) {
    m_bool_value = bool_value;
    m_bool_value_isSet = true;
}

bool OAILabelValue::is_bool_value_Set() const{
    return m_bool_value_isSet;
}

bool OAILabelValue::is_bool_value_Valid() const{
    return m_bool_value_isValid;
}

QString OAILabelValue::getInt64Value() const {
    return m_int64_value;
}
void OAILabelValue::setInt64Value(const QString &int64_value) {
    m_int64_value = int64_value;
    m_int64_value_isSet = true;
}

bool OAILabelValue::is_int64_value_Set() const{
    return m_int64_value_isSet;
}

bool OAILabelValue::is_int64_value_Valid() const{
    return m_int64_value_isValid;
}

QString OAILabelValue::getStringValue() const {
    return m_string_value;
}
void OAILabelValue::setStringValue(const QString &string_value) {
    m_string_value = string_value;
    m_string_value_isSet = true;
}

bool OAILabelValue::is_string_value_Set() const{
    return m_string_value_isSet;
}

bool OAILabelValue::is_string_value_Valid() const{
    return m_string_value_isValid;
}

bool OAILabelValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bool_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_int64_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_string_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILabelValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
