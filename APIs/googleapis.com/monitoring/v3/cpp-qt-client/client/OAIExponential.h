/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExponential.h
 *
 * Specifies an exponential sequence of buckets that have a width that is proportional to the value of the lower bound. Each bucket represents a constant relative uncertainty on a specific value in the bucket.There are num_finite_buckets + 2 (&#x3D; N) buckets. Bucket i has the following boundaries:Upper bound (0 &lt;&#x3D; i &lt; N-1): scale * (growth_factor ^ i).Lower bound (1 &lt;&#x3D; i &lt; N): scale * (growth_factor ^ (i - 1)).
 */

#ifndef OAIExponential_H
#define OAIExponential_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIExponential : public OAIObject {
public:
    OAIExponential();
    OAIExponential(QString json);
    ~OAIExponential() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getGrowthFactor() const;
    void setGrowthFactor(const double &growth_factor);
    bool is_growth_factor_Set() const;
    bool is_growth_factor_Valid() const;

    qint32 getNumFiniteBuckets() const;
    void setNumFiniteBuckets(const qint32 &num_finite_buckets);
    bool is_num_finite_buckets_Set() const;
    bool is_num_finite_buckets_Valid() const;

    double getScale() const;
    void setScale(const double &scale);
    bool is_scale_Set() const;
    bool is_scale_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_growth_factor;
    bool m_growth_factor_isSet;
    bool m_growth_factor_isValid;

    qint32 m_num_finite_buckets;
    bool m_num_finite_buckets_isSet;
    bool m_num_finite_buckets_isValid;

    double m_scale;
    bool m_scale_isSet;
    bool m_scale_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExponential)

#endif // OAIExponential_H
