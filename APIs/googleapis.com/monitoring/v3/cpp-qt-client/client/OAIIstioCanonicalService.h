/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIstioCanonicalService.h
 *
 * Canonical service scoped to an Istio mesh. Anthos clusters running ASM &gt;&#x3D; 1.6.8 will have their services ingested as this type.
 */

#ifndef OAIIstioCanonicalService_H
#define OAIIstioCanonicalService_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIstioCanonicalService : public OAIObject {
public:
    OAIIstioCanonicalService();
    OAIIstioCanonicalService(QString json);
    ~OAIIstioCanonicalService() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCanonicalService() const;
    void setCanonicalService(const QString &canonical_service);
    bool is_canonical_service_Set() const;
    bool is_canonical_service_Valid() const;

    QString getCanonicalServiceNamespace() const;
    void setCanonicalServiceNamespace(const QString &canonical_service_namespace);
    bool is_canonical_service_namespace_Set() const;
    bool is_canonical_service_namespace_Valid() const;

    QString getMeshUid() const;
    void setMeshUid(const QString &mesh_uid);
    bool is_mesh_uid_Set() const;
    bool is_mesh_uid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_canonical_service;
    bool m_canonical_service_isSet;
    bool m_canonical_service_isValid;

    QString m_canonical_service_namespace;
    bool m_canonical_service_namespace_isSet;
    bool m_canonical_service_namespace_isValid;

    QString m_mesh_uid;
    bool m_mesh_uid_isSet;
    bool m_mesh_uid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIstioCanonicalService)

#endif // OAIIstioCanonicalService_H
