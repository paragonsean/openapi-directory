/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContentMatcher.h
 *
 * Optional. Used to perform content matching. This allows matching based on substrings and regular expressions, together with their negations. Only the first 4 MB of an HTTP or HTTPS check&#39;s response (and the first 1 MB of a TCP check&#39;s response) are examined for purposes of content matching.
 */

#ifndef OAIContentMatcher_H
#define OAIContentMatcher_H

#include <QJsonObject>

#include "OAIJsonPathMatcher.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIJsonPathMatcher;

class OAIContentMatcher : public OAIObject {
public:
    OAIContentMatcher();
    OAIContentMatcher(QString json);
    ~OAIContentMatcher() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContent() const;
    void setContent(const QString &content);
    bool is_content_Set() const;
    bool is_content_Valid() const;

    OAIJsonPathMatcher getJsonPathMatcher() const;
    void setJsonPathMatcher(const OAIJsonPathMatcher &json_path_matcher);
    bool is_json_path_matcher_Set() const;
    bool is_json_path_matcher_Valid() const;

    QString getMatcher() const;
    void setMatcher(const QString &matcher);
    bool is_matcher_Set() const;
    bool is_matcher_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_content;
    bool m_content_isSet;
    bool m_content_isValid;

    OAIJsonPathMatcher m_json_path_matcher;
    bool m_json_path_matcher_isSet;
    bool m_json_path_matcher_isValid;

    QString m_matcher;
    bool m_matcher_isSet;
    bool m_matcher_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContentMatcher)

#endif // OAIContentMatcher_H
