/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServiceLevelObjective.h
 *
 * A Service-Level Objective (SLO) describes a level of desired good service. It consists of a service-level indicator (SLI), a performance goal, and a period over which the objective is to be evaluated against that goal. The SLO can use SLIs defined in a number of different manners. Typical SLOs might include \&quot;99% of requests in each rolling week have latency below 200 milliseconds\&quot; or \&quot;99.5% of requests in each calendar month return successfully.\&quot;
 */

#ifndef OAIServiceLevelObjective_H
#define OAIServiceLevelObjective_H

#include <QJsonObject>

#include "OAIServiceLevelIndicator.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIServiceLevelIndicator;

class OAIServiceLevelObjective : public OAIObject {
public:
    OAIServiceLevelObjective();
    OAIServiceLevelObjective(QString json);
    ~OAIServiceLevelObjective() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCalendarPeriod() const;
    void setCalendarPeriod(const QString &calendar_period);
    bool is_calendar_period_Set() const;
    bool is_calendar_period_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    double getGoal() const;
    void setGoal(const double &goal);
    bool is_goal_Set() const;
    bool is_goal_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRollingPeriod() const;
    void setRollingPeriod(const QString &rolling_period);
    bool is_rolling_period_Set() const;
    bool is_rolling_period_Valid() const;

    OAIServiceLevelIndicator getServiceLevelIndicator() const;
    void setServiceLevelIndicator(const OAIServiceLevelIndicator &service_level_indicator);
    bool is_service_level_indicator_Set() const;
    bool is_service_level_indicator_Valid() const;

    QMap<QString, QString> getUserLabels() const;
    void setUserLabels(const QMap<QString, QString> &user_labels);
    bool is_user_labels_Set() const;
    bool is_user_labels_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_calendar_period;
    bool m_calendar_period_isSet;
    bool m_calendar_period_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    double m_goal;
    bool m_goal_isSet;
    bool m_goal_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_rolling_period;
    bool m_rolling_period_isSet;
    bool m_rolling_period_isValid;

    OAIServiceLevelIndicator m_service_level_indicator;
    bool m_service_level_indicator_isSet;
    bool m_service_level_indicator_isValid;

    QMap<QString, QString> m_user_labels;
    bool m_user_labels_isSet;
    bool m_user_labels_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServiceLevelObjective)

#endif // OAIServiceLevelObjective_H
