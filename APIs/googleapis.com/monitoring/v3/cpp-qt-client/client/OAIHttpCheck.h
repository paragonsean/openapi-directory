/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHttpCheck.h
 *
 * Information involved in an HTTP/HTTPS Uptime check request.
 */

#ifndef OAIHttpCheck_H
#define OAIHttpCheck_H

#include <QJsonObject>

#include "OAIBasicAuthentication.h"
#include "OAIPingConfig.h"
#include "OAIResponseStatusCode.h"
#include <QByteArray>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResponseStatusCode;
class OAIBasicAuthentication;
class OAIPingConfig;

class OAIHttpCheck : public OAIObject {
public:
    OAIHttpCheck();
    OAIHttpCheck(QString json);
    ~OAIHttpCheck() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIResponseStatusCode> getAcceptedResponseStatusCodes() const;
    void setAcceptedResponseStatusCodes(const QList<OAIResponseStatusCode> &accepted_response_status_codes);
    bool is_accepted_response_status_codes_Set() const;
    bool is_accepted_response_status_codes_Valid() const;

    OAIBasicAuthentication getAuthInfo() const;
    void setAuthInfo(const OAIBasicAuthentication &auth_info);
    bool is_auth_info_Set() const;
    bool is_auth_info_Valid() const;

    QByteArray getBody() const;
    void setBody(const QByteArray &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QString getContentType() const;
    void setContentType(const QString &content_type);
    bool is_content_type_Set() const;
    bool is_content_type_Valid() const;

    QString getCustomContentType() const;
    void setCustomContentType(const QString &custom_content_type);
    bool is_custom_content_type_Set() const;
    bool is_custom_content_type_Valid() const;

    QMap<QString, QString> getHeaders() const;
    void setHeaders(const QMap<QString, QString> &headers);
    bool is_headers_Set() const;
    bool is_headers_Valid() const;

    bool isMaskHeaders() const;
    void setMaskHeaders(const bool &mask_headers);
    bool is_mask_headers_Set() const;
    bool is_mask_headers_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    OAIPingConfig getPingConfig() const;
    void setPingConfig(const OAIPingConfig &ping_config);
    bool is_ping_config_Set() const;
    bool is_ping_config_Valid() const;

    qint32 getPort() const;
    void setPort(const qint32 &port);
    bool is_port_Set() const;
    bool is_port_Valid() const;

    QString getRequestMethod() const;
    void setRequestMethod(const QString &request_method);
    bool is_request_method_Set() const;
    bool is_request_method_Valid() const;

    bool isUseSsl() const;
    void setUseSsl(const bool &use_ssl);
    bool is_use_ssl_Set() const;
    bool is_use_ssl_Valid() const;

    bool isValidateSsl() const;
    void setValidateSsl(const bool &validate_ssl);
    bool is_validate_ssl_Set() const;
    bool is_validate_ssl_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIResponseStatusCode> m_accepted_response_status_codes;
    bool m_accepted_response_status_codes_isSet;
    bool m_accepted_response_status_codes_isValid;

    OAIBasicAuthentication m_auth_info;
    bool m_auth_info_isSet;
    bool m_auth_info_isValid;

    QByteArray m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QString m_content_type;
    bool m_content_type_isSet;
    bool m_content_type_isValid;

    QString m_custom_content_type;
    bool m_custom_content_type_isSet;
    bool m_custom_content_type_isValid;

    QMap<QString, QString> m_headers;
    bool m_headers_isSet;
    bool m_headers_isValid;

    bool m_mask_headers;
    bool m_mask_headers_isSet;
    bool m_mask_headers_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    OAIPingConfig m_ping_config;
    bool m_ping_config_isSet;
    bool m_ping_config_isValid;

    qint32 m_port;
    bool m_port_isSet;
    bool m_port_isValid;

    QString m_request_method;
    bool m_request_method_isSet;
    bool m_request_method_isValid;

    bool m_use_ssl;
    bool m_use_ssl_isSet;
    bool m_use_ssl_isValid;

    bool m_validate_ssl;
    bool m_validate_ssl_isSet;
    bool m_validate_ssl_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHttpCheck)

#endif // OAIHttpCheck_H
