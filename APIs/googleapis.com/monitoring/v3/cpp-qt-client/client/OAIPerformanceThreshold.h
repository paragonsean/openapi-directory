/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPerformanceThreshold.h
 *
 * A PerformanceThreshold is used when each window is good when that window has a sufficiently high performance.
 */

#ifndef OAIPerformanceThreshold_H
#define OAIPerformanceThreshold_H

#include <QJsonObject>

#include "OAIBasicSli.h"
#include "OAIRequestBasedSli.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBasicSli;
class OAIRequestBasedSli;

class OAIPerformanceThreshold : public OAIObject {
public:
    OAIPerformanceThreshold();
    OAIPerformanceThreshold(QString json);
    ~OAIPerformanceThreshold() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBasicSli getBasicSliPerformance() const;
    void setBasicSliPerformance(const OAIBasicSli &basic_sli_performance);
    bool is_basic_sli_performance_Set() const;
    bool is_basic_sli_performance_Valid() const;

    OAIRequestBasedSli getPerformance() const;
    void setPerformance(const OAIRequestBasedSli &performance);
    bool is_performance_Set() const;
    bool is_performance_Valid() const;

    double getThreshold() const;
    void setThreshold(const double &threshold);
    bool is_threshold_Set() const;
    bool is_threshold_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBasicSli m_basic_sli_performance;
    bool m_basic_sli_performance_isSet;
    bool m_basic_sli_performance_isValid;

    OAIRequestBasedSli m_performance;
    bool m_performance_isSet;
    bool m_performance_isValid;

    double m_threshold;
    bool m_threshold_isSet;
    bool m_threshold_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPerformanceThreshold)

#endif // OAIPerformanceThreshold_H
