/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILogMatch.h
 *
 * A condition type that checks whether a log message in the scoping project (https://cloud.google.com/monitoring/api/v3#project_name) satisfies the given filter. Logs from other projects in the metrics scope are not evaluated.
 */

#ifndef OAILogMatch_H
#define OAILogMatch_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILogMatch : public OAIObject {
public:
    OAILogMatch();
    OAILogMatch(QString json);
    ~OAILogMatch() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFilter() const;
    void setFilter(const QString &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    QMap<QString, QString> getLabelExtractors() const;
    void setLabelExtractors(const QMap<QString, QString> &label_extractors);
    bool is_label_extractors_Set() const;
    bool is_label_extractors_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    QMap<QString, QString> m_label_extractors;
    bool m_label_extractors_isSet;
    bool m_label_extractors_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILogMatch)

#endif // OAILogMatch_H
