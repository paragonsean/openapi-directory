/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBucketOptions.h
 *
 * BucketOptions describes the bucket boundaries used to create a histogram for the distribution. The buckets can be in a linear sequence, an exponential sequence, or each bucket can be specified explicitly. BucketOptions does not include the number of values in each bucket.A bucket has an inclusive lower bound and exclusive upper bound for the values that are counted for that bucket. The upper bound of a bucket must be strictly greater than the lower bound. The sequence of N buckets for a distribution consists of an underflow bucket (number 0), zero or more finite buckets (number 1 through N - 2) and an overflow bucket (number N - 1). The buckets are contiguous: the lower bound of bucket i (i &gt; 0) is the same as the upper bound of bucket i - 1. The buckets span the whole range of finite values: lower bound of the underflow bucket is -infinity and the upper bound of the overflow bucket is +infinity. The finite buckets are so-called because both bounds are finite.
 */

#ifndef OAIBucketOptions_H
#define OAIBucketOptions_H

#include <QJsonObject>

#include "OAIExplicit.h"
#include "OAIExponential.h"
#include "OAILinear.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIExplicit;
class OAIExponential;
class OAILinear;

class OAIBucketOptions : public OAIObject {
public:
    OAIBucketOptions();
    OAIBucketOptions(QString json);
    ~OAIBucketOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIExplicit getExplicitBuckets() const;
    void setExplicitBuckets(const OAIExplicit &explicit_buckets);
    bool is_explicit_buckets_Set() const;
    bool is_explicit_buckets_Valid() const;

    OAIExponential getExponentialBuckets() const;
    void setExponentialBuckets(const OAIExponential &exponential_buckets);
    bool is_exponential_buckets_Set() const;
    bool is_exponential_buckets_Valid() const;

    OAILinear getLinearBuckets() const;
    void setLinearBuckets(const OAILinear &linear_buckets);
    bool is_linear_buckets_Set() const;
    bool is_linear_buckets_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIExplicit m_explicit_buckets;
    bool m_explicit_buckets_isSet;
    bool m_explicit_buckets_isValid;

    OAIExponential m_exponential_buckets;
    bool m_exponential_buckets_isSet;
    bool m_exponential_buckets_isValid;

    OAILinear m_linear_buckets;
    bool m_linear_buckets_isSet;
    bool m_linear_buckets_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBucketOptions)

#endif // OAIBucketOptions_H
