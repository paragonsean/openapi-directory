/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPingConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPingConfig::OAIPingConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPingConfig::OAIPingConfig() {
    this->initializeModel();
}

OAIPingConfig::~OAIPingConfig() {}

void OAIPingConfig::initializeModel() {

    m_pings_count_isSet = false;
    m_pings_count_isValid = false;
}

void OAIPingConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPingConfig::fromJsonObject(QJsonObject json) {

    m_pings_count_isValid = ::OpenAPI::fromJsonValue(m_pings_count, json[QString("pingsCount")]);
    m_pings_count_isSet = !json[QString("pingsCount")].isNull() && m_pings_count_isValid;
}

QString OAIPingConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPingConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_pings_count_isSet) {
        obj.insert(QString("pingsCount"), ::OpenAPI::toJsonValue(m_pings_count));
    }
    return obj;
}

qint32 OAIPingConfig::getPingsCount() const {
    return m_pings_count;
}
void OAIPingConfig::setPingsCount(const qint32 &pings_count) {
    m_pings_count = pings_count;
    m_pings_count_isSet = true;
}

bool OAIPingConfig::is_pings_count_Set() const{
    return m_pings_count_isSet;
}

bool OAIPingConfig::is_pings_count_Valid() const{
    return m_pings_count_isValid;
}

bool OAIPingConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pings_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPingConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
