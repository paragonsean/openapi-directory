/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateCollectdTimeSeriesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateCollectdTimeSeriesResponse::OAICreateCollectdTimeSeriesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateCollectdTimeSeriesResponse::OAICreateCollectdTimeSeriesResponse() {
    this->initializeModel();
}

OAICreateCollectdTimeSeriesResponse::~OAICreateCollectdTimeSeriesResponse() {}

void OAICreateCollectdTimeSeriesResponse::initializeModel() {

    m_payload_errors_isSet = false;
    m_payload_errors_isValid = false;

    m_summary_isSet = false;
    m_summary_isValid = false;
}

void OAICreateCollectdTimeSeriesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateCollectdTimeSeriesResponse::fromJsonObject(QJsonObject json) {

    m_payload_errors_isValid = ::OpenAPI::fromJsonValue(m_payload_errors, json[QString("payloadErrors")]);
    m_payload_errors_isSet = !json[QString("payloadErrors")].isNull() && m_payload_errors_isValid;

    m_summary_isValid = ::OpenAPI::fromJsonValue(m_summary, json[QString("summary")]);
    m_summary_isSet = !json[QString("summary")].isNull() && m_summary_isValid;
}

QString OAICreateCollectdTimeSeriesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateCollectdTimeSeriesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_payload_errors.size() > 0) {
        obj.insert(QString("payloadErrors"), ::OpenAPI::toJsonValue(m_payload_errors));
    }
    if (m_summary.isSet()) {
        obj.insert(QString("summary"), ::OpenAPI::toJsonValue(m_summary));
    }
    return obj;
}

QList<OAICollectdPayloadError> OAICreateCollectdTimeSeriesResponse::getPayloadErrors() const {
    return m_payload_errors;
}
void OAICreateCollectdTimeSeriesResponse::setPayloadErrors(const QList<OAICollectdPayloadError> &payload_errors) {
    m_payload_errors = payload_errors;
    m_payload_errors_isSet = true;
}

bool OAICreateCollectdTimeSeriesResponse::is_payload_errors_Set() const{
    return m_payload_errors_isSet;
}

bool OAICreateCollectdTimeSeriesResponse::is_payload_errors_Valid() const{
    return m_payload_errors_isValid;
}

OAICreateTimeSeriesSummary OAICreateCollectdTimeSeriesResponse::getSummary() const {
    return m_summary;
}
void OAICreateCollectdTimeSeriesResponse::setSummary(const OAICreateTimeSeriesSummary &summary) {
    m_summary = summary;
    m_summary_isSet = true;
}

bool OAICreateCollectdTimeSeriesResponse::is_summary_Set() const{
    return m_summary_isSet;
}

bool OAICreateCollectdTimeSeriesResponse::is_summary_Valid() const{
    return m_summary_isValid;
}

bool OAICreateCollectdTimeSeriesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_payload_errors.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_summary.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateCollectdTimeSeriesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
