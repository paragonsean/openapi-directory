/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAlertPolicy.h
 *
 * A description of the conditions under which some aspect of your system is considered to be \&quot;unhealthy\&quot; and the ways to notify people or services about this state. For an overview of alert policies, see Introduction to Alerting (https://cloud.google.com/monitoring/alerts/).
 */

#ifndef OAIAlertPolicy_H
#define OAIAlertPolicy_H

#include <QJsonObject>

#include "OAIAlertStrategy.h"
#include "OAICondition.h"
#include "OAIDocumentation.h"
#include "OAIMutationRecord.h"
#include "OAIStatus.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAlertStrategy;
class OAICondition;
class OAIMutationRecord;
class OAIDocumentation;
class OAIStatus;

class OAIAlertPolicy : public OAIObject {
public:
    OAIAlertPolicy();
    OAIAlertPolicy(QString json);
    ~OAIAlertPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAlertStrategy getAlertStrategy() const;
    void setAlertStrategy(const OAIAlertStrategy &alert_strategy);
    bool is_alert_strategy_Set() const;
    bool is_alert_strategy_Valid() const;

    QString getCombiner() const;
    void setCombiner(const QString &combiner);
    bool is_combiner_Set() const;
    bool is_combiner_Valid() const;

    QList<OAICondition> getConditions() const;
    void setConditions(const QList<OAICondition> &conditions);
    bool is_conditions_Set() const;
    bool is_conditions_Valid() const;

    OAIMutationRecord getCreationRecord() const;
    void setCreationRecord(const OAIMutationRecord &creation_record);
    bool is_creation_record_Set() const;
    bool is_creation_record_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    OAIDocumentation getDocumentation() const;
    void setDocumentation(const OAIDocumentation &documentation);
    bool is_documentation_Set() const;
    bool is_documentation_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    OAIMutationRecord getMutationRecord() const;
    void setMutationRecord(const OAIMutationRecord &mutation_record);
    bool is_mutation_record_Set() const;
    bool is_mutation_record_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getNotificationChannels() const;
    void setNotificationChannels(const QList<QString> &notification_channels);
    bool is_notification_channels_Set() const;
    bool is_notification_channels_Valid() const;

    QString getSeverity() const;
    void setSeverity(const QString &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    QMap<QString, QString> getUserLabels() const;
    void setUserLabels(const QMap<QString, QString> &user_labels);
    bool is_user_labels_Set() const;
    bool is_user_labels_Valid() const;

    OAIStatus getValidity() const;
    void setValidity(const OAIStatus &validity);
    bool is_validity_Set() const;
    bool is_validity_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAlertStrategy m_alert_strategy;
    bool m_alert_strategy_isSet;
    bool m_alert_strategy_isValid;

    QString m_combiner;
    bool m_combiner_isSet;
    bool m_combiner_isValid;

    QList<OAICondition> m_conditions;
    bool m_conditions_isSet;
    bool m_conditions_isValid;

    OAIMutationRecord m_creation_record;
    bool m_creation_record_isSet;
    bool m_creation_record_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    OAIDocumentation m_documentation;
    bool m_documentation_isSet;
    bool m_documentation_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    OAIMutationRecord m_mutation_record;
    bool m_mutation_record_isSet;
    bool m_mutation_record_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_notification_channels;
    bool m_notification_channels_isSet;
    bool m_notification_channels_isValid;

    QString m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    QMap<QString, QString> m_user_labels;
    bool m_user_labels_isSet;
    bool m_user_labels_isValid;

    OAIStatus m_validity;
    bool m_validity_isSet;
    bool m_validity_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAlertPolicy)

#endif // OAIAlertPolicy_H
