# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.snooze import Snooze
from openapi_server import util


class ListSnoozesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_page_token: str=None, snoozes: List[Snooze]=None):
        """ListSnoozesResponse - a model defined in OpenAPI

        :param next_page_token: The next_page_token of this ListSnoozesResponse.
        :param snoozes: The snoozes of this ListSnoozesResponse.
        """
        self.openapi_types = {
            'next_page_token': str,
            'snoozes': List[Snooze]
        }

        self.attribute_map = {
            'next_page_token': 'nextPageToken',
            'snoozes': 'snoozes'
        }

        self._next_page_token = next_page_token
        self._snoozes = snoozes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListSnoozesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListSnoozesResponse of this ListSnoozesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListSnoozesResponse.

        Page token for repeated calls to ListSnoozes, to fetch additional pages of results. If this is empty or missing, there are no more pages.

        :return: The next_page_token of this ListSnoozesResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListSnoozesResponse.

        Page token for repeated calls to ListSnoozes, to fetch additional pages of results. If this is empty or missing, there are no more pages.

        :param next_page_token: The next_page_token of this ListSnoozesResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def snoozes(self):
        """Gets the snoozes of this ListSnoozesResponse.

        Snoozes matching this list call.

        :return: The snoozes of this ListSnoozesResponse.
        :rtype: List[Snooze]
        """
        return self._snoozes

    @snoozes.setter
    def snoozes(self, snoozes):
        """Sets the snoozes of this ListSnoozesResponse.

        Snoozes matching this list call.

        :param snoozes: The snoozes of this ListSnoozesResponse.
        :type snoozes: List[Snooze]
        """

        self._snoozes = snoozes
