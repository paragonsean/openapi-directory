# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.distribution import Distribution
from openapi_server import util


class TypedValue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bool_value: bool=None, distribution_value: Distribution=None, double_value: float=None, int64_value: str=None, string_value: str=None):
        """TypedValue - a model defined in OpenAPI

        :param bool_value: The bool_value of this TypedValue.
        :param distribution_value: The distribution_value of this TypedValue.
        :param double_value: The double_value of this TypedValue.
        :param int64_value: The int64_value of this TypedValue.
        :param string_value: The string_value of this TypedValue.
        """
        self.openapi_types = {
            'bool_value': bool,
            'distribution_value': Distribution,
            'double_value': float,
            'int64_value': str,
            'string_value': str
        }

        self.attribute_map = {
            'bool_value': 'boolValue',
            'distribution_value': 'distributionValue',
            'double_value': 'doubleValue',
            'int64_value': 'int64Value',
            'string_value': 'stringValue'
        }

        self._bool_value = bool_value
        self._distribution_value = distribution_value
        self._double_value = double_value
        self._int64_value = int64_value
        self._string_value = string_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TypedValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TypedValue of this TypedValue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bool_value(self):
        """Gets the bool_value of this TypedValue.

        A Boolean value: true or false.

        :return: The bool_value of this TypedValue.
        :rtype: bool
        """
        return self._bool_value

    @bool_value.setter
    def bool_value(self, bool_value):
        """Sets the bool_value of this TypedValue.

        A Boolean value: true or false.

        :param bool_value: The bool_value of this TypedValue.
        :type bool_value: bool
        """

        self._bool_value = bool_value

    @property
    def distribution_value(self):
        """Gets the distribution_value of this TypedValue.


        :return: The distribution_value of this TypedValue.
        :rtype: Distribution
        """
        return self._distribution_value

    @distribution_value.setter
    def distribution_value(self, distribution_value):
        """Sets the distribution_value of this TypedValue.


        :param distribution_value: The distribution_value of this TypedValue.
        :type distribution_value: Distribution
        """

        self._distribution_value = distribution_value

    @property
    def double_value(self):
        """Gets the double_value of this TypedValue.

        A 64-bit double-precision floating-point number. Its magnitude is approximately ±10±300 and it has 16 significant digits of precision.

        :return: The double_value of this TypedValue.
        :rtype: float
        """
        return self._double_value

    @double_value.setter
    def double_value(self, double_value):
        """Sets the double_value of this TypedValue.

        A 64-bit double-precision floating-point number. Its magnitude is approximately ±10±300 and it has 16 significant digits of precision.

        :param double_value: The double_value of this TypedValue.
        :type double_value: float
        """

        self._double_value = double_value

    @property
    def int64_value(self):
        """Gets the int64_value of this TypedValue.

        A 64-bit integer. Its range is approximately ±9.2x1018.

        :return: The int64_value of this TypedValue.
        :rtype: str
        """
        return self._int64_value

    @int64_value.setter
    def int64_value(self, int64_value):
        """Sets the int64_value of this TypedValue.

        A 64-bit integer. Its range is approximately ±9.2x1018.

        :param int64_value: The int64_value of this TypedValue.
        :type int64_value: str
        """

        self._int64_value = int64_value

    @property
    def string_value(self):
        """Gets the string_value of this TypedValue.

        A variable-length string value.

        :return: The string_value of this TypedValue.
        :rtype: str
        """
        return self._string_value

    @string_value.setter
    def string_value(self, string_value):
        """Sets the string_value of this TypedValue.

        A variable-length string value.

        :param string_value: The string_value of this TypedValue.
        :type string_value: str
        """

        self._string_value = string_value
