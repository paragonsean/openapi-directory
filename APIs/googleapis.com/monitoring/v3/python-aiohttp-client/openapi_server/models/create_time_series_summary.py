# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error import Error
from openapi_server import util


class CreateTimeSeriesSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, errors: List[Error]=None, success_point_count: int=None, total_point_count: int=None):
        """CreateTimeSeriesSummary - a model defined in OpenAPI

        :param errors: The errors of this CreateTimeSeriesSummary.
        :param success_point_count: The success_point_count of this CreateTimeSeriesSummary.
        :param total_point_count: The total_point_count of this CreateTimeSeriesSummary.
        """
        self.openapi_types = {
            'errors': List[Error],
            'success_point_count': int,
            'total_point_count': int
        }

        self.attribute_map = {
            'errors': 'errors',
            'success_point_count': 'successPointCount',
            'total_point_count': 'totalPointCount'
        }

        self._errors = errors
        self._success_point_count = success_point_count
        self._total_point_count = total_point_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateTimeSeriesSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateTimeSeriesSummary of this CreateTimeSeriesSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def errors(self):
        """Gets the errors of this CreateTimeSeriesSummary.

        The number of points that failed to be written. Order is not guaranteed.

        :return: The errors of this CreateTimeSeriesSummary.
        :rtype: List[Error]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this CreateTimeSeriesSummary.

        The number of points that failed to be written. Order is not guaranteed.

        :param errors: The errors of this CreateTimeSeriesSummary.
        :type errors: List[Error]
        """

        self._errors = errors

    @property
    def success_point_count(self):
        """Gets the success_point_count of this CreateTimeSeriesSummary.

        The number of points that were successfully written.

        :return: The success_point_count of this CreateTimeSeriesSummary.
        :rtype: int
        """
        return self._success_point_count

    @success_point_count.setter
    def success_point_count(self, success_point_count):
        """Sets the success_point_count of this CreateTimeSeriesSummary.

        The number of points that were successfully written.

        :param success_point_count: The success_point_count of this CreateTimeSeriesSummary.
        :type success_point_count: int
        """

        self._success_point_count = success_point_count

    @property
    def total_point_count(self):
        """Gets the total_point_count of this CreateTimeSeriesSummary.

        The number of points in the request.

        :return: The total_point_count of this CreateTimeSeriesSummary.
        :rtype: int
        """
        return self._total_point_count

    @total_point_count.setter
    def total_point_count(self, total_point_count):
        """Sets the total_point_count of this CreateTimeSeriesSummary.

        The number of points in the request.

        :param total_point_count: The total_point_count of this CreateTimeSeriesSummary.
        :type total_point_count: int
        """

        self._total_point_count = total_point_count
