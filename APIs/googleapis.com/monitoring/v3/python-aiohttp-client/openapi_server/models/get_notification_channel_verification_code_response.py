# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetNotificationChannelVerificationCodeResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, expire_time: str=None):
        """GetNotificationChannelVerificationCodeResponse - a model defined in OpenAPI

        :param code: The code of this GetNotificationChannelVerificationCodeResponse.
        :param expire_time: The expire_time of this GetNotificationChannelVerificationCodeResponse.
        """
        self.openapi_types = {
            'code': str,
            'expire_time': str
        }

        self.attribute_map = {
            'code': 'code',
            'expire_time': 'expireTime'
        }

        self._code = code
        self._expire_time = expire_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNotificationChannelVerificationCodeResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetNotificationChannelVerificationCodeResponse of this GetNotificationChannelVerificationCodeResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this GetNotificationChannelVerificationCodeResponse.

        The verification code, which may be used to verify other channels that have an equivalent identity (i.e. other channels of the same type with the same fingerprint such as other email channels with the same email address or other sms channels with the same number).

        :return: The code of this GetNotificationChannelVerificationCodeResponse.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this GetNotificationChannelVerificationCodeResponse.

        The verification code, which may be used to verify other channels that have an equivalent identity (i.e. other channels of the same type with the same fingerprint such as other email channels with the same email address or other sms channels with the same number).

        :param code: The code of this GetNotificationChannelVerificationCodeResponse.
        :type code: str
        """

        self._code = code

    @property
    def expire_time(self):
        """Gets the expire_time of this GetNotificationChannelVerificationCodeResponse.

        The expiration time associated with the code that was returned. If an expiration was provided in the request, this is the minimum of the requested expiration in the request and the max permitted expiration.

        :return: The expire_time of this GetNotificationChannelVerificationCodeResponse.
        :rtype: str
        """
        return self._expire_time

    @expire_time.setter
    def expire_time(self, expire_time):
        """Sets the expire_time of this GetNotificationChannelVerificationCodeResponse.

        The expiration time associated with the code that was returned. If an expiration was provided in the request, this is the minimum of the requested expiration in the request and the max permitted expiration.

        :param expire_time: The expire_time of this GetNotificationChannelVerificationCodeResponse.
        :type expire_time: str
        """

        self._expire_time = expire_time
