# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClusterIstio(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_name: str=None, location: str=None, service_name: str=None, service_namespace: str=None):
        """ClusterIstio - a model defined in OpenAPI

        :param cluster_name: The cluster_name of this ClusterIstio.
        :param location: The location of this ClusterIstio.
        :param service_name: The service_name of this ClusterIstio.
        :param service_namespace: The service_namespace of this ClusterIstio.
        """
        self.openapi_types = {
            'cluster_name': str,
            'location': str,
            'service_name': str,
            'service_namespace': str
        }

        self.attribute_map = {
            'cluster_name': 'clusterName',
            'location': 'location',
            'service_name': 'serviceName',
            'service_namespace': 'serviceNamespace'
        }

        self._cluster_name = cluster_name
        self._location = location
        self._service_name = service_name
        self._service_namespace = service_namespace

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClusterIstio':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClusterIstio of this ClusterIstio.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_name(self):
        """Gets the cluster_name of this ClusterIstio.

        The name of the Kubernetes cluster in which this Istio service is defined. Corresponds to the cluster_name resource label in k8s_cluster resources.

        :return: The cluster_name of this ClusterIstio.
        :rtype: str
        """
        return self._cluster_name

    @cluster_name.setter
    def cluster_name(self, cluster_name):
        """Sets the cluster_name of this ClusterIstio.

        The name of the Kubernetes cluster in which this Istio service is defined. Corresponds to the cluster_name resource label in k8s_cluster resources.

        :param cluster_name: The cluster_name of this ClusterIstio.
        :type cluster_name: str
        """

        self._cluster_name = cluster_name

    @property
    def location(self):
        """Gets the location of this ClusterIstio.

        The location of the Kubernetes cluster in which this Istio service is defined. Corresponds to the location resource label in k8s_cluster resources.

        :return: The location of this ClusterIstio.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this ClusterIstio.

        The location of the Kubernetes cluster in which this Istio service is defined. Corresponds to the location resource label in k8s_cluster resources.

        :param location: The location of this ClusterIstio.
        :type location: str
        """

        self._location = location

    @property
    def service_name(self):
        """Gets the service_name of this ClusterIstio.

        The name of the Istio service underlying this service. Corresponds to the destination_service_name metric label in Istio metrics.

        :return: The service_name of this ClusterIstio.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this ClusterIstio.

        The name of the Istio service underlying this service. Corresponds to the destination_service_name metric label in Istio metrics.

        :param service_name: The service_name of this ClusterIstio.
        :type service_name: str
        """

        self._service_name = service_name

    @property
    def service_namespace(self):
        """Gets the service_namespace of this ClusterIstio.

        The namespace of the Istio service underlying this service. Corresponds to the destination_service_namespace metric label in Istio metrics.

        :return: The service_namespace of this ClusterIstio.
        :rtype: str
        """
        return self._service_namespace

    @service_namespace.setter
    def service_namespace(self, service_namespace):
        """Sets the service_namespace of this ClusterIstio.

        The namespace of the Istio service underlying this service. Corresponds to the destination_service_namespace metric label in Istio metrics.

        :param service_namespace: The service_namespace of this ClusterIstio.
        :type service_namespace: str
        """

        self._service_namespace = service_namespace
