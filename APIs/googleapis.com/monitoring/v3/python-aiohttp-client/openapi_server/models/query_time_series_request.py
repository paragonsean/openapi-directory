# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class QueryTimeSeriesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, page_size: int=None, page_token: str=None, query: str=None):
        """QueryTimeSeriesRequest - a model defined in OpenAPI

        :param page_size: The page_size of this QueryTimeSeriesRequest.
        :param page_token: The page_token of this QueryTimeSeriesRequest.
        :param query: The query of this QueryTimeSeriesRequest.
        """
        self.openapi_types = {
            'page_size': int,
            'page_token': str,
            'query': str
        }

        self.attribute_map = {
            'page_size': 'pageSize',
            'page_token': 'pageToken',
            'query': 'query'
        }

        self._page_size = page_size
        self._page_token = page_token
        self._query = query

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryTimeSeriesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueryTimeSeriesRequest of this QueryTimeSeriesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def page_size(self):
        """Gets the page_size of this QueryTimeSeriesRequest.

        A positive number that is the maximum number of time_series_data to return.

        :return: The page_size of this QueryTimeSeriesRequest.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this QueryTimeSeriesRequest.

        A positive number that is the maximum number of time_series_data to return.

        :param page_size: The page_size of this QueryTimeSeriesRequest.
        :type page_size: int
        """

        self._page_size = page_size

    @property
    def page_token(self):
        """Gets the page_token of this QueryTimeSeriesRequest.

        If this field is not empty then it must contain the nextPageToken value returned by a previous call to this method. Using this field causes the method to return additional results from the previous method call.

        :return: The page_token of this QueryTimeSeriesRequest.
        :rtype: str
        """
        return self._page_token

    @page_token.setter
    def page_token(self, page_token):
        """Sets the page_token of this QueryTimeSeriesRequest.

        If this field is not empty then it must contain the nextPageToken value returned by a previous call to this method. Using this field causes the method to return additional results from the previous method call.

        :param page_token: The page_token of this QueryTimeSeriesRequest.
        :type page_token: str
        """

        self._page_token = page_token

    @property
    def query(self):
        """Gets the query of this QueryTimeSeriesRequest.

        Required. The query in the Monitoring Query Language (https://cloud.google.com/monitoring/mql/reference) format. The default time zone is in UTC.

        :return: The query of this QueryTimeSeriesRequest.
        :rtype: str
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this QueryTimeSeriesRequest.

        Required. The query in the Monitoring Query Language (https://cloud.google.com/monitoring/mql/reference) format. The default time zone is in UTC.

        :param query: The query of this QueryTimeSeriesRequest.
        :type query: str
        """

        self._query = query
