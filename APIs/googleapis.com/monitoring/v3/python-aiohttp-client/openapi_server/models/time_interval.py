# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TimeInterval(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_time: str=None, start_time: str=None):
        """TimeInterval - a model defined in OpenAPI

        :param end_time: The end_time of this TimeInterval.
        :param start_time: The start_time of this TimeInterval.
        """
        self.openapi_types = {
            'end_time': str,
            'start_time': str
        }

        self.attribute_map = {
            'end_time': 'endTime',
            'start_time': 'startTime'
        }

        self._end_time = end_time
        self._start_time = start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimeInterval':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TimeInterval of this TimeInterval.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_time(self):
        """Gets the end_time of this TimeInterval.

        Required. The end of the time interval.

        :return: The end_time of this TimeInterval.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this TimeInterval.

        Required. The end of the time interval.

        :param end_time: The end_time of this TimeInterval.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def start_time(self):
        """Gets the start_time of this TimeInterval.

        Optional. The beginning of the time interval. The default value for the start time is the end time. The start time must not be later than the end time.

        :return: The start_time of this TimeInterval.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this TimeInterval.

        Optional. The beginning of the time interval. The default value for the start time is the end time. The start time must not be later than the end time.

        :param start_time: The start_time of this TimeInterval.
        :type start_time: str
        """

        self._start_time = start_time
