# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AppEngine(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, module_id: str=None):
        """AppEngine - a model defined in OpenAPI

        :param module_id: The module_id of this AppEngine.
        """
        self.openapi_types = {
            'module_id': str
        }

        self.attribute_map = {
            'module_id': 'moduleId'
        }

        self._module_id = module_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppEngine':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppEngine of this AppEngine.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def module_id(self):
        """Gets the module_id of this AppEngine.

        The ID of the App Engine module underlying this service. Corresponds to the module_id resource label in the gae_app monitored resource (https://cloud.google.com/monitoring/api/resources#tag_gae_app).

        :return: The module_id of this AppEngine.
        :rtype: str
        """
        return self._module_id

    @module_id.setter
    def module_id(self, module_id):
        """Sets the module_id of this AppEngine.

        The ID of the App Engine module underlying this service. Corresponds to the module_id resource label in the gae_app monitored resource (https://cloud.google.com/monitoring/api/resources#tag_gae_app).

        :param module_id: The module_id of this AppEngine.
        :type module_id: str
        """

        self._module_id = module_id
