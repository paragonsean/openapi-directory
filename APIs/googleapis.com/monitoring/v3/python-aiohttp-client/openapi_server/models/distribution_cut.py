# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_monitoring_v3_range import GoogleMonitoringV3Range
from openapi_server import util


class DistributionCut(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, distribution_filter: str=None, range: GoogleMonitoringV3Range=None):
        """DistributionCut - a model defined in OpenAPI

        :param distribution_filter: The distribution_filter of this DistributionCut.
        :param range: The range of this DistributionCut.
        """
        self.openapi_types = {
            'distribution_filter': str,
            'range': GoogleMonitoringV3Range
        }

        self.attribute_map = {
            'distribution_filter': 'distributionFilter',
            'range': 'range'
        }

        self._distribution_filter = distribution_filter
        self._range = range

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DistributionCut':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DistributionCut of this DistributionCut.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def distribution_filter(self):
        """Gets the distribution_filter of this DistributionCut.

        A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a TimeSeries aggregating values. Must have ValueType = DISTRIBUTION and MetricKind = DELTA or MetricKind = CUMULATIVE.

        :return: The distribution_filter of this DistributionCut.
        :rtype: str
        """
        return self._distribution_filter

    @distribution_filter.setter
    def distribution_filter(self, distribution_filter):
        """Sets the distribution_filter of this DistributionCut.

        A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a TimeSeries aggregating values. Must have ValueType = DISTRIBUTION and MetricKind = DELTA or MetricKind = CUMULATIVE.

        :param distribution_filter: The distribution_filter of this DistributionCut.
        :type distribution_filter: str
        """

        self._distribution_filter = distribution_filter

    @property
    def range(self):
        """Gets the range of this DistributionCut.


        :return: The range of this DistributionCut.
        :rtype: GoogleMonitoringV3Range
        """
        return self._range

    @range.setter
    def range(self, range):
        """Sets the range of this DistributionCut.


        :param range: The range of this DistributionCut.
        :type range: GoogleMonitoringV3Range
        """

        self._range = range
