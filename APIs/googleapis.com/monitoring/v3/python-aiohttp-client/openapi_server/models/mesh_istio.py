# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MeshIstio(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mesh_uid: str=None, service_name: str=None, service_namespace: str=None):
        """MeshIstio - a model defined in OpenAPI

        :param mesh_uid: The mesh_uid of this MeshIstio.
        :param service_name: The service_name of this MeshIstio.
        :param service_namespace: The service_namespace of this MeshIstio.
        """
        self.openapi_types = {
            'mesh_uid': str,
            'service_name': str,
            'service_namespace': str
        }

        self.attribute_map = {
            'mesh_uid': 'meshUid',
            'service_name': 'serviceName',
            'service_namespace': 'serviceNamespace'
        }

        self._mesh_uid = mesh_uid
        self._service_name = service_name
        self._service_namespace = service_namespace

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MeshIstio':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MeshIstio of this MeshIstio.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mesh_uid(self):
        """Gets the mesh_uid of this MeshIstio.

        Identifier for the mesh in which this Istio service is defined. Corresponds to the mesh_uid metric label in Istio metrics.

        :return: The mesh_uid of this MeshIstio.
        :rtype: str
        """
        return self._mesh_uid

    @mesh_uid.setter
    def mesh_uid(self, mesh_uid):
        """Sets the mesh_uid of this MeshIstio.

        Identifier for the mesh in which this Istio service is defined. Corresponds to the mesh_uid metric label in Istio metrics.

        :param mesh_uid: The mesh_uid of this MeshIstio.
        :type mesh_uid: str
        """

        self._mesh_uid = mesh_uid

    @property
    def service_name(self):
        """Gets the service_name of this MeshIstio.

        The name of the Istio service underlying this service. Corresponds to the destination_service_name metric label in Istio metrics.

        :return: The service_name of this MeshIstio.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this MeshIstio.

        The name of the Istio service underlying this service. Corresponds to the destination_service_name metric label in Istio metrics.

        :param service_name: The service_name of this MeshIstio.
        :type service_name: str
        """

        self._service_name = service_name

    @property
    def service_namespace(self):
        """Gets the service_namespace of this MeshIstio.

        The namespace of the Istio service underlying this service. Corresponds to the destination_service_namespace metric label in Istio metrics.

        :return: The service_namespace of this MeshIstio.
        :rtype: str
        """
        return self._service_namespace

    @service_namespace.setter
    def service_namespace(self, service_namespace):
        """Sets the service_namespace of this MeshIstio.

        The namespace of the Istio service underlying this service. Corresponds to the destination_service_namespace metric label in Istio metrics.

        :param service_namespace: The service_namespace of this MeshIstio.
        :type service_namespace: str
        """

        self._service_namespace = service_namespace
