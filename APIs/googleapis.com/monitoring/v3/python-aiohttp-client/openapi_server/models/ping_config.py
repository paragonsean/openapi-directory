# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PingConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pings_count: int=None):
        """PingConfig - a model defined in OpenAPI

        :param pings_count: The pings_count of this PingConfig.
        """
        self.openapi_types = {
            'pings_count': int
        }

        self.attribute_map = {
            'pings_count': 'pingsCount'
        }

        self._pings_count = pings_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PingConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PingConfig of this PingConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pings_count(self):
        """Gets the pings_count of this PingConfig.

        Number of ICMP pings. A maximum of 3 ICMP pings is currently supported.

        :return: The pings_count of this PingConfig.
        :rtype: int
        """
        return self._pings_count

    @pings_count.setter
    def pings_count(self, pings_count):
        """Sets the pings_count of this PingConfig.

        Number of ICMP pings. A maximum of 3 ICMP pings is currently supported.

        :param pings_count: The pings_count of this PingConfig.
        :type pings_count: int
        """

        self._pings_count = pings_count
