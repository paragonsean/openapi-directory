# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.explicit import Explicit
from openapi_server.models.exponential import Exponential
from openapi_server.models.linear import Linear
from openapi_server import util


class BucketOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, explicit_buckets: Explicit=None, exponential_buckets: Exponential=None, linear_buckets: Linear=None):
        """BucketOptions - a model defined in OpenAPI

        :param explicit_buckets: The explicit_buckets of this BucketOptions.
        :param exponential_buckets: The exponential_buckets of this BucketOptions.
        :param linear_buckets: The linear_buckets of this BucketOptions.
        """
        self.openapi_types = {
            'explicit_buckets': Explicit,
            'exponential_buckets': Exponential,
            'linear_buckets': Linear
        }

        self.attribute_map = {
            'explicit_buckets': 'explicitBuckets',
            'exponential_buckets': 'exponentialBuckets',
            'linear_buckets': 'linearBuckets'
        }

        self._explicit_buckets = explicit_buckets
        self._exponential_buckets = exponential_buckets
        self._linear_buckets = linear_buckets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BucketOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BucketOptions of this BucketOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def explicit_buckets(self):
        """Gets the explicit_buckets of this BucketOptions.


        :return: The explicit_buckets of this BucketOptions.
        :rtype: Explicit
        """
        return self._explicit_buckets

    @explicit_buckets.setter
    def explicit_buckets(self, explicit_buckets):
        """Sets the explicit_buckets of this BucketOptions.


        :param explicit_buckets: The explicit_buckets of this BucketOptions.
        :type explicit_buckets: Explicit
        """

        self._explicit_buckets = explicit_buckets

    @property
    def exponential_buckets(self):
        """Gets the exponential_buckets of this BucketOptions.


        :return: The exponential_buckets of this BucketOptions.
        :rtype: Exponential
        """
        return self._exponential_buckets

    @exponential_buckets.setter
    def exponential_buckets(self, exponential_buckets):
        """Sets the exponential_buckets of this BucketOptions.


        :param exponential_buckets: The exponential_buckets of this BucketOptions.
        :type exponential_buckets: Exponential
        """

        self._exponential_buckets = exponential_buckets

    @property
    def linear_buckets(self):
        """Gets the linear_buckets of this BucketOptions.


        :return: The linear_buckets of this BucketOptions.
        :rtype: Linear
        """
        return self._linear_buckets

    @linear_buckets.setter
    def linear_buckets(self, linear_buckets):
        """Sets the linear_buckets of this BucketOptions.


        :param linear_buckets: The linear_buckets of this BucketOptions.
        :type linear_buckets: Linear
        """

        self._linear_buckets = linear_buckets
