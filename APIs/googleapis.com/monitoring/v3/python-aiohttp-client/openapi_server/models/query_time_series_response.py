# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.status import Status
from openapi_server.models.time_series_data import TimeSeriesData
from openapi_server.models.time_series_descriptor import TimeSeriesDescriptor
from openapi_server import util


class QueryTimeSeriesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_page_token: str=None, partial_errors: List[Status]=None, time_series_data: List[TimeSeriesData]=None, time_series_descriptor: TimeSeriesDescriptor=None):
        """QueryTimeSeriesResponse - a model defined in OpenAPI

        :param next_page_token: The next_page_token of this QueryTimeSeriesResponse.
        :param partial_errors: The partial_errors of this QueryTimeSeriesResponse.
        :param time_series_data: The time_series_data of this QueryTimeSeriesResponse.
        :param time_series_descriptor: The time_series_descriptor of this QueryTimeSeriesResponse.
        """
        self.openapi_types = {
            'next_page_token': str,
            'partial_errors': List[Status],
            'time_series_data': List[TimeSeriesData],
            'time_series_descriptor': TimeSeriesDescriptor
        }

        self.attribute_map = {
            'next_page_token': 'nextPageToken',
            'partial_errors': 'partialErrors',
            'time_series_data': 'timeSeriesData',
            'time_series_descriptor': 'timeSeriesDescriptor'
        }

        self._next_page_token = next_page_token
        self._partial_errors = partial_errors
        self._time_series_data = time_series_data
        self._time_series_descriptor = time_series_descriptor

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryTimeSeriesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueryTimeSeriesResponse of this QueryTimeSeriesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_page_token(self):
        """Gets the next_page_token of this QueryTimeSeriesResponse.

        If there are more results than have been returned, then this field is set to a non-empty value. To see the additional results, use that value as page_token in the next call to this method.

        :return: The next_page_token of this QueryTimeSeriesResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this QueryTimeSeriesResponse.

        If there are more results than have been returned, then this field is set to a non-empty value. To see the additional results, use that value as page_token in the next call to this method.

        :param next_page_token: The next_page_token of this QueryTimeSeriesResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def partial_errors(self):
        """Gets the partial_errors of this QueryTimeSeriesResponse.

        Query execution errors that may have caused the time series data returned to be incomplete. The available data will be available in the response.

        :return: The partial_errors of this QueryTimeSeriesResponse.
        :rtype: List[Status]
        """
        return self._partial_errors

    @partial_errors.setter
    def partial_errors(self, partial_errors):
        """Sets the partial_errors of this QueryTimeSeriesResponse.

        Query execution errors that may have caused the time series data returned to be incomplete. The available data will be available in the response.

        :param partial_errors: The partial_errors of this QueryTimeSeriesResponse.
        :type partial_errors: List[Status]
        """

        self._partial_errors = partial_errors

    @property
    def time_series_data(self):
        """Gets the time_series_data of this QueryTimeSeriesResponse.

        The time series data.

        :return: The time_series_data of this QueryTimeSeriesResponse.
        :rtype: List[TimeSeriesData]
        """
        return self._time_series_data

    @time_series_data.setter
    def time_series_data(self, time_series_data):
        """Sets the time_series_data of this QueryTimeSeriesResponse.

        The time series data.

        :param time_series_data: The time_series_data of this QueryTimeSeriesResponse.
        :type time_series_data: List[TimeSeriesData]
        """

        self._time_series_data = time_series_data

    @property
    def time_series_descriptor(self):
        """Gets the time_series_descriptor of this QueryTimeSeriesResponse.


        :return: The time_series_descriptor of this QueryTimeSeriesResponse.
        :rtype: TimeSeriesDescriptor
        """
        return self._time_series_descriptor

    @time_series_descriptor.setter
    def time_series_descriptor(self, time_series_descriptor):
        """Sets the time_series_descriptor of this QueryTimeSeriesResponse.


        :param time_series_descriptor: The time_series_descriptor of this QueryTimeSeriesResponse.
        :type time_series_descriptor: TimeSeriesDescriptor
        """

        self._time_series_descriptor = time_series_descriptor
