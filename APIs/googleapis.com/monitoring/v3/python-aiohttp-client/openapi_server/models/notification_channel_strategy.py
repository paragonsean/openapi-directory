# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NotificationChannelStrategy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, notification_channel_names: List[str]=None, renotify_interval: str=None):
        """NotificationChannelStrategy - a model defined in OpenAPI

        :param notification_channel_names: The notification_channel_names of this NotificationChannelStrategy.
        :param renotify_interval: The renotify_interval of this NotificationChannelStrategy.
        """
        self.openapi_types = {
            'notification_channel_names': List[str],
            'renotify_interval': str
        }

        self.attribute_map = {
            'notification_channel_names': 'notificationChannelNames',
            'renotify_interval': 'renotifyInterval'
        }

        self._notification_channel_names = notification_channel_names
        self._renotify_interval = renotify_interval

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NotificationChannelStrategy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NotificationChannelStrategy of this NotificationChannelStrategy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def notification_channel_names(self):
        """Gets the notification_channel_names of this NotificationChannelStrategy.

        The full REST resource name for the notification channels that these settings apply to. Each of these correspond to the name field in one of the NotificationChannel objects referenced in the notification_channels field of this AlertPolicy. The format is: projects/[PROJECT_ID_OR_NUMBER]/notificationChannels/[CHANNEL_ID] 

        :return: The notification_channel_names of this NotificationChannelStrategy.
        :rtype: List[str]
        """
        return self._notification_channel_names

    @notification_channel_names.setter
    def notification_channel_names(self, notification_channel_names):
        """Sets the notification_channel_names of this NotificationChannelStrategy.

        The full REST resource name for the notification channels that these settings apply to. Each of these correspond to the name field in one of the NotificationChannel objects referenced in the notification_channels field of this AlertPolicy. The format is: projects/[PROJECT_ID_OR_NUMBER]/notificationChannels/[CHANNEL_ID] 

        :param notification_channel_names: The notification_channel_names of this NotificationChannelStrategy.
        :type notification_channel_names: List[str]
        """

        self._notification_channel_names = notification_channel_names

    @property
    def renotify_interval(self):
        """Gets the renotify_interval of this NotificationChannelStrategy.

        The frequency at which to send reminder notifications for open incidents.

        :return: The renotify_interval of this NotificationChannelStrategy.
        :rtype: str
        """
        return self._renotify_interval

    @renotify_interval.setter
    def renotify_interval(self, renotify_interval):
        """Sets the renotify_interval of this NotificationChannelStrategy.

        The frequency at which to send reminder notifications for open incidents.

        :param renotify_interval: The renotify_interval of this NotificationChannelStrategy.
        :type renotify_interval: str
        """

        self._renotify_interval = renotify_interval
