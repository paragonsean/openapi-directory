# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.collectd_payload_error import CollectdPayloadError
from openapi_server.models.create_time_series_summary import CreateTimeSeriesSummary
from openapi_server import util


class CreateCollectdTimeSeriesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, payload_errors: List[CollectdPayloadError]=None, summary: CreateTimeSeriesSummary=None):
        """CreateCollectdTimeSeriesResponse - a model defined in OpenAPI

        :param payload_errors: The payload_errors of this CreateCollectdTimeSeriesResponse.
        :param summary: The summary of this CreateCollectdTimeSeriesResponse.
        """
        self.openapi_types = {
            'payload_errors': List[CollectdPayloadError],
            'summary': CreateTimeSeriesSummary
        }

        self.attribute_map = {
            'payload_errors': 'payloadErrors',
            'summary': 'summary'
        }

        self._payload_errors = payload_errors
        self._summary = summary

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateCollectdTimeSeriesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateCollectdTimeSeriesResponse of this CreateCollectdTimeSeriesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def payload_errors(self):
        """Gets the payload_errors of this CreateCollectdTimeSeriesResponse.

        Records the error status for points that were not written due to an error in the request.Failed requests for which nothing is written will return an error response instead. Requests where data points were rejected by the backend will set summary instead.

        :return: The payload_errors of this CreateCollectdTimeSeriesResponse.
        :rtype: List[CollectdPayloadError]
        """
        return self._payload_errors

    @payload_errors.setter
    def payload_errors(self, payload_errors):
        """Sets the payload_errors of this CreateCollectdTimeSeriesResponse.

        Records the error status for points that were not written due to an error in the request.Failed requests for which nothing is written will return an error response instead. Requests where data points were rejected by the backend will set summary instead.

        :param payload_errors: The payload_errors of this CreateCollectdTimeSeriesResponse.
        :type payload_errors: List[CollectdPayloadError]
        """

        self._payload_errors = payload_errors

    @property
    def summary(self):
        """Gets the summary of this CreateCollectdTimeSeriesResponse.


        :return: The summary of this CreateCollectdTimeSeriesResponse.
        :rtype: CreateTimeSeriesSummary
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this CreateCollectdTimeSeriesResponse.


        :param summary: The summary of this CreateCollectdTimeSeriesResponse.
        :type summary: CreateTimeSeriesSummary
        """

        self._summary = summary
