# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TimeSeriesRatio(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bad_service_filter: str=None, good_service_filter: str=None, total_service_filter: str=None):
        """TimeSeriesRatio - a model defined in OpenAPI

        :param bad_service_filter: The bad_service_filter of this TimeSeriesRatio.
        :param good_service_filter: The good_service_filter of this TimeSeriesRatio.
        :param total_service_filter: The total_service_filter of this TimeSeriesRatio.
        """
        self.openapi_types = {
            'bad_service_filter': str,
            'good_service_filter': str,
            'total_service_filter': str
        }

        self.attribute_map = {
            'bad_service_filter': 'badServiceFilter',
            'good_service_filter': 'goodServiceFilter',
            'total_service_filter': 'totalServiceFilter'
        }

        self._bad_service_filter = bad_service_filter
        self._good_service_filter = good_service_filter
        self._total_service_filter = total_service_filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimeSeriesRatio':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TimeSeriesRatio of this TimeSeriesRatio.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bad_service_filter(self):
        """Gets the bad_service_filter of this TimeSeriesRatio.

        A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a TimeSeries quantifying bad service, either demanded service that was not provided or demanded service that was of inadequate quality. Must have ValueType = DOUBLE or ValueType = INT64 and must have MetricKind = DELTA or MetricKind = CUMULATIVE.

        :return: The bad_service_filter of this TimeSeriesRatio.
        :rtype: str
        """
        return self._bad_service_filter

    @bad_service_filter.setter
    def bad_service_filter(self, bad_service_filter):
        """Sets the bad_service_filter of this TimeSeriesRatio.

        A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a TimeSeries quantifying bad service, either demanded service that was not provided or demanded service that was of inadequate quality. Must have ValueType = DOUBLE or ValueType = INT64 and must have MetricKind = DELTA or MetricKind = CUMULATIVE.

        :param bad_service_filter: The bad_service_filter of this TimeSeriesRatio.
        :type bad_service_filter: str
        """

        self._bad_service_filter = bad_service_filter

    @property
    def good_service_filter(self):
        """Gets the good_service_filter of this TimeSeriesRatio.

        A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a TimeSeries quantifying good service provided. Must have ValueType = DOUBLE or ValueType = INT64 and must have MetricKind = DELTA or MetricKind = CUMULATIVE.

        :return: The good_service_filter of this TimeSeriesRatio.
        :rtype: str
        """
        return self._good_service_filter

    @good_service_filter.setter
    def good_service_filter(self, good_service_filter):
        """Sets the good_service_filter of this TimeSeriesRatio.

        A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a TimeSeries quantifying good service provided. Must have ValueType = DOUBLE or ValueType = INT64 and must have MetricKind = DELTA or MetricKind = CUMULATIVE.

        :param good_service_filter: The good_service_filter of this TimeSeriesRatio.
        :type good_service_filter: str
        """

        self._good_service_filter = good_service_filter

    @property
    def total_service_filter(self):
        """Gets the total_service_filter of this TimeSeriesRatio.

        A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a TimeSeries quantifying total demanded service. Must have ValueType = DOUBLE or ValueType = INT64 and must have MetricKind = DELTA or MetricKind = CUMULATIVE.

        :return: The total_service_filter of this TimeSeriesRatio.
        :rtype: str
        """
        return self._total_service_filter

    @total_service_filter.setter
    def total_service_filter(self, total_service_filter):
        """Sets the total_service_filter of this TimeSeriesRatio.

        A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a TimeSeries quantifying total demanded service. Must have ValueType = DOUBLE or ValueType = INT64 and must have MetricKind = DELTA or MetricKind = CUMULATIVE.

        :param total_service_filter: The total_service_filter of this TimeSeriesRatio.
        :type total_service_filter: str
        """

        self._total_service_filter = total_service_filter
