# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ping_config import PingConfig
from openapi_server import util


class TcpCheck(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ping_config: PingConfig=None, port: int=None):
        """TcpCheck - a model defined in OpenAPI

        :param ping_config: The ping_config of this TcpCheck.
        :param port: The port of this TcpCheck.
        """
        self.openapi_types = {
            'ping_config': PingConfig,
            'port': int
        }

        self.attribute_map = {
            'ping_config': 'pingConfig',
            'port': 'port'
        }

        self._ping_config = ping_config
        self._port = port

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TcpCheck':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TcpCheck of this TcpCheck.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ping_config(self):
        """Gets the ping_config of this TcpCheck.


        :return: The ping_config of this TcpCheck.
        :rtype: PingConfig
        """
        return self._ping_config

    @ping_config.setter
    def ping_config(self, ping_config):
        """Sets the ping_config of this TcpCheck.


        :param ping_config: The ping_config of this TcpCheck.
        :type ping_config: PingConfig
        """

        self._ping_config = ping_config

    @property
    def port(self):
        """Gets the port of this TcpCheck.

        The TCP port on the server against which to run the check. Will be combined with host (specified within the monitored_resource) to construct the full URL. Required.

        :return: The port of this TcpCheck.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this TcpCheck.

        The TCP port on the server against which to run the check. Will be combined with host (specified within the monitored_resource) to construct the full URL. Required.

        :param port: The port of this TcpCheck.
        :type port: int
        """

        self._port = port
