/*
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListMetricsScopesByMonitoredProjectResponse;
import org.openapitools.client.model.MonitoredProject;
import org.openapitools.client.model.Operation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LocationsApi
 */
@Disabled
public class LocationsApiTest {

    private final LocationsApi api = new LocationsApi();

    /**
     * Returns a list of every Metrics Scope that a specific MonitoredProject has been added to. The metrics scope representing the specified monitored project will always be the first entry in the response.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void monitoringLocationsGlobalMetricsScopesListMetricsScopesByMonitoredProjectTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String monitoredResourceContainer = null;
        ListMetricsScopesByMonitoredProjectResponse response = api.monitoringLocationsGlobalMetricsScopesListMetricsScopesByMonitoredProject($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, monitoredResourceContainer);
        // TODO: test validations
    }

    /**
     * Adds a MonitoredProject with the given project ID to the specified Metrics Scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void monitoringLocationsGlobalMetricsScopesProjectsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        MonitoredProject monitoredProject = null;
        Operation response = api.monitoringLocationsGlobalMetricsScopesProjectsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, monitoredProject);
        // TODO: test validations
    }

}
