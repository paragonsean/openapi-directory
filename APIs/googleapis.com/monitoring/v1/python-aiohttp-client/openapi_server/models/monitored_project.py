# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MonitoredProject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, name: str=None):
        """MonitoredProject - a model defined in OpenAPI

        :param create_time: The create_time of this MonitoredProject.
        :param name: The name of this MonitoredProject.
        """
        self.openapi_types = {
            'create_time': str,
            'name': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'name': 'name'
        }

        self._create_time = create_time
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MonitoredProject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MonitoredProject of this MonitoredProject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this MonitoredProject.

        Output only. The time when this MonitoredProject was created.

        :return: The create_time of this MonitoredProject.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this MonitoredProject.

        Output only. The time when this MonitoredProject was created.

        :param create_time: The create_time of this MonitoredProject.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def name(self):
        """Gets the name of this MonitoredProject.

        Immutable. The resource name of the MonitoredProject. On input, the resource name includes the scoping project ID and monitored project ID. On output, it contains the equivalent project numbers. Example: locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}/projects/{MONITORED_PROJECT_ID_OR_NUMBER}

        :return: The name of this MonitoredProject.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this MonitoredProject.

        Immutable. The resource name of the MonitoredProject. On input, the resource name includes the scoping project ID and monitored project ID. On output, it contains the equivalent project numbers. Example: locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}/projects/{MONITORED_PROJECT_ID_OR_NUMBER}

        :param name: The name of this MonitoredProject.
        :type name: str
        """

        self._name = name
