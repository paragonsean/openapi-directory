# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.monitored_project import MonitoredProject
from openapi_server import util


class MetricsScope(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, monitored_projects: List[MonitoredProject]=None, name: str=None, update_time: str=None):
        """MetricsScope - a model defined in OpenAPI

        :param create_time: The create_time of this MetricsScope.
        :param monitored_projects: The monitored_projects of this MetricsScope.
        :param name: The name of this MetricsScope.
        :param update_time: The update_time of this MetricsScope.
        """
        self.openapi_types = {
            'create_time': str,
            'monitored_projects': List[MonitoredProject],
            'name': str,
            'update_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'monitored_projects': 'monitoredProjects',
            'name': 'name',
            'update_time': 'updateTime'
        }

        self._create_time = create_time
        self._monitored_projects = monitored_projects
        self._name = name
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetricsScope':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetricsScope of this MetricsScope.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this MetricsScope.

        Output only. The time when this Metrics Scope was created.

        :return: The create_time of this MetricsScope.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this MetricsScope.

        Output only. The time when this Metrics Scope was created.

        :param create_time: The create_time of this MetricsScope.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def monitored_projects(self):
        """Gets the monitored_projects of this MetricsScope.

        Output only. The list of projects monitored by this Metrics Scope.

        :return: The monitored_projects of this MetricsScope.
        :rtype: List[MonitoredProject]
        """
        return self._monitored_projects

    @monitored_projects.setter
    def monitored_projects(self, monitored_projects):
        """Sets the monitored_projects of this MetricsScope.

        Output only. The list of projects monitored by this Metrics Scope.

        :param monitored_projects: The monitored_projects of this MetricsScope.
        :type monitored_projects: List[MonitoredProject]
        """

        self._monitored_projects = monitored_projects

    @property
    def name(self):
        """Gets the name of this MetricsScope.

        Immutable. The resource name of the Monitoring Metrics Scope. On input, the resource name can be specified with the scoping project ID or number. On output, the resource name is specified with the scoping project number. Example: locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}

        :return: The name of this MetricsScope.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this MetricsScope.

        Immutable. The resource name of the Monitoring Metrics Scope. On input, the resource name can be specified with the scoping project ID or number. On output, the resource name is specified with the scoping project number. Example: locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}

        :param name: The name of this MetricsScope.
        :type name: str
        """

        self._name = name

    @property
    def update_time(self):
        """Gets the update_time of this MetricsScope.

        Output only. The time when this Metrics Scope record was last updated.

        :return: The update_time of this MetricsScope.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this MetricsScope.

        Output only. The time when this Metrics Scope record was last updated.

        :param update_time: The update_time of this MetricsScope.
        :type update_time: str
        """

        self._update_time = update_time
