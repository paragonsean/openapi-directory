# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SectionHeader(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, divider_below: bool=None, subtitle: str=None):
        """SectionHeader - a model defined in OpenAPI

        :param divider_below: The divider_below of this SectionHeader.
        :param subtitle: The subtitle of this SectionHeader.
        """
        self.openapi_types = {
            'divider_below': bool,
            'subtitle': str
        }

        self.attribute_map = {
            'divider_below': 'dividerBelow',
            'subtitle': 'subtitle'
        }

        self._divider_below = divider_below
        self._subtitle = subtitle

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SectionHeader':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SectionHeader of this SectionHeader.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def divider_below(self):
        """Gets the divider_below of this SectionHeader.

        Whether to insert a divider below the section in the table of contents

        :return: The divider_below of this SectionHeader.
        :rtype: bool
        """
        return self._divider_below

    @divider_below.setter
    def divider_below(self, divider_below):
        """Sets the divider_below of this SectionHeader.

        Whether to insert a divider below the section in the table of contents

        :param divider_below: The divider_below of this SectionHeader.
        :type divider_below: bool
        """

        self._divider_below = divider_below

    @property
    def subtitle(self):
        """Gets the subtitle of this SectionHeader.

        The subtitle of the section

        :return: The subtitle of this SectionHeader.
        :rtype: str
        """
        return self._subtitle

    @subtitle.setter
    def subtitle(self, subtitle):
        """Sets the subtitle of this SectionHeader.

        The subtitle of the section

        :param subtitle: The subtitle of this SectionHeader.
        :type subtitle: str
        """

        self._subtitle = subtitle
