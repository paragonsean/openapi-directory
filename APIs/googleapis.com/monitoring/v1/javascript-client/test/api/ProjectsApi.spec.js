/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudMonitoringApi);
  }
}(this, function(expect, CloudMonitoringApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudMonitoringApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('monitoringProjectsDashboardsCreate', function() {
      it('should call monitoringProjectsDashboardsCreate successfully', function(done) {
        //uncomment below and update the code to test monitoringProjectsDashboardsCreate
        //instance.monitoringProjectsDashboardsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monitoringProjectsDashboardsDelete', function() {
      it('should call monitoringProjectsDashboardsDelete successfully', function(done) {
        //uncomment below and update the code to test monitoringProjectsDashboardsDelete
        //instance.monitoringProjectsDashboardsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monitoringProjectsDashboardsGet', function() {
      it('should call monitoringProjectsDashboardsGet successfully', function(done) {
        //uncomment below and update the code to test monitoringProjectsDashboardsGet
        //instance.monitoringProjectsDashboardsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monitoringProjectsDashboardsList', function() {
      it('should call monitoringProjectsDashboardsList successfully', function(done) {
        //uncomment below and update the code to test monitoringProjectsDashboardsList
        //instance.monitoringProjectsDashboardsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monitoringProjectsDashboardsPatch', function() {
      it('should call monitoringProjectsDashboardsPatch successfully', function(done) {
        //uncomment below and update the code to test monitoringProjectsDashboardsPatch
        //instance.monitoringProjectsDashboardsPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monitoringProjectsLocationPrometheusApiV1LabelValues', function() {
      it('should call monitoringProjectsLocationPrometheusApiV1LabelValues successfully', function(done) {
        //uncomment below and update the code to test monitoringProjectsLocationPrometheusApiV1LabelValues
        //instance.monitoringProjectsLocationPrometheusApiV1LabelValues(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monitoringProjectsLocationPrometheusApiV1Labels', function() {
      it('should call monitoringProjectsLocationPrometheusApiV1Labels successfully', function(done) {
        //uncomment below and update the code to test monitoringProjectsLocationPrometheusApiV1Labels
        //instance.monitoringProjectsLocationPrometheusApiV1Labels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monitoringProjectsLocationPrometheusApiV1MetadataList', function() {
      it('should call monitoringProjectsLocationPrometheusApiV1MetadataList successfully', function(done) {
        //uncomment below and update the code to test monitoringProjectsLocationPrometheusApiV1MetadataList
        //instance.monitoringProjectsLocationPrometheusApiV1MetadataList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monitoringProjectsLocationPrometheusApiV1Query', function() {
      it('should call monitoringProjectsLocationPrometheusApiV1Query successfully', function(done) {
        //uncomment below and update the code to test monitoringProjectsLocationPrometheusApiV1Query
        //instance.monitoringProjectsLocationPrometheusApiV1Query(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monitoringProjectsLocationPrometheusApiV1QueryExemplars', function() {
      it('should call monitoringProjectsLocationPrometheusApiV1QueryExemplars successfully', function(done) {
        //uncomment below and update the code to test monitoringProjectsLocationPrometheusApiV1QueryExemplars
        //instance.monitoringProjectsLocationPrometheusApiV1QueryExemplars(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monitoringProjectsLocationPrometheusApiV1QueryRange', function() {
      it('should call monitoringProjectsLocationPrometheusApiV1QueryRange successfully', function(done) {
        //uncomment below and update the code to test monitoringProjectsLocationPrometheusApiV1QueryRange
        //instance.monitoringProjectsLocationPrometheusApiV1QueryRange(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monitoringProjectsLocationPrometheusApiV1Series', function() {
      it('should call monitoringProjectsLocationPrometheusApiV1Series successfully', function(done) {
        //uncomment below and update the code to test monitoringProjectsLocationPrometheusApiV1Series
        //instance.monitoringProjectsLocationPrometheusApiV1Series(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
