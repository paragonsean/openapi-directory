/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Aggregation from './Aggregation';
import PickTimeSeriesFilter from './PickTimeSeriesFilter';
import RatioPart from './RatioPart';
import StatisticalTimeSeriesFilter from './StatisticalTimeSeriesFilter';

/**
 * The TimeSeriesFilterRatio model module.
 * @module model/TimeSeriesFilterRatio
 * @version v1
 */
class TimeSeriesFilterRatio {
    /**
     * Constructs a new <code>TimeSeriesFilterRatio</code>.
     * A pair of time series filters that define a ratio computation. The output time series is the pair-wise division of each aligned element from the numerator and denominator time series.
     * @alias module:model/TimeSeriesFilterRatio
     */
    constructor() { 
        
        TimeSeriesFilterRatio.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TimeSeriesFilterRatio</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TimeSeriesFilterRatio} obj Optional instance to populate.
     * @return {module:model/TimeSeriesFilterRatio} The populated <code>TimeSeriesFilterRatio</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TimeSeriesFilterRatio();

            if (data.hasOwnProperty('denominator')) {
                obj['denominator'] = RatioPart.constructFromObject(data['denominator']);
            }
            if (data.hasOwnProperty('numerator')) {
                obj['numerator'] = RatioPart.constructFromObject(data['numerator']);
            }
            if (data.hasOwnProperty('pickTimeSeriesFilter')) {
                obj['pickTimeSeriesFilter'] = PickTimeSeriesFilter.constructFromObject(data['pickTimeSeriesFilter']);
            }
            if (data.hasOwnProperty('secondaryAggregation')) {
                obj['secondaryAggregation'] = Aggregation.constructFromObject(data['secondaryAggregation']);
            }
            if (data.hasOwnProperty('statisticalTimeSeriesFilter')) {
                obj['statisticalTimeSeriesFilter'] = StatisticalTimeSeriesFilter.constructFromObject(data['statisticalTimeSeriesFilter']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TimeSeriesFilterRatio</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TimeSeriesFilterRatio</code>.
     */
    static validateJSON(data) {
        // validate the optional field `denominator`
        if (data['denominator']) { // data not null
          RatioPart.validateJSON(data['denominator']);
        }
        // validate the optional field `numerator`
        if (data['numerator']) { // data not null
          RatioPart.validateJSON(data['numerator']);
        }
        // validate the optional field `pickTimeSeriesFilter`
        if (data['pickTimeSeriesFilter']) { // data not null
          PickTimeSeriesFilter.validateJSON(data['pickTimeSeriesFilter']);
        }
        // validate the optional field `secondaryAggregation`
        if (data['secondaryAggregation']) { // data not null
          Aggregation.validateJSON(data['secondaryAggregation']);
        }
        // validate the optional field `statisticalTimeSeriesFilter`
        if (data['statisticalTimeSeriesFilter']) { // data not null
          StatisticalTimeSeriesFilter.validateJSON(data['statisticalTimeSeriesFilter']);
        }

        return true;
    }


}



/**
 * @member {module:model/RatioPart} denominator
 */
TimeSeriesFilterRatio.prototype['denominator'] = undefined;

/**
 * @member {module:model/RatioPart} numerator
 */
TimeSeriesFilterRatio.prototype['numerator'] = undefined;

/**
 * @member {module:model/PickTimeSeriesFilter} pickTimeSeriesFilter
 */
TimeSeriesFilterRatio.prototype['pickTimeSeriesFilter'] = undefined;

/**
 * @member {module:model/Aggregation} secondaryAggregation
 */
TimeSeriesFilterRatio.prototype['secondaryAggregation'] = undefined;

/**
 * @member {module:model/StatisticalTimeSeriesFilter} statisticalTimeSeriesFilter
 */
TimeSeriesFilterRatio.prototype['statisticalTimeSeriesFilter'] = undefined;






export default TimeSeriesFilterRatio;

