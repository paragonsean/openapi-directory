/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TableDisplayOptions model module.
 * @module model/TableDisplayOptions
 * @version v1
 */
class TableDisplayOptions {
    /**
     * Constructs a new <code>TableDisplayOptions</code>.
     * Table display options that can be reused.
     * @alias module:model/TableDisplayOptions
     */
    constructor() { 
        
        TableDisplayOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TableDisplayOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TableDisplayOptions} obj Optional instance to populate.
     * @return {module:model/TableDisplayOptions} The populated <code>TableDisplayOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TableDisplayOptions();

            if (data.hasOwnProperty('shownColumns')) {
                obj['shownColumns'] = ApiClient.convertToType(data['shownColumns'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TableDisplayOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TableDisplayOptions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['shownColumns'])) {
            throw new Error("Expected the field `shownColumns` to be an array in the JSON data but got " + data['shownColumns']);
        }

        return true;
    }


}



/**
 * Optional. This field is unused and has been replaced by TimeSeriesTable.column_settings
 * @member {Array.<String>} shownColumns
 */
TableDisplayOptions.prototype['shownColumns'] = undefined;






export default TableDisplayOptions;

