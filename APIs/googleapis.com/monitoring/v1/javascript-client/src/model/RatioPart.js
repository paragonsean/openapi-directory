/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Aggregation from './Aggregation';

/**
 * The RatioPart model module.
 * @module model/RatioPart
 * @version v1
 */
class RatioPart {
    /**
     * Constructs a new <code>RatioPart</code>.
     * Describes a query to build the numerator or denominator of a TimeSeriesFilterRatio.
     * @alias module:model/RatioPart
     */
    constructor() { 
        
        RatioPart.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RatioPart</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RatioPart} obj Optional instance to populate.
     * @return {module:model/RatioPart} The populated <code>RatioPart</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RatioPart();

            if (data.hasOwnProperty('aggregation')) {
                obj['aggregation'] = Aggregation.constructFromObject(data['aggregation']);
            }
            if (data.hasOwnProperty('filter')) {
                obj['filter'] = ApiClient.convertToType(data['filter'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RatioPart</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RatioPart</code>.
     */
    static validateJSON(data) {
        // validate the optional field `aggregation`
        if (data['aggregation']) { // data not null
          Aggregation.validateJSON(data['aggregation']);
        }
        // ensure the json data is a string
        if (data['filter'] && !(typeof data['filter'] === 'string' || data['filter'] instanceof String)) {
            throw new Error("Expected the field `filter` to be a primitive type in the JSON string but got " + data['filter']);
        }

        return true;
    }


}



/**
 * @member {module:model/Aggregation} aggregation
 */
RatioPart.prototype['aggregation'] = undefined;

/**
 * Required. The monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
 * @member {String} filter
 */
RatioPart.prototype['filter'] = undefined;






export default RatioPart;

