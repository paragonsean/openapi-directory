/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StatisticalTimeSeriesFilter model module.
 * @module model/StatisticalTimeSeriesFilter
 * @version v1
 */
class StatisticalTimeSeriesFilter {
    /**
     * Constructs a new <code>StatisticalTimeSeriesFilter</code>.
     * A filter that ranks streams based on their statistical relation to other streams in a request. Note: This field is deprecated and completely ignored by the API.
     * @alias module:model/StatisticalTimeSeriesFilter
     */
    constructor() { 
        
        StatisticalTimeSeriesFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StatisticalTimeSeriesFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StatisticalTimeSeriesFilter} obj Optional instance to populate.
     * @return {module:model/StatisticalTimeSeriesFilter} The populated <code>StatisticalTimeSeriesFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StatisticalTimeSeriesFilter();

            if (data.hasOwnProperty('numTimeSeries')) {
                obj['numTimeSeries'] = ApiClient.convertToType(data['numTimeSeries'], 'Number');
            }
            if (data.hasOwnProperty('rankingMethod')) {
                obj['rankingMethod'] = ApiClient.convertToType(data['rankingMethod'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StatisticalTimeSeriesFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StatisticalTimeSeriesFilter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['rankingMethod'] && !(typeof data['rankingMethod'] === 'string' || data['rankingMethod'] instanceof String)) {
            throw new Error("Expected the field `rankingMethod` to be a primitive type in the JSON string but got " + data['rankingMethod']);
        }

        return true;
    }


}



/**
 * How many time series to output.
 * @member {Number} numTimeSeries
 */
StatisticalTimeSeriesFilter.prototype['numTimeSeries'] = undefined;

/**
 * rankingMethod is applied to a set of time series, and then the produced value for each individual time series is used to compare a given time series to others. These are methods that cannot be applied stream-by-stream, but rather require the full context of a request to evaluate time series.
 * @member {module:model/StatisticalTimeSeriesFilter.RankingMethodEnum} rankingMethod
 */
StatisticalTimeSeriesFilter.prototype['rankingMethod'] = undefined;





/**
 * Allowed values for the <code>rankingMethod</code> property.
 * @enum {String}
 * @readonly
 */
StatisticalTimeSeriesFilter['RankingMethodEnum'] = {

    /**
     * value: "METHOD_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "METHOD_UNSPECIFIED",

    /**
     * value: "METHOD_CLUSTER_OUTLIER"
     * @const
     */
    "CLUSTER_OUTLIER": "METHOD_CLUSTER_OUTLIER"
};



export default StatisticalTimeSeriesFilter;

