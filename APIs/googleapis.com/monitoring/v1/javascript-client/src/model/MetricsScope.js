/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MonitoredProject from './MonitoredProject';

/**
 * The MetricsScope model module.
 * @module model/MetricsScope
 * @version v1
 */
class MetricsScope {
    /**
     * Constructs a new <code>MetricsScope</code>.
     * Represents a Metrics Scope (https://cloud.google.com/monitoring/settings#concept-scope) in Cloud Monitoring, which specifies one or more Google projects and zero or more AWS accounts to monitor together.
     * @alias module:model/MetricsScope
     */
    constructor() { 
        
        MetricsScope.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MetricsScope</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MetricsScope} obj Optional instance to populate.
     * @return {module:model/MetricsScope} The populated <code>MetricsScope</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MetricsScope();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('monitoredProjects')) {
                obj['monitoredProjects'] = ApiClient.convertToType(data['monitoredProjects'], [MonitoredProject]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MetricsScope</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MetricsScope</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        if (data['monitoredProjects']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['monitoredProjects'])) {
                throw new Error("Expected the field `monitoredProjects` to be an array in the JSON data but got " + data['monitoredProjects']);
            }
            // validate the optional field `monitoredProjects` (array)
            for (const item of data['monitoredProjects']) {
                MonitoredProject.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Output only. The time when this Metrics Scope was created.
 * @member {String} createTime
 */
MetricsScope.prototype['createTime'] = undefined;

/**
 * Output only. The list of projects monitored by this Metrics Scope.
 * @member {Array.<module:model/MonitoredProject>} monitoredProjects
 */
MetricsScope.prototype['monitoredProjects'] = undefined;

/**
 * Immutable. The resource name of the Monitoring Metrics Scope. On input, the resource name can be specified with the scoping project ID or number. On output, the resource name is specified with the scoping project number. Example: locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}
 * @member {String} name
 */
MetricsScope.prototype['name'] = undefined;

/**
 * Output only. The time when this Metrics Scope record was last updated.
 * @member {String} updateTime
 */
MetricsScope.prototype['updateTime'] = undefined;






export default MetricsScope;

