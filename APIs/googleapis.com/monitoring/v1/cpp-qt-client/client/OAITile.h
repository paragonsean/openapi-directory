/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITile.h
 *
 * A single tile in the mosaic. The placement and size of the tile are configurable.
 */

#ifndef OAITile_H
#define OAITile_H

#include <QJsonObject>

#include "OAIWidget.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIWidget;

class OAITile : public OAIObject {
public:
    OAITile();
    OAITile(QString json);
    ~OAITile() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getHeight() const;
    void setHeight(const qint32 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    OAIWidget getWidget() const;
    void setWidget(const OAIWidget &widget);
    bool is_widget_Set() const;
    bool is_widget_Valid() const;

    qint32 getWidth() const;
    void setWidth(const qint32 &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    qint32 getXPos() const;
    void setXPos(const qint32 &x_pos);
    bool is_x_pos_Set() const;
    bool is_x_pos_Valid() const;

    qint32 getYPos() const;
    void setYPos(const qint32 &y_pos);
    bool is_y_pos_Set() const;
    bool is_y_pos_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    OAIWidget m_widget;
    bool m_widget_isSet;
    bool m_widget_isValid;

    qint32 m_width;
    bool m_width_isSet;
    bool m_width_isValid;

    qint32 m_x_pos;
    bool m_x_pos_isSet;
    bool m_x_pos_isValid;

    qint32 m_y_pos;
    bool m_y_pos_isSet;
    bool m_y_pos_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITile)

#endif // OAITile_H
