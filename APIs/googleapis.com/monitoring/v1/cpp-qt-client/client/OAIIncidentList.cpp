/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIncidentList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIncidentList::OAIIncidentList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIncidentList::OAIIncidentList() {
    this->initializeModel();
}

OAIIncidentList::~OAIIncidentList() {}

void OAIIncidentList::initializeModel() {

    m_monitored_resources_isSet = false;
    m_monitored_resources_isValid = false;

    m_policy_names_isSet = false;
    m_policy_names_isValid = false;
}

void OAIIncidentList::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIncidentList::fromJsonObject(QJsonObject json) {

    m_monitored_resources_isValid = ::OpenAPI::fromJsonValue(m_monitored_resources, json[QString("monitoredResources")]);
    m_monitored_resources_isSet = !json[QString("monitoredResources")].isNull() && m_monitored_resources_isValid;

    m_policy_names_isValid = ::OpenAPI::fromJsonValue(m_policy_names, json[QString("policyNames")]);
    m_policy_names_isSet = !json[QString("policyNames")].isNull() && m_policy_names_isValid;
}

QString OAIIncidentList::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIncidentList::asJsonObject() const {
    QJsonObject obj;
    if (m_monitored_resources.size() > 0) {
        obj.insert(QString("monitoredResources"), ::OpenAPI::toJsonValue(m_monitored_resources));
    }
    if (m_policy_names.size() > 0) {
        obj.insert(QString("policyNames"), ::OpenAPI::toJsonValue(m_policy_names));
    }
    return obj;
}

QList<OAIMonitoredResource> OAIIncidentList::getMonitoredResources() const {
    return m_monitored_resources;
}
void OAIIncidentList::setMonitoredResources(const QList<OAIMonitoredResource> &monitored_resources) {
    m_monitored_resources = monitored_resources;
    m_monitored_resources_isSet = true;
}

bool OAIIncidentList::is_monitored_resources_Set() const{
    return m_monitored_resources_isSet;
}

bool OAIIncidentList::is_monitored_resources_Valid() const{
    return m_monitored_resources_isValid;
}

QList<QString> OAIIncidentList::getPolicyNames() const {
    return m_policy_names;
}
void OAIIncidentList::setPolicyNames(const QList<QString> &policy_names) {
    m_policy_names = policy_names;
    m_policy_names_isSet = true;
}

bool OAIIncidentList::is_policy_names_Set() const{
    return m_policy_names_isSet;
}

bool OAIIncidentList::is_policy_names_Valid() const{
    return m_policy_names_isValid;
}

bool OAIIncidentList::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_monitored_resources.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIncidentList::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
