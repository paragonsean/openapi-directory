/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISectionHeader.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISectionHeader::OAISectionHeader(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISectionHeader::OAISectionHeader() {
    this->initializeModel();
}

OAISectionHeader::~OAISectionHeader() {}

void OAISectionHeader::initializeModel() {

    m_divider_below_isSet = false;
    m_divider_below_isValid = false;

    m_subtitle_isSet = false;
    m_subtitle_isValid = false;
}

void OAISectionHeader::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISectionHeader::fromJsonObject(QJsonObject json) {

    m_divider_below_isValid = ::OpenAPI::fromJsonValue(m_divider_below, json[QString("dividerBelow")]);
    m_divider_below_isSet = !json[QString("dividerBelow")].isNull() && m_divider_below_isValid;

    m_subtitle_isValid = ::OpenAPI::fromJsonValue(m_subtitle, json[QString("subtitle")]);
    m_subtitle_isSet = !json[QString("subtitle")].isNull() && m_subtitle_isValid;
}

QString OAISectionHeader::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISectionHeader::asJsonObject() const {
    QJsonObject obj;
    if (m_divider_below_isSet) {
        obj.insert(QString("dividerBelow"), ::OpenAPI::toJsonValue(m_divider_below));
    }
    if (m_subtitle_isSet) {
        obj.insert(QString("subtitle"), ::OpenAPI::toJsonValue(m_subtitle));
    }
    return obj;
}

bool OAISectionHeader::isDividerBelow() const {
    return m_divider_below;
}
void OAISectionHeader::setDividerBelow(const bool &divider_below) {
    m_divider_below = divider_below;
    m_divider_below_isSet = true;
}

bool OAISectionHeader::is_divider_below_Set() const{
    return m_divider_below_isSet;
}

bool OAISectionHeader::is_divider_below_Valid() const{
    return m_divider_below_isValid;
}

QString OAISectionHeader::getSubtitle() const {
    return m_subtitle;
}
void OAISectionHeader::setSubtitle(const QString &subtitle) {
    m_subtitle = subtitle;
    m_subtitle_isSet = true;
}

bool OAISectionHeader::is_subtitle_Set() const{
    return m_subtitle_isSet;
}

bool OAISectionHeader::is_subtitle_Valid() const{
    return m_subtitle_isValid;
}

bool OAISectionHeader::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_divider_below_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subtitle_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISectionHeader::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
