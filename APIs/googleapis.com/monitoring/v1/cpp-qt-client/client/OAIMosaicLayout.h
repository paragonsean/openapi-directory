/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMosaicLayout.h
 *
 * A mosaic layout divides the available space into a grid of blocks, and overlays the grid with tiles. Unlike GridLayout, tiles may span multiple grid blocks and can be placed at arbitrary locations in the grid.
 */

#ifndef OAIMosaicLayout_H
#define OAIMosaicLayout_H

#include <QJsonObject>

#include "OAITile.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITile;

class OAIMosaicLayout : public OAIObject {
public:
    OAIMosaicLayout();
    OAIMosaicLayout(QString json);
    ~OAIMosaicLayout() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getColumns() const;
    void setColumns(const qint32 &columns);
    bool is_columns_Set() const;
    bool is_columns_Valid() const;

    QList<OAITile> getTiles() const;
    void setTiles(const QList<OAITile> &tiles);
    bool is_tiles_Set() const;
    bool is_tiles_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_columns;
    bool m_columns_isSet;
    bool m_columns_isValid;

    QList<OAITile> m_tiles;
    bool m_tiles_isSet;
    bool m_tiles_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMosaicLayout)

#endif // OAIMosaicLayout_H
