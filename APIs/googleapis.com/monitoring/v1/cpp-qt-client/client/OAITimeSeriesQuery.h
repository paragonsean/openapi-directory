/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITimeSeriesQuery.h
 *
 * TimeSeriesQuery collects the set of supported methods for querying time series data from the Stackdriver metrics API.
 */

#ifndef OAITimeSeriesQuery_H
#define OAITimeSeriesQuery_H

#include <QJsonObject>

#include "OAIOpsAnalyticsQuery.h"
#include "OAITimeSeriesFilter.h"
#include "OAITimeSeriesFilterRatio.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOpsAnalyticsQuery;
class OAITimeSeriesFilter;
class OAITimeSeriesFilterRatio;

class OAITimeSeriesQuery : public OAIObject {
public:
    OAITimeSeriesQuery();
    OAITimeSeriesQuery(QString json);
    ~OAITimeSeriesQuery() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIOpsAnalyticsQuery getOpsAnalyticsQuery() const;
    void setOpsAnalyticsQuery(const OAIOpsAnalyticsQuery &ops_analytics_query);
    bool is_ops_analytics_query_Set() const;
    bool is_ops_analytics_query_Valid() const;

    bool isOutputFullDuration() const;
    void setOutputFullDuration(const bool &output_full_duration);
    bool is_output_full_duration_Set() const;
    bool is_output_full_duration_Valid() const;

    QString getPrometheusQuery() const;
    void setPrometheusQuery(const QString &prometheus_query);
    bool is_prometheus_query_Set() const;
    bool is_prometheus_query_Valid() const;

    OAITimeSeriesFilter getTimeSeriesFilter() const;
    void setTimeSeriesFilter(const OAITimeSeriesFilter &time_series_filter);
    bool is_time_series_filter_Set() const;
    bool is_time_series_filter_Valid() const;

    OAITimeSeriesFilterRatio getTimeSeriesFilterRatio() const;
    void setTimeSeriesFilterRatio(const OAITimeSeriesFilterRatio &time_series_filter_ratio);
    bool is_time_series_filter_ratio_Set() const;
    bool is_time_series_filter_ratio_Valid() const;

    QString getTimeSeriesQueryLanguage() const;
    void setTimeSeriesQueryLanguage(const QString &time_series_query_language);
    bool is_time_series_query_language_Set() const;
    bool is_time_series_query_language_Valid() const;

    QString getUnitOverride() const;
    void setUnitOverride(const QString &unit_override);
    bool is_unit_override_Set() const;
    bool is_unit_override_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIOpsAnalyticsQuery m_ops_analytics_query;
    bool m_ops_analytics_query_isSet;
    bool m_ops_analytics_query_isValid;

    bool m_output_full_duration;
    bool m_output_full_duration_isSet;
    bool m_output_full_duration_isValid;

    QString m_prometheus_query;
    bool m_prometheus_query_isSet;
    bool m_prometheus_query_isValid;

    OAITimeSeriesFilter m_time_series_filter;
    bool m_time_series_filter_isSet;
    bool m_time_series_filter_isValid;

    OAITimeSeriesFilterRatio m_time_series_filter_ratio;
    bool m_time_series_filter_ratio_isSet;
    bool m_time_series_filter_ratio_isValid;

    QString m_time_series_query_language;
    bool m_time_series_query_language_isSet;
    bool m_time_series_query_language_isValid;

    QString m_unit_override;
    bool m_unit_override_isSet;
    bool m_unit_override_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITimeSeriesQuery)

#endif // OAITimeSeriesQuery_H
