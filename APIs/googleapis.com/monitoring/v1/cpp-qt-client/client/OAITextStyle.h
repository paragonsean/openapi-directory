/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITextStyle.h
 *
 * Properties that determine how the title and content are styled
 */

#ifndef OAITextStyle_H
#define OAITextStyle_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITextStyle : public OAIObject {
public:
    OAITextStyle();
    OAITextStyle(QString json);
    ~OAITextStyle() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBackgroundColor() const;
    void setBackgroundColor(const QString &background_color);
    bool is_background_color_Set() const;
    bool is_background_color_Valid() const;

    QString getFontSize() const;
    void setFontSize(const QString &font_size);
    bool is_font_size_Set() const;
    bool is_font_size_Valid() const;

    QString getHorizontalAlignment() const;
    void setHorizontalAlignment(const QString &horizontal_alignment);
    bool is_horizontal_alignment_Set() const;
    bool is_horizontal_alignment_Valid() const;

    QString getPadding() const;
    void setPadding(const QString &padding);
    bool is_padding_Set() const;
    bool is_padding_Valid() const;

    QString getPointerLocation() const;
    void setPointerLocation(const QString &pointer_location);
    bool is_pointer_location_Set() const;
    bool is_pointer_location_Valid() const;

    QString getTextColor() const;
    void setTextColor(const QString &text_color);
    bool is_text_color_Set() const;
    bool is_text_color_Valid() const;

    QString getVerticalAlignment() const;
    void setVerticalAlignment(const QString &vertical_alignment);
    bool is_vertical_alignment_Set() const;
    bool is_vertical_alignment_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_background_color;
    bool m_background_color_isSet;
    bool m_background_color_isValid;

    QString m_font_size;
    bool m_font_size_isSet;
    bool m_font_size_isValid;

    QString m_horizontal_alignment;
    bool m_horizontal_alignment_isSet;
    bool m_horizontal_alignment_isValid;

    QString m_padding;
    bool m_padding_isSet;
    bool m_padding_isValid;

    QString m_pointer_location;
    bool m_pointer_location_isSet;
    bool m_pointer_location_isValid;

    QString m_text_color;
    bool m_text_color_isSet;
    bool m_text_color_isValid;

    QString m_vertical_alignment;
    bool m_vertical_alignment_isSet;
    bool m_vertical_alignment_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITextStyle)

#endif // OAITextStyle_H
