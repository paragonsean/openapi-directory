/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIColumn.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIColumn::OAIColumn(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIColumn::OAIColumn() {
    this->initializeModel();
}

OAIColumn::~OAIColumn() {}

void OAIColumn::initializeModel() {

    m_weight_isSet = false;
    m_weight_isValid = false;

    m_widgets_isSet = false;
    m_widgets_isValid = false;
}

void OAIColumn::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIColumn::fromJsonObject(QJsonObject json) {

    m_weight_isValid = ::OpenAPI::fromJsonValue(m_weight, json[QString("weight")]);
    m_weight_isSet = !json[QString("weight")].isNull() && m_weight_isValid;

    m_widgets_isValid = ::OpenAPI::fromJsonValue(m_widgets, json[QString("widgets")]);
    m_widgets_isSet = !json[QString("widgets")].isNull() && m_widgets_isValid;
}

QString OAIColumn::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIColumn::asJsonObject() const {
    QJsonObject obj;
    if (m_weight_isSet) {
        obj.insert(QString("weight"), ::OpenAPI::toJsonValue(m_weight));
    }
    if (m_widgets.size() > 0) {
        obj.insert(QString("widgets"), ::OpenAPI::toJsonValue(m_widgets));
    }
    return obj;
}

QString OAIColumn::getWeight() const {
    return m_weight;
}
void OAIColumn::setWeight(const QString &weight) {
    m_weight = weight;
    m_weight_isSet = true;
}

bool OAIColumn::is_weight_Set() const{
    return m_weight_isSet;
}

bool OAIColumn::is_weight_Valid() const{
    return m_weight_isValid;
}

QList<OAIWidget> OAIColumn::getWidgets() const {
    return m_widgets;
}
void OAIColumn::setWidgets(const QList<OAIWidget> &widgets) {
    m_widgets = widgets;
    m_widgets_isSet = true;
}

bool OAIColumn::is_widgets_Set() const{
    return m_widgets_isSet;
}

bool OAIColumn::is_widgets_Valid() const{
    return m_widgets_isValid;
}

bool OAIColumn::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_weight_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_widgets.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIColumn::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
