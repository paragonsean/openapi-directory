/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICollapsibleGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICollapsibleGroup::OAICollapsibleGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICollapsibleGroup::OAICollapsibleGroup() {
    this->initializeModel();
}

OAICollapsibleGroup::~OAICollapsibleGroup() {}

void OAICollapsibleGroup::initializeModel() {

    m_collapsed_isSet = false;
    m_collapsed_isValid = false;
}

void OAICollapsibleGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICollapsibleGroup::fromJsonObject(QJsonObject json) {

    m_collapsed_isValid = ::OpenAPI::fromJsonValue(m_collapsed, json[QString("collapsed")]);
    m_collapsed_isSet = !json[QString("collapsed")].isNull() && m_collapsed_isValid;
}

QString OAICollapsibleGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICollapsibleGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_collapsed_isSet) {
        obj.insert(QString("collapsed"), ::OpenAPI::toJsonValue(m_collapsed));
    }
    return obj;
}

bool OAICollapsibleGroup::isCollapsed() const {
    return m_collapsed;
}
void OAICollapsibleGroup::setCollapsed(const bool &collapsed) {
    m_collapsed = collapsed;
    m_collapsed_isSet = true;
}

bool OAICollapsibleGroup::is_collapsed_Set() const{
    return m_collapsed_isSet;
}

bool OAICollapsibleGroup::is_collapsed_Valid() const{
    return m_collapsed_isValid;
}

bool OAICollapsibleGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_collapsed_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICollapsibleGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
