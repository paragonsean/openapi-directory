/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMeasure.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMeasure::OAIMeasure(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMeasure::OAIMeasure() {
    this->initializeModel();
}

OAIMeasure::~OAIMeasure() {}

void OAIMeasure::initializeModel() {

    m_aggregation_function_isSet = false;
    m_aggregation_function_isValid = false;

    m_column_isSet = false;
    m_column_isValid = false;
}

void OAIMeasure::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMeasure::fromJsonObject(QJsonObject json) {

    m_aggregation_function_isValid = ::OpenAPI::fromJsonValue(m_aggregation_function, json[QString("aggregationFunction")]);
    m_aggregation_function_isSet = !json[QString("aggregationFunction")].isNull() && m_aggregation_function_isValid;

    m_column_isValid = ::OpenAPI::fromJsonValue(m_column, json[QString("column")]);
    m_column_isSet = !json[QString("column")].isNull() && m_column_isValid;
}

QString OAIMeasure::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMeasure::asJsonObject() const {
    QJsonObject obj;
    if (m_aggregation_function.isSet()) {
        obj.insert(QString("aggregationFunction"), ::OpenAPI::toJsonValue(m_aggregation_function));
    }
    if (m_column_isSet) {
        obj.insert(QString("column"), ::OpenAPI::toJsonValue(m_column));
    }
    return obj;
}

OAIAggregationFunction OAIMeasure::getAggregationFunction() const {
    return m_aggregation_function;
}
void OAIMeasure::setAggregationFunction(const OAIAggregationFunction &aggregation_function) {
    m_aggregation_function = aggregation_function;
    m_aggregation_function_isSet = true;
}

bool OAIMeasure::is_aggregation_function_Set() const{
    return m_aggregation_function_isSet;
}

bool OAIMeasure::is_aggregation_function_Valid() const{
    return m_aggregation_function_isValid;
}

QString OAIMeasure::getColumn() const {
    return m_column;
}
void OAIMeasure::setColumn(const QString &column) {
    m_column = column;
    m_column_isSet = true;
}

bool OAIMeasure::is_column_Set() const{
    return m_column_isSet;
}

bool OAIMeasure::is_column_Valid() const{
    return m_column_isValid;
}

bool OAIMeasure::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aggregation_function.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_column_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMeasure::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
