/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStatisticalTimeSeriesFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStatisticalTimeSeriesFilter::OAIStatisticalTimeSeriesFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStatisticalTimeSeriesFilter::OAIStatisticalTimeSeriesFilter() {
    this->initializeModel();
}

OAIStatisticalTimeSeriesFilter::~OAIStatisticalTimeSeriesFilter() {}

void OAIStatisticalTimeSeriesFilter::initializeModel() {

    m_num_time_series_isSet = false;
    m_num_time_series_isValid = false;

    m_ranking_method_isSet = false;
    m_ranking_method_isValid = false;
}

void OAIStatisticalTimeSeriesFilter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStatisticalTimeSeriesFilter::fromJsonObject(QJsonObject json) {

    m_num_time_series_isValid = ::OpenAPI::fromJsonValue(m_num_time_series, json[QString("numTimeSeries")]);
    m_num_time_series_isSet = !json[QString("numTimeSeries")].isNull() && m_num_time_series_isValid;

    m_ranking_method_isValid = ::OpenAPI::fromJsonValue(m_ranking_method, json[QString("rankingMethod")]);
    m_ranking_method_isSet = !json[QString("rankingMethod")].isNull() && m_ranking_method_isValid;
}

QString OAIStatisticalTimeSeriesFilter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStatisticalTimeSeriesFilter::asJsonObject() const {
    QJsonObject obj;
    if (m_num_time_series_isSet) {
        obj.insert(QString("numTimeSeries"), ::OpenAPI::toJsonValue(m_num_time_series));
    }
    if (m_ranking_method_isSet) {
        obj.insert(QString("rankingMethod"), ::OpenAPI::toJsonValue(m_ranking_method));
    }
    return obj;
}

qint32 OAIStatisticalTimeSeriesFilter::getNumTimeSeries() const {
    return m_num_time_series;
}
void OAIStatisticalTimeSeriesFilter::setNumTimeSeries(const qint32 &num_time_series) {
    m_num_time_series = num_time_series;
    m_num_time_series_isSet = true;
}

bool OAIStatisticalTimeSeriesFilter::is_num_time_series_Set() const{
    return m_num_time_series_isSet;
}

bool OAIStatisticalTimeSeriesFilter::is_num_time_series_Valid() const{
    return m_num_time_series_isValid;
}

QString OAIStatisticalTimeSeriesFilter::getRankingMethod() const {
    return m_ranking_method;
}
void OAIStatisticalTimeSeriesFilter::setRankingMethod(const QString &ranking_method) {
    m_ranking_method = ranking_method;
    m_ranking_method_isSet = true;
}

bool OAIStatisticalTimeSeriesFilter::is_ranking_method_Set() const{
    return m_ranking_method_isSet;
}

bool OAIStatisticalTimeSeriesFilter::is_ranking_method_Valid() const{
    return m_ranking_method_isValid;
}

bool OAIStatisticalTimeSeriesFilter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_num_time_series_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ranking_method_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStatisticalTimeSeriesFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
