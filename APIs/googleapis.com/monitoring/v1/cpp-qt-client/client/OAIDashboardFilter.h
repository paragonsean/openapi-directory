/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDashboardFilter.h
 *
 * A filter to reduce the amount of data charted in relevant widgets.
 */

#ifndef OAIDashboardFilter_H
#define OAIDashboardFilter_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDashboardFilter : public OAIObject {
public:
    OAIDashboardFilter();
    OAIDashboardFilter(QString json);
    ~OAIDashboardFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFilterType() const;
    void setFilterType(const QString &filter_type);
    bool is_filter_type_Set() const;
    bool is_filter_type_Valid() const;

    QString getLabelKey() const;
    void setLabelKey(const QString &label_key);
    bool is_label_key_Set() const;
    bool is_label_key_Valid() const;

    QString getStringValue() const;
    void setStringValue(const QString &string_value);
    bool is_string_value_Set() const;
    bool is_string_value_Valid() const;

    QString getTemplateVariable() const;
    void setTemplateVariable(const QString &template_variable);
    bool is_template_variable_Set() const;
    bool is_template_variable_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_filter_type;
    bool m_filter_type_isSet;
    bool m_filter_type_isValid;

    QString m_label_key;
    bool m_label_key_isSet;
    bool m_label_key_isValid;

    QString m_string_value;
    bool m_string_value_isSet;
    bool m_string_value_isValid;

    QString m_template_variable;
    bool m_template_variable_isSet;
    bool m_template_variable_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDashboardFilter)

#endif // OAIDashboardFilter_H
