/**
 * Cloud Monitoring API
 * Manages your Cloud Monitoring data and configurations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITimeSeriesFilter.h
 *
 * A filter that defines a subset of time series data that is displayed in a widget. Time series data is fetched using the ListTimeSeries (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list) method.
 */

#ifndef OAITimeSeriesFilter_H
#define OAITimeSeriesFilter_H

#include <QJsonObject>

#include "OAIAggregation.h"
#include "OAIPickTimeSeriesFilter.h"
#include "OAIStatisticalTimeSeriesFilter.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAggregation;
class OAIPickTimeSeriesFilter;
class OAIStatisticalTimeSeriesFilter;

class OAITimeSeriesFilter : public OAIObject {
public:
    OAITimeSeriesFilter();
    OAITimeSeriesFilter(QString json);
    ~OAITimeSeriesFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAggregation getAggregation() const;
    void setAggregation(const OAIAggregation &aggregation);
    bool is_aggregation_Set() const;
    bool is_aggregation_Valid() const;

    QString getFilter() const;
    void setFilter(const QString &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    OAIPickTimeSeriesFilter getPickTimeSeriesFilter() const;
    void setPickTimeSeriesFilter(const OAIPickTimeSeriesFilter &pick_time_series_filter);
    bool is_pick_time_series_filter_Set() const;
    bool is_pick_time_series_filter_Valid() const;

    OAIAggregation getSecondaryAggregation() const;
    void setSecondaryAggregation(const OAIAggregation &secondary_aggregation);
    bool is_secondary_aggregation_Set() const;
    bool is_secondary_aggregation_Valid() const;

    OAIStatisticalTimeSeriesFilter getStatisticalTimeSeriesFilter() const;
    void setStatisticalTimeSeriesFilter(const OAIStatisticalTimeSeriesFilter &statistical_time_series_filter);
    bool is_statistical_time_series_filter_Set() const;
    bool is_statistical_time_series_filter_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAggregation m_aggregation;
    bool m_aggregation_isSet;
    bool m_aggregation_isValid;

    QString m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    OAIPickTimeSeriesFilter m_pick_time_series_filter;
    bool m_pick_time_series_filter_isSet;
    bool m_pick_time_series_filter_isValid;

    OAIAggregation m_secondary_aggregation;
    bool m_secondary_aggregation_isSet;
    bool m_secondary_aggregation_isValid;

    OAIStatisticalTimeSeriesFilter m_statistical_time_series_filter;
    bool m_statistical_time_series_filter_isSet;
    bool m_statistical_time_series_filter_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITimeSeriesFilter)

#endif // OAITimeSeriesFilter_H
