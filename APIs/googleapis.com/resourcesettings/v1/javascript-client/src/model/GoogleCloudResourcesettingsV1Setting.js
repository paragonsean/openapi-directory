/**
 * Resource Settings API
 * The Resource Settings API allows users to control and modify the behavior of their GCP resources (e.g., VM, firewall, Project, etc.) across the Cloud Resource Hierarchy.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudResourcesettingsV1SettingMetadata from './GoogleCloudResourcesettingsV1SettingMetadata';
import GoogleCloudResourcesettingsV1Value from './GoogleCloudResourcesettingsV1Value';

/**
 * The GoogleCloudResourcesettingsV1Setting model module.
 * @module model/GoogleCloudResourcesettingsV1Setting
 * @version v1
 */
class GoogleCloudResourcesettingsV1Setting {
    /**
     * Constructs a new <code>GoogleCloudResourcesettingsV1Setting</code>.
     * The schema for settings.
     * @alias module:model/GoogleCloudResourcesettingsV1Setting
     */
    constructor() { 
        
        GoogleCloudResourcesettingsV1Setting.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudResourcesettingsV1Setting</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudResourcesettingsV1Setting} obj Optional instance to populate.
     * @return {module:model/GoogleCloudResourcesettingsV1Setting} The populated <code>GoogleCloudResourcesettingsV1Setting</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudResourcesettingsV1Setting();

            if (data.hasOwnProperty('effectiveValue')) {
                obj['effectiveValue'] = GoogleCloudResourcesettingsV1Value.constructFromObject(data['effectiveValue']);
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('localValue')) {
                obj['localValue'] = GoogleCloudResourcesettingsV1Value.constructFromObject(data['localValue']);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = GoogleCloudResourcesettingsV1SettingMetadata.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudResourcesettingsV1Setting</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudResourcesettingsV1Setting</code>.
     */
    static validateJSON(data) {
        // validate the optional field `effectiveValue`
        if (data['effectiveValue']) { // data not null
          GoogleCloudResourcesettingsV1Value.validateJSON(data['effectiveValue']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // validate the optional field `localValue`
        if (data['localValue']) { // data not null
          GoogleCloudResourcesettingsV1Value.validateJSON(data['localValue']);
        }
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          GoogleCloudResourcesettingsV1SettingMetadata.validateJSON(data['metadata']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudResourcesettingsV1Value} effectiveValue
 */
GoogleCloudResourcesettingsV1Setting.prototype['effectiveValue'] = undefined;

/**
 * A fingerprint used for optimistic concurrency. See UpdateSetting for more details.
 * @member {String} etag
 */
GoogleCloudResourcesettingsV1Setting.prototype['etag'] = undefined;

/**
 * @member {module:model/GoogleCloudResourcesettingsV1Value} localValue
 */
GoogleCloudResourcesettingsV1Setting.prototype['localValue'] = undefined;

/**
 * @member {module:model/GoogleCloudResourcesettingsV1SettingMetadata} metadata
 */
GoogleCloudResourcesettingsV1Setting.prototype['metadata'] = undefined;

/**
 * The resource name of the setting. Must be in one of the following forms: * `projects/{project_number}/settings/{setting_name}` * `folders/{folder_id}/settings/{setting_name}` * `organizations/{organization_id}/settings/{setting_name}` For example, \"/projects/123/settings/gcp-enableMyFeature\"
 * @member {String} name
 */
GoogleCloudResourcesettingsV1Setting.prototype['name'] = undefined;






export default GoogleCloudResourcesettingsV1Setting;

