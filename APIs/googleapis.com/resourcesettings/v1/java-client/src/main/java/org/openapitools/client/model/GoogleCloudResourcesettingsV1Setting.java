/*
 * Resource Settings API
 * The Resource Settings API allows users to control and modify the behavior of their GCP resources (e.g., VM, firewall, Project, etc.) across the Cloud Resource Hierarchy.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudResourcesettingsV1SettingMetadata;
import org.openapitools.client.model.GoogleCloudResourcesettingsV1Value;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The schema for settings.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:03.368660-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudResourcesettingsV1Setting {
  public static final String SERIALIZED_NAME_EFFECTIVE_VALUE = "effectiveValue";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_VALUE)
  private GoogleCloudResourcesettingsV1Value effectiveValue;

  public static final String SERIALIZED_NAME_ETAG = "etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public static final String SERIALIZED_NAME_LOCAL_VALUE = "localValue";
  @SerializedName(SERIALIZED_NAME_LOCAL_VALUE)
  private GoogleCloudResourcesettingsV1Value localValue;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private GoogleCloudResourcesettingsV1SettingMetadata metadata;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public GoogleCloudResourcesettingsV1Setting() {
  }

  public GoogleCloudResourcesettingsV1Setting effectiveValue(GoogleCloudResourcesettingsV1Value effectiveValue) {
    this.effectiveValue = effectiveValue;
    return this;
  }

  /**
   * Get effectiveValue
   * @return effectiveValue
   */
  @javax.annotation.Nullable
  public GoogleCloudResourcesettingsV1Value getEffectiveValue() {
    return effectiveValue;
  }

  public void setEffectiveValue(GoogleCloudResourcesettingsV1Value effectiveValue) {
    this.effectiveValue = effectiveValue;
  }


  public GoogleCloudResourcesettingsV1Setting etag(String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * A fingerprint used for optimistic concurrency. See UpdateSetting for more details.
   * @return etag
   */
  @javax.annotation.Nullable
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  public GoogleCloudResourcesettingsV1Setting localValue(GoogleCloudResourcesettingsV1Value localValue) {
    this.localValue = localValue;
    return this;
  }

  /**
   * Get localValue
   * @return localValue
   */
  @javax.annotation.Nullable
  public GoogleCloudResourcesettingsV1Value getLocalValue() {
    return localValue;
  }

  public void setLocalValue(GoogleCloudResourcesettingsV1Value localValue) {
    this.localValue = localValue;
  }


  public GoogleCloudResourcesettingsV1Setting metadata(GoogleCloudResourcesettingsV1SettingMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  public GoogleCloudResourcesettingsV1SettingMetadata getMetadata() {
    return metadata;
  }

  public void setMetadata(GoogleCloudResourcesettingsV1SettingMetadata metadata) {
    this.metadata = metadata;
  }


  public GoogleCloudResourcesettingsV1Setting name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The resource name of the setting. Must be in one of the following forms: * &#x60;projects/{project_number}/settings/{setting_name}&#x60; * &#x60;folders/{folder_id}/settings/{setting_name}&#x60; * &#x60;organizations/{organization_id}/settings/{setting_name}&#x60; For example, \&quot;/projects/123/settings/gcp-enableMyFeature\&quot;
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudResourcesettingsV1Setting googleCloudResourcesettingsV1Setting = (GoogleCloudResourcesettingsV1Setting) o;
    return Objects.equals(this.effectiveValue, googleCloudResourcesettingsV1Setting.effectiveValue) &&
        Objects.equals(this.etag, googleCloudResourcesettingsV1Setting.etag) &&
        Objects.equals(this.localValue, googleCloudResourcesettingsV1Setting.localValue) &&
        Objects.equals(this.metadata, googleCloudResourcesettingsV1Setting.metadata) &&
        Objects.equals(this.name, googleCloudResourcesettingsV1Setting.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(effectiveValue, etag, localValue, metadata, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudResourcesettingsV1Setting {\n");
    sb.append("    effectiveValue: ").append(toIndentedString(effectiveValue)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    localValue: ").append(toIndentedString(localValue)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("effectiveValue");
    openapiFields.add("etag");
    openapiFields.add("localValue");
    openapiFields.add("metadata");
    openapiFields.add("name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudResourcesettingsV1Setting
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudResourcesettingsV1Setting.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudResourcesettingsV1Setting is not found in the empty JSON string", GoogleCloudResourcesettingsV1Setting.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudResourcesettingsV1Setting.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudResourcesettingsV1Setting` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `effectiveValue`
      if (jsonObj.get("effectiveValue") != null && !jsonObj.get("effectiveValue").isJsonNull()) {
        GoogleCloudResourcesettingsV1Value.validateJsonElement(jsonObj.get("effectiveValue"));
      }
      if ((jsonObj.get("etag") != null && !jsonObj.get("etag").isJsonNull()) && !jsonObj.get("etag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etag").toString()));
      }
      // validate the optional field `localValue`
      if (jsonObj.get("localValue") != null && !jsonObj.get("localValue").isJsonNull()) {
        GoogleCloudResourcesettingsV1Value.validateJsonElement(jsonObj.get("localValue"));
      }
      // validate the optional field `metadata`
      if (jsonObj.get("metadata") != null && !jsonObj.get("metadata").isJsonNull()) {
        GoogleCloudResourcesettingsV1SettingMetadata.validateJsonElement(jsonObj.get("metadata"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudResourcesettingsV1Setting.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudResourcesettingsV1Setting' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudResourcesettingsV1Setting> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudResourcesettingsV1Setting.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudResourcesettingsV1Setting>() {
           @Override
           public void write(JsonWriter out, GoogleCloudResourcesettingsV1Setting value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudResourcesettingsV1Setting read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudResourcesettingsV1Setting given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudResourcesettingsV1Setting
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudResourcesettingsV1Setting
   */
  public static GoogleCloudResourcesettingsV1Setting fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudResourcesettingsV1Setting.class);
  }

  /**
   * Convert an instance of GoogleCloudResourcesettingsV1Setting to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

