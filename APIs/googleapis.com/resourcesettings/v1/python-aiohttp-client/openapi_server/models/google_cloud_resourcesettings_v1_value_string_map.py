# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudResourcesettingsV1ValueStringMap(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mappings: Dict[str, str]=None):
        """GoogleCloudResourcesettingsV1ValueStringMap - a model defined in OpenAPI

        :param mappings: The mappings of this GoogleCloudResourcesettingsV1ValueStringMap.
        """
        self.openapi_types = {
            'mappings': Dict[str, str]
        }

        self.attribute_map = {
            'mappings': 'mappings'
        }

        self._mappings = mappings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudResourcesettingsV1ValueStringMap':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudResourcesettingsV1ValueStringMap of this GoogleCloudResourcesettingsV1ValueStringMap.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mappings(self):
        """Gets the mappings of this GoogleCloudResourcesettingsV1ValueStringMap.

        The key-value pairs in the map

        :return: The mappings of this GoogleCloudResourcesettingsV1ValueStringMap.
        :rtype: Dict[str, str]
        """
        return self._mappings

    @mappings.setter
    def mappings(self, mappings):
        """Sets the mappings of this GoogleCloudResourcesettingsV1ValueStringMap.

        The key-value pairs in the map

        :param mappings: The mappings of this GoogleCloudResourcesettingsV1ValueStringMap.
        :type mappings: Dict[str, str]
        """

        self._mappings = mappings
