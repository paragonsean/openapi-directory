/*
 * KMS Inventory API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A CryptoKeyVersionTemplate specifies the properties to use when creating a new CryptoKeyVersion, either manually with CreateCryptoKeyVersion or automatically as a result of auto-rotation.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:06.406464-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudKmsV1CryptoKeyVersionTemplate {
  /**
   * Required. Algorithm to use when creating a CryptoKeyVersion based on this template. For backwards compatibility, GOOGLE_SYMMETRIC_ENCRYPTION is implied if both this field is omitted and CryptoKey.purpose is ENCRYPT_DECRYPT.
   */
  @JsonAdapter(AlgorithmEnum.Adapter.class)
  public enum AlgorithmEnum {
    CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED("CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED"),
    
    GOOGLE_SYMMETRIC_ENCRYPTION("GOOGLE_SYMMETRIC_ENCRYPTION"),
    
    AES_128_GCM("AES_128_GCM"),
    
    AES_256_GCM("AES_256_GCM"),
    
    AES_128_CBC("AES_128_CBC"),
    
    AES_256_CBC("AES_256_CBC"),
    
    AES_128_CTR("AES_128_CTR"),
    
    AES_256_CTR("AES_256_CTR"),
    
    RSA_SIGN_PSS_2048_SHA256("RSA_SIGN_PSS_2048_SHA256"),
    
    RSA_SIGN_PSS_3072_SHA256("RSA_SIGN_PSS_3072_SHA256"),
    
    RSA_SIGN_PSS_4096_SHA256("RSA_SIGN_PSS_4096_SHA256"),
    
    RSA_SIGN_PSS_4096_SHA512("RSA_SIGN_PSS_4096_SHA512"),
    
    RSA_SIGN_PKCS1_2048_SHA256("RSA_SIGN_PKCS1_2048_SHA256"),
    
    RSA_SIGN_PKCS1_3072_SHA256("RSA_SIGN_PKCS1_3072_SHA256"),
    
    RSA_SIGN_PKCS1_4096_SHA256("RSA_SIGN_PKCS1_4096_SHA256"),
    
    RSA_SIGN_PKCS1_4096_SHA512("RSA_SIGN_PKCS1_4096_SHA512"),
    
    RSA_SIGN_RAW_PKCS1_2048("RSA_SIGN_RAW_PKCS1_2048"),
    
    RSA_SIGN_RAW_PKCS1_3072("RSA_SIGN_RAW_PKCS1_3072"),
    
    RSA_SIGN_RAW_PKCS1_4096("RSA_SIGN_RAW_PKCS1_4096"),
    
    RSA_DECRYPT_OAEP_2048_SHA256("RSA_DECRYPT_OAEP_2048_SHA256"),
    
    RSA_DECRYPT_OAEP_3072_SHA256("RSA_DECRYPT_OAEP_3072_SHA256"),
    
    RSA_DECRYPT_OAEP_4096_SHA256("RSA_DECRYPT_OAEP_4096_SHA256"),
    
    RSA_DECRYPT_OAEP_4096_SHA512("RSA_DECRYPT_OAEP_4096_SHA512"),
    
    RSA_DECRYPT_OAEP_2048_SHA1("RSA_DECRYPT_OAEP_2048_SHA1"),
    
    RSA_DECRYPT_OAEP_3072_SHA1("RSA_DECRYPT_OAEP_3072_SHA1"),
    
    RSA_DECRYPT_OAEP_4096_SHA1("RSA_DECRYPT_OAEP_4096_SHA1"),
    
    EC_SIGN_P256_SHA256("EC_SIGN_P256_SHA256"),
    
    EC_SIGN_P384_SHA384("EC_SIGN_P384_SHA384"),
    
    EC_SIGN_SECP256_K1_SHA256("EC_SIGN_SECP256K1_SHA256"),
    
    HMAC_SHA256("HMAC_SHA256"),
    
    HMAC_SHA1("HMAC_SHA1"),
    
    HMAC_SHA384("HMAC_SHA384"),
    
    HMAC_SHA512("HMAC_SHA512"),
    
    HMAC_SHA224("HMAC_SHA224"),
    
    EXTERNAL_SYMMETRIC_ENCRYPTION("EXTERNAL_SYMMETRIC_ENCRYPTION");

    private String value;

    AlgorithmEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AlgorithmEnum fromValue(String value) {
      for (AlgorithmEnum b : AlgorithmEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AlgorithmEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AlgorithmEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AlgorithmEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AlgorithmEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AlgorithmEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ALGORITHM = "algorithm";
  @SerializedName(SERIALIZED_NAME_ALGORITHM)
  private AlgorithmEnum algorithm;

  /**
   * ProtectionLevel to use when creating a CryptoKeyVersion based on this template. Immutable. Defaults to SOFTWARE.
   */
  @JsonAdapter(ProtectionLevelEnum.Adapter.class)
  public enum ProtectionLevelEnum {
    PROTECTION_LEVEL_UNSPECIFIED("PROTECTION_LEVEL_UNSPECIFIED"),
    
    SOFTWARE("SOFTWARE"),
    
    HSM("HSM"),
    
    EXTERNAL("EXTERNAL"),
    
    EXTERNAL_VPC("EXTERNAL_VPC");

    private String value;

    ProtectionLevelEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProtectionLevelEnum fromValue(String value) {
      for (ProtectionLevelEnum b : ProtectionLevelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ProtectionLevelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProtectionLevelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProtectionLevelEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ProtectionLevelEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ProtectionLevelEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PROTECTION_LEVEL = "protectionLevel";
  @SerializedName(SERIALIZED_NAME_PROTECTION_LEVEL)
  private ProtectionLevelEnum protectionLevel;

  public GoogleCloudKmsV1CryptoKeyVersionTemplate() {
  }

  public GoogleCloudKmsV1CryptoKeyVersionTemplate algorithm(AlgorithmEnum algorithm) {
    this.algorithm = algorithm;
    return this;
  }

  /**
   * Required. Algorithm to use when creating a CryptoKeyVersion based on this template. For backwards compatibility, GOOGLE_SYMMETRIC_ENCRYPTION is implied if both this field is omitted and CryptoKey.purpose is ENCRYPT_DECRYPT.
   * @return algorithm
   */
  @javax.annotation.Nullable
  public AlgorithmEnum getAlgorithm() {
    return algorithm;
  }

  public void setAlgorithm(AlgorithmEnum algorithm) {
    this.algorithm = algorithm;
  }


  public GoogleCloudKmsV1CryptoKeyVersionTemplate protectionLevel(ProtectionLevelEnum protectionLevel) {
    this.protectionLevel = protectionLevel;
    return this;
  }

  /**
   * ProtectionLevel to use when creating a CryptoKeyVersion based on this template. Immutable. Defaults to SOFTWARE.
   * @return protectionLevel
   */
  @javax.annotation.Nullable
  public ProtectionLevelEnum getProtectionLevel() {
    return protectionLevel;
  }

  public void setProtectionLevel(ProtectionLevelEnum protectionLevel) {
    this.protectionLevel = protectionLevel;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudKmsV1CryptoKeyVersionTemplate googleCloudKmsV1CryptoKeyVersionTemplate = (GoogleCloudKmsV1CryptoKeyVersionTemplate) o;
    return Objects.equals(this.algorithm, googleCloudKmsV1CryptoKeyVersionTemplate.algorithm) &&
        Objects.equals(this.protectionLevel, googleCloudKmsV1CryptoKeyVersionTemplate.protectionLevel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(algorithm, protectionLevel);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudKmsV1CryptoKeyVersionTemplate {\n");
    sb.append("    algorithm: ").append(toIndentedString(algorithm)).append("\n");
    sb.append("    protectionLevel: ").append(toIndentedString(protectionLevel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("algorithm");
    openapiFields.add("protectionLevel");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudKmsV1CryptoKeyVersionTemplate
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudKmsV1CryptoKeyVersionTemplate.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudKmsV1CryptoKeyVersionTemplate is not found in the empty JSON string", GoogleCloudKmsV1CryptoKeyVersionTemplate.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudKmsV1CryptoKeyVersionTemplate.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudKmsV1CryptoKeyVersionTemplate` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("algorithm") != null && !jsonObj.get("algorithm").isJsonNull()) && !jsonObj.get("algorithm").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `algorithm` to be a primitive type in the JSON string but got `%s`", jsonObj.get("algorithm").toString()));
      }
      // validate the optional field `algorithm`
      if (jsonObj.get("algorithm") != null && !jsonObj.get("algorithm").isJsonNull()) {
        AlgorithmEnum.validateJsonElement(jsonObj.get("algorithm"));
      }
      if ((jsonObj.get("protectionLevel") != null && !jsonObj.get("protectionLevel").isJsonNull()) && !jsonObj.get("protectionLevel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `protectionLevel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("protectionLevel").toString()));
      }
      // validate the optional field `protectionLevel`
      if (jsonObj.get("protectionLevel") != null && !jsonObj.get("protectionLevel").isJsonNull()) {
        ProtectionLevelEnum.validateJsonElement(jsonObj.get("protectionLevel"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudKmsV1CryptoKeyVersionTemplate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudKmsV1CryptoKeyVersionTemplate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudKmsV1CryptoKeyVersionTemplate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudKmsV1CryptoKeyVersionTemplate.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudKmsV1CryptoKeyVersionTemplate>() {
           @Override
           public void write(JsonWriter out, GoogleCloudKmsV1CryptoKeyVersionTemplate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudKmsV1CryptoKeyVersionTemplate read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudKmsV1CryptoKeyVersionTemplate given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudKmsV1CryptoKeyVersionTemplate
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudKmsV1CryptoKeyVersionTemplate
   */
  public static GoogleCloudKmsV1CryptoKeyVersionTemplate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudKmsV1CryptoKeyVersionTemplate.class);
  }

  /**
   * Convert an instance of GoogleCloudKmsV1CryptoKeyVersionTemplate to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

