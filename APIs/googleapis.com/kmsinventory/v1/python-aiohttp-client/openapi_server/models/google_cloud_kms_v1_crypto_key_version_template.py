# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudKmsV1CryptoKeyVersionTemplate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, algorithm: str=None, protection_level: str=None):
        """GoogleCloudKmsV1CryptoKeyVersionTemplate - a model defined in OpenAPI

        :param algorithm: The algorithm of this GoogleCloudKmsV1CryptoKeyVersionTemplate.
        :param protection_level: The protection_level of this GoogleCloudKmsV1CryptoKeyVersionTemplate.
        """
        self.openapi_types = {
            'algorithm': str,
            'protection_level': str
        }

        self.attribute_map = {
            'algorithm': 'algorithm',
            'protection_level': 'protectionLevel'
        }

        self._algorithm = algorithm
        self._protection_level = protection_level

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudKmsV1CryptoKeyVersionTemplate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudKmsV1CryptoKeyVersionTemplate of this GoogleCloudKmsV1CryptoKeyVersionTemplate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def algorithm(self):
        """Gets the algorithm of this GoogleCloudKmsV1CryptoKeyVersionTemplate.

        Required. Algorithm to use when creating a CryptoKeyVersion based on this template. For backwards compatibility, GOOGLE_SYMMETRIC_ENCRYPTION is implied if both this field is omitted and CryptoKey.purpose is ENCRYPT_DECRYPT.

        :return: The algorithm of this GoogleCloudKmsV1CryptoKeyVersionTemplate.
        :rtype: str
        """
        return self._algorithm

    @algorithm.setter
    def algorithm(self, algorithm):
        """Sets the algorithm of this GoogleCloudKmsV1CryptoKeyVersionTemplate.

        Required. Algorithm to use when creating a CryptoKeyVersion based on this template. For backwards compatibility, GOOGLE_SYMMETRIC_ENCRYPTION is implied if both this field is omitted and CryptoKey.purpose is ENCRYPT_DECRYPT.

        :param algorithm: The algorithm of this GoogleCloudKmsV1CryptoKeyVersionTemplate.
        :type algorithm: str
        """
        allowed_values = ["CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED", "GOOGLE_SYMMETRIC_ENCRYPTION", "AES_128_GCM", "AES_256_GCM", "AES_128_CBC", "AES_256_CBC", "AES_128_CTR", "AES_256_CTR", "RSA_SIGN_PSS_2048_SHA256", "RSA_SIGN_PSS_3072_SHA256", "RSA_SIGN_PSS_4096_SHA256", "RSA_SIGN_PSS_4096_SHA512", "RSA_SIGN_PKCS1_2048_SHA256", "RSA_SIGN_PKCS1_3072_SHA256", "RSA_SIGN_PKCS1_4096_SHA256", "RSA_SIGN_PKCS1_4096_SHA512", "RSA_SIGN_RAW_PKCS1_2048", "RSA_SIGN_RAW_PKCS1_3072", "RSA_SIGN_RAW_PKCS1_4096", "RSA_DECRYPT_OAEP_2048_SHA256", "RSA_DECRYPT_OAEP_3072_SHA256", "RSA_DECRYPT_OAEP_4096_SHA256", "RSA_DECRYPT_OAEP_4096_SHA512", "RSA_DECRYPT_OAEP_2048_SHA1", "RSA_DECRYPT_OAEP_3072_SHA1", "RSA_DECRYPT_OAEP_4096_SHA1", "EC_SIGN_P256_SHA256", "EC_SIGN_P384_SHA384", "EC_SIGN_SECP256K1_SHA256", "HMAC_SHA256", "HMAC_SHA1", "HMAC_SHA384", "HMAC_SHA512", "HMAC_SHA224", "EXTERNAL_SYMMETRIC_ENCRYPTION"]  # noqa: E501
        if algorithm not in allowed_values:
            raise ValueError(
                "Invalid value for `algorithm` ({0}), must be one of {1}"
                .format(algorithm, allowed_values)
            )

        self._algorithm = algorithm

    @property
    def protection_level(self):
        """Gets the protection_level of this GoogleCloudKmsV1CryptoKeyVersionTemplate.

        ProtectionLevel to use when creating a CryptoKeyVersion based on this template. Immutable. Defaults to SOFTWARE.

        :return: The protection_level of this GoogleCloudKmsV1CryptoKeyVersionTemplate.
        :rtype: str
        """
        return self._protection_level

    @protection_level.setter
    def protection_level(self, protection_level):
        """Sets the protection_level of this GoogleCloudKmsV1CryptoKeyVersionTemplate.

        ProtectionLevel to use when creating a CryptoKeyVersion based on this template. Immutable. Defaults to SOFTWARE.

        :param protection_level: The protection_level of this GoogleCloudKmsV1CryptoKeyVersionTemplate.
        :type protection_level: str
        """
        allowed_values = ["PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC"]  # noqa: E501
        if protection_level not in allowed_values:
            raise ValueError(
                "Invalid value for `protection_level` ({0}), must be one of {1}"
                .format(protection_level, allowed_values)
            )

        self._protection_level = protection_level
