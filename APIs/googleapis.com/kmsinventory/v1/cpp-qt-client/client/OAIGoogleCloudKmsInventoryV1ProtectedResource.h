/**
 * KMS Inventory API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudKmsInventoryV1ProtectedResource.h
 *
 * Metadata about a resource protected by a Cloud KMS key.
 */

#ifndef OAIGoogleCloudKmsInventoryV1ProtectedResource_H
#define OAIGoogleCloudKmsInventoryV1ProtectedResource_H

#include <QJsonObject>

#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudKmsInventoryV1ProtectedResource : public OAIObject {
public:
    OAIGoogleCloudKmsInventoryV1ProtectedResource();
    OAIGoogleCloudKmsInventoryV1ProtectedResource(QString json);
    ~OAIGoogleCloudKmsInventoryV1ProtectedResource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCloudProduct() const;
    void setCloudProduct(const QString &cloud_product);
    bool is_cloud_product_Set() const;
    bool is_cloud_product_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getCryptoKeyVersion() const;
    void setCryptoKeyVersion(const QString &crypto_key_version);
    bool is_crypto_key_version_Set() const;
    bool is_crypto_key_version_Valid() const;

    QList<QString> getCryptoKeyVersions() const;
    void setCryptoKeyVersions(const QList<QString> &crypto_key_versions);
    bool is_crypto_key_versions_Set() const;
    bool is_crypto_key_versions_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getProject() const;
    void setProject(const QString &project);
    bool is_project_Set() const;
    bool is_project_Valid() const;

    QString getProjectId() const;
    void setProjectId(const QString &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    QString getResourceType() const;
    void setResourceType(const QString &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cloud_product;
    bool m_cloud_product_isSet;
    bool m_cloud_product_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_crypto_key_version;
    bool m_crypto_key_version_isSet;
    bool m_crypto_key_version_isValid;

    QList<QString> m_crypto_key_versions;
    bool m_crypto_key_versions_isSet;
    bool m_crypto_key_versions_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_project;
    bool m_project_isSet;
    bool m_project_isValid;

    QString m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    QString m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudKmsInventoryV1ProtectedResource)

#endif // OAIGoogleCloudKmsInventoryV1ProtectedResource_H
