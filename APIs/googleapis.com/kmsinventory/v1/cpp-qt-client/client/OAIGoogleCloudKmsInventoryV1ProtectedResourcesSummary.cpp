/**
 * KMS Inventory API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary() {
    this->initializeModel();
}

OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::~OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary() {}

void OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::initializeModel() {

    m_cloud_products_isSet = false;
    m_cloud_products_isValid = false;

    m_locations_isSet = false;
    m_locations_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_project_count_isSet = false;
    m_project_count_isValid = false;

    m_resource_count_isSet = false;
    m_resource_count_isValid = false;

    m_resource_types_isSet = false;
    m_resource_types_isValid = false;
}

void OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::fromJsonObject(QJsonObject json) {

    m_cloud_products_isValid = ::OpenAPI::fromJsonValue(m_cloud_products, json[QString("cloudProducts")]);
    m_cloud_products_isSet = !json[QString("cloudProducts")].isNull() && m_cloud_products_isValid;

    m_locations_isValid = ::OpenAPI::fromJsonValue(m_locations, json[QString("locations")]);
    m_locations_isSet = !json[QString("locations")].isNull() && m_locations_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_project_count_isValid = ::OpenAPI::fromJsonValue(m_project_count, json[QString("projectCount")]);
    m_project_count_isSet = !json[QString("projectCount")].isNull() && m_project_count_isValid;

    m_resource_count_isValid = ::OpenAPI::fromJsonValue(m_resource_count, json[QString("resourceCount")]);
    m_resource_count_isSet = !json[QString("resourceCount")].isNull() && m_resource_count_isValid;

    m_resource_types_isValid = ::OpenAPI::fromJsonValue(m_resource_types, json[QString("resourceTypes")]);
    m_resource_types_isSet = !json[QString("resourceTypes")].isNull() && m_resource_types_isValid;
}

QString OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_cloud_products.size() > 0) {
        obj.insert(QString("cloudProducts"), ::OpenAPI::toJsonValue(m_cloud_products));
    }
    if (m_locations.size() > 0) {
        obj.insert(QString("locations"), ::OpenAPI::toJsonValue(m_locations));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_project_count_isSet) {
        obj.insert(QString("projectCount"), ::OpenAPI::toJsonValue(m_project_count));
    }
    if (m_resource_count_isSet) {
        obj.insert(QString("resourceCount"), ::OpenAPI::toJsonValue(m_resource_count));
    }
    if (m_resource_types.size() > 0) {
        obj.insert(QString("resourceTypes"), ::OpenAPI::toJsonValue(m_resource_types));
    }
    return obj;
}

QMap<QString, QString> OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::getCloudProducts() const {
    return m_cloud_products;
}
void OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::setCloudProducts(const QMap<QString, QString> &cloud_products) {
    m_cloud_products = cloud_products;
    m_cloud_products_isSet = true;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::is_cloud_products_Set() const{
    return m_cloud_products_isSet;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::is_cloud_products_Valid() const{
    return m_cloud_products_isValid;
}

QMap<QString, QString> OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::getLocations() const {
    return m_locations;
}
void OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::setLocations(const QMap<QString, QString> &locations) {
    m_locations = locations;
    m_locations_isSet = true;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::is_locations_Set() const{
    return m_locations_isSet;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::is_locations_Valid() const{
    return m_locations_isValid;
}

QString OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::getName() const {
    return m_name;
}
void OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::is_name_Valid() const{
    return m_name_isValid;
}

qint32 OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::getProjectCount() const {
    return m_project_count;
}
void OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::setProjectCount(const qint32 &project_count) {
    m_project_count = project_count;
    m_project_count_isSet = true;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::is_project_count_Set() const{
    return m_project_count_isSet;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::is_project_count_Valid() const{
    return m_project_count_isValid;
}

QString OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::getResourceCount() const {
    return m_resource_count;
}
void OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::setResourceCount(const QString &resource_count) {
    m_resource_count = resource_count;
    m_resource_count_isSet = true;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::is_resource_count_Set() const{
    return m_resource_count_isSet;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::is_resource_count_Valid() const{
    return m_resource_count_isValid;
}

QMap<QString, QString> OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::getResourceTypes() const {
    return m_resource_types;
}
void OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::setResourceTypes(const QMap<QString, QString> &resource_types) {
    m_resource_types = resource_types;
    m_resource_types_isSet = true;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::is_resource_types_Set() const{
    return m_resource_types_isSet;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::is_resource_types_Valid() const{
    return m_resource_types_isValid;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cloud_products.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_locations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResourcesSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
