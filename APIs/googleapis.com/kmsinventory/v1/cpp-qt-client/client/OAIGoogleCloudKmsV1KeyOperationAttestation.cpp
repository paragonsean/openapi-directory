/**
 * KMS Inventory API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudKmsV1KeyOperationAttestation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudKmsV1KeyOperationAttestation::OAIGoogleCloudKmsV1KeyOperationAttestation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudKmsV1KeyOperationAttestation::OAIGoogleCloudKmsV1KeyOperationAttestation() {
    this->initializeModel();
}

OAIGoogleCloudKmsV1KeyOperationAttestation::~OAIGoogleCloudKmsV1KeyOperationAttestation() {}

void OAIGoogleCloudKmsV1KeyOperationAttestation::initializeModel() {

    m_cert_chains_isSet = false;
    m_cert_chains_isValid = false;

    m_content_isSet = false;
    m_content_isValid = false;

    m_format_isSet = false;
    m_format_isValid = false;
}

void OAIGoogleCloudKmsV1KeyOperationAttestation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudKmsV1KeyOperationAttestation::fromJsonObject(QJsonObject json) {

    m_cert_chains_isValid = ::OpenAPI::fromJsonValue(m_cert_chains, json[QString("certChains")]);
    m_cert_chains_isSet = !json[QString("certChains")].isNull() && m_cert_chains_isValid;

    m_content_isValid = ::OpenAPI::fromJsonValue(m_content, json[QString("content")]);
    m_content_isSet = !json[QString("content")].isNull() && m_content_isValid;

    m_format_isValid = ::OpenAPI::fromJsonValue(m_format, json[QString("format")]);
    m_format_isSet = !json[QString("format")].isNull() && m_format_isValid;
}

QString OAIGoogleCloudKmsV1KeyOperationAttestation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudKmsV1KeyOperationAttestation::asJsonObject() const {
    QJsonObject obj;
    if (m_cert_chains.isSet()) {
        obj.insert(QString("certChains"), ::OpenAPI::toJsonValue(m_cert_chains));
    }
    if (m_content_isSet) {
        obj.insert(QString("content"), ::OpenAPI::toJsonValue(m_content));
    }
    if (m_format_isSet) {
        obj.insert(QString("format"), ::OpenAPI::toJsonValue(m_format));
    }
    return obj;
}

OAIGoogleCloudKmsV1KeyOperationAttestationCertificateChains OAIGoogleCloudKmsV1KeyOperationAttestation::getCertChains() const {
    return m_cert_chains;
}
void OAIGoogleCloudKmsV1KeyOperationAttestation::setCertChains(const OAIGoogleCloudKmsV1KeyOperationAttestationCertificateChains &cert_chains) {
    m_cert_chains = cert_chains;
    m_cert_chains_isSet = true;
}

bool OAIGoogleCloudKmsV1KeyOperationAttestation::is_cert_chains_Set() const{
    return m_cert_chains_isSet;
}

bool OAIGoogleCloudKmsV1KeyOperationAttestation::is_cert_chains_Valid() const{
    return m_cert_chains_isValid;
}

QByteArray OAIGoogleCloudKmsV1KeyOperationAttestation::getContent() const {
    return m_content;
}
void OAIGoogleCloudKmsV1KeyOperationAttestation::setContent(const QByteArray &content) {
    m_content = content;
    m_content_isSet = true;
}

bool OAIGoogleCloudKmsV1KeyOperationAttestation::is_content_Set() const{
    return m_content_isSet;
}

bool OAIGoogleCloudKmsV1KeyOperationAttestation::is_content_Valid() const{
    return m_content_isValid;
}

QString OAIGoogleCloudKmsV1KeyOperationAttestation::getFormat() const {
    return m_format;
}
void OAIGoogleCloudKmsV1KeyOperationAttestation::setFormat(const QString &format) {
    m_format = format;
    m_format_isSet = true;
}

bool OAIGoogleCloudKmsV1KeyOperationAttestation::is_format_Set() const{
    return m_format_isSet;
}

bool OAIGoogleCloudKmsV1KeyOperationAttestation::is_format_Valid() const{
    return m_format_isValid;
}

bool OAIGoogleCloudKmsV1KeyOperationAttestation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cert_chains.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_format_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudKmsV1KeyOperationAttestation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
