/**
 * KMS Inventory API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudKmsInventoryV1ProtectedResource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudKmsInventoryV1ProtectedResource::OAIGoogleCloudKmsInventoryV1ProtectedResource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudKmsInventoryV1ProtectedResource::OAIGoogleCloudKmsInventoryV1ProtectedResource() {
    this->initializeModel();
}

OAIGoogleCloudKmsInventoryV1ProtectedResource::~OAIGoogleCloudKmsInventoryV1ProtectedResource() {}

void OAIGoogleCloudKmsInventoryV1ProtectedResource::initializeModel() {

    m_cloud_product_isSet = false;
    m_cloud_product_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_crypto_key_version_isSet = false;
    m_crypto_key_version_isValid = false;

    m_crypto_key_versions_isSet = false;
    m_crypto_key_versions_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_location_isSet = false;
    m_location_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_project_isSet = false;
    m_project_isValid = false;

    m_project_id_isSet = false;
    m_project_id_isValid = false;

    m_resource_type_isSet = false;
    m_resource_type_isValid = false;
}

void OAIGoogleCloudKmsInventoryV1ProtectedResource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudKmsInventoryV1ProtectedResource::fromJsonObject(QJsonObject json) {

    m_cloud_product_isValid = ::OpenAPI::fromJsonValue(m_cloud_product, json[QString("cloudProduct")]);
    m_cloud_product_isSet = !json[QString("cloudProduct")].isNull() && m_cloud_product_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_crypto_key_version_isValid = ::OpenAPI::fromJsonValue(m_crypto_key_version, json[QString("cryptoKeyVersion")]);
    m_crypto_key_version_isSet = !json[QString("cryptoKeyVersion")].isNull() && m_crypto_key_version_isValid;

    m_crypto_key_versions_isValid = ::OpenAPI::fromJsonValue(m_crypto_key_versions, json[QString("cryptoKeyVersions")]);
    m_crypto_key_versions_isSet = !json[QString("cryptoKeyVersions")].isNull() && m_crypto_key_versions_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_location_isValid = ::OpenAPI::fromJsonValue(m_location, json[QString("location")]);
    m_location_isSet = !json[QString("location")].isNull() && m_location_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_project_isValid = ::OpenAPI::fromJsonValue(m_project, json[QString("project")]);
    m_project_isSet = !json[QString("project")].isNull() && m_project_isValid;

    m_project_id_isValid = ::OpenAPI::fromJsonValue(m_project_id, json[QString("projectId")]);
    m_project_id_isSet = !json[QString("projectId")].isNull() && m_project_id_isValid;

    m_resource_type_isValid = ::OpenAPI::fromJsonValue(m_resource_type, json[QString("resourceType")]);
    m_resource_type_isSet = !json[QString("resourceType")].isNull() && m_resource_type_isValid;
}

QString OAIGoogleCloudKmsInventoryV1ProtectedResource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudKmsInventoryV1ProtectedResource::asJsonObject() const {
    QJsonObject obj;
    if (m_cloud_product_isSet) {
        obj.insert(QString("cloudProduct"), ::OpenAPI::toJsonValue(m_cloud_product));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_crypto_key_version_isSet) {
        obj.insert(QString("cryptoKeyVersion"), ::OpenAPI::toJsonValue(m_crypto_key_version));
    }
    if (m_crypto_key_versions.size() > 0) {
        obj.insert(QString("cryptoKeyVersions"), ::OpenAPI::toJsonValue(m_crypto_key_versions));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_location_isSet) {
        obj.insert(QString("location"), ::OpenAPI::toJsonValue(m_location));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_project_isSet) {
        obj.insert(QString("project"), ::OpenAPI::toJsonValue(m_project));
    }
    if (m_project_id_isSet) {
        obj.insert(QString("projectId"), ::OpenAPI::toJsonValue(m_project_id));
    }
    if (m_resource_type_isSet) {
        obj.insert(QString("resourceType"), ::OpenAPI::toJsonValue(m_resource_type));
    }
    return obj;
}

QString OAIGoogleCloudKmsInventoryV1ProtectedResource::getCloudProduct() const {
    return m_cloud_product;
}
void OAIGoogleCloudKmsInventoryV1ProtectedResource::setCloudProduct(const QString &cloud_product) {
    m_cloud_product = cloud_product;
    m_cloud_product_isSet = true;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResource::is_cloud_product_Set() const{
    return m_cloud_product_isSet;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResource::is_cloud_product_Valid() const{
    return m_cloud_product_isValid;
}

QString OAIGoogleCloudKmsInventoryV1ProtectedResource::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudKmsInventoryV1ProtectedResource::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResource::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResource::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudKmsInventoryV1ProtectedResource::getCryptoKeyVersion() const {
    return m_crypto_key_version;
}
void OAIGoogleCloudKmsInventoryV1ProtectedResource::setCryptoKeyVersion(const QString &crypto_key_version) {
    m_crypto_key_version = crypto_key_version;
    m_crypto_key_version_isSet = true;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResource::is_crypto_key_version_Set() const{
    return m_crypto_key_version_isSet;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResource::is_crypto_key_version_Valid() const{
    return m_crypto_key_version_isValid;
}

QList<QString> OAIGoogleCloudKmsInventoryV1ProtectedResource::getCryptoKeyVersions() const {
    return m_crypto_key_versions;
}
void OAIGoogleCloudKmsInventoryV1ProtectedResource::setCryptoKeyVersions(const QList<QString> &crypto_key_versions) {
    m_crypto_key_versions = crypto_key_versions;
    m_crypto_key_versions_isSet = true;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResource::is_crypto_key_versions_Set() const{
    return m_crypto_key_versions_isSet;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResource::is_crypto_key_versions_Valid() const{
    return m_crypto_key_versions_isValid;
}

QMap<QString, QString> OAIGoogleCloudKmsInventoryV1ProtectedResource::getLabels() const {
    return m_labels;
}
void OAIGoogleCloudKmsInventoryV1ProtectedResource::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResource::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResource::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAIGoogleCloudKmsInventoryV1ProtectedResource::getLocation() const {
    return m_location;
}
void OAIGoogleCloudKmsInventoryV1ProtectedResource::setLocation(const QString &location) {
    m_location = location;
    m_location_isSet = true;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResource::is_location_Set() const{
    return m_location_isSet;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResource::is_location_Valid() const{
    return m_location_isValid;
}

QString OAIGoogleCloudKmsInventoryV1ProtectedResource::getName() const {
    return m_name;
}
void OAIGoogleCloudKmsInventoryV1ProtectedResource::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResource::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResource::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudKmsInventoryV1ProtectedResource::getProject() const {
    return m_project;
}
void OAIGoogleCloudKmsInventoryV1ProtectedResource::setProject(const QString &project) {
    m_project = project;
    m_project_isSet = true;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResource::is_project_Set() const{
    return m_project_isSet;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResource::is_project_Valid() const{
    return m_project_isValid;
}

QString OAIGoogleCloudKmsInventoryV1ProtectedResource::getProjectId() const {
    return m_project_id;
}
void OAIGoogleCloudKmsInventoryV1ProtectedResource::setProjectId(const QString &project_id) {
    m_project_id = project_id;
    m_project_id_isSet = true;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResource::is_project_id_Set() const{
    return m_project_id_isSet;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResource::is_project_id_Valid() const{
    return m_project_id_isValid;
}

QString OAIGoogleCloudKmsInventoryV1ProtectedResource::getResourceType() const {
    return m_resource_type;
}
void OAIGoogleCloudKmsInventoryV1ProtectedResource::setResourceType(const QString &resource_type) {
    m_resource_type = resource_type;
    m_resource_type_isSet = true;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResource::is_resource_type_Set() const{
    return m_resource_type_isSet;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResource::is_resource_type_Valid() const{
    return m_resource_type_isValid;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cloud_product_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_crypto_key_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_crypto_key_versions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudKmsInventoryV1ProtectedResource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
