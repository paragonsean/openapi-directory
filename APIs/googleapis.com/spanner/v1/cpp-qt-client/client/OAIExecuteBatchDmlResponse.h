/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExecuteBatchDmlResponse.h
 *
 * The response for ExecuteBatchDml. Contains a list of ResultSet messages, one for each DML statement that has successfully executed, in the same order as the statements in the request. If a statement fails, the status in the response body identifies the cause of the failure. To check for DML statements that failed, use the following approach: 1. Check the status in the response message. The google.rpc.Code enum value &#x60;OK&#x60; indicates that all statements were executed successfully. 2. If the status was not &#x60;OK&#x60;, check the number of result sets in the response. If the response contains &#x60;N&#x60; ResultSet messages, then statement &#x60;N+1&#x60; in the request failed. Example 1: * Request: 5 DML statements, all executed successfully. * Response: 5 ResultSet messages, with the status &#x60;OK&#x60;. Example 2: * Request: 5 DML statements. The third statement has a syntax error. * Response: 2 ResultSet messages, and a syntax error (&#x60;INVALID_ARGUMENT&#x60;) status. The number of ResultSet messages indicates that the third statement failed, and the fourth and fifth statements were not executed.
 */

#ifndef OAIExecuteBatchDmlResponse_H
#define OAIExecuteBatchDmlResponse_H

#include <QJsonObject>

#include "OAIResultSet.h"
#include "OAIStatus.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResultSet;
class OAIStatus;

class OAIExecuteBatchDmlResponse : public OAIObject {
public:
    OAIExecuteBatchDmlResponse();
    OAIExecuteBatchDmlResponse(QString json);
    ~OAIExecuteBatchDmlResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIResultSet> getResultSets() const;
    void setResultSets(const QList<OAIResultSet> &result_sets);
    bool is_result_sets_Set() const;
    bool is_result_sets_Valid() const;

    OAIStatus getStatus() const;
    void setStatus(const OAIStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIResultSet> m_result_sets;
    bool m_result_sets_isSet;
    bool m_result_sets_isValid;

    OAIStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExecuteBatchDmlResponse)

#endif // OAIExecuteBatchDmlResponse_H
