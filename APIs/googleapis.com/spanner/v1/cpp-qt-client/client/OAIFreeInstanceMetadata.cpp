/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFreeInstanceMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFreeInstanceMetadata::OAIFreeInstanceMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFreeInstanceMetadata::OAIFreeInstanceMetadata() {
    this->initializeModel();
}

OAIFreeInstanceMetadata::~OAIFreeInstanceMetadata() {}

void OAIFreeInstanceMetadata::initializeModel() {

    m_expire_behavior_isSet = false;
    m_expire_behavior_isValid = false;

    m_expire_time_isSet = false;
    m_expire_time_isValid = false;

    m_upgrade_time_isSet = false;
    m_upgrade_time_isValid = false;
}

void OAIFreeInstanceMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFreeInstanceMetadata::fromJsonObject(QJsonObject json) {

    m_expire_behavior_isValid = ::OpenAPI::fromJsonValue(m_expire_behavior, json[QString("expireBehavior")]);
    m_expire_behavior_isSet = !json[QString("expireBehavior")].isNull() && m_expire_behavior_isValid;

    m_expire_time_isValid = ::OpenAPI::fromJsonValue(m_expire_time, json[QString("expireTime")]);
    m_expire_time_isSet = !json[QString("expireTime")].isNull() && m_expire_time_isValid;

    m_upgrade_time_isValid = ::OpenAPI::fromJsonValue(m_upgrade_time, json[QString("upgradeTime")]);
    m_upgrade_time_isSet = !json[QString("upgradeTime")].isNull() && m_upgrade_time_isValid;
}

QString OAIFreeInstanceMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFreeInstanceMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_expire_behavior_isSet) {
        obj.insert(QString("expireBehavior"), ::OpenAPI::toJsonValue(m_expire_behavior));
    }
    if (m_expire_time_isSet) {
        obj.insert(QString("expireTime"), ::OpenAPI::toJsonValue(m_expire_time));
    }
    if (m_upgrade_time_isSet) {
        obj.insert(QString("upgradeTime"), ::OpenAPI::toJsonValue(m_upgrade_time));
    }
    return obj;
}

QString OAIFreeInstanceMetadata::getExpireBehavior() const {
    return m_expire_behavior;
}
void OAIFreeInstanceMetadata::setExpireBehavior(const QString &expire_behavior) {
    m_expire_behavior = expire_behavior;
    m_expire_behavior_isSet = true;
}

bool OAIFreeInstanceMetadata::is_expire_behavior_Set() const{
    return m_expire_behavior_isSet;
}

bool OAIFreeInstanceMetadata::is_expire_behavior_Valid() const{
    return m_expire_behavior_isValid;
}

QString OAIFreeInstanceMetadata::getExpireTime() const {
    return m_expire_time;
}
void OAIFreeInstanceMetadata::setExpireTime(const QString &expire_time) {
    m_expire_time = expire_time;
    m_expire_time_isSet = true;
}

bool OAIFreeInstanceMetadata::is_expire_time_Set() const{
    return m_expire_time_isSet;
}

bool OAIFreeInstanceMetadata::is_expire_time_Valid() const{
    return m_expire_time_isValid;
}

QString OAIFreeInstanceMetadata::getUpgradeTime() const {
    return m_upgrade_time;
}
void OAIFreeInstanceMetadata::setUpgradeTime(const QString &upgrade_time) {
    m_upgrade_time = upgrade_time;
    m_upgrade_time_isSet = true;
}

bool OAIFreeInstanceMetadata::is_upgrade_time_Set() const{
    return m_upgrade_time_isSet;
}

bool OAIFreeInstanceMetadata::is_upgrade_time_Valid() const{
    return m_upgrade_time_isValid;
}

bool OAIFreeInstanceMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_expire_behavior_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expire_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_upgrade_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFreeInstanceMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
