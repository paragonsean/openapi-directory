/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInstance.h
 *
 * An isolated set of Cloud Spanner resources on which databases can be hosted.
 */

#ifndef OAIInstance_H
#define OAIInstance_H

#include <QJsonObject>

#include "OAIAutoscalingConfig.h"
#include "OAIFreeInstanceMetadata.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAutoscalingConfig;
class OAIFreeInstanceMetadata;

class OAIInstance : public OAIObject {
public:
    OAIInstance();
    OAIInstance(QString json);
    ~OAIInstance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAutoscalingConfig getAutoscalingConfig() const;
    void setAutoscalingConfig(const OAIAutoscalingConfig &autoscaling_config);
    bool is_autoscaling_config_Set() const;
    bool is_autoscaling_config_Valid() const;

    QString getConfig() const;
    void setConfig(const QString &config);
    bool is_config_Set() const;
    bool is_config_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QList<QString> getEndpointUris() const;
    void setEndpointUris(const QList<QString> &endpoint_uris);
    bool is_endpoint_uris_Set() const;
    bool is_endpoint_uris_Valid() const;

    OAIFreeInstanceMetadata getFreeInstanceMetadata() const;
    void setFreeInstanceMetadata(const OAIFreeInstanceMetadata &free_instance_metadata);
    bool is_free_instance_metadata_Set() const;
    bool is_free_instance_metadata_Valid() const;

    QString getInstanceType() const;
    void setInstanceType(const QString &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getNodeCount() const;
    void setNodeCount(const qint32 &node_count);
    bool is_node_count_Set() const;
    bool is_node_count_Valid() const;

    qint32 getProcessingUnits() const;
    void setProcessingUnits(const qint32 &processing_units);
    bool is_processing_units_Set() const;
    bool is_processing_units_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAutoscalingConfig m_autoscaling_config;
    bool m_autoscaling_config_isSet;
    bool m_autoscaling_config_isValid;

    QString m_config;
    bool m_config_isSet;
    bool m_config_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QList<QString> m_endpoint_uris;
    bool m_endpoint_uris_isSet;
    bool m_endpoint_uris_isValid;

    OAIFreeInstanceMetadata m_free_instance_metadata;
    bool m_free_instance_metadata_isSet;
    bool m_free_instance_metadata_isValid;

    QString m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_node_count;
    bool m_node_count_isSet;
    bool m_node_count_isValid;

    qint32 m_processing_units;
    bool m_processing_units_isSet;
    bool m_processing_units_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInstance)

#endif // OAIInstance_H
