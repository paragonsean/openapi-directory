/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIKeySet.h
 *
 * &#x60;KeySet&#x60; defines a collection of Cloud Spanner keys and/or key ranges. All the keys are expected to be in the same table or index. The keys need not be sorted in any particular way. If the same key is specified multiple times in the set (for example if two ranges, two keys, or a key and a range overlap), Cloud Spanner behaves as if the key were only specified once.
 */

#ifndef OAIKeySet_H
#define OAIKeySet_H

#include <QJsonObject>

#include "OAIKeyRange.h"
#include <QJsonValue>
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIKeyRange;

class OAIKeySet : public OAIObject {
public:
    OAIKeySet();
    OAIKeySet(QString json);
    ~OAIKeySet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAll() const;
    void setAll(const bool &all);
    bool is_all_Set() const;
    bool is_all_Valid() const;

    QList<QList<QJsonValue>> getKeys() const;
    void setKeys(const QList<QList<QJsonValue>> &keys);
    bool is_keys_Set() const;
    bool is_keys_Valid() const;

    QList<OAIKeyRange> getRanges() const;
    void setRanges(const QList<OAIKeyRange> &ranges);
    bool is_ranges_Set() const;
    bool is_ranges_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_all;
    bool m_all_isSet;
    bool m_all_isValid;

    QList<QList<QJsonValue>> m_keys;
    bool m_keys_isSet;
    bool m_keys_isValid;

    QList<OAIKeyRange> m_ranges;
    bool m_ranges_isSet;
    bool m_ranges_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIKeySet)

#endif // OAIKeySet_H
