/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDiagnosticMessage.h
 *
 * A message representing the key visualizer diagnostic messages.
 */

#ifndef OAIDiagnosticMessage_H
#define OAIDiagnosticMessage_H

#include <QJsonObject>

#include "OAILocalizedString.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILocalizedString;

class OAIDiagnosticMessage : public OAIObject {
public:
    OAIDiagnosticMessage();
    OAIDiagnosticMessage(QString json);
    ~OAIDiagnosticMessage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILocalizedString getInfo() const;
    void setInfo(const OAILocalizedString &info);
    bool is_info_Set() const;
    bool is_info_Valid() const;

    OAILocalizedString getMetric() const;
    void setMetric(const OAILocalizedString &metric);
    bool is_metric_Set() const;
    bool is_metric_Valid() const;

    bool isMetricSpecific() const;
    void setMetricSpecific(const bool &metric_specific);
    bool is_metric_specific_Set() const;
    bool is_metric_specific_Valid() const;

    QString getSeverity() const;
    void setSeverity(const QString &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    OAILocalizedString getShortMessage() const;
    void setShortMessage(const OAILocalizedString &short_message);
    bool is_short_message_Set() const;
    bool is_short_message_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILocalizedString m_info;
    bool m_info_isSet;
    bool m_info_isValid;

    OAILocalizedString m_metric;
    bool m_metric_isSet;
    bool m_metric_isValid;

    bool m_metric_specific;
    bool m_metric_specific_isSet;
    bool m_metric_specific_isValid;

    QString m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    OAILocalizedString m_short_message;
    bool m_short_message_isSet;
    bool m_short_message_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDiagnosticMessage)

#endif // OAIDiagnosticMessage_H
