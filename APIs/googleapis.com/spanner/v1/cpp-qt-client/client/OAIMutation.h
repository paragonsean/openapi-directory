/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMutation.h
 *
 * A modification to one or more Cloud Spanner rows. Mutations can be applied to a Cloud Spanner database by sending them in a Commit call.
 */

#ifndef OAIMutation_H
#define OAIMutation_H

#include <QJsonObject>

#include "OAIDelete.h"
#include "OAIWrite.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDelete;
class OAIWrite;

class OAIMutation : public OAIObject {
public:
    OAIMutation();
    OAIMutation(QString json);
    ~OAIMutation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDelete getRDelete() const;
    void setRDelete(const OAIDelete &r_delete);
    bool is_r_delete_Set() const;
    bool is_r_delete_Valid() const;

    OAIWrite getInsert() const;
    void setInsert(const OAIWrite &insert);
    bool is_insert_Set() const;
    bool is_insert_Valid() const;

    OAIWrite getInsertOrUpdate() const;
    void setInsertOrUpdate(const OAIWrite &insert_or_update);
    bool is_insert_or_update_Set() const;
    bool is_insert_or_update_Valid() const;

    OAIWrite getReplace() const;
    void setReplace(const OAIWrite &replace);
    bool is_replace_Set() const;
    bool is_replace_Valid() const;

    OAIWrite getUpdate() const;
    void setUpdate(const OAIWrite &update);
    bool is_update_Set() const;
    bool is_update_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDelete m_r_delete;
    bool m_r_delete_isSet;
    bool m_r_delete_isValid;

    OAIWrite m_insert;
    bool m_insert_isSet;
    bool m_insert_isValid;

    OAIWrite m_insert_or_update;
    bool m_insert_or_update_isSet;
    bool m_insert_or_update_isValid;

    OAIWrite m_replace;
    bool m_replace_isSet;
    bool m_replace_isValid;

    OAIWrite m_update;
    bool m_update_isSet;
    bool m_update_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMutation)

#endif // OAIMutation_H
