/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRestoreDatabaseMetadata.h
 *
 * Metadata type for the long-running operation returned by RestoreDatabase.
 */

#ifndef OAIRestoreDatabaseMetadata_H
#define OAIRestoreDatabaseMetadata_H

#include <QJsonObject>

#include "OAIBackupInfo.h"
#include "OAIOperationProgress.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBackupInfo;
class OAIOperationProgress;

class OAIRestoreDatabaseMetadata : public OAIObject {
public:
    OAIRestoreDatabaseMetadata();
    OAIRestoreDatabaseMetadata(QString json);
    ~OAIRestoreDatabaseMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBackupInfo getBackupInfo() const;
    void setBackupInfo(const OAIBackupInfo &backup_info);
    bool is_backup_info_Set() const;
    bool is_backup_info_Valid() const;

    QString getCancelTime() const;
    void setCancelTime(const QString &cancel_time);
    bool is_cancel_time_Set() const;
    bool is_cancel_time_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOptimizeDatabaseOperationName() const;
    void setOptimizeDatabaseOperationName(const QString &optimize_database_operation_name);
    bool is_optimize_database_operation_name_Set() const;
    bool is_optimize_database_operation_name_Valid() const;

    OAIOperationProgress getProgress() const;
    void setProgress(const OAIOperationProgress &progress);
    bool is_progress_Set() const;
    bool is_progress_Valid() const;

    QString getSourceType() const;
    void setSourceType(const QString &source_type);
    bool is_source_type_Set() const;
    bool is_source_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBackupInfo m_backup_info;
    bool m_backup_info_isSet;
    bool m_backup_info_isValid;

    QString m_cancel_time;
    bool m_cancel_time_isSet;
    bool m_cancel_time_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_optimize_database_operation_name;
    bool m_optimize_database_operation_name_isSet;
    bool m_optimize_database_operation_name_isValid;

    OAIOperationProgress m_progress;
    bool m_progress_isSet;
    bool m_progress_isValid;

    QString m_source_type;
    bool m_source_type_isSet;
    bool m_source_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRestoreDatabaseMetadata)

#endif // OAIRestoreDatabaseMetadata_H
