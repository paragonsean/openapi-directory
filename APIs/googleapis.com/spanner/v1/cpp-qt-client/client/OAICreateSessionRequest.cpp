/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateSessionRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateSessionRequest::OAICreateSessionRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateSessionRequest::OAICreateSessionRequest() {
    this->initializeModel();
}

OAICreateSessionRequest::~OAICreateSessionRequest() {}

void OAICreateSessionRequest::initializeModel() {

    m_session_isSet = false;
    m_session_isValid = false;
}

void OAICreateSessionRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateSessionRequest::fromJsonObject(QJsonObject json) {

    m_session_isValid = ::OpenAPI::fromJsonValue(m_session, json[QString("session")]);
    m_session_isSet = !json[QString("session")].isNull() && m_session_isValid;
}

QString OAICreateSessionRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateSessionRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_session.isSet()) {
        obj.insert(QString("session"), ::OpenAPI::toJsonValue(m_session));
    }
    return obj;
}

OAISession OAICreateSessionRequest::getSession() const {
    return m_session;
}
void OAICreateSessionRequest::setSession(const OAISession &session) {
    m_session = session;
    m_session_isSet = true;
}

bool OAICreateSessionRequest::is_session_Set() const{
    return m_session_isSet;
}

bool OAICreateSessionRequest::is_session_Valid() const{
    return m_session_isValid;
}

bool OAICreateSessionRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_session.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateSessionRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
