/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIType.h
 *
 * &#x60;Type&#x60; indicates the type of a Cloud Spanner value, as might be stored in a table cell or returned from an SQL query.
 */

#ifndef OAIType_H
#define OAIType_H

#include <QJsonObject>

#include "OAIStructType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStructType;

class OAIType : public OAIObject {
public:
    OAIType();
    OAIType(QString json);
    ~OAIType() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIType getArrayElementType() const;
    void setArrayElementType(const OAIType &array_element_type);
    bool is_array_element_type_Set() const;
    bool is_array_element_type_Valid() const;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    QString getProtoTypeFqn() const;
    void setProtoTypeFqn(const QString &proto_type_fqn);
    bool is_proto_type_fqn_Set() const;
    bool is_proto_type_fqn_Valid() const;

    OAIStructType getStructType() const;
    void setStructType(const OAIStructType &struct_type);
    bool is_struct_type_Set() const;
    bool is_struct_type_Valid() const;

    QString getTypeAnnotation() const;
    void setTypeAnnotation(const QString &type_annotation);
    bool is_type_annotation_Set() const;
    bool is_type_annotation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIType m_array_element_type;
    bool m_array_element_type_isSet;
    bool m_array_element_type_isValid;

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    QString m_proto_type_fqn;
    bool m_proto_type_fqn_isSet;
    bool m_proto_type_fqn_isValid;

    OAIStructType m_struct_type;
    bool m_struct_type_isSet;
    bool m_struct_type_isValid;

    QString m_type_annotation;
    bool m_type_annotation_isSet;
    bool m_type_annotation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIType)

#endif // OAIType_H
