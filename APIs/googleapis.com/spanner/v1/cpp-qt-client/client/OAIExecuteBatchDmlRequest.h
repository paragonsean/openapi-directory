/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExecuteBatchDmlRequest.h
 *
 * The request for ExecuteBatchDml.
 */

#ifndef OAIExecuteBatchDmlRequest_H
#define OAIExecuteBatchDmlRequest_H

#include <QJsonObject>

#include "OAIRequestOptions.h"
#include "OAIStatement.h"
#include "OAITransactionSelector.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRequestOptions;
class OAIStatement;
class OAITransactionSelector;

class OAIExecuteBatchDmlRequest : public OAIObject {
public:
    OAIExecuteBatchDmlRequest();
    OAIExecuteBatchDmlRequest(QString json);
    ~OAIExecuteBatchDmlRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRequestOptions getRequestOptions() const;
    void setRequestOptions(const OAIRequestOptions &request_options);
    bool is_request_options_Set() const;
    bool is_request_options_Valid() const;

    QString getSeqno() const;
    void setSeqno(const QString &seqno);
    bool is_seqno_Set() const;
    bool is_seqno_Valid() const;

    QList<OAIStatement> getStatements() const;
    void setStatements(const QList<OAIStatement> &statements);
    bool is_statements_Set() const;
    bool is_statements_Valid() const;

    OAITransactionSelector getTransaction() const;
    void setTransaction(const OAITransactionSelector &transaction);
    bool is_transaction_Set() const;
    bool is_transaction_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRequestOptions m_request_options;
    bool m_request_options_isSet;
    bool m_request_options_isValid;

    QString m_seqno;
    bool m_seqno_isSet;
    bool m_seqno_isValid;

    QList<OAIStatement> m_statements;
    bool m_statements_isSet;
    bool m_statements_isValid;

    OAITransactionSelector m_transaction;
    bool m_transaction_isSet;
    bool m_transaction_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExecuteBatchDmlRequest)

#endif // OAIExecuteBatchDmlRequest_H
