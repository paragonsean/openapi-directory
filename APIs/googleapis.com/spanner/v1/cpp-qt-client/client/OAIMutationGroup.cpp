/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMutationGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMutationGroup::OAIMutationGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMutationGroup::OAIMutationGroup() {
    this->initializeModel();
}

OAIMutationGroup::~OAIMutationGroup() {}

void OAIMutationGroup::initializeModel() {

    m_mutations_isSet = false;
    m_mutations_isValid = false;
}

void OAIMutationGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMutationGroup::fromJsonObject(QJsonObject json) {

    m_mutations_isValid = ::OpenAPI::fromJsonValue(m_mutations, json[QString("mutations")]);
    m_mutations_isSet = !json[QString("mutations")].isNull() && m_mutations_isValid;
}

QString OAIMutationGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMutationGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_mutations.size() > 0) {
        obj.insert(QString("mutations"), ::OpenAPI::toJsonValue(m_mutations));
    }
    return obj;
}

QList<OAIMutation> OAIMutationGroup::getMutations() const {
    return m_mutations;
}
void OAIMutationGroup::setMutations(const QList<OAIMutation> &mutations) {
    m_mutations = mutations;
    m_mutations_isSet = true;
}

bool OAIMutationGroup::is_mutations_Set() const{
    return m_mutations_isSet;
}

bool OAIMutationGroup::is_mutations_Valid() const{
    return m_mutations_isValid;
}

bool OAIMutationGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_mutations.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMutationGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
