/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlanNode.h
 *
 * Node information for nodes appearing in a QueryPlan.plan_nodes.
 */

#ifndef OAIPlanNode_H
#define OAIPlanNode_H

#include <QJsonObject>

#include "OAIChildLink.h"
#include "OAIShortRepresentation.h"
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChildLink;
class OAIShortRepresentation;

class OAIPlanNode : public OAIObject {
public:
    OAIPlanNode();
    OAIPlanNode(QString json);
    ~OAIPlanNode() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIChildLink> getChildLinks() const;
    void setChildLinks(const QList<OAIChildLink> &child_links);
    bool is_child_links_Set() const;
    bool is_child_links_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QMap<QString, QJsonValue> getExecutionStats() const;
    void setExecutionStats(const QMap<QString, QJsonValue> &execution_stats);
    bool is_execution_stats_Set() const;
    bool is_execution_stats_Valid() const;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QMap<QString, QJsonValue> getMetadata() const;
    void setMetadata(const QMap<QString, QJsonValue> &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    OAIShortRepresentation getShortRepresentation() const;
    void setShortRepresentation(const OAIShortRepresentation &short_representation);
    bool is_short_representation_Set() const;
    bool is_short_representation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIChildLink> m_child_links;
    bool m_child_links_isSet;
    bool m_child_links_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QMap<QString, QJsonValue> m_execution_stats;
    bool m_execution_stats_isSet;
    bool m_execution_stats_isValid;

    qint32 m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QMap<QString, QJsonValue> m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    OAIShortRepresentation m_short_representation;
    bool m_short_representation_isSet;
    bool m_short_representation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlanNode)

#endif // OAIPlanNode_H
