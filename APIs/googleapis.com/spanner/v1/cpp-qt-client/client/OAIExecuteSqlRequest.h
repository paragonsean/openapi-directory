/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExecuteSqlRequest.h
 *
 * The request for ExecuteSql and ExecuteStreamingSql.
 */

#ifndef OAIExecuteSqlRequest_H
#define OAIExecuteSqlRequest_H

#include <QJsonObject>

#include "OAIDirectedReadOptions.h"
#include "OAIQueryOptions.h"
#include "OAIRequestOptions.h"
#include "OAITransactionSelector.h"
#include "OAIType.h"
#include <QByteArray>
#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDirectedReadOptions;
class OAIType;
class OAIQueryOptions;
class OAIRequestOptions;
class OAITransactionSelector;

class OAIExecuteSqlRequest : public OAIObject {
public:
    OAIExecuteSqlRequest();
    OAIExecuteSqlRequest(QString json);
    ~OAIExecuteSqlRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDataBoostEnabled() const;
    void setDataBoostEnabled(const bool &data_boost_enabled);
    bool is_data_boost_enabled_Set() const;
    bool is_data_boost_enabled_Valid() const;

    OAIDirectedReadOptions getDirectedReadOptions() const;
    void setDirectedReadOptions(const OAIDirectedReadOptions &directed_read_options);
    bool is_directed_read_options_Set() const;
    bool is_directed_read_options_Valid() const;

    QMap<QString, OAIType> getParamTypes() const;
    void setParamTypes(const QMap<QString, OAIType> &param_types);
    bool is_param_types_Set() const;
    bool is_param_types_Valid() const;

    QMap<QString, QJsonValue> getParams() const;
    void setParams(const QMap<QString, QJsonValue> &params);
    bool is_params_Set() const;
    bool is_params_Valid() const;

    QByteArray getPartitionToken() const;
    void setPartitionToken(const QByteArray &partition_token);
    bool is_partition_token_Set() const;
    bool is_partition_token_Valid() const;

    QString getQueryMode() const;
    void setQueryMode(const QString &query_mode);
    bool is_query_mode_Set() const;
    bool is_query_mode_Valid() const;

    OAIQueryOptions getQueryOptions() const;
    void setQueryOptions(const OAIQueryOptions &query_options);
    bool is_query_options_Set() const;
    bool is_query_options_Valid() const;

    OAIRequestOptions getRequestOptions() const;
    void setRequestOptions(const OAIRequestOptions &request_options);
    bool is_request_options_Set() const;
    bool is_request_options_Valid() const;

    QByteArray getResumeToken() const;
    void setResumeToken(const QByteArray &resume_token);
    bool is_resume_token_Set() const;
    bool is_resume_token_Valid() const;

    QString getSeqno() const;
    void setSeqno(const QString &seqno);
    bool is_seqno_Set() const;
    bool is_seqno_Valid() const;

    QString getSql() const;
    void setSql(const QString &sql);
    bool is_sql_Set() const;
    bool is_sql_Valid() const;

    OAITransactionSelector getTransaction() const;
    void setTransaction(const OAITransactionSelector &transaction);
    bool is_transaction_Set() const;
    bool is_transaction_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_data_boost_enabled;
    bool m_data_boost_enabled_isSet;
    bool m_data_boost_enabled_isValid;

    OAIDirectedReadOptions m_directed_read_options;
    bool m_directed_read_options_isSet;
    bool m_directed_read_options_isValid;

    QMap<QString, OAIType> m_param_types;
    bool m_param_types_isSet;
    bool m_param_types_isValid;

    QMap<QString, QJsonValue> m_params;
    bool m_params_isSet;
    bool m_params_isValid;

    QByteArray m_partition_token;
    bool m_partition_token_isSet;
    bool m_partition_token_isValid;

    QString m_query_mode;
    bool m_query_mode_isSet;
    bool m_query_mode_isValid;

    OAIQueryOptions m_query_options;
    bool m_query_options_isSet;
    bool m_query_options_isValid;

    OAIRequestOptions m_request_options;
    bool m_request_options_isSet;
    bool m_request_options_isValid;

    QByteArray m_resume_token;
    bool m_resume_token_isSet;
    bool m_resume_token_isValid;

    QString m_seqno;
    bool m_seqno_isSet;
    bool m_seqno_isValid;

    QString m_sql;
    bool m_sql_isSet;
    bool m_sql_isValid;

    OAITransactionSelector m_transaction;
    bool m_transaction_isSet;
    bool m_transaction_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExecuteSqlRequest)

#endif // OAIExecuteSqlRequest_H
