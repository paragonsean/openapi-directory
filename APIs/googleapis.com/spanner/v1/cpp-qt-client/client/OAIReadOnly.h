/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReadOnly.h
 *
 * Message type to initiate a read-only transaction.
 */

#ifndef OAIReadOnly_H
#define OAIReadOnly_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIReadOnly : public OAIObject {
public:
    OAIReadOnly();
    OAIReadOnly(QString json);
    ~OAIReadOnly() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getExactStaleness() const;
    void setExactStaleness(const QString &exact_staleness);
    bool is_exact_staleness_Set() const;
    bool is_exact_staleness_Valid() const;

    QString getMaxStaleness() const;
    void setMaxStaleness(const QString &max_staleness);
    bool is_max_staleness_Set() const;
    bool is_max_staleness_Valid() const;

    QString getMinReadTimestamp() const;
    void setMinReadTimestamp(const QString &min_read_timestamp);
    bool is_min_read_timestamp_Set() const;
    bool is_min_read_timestamp_Valid() const;

    QString getReadTimestamp() const;
    void setReadTimestamp(const QString &read_timestamp);
    bool is_read_timestamp_Set() const;
    bool is_read_timestamp_Valid() const;

    bool isReturnReadTimestamp() const;
    void setReturnReadTimestamp(const bool &return_read_timestamp);
    bool is_return_read_timestamp_Set() const;
    bool is_return_read_timestamp_Valid() const;

    bool isStrong() const;
    void setStrong(const bool &strong);
    bool is_strong_Set() const;
    bool is_strong_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_exact_staleness;
    bool m_exact_staleness_isSet;
    bool m_exact_staleness_isValid;

    QString m_max_staleness;
    bool m_max_staleness_isSet;
    bool m_max_staleness_isValid;

    QString m_min_read_timestamp;
    bool m_min_read_timestamp_isSet;
    bool m_min_read_timestamp_isValid;

    QString m_read_timestamp;
    bool m_read_timestamp_isSet;
    bool m_read_timestamp_isValid;

    bool m_return_read_timestamp;
    bool m_return_read_timestamp_isSet;
    bool m_return_read_timestamp_isValid;

    bool m_strong;
    bool m_strong_isSet;
    bool m_strong_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReadOnly)

#endif // OAIReadOnly_H
