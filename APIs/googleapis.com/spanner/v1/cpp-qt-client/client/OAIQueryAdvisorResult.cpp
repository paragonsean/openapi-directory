/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQueryAdvisorResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQueryAdvisorResult::OAIQueryAdvisorResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQueryAdvisorResult::OAIQueryAdvisorResult() {
    this->initializeModel();
}

OAIQueryAdvisorResult::~OAIQueryAdvisorResult() {}

void OAIQueryAdvisorResult::initializeModel() {

    m_index_advice_isSet = false;
    m_index_advice_isValid = false;
}

void OAIQueryAdvisorResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIQueryAdvisorResult::fromJsonObject(QJsonObject json) {

    m_index_advice_isValid = ::OpenAPI::fromJsonValue(m_index_advice, json[QString("indexAdvice")]);
    m_index_advice_isSet = !json[QString("indexAdvice")].isNull() && m_index_advice_isValid;
}

QString OAIQueryAdvisorResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIQueryAdvisorResult::asJsonObject() const {
    QJsonObject obj;
    if (m_index_advice.size() > 0) {
        obj.insert(QString("indexAdvice"), ::OpenAPI::toJsonValue(m_index_advice));
    }
    return obj;
}

QList<OAIIndexAdvice> OAIQueryAdvisorResult::getIndexAdvice() const {
    return m_index_advice;
}
void OAIQueryAdvisorResult::setIndexAdvice(const QList<OAIIndexAdvice> &index_advice) {
    m_index_advice = index_advice;
    m_index_advice_isSet = true;
}

bool OAIQueryAdvisorResult::is_index_advice_Set() const{
    return m_index_advice_isSet;
}

bool OAIQueryAdvisorResult::is_index_advice_Valid() const{
    return m_index_advice_isValid;
}

bool OAIQueryAdvisorResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_index_advice.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIQueryAdvisorResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
