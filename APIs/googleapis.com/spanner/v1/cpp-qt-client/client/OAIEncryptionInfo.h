/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEncryptionInfo.h
 *
 * Encryption information for a Cloud Spanner database or backup.
 */

#ifndef OAIEncryptionInfo_H
#define OAIEncryptionInfo_H

#include <QJsonObject>

#include "OAIStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStatus;

class OAIEncryptionInfo : public OAIObject {
public:
    OAIEncryptionInfo();
    OAIEncryptionInfo(QString json);
    ~OAIEncryptionInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIStatus getEncryptionStatus() const;
    void setEncryptionStatus(const OAIStatus &encryption_status);
    bool is_encryption_status_Set() const;
    bool is_encryption_status_Valid() const;

    QString getEncryptionType() const;
    void setEncryptionType(const QString &encryption_type);
    bool is_encryption_type_Set() const;
    bool is_encryption_type_Valid() const;

    QString getKmsKeyVersion() const;
    void setKmsKeyVersion(const QString &kms_key_version);
    bool is_kms_key_version_Set() const;
    bool is_kms_key_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIStatus m_encryption_status;
    bool m_encryption_status_isSet;
    bool m_encryption_status_isValid;

    QString m_encryption_type;
    bool m_encryption_type_isSet;
    bool m_encryption_type_isValid;

    QString m_kms_key_version;
    bool m_kms_key_version_isSet;
    bool m_kms_key_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEncryptionInfo)

#endif // OAIEncryptionInfo_H
