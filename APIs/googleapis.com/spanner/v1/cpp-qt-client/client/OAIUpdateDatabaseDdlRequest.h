/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateDatabaseDdlRequest.h
 *
 * Enqueues the given DDL statements to be applied, in order but not necessarily all at once, to the database schema at some point (or points) in the future. The server checks that the statements are executable (syntactically valid, name tables that exist, etc.) before enqueueing them, but they may still fail upon later execution (e.g., if a statement from another batch of statements is applied first and it conflicts in some way, or if there is some data-related problem like a &#x60;NULL&#x60; value in a column to which &#x60;NOT NULL&#x60; would be added). If a statement fails, all subsequent statements in the batch are automatically cancelled. Each batch of statements is assigned a name which can be used with the Operations API to monitor progress. See the operation_id field for more details.
 */

#ifndef OAIUpdateDatabaseDdlRequest_H
#define OAIUpdateDatabaseDdlRequest_H

#include <QJsonObject>

#include <QByteArray>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateDatabaseDdlRequest : public OAIObject {
public:
    OAIUpdateDatabaseDdlRequest();
    OAIUpdateDatabaseDdlRequest(QString json);
    ~OAIUpdateDatabaseDdlRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getOperationId() const;
    void setOperationId(const QString &operation_id);
    bool is_operation_id_Set() const;
    bool is_operation_id_Valid() const;

    QByteArray getProtoDescriptors() const;
    void setProtoDescriptors(const QByteArray &proto_descriptors);
    bool is_proto_descriptors_Set() const;
    bool is_proto_descriptors_Valid() const;

    QList<QString> getStatements() const;
    void setStatements(const QList<QString> &statements);
    bool is_statements_Set() const;
    bool is_statements_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_operation_id;
    bool m_operation_id_isSet;
    bool m_operation_id_isValid;

    QByteArray m_proto_descriptors;
    bool m_proto_descriptors_isSet;
    bool m_proto_descriptors_isValid;

    QList<QString> m_statements;
    bool m_statements_isSet;
    bool m_statements_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateDatabaseDdlRequest)

#endif // OAIUpdateDatabaseDdlRequest_H
