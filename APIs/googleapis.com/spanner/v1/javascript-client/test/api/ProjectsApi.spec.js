/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudSpannerApi);
  }
}(this, function(expect, CloudSpannerApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudSpannerApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('spannerProjectsInstanceConfigOperationsList', function() {
      it('should call spannerProjectsInstanceConfigOperationsList successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstanceConfigOperationsList
        //instance.spannerProjectsInstanceConfigOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstanceConfigsCreate', function() {
      it('should call spannerProjectsInstanceConfigsCreate successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstanceConfigsCreate
        //instance.spannerProjectsInstanceConfigsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstanceConfigsList', function() {
      it('should call spannerProjectsInstanceConfigsList successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstanceConfigsList
        //instance.spannerProjectsInstanceConfigsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesBackupOperationsList', function() {
      it('should call spannerProjectsInstancesBackupOperationsList successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesBackupOperationsList
        //instance.spannerProjectsInstancesBackupOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesBackupsCopy', function() {
      it('should call spannerProjectsInstancesBackupsCopy successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesBackupsCopy
        //instance.spannerProjectsInstancesBackupsCopy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesBackupsCreate', function() {
      it('should call spannerProjectsInstancesBackupsCreate successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesBackupsCreate
        //instance.spannerProjectsInstancesBackupsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesBackupsList', function() {
      it('should call spannerProjectsInstancesBackupsList successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesBackupsList
        //instance.spannerProjectsInstancesBackupsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesCreate', function() {
      it('should call spannerProjectsInstancesCreate successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesCreate
        //instance.spannerProjectsInstancesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabaseOperationsList', function() {
      it('should call spannerProjectsInstancesDatabaseOperationsList successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabaseOperationsList
        //instance.spannerProjectsInstancesDatabaseOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesCreate', function() {
      it('should call spannerProjectsInstancesDatabasesCreate successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesCreate
        //instance.spannerProjectsInstancesDatabasesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesDatabaseRolesList', function() {
      it('should call spannerProjectsInstancesDatabasesDatabaseRolesList successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesDatabaseRolesList
        //instance.spannerProjectsInstancesDatabasesDatabaseRolesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesDatabaseRolesTestIamPermissions', function() {
      it('should call spannerProjectsInstancesDatabasesDatabaseRolesTestIamPermissions successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesDatabaseRolesTestIamPermissions
        //instance.spannerProjectsInstancesDatabasesDatabaseRolesTestIamPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesDropDatabase', function() {
      it('should call spannerProjectsInstancesDatabasesDropDatabase successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesDropDatabase
        //instance.spannerProjectsInstancesDatabasesDropDatabase(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesGetDdl', function() {
      it('should call spannerProjectsInstancesDatabasesGetDdl successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesGetDdl
        //instance.spannerProjectsInstancesDatabasesGetDdl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesGetIamPolicy', function() {
      it('should call spannerProjectsInstancesDatabasesGetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesGetIamPolicy
        //instance.spannerProjectsInstancesDatabasesGetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesGetScans', function() {
      it('should call spannerProjectsInstancesDatabasesGetScans successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesGetScans
        //instance.spannerProjectsInstancesDatabasesGetScans(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesList', function() {
      it('should call spannerProjectsInstancesDatabasesList successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesList
        //instance.spannerProjectsInstancesDatabasesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesPatch', function() {
      it('should call spannerProjectsInstancesDatabasesPatch successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesPatch
        //instance.spannerProjectsInstancesDatabasesPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesRestore', function() {
      it('should call spannerProjectsInstancesDatabasesRestore successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesRestore
        //instance.spannerProjectsInstancesDatabasesRestore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesSessionsBatchCreate', function() {
      it('should call spannerProjectsInstancesDatabasesSessionsBatchCreate successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesSessionsBatchCreate
        //instance.spannerProjectsInstancesDatabasesSessionsBatchCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesSessionsBatchWrite', function() {
      it('should call spannerProjectsInstancesDatabasesSessionsBatchWrite successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesSessionsBatchWrite
        //instance.spannerProjectsInstancesDatabasesSessionsBatchWrite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesSessionsBeginTransaction', function() {
      it('should call spannerProjectsInstancesDatabasesSessionsBeginTransaction successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesSessionsBeginTransaction
        //instance.spannerProjectsInstancesDatabasesSessionsBeginTransaction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesSessionsCommit', function() {
      it('should call spannerProjectsInstancesDatabasesSessionsCommit successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesSessionsCommit
        //instance.spannerProjectsInstancesDatabasesSessionsCommit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesSessionsCreate', function() {
      it('should call spannerProjectsInstancesDatabasesSessionsCreate successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesSessionsCreate
        //instance.spannerProjectsInstancesDatabasesSessionsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesSessionsExecuteBatchDml', function() {
      it('should call spannerProjectsInstancesDatabasesSessionsExecuteBatchDml successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesSessionsExecuteBatchDml
        //instance.spannerProjectsInstancesDatabasesSessionsExecuteBatchDml(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesSessionsExecuteSql', function() {
      it('should call spannerProjectsInstancesDatabasesSessionsExecuteSql successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesSessionsExecuteSql
        //instance.spannerProjectsInstancesDatabasesSessionsExecuteSql(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesSessionsExecuteStreamingSql', function() {
      it('should call spannerProjectsInstancesDatabasesSessionsExecuteStreamingSql successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesSessionsExecuteStreamingSql
        //instance.spannerProjectsInstancesDatabasesSessionsExecuteStreamingSql(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesSessionsList', function() {
      it('should call spannerProjectsInstancesDatabasesSessionsList successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesSessionsList
        //instance.spannerProjectsInstancesDatabasesSessionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesSessionsPartitionQuery', function() {
      it('should call spannerProjectsInstancesDatabasesSessionsPartitionQuery successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesSessionsPartitionQuery
        //instance.spannerProjectsInstancesDatabasesSessionsPartitionQuery(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesSessionsPartitionRead', function() {
      it('should call spannerProjectsInstancesDatabasesSessionsPartitionRead successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesSessionsPartitionRead
        //instance.spannerProjectsInstancesDatabasesSessionsPartitionRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesSessionsRead', function() {
      it('should call spannerProjectsInstancesDatabasesSessionsRead successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesSessionsRead
        //instance.spannerProjectsInstancesDatabasesSessionsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesSessionsRollback', function() {
      it('should call spannerProjectsInstancesDatabasesSessionsRollback successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesSessionsRollback
        //instance.spannerProjectsInstancesDatabasesSessionsRollback(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesSessionsStreamingRead', function() {
      it('should call spannerProjectsInstancesDatabasesSessionsStreamingRead successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesSessionsStreamingRead
        //instance.spannerProjectsInstancesDatabasesSessionsStreamingRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesSetIamPolicy', function() {
      it('should call spannerProjectsInstancesDatabasesSetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesSetIamPolicy
        //instance.spannerProjectsInstancesDatabasesSetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesDatabasesUpdateDdl', function() {
      it('should call spannerProjectsInstancesDatabasesUpdateDdl successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesDatabasesUpdateDdl
        //instance.spannerProjectsInstancesDatabasesUpdateDdl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesList', function() {
      it('should call spannerProjectsInstancesList successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesList
        //instance.spannerProjectsInstancesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesOperationsCancel', function() {
      it('should call spannerProjectsInstancesOperationsCancel successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesOperationsCancel
        //instance.spannerProjectsInstancesOperationsCancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesOperationsDelete', function() {
      it('should call spannerProjectsInstancesOperationsDelete successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesOperationsDelete
        //instance.spannerProjectsInstancesOperationsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spannerProjectsInstancesOperationsList', function() {
      it('should call spannerProjectsInstancesOperationsList successfully', function(done) {
        //uncomment below and update the code to test spannerProjectsInstancesOperationsList
        //instance.spannerProjectsInstancesOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
