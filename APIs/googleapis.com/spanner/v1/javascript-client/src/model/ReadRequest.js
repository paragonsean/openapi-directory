/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DirectedReadOptions from './DirectedReadOptions';
import KeySet from './KeySet';
import RequestOptions from './RequestOptions';
import TransactionSelector from './TransactionSelector';

/**
 * The ReadRequest model module.
 * @module model/ReadRequest
 * @version v1
 */
class ReadRequest {
    /**
     * Constructs a new <code>ReadRequest</code>.
     * The request for Read and StreamingRead.
     * @alias module:model/ReadRequest
     */
    constructor() { 
        
        ReadRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReadRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReadRequest} obj Optional instance to populate.
     * @return {module:model/ReadRequest} The populated <code>ReadRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReadRequest();

            if (data.hasOwnProperty('columns')) {
                obj['columns'] = ApiClient.convertToType(data['columns'], ['String']);
            }
            if (data.hasOwnProperty('dataBoostEnabled')) {
                obj['dataBoostEnabled'] = ApiClient.convertToType(data['dataBoostEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('directedReadOptions')) {
                obj['directedReadOptions'] = DirectedReadOptions.constructFromObject(data['directedReadOptions']);
            }
            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'String');
            }
            if (data.hasOwnProperty('keySet')) {
                obj['keySet'] = KeySet.constructFromObject(data['keySet']);
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'String');
            }
            if (data.hasOwnProperty('partitionToken')) {
                obj['partitionToken'] = ApiClient.convertToType(data['partitionToken'], 'Blob');
            }
            if (data.hasOwnProperty('requestOptions')) {
                obj['requestOptions'] = RequestOptions.constructFromObject(data['requestOptions']);
            }
            if (data.hasOwnProperty('resumeToken')) {
                obj['resumeToken'] = ApiClient.convertToType(data['resumeToken'], 'Blob');
            }
            if (data.hasOwnProperty('table')) {
                obj['table'] = ApiClient.convertToType(data['table'], 'String');
            }
            if (data.hasOwnProperty('transaction')) {
                obj['transaction'] = TransactionSelector.constructFromObject(data['transaction']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReadRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReadRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['columns'])) {
            throw new Error("Expected the field `columns` to be an array in the JSON data but got " + data['columns']);
        }
        // validate the optional field `directedReadOptions`
        if (data['directedReadOptions']) { // data not null
          DirectedReadOptions.validateJSON(data['directedReadOptions']);
        }
        // ensure the json data is a string
        if (data['index'] && !(typeof data['index'] === 'string' || data['index'] instanceof String)) {
            throw new Error("Expected the field `index` to be a primitive type in the JSON string but got " + data['index']);
        }
        // validate the optional field `keySet`
        if (data['keySet']) { // data not null
          KeySet.validateJSON(data['keySet']);
        }
        // ensure the json data is a string
        if (data['limit'] && !(typeof data['limit'] === 'string' || data['limit'] instanceof String)) {
            throw new Error("Expected the field `limit` to be a primitive type in the JSON string but got " + data['limit']);
        }
        // validate the optional field `requestOptions`
        if (data['requestOptions']) { // data not null
          RequestOptions.validateJSON(data['requestOptions']);
        }
        // ensure the json data is a string
        if (data['table'] && !(typeof data['table'] === 'string' || data['table'] instanceof String)) {
            throw new Error("Expected the field `table` to be a primitive type in the JSON string but got " + data['table']);
        }
        // validate the optional field `transaction`
        if (data['transaction']) { // data not null
          TransactionSelector.validateJSON(data['transaction']);
        }

        return true;
    }


}



/**
 * Required. The columns of table to be returned for each row matching this request.
 * @member {Array.<String>} columns
 */
ReadRequest.prototype['columns'] = undefined;

/**
 * If this is for a partitioned read and this field is set to `true`, the request is executed with Spanner Data Boost independent compute resources. If the field is set to `true` but the request does not set `partition_token`, the API returns an `INVALID_ARGUMENT` error.
 * @member {Boolean} dataBoostEnabled
 */
ReadRequest.prototype['dataBoostEnabled'] = undefined;

/**
 * @member {module:model/DirectedReadOptions} directedReadOptions
 */
ReadRequest.prototype['directedReadOptions'] = undefined;

/**
 * If non-empty, the name of an index on table. This index is used instead of the table primary key when interpreting key_set and sorting result rows. See key_set for further information.
 * @member {String} index
 */
ReadRequest.prototype['index'] = undefined;

/**
 * @member {module:model/KeySet} keySet
 */
ReadRequest.prototype['keySet'] = undefined;

/**
 * If greater than zero, only the first `limit` rows are yielded. If `limit` is zero, the default is no limit. A limit cannot be specified if `partition_token` is set.
 * @member {String} limit
 */
ReadRequest.prototype['limit'] = undefined;

/**
 * If present, results will be restricted to the specified partition previously created using PartitionRead(). There must be an exact match for the values of fields common to this message and the PartitionReadRequest message used to create this partition_token.
 * @member {Blob} partitionToken
 */
ReadRequest.prototype['partitionToken'] = undefined;

/**
 * @member {module:model/RequestOptions} requestOptions
 */
ReadRequest.prototype['requestOptions'] = undefined;

/**
 * If this request is resuming a previously interrupted read, `resume_token` should be copied from the last PartialResultSet yielded before the interruption. Doing this enables the new read to resume where the last read left off. The rest of the request parameters must exactly match the request that yielded this token.
 * @member {Blob} resumeToken
 */
ReadRequest.prototype['resumeToken'] = undefined;

/**
 * Required. The name of the table in the database to be read.
 * @member {String} table
 */
ReadRequest.prototype['table'] = undefined;

/**
 * @member {module:model/TransactionSelector} transaction
 */
ReadRequest.prototype['transaction'] = undefined;






export default ReadRequest;

