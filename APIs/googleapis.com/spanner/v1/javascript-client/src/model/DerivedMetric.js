/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LocalizedString from './LocalizedString';

/**
 * The DerivedMetric model module.
 * @module model/DerivedMetric
 * @version v1
 */
class DerivedMetric {
    /**
     * Constructs a new <code>DerivedMetric</code>.
     * A message representing a derived metric.
     * @alias module:model/DerivedMetric
     */
    constructor() { 
        
        DerivedMetric.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DerivedMetric</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DerivedMetric} obj Optional instance to populate.
     * @return {module:model/DerivedMetric} The populated <code>DerivedMetric</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DerivedMetric();

            if (data.hasOwnProperty('denominator')) {
                obj['denominator'] = LocalizedString.constructFromObject(data['denominator']);
            }
            if (data.hasOwnProperty('numerator')) {
                obj['numerator'] = LocalizedString.constructFromObject(data['numerator']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DerivedMetric</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DerivedMetric</code>.
     */
    static validateJSON(data) {
        // validate the optional field `denominator`
        if (data['denominator']) { // data not null
          LocalizedString.validateJSON(data['denominator']);
        }
        // validate the optional field `numerator`
        if (data['numerator']) { // data not null
          LocalizedString.validateJSON(data['numerator']);
        }

        return true;
    }


}



/**
 * @member {module:model/LocalizedString} denominator
 */
DerivedMetric.prototype['denominator'] = undefined;

/**
 * @member {module:model/LocalizedString} numerator
 */
DerivedMetric.prototype['numerator'] = undefined;






export default DerivedMetric;

