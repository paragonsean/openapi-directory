/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VisualizationData from './VisualizationData';

/**
 * The ScanData model module.
 * @module model/ScanData
 * @version v1
 */
class ScanData {
    /**
     * Constructs a new <code>ScanData</code>.
     * ScanData contains Cloud Key Visualizer scan data used by the caller to construct a visualization.
     * @alias module:model/ScanData
     */
    constructor() { 
        
        ScanData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ScanData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScanData} obj Optional instance to populate.
     * @return {module:model/ScanData} The populated <code>ScanData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScanData();

            if (data.hasOwnProperty('data')) {
                obj['data'] = VisualizationData.constructFromObject(data['data']);
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScanData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScanData</code>.
     */
    static validateJSON(data) {
        // validate the optional field `data`
        if (data['data']) { // data not null
          VisualizationData.validateJSON(data['data']);
        }
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }

        return true;
    }


}



/**
 * @member {module:model/VisualizationData} data
 */
ScanData.prototype['data'] = undefined;

/**
 * The upper bound for when the contained data is defined.
 * @member {String} endTime
 */
ScanData.prototype['endTime'] = undefined;

/**
 * A range of time (inclusive) for when the contained data is defined. The lower bound for when the contained data is defined.
 * @member {String} startTime
 */
ScanData.prototype['startTime'] = undefined;






export default ScanData;

