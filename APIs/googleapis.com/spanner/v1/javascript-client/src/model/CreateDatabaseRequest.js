/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EncryptionConfig from './EncryptionConfig';

/**
 * The CreateDatabaseRequest model module.
 * @module model/CreateDatabaseRequest
 * @version v1
 */
class CreateDatabaseRequest {
    /**
     * Constructs a new <code>CreateDatabaseRequest</code>.
     * The request for CreateDatabase.
     * @alias module:model/CreateDatabaseRequest
     */
    constructor() { 
        
        CreateDatabaseRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateDatabaseRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateDatabaseRequest} obj Optional instance to populate.
     * @return {module:model/CreateDatabaseRequest} The populated <code>CreateDatabaseRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateDatabaseRequest();

            if (data.hasOwnProperty('createStatement')) {
                obj['createStatement'] = ApiClient.convertToType(data['createStatement'], 'String');
            }
            if (data.hasOwnProperty('databaseDialect')) {
                obj['databaseDialect'] = ApiClient.convertToType(data['databaseDialect'], 'String');
            }
            if (data.hasOwnProperty('encryptionConfig')) {
                obj['encryptionConfig'] = EncryptionConfig.constructFromObject(data['encryptionConfig']);
            }
            if (data.hasOwnProperty('extraStatements')) {
                obj['extraStatements'] = ApiClient.convertToType(data['extraStatements'], ['String']);
            }
            if (data.hasOwnProperty('protoDescriptors')) {
                obj['protoDescriptors'] = ApiClient.convertToType(data['protoDescriptors'], 'Blob');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateDatabaseRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateDatabaseRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createStatement'] && !(typeof data['createStatement'] === 'string' || data['createStatement'] instanceof String)) {
            throw new Error("Expected the field `createStatement` to be a primitive type in the JSON string but got " + data['createStatement']);
        }
        // ensure the json data is a string
        if (data['databaseDialect'] && !(typeof data['databaseDialect'] === 'string' || data['databaseDialect'] instanceof String)) {
            throw new Error("Expected the field `databaseDialect` to be a primitive type in the JSON string but got " + data['databaseDialect']);
        }
        // validate the optional field `encryptionConfig`
        if (data['encryptionConfig']) { // data not null
          EncryptionConfig.validateJSON(data['encryptionConfig']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['extraStatements'])) {
            throw new Error("Expected the field `extraStatements` to be an array in the JSON data but got " + data['extraStatements']);
        }

        return true;
    }


}



/**
 * Required. A `CREATE DATABASE` statement, which specifies the ID of the new database. The database ID must conform to the regular expression `a-z*[a-z0-9]` and be between 2 and 30 characters in length. If the database ID is a reserved word or if it contains a hyphen, the database ID must be enclosed in backticks (`` ` ``).
 * @member {String} createStatement
 */
CreateDatabaseRequest.prototype['createStatement'] = undefined;

/**
 * Optional. The dialect of the Cloud Spanner Database.
 * @member {module:model/CreateDatabaseRequest.DatabaseDialectEnum} databaseDialect
 */
CreateDatabaseRequest.prototype['databaseDialect'] = undefined;

/**
 * @member {module:model/EncryptionConfig} encryptionConfig
 */
CreateDatabaseRequest.prototype['encryptionConfig'] = undefined;

/**
 * Optional. A list of DDL statements to run inside the newly created database. Statements can create tables, indexes, etc. These statements execute atomically with the creation of the database: if there is an error in any statement, the database is not created.
 * @member {Array.<String>} extraStatements
 */
CreateDatabaseRequest.prototype['extraStatements'] = undefined;

/**
 * Optional. Proto descriptors used by CREATE/ALTER PROTO BUNDLE statements in 'extra_statements' above. Contains a protobuf-serialized [google.protobuf.FileDescriptorSet](https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/descriptor.proto). To generate it, [install](https://grpc.io/docs/protoc-installation/) and run `protoc` with --include_imports and --descriptor_set_out. For example, to generate for moon/shot/app.proto, run ``` $protoc --proto_path=/app_path --proto_path=/lib_path \\ --include_imports \\ --descriptor_set_out=descriptors.data \\ moon/shot/app.proto ``` For more details, see protobuffer [self description](https://developers.google.com/protocol-buffers/docs/techniques#self-description).
 * @member {Blob} protoDescriptors
 */
CreateDatabaseRequest.prototype['protoDescriptors'] = undefined;





/**
 * Allowed values for the <code>databaseDialect</code> property.
 * @enum {String}
 * @readonly
 */
CreateDatabaseRequest['DatabaseDialectEnum'] = {

    /**
     * value: "DATABASE_DIALECT_UNSPECIFIED"
     * @const
     */
    "DATABASE_DIALECT_UNSPECIFIED": "DATABASE_DIALECT_UNSPECIFIED",

    /**
     * value: "GOOGLE_STANDARD_SQL"
     * @const
     */
    "GOOGLE_STANDARD_SQL": "GOOGLE_STANDARD_SQL",

    /**
     * value: "POSTGRESQL"
     * @const
     */
    "POSTGRESQL": "POSTGRESQL"
};



export default CreateDatabaseRequest;

