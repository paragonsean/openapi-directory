/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MutationGroup from './MutationGroup';
import RequestOptions from './RequestOptions';

/**
 * The BatchWriteRequest model module.
 * @module model/BatchWriteRequest
 * @version v1
 */
class BatchWriteRequest {
    /**
     * Constructs a new <code>BatchWriteRequest</code>.
     * The request for BatchWrite.
     * @alias module:model/BatchWriteRequest
     */
    constructor() { 
        
        BatchWriteRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BatchWriteRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchWriteRequest} obj Optional instance to populate.
     * @return {module:model/BatchWriteRequest} The populated <code>BatchWriteRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchWriteRequest();

            if (data.hasOwnProperty('mutationGroups')) {
                obj['mutationGroups'] = ApiClient.convertToType(data['mutationGroups'], [MutationGroup]);
            }
            if (data.hasOwnProperty('requestOptions')) {
                obj['requestOptions'] = RequestOptions.constructFromObject(data['requestOptions']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchWriteRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchWriteRequest</code>.
     */
    static validateJSON(data) {
        if (data['mutationGroups']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['mutationGroups'])) {
                throw new Error("Expected the field `mutationGroups` to be an array in the JSON data but got " + data['mutationGroups']);
            }
            // validate the optional field `mutationGroups` (array)
            for (const item of data['mutationGroups']) {
                MutationGroup.validateJSON(item);
            };
        }
        // validate the optional field `requestOptions`
        if (data['requestOptions']) { // data not null
          RequestOptions.validateJSON(data['requestOptions']);
        }

        return true;
    }


}



/**
 * Required. The groups of mutations to be applied.
 * @member {Array.<module:model/MutationGroup>} mutationGroups
 */
BatchWriteRequest.prototype['mutationGroups'] = undefined;

/**
 * @member {module:model/RequestOptions} requestOptions
 */
BatchWriteRequest.prototype['requestOptions'] = undefined;






export default BatchWriteRequest;

