/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AutoscalingLimits model module.
 * @module model/AutoscalingLimits
 * @version v1
 */
class AutoscalingLimits {
    /**
     * Constructs a new <code>AutoscalingLimits</code>.
     * The autoscaling limits for the instance. Users can define the minimum and maximum compute capacity allocated to the instance, and the autoscaler will only scale within that range. Users can either use nodes or processing units to specify the limits, but should use the same unit to set both the min_limit and max_limit.
     * @alias module:model/AutoscalingLimits
     */
    constructor() { 
        
        AutoscalingLimits.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AutoscalingLimits</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutoscalingLimits} obj Optional instance to populate.
     * @return {module:model/AutoscalingLimits} The populated <code>AutoscalingLimits</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutoscalingLimits();

            if (data.hasOwnProperty('maxNodes')) {
                obj['maxNodes'] = ApiClient.convertToType(data['maxNodes'], 'Number');
            }
            if (data.hasOwnProperty('maxProcessingUnits')) {
                obj['maxProcessingUnits'] = ApiClient.convertToType(data['maxProcessingUnits'], 'Number');
            }
            if (data.hasOwnProperty('minNodes')) {
                obj['minNodes'] = ApiClient.convertToType(data['minNodes'], 'Number');
            }
            if (data.hasOwnProperty('minProcessingUnits')) {
                obj['minProcessingUnits'] = ApiClient.convertToType(data['minProcessingUnits'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AutoscalingLimits</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AutoscalingLimits</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Maximum number of nodes allocated to the instance. If set, this number should be greater than or equal to min_nodes.
 * @member {Number} maxNodes
 */
AutoscalingLimits.prototype['maxNodes'] = undefined;

/**
 * Maximum number of processing units allocated to the instance. If set, this number should be multiples of 1000 and be greater than or equal to min_processing_units.
 * @member {Number} maxProcessingUnits
 */
AutoscalingLimits.prototype['maxProcessingUnits'] = undefined;

/**
 * Minimum number of nodes allocated to the instance. If set, this number should be greater than or equal to 1.
 * @member {Number} minNodes
 */
AutoscalingLimits.prototype['minNodes'] = undefined;

/**
 * Minimum number of processing units allocated to the instance. If set, this number should be multiples of 1000.
 * @member {Number} minProcessingUnits
 */
AutoscalingLimits.prototype['minProcessingUnits'] = undefined;






export default AutoscalingLimits;

