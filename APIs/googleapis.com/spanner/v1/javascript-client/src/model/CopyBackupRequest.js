/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CopyBackupEncryptionConfig from './CopyBackupEncryptionConfig';

/**
 * The CopyBackupRequest model module.
 * @module model/CopyBackupRequest
 * @version v1
 */
class CopyBackupRequest {
    /**
     * Constructs a new <code>CopyBackupRequest</code>.
     * The request for CopyBackup.
     * @alias module:model/CopyBackupRequest
     */
    constructor() { 
        
        CopyBackupRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CopyBackupRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CopyBackupRequest} obj Optional instance to populate.
     * @return {module:model/CopyBackupRequest} The populated <code>CopyBackupRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CopyBackupRequest();

            if (data.hasOwnProperty('backupId')) {
                obj['backupId'] = ApiClient.convertToType(data['backupId'], 'String');
            }
            if (data.hasOwnProperty('encryptionConfig')) {
                obj['encryptionConfig'] = CopyBackupEncryptionConfig.constructFromObject(data['encryptionConfig']);
            }
            if (data.hasOwnProperty('expireTime')) {
                obj['expireTime'] = ApiClient.convertToType(data['expireTime'], 'String');
            }
            if (data.hasOwnProperty('sourceBackup')) {
                obj['sourceBackup'] = ApiClient.convertToType(data['sourceBackup'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CopyBackupRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CopyBackupRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['backupId'] && !(typeof data['backupId'] === 'string' || data['backupId'] instanceof String)) {
            throw new Error("Expected the field `backupId` to be a primitive type in the JSON string but got " + data['backupId']);
        }
        // validate the optional field `encryptionConfig`
        if (data['encryptionConfig']) { // data not null
          CopyBackupEncryptionConfig.validateJSON(data['encryptionConfig']);
        }
        // ensure the json data is a string
        if (data['expireTime'] && !(typeof data['expireTime'] === 'string' || data['expireTime'] instanceof String)) {
            throw new Error("Expected the field `expireTime` to be a primitive type in the JSON string but got " + data['expireTime']);
        }
        // ensure the json data is a string
        if (data['sourceBackup'] && !(typeof data['sourceBackup'] === 'string' || data['sourceBackup'] instanceof String)) {
            throw new Error("Expected the field `sourceBackup` to be a primitive type in the JSON string but got " + data['sourceBackup']);
        }

        return true;
    }


}



/**
 * Required. The id of the backup copy. The `backup_id` appended to `parent` forms the full backup_uri of the form `projects//instances//backups/`.
 * @member {String} backupId
 */
CopyBackupRequest.prototype['backupId'] = undefined;

/**
 * @member {module:model/CopyBackupEncryptionConfig} encryptionConfig
 */
CopyBackupRequest.prototype['encryptionConfig'] = undefined;

/**
 * Required. The expiration time of the backup in microsecond granularity. The expiration time must be at least 6 hours and at most 366 days from the `create_time` of the source backup. Once the `expire_time` has passed, the backup is eligible to be automatically deleted by Cloud Spanner to free the resources used by the backup.
 * @member {String} expireTime
 */
CopyBackupRequest.prototype['expireTime'] = undefined;

/**
 * Required. The source backup to be copied. The source backup needs to be in READY state for it to be copied. Once CopyBackup is in progress, the source backup cannot be deleted or cleaned up on expiration until CopyBackup is finished. Values are of the form: `projects//instances//backups/`.
 * @member {String} sourceBackup
 */
CopyBackupRequest.prototype['sourceBackup'] = undefined;






export default CopyBackupRequest;

