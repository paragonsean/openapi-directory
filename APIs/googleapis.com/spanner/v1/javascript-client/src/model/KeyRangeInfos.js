/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import KeyRangeInfo from './KeyRangeInfo';

/**
 * The KeyRangeInfos model module.
 * @module model/KeyRangeInfos
 * @version v1
 */
class KeyRangeInfos {
    /**
     * Constructs a new <code>KeyRangeInfos</code>.
     * A message representing a list of specific information for multiple key ranges.
     * @alias module:model/KeyRangeInfos
     */
    constructor() { 
        
        KeyRangeInfos.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>KeyRangeInfos</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/KeyRangeInfos} obj Optional instance to populate.
     * @return {module:model/KeyRangeInfos} The populated <code>KeyRangeInfos</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new KeyRangeInfos();

            if (data.hasOwnProperty('infos')) {
                obj['infos'] = ApiClient.convertToType(data['infos'], [KeyRangeInfo]);
            }
            if (data.hasOwnProperty('totalSize')) {
                obj['totalSize'] = ApiClient.convertToType(data['totalSize'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>KeyRangeInfos</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>KeyRangeInfos</code>.
     */
    static validateJSON(data) {
        if (data['infos']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['infos'])) {
                throw new Error("Expected the field `infos` to be an array in the JSON data but got " + data['infos']);
            }
            // validate the optional field `infos` (array)
            for (const item of data['infos']) {
                KeyRangeInfo.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The list individual KeyRangeInfos.
 * @member {Array.<module:model/KeyRangeInfo>} infos
 */
KeyRangeInfos.prototype['infos'] = undefined;

/**
 * The total size of the list of all KeyRangeInfos. This may be larger than the number of repeated messages above. If that is the case, this number may be used to determine how many are not being shown.
 * @member {Number} totalSize
 */
KeyRangeInfos.prototype['totalSize'] = undefined;






export default KeyRangeInfos;

