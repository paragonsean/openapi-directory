/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CommitStats model module.
 * @module model/CommitStats
 * @version v1
 */
class CommitStats {
    /**
     * Constructs a new <code>CommitStats</code>.
     * Additional statistics about a commit.
     * @alias module:model/CommitStats
     */
    constructor() { 
        
        CommitStats.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CommitStats</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CommitStats} obj Optional instance to populate.
     * @return {module:model/CommitStats} The populated <code>CommitStats</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CommitStats();

            if (data.hasOwnProperty('mutationCount')) {
                obj['mutationCount'] = ApiClient.convertToType(data['mutationCount'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CommitStats</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CommitStats</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['mutationCount'] && !(typeof data['mutationCount'] === 'string' || data['mutationCount'] instanceof String)) {
            throw new Error("Expected the field `mutationCount` to be a primitive type in the JSON string but got " + data['mutationCount']);
        }

        return true;
    }


}



/**
 * The total number of mutations for the transaction. Knowing the `mutation_count` value can help you maximize the number of mutations in a transaction and minimize the number of API round trips. You can also monitor this value to prevent transactions from exceeding the system [limit](https://cloud.google.com/spanner/quotas#limits_for_creating_reading_updating_and_deleting_data). If the number of mutations exceeds the limit, the server returns [INVALID_ARGUMENT](https://cloud.google.com/spanner/docs/reference/rest/v1/Code#ENUM_VALUES.INVALID_ARGUMENT).
 * @member {String} mutationCount
 */
CommitStats.prototype['mutationCount'] = undefined;






export default CommitStats;

