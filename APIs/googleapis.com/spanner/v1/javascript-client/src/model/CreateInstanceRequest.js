/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Instance from './Instance';

/**
 * The CreateInstanceRequest model module.
 * @module model/CreateInstanceRequest
 * @version v1
 */
class CreateInstanceRequest {
    /**
     * Constructs a new <code>CreateInstanceRequest</code>.
     * The request for CreateInstance.
     * @alias module:model/CreateInstanceRequest
     */
    constructor() { 
        
        CreateInstanceRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateInstanceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateInstanceRequest} obj Optional instance to populate.
     * @return {module:model/CreateInstanceRequest} The populated <code>CreateInstanceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateInstanceRequest();

            if (data.hasOwnProperty('instance')) {
                obj['instance'] = Instance.constructFromObject(data['instance']);
            }
            if (data.hasOwnProperty('instanceId')) {
                obj['instanceId'] = ApiClient.convertToType(data['instanceId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateInstanceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateInstanceRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `instance`
        if (data['instance']) { // data not null
          Instance.validateJSON(data['instance']);
        }
        // ensure the json data is a string
        if (data['instanceId'] && !(typeof data['instanceId'] === 'string' || data['instanceId'] instanceof String)) {
            throw new Error("Expected the field `instanceId` to be a primitive type in the JSON string but got " + data['instanceId']);
        }

        return true;
    }


}



/**
 * @member {module:model/Instance} instance
 */
CreateInstanceRequest.prototype['instance'] = undefined;

/**
 * Required. The ID of the instance to create. Valid identifiers are of the form `a-z*[a-z0-9]` and must be between 2 and 64 characters in length.
 * @member {String} instanceId
 */
CreateInstanceRequest.prototype['instanceId'] = undefined;






export default CreateInstanceRequest;

