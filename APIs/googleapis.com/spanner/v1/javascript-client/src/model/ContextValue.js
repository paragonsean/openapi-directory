/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LocalizedString from './LocalizedString';

/**
 * The ContextValue model module.
 * @module model/ContextValue
 * @version v1
 */
class ContextValue {
    /**
     * Constructs a new <code>ContextValue</code>.
     * A message representing context for a KeyRangeInfo, including a label, value, unit, and severity.
     * @alias module:model/ContextValue
     */
    constructor() { 
        
        ContextValue.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContextValue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContextValue} obj Optional instance to populate.
     * @return {module:model/ContextValue} The populated <code>ContextValue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContextValue();

            if (data.hasOwnProperty('label')) {
                obj['label'] = LocalizedString.constructFromObject(data['label']);
            }
            if (data.hasOwnProperty('severity')) {
                obj['severity'] = ApiClient.convertToType(data['severity'], 'String');
            }
            if (data.hasOwnProperty('unit')) {
                obj['unit'] = ApiClient.convertToType(data['unit'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContextValue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContextValue</code>.
     */
    static validateJSON(data) {
        // validate the optional field `label`
        if (data['label']) { // data not null
          LocalizedString.validateJSON(data['label']);
        }
        // ensure the json data is a string
        if (data['severity'] && !(typeof data['severity'] === 'string' || data['severity'] instanceof String)) {
            throw new Error("Expected the field `severity` to be a primitive type in the JSON string but got " + data['severity']);
        }
        // ensure the json data is a string
        if (data['unit'] && !(typeof data['unit'] === 'string' || data['unit'] instanceof String)) {
            throw new Error("Expected the field `unit` to be a primitive type in the JSON string but got " + data['unit']);
        }

        return true;
    }


}



/**
 * @member {module:model/LocalizedString} label
 */
ContextValue.prototype['label'] = undefined;

/**
 * The severity of this context.
 * @member {module:model/ContextValue.SeverityEnum} severity
 */
ContextValue.prototype['severity'] = undefined;

/**
 * The unit of the context value.
 * @member {String} unit
 */
ContextValue.prototype['unit'] = undefined;

/**
 * The value for the context.
 * @member {Number} value
 */
ContextValue.prototype['value'] = undefined;





/**
 * Allowed values for the <code>severity</code> property.
 * @enum {String}
 * @readonly
 */
ContextValue['SeverityEnum'] = {

    /**
     * value: "SEVERITY_UNSPECIFIED"
     * @const
     */
    "SEVERITY_UNSPECIFIED": "SEVERITY_UNSPECIFIED",

    /**
     * value: "INFO"
     * @const
     */
    "INFO": "INFO",

    /**
     * value: "WARNING"
     * @const
     */
    "WARNING": "WARNING",

    /**
     * value: "ERROR"
     * @const
     */
    "ERROR": "ERROR",

    /**
     * value: "FATAL"
     * @const
     */
    "FATAL": "FATAL"
};



export default ContextValue;

