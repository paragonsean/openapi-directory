/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CommitStats from './CommitStats';

/**
 * The CommitResponse model module.
 * @module model/CommitResponse
 * @version v1
 */
class CommitResponse {
    /**
     * Constructs a new <code>CommitResponse</code>.
     * The response for Commit.
     * @alias module:model/CommitResponse
     */
    constructor() { 
        
        CommitResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CommitResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CommitResponse} obj Optional instance to populate.
     * @return {module:model/CommitResponse} The populated <code>CommitResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CommitResponse();

            if (data.hasOwnProperty('commitStats')) {
                obj['commitStats'] = CommitStats.constructFromObject(data['commitStats']);
            }
            if (data.hasOwnProperty('commitTimestamp')) {
                obj['commitTimestamp'] = ApiClient.convertToType(data['commitTimestamp'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CommitResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CommitResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `commitStats`
        if (data['commitStats']) { // data not null
          CommitStats.validateJSON(data['commitStats']);
        }
        // ensure the json data is a string
        if (data['commitTimestamp'] && !(typeof data['commitTimestamp'] === 'string' || data['commitTimestamp'] instanceof String)) {
            throw new Error("Expected the field `commitTimestamp` to be a primitive type in the JSON string but got " + data['commitTimestamp']);
        }

        return true;
    }


}



/**
 * @member {module:model/CommitStats} commitStats
 */
CommitResponse.prototype['commitStats'] = undefined;

/**
 * The Cloud Spanner timestamp at which the transaction committed.
 * @member {String} commitTimestamp
 */
CommitResponse.prototype['commitTimestamp'] = undefined;






export default CommitResponse;

