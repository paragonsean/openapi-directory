/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RequestOptions model module.
 * @module model/RequestOptions
 * @version v1
 */
class RequestOptions {
    /**
     * Constructs a new <code>RequestOptions</code>.
     * Common request options for various APIs.
     * @alias module:model/RequestOptions
     */
    constructor() { 
        
        RequestOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RequestOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RequestOptions} obj Optional instance to populate.
     * @return {module:model/RequestOptions} The populated <code>RequestOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RequestOptions();

            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'String');
            }
            if (data.hasOwnProperty('requestTag')) {
                obj['requestTag'] = ApiClient.convertToType(data['requestTag'], 'String');
            }
            if (data.hasOwnProperty('transactionTag')) {
                obj['transactionTag'] = ApiClient.convertToType(data['transactionTag'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RequestOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RequestOptions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['priority'] && !(typeof data['priority'] === 'string' || data['priority'] instanceof String)) {
            throw new Error("Expected the field `priority` to be a primitive type in the JSON string but got " + data['priority']);
        }
        // ensure the json data is a string
        if (data['requestTag'] && !(typeof data['requestTag'] === 'string' || data['requestTag'] instanceof String)) {
            throw new Error("Expected the field `requestTag` to be a primitive type in the JSON string but got " + data['requestTag']);
        }
        // ensure the json data is a string
        if (data['transactionTag'] && !(typeof data['transactionTag'] === 'string' || data['transactionTag'] instanceof String)) {
            throw new Error("Expected the field `transactionTag` to be a primitive type in the JSON string but got " + data['transactionTag']);
        }

        return true;
    }


}



/**
 * Priority for the request.
 * @member {module:model/RequestOptions.PriorityEnum} priority
 */
RequestOptions.prototype['priority'] = undefined;

/**
 * A per-request tag which can be applied to queries or reads, used for statistics collection. Both request_tag and transaction_tag can be specified for a read or query that belongs to a transaction. This field is ignored for requests where it's not applicable (e.g. CommitRequest). Legal characters for `request_tag` values are all printable characters (ASCII 32 - 126) and the length of a request_tag is limited to 50 characters. Values that exceed this limit are truncated. Any leading underscore (_) characters will be removed from the string.
 * @member {String} requestTag
 */
RequestOptions.prototype['requestTag'] = undefined;

/**
 * A tag used for statistics collection about this transaction. Both request_tag and transaction_tag can be specified for a read or query that belongs to a transaction. The value of transaction_tag should be the same for all requests belonging to the same transaction. If this request doesn't belong to any transaction, transaction_tag will be ignored. Legal characters for `transaction_tag` values are all printable characters (ASCII 32 - 126) and the length of a transaction_tag is limited to 50 characters. Values that exceed this limit are truncated. Any leading underscore (_) characters will be removed from the string.
 * @member {String} transactionTag
 */
RequestOptions.prototype['transactionTag'] = undefined;





/**
 * Allowed values for the <code>priority</code> property.
 * @enum {String}
 * @readonly
 */
RequestOptions['PriorityEnum'] = {

    /**
     * value: "PRIORITY_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "PRIORITY_UNSPECIFIED",

    /**
     * value: "PRIORITY_LOW"
     * @const
     */
    "LOW": "PRIORITY_LOW",

    /**
     * value: "PRIORITY_MEDIUM"
     * @const
     */
    "MEDIUM": "PRIORITY_MEDIUM",

    /**
     * value: "PRIORITY_HIGH"
     * @const
     */
    "HIGH": "PRIORITY_HIGH"
};



export default RequestOptions;

