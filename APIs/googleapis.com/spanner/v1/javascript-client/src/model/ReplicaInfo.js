/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReplicaInfo model module.
 * @module model/ReplicaInfo
 * @version v1
 */
class ReplicaInfo {
    /**
     * Constructs a new <code>ReplicaInfo</code>.
     * @alias module:model/ReplicaInfo
     */
    constructor() { 
        
        ReplicaInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReplicaInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReplicaInfo} obj Optional instance to populate.
     * @return {module:model/ReplicaInfo} The populated <code>ReplicaInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReplicaInfo();

            if (data.hasOwnProperty('defaultLeaderLocation')) {
                obj['defaultLeaderLocation'] = ApiClient.convertToType(data['defaultLeaderLocation'], 'Boolean');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReplicaInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReplicaInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * If true, this location is designated as the default leader location where leader replicas are placed. See the [region types documentation](https://cloud.google.com/spanner/docs/instances#region_types) for more details.
 * @member {Boolean} defaultLeaderLocation
 */
ReplicaInfo.prototype['defaultLeaderLocation'] = undefined;

/**
 * The location of the serving resources, e.g., \"us-central1\".
 * @member {String} location
 */
ReplicaInfo.prototype['location'] = undefined;

/**
 * The type of replica.
 * @member {module:model/ReplicaInfo.TypeEnum} type
 */
ReplicaInfo.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
ReplicaInfo['TypeEnum'] = {

    /**
     * value: "TYPE_UNSPECIFIED"
     * @const
     */
    "TYPE_UNSPECIFIED": "TYPE_UNSPECIFIED",

    /**
     * value: "READ_WRITE"
     * @const
     */
    "READ_WRITE": "READ_WRITE",

    /**
     * value: "READ_ONLY"
     * @const
     */
    "READ_ONLY": "READ_ONLY",

    /**
     * value: "WITNESS"
     * @const
     */
    "WITNESS": "WITNESS"
};



export default ReplicaInfo;

