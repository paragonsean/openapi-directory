/**
 * Cloud Spanner API
 * Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InstanceConfig from './InstanceConfig';
import InstanceOperationProgress from './InstanceOperationProgress';

/**
 * The UpdateInstanceConfigMetadata model module.
 * @module model/UpdateInstanceConfigMetadata
 * @version v1
 */
class UpdateInstanceConfigMetadata {
    /**
     * Constructs a new <code>UpdateInstanceConfigMetadata</code>.
     * Metadata type for the operation returned by UpdateInstanceConfig.
     * @alias module:model/UpdateInstanceConfigMetadata
     */
    constructor() { 
        
        UpdateInstanceConfigMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateInstanceConfigMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateInstanceConfigMetadata} obj Optional instance to populate.
     * @return {module:model/UpdateInstanceConfigMetadata} The populated <code>UpdateInstanceConfigMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateInstanceConfigMetadata();

            if (data.hasOwnProperty('cancelTime')) {
                obj['cancelTime'] = ApiClient.convertToType(data['cancelTime'], 'String');
            }
            if (data.hasOwnProperty('instanceConfig')) {
                obj['instanceConfig'] = InstanceConfig.constructFromObject(data['instanceConfig']);
            }
            if (data.hasOwnProperty('progress')) {
                obj['progress'] = InstanceOperationProgress.constructFromObject(data['progress']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateInstanceConfigMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateInstanceConfigMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cancelTime'] && !(typeof data['cancelTime'] === 'string' || data['cancelTime'] instanceof String)) {
            throw new Error("Expected the field `cancelTime` to be a primitive type in the JSON string but got " + data['cancelTime']);
        }
        // validate the optional field `instanceConfig`
        if (data['instanceConfig']) { // data not null
          InstanceConfig.validateJSON(data['instanceConfig']);
        }
        // validate the optional field `progress`
        if (data['progress']) { // data not null
          InstanceOperationProgress.validateJSON(data['progress']);
        }

        return true;
    }


}



/**
 * The time at which this operation was cancelled.
 * @member {String} cancelTime
 */
UpdateInstanceConfigMetadata.prototype['cancelTime'] = undefined;

/**
 * @member {module:model/InstanceConfig} instanceConfig
 */
UpdateInstanceConfigMetadata.prototype['instanceConfig'] = undefined;

/**
 * @member {module:model/InstanceOperationProgress} progress
 */
UpdateInstanceConfigMetadata.prototype['progress'] = undefined;






export default UpdateInstanceConfigMetadata;

