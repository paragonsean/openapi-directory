# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.struct_type import StructType
from openapi_server.models.transaction import Transaction
from openapi_server import util


class ResultSetMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, row_type: StructType=None, transaction: Transaction=None, undeclared_parameters: StructType=None):
        """ResultSetMetadata - a model defined in OpenAPI

        :param row_type: The row_type of this ResultSetMetadata.
        :param transaction: The transaction of this ResultSetMetadata.
        :param undeclared_parameters: The undeclared_parameters of this ResultSetMetadata.
        """
        self.openapi_types = {
            'row_type': StructType,
            'transaction': Transaction,
            'undeclared_parameters': StructType
        }

        self.attribute_map = {
            'row_type': 'rowType',
            'transaction': 'transaction',
            'undeclared_parameters': 'undeclaredParameters'
        }

        self._row_type = row_type
        self._transaction = transaction
        self._undeclared_parameters = undeclared_parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResultSetMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResultSetMetadata of this ResultSetMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def row_type(self):
        """Gets the row_type of this ResultSetMetadata.


        :return: The row_type of this ResultSetMetadata.
        :rtype: StructType
        """
        return self._row_type

    @row_type.setter
    def row_type(self, row_type):
        """Sets the row_type of this ResultSetMetadata.


        :param row_type: The row_type of this ResultSetMetadata.
        :type row_type: StructType
        """

        self._row_type = row_type

    @property
    def transaction(self):
        """Gets the transaction of this ResultSetMetadata.


        :return: The transaction of this ResultSetMetadata.
        :rtype: Transaction
        """
        return self._transaction

    @transaction.setter
    def transaction(self, transaction):
        """Sets the transaction of this ResultSetMetadata.


        :param transaction: The transaction of this ResultSetMetadata.
        :type transaction: Transaction
        """

        self._transaction = transaction

    @property
    def undeclared_parameters(self):
        """Gets the undeclared_parameters of this ResultSetMetadata.


        :return: The undeclared_parameters of this ResultSetMetadata.
        :rtype: StructType
        """
        return self._undeclared_parameters

    @undeclared_parameters.setter
    def undeclared_parameters(self, undeclared_parameters):
        """Sets the undeclared_parameters of this ResultSetMetadata.


        :param undeclared_parameters: The undeclared_parameters of this ResultSetMetadata.
        :type undeclared_parameters: StructType
        """

        self._undeclared_parameters = undeclared_parameters
