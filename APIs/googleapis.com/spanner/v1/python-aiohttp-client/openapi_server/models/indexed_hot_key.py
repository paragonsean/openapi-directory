# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IndexedHotKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sparse_hot_keys: Dict[str, int]=None):
        """IndexedHotKey - a model defined in OpenAPI

        :param sparse_hot_keys: The sparse_hot_keys of this IndexedHotKey.
        """
        self.openapi_types = {
            'sparse_hot_keys': Dict[str, int]
        }

        self.attribute_map = {
            'sparse_hot_keys': 'sparseHotKeys'
        }

        self._sparse_hot_keys = sparse_hot_keys

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IndexedHotKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IndexedHotKey of this IndexedHotKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sparse_hot_keys(self):
        """Gets the sparse_hot_keys of this IndexedHotKey.

        A (sparse) mapping from key bucket index to the index of the specific hot row key for that key bucket. The index of the hot row key can be translated to the actual row key via the ScanData.VisualizationData.indexed_keys repeated field.

        :return: The sparse_hot_keys of this IndexedHotKey.
        :rtype: Dict[str, int]
        """
        return self._sparse_hot_keys

    @sparse_hot_keys.setter
    def sparse_hot_keys(self, sparse_hot_keys):
        """Sets the sparse_hot_keys of this IndexedHotKey.

        A (sparse) mapping from key bucket index to the index of the specific hot row key for that key bucket. The index of the hot row key can be translated to the actual row key via the ScanData.VisualizationData.indexed_keys repeated field.

        :param sparse_hot_keys: The sparse_hot_keys of this IndexedHotKey.
        :type sparse_hot_keys: Dict[str, int]
        """

        self._sparse_hot_keys = sparse_hot_keys
