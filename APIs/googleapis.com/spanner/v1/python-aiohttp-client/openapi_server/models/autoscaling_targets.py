# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AutoscalingTargets(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, high_priority_cpu_utilization_percent: int=None, storage_utilization_percent: int=None):
        """AutoscalingTargets - a model defined in OpenAPI

        :param high_priority_cpu_utilization_percent: The high_priority_cpu_utilization_percent of this AutoscalingTargets.
        :param storage_utilization_percent: The storage_utilization_percent of this AutoscalingTargets.
        """
        self.openapi_types = {
            'high_priority_cpu_utilization_percent': int,
            'storage_utilization_percent': int
        }

        self.attribute_map = {
            'high_priority_cpu_utilization_percent': 'highPriorityCpuUtilizationPercent',
            'storage_utilization_percent': 'storageUtilizationPercent'
        }

        self._high_priority_cpu_utilization_percent = high_priority_cpu_utilization_percent
        self._storage_utilization_percent = storage_utilization_percent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutoscalingTargets':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AutoscalingTargets of this AutoscalingTargets.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def high_priority_cpu_utilization_percent(self):
        """Gets the high_priority_cpu_utilization_percent of this AutoscalingTargets.

        Required. The target high priority cpu utilization percentage that the autoscaler should be trying to achieve for the instance. This number is on a scale from 0 (no utilization) to 100 (full utilization). The valid range is [10, 90] inclusive.

        :return: The high_priority_cpu_utilization_percent of this AutoscalingTargets.
        :rtype: int
        """
        return self._high_priority_cpu_utilization_percent

    @high_priority_cpu_utilization_percent.setter
    def high_priority_cpu_utilization_percent(self, high_priority_cpu_utilization_percent):
        """Sets the high_priority_cpu_utilization_percent of this AutoscalingTargets.

        Required. The target high priority cpu utilization percentage that the autoscaler should be trying to achieve for the instance. This number is on a scale from 0 (no utilization) to 100 (full utilization). The valid range is [10, 90] inclusive.

        :param high_priority_cpu_utilization_percent: The high_priority_cpu_utilization_percent of this AutoscalingTargets.
        :type high_priority_cpu_utilization_percent: int
        """

        self._high_priority_cpu_utilization_percent = high_priority_cpu_utilization_percent

    @property
    def storage_utilization_percent(self):
        """Gets the storage_utilization_percent of this AutoscalingTargets.

        Required. The target storage utilization percentage that the autoscaler should be trying to achieve for the instance. This number is on a scale from 0 (no utilization) to 100 (full utilization). The valid range is [10, 99] inclusive.

        :return: The storage_utilization_percent of this AutoscalingTargets.
        :rtype: int
        """
        return self._storage_utilization_percent

    @storage_utilization_percent.setter
    def storage_utilization_percent(self, storage_utilization_percent):
        """Sets the storage_utilization_percent of this AutoscalingTargets.

        Required. The target storage utilization percentage that the autoscaler should be trying to achieve for the instance. This number is on a scale from 0 (no utilization) to 100 (full utilization). The valid range is [10, 99] inclusive.

        :param storage_utilization_percent: The storage_utilization_percent of this AutoscalingTargets.
        :type storage_utilization_percent: int
        """

        self._storage_utilization_percent = storage_utilization_percent
