# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.key_set import KeySet
from openapi_server import util


class Delete(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key_set: KeySet=None, table: str=None):
        """Delete - a model defined in OpenAPI

        :param key_set: The key_set of this Delete.
        :param table: The table of this Delete.
        """
        self.openapi_types = {
            'key_set': KeySet,
            'table': str
        }

        self.attribute_map = {
            'key_set': 'keySet',
            'table': 'table'
        }

        self._key_set = key_set
        self._table = table

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Delete':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Delete of this Delete.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key_set(self):
        """Gets the key_set of this Delete.


        :return: The key_set of this Delete.
        :rtype: KeySet
        """
        return self._key_set

    @key_set.setter
    def key_set(self, key_set):
        """Sets the key_set of this Delete.


        :param key_set: The key_set of this Delete.
        :type key_set: KeySet
        """

        self._key_set = key_set

    @property
    def table(self):
        """Gets the table of this Delete.

        Required. The table whose rows will be deleted.

        :return: The table of this Delete.
        :rtype: str
        """
        return self._table

    @table.setter
    def table(self, table):
        """Sets the table of this Delete.

        Required. The table whose rows will be deleted.

        :param table: The table of this Delete.
        :type table: str
        """

        self._table = table
