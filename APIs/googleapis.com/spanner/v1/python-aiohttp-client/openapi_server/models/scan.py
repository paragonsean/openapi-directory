# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.scan_data import ScanData
from openapi_server import util


class Scan(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, details: Dict[str, object]=None, end_time: str=None, name: str=None, scan_data: ScanData=None, start_time: str=None):
        """Scan - a model defined in OpenAPI

        :param details: The details of this Scan.
        :param end_time: The end_time of this Scan.
        :param name: The name of this Scan.
        :param scan_data: The scan_data of this Scan.
        :param start_time: The start_time of this Scan.
        """
        self.openapi_types = {
            'details': Dict[str, object],
            'end_time': str,
            'name': str,
            'scan_data': ScanData,
            'start_time': str
        }

        self.attribute_map = {
            'details': 'details',
            'end_time': 'endTime',
            'name': 'name',
            'scan_data': 'scanData',
            'start_time': 'startTime'
        }

        self._details = details
        self._end_time = end_time
        self._name = name
        self._scan_data = scan_data
        self._start_time = start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Scan':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Scan of this Scan.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def details(self):
        """Gets the details of this Scan.

        Additional information provided by the implementer.

        :return: The details of this Scan.
        :rtype: Dict[str, object]
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this Scan.

        Additional information provided by the implementer.

        :param details: The details of this Scan.
        :type details: Dict[str, object]
        """

        self._details = details

    @property
    def end_time(self):
        """Gets the end_time of this Scan.

        The upper bound for when the scan is defined.

        :return: The end_time of this Scan.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this Scan.

        The upper bound for when the scan is defined.

        :param end_time: The end_time of this Scan.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def name(self):
        """Gets the name of this Scan.

        The unique name of the scan, specific to the Database service implementing this interface.

        :return: The name of this Scan.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Scan.

        The unique name of the scan, specific to the Database service implementing this interface.

        :param name: The name of this Scan.
        :type name: str
        """

        self._name = name

    @property
    def scan_data(self):
        """Gets the scan_data of this Scan.


        :return: The scan_data of this Scan.
        :rtype: ScanData
        """
        return self._scan_data

    @scan_data.setter
    def scan_data(self, scan_data):
        """Sets the scan_data of this Scan.


        :param scan_data: The scan_data of this Scan.
        :type scan_data: ScanData
        """

        self._scan_data = scan_data

    @property
    def start_time(self):
        """Gets the start_time of this Scan.

        A range of time (inclusive) for when the scan is defined. The lower bound for when the scan is defined.

        :return: The start_time of this Scan.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this Scan.

        A range of time (inclusive) for when the scan is defined. The lower bound for when the scan is defined.

        :param start_time: The start_time of this Scan.
        :type start_time: str
        """

        self._start_time = start_time
