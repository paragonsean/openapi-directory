# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReplicaInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_leader_location: bool=None, location: str=None, type: str=None):
        """ReplicaInfo - a model defined in OpenAPI

        :param default_leader_location: The default_leader_location of this ReplicaInfo.
        :param location: The location of this ReplicaInfo.
        :param type: The type of this ReplicaInfo.
        """
        self.openapi_types = {
            'default_leader_location': bool,
            'location': str,
            'type': str
        }

        self.attribute_map = {
            'default_leader_location': 'defaultLeaderLocation',
            'location': 'location',
            'type': 'type'
        }

        self._default_leader_location = default_leader_location
        self._location = location
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReplicaInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReplicaInfo of this ReplicaInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_leader_location(self):
        """Gets the default_leader_location of this ReplicaInfo.

        If true, this location is designated as the default leader location where leader replicas are placed. See the [region types documentation](https://cloud.google.com/spanner/docs/instances#region_types) for more details.

        :return: The default_leader_location of this ReplicaInfo.
        :rtype: bool
        """
        return self._default_leader_location

    @default_leader_location.setter
    def default_leader_location(self, default_leader_location):
        """Sets the default_leader_location of this ReplicaInfo.

        If true, this location is designated as the default leader location where leader replicas are placed. See the [region types documentation](https://cloud.google.com/spanner/docs/instances#region_types) for more details.

        :param default_leader_location: The default_leader_location of this ReplicaInfo.
        :type default_leader_location: bool
        """

        self._default_leader_location = default_leader_location

    @property
    def location(self):
        """Gets the location of this ReplicaInfo.

        The location of the serving resources, e.g., \"us-central1\".

        :return: The location of this ReplicaInfo.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this ReplicaInfo.

        The location of the serving resources, e.g., \"us-central1\".

        :param location: The location of this ReplicaInfo.
        :type location: str
        """

        self._location = location

    @property
    def type(self):
        """Gets the type of this ReplicaInfo.

        The type of replica.

        :return: The type of this ReplicaInfo.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ReplicaInfo.

        The type of replica.

        :param type: The type of this ReplicaInfo.
        :type type: str
        """
        allowed_values = ["TYPE_UNSPECIFIED", "READ_WRITE", "READ_ONLY", "WITNESS"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
