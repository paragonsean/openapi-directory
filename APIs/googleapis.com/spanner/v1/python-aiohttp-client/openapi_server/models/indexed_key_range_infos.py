# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.key_range_infos import KeyRangeInfos
from openapi_server import util


class IndexedKeyRangeInfos(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key_range_infos: Dict[str, KeyRangeInfos]=None):
        """IndexedKeyRangeInfos - a model defined in OpenAPI

        :param key_range_infos: The key_range_infos of this IndexedKeyRangeInfos.
        """
        self.openapi_types = {
            'key_range_infos': Dict[str, KeyRangeInfos]
        }

        self.attribute_map = {
            'key_range_infos': 'keyRangeInfos'
        }

        self._key_range_infos = key_range_infos

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IndexedKeyRangeInfos':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IndexedKeyRangeInfos of this IndexedKeyRangeInfos.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key_range_infos(self):
        """Gets the key_range_infos of this IndexedKeyRangeInfos.

        A (sparse) mapping from key bucket index to the KeyRangeInfos for that key bucket.

        :return: The key_range_infos of this IndexedKeyRangeInfos.
        :rtype: Dict[str, KeyRangeInfos]
        """
        return self._key_range_infos

    @key_range_infos.setter
    def key_range_infos(self, key_range_infos):
        """Sets the key_range_infos of this IndexedKeyRangeInfos.

        A (sparse) mapping from key bucket index to the KeyRangeInfos for that key bucket.

        :param key_range_infos: The key_range_infos of this IndexedKeyRangeInfos.
        :type key_range_infos: Dict[str, KeyRangeInfos]
        """

        self._key_range_infos = key_range_infos
