# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.delete import Delete
from openapi_server.models.write import Write
from openapi_server import util


class Mutation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delete: Delete=None, insert: Write=None, insert_or_update: Write=None, replace: Write=None, update: Write=None):
        """Mutation - a model defined in OpenAPI

        :param delete: The delete of this Mutation.
        :param insert: The insert of this Mutation.
        :param insert_or_update: The insert_or_update of this Mutation.
        :param replace: The replace of this Mutation.
        :param update: The update of this Mutation.
        """
        self.openapi_types = {
            'delete': Delete,
            'insert': Write,
            'insert_or_update': Write,
            'replace': Write,
            'update': Write
        }

        self.attribute_map = {
            'delete': 'delete',
            'insert': 'insert',
            'insert_or_update': 'insertOrUpdate',
            'replace': 'replace',
            'update': 'update'
        }

        self._delete = delete
        self._insert = insert
        self._insert_or_update = insert_or_update
        self._replace = replace
        self._update = update

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Mutation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Mutation of this Mutation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delete(self):
        """Gets the delete of this Mutation.


        :return: The delete of this Mutation.
        :rtype: Delete
        """
        return self._delete

    @delete.setter
    def delete(self, delete):
        """Sets the delete of this Mutation.


        :param delete: The delete of this Mutation.
        :type delete: Delete
        """

        self._delete = delete

    @property
    def insert(self):
        """Gets the insert of this Mutation.


        :return: The insert of this Mutation.
        :rtype: Write
        """
        return self._insert

    @insert.setter
    def insert(self, insert):
        """Sets the insert of this Mutation.


        :param insert: The insert of this Mutation.
        :type insert: Write
        """

        self._insert = insert

    @property
    def insert_or_update(self):
        """Gets the insert_or_update of this Mutation.


        :return: The insert_or_update of this Mutation.
        :rtype: Write
        """
        return self._insert_or_update

    @insert_or_update.setter
    def insert_or_update(self, insert_or_update):
        """Sets the insert_or_update of this Mutation.


        :param insert_or_update: The insert_or_update of this Mutation.
        :type insert_or_update: Write
        """

        self._insert_or_update = insert_or_update

    @property
    def replace(self):
        """Gets the replace of this Mutation.


        :return: The replace of this Mutation.
        :rtype: Write
        """
        return self._replace

    @replace.setter
    def replace(self, replace):
        """Sets the replace of this Mutation.


        :param replace: The replace of this Mutation.
        :type replace: Write
        """

        self._replace = replace

    @property
    def update(self):
        """Gets the update of this Mutation.


        :return: The update of this Mutation.
        :rtype: Write
        """
        return self._update

    @update.setter
    def update(self, update):
        """Sets the update of this Mutation.


        :param update: The update of this Mutation.
        :type update: Write
        """

        self._update = update
