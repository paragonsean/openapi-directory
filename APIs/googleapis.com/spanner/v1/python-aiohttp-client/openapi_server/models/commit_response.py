# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.commit_stats import CommitStats
from openapi_server import util


class CommitResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, commit_stats: CommitStats=None, commit_timestamp: str=None):
        """CommitResponse - a model defined in OpenAPI

        :param commit_stats: The commit_stats of this CommitResponse.
        :param commit_timestamp: The commit_timestamp of this CommitResponse.
        """
        self.openapi_types = {
            'commit_stats': CommitStats,
            'commit_timestamp': str
        }

        self.attribute_map = {
            'commit_stats': 'commitStats',
            'commit_timestamp': 'commitTimestamp'
        }

        self._commit_stats = commit_stats
        self._commit_timestamp = commit_timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CommitResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CommitResponse of this CommitResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def commit_stats(self):
        """Gets the commit_stats of this CommitResponse.


        :return: The commit_stats of this CommitResponse.
        :rtype: CommitStats
        """
        return self._commit_stats

    @commit_stats.setter
    def commit_stats(self, commit_stats):
        """Sets the commit_stats of this CommitResponse.


        :param commit_stats: The commit_stats of this CommitResponse.
        :type commit_stats: CommitStats
        """

        self._commit_stats = commit_stats

    @property
    def commit_timestamp(self):
        """Gets the commit_timestamp of this CommitResponse.

        The Cloud Spanner timestamp at which the transaction committed.

        :return: The commit_timestamp of this CommitResponse.
        :rtype: str
        """
        return self._commit_timestamp

    @commit_timestamp.setter
    def commit_timestamp(self, commit_timestamp):
        """Sets the commit_timestamp of this CommitResponse.

        The Cloud Spanner timestamp at which the transaction committed.

        :param commit_timestamp: The commit_timestamp of this CommitResponse.
        :type commit_timestamp: str
        """

        self._commit_timestamp = commit_timestamp
