# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.key_range_info import KeyRangeInfo
from openapi_server import util


class KeyRangeInfos(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, infos: List[KeyRangeInfo]=None, total_size: int=None):
        """KeyRangeInfos - a model defined in OpenAPI

        :param infos: The infos of this KeyRangeInfos.
        :param total_size: The total_size of this KeyRangeInfos.
        """
        self.openapi_types = {
            'infos': List[KeyRangeInfo],
            'total_size': int
        }

        self.attribute_map = {
            'infos': 'infos',
            'total_size': 'totalSize'
        }

        self._infos = infos
        self._total_size = total_size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KeyRangeInfos':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KeyRangeInfos of this KeyRangeInfos.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def infos(self):
        """Gets the infos of this KeyRangeInfos.

        The list individual KeyRangeInfos.

        :return: The infos of this KeyRangeInfos.
        :rtype: List[KeyRangeInfo]
        """
        return self._infos

    @infos.setter
    def infos(self, infos):
        """Sets the infos of this KeyRangeInfos.

        The list individual KeyRangeInfos.

        :param infos: The infos of this KeyRangeInfos.
        :type infos: List[KeyRangeInfo]
        """

        self._infos = infos

    @property
    def total_size(self):
        """Gets the total_size of this KeyRangeInfos.

        The total size of the list of all KeyRangeInfos. This may be larger than the number of repeated messages above. If that is the case, this number may be used to determine how many are not being shown.

        :return: The total_size of this KeyRangeInfos.
        :rtype: int
        """
        return self._total_size

    @total_size.setter
    def total_size(self, total_size):
        """Sets the total_size of this KeyRangeInfos.

        The total size of the list of all KeyRangeInfos. This may be larger than the number of repeated messages above. If that is the case, this number may be used to determine how many are not being shown.

        :param total_size: The total_size of this KeyRangeInfos.
        :type total_size: int
        """

        self._total_size = total_size
