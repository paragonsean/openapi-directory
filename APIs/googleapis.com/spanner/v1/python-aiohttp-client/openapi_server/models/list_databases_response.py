# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.database import Database
from openapi_server import util


class ListDatabasesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, databases: List[Database]=None, next_page_token: str=None):
        """ListDatabasesResponse - a model defined in OpenAPI

        :param databases: The databases of this ListDatabasesResponse.
        :param next_page_token: The next_page_token of this ListDatabasesResponse.
        """
        self.openapi_types = {
            'databases': List[Database],
            'next_page_token': str
        }

        self.attribute_map = {
            'databases': 'databases',
            'next_page_token': 'nextPageToken'
        }

        self._databases = databases
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListDatabasesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListDatabasesResponse of this ListDatabasesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def databases(self):
        """Gets the databases of this ListDatabasesResponse.

        Databases that matched the request.

        :return: The databases of this ListDatabasesResponse.
        :rtype: List[Database]
        """
        return self._databases

    @databases.setter
    def databases(self, databases):
        """Sets the databases of this ListDatabasesResponse.

        Databases that matched the request.

        :param databases: The databases of this ListDatabasesResponse.
        :type databases: List[Database]
        """

        self._databases = databases

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListDatabasesResponse.

        `next_page_token` can be sent in a subsequent ListDatabases call to fetch more of the matching databases.

        :return: The next_page_token of this ListDatabasesResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListDatabasesResponse.

        `next_page_token` can be sent in a subsequent ListDatabases call to fetch more of the matching databases.

        :param next_page_token: The next_page_token of this ListDatabasesResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
