# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.instance_config import InstanceConfig
from openapi_server import util


class CreateInstanceConfigRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instance_config: InstanceConfig=None, instance_config_id: str=None, validate_only: bool=None):
        """CreateInstanceConfigRequest - a model defined in OpenAPI

        :param instance_config: The instance_config of this CreateInstanceConfigRequest.
        :param instance_config_id: The instance_config_id of this CreateInstanceConfigRequest.
        :param validate_only: The validate_only of this CreateInstanceConfigRequest.
        """
        self.openapi_types = {
            'instance_config': InstanceConfig,
            'instance_config_id': str,
            'validate_only': bool
        }

        self.attribute_map = {
            'instance_config': 'instanceConfig',
            'instance_config_id': 'instanceConfigId',
            'validate_only': 'validateOnly'
        }

        self._instance_config = instance_config
        self._instance_config_id = instance_config_id
        self._validate_only = validate_only

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateInstanceConfigRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateInstanceConfigRequest of this CreateInstanceConfigRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instance_config(self):
        """Gets the instance_config of this CreateInstanceConfigRequest.


        :return: The instance_config of this CreateInstanceConfigRequest.
        :rtype: InstanceConfig
        """
        return self._instance_config

    @instance_config.setter
    def instance_config(self, instance_config):
        """Sets the instance_config of this CreateInstanceConfigRequest.


        :param instance_config: The instance_config of this CreateInstanceConfigRequest.
        :type instance_config: InstanceConfig
        """

        self._instance_config = instance_config

    @property
    def instance_config_id(self):
        """Gets the instance_config_id of this CreateInstanceConfigRequest.

        Required. The ID of the instance config to create. Valid identifiers are of the form `custom-[-a-z0-9]*[a-z0-9]` and must be between 2 and 64 characters in length. The `custom-` prefix is required to avoid name conflicts with Google managed configurations.

        :return: The instance_config_id of this CreateInstanceConfigRequest.
        :rtype: str
        """
        return self._instance_config_id

    @instance_config_id.setter
    def instance_config_id(self, instance_config_id):
        """Sets the instance_config_id of this CreateInstanceConfigRequest.

        Required. The ID of the instance config to create. Valid identifiers are of the form `custom-[-a-z0-9]*[a-z0-9]` and must be between 2 and 64 characters in length. The `custom-` prefix is required to avoid name conflicts with Google managed configurations.

        :param instance_config_id: The instance_config_id of this CreateInstanceConfigRequest.
        :type instance_config_id: str
        """

        self._instance_config_id = instance_config_id

    @property
    def validate_only(self):
        """Gets the validate_only of this CreateInstanceConfigRequest.

        An option to validate, but not actually execute, a request, and provide the same response.

        :return: The validate_only of this CreateInstanceConfigRequest.
        :rtype: bool
        """
        return self._validate_only

    @validate_only.setter
    def validate_only(self, validate_only):
        """Sets the validate_only of this CreateInstanceConfigRequest.

        An option to validate, but not actually execute, a request, and provide the same response.

        :param validate_only: The validate_only of this CreateInstanceConfigRequest.
        :type validate_only: bool
        """

        self._validate_only = validate_only
