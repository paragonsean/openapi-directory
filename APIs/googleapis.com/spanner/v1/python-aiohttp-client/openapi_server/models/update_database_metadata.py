# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.operation_progress import OperationProgress
from openapi_server.models.update_database_request import UpdateDatabaseRequest
from openapi_server import util


class UpdateDatabaseMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cancel_time: str=None, progress: OperationProgress=None, request: UpdateDatabaseRequest=None):
        """UpdateDatabaseMetadata - a model defined in OpenAPI

        :param cancel_time: The cancel_time of this UpdateDatabaseMetadata.
        :param progress: The progress of this UpdateDatabaseMetadata.
        :param request: The request of this UpdateDatabaseMetadata.
        """
        self.openapi_types = {
            'cancel_time': str,
            'progress': OperationProgress,
            'request': UpdateDatabaseRequest
        }

        self.attribute_map = {
            'cancel_time': 'cancelTime',
            'progress': 'progress',
            'request': 'request'
        }

        self._cancel_time = cancel_time
        self._progress = progress
        self._request = request

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateDatabaseMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateDatabaseMetadata of this UpdateDatabaseMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cancel_time(self):
        """Gets the cancel_time of this UpdateDatabaseMetadata.

        The time at which this operation was cancelled. If set, this operation is in the process of undoing itself (which is best-effort).

        :return: The cancel_time of this UpdateDatabaseMetadata.
        :rtype: str
        """
        return self._cancel_time

    @cancel_time.setter
    def cancel_time(self, cancel_time):
        """Sets the cancel_time of this UpdateDatabaseMetadata.

        The time at which this operation was cancelled. If set, this operation is in the process of undoing itself (which is best-effort).

        :param cancel_time: The cancel_time of this UpdateDatabaseMetadata.
        :type cancel_time: str
        """

        self._cancel_time = cancel_time

    @property
    def progress(self):
        """Gets the progress of this UpdateDatabaseMetadata.


        :return: The progress of this UpdateDatabaseMetadata.
        :rtype: OperationProgress
        """
        return self._progress

    @progress.setter
    def progress(self, progress):
        """Sets the progress of this UpdateDatabaseMetadata.


        :param progress: The progress of this UpdateDatabaseMetadata.
        :type progress: OperationProgress
        """

        self._progress = progress

    @property
    def request(self):
        """Gets the request of this UpdateDatabaseMetadata.


        :return: The request of this UpdateDatabaseMetadata.
        :rtype: UpdateDatabaseRequest
        """
        return self._request

    @request.setter
    def request(self, request):
        """Sets the request of this UpdateDatabaseMetadata.


        :param request: The request of this UpdateDatabaseMetadata.
        :type request: UpdateDatabaseRequest
        """

        self._request = request
