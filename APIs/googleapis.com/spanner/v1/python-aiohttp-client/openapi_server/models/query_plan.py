# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.plan_node import PlanNode
from openapi_server.models.query_advisor_result import QueryAdvisorResult
from openapi_server import util


class QueryPlan(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, plan_nodes: List[PlanNode]=None, query_advice: QueryAdvisorResult=None):
        """QueryPlan - a model defined in OpenAPI

        :param plan_nodes: The plan_nodes of this QueryPlan.
        :param query_advice: The query_advice of this QueryPlan.
        """
        self.openapi_types = {
            'plan_nodes': List[PlanNode],
            'query_advice': QueryAdvisorResult
        }

        self.attribute_map = {
            'plan_nodes': 'planNodes',
            'query_advice': 'queryAdvice'
        }

        self._plan_nodes = plan_nodes
        self._query_advice = query_advice

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryPlan':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueryPlan of this QueryPlan.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def plan_nodes(self):
        """Gets the plan_nodes of this QueryPlan.

        The nodes in the query plan. Plan nodes are returned in pre-order starting with the plan root. Each PlanNode's `id` corresponds to its index in `plan_nodes`.

        :return: The plan_nodes of this QueryPlan.
        :rtype: List[PlanNode]
        """
        return self._plan_nodes

    @plan_nodes.setter
    def plan_nodes(self, plan_nodes):
        """Sets the plan_nodes of this QueryPlan.

        The nodes in the query plan. Plan nodes are returned in pre-order starting with the plan root. Each PlanNode's `id` corresponds to its index in `plan_nodes`.

        :param plan_nodes: The plan_nodes of this QueryPlan.
        :type plan_nodes: List[PlanNode]
        """

        self._plan_nodes = plan_nodes

    @property
    def query_advice(self):
        """Gets the query_advice of this QueryPlan.


        :return: The query_advice of this QueryPlan.
        :rtype: QueryAdvisorResult
        """
        return self._query_advice

    @query_advice.setter
    def query_advice(self, query_advice):
        """Sets the query_advice of this QueryPlan.


        :param query_advice: The query_advice of this QueryPlan.
        :type query_advice: QueryAdvisorResult
        """

        self._query_advice = query_advice
