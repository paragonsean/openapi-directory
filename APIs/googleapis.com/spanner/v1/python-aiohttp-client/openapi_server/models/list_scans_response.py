# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.scan import Scan
from openapi_server import util


class ListScansResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_page_token: str=None, scans: List[Scan]=None):
        """ListScansResponse - a model defined in OpenAPI

        :param next_page_token: The next_page_token of this ListScansResponse.
        :param scans: The scans of this ListScansResponse.
        """
        self.openapi_types = {
            'next_page_token': str,
            'scans': List[Scan]
        }

        self.attribute_map = {
            'next_page_token': 'nextPageToken',
            'scans': 'scans'
        }

        self._next_page_token = next_page_token
        self._scans = scans

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListScansResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListScansResponse of this ListScansResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListScansResponse.

        Token to retrieve the next page of results, or empty if there are no more results in the list.

        :return: The next_page_token of this ListScansResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListScansResponse.

        Token to retrieve the next page of results, or empty if there are no more results in the list.

        :param next_page_token: The next_page_token of this ListScansResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def scans(self):
        """Gets the scans of this ListScansResponse.

        Available scans based on the list query parameters.

        :return: The scans of this ListScansResponse.
        :rtype: List[Scan]
        """
        return self._scans

    @scans.setter
    def scans(self, scans):
        """Sets the scans of this ListScansResponse.

        Available scans based on the list query parameters.

        :param scans: The scans of this ListScansResponse.
        :type scans: List[Scan]
        """

        self._scans = scans
