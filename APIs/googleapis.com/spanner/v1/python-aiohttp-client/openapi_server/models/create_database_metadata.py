# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateDatabaseMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, database: str=None):
        """CreateDatabaseMetadata - a model defined in OpenAPI

        :param database: The database of this CreateDatabaseMetadata.
        """
        self.openapi_types = {
            'database': str
        }

        self.attribute_map = {
            'database': 'database'
        }

        self._database = database

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateDatabaseMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateDatabaseMetadata of this CreateDatabaseMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def database(self):
        """Gets the database of this CreateDatabaseMetadata.

        The database being created.

        :return: The database of this CreateDatabaseMetadata.
        :rtype: str
        """
        return self._database

    @database.setter
    def database(self, database):
        """Sets the database of this CreateDatabaseMetadata.

        The database being created.

        :param database: The database of this CreateDatabaseMetadata.
        :type database: str
        """

        self._database = database
