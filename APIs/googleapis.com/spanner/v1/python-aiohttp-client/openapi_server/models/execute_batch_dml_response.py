# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.result_set import ResultSet
from openapi_server.models.status import Status
from openapi_server import util


class ExecuteBatchDmlResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, result_sets: List[ResultSet]=None, status: Status=None):
        """ExecuteBatchDmlResponse - a model defined in OpenAPI

        :param result_sets: The result_sets of this ExecuteBatchDmlResponse.
        :param status: The status of this ExecuteBatchDmlResponse.
        """
        self.openapi_types = {
            'result_sets': List[ResultSet],
            'status': Status
        }

        self.attribute_map = {
            'result_sets': 'resultSets',
            'status': 'status'
        }

        self._result_sets = result_sets
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExecuteBatchDmlResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExecuteBatchDmlResponse of this ExecuteBatchDmlResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def result_sets(self):
        """Gets the result_sets of this ExecuteBatchDmlResponse.

        One ResultSet for each statement in the request that ran successfully, in the same order as the statements in the request. Each ResultSet does not contain any rows. The ResultSetStats in each ResultSet contain the number of rows modified by the statement. Only the first ResultSet in the response contains valid ResultSetMetadata.

        :return: The result_sets of this ExecuteBatchDmlResponse.
        :rtype: List[ResultSet]
        """
        return self._result_sets

    @result_sets.setter
    def result_sets(self, result_sets):
        """Sets the result_sets of this ExecuteBatchDmlResponse.

        One ResultSet for each statement in the request that ran successfully, in the same order as the statements in the request. Each ResultSet does not contain any rows. The ResultSetStats in each ResultSet contain the number of rows modified by the statement. Only the first ResultSet in the response contains valid ResultSetMetadata.

        :param result_sets: The result_sets of this ExecuteBatchDmlResponse.
        :type result_sets: List[ResultSet]
        """

        self._result_sets = result_sets

    @property
    def status(self):
        """Gets the status of this ExecuteBatchDmlResponse.


        :return: The status of this ExecuteBatchDmlResponse.
        :rtype: Status
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ExecuteBatchDmlResponse.


        :param status: The status of this ExecuteBatchDmlResponse.
        :type status: Status
        """

        self._status = status
