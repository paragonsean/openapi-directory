# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IndexAdvice(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ddl: List[str]=None, improvement_factor: float=None):
        """IndexAdvice - a model defined in OpenAPI

        :param ddl: The ddl of this IndexAdvice.
        :param improvement_factor: The improvement_factor of this IndexAdvice.
        """
        self.openapi_types = {
            'ddl': List[str],
            'improvement_factor': float
        }

        self.attribute_map = {
            'ddl': 'ddl',
            'improvement_factor': 'improvementFactor'
        }

        self._ddl = ddl
        self._improvement_factor = improvement_factor

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IndexAdvice':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IndexAdvice of this IndexAdvice.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ddl(self):
        """Gets the ddl of this IndexAdvice.

        Optional. DDL statements to add new indexes that will improve the query.

        :return: The ddl of this IndexAdvice.
        :rtype: List[str]
        """
        return self._ddl

    @ddl.setter
    def ddl(self, ddl):
        """Sets the ddl of this IndexAdvice.

        Optional. DDL statements to add new indexes that will improve the query.

        :param ddl: The ddl of this IndexAdvice.
        :type ddl: List[str]
        """

        self._ddl = ddl

    @property
    def improvement_factor(self):
        """Gets the improvement_factor of this IndexAdvice.

        Optional. Estimated latency improvement factor. For example if the query currently takes 500 ms to run and the estimated latency with new indexes is 100 ms this field will be 5.

        :return: The improvement_factor of this IndexAdvice.
        :rtype: float
        """
        return self._improvement_factor

    @improvement_factor.setter
    def improvement_factor(self, improvement_factor):
        """Sets the improvement_factor of this IndexAdvice.

        Optional. Estimated latency improvement factor. For example if the query currently takes 500 ms to run and the estimated latency with new indexes is 100 ms this field will be 5.

        :param improvement_factor: The improvement_factor of this IndexAdvice.
        :type improvement_factor: float
        """

        self._improvement_factor = improvement_factor
