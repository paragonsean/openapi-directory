# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.result_set_metadata import ResultSetMetadata
from openapi_server.models.result_set_stats import ResultSetStats
from openapi_server import util


class ResultSet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metadata: ResultSetMetadata=None, rows: List[List[object]]=None, stats: ResultSetStats=None):
        """ResultSet - a model defined in OpenAPI

        :param metadata: The metadata of this ResultSet.
        :param rows: The rows of this ResultSet.
        :param stats: The stats of this ResultSet.
        """
        self.openapi_types = {
            'metadata': ResultSetMetadata,
            'rows': List[List[object]],
            'stats': ResultSetStats
        }

        self.attribute_map = {
            'metadata': 'metadata',
            'rows': 'rows',
            'stats': 'stats'
        }

        self._metadata = metadata
        self._rows = rows
        self._stats = stats

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResultSet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResultSet of this ResultSet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metadata(self):
        """Gets the metadata of this ResultSet.


        :return: The metadata of this ResultSet.
        :rtype: ResultSetMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this ResultSet.


        :param metadata: The metadata of this ResultSet.
        :type metadata: ResultSetMetadata
        """

        self._metadata = metadata

    @property
    def rows(self):
        """Gets the rows of this ResultSet.

        Each element in `rows` is a row whose format is defined by metadata.row_type. The ith element in each row matches the ith field in metadata.row_type. Elements are encoded based on type as described here.

        :return: The rows of this ResultSet.
        :rtype: List[List[object]]
        """
        return self._rows

    @rows.setter
    def rows(self, rows):
        """Sets the rows of this ResultSet.

        Each element in `rows` is a row whose format is defined by metadata.row_type. The ith element in each row matches the ith field in metadata.row_type. Elements are encoded based on type as described here.

        :param rows: The rows of this ResultSet.
        :type rows: List[List[object]]
        """

        self._rows = rows

    @property
    def stats(self):
        """Gets the stats of this ResultSet.


        :return: The stats of this ResultSet.
        :rtype: ResultSetStats
        """
        return self._stats

    @stats.setter
    def stats(self, stats):
        """Sets the stats of this ResultSet.


        :param stats: The stats of this ResultSet.
        :type stats: ResultSetStats
        """

        self._stats = stats
