# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.replica_selection import ReplicaSelection
from openapi_server import util


class ExcludeReplicas(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, replica_selections: List[ReplicaSelection]=None):
        """ExcludeReplicas - a model defined in OpenAPI

        :param replica_selections: The replica_selections of this ExcludeReplicas.
        """
        self.openapi_types = {
            'replica_selections': List[ReplicaSelection]
        }

        self.attribute_map = {
            'replica_selections': 'replicaSelections'
        }

        self._replica_selections = replica_selections

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExcludeReplicas':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExcludeReplicas of this ExcludeReplicas.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def replica_selections(self):
        """Gets the replica_selections of this ExcludeReplicas.

        The directed read replica selector.

        :return: The replica_selections of this ExcludeReplicas.
        :rtype: List[ReplicaSelection]
        """
        return self._replica_selections

    @replica_selections.setter
    def replica_selections(self, replica_selections):
        """Sets the replica_selections of this ExcludeReplicas.

        The directed read replica selector.

        :param replica_selections: The replica_selections of this ExcludeReplicas.
        :type replica_selections: List[ReplicaSelection]
        """

        self._replica_selections = replica_selections
