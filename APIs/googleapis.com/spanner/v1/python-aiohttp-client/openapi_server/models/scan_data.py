# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.visualization_data import VisualizationData
from openapi_server import util


class ScanData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data: VisualizationData=None, end_time: str=None, start_time: str=None):
        """ScanData - a model defined in OpenAPI

        :param data: The data of this ScanData.
        :param end_time: The end_time of this ScanData.
        :param start_time: The start_time of this ScanData.
        """
        self.openapi_types = {
            'data': VisualizationData,
            'end_time': str,
            'start_time': str
        }

        self.attribute_map = {
            'data': 'data',
            'end_time': 'endTime',
            'start_time': 'startTime'
        }

        self._data = data
        self._end_time = end_time
        self._start_time = start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScanData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScanData of this ScanData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self):
        """Gets the data of this ScanData.


        :return: The data of this ScanData.
        :rtype: VisualizationData
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this ScanData.


        :param data: The data of this ScanData.
        :type data: VisualizationData
        """

        self._data = data

    @property
    def end_time(self):
        """Gets the end_time of this ScanData.

        The upper bound for when the contained data is defined.

        :return: The end_time of this ScanData.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this ScanData.

        The upper bound for when the contained data is defined.

        :param end_time: The end_time of this ScanData.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def start_time(self):
        """Gets the start_time of this ScanData.

        A range of time (inclusive) for when the contained data is defined. The lower bound for when the contained data is defined.

        :return: The start_time of this ScanData.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this ScanData.

        A range of time (inclusive) for when the contained data is defined. The lower bound for when the contained data is defined.

        :param start_time: The start_time of this ScanData.
        :type start_time: str
        """

        self._start_time = start_time
