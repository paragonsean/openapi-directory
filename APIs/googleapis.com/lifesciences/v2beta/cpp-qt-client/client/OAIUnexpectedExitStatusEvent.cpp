/**
 * Cloud Life Sciences API
 * Cloud Life Sciences is a suite of services and tools for managing, processing, and transforming life sciences data.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUnexpectedExitStatusEvent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUnexpectedExitStatusEvent::OAIUnexpectedExitStatusEvent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUnexpectedExitStatusEvent::OAIUnexpectedExitStatusEvent() {
    this->initializeModel();
}

OAIUnexpectedExitStatusEvent::~OAIUnexpectedExitStatusEvent() {}

void OAIUnexpectedExitStatusEvent::initializeModel() {

    m_action_id_isSet = false;
    m_action_id_isValid = false;

    m_exit_status_isSet = false;
    m_exit_status_isValid = false;
}

void OAIUnexpectedExitStatusEvent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUnexpectedExitStatusEvent::fromJsonObject(QJsonObject json) {

    m_action_id_isValid = ::OpenAPI::fromJsonValue(m_action_id, json[QString("actionId")]);
    m_action_id_isSet = !json[QString("actionId")].isNull() && m_action_id_isValid;

    m_exit_status_isValid = ::OpenAPI::fromJsonValue(m_exit_status, json[QString("exitStatus")]);
    m_exit_status_isSet = !json[QString("exitStatus")].isNull() && m_exit_status_isValid;
}

QString OAIUnexpectedExitStatusEvent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUnexpectedExitStatusEvent::asJsonObject() const {
    QJsonObject obj;
    if (m_action_id_isSet) {
        obj.insert(QString("actionId"), ::OpenAPI::toJsonValue(m_action_id));
    }
    if (m_exit_status_isSet) {
        obj.insert(QString("exitStatus"), ::OpenAPI::toJsonValue(m_exit_status));
    }
    return obj;
}

qint32 OAIUnexpectedExitStatusEvent::getActionId() const {
    return m_action_id;
}
void OAIUnexpectedExitStatusEvent::setActionId(const qint32 &action_id) {
    m_action_id = action_id;
    m_action_id_isSet = true;
}

bool OAIUnexpectedExitStatusEvent::is_action_id_Set() const{
    return m_action_id_isSet;
}

bool OAIUnexpectedExitStatusEvent::is_action_id_Valid() const{
    return m_action_id_isValid;
}

qint32 OAIUnexpectedExitStatusEvent::getExitStatus() const {
    return m_exit_status;
}
void OAIUnexpectedExitStatusEvent::setExitStatus(const qint32 &exit_status) {
    m_exit_status = exit_status;
    m_exit_status_isSet = true;
}

bool OAIUnexpectedExitStatusEvent::is_exit_status_Set() const{
    return m_exit_status_isSet;
}

bool OAIUnexpectedExitStatusEvent::is_exit_status_Valid() const{
    return m_exit_status_isValid;
}

bool OAIUnexpectedExitStatusEvent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exit_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUnexpectedExitStatusEvent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
