/**
 * Cloud Life Sciences API
 * Cloud Life Sciences is a suite of services and tools for managing, processing, and transforming life sciences data.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRunPipelineRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRunPipelineRequest::OAIRunPipelineRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRunPipelineRequest::OAIRunPipelineRequest() {
    this->initializeModel();
}

OAIRunPipelineRequest::~OAIRunPipelineRequest() {}

void OAIRunPipelineRequest::initializeModel() {

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_pipeline_isSet = false;
    m_pipeline_isValid = false;

    m_pub_sub_topic_isSet = false;
    m_pub_sub_topic_isValid = false;
}

void OAIRunPipelineRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRunPipelineRequest::fromJsonObject(QJsonObject json) {

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_pipeline_isValid = ::OpenAPI::fromJsonValue(m_pipeline, json[QString("pipeline")]);
    m_pipeline_isSet = !json[QString("pipeline")].isNull() && m_pipeline_isValid;

    m_pub_sub_topic_isValid = ::OpenAPI::fromJsonValue(m_pub_sub_topic, json[QString("pubSubTopic")]);
    m_pub_sub_topic_isSet = !json[QString("pubSubTopic")].isNull() && m_pub_sub_topic_isValid;
}

QString OAIRunPipelineRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRunPipelineRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_pipeline.isSet()) {
        obj.insert(QString("pipeline"), ::OpenAPI::toJsonValue(m_pipeline));
    }
    if (m_pub_sub_topic_isSet) {
        obj.insert(QString("pubSubTopic"), ::OpenAPI::toJsonValue(m_pub_sub_topic));
    }
    return obj;
}

QMap<QString, QString> OAIRunPipelineRequest::getLabels() const {
    return m_labels;
}
void OAIRunPipelineRequest::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIRunPipelineRequest::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIRunPipelineRequest::is_labels_Valid() const{
    return m_labels_isValid;
}

OAIPipeline OAIRunPipelineRequest::getPipeline() const {
    return m_pipeline;
}
void OAIRunPipelineRequest::setPipeline(const OAIPipeline &pipeline) {
    m_pipeline = pipeline;
    m_pipeline_isSet = true;
}

bool OAIRunPipelineRequest::is_pipeline_Set() const{
    return m_pipeline_isSet;
}

bool OAIRunPipelineRequest::is_pipeline_Valid() const{
    return m_pipeline_isValid;
}

QString OAIRunPipelineRequest::getPubSubTopic() const {
    return m_pub_sub_topic;
}
void OAIRunPipelineRequest::setPubSubTopic(const QString &pub_sub_topic) {
    m_pub_sub_topic = pub_sub_topic;
    m_pub_sub_topic_isSet = true;
}

bool OAIRunPipelineRequest::is_pub_sub_topic_Set() const{
    return m_pub_sub_topic_isSet;
}

bool OAIRunPipelineRequest::is_pub_sub_topic_Valid() const{
    return m_pub_sub_topic_isValid;
}

bool OAIRunPipelineRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_pipeline.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pub_sub_topic_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRunPipelineRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
