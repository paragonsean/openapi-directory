/**
 * Cloud Life Sciences API
 * Cloud Life Sciences is a suite of services and tools for managing, processing, and transforming life sciences data.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMetadata.h
 *
 * Carries information about the pipeline execution that is returned in the long running operation&#39;s metadata field.
 */

#ifndef OAIMetadata_H
#define OAIMetadata_H

#include <QJsonObject>

#include "OAIEvent.h"
#include "OAIPipeline.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEvent;
class OAIPipeline;

class OAIMetadata : public OAIObject {
public:
    OAIMetadata();
    OAIMetadata(QString json);
    ~OAIMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getEndTime() const;
    void setEndTime(const QString &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QList<OAIEvent> getEvents() const;
    void setEvents(const QList<OAIEvent> &events);
    bool is_events_Set() const;
    bool is_events_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    OAIPipeline getPipeline() const;
    void setPipeline(const OAIPipeline &pipeline);
    bool is_pipeline_Set() const;
    bool is_pipeline_Valid() const;

    QString getPubSubTopic() const;
    void setPubSubTopic(const QString &pub_sub_topic);
    bool is_pub_sub_topic_Set() const;
    bool is_pub_sub_topic_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QList<OAIEvent> m_events;
    bool m_events_isSet;
    bool m_events_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    OAIPipeline m_pipeline;
    bool m_pipeline_isSet;
    bool m_pipeline_isValid;

    QString m_pub_sub_topic;
    bool m_pub_sub_topic_isSet;
    bool m_pub_sub_topic_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMetadata)

#endif // OAIMetadata_H
