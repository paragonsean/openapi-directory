/**
 * Cloud Life Sciences API
 * Cloud Life Sciences is a suite of services and tools for managing, processing, and transforming life sciences data.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEvent.h
 *
 * Carries information about events that occur during pipeline execution.
 */

#ifndef OAIEvent_H
#define OAIEvent_H

#include <QJsonObject>

#include "OAIContainerKilledEvent.h"
#include "OAIContainerStartedEvent.h"
#include "OAIContainerStoppedEvent.h"
#include "OAIDelayedEvent.h"
#include "OAIFailedEvent.h"
#include "OAIPullStartedEvent.h"
#include "OAIPullStoppedEvent.h"
#include "OAIUnexpectedExitStatusEvent.h"
#include "OAIWorkerAssignedEvent.h"
#include "OAIWorkerReleasedEvent.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContainerKilledEvent;
class OAIContainerStartedEvent;
class OAIContainerStoppedEvent;
class OAIDelayedEvent;
class OAIFailedEvent;
class OAIPullStartedEvent;
class OAIPullStoppedEvent;
class OAIUnexpectedExitStatusEvent;
class OAIWorkerAssignedEvent;
class OAIWorkerReleasedEvent;

class OAIEvent : public OAIObject {
public:
    OAIEvent();
    OAIEvent(QString json);
    ~OAIEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIContainerKilledEvent getContainerKilled() const;
    void setContainerKilled(const OAIContainerKilledEvent &container_killed);
    bool is_container_killed_Set() const;
    bool is_container_killed_Valid() const;

    OAIContainerStartedEvent getContainerStarted() const;
    void setContainerStarted(const OAIContainerStartedEvent &container_started);
    bool is_container_started_Set() const;
    bool is_container_started_Valid() const;

    OAIContainerStoppedEvent getContainerStopped() const;
    void setContainerStopped(const OAIContainerStoppedEvent &container_stopped);
    bool is_container_stopped_Set() const;
    bool is_container_stopped_Valid() const;

    OAIDelayedEvent getDelayed() const;
    void setDelayed(const OAIDelayedEvent &delayed);
    bool is_delayed_Set() const;
    bool is_delayed_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIFailedEvent getFailed() const;
    void setFailed(const OAIFailedEvent &failed);
    bool is_failed_Set() const;
    bool is_failed_Valid() const;

    OAIPullStartedEvent getPullStarted() const;
    void setPullStarted(const OAIPullStartedEvent &pull_started);
    bool is_pull_started_Set() const;
    bool is_pull_started_Valid() const;

    OAIPullStoppedEvent getPullStopped() const;
    void setPullStopped(const OAIPullStoppedEvent &pull_stopped);
    bool is_pull_stopped_Set() const;
    bool is_pull_stopped_Valid() const;

    QString getTimestamp() const;
    void setTimestamp(const QString &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    OAIUnexpectedExitStatusEvent getUnexpectedExitStatus() const;
    void setUnexpectedExitStatus(const OAIUnexpectedExitStatusEvent &unexpected_exit_status);
    bool is_unexpected_exit_status_Set() const;
    bool is_unexpected_exit_status_Valid() const;

    OAIWorkerAssignedEvent getWorkerAssigned() const;
    void setWorkerAssigned(const OAIWorkerAssignedEvent &worker_assigned);
    bool is_worker_assigned_Set() const;
    bool is_worker_assigned_Valid() const;

    OAIWorkerReleasedEvent getWorkerReleased() const;
    void setWorkerReleased(const OAIWorkerReleasedEvent &worker_released);
    bool is_worker_released_Set() const;
    bool is_worker_released_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIContainerKilledEvent m_container_killed;
    bool m_container_killed_isSet;
    bool m_container_killed_isValid;

    OAIContainerStartedEvent m_container_started;
    bool m_container_started_isSet;
    bool m_container_started_isValid;

    OAIContainerStoppedEvent m_container_stopped;
    bool m_container_stopped_isSet;
    bool m_container_stopped_isValid;

    OAIDelayedEvent m_delayed;
    bool m_delayed_isSet;
    bool m_delayed_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIFailedEvent m_failed;
    bool m_failed_isSet;
    bool m_failed_isValid;

    OAIPullStartedEvent m_pull_started;
    bool m_pull_started_isSet;
    bool m_pull_started_isValid;

    OAIPullStoppedEvent m_pull_stopped;
    bool m_pull_stopped_isSet;
    bool m_pull_stopped_isValid;

    QString m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    OAIUnexpectedExitStatusEvent m_unexpected_exit_status;
    bool m_unexpected_exit_status_isSet;
    bool m_unexpected_exit_status_isValid;

    OAIWorkerAssignedEvent m_worker_assigned;
    bool m_worker_assigned_isSet;
    bool m_worker_assigned_isValid;

    OAIWorkerReleasedEvent m_worker_released;
    bool m_worker_released_isSet;
    bool m_worker_released_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEvent)

#endif // OAIEvent_H
