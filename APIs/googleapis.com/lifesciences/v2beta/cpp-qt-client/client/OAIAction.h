/**
 * Cloud Life Sciences API
 * Cloud Life Sciences is a suite of services and tools for managing, processing, and transforming life sciences data.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAction.h
 *
 * Specifies a single action that runs a Docker container.
 */

#ifndef OAIAction_H
#define OAIAction_H

#include <QJsonObject>

#include "OAIMount.h"
#include "OAISecret.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISecret;
class OAIMount;

class OAIAction : public OAIObject {
public:
    OAIAction();
    OAIAction(QString json);
    ~OAIAction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAlwaysRun() const;
    void setAlwaysRun(const bool &always_run);
    bool is_always_run_Set() const;
    bool is_always_run_Valid() const;

    bool isBlockExternalNetwork() const;
    void setBlockExternalNetwork(const bool &block_external_network);
    bool is_block_external_network_Set() const;
    bool is_block_external_network_Valid() const;

    QList<QString> getCommands() const;
    void setCommands(const QList<QString> &commands);
    bool is_commands_Set() const;
    bool is_commands_Valid() const;

    QString getContainerName() const;
    void setContainerName(const QString &container_name);
    bool is_container_name_Set() const;
    bool is_container_name_Valid() const;

    OAISecret getCredentials() const;
    void setCredentials(const OAISecret &credentials);
    bool is_credentials_Set() const;
    bool is_credentials_Valid() const;

    bool isDisableImagePrefetch() const;
    void setDisableImagePrefetch(const bool &disable_image_prefetch);
    bool is_disable_image_prefetch_Set() const;
    bool is_disable_image_prefetch_Valid() const;

    bool isDisableStandardErrorCapture() const;
    void setDisableStandardErrorCapture(const bool &disable_standard_error_capture);
    bool is_disable_standard_error_capture_Set() const;
    bool is_disable_standard_error_capture_Valid() const;

    bool isEnableFuse() const;
    void setEnableFuse(const bool &enable_fuse);
    bool is_enable_fuse_Set() const;
    bool is_enable_fuse_Valid() const;

    OAISecret getEncryptedEnvironment() const;
    void setEncryptedEnvironment(const OAISecret &encrypted_environment);
    bool is_encrypted_environment_Set() const;
    bool is_encrypted_environment_Valid() const;

    QString getEntrypoint() const;
    void setEntrypoint(const QString &entrypoint);
    bool is_entrypoint_Set() const;
    bool is_entrypoint_Valid() const;

    QMap<QString, QString> getEnvironment() const;
    void setEnvironment(const QMap<QString, QString> &environment);
    bool is_environment_Set() const;
    bool is_environment_Valid() const;

    bool isIgnoreExitStatus() const;
    void setIgnoreExitStatus(const bool &ignore_exit_status);
    bool is_ignore_exit_status_Set() const;
    bool is_ignore_exit_status_Valid() const;

    QString getImageUri() const;
    void setImageUri(const QString &image_uri);
    bool is_image_uri_Set() const;
    bool is_image_uri_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QList<OAIMount> getMounts() const;
    void setMounts(const QList<OAIMount> &mounts);
    bool is_mounts_Set() const;
    bool is_mounts_Valid() const;

    QString getPidNamespace() const;
    void setPidNamespace(const QString &pid_namespace);
    bool is_pid_namespace_Set() const;
    bool is_pid_namespace_Valid() const;

    QMap<QString, qint32> getPortMappings() const;
    void setPortMappings(const QMap<QString, qint32> &port_mappings);
    bool is_port_mappings_Set() const;
    bool is_port_mappings_Valid() const;

    bool isPublishExposedPorts() const;
    void setPublishExposedPorts(const bool &publish_exposed_ports);
    bool is_publish_exposed_ports_Set() const;
    bool is_publish_exposed_ports_Valid() const;

    bool isRunInBackground() const;
    void setRunInBackground(const bool &run_in_background);
    bool is_run_in_background_Set() const;
    bool is_run_in_background_Valid() const;

    QString getTimeout() const;
    void setTimeout(const QString &timeout);
    bool is_timeout_Set() const;
    bool is_timeout_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_always_run;
    bool m_always_run_isSet;
    bool m_always_run_isValid;

    bool m_block_external_network;
    bool m_block_external_network_isSet;
    bool m_block_external_network_isValid;

    QList<QString> m_commands;
    bool m_commands_isSet;
    bool m_commands_isValid;

    QString m_container_name;
    bool m_container_name_isSet;
    bool m_container_name_isValid;

    OAISecret m_credentials;
    bool m_credentials_isSet;
    bool m_credentials_isValid;

    bool m_disable_image_prefetch;
    bool m_disable_image_prefetch_isSet;
    bool m_disable_image_prefetch_isValid;

    bool m_disable_standard_error_capture;
    bool m_disable_standard_error_capture_isSet;
    bool m_disable_standard_error_capture_isValid;

    bool m_enable_fuse;
    bool m_enable_fuse_isSet;
    bool m_enable_fuse_isValid;

    OAISecret m_encrypted_environment;
    bool m_encrypted_environment_isSet;
    bool m_encrypted_environment_isValid;

    QString m_entrypoint;
    bool m_entrypoint_isSet;
    bool m_entrypoint_isValid;

    QMap<QString, QString> m_environment;
    bool m_environment_isSet;
    bool m_environment_isValid;

    bool m_ignore_exit_status;
    bool m_ignore_exit_status_isSet;
    bool m_ignore_exit_status_isValid;

    QString m_image_uri;
    bool m_image_uri_isSet;
    bool m_image_uri_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QList<OAIMount> m_mounts;
    bool m_mounts_isSet;
    bool m_mounts_isValid;

    QString m_pid_namespace;
    bool m_pid_namespace_isSet;
    bool m_pid_namespace_isValid;

    QMap<QString, qint32> m_port_mappings;
    bool m_port_mappings_isSet;
    bool m_port_mappings_isValid;

    bool m_publish_exposed_ports;
    bool m_publish_exposed_ports_isSet;
    bool m_publish_exposed_ports_isValid;

    bool m_run_in_background;
    bool m_run_in_background_isSet;
    bool m_run_in_background_isValid;

    QString m_timeout;
    bool m_timeout_isSet;
    bool m_timeout_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAction)

#endif // OAIAction_H
