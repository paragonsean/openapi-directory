# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExistingDisk(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disk: str=None):
        """ExistingDisk - a model defined in OpenAPI

        :param disk: The disk of this ExistingDisk.
        """
        self.openapi_types = {
            'disk': str
        }

        self.attribute_map = {
            'disk': 'disk'
        }

        self._disk = disk

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExistingDisk':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExistingDisk of this ExistingDisk.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disk(self):
        """Gets the disk of this ExistingDisk.

        If `disk` contains slashes, the Cloud Life Sciences API assumes that it is a complete URL for the disk. If `disk` does not contain slashes, the Cloud Life Sciences API assumes that the disk is a zonal disk and a URL will be generated of the form `zones//disks/`, where `` is the zone in which the instance is allocated. The disk must be ext4 formatted. If all `Mount` references to this disk have the `read_only` flag set to true, the disk will be attached in `read-only` mode and can be shared with other instances. Otherwise, the disk will be available for writing but cannot be shared.

        :return: The disk of this ExistingDisk.
        :rtype: str
        """
        return self._disk

    @disk.setter
    def disk(self, disk):
        """Sets the disk of this ExistingDisk.

        If `disk` contains slashes, the Cloud Life Sciences API assumes that it is a complete URL for the disk. If `disk` does not contain slashes, the Cloud Life Sciences API assumes that the disk is a zonal disk and a URL will be generated of the form `zones//disks/`, where `` is the zone in which the instance is allocated. The disk must be ext4 formatted. If all `Mount` references to this disk have the `read_only` flag set to true, the disk will be attached in `read-only` mode and can be shared with other instances. Otherwise, the disk will be available for writing but cannot be shared.

        :param disk: The disk of this ExistingDisk.
        :type disk: str
        """

        self._disk = disk
