/**
 * Cloud Life Sciences API
 * Cloud Life Sciences is a suite of services and tools for managing, processing, and transforming life sciences data.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContainerStoppedEvent model module.
 * @module model/ContainerStoppedEvent
 * @version v2beta
 */
class ContainerStoppedEvent {
    /**
     * Constructs a new <code>ContainerStoppedEvent</code>.
     * An event generated when a container exits.
     * @alias module:model/ContainerStoppedEvent
     */
    constructor() { 
        
        ContainerStoppedEvent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContainerStoppedEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContainerStoppedEvent} obj Optional instance to populate.
     * @return {module:model/ContainerStoppedEvent} The populated <code>ContainerStoppedEvent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContainerStoppedEvent();

            if (data.hasOwnProperty('actionId')) {
                obj['actionId'] = ApiClient.convertToType(data['actionId'], 'Number');
            }
            if (data.hasOwnProperty('exitStatus')) {
                obj['exitStatus'] = ApiClient.convertToType(data['exitStatus'], 'Number');
            }
            if (data.hasOwnProperty('stderr')) {
                obj['stderr'] = ApiClient.convertToType(data['stderr'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContainerStoppedEvent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContainerStoppedEvent</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['stderr'] && !(typeof data['stderr'] === 'string' || data['stderr'] instanceof String)) {
            throw new Error("Expected the field `stderr` to be a primitive type in the JSON string but got " + data['stderr']);
        }

        return true;
    }


}



/**
 * The numeric ID of the action that started this container.
 * @member {Number} actionId
 */
ContainerStoppedEvent.prototype['actionId'] = undefined;

/**
 * The exit status of the container.
 * @member {Number} exitStatus
 */
ContainerStoppedEvent.prototype['exitStatus'] = undefined;

/**
 * The tail end of any content written to standard error by the container. If the content emits large amounts of debugging noise or contains sensitive information, you can prevent the content from being printed by setting the `DISABLE_STANDARD_ERROR_CAPTURE` flag. Note that only a small amount of the end of the stream is captured here. The entire stream is stored in the `/google/logs` directory mounted into each action, and can be copied off the machine as described elsewhere.
 * @member {String} stderr
 */
ContainerStoppedEvent.prototype['stderr'] = undefined;






export default ContainerStoppedEvent;

