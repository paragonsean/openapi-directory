/**
 * Cloud Life Sciences API
 * Cloud Life Sciences is a suite of services and tools for managing, processing, and transforming life sciences data.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Action from './Action';
import Resources from './Resources';
import Secret from './Secret';

/**
 * The Pipeline model module.
 * @module model/Pipeline
 * @version v2beta
 */
class Pipeline {
    /**
     * Constructs a new <code>Pipeline</code>.
     * Specifies a series of actions to execute, expressed as Docker containers.
     * @alias module:model/Pipeline
     */
    constructor() { 
        
        Pipeline.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Pipeline</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Pipeline} obj Optional instance to populate.
     * @return {module:model/Pipeline} The populated <code>Pipeline</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Pipeline();

            if (data.hasOwnProperty('actions')) {
                obj['actions'] = ApiClient.convertToType(data['actions'], [Action]);
            }
            if (data.hasOwnProperty('encryptedEnvironment')) {
                obj['encryptedEnvironment'] = Secret.constructFromObject(data['encryptedEnvironment']);
            }
            if (data.hasOwnProperty('environment')) {
                obj['environment'] = ApiClient.convertToType(data['environment'], {'String': 'String'});
            }
            if (data.hasOwnProperty('resources')) {
                obj['resources'] = Resources.constructFromObject(data['resources']);
            }
            if (data.hasOwnProperty('timeout')) {
                obj['timeout'] = ApiClient.convertToType(data['timeout'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Pipeline</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Pipeline</code>.
     */
    static validateJSON(data) {
        if (data['actions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['actions'])) {
                throw new Error("Expected the field `actions` to be an array in the JSON data but got " + data['actions']);
            }
            // validate the optional field `actions` (array)
            for (const item of data['actions']) {
                Action.validateJSON(item);
            };
        }
        // validate the optional field `encryptedEnvironment`
        if (data['encryptedEnvironment']) { // data not null
          Secret.validateJSON(data['encryptedEnvironment']);
        }
        // validate the optional field `resources`
        if (data['resources']) { // data not null
          Resources.validateJSON(data['resources']);
        }
        // ensure the json data is a string
        if (data['timeout'] && !(typeof data['timeout'] === 'string' || data['timeout'] instanceof String)) {
            throw new Error("Expected the field `timeout` to be a primitive type in the JSON string but got " + data['timeout']);
        }

        return true;
    }


}



/**
 * The list of actions to execute, in the order they are specified.
 * @member {Array.<module:model/Action>} actions
 */
Pipeline.prototype['actions'] = undefined;

/**
 * @member {module:model/Secret} encryptedEnvironment
 */
Pipeline.prototype['encryptedEnvironment'] = undefined;

/**
 * The environment to pass into every action. Each action can also specify additional environment variables but cannot delete an entry from this map (though they can overwrite it with a different value).
 * @member {Object.<String, String>} environment
 */
Pipeline.prototype['environment'] = undefined;

/**
 * @member {module:model/Resources} resources
 */
Pipeline.prototype['resources'] = undefined;

/**
 * The maximum amount of time to give the pipeline to complete. This includes the time spent waiting for a worker to be allocated. If the pipeline fails to complete before the timeout, it will be cancelled and the error code will be set to DEADLINE_EXCEEDED. If unspecified, it will default to 7 days.
 * @member {String} timeout
 */
Pipeline.prototype['timeout'] = undefined;






export default Pipeline;

