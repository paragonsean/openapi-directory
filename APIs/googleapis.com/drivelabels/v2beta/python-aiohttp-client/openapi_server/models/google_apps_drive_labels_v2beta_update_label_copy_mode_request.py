# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, copy_mode: str=None, language_code: str=None, use_admin_access: bool=None, view: str=None):
        """GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest - a model defined in OpenAPI

        :param copy_mode: The copy_mode of this GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest.
        :param language_code: The language_code of this GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest.
        :param use_admin_access: The use_admin_access of this GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest.
        :param view: The view of this GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest.
        """
        self.openapi_types = {
            'copy_mode': str,
            'language_code': str,
            'use_admin_access': bool,
            'view': str
        }

        self.attribute_map = {
            'copy_mode': 'copyMode',
            'language_code': 'languageCode',
            'use_admin_access': 'useAdminAccess',
            'view': 'view'
        }

        self._copy_mode = copy_mode
        self._language_code = language_code
        self._use_admin_access = use_admin_access
        self._view = view

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest of this GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def copy_mode(self):
        """Gets the copy_mode of this GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest.

        Required. Indicates how the applied Label, and Field values should be copied when a Drive item is copied.

        :return: The copy_mode of this GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest.
        :rtype: str
        """
        return self._copy_mode

    @copy_mode.setter
    def copy_mode(self, copy_mode):
        """Sets the copy_mode of this GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest.

        Required. Indicates how the applied Label, and Field values should be copied when a Drive item is copied.

        :param copy_mode: The copy_mode of this GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest.
        :type copy_mode: str
        """
        allowed_values = ["COPY_MODE_UNSPECIFIED", "DO_NOT_COPY", "ALWAYS_COPY", "COPY_APPLIABLE"]  # noqa: E501
        if copy_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `copy_mode` ({0}), must be one of {1}"
                .format(copy_mode, allowed_values)
            )

        self._copy_mode = copy_mode

    @property
    def language_code(self):
        """Gets the language_code of this GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest.

        The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used.

        :return: The language_code of this GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest.
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest.

        The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used.

        :param language_code: The language_code of this GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest.
        :type language_code: str
        """

        self._language_code = language_code

    @property
    def use_admin_access(self):
        """Gets the use_admin_access of this GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest.

        Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.

        :return: The use_admin_access of this GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest.
        :rtype: bool
        """
        return self._use_admin_access

    @use_admin_access.setter
    def use_admin_access(self, use_admin_access):
        """Sets the use_admin_access of this GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest.

        Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.

        :param use_admin_access: The use_admin_access of this GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest.
        :type use_admin_access: bool
        """

        self._use_admin_access = use_admin_access

    @property
    def view(self):
        """Gets the view of this GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest.

        When specified, only certain fields belonging to the indicated view will be returned.

        :return: The view of this GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest.
        :rtype: str
        """
        return self._view

    @view.setter
    def view(self, view):
        """Sets the view of this GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest.

        When specified, only certain fields belonging to the indicated view will be returned.

        :param view: The view of this GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest.
        :type view: str
        """
        allowed_values = ["LABEL_VIEW_BASIC", "LABEL_VIEW_FULL"]  # noqa: E501
        if view not in allowed_values:
            raise ValueError(
                "Invalid value for `view` ({0}), must be one of {1}"
                .format(view, allowed_values)
            )

        self._view = view
