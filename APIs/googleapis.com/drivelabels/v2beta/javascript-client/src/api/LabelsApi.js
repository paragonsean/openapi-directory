/**
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GoogleAppsDriveLabelsV2betaBatchDeleteLabelPermissionsRequest from '../model/GoogleAppsDriveLabelsV2betaBatchDeleteLabelPermissionsRequest';
import GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsRequest from '../model/GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsRequest';
import GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsResponse from '../model/GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsResponse';
import GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequest from '../model/GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequest';
import GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponse from '../model/GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponse';
import GoogleAppsDriveLabelsV2betaDisableLabelRequest from '../model/GoogleAppsDriveLabelsV2betaDisableLabelRequest';
import GoogleAppsDriveLabelsV2betaEnableLabelRequest from '../model/GoogleAppsDriveLabelsV2betaEnableLabelRequest';
import GoogleAppsDriveLabelsV2betaLabel from '../model/GoogleAppsDriveLabelsV2betaLabel';
import GoogleAppsDriveLabelsV2betaLabelPermission from '../model/GoogleAppsDriveLabelsV2betaLabelPermission';
import GoogleAppsDriveLabelsV2betaListLabelLocksResponse from '../model/GoogleAppsDriveLabelsV2betaListLabelLocksResponse';
import GoogleAppsDriveLabelsV2betaListLabelPermissionsResponse from '../model/GoogleAppsDriveLabelsV2betaListLabelPermissionsResponse';
import GoogleAppsDriveLabelsV2betaListLabelsResponse from '../model/GoogleAppsDriveLabelsV2betaListLabelsResponse';
import GoogleAppsDriveLabelsV2betaPublishLabelRequest from '../model/GoogleAppsDriveLabelsV2betaPublishLabelRequest';
import GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest from '../model/GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest';

/**
* Labels service.
* @module api/LabelsApi
* @version v2beta
*/
export default class LabelsApi {

    /**
    * Constructs a new LabelsApi. 
    * @alias module:api/LabelsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the drivelabelsLabelsCreate operation.
     * @callback module:api/LabelsApi~drivelabelsLabelsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleAppsDriveLabelsV2betaLabel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new Label.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [languageCode] The BCP-47 language code to use for evaluating localized Field labels in response. When not specified, values in the default configured language will be used.
     * @param {Boolean} [useAdminAccess] Set to `true` in order to use the user's admin privileges. The server will verify the user is an admin before allowing access.
     * @param {module:model/GoogleAppsDriveLabelsV2betaLabel} [googleAppsDriveLabelsV2betaLabel] 
     * @param {module:api/LabelsApi~drivelabelsLabelsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleAppsDriveLabelsV2betaLabel}
     */
    drivelabelsLabelsCreate(opts, callback) {
      opts = opts || {};
      let postBody = opts['googleAppsDriveLabelsV2betaLabel'];

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'languageCode': opts['languageCode'],
        'useAdminAccess': opts['useAdminAccess']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleAppsDriveLabelsV2betaLabel;
      return this.apiClient.callApi(
        '/v2beta/labels', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the drivelabelsLabelsDelta operation.
     * @callback module:api/LabelsApi~drivelabelsLabelsDeltaCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a single Label by applying a set of update requests resulting in a new draft revision. The batch update is all-or-nothing: If any of the update requests are invalid, no changes are applied. The resulting draft revision must be published before the changes may be used with Drive Items.
     * @param {String} name Required. The resource name of the Label to update.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequest} [googleAppsDriveLabelsV2betaDeltaUpdateLabelRequest] 
     * @param {module:api/LabelsApi~drivelabelsLabelsDeltaCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponse}
     */
    drivelabelsLabelsDelta(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleAppsDriveLabelsV2betaDeltaUpdateLabelRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling drivelabelsLabelsDelta");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponse;
      return this.apiClient.callApi(
        '/v2beta/{name}:delta', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the drivelabelsLabelsDisable operation.
     * @callback module:api/LabelsApi~drivelabelsLabelsDisableCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleAppsDriveLabelsV2betaLabel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disable a published Label. Disabling a Label will result in a new disabled published revision based on the current published revision. If there is a draft revision, a new disabled draft revision will be created based on the latest draft revision. Older draft revisions will be deleted. Once disabled, a label may be deleted with `DeleteLabel`.
     * @param {String} name Required. Label resource name.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleAppsDriveLabelsV2betaDisableLabelRequest} [googleAppsDriveLabelsV2betaDisableLabelRequest] 
     * @param {module:api/LabelsApi~drivelabelsLabelsDisableCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleAppsDriveLabelsV2betaLabel}
     */
    drivelabelsLabelsDisable(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleAppsDriveLabelsV2betaDisableLabelRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling drivelabelsLabelsDisable");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleAppsDriveLabelsV2betaLabel;
      return this.apiClient.callApi(
        '/v2beta/{name}:disable', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the drivelabelsLabelsEnable operation.
     * @callback module:api/LabelsApi~drivelabelsLabelsEnableCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleAppsDriveLabelsV2betaLabel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enable a disabled Label and restore it to its published state. This will result in a new published revision based on the current disabled published revision. If there is an existing disabled draft revision, a new revision will be created based on that draft and will be enabled.
     * @param {String} name Required. Label resource name.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleAppsDriveLabelsV2betaEnableLabelRequest} [googleAppsDriveLabelsV2betaEnableLabelRequest] 
     * @param {module:api/LabelsApi~drivelabelsLabelsEnableCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleAppsDriveLabelsV2betaLabel}
     */
    drivelabelsLabelsEnable(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleAppsDriveLabelsV2betaEnableLabelRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling drivelabelsLabelsEnable");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleAppsDriveLabelsV2betaLabel;
      return this.apiClient.callApi(
        '/v2beta/{name}:enable', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the drivelabelsLabelsList operation.
     * @callback module:api/LabelsApi~drivelabelsLabelsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleAppsDriveLabelsV2betaListLabelsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List labels.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [customer] The customer to scope this list request to. For example: \"customers/abcd1234\". If unset, will return all labels within the current customer.
     * @param {String} [languageCode] The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language are used.
     * @param {module:model/String} [minimumRole] Specifies the level of access the user must have on the returned Labels. The minimum role a user must have on a label. Defaults to `READER`.
     * @param {Number} [pageSize] Maximum number of labels to return per page. Default: 50. Max: 200.
     * @param {String} [pageToken] The token of the page to return.
     * @param {Boolean} [publishedOnly] Whether to include only published labels in the results. * When `true`, only the current published label revisions are returned. Disabled labels are included. Returned label resource names reference the published revision (`labels/{id}/{revision_id}`). * When `false`, the current label revisions are returned, which might not be published. Returned label resource names don't reference a specific revision (`labels/{id}`).
     * @param {Boolean} [useAdminAccess] Set to `true` in order to use the user's admin credentials. This will return all Labels within the customer.
     * @param {module:model/String} [view] When specified, only certain fields belonging to the indicated view are returned.
     * @param {module:api/LabelsApi~drivelabelsLabelsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleAppsDriveLabelsV2betaListLabelsResponse}
     */
    drivelabelsLabelsList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'customer': opts['customer'],
        'languageCode': opts['languageCode'],
        'minimumRole': opts['minimumRole'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'publishedOnly': opts['publishedOnly'],
        'useAdminAccess': opts['useAdminAccess'],
        'view': opts['view']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleAppsDriveLabelsV2betaListLabelsResponse;
      return this.apiClient.callApi(
        '/v2beta/labels', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the drivelabelsLabelsPublish operation.
     * @callback module:api/LabelsApi~drivelabelsLabelsPublishCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleAppsDriveLabelsV2betaLabel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Publish all draft changes to the Label. Once published, the Label may not return to its draft state. See `google.apps.drive.labels.v2.Lifecycle` for more information. Publishing a Label will result in a new published revision. All previous draft revisions will be deleted. Previous published revisions will be kept but are subject to automated deletion as needed. Once published, some changes are no longer permitted. Generally, any change that would invalidate or cause new restrictions on existing metadata related to the Label will be rejected. For example, the following changes to a Label will be rejected after the Label is published: * The label cannot be directly deleted. It must be disabled first, then deleted. * Field.FieldType cannot be changed. * Changes to Field validation options cannot reject something that was previously accepted. * Reducing the max entries.
     * @param {String} name Required. Label resource name.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleAppsDriveLabelsV2betaPublishLabelRequest} [googleAppsDriveLabelsV2betaPublishLabelRequest] 
     * @param {module:api/LabelsApi~drivelabelsLabelsPublishCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleAppsDriveLabelsV2betaLabel}
     */
    drivelabelsLabelsPublish(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleAppsDriveLabelsV2betaPublishLabelRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling drivelabelsLabelsPublish");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleAppsDriveLabelsV2betaLabel;
      return this.apiClient.callApi(
        '/v2beta/{name}:publish', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the drivelabelsLabelsRevisionsLocksList operation.
     * @callback module:api/LabelsApi~drivelabelsLabelsRevisionsLocksListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleAppsDriveLabelsV2betaListLabelLocksResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the LabelLocks on a Label.
     * @param {String} parent Required. Label on which Locks are applied. Format: labels/{label}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Maximum number of Locks to return per page. Default: 100. Max: 200.
     * @param {String} [pageToken] The token of the page to return.
     * @param {module:api/LabelsApi~drivelabelsLabelsRevisionsLocksListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleAppsDriveLabelsV2betaListLabelLocksResponse}
     */
    drivelabelsLabelsRevisionsLocksList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling drivelabelsLabelsRevisionsLocksList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleAppsDriveLabelsV2betaListLabelLocksResponse;
      return this.apiClient.callApi(
        '/v2beta/{parent}/locks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the drivelabelsLabelsRevisionsPermissionsBatchDelete operation.
     * @callback module:api/LabelsApi~drivelabelsLabelsRevisionsPermissionsBatchDeleteCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes Label permissions. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.
     * @param {String} parent Required. The parent Label resource name shared by all permissions being deleted. Format: labels/{label} If this is set, the parent field in the UpdateLabelPermissionRequest messages must either be empty or match this field.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleAppsDriveLabelsV2betaBatchDeleteLabelPermissionsRequest} [googleAppsDriveLabelsV2betaBatchDeleteLabelPermissionsRequest] 
     * @param {module:api/LabelsApi~drivelabelsLabelsRevisionsPermissionsBatchDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    drivelabelsLabelsRevisionsPermissionsBatchDelete(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleAppsDriveLabelsV2betaBatchDeleteLabelPermissionsRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling drivelabelsLabelsRevisionsPermissionsBatchDelete");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v2beta/{parent}/permissions:batchDelete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the drivelabelsLabelsRevisionsPermissionsBatchUpdate operation.
     * @callback module:api/LabelsApi~drivelabelsLabelsRevisionsPermissionsBatchUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates Label permissions. If a permission for the indicated principal doesn't exist, a new Label Permission is created, otherwise the existing permission is updated. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.
     * @param {String} parent Required. The parent Label resource name shared by all permissions being updated. Format: labels/{label} If this is set, the parent field in the UpdateLabelPermissionRequest messages must either be empty or match this field.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsRequest} [googleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsRequest] 
     * @param {module:api/LabelsApi~drivelabelsLabelsRevisionsPermissionsBatchUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsResponse}
     */
    drivelabelsLabelsRevisionsPermissionsBatchUpdate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling drivelabelsLabelsRevisionsPermissionsBatchUpdate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsResponse;
      return this.apiClient.callApi(
        '/v2beta/{parent}/permissions:batchUpdate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the drivelabelsLabelsRevisionsPermissionsCreate operation.
     * @callback module:api/LabelsApi~drivelabelsLabelsRevisionsPermissionsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleAppsDriveLabelsV2betaLabelPermission} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a Label's permissions. If a permission for the indicated principal doesn't exist, a new Label Permission is created, otherwise the existing permission is updated. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.
     * @param {String} parent Required. The parent Label resource name on the Label Permission is created. Format: labels/{label}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Boolean} [useAdminAccess] Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.
     * @param {module:model/GoogleAppsDriveLabelsV2betaLabelPermission} [googleAppsDriveLabelsV2betaLabelPermission] 
     * @param {module:api/LabelsApi~drivelabelsLabelsRevisionsPermissionsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleAppsDriveLabelsV2betaLabelPermission}
     */
    drivelabelsLabelsRevisionsPermissionsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleAppsDriveLabelsV2betaLabelPermission'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling drivelabelsLabelsRevisionsPermissionsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'useAdminAccess': opts['useAdminAccess']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleAppsDriveLabelsV2betaLabelPermission;
      return this.apiClient.callApi(
        '/v2beta/{parent}/permissions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the drivelabelsLabelsRevisionsPermissionsDelete operation.
     * @callback module:api/LabelsApi~drivelabelsLabelsRevisionsPermissionsDeleteCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a Label's permission. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.
     * @param {String} name Required. Label Permission resource name.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Boolean} [useAdminAccess] Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.
     * @param {String} [writeControlRequiredRevisionId] The revision_id of the label that the write request will be applied to. If this is not the latest revision of the label, the request will not be processed and will return a 400 Bad Request error.
     * @param {module:api/LabelsApi~drivelabelsLabelsRevisionsPermissionsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    drivelabelsLabelsRevisionsPermissionsDelete(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling drivelabelsLabelsRevisionsPermissionsDelete");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'useAdminAccess': opts['useAdminAccess'],
        'writeControl.requiredRevisionId': opts['writeControlRequiredRevisionId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v2beta/{name}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the drivelabelsLabelsRevisionsPermissionsList operation.
     * @callback module:api/LabelsApi~drivelabelsLabelsRevisionsPermissionsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleAppsDriveLabelsV2betaListLabelPermissionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists a Label's permissions.
     * @param {String} parent Required. The parent Label resource name on which Label Permission are listed. Format: labels/{label}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Maximum number of permissions to return per page. Default: 50. Max: 200.
     * @param {String} [pageToken] The token of the page to return.
     * @param {Boolean} [useAdminAccess] Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.
     * @param {module:api/LabelsApi~drivelabelsLabelsRevisionsPermissionsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleAppsDriveLabelsV2betaListLabelPermissionsResponse}
     */
    drivelabelsLabelsRevisionsPermissionsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling drivelabelsLabelsRevisionsPermissionsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'useAdminAccess': opts['useAdminAccess']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleAppsDriveLabelsV2betaListLabelPermissionsResponse;
      return this.apiClient.callApi(
        '/v2beta/{parent}/permissions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the drivelabelsLabelsRevisionsUpdatePermissions operation.
     * @callback module:api/LabelsApi~drivelabelsLabelsRevisionsUpdatePermissionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleAppsDriveLabelsV2betaLabelPermission} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a Label's permissions. If a permission for the indicated principal doesn't exist, a new Label Permission is created, otherwise the existing permission is updated. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.
     * @param {String} parent Required. The parent Label resource name.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Boolean} [useAdminAccess] Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.
     * @param {module:model/GoogleAppsDriveLabelsV2betaLabelPermission} [googleAppsDriveLabelsV2betaLabelPermission] 
     * @param {module:api/LabelsApi~drivelabelsLabelsRevisionsUpdatePermissionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleAppsDriveLabelsV2betaLabelPermission}
     */
    drivelabelsLabelsRevisionsUpdatePermissions(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleAppsDriveLabelsV2betaLabelPermission'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling drivelabelsLabelsRevisionsUpdatePermissions");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'useAdminAccess': opts['useAdminAccess']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleAppsDriveLabelsV2betaLabelPermission;
      return this.apiClient.callApi(
        '/v2beta/{parent}/permissions', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the drivelabelsLabelsUpdateLabelCopyMode operation.
     * @callback module:api/LabelsApi~drivelabelsLabelsUpdateLabelCopyModeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleAppsDriveLabelsV2betaLabel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a Label's `CopyMode`. Changes to this policy are not revisioned, do not require publishing, and take effect immediately.
     * @param {String} name Required. The resource name of the Label to update.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest} [googleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest] 
     * @param {module:api/LabelsApi~drivelabelsLabelsUpdateLabelCopyModeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleAppsDriveLabelsV2betaLabel}
     */
    drivelabelsLabelsUpdateLabelCopyMode(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling drivelabelsLabelsUpdateLabelCopyMode");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleAppsDriveLabelsV2betaLabel;
      return this.apiClient.callApi(
        '/v2beta/{name}:updateLabelCopyMode', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
