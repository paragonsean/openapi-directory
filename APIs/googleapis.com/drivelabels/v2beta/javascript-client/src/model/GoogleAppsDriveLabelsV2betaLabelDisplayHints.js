/**
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleAppsDriveLabelsV2betaLabelDisplayHints model module.
 * @module model/GoogleAppsDriveLabelsV2betaLabelDisplayHints
 * @version v2beta
 */
class GoogleAppsDriveLabelsV2betaLabelDisplayHints {
    /**
     * Constructs a new <code>GoogleAppsDriveLabelsV2betaLabelDisplayHints</code>.
     * UI display hints for rendering the label.
     * @alias module:model/GoogleAppsDriveLabelsV2betaLabelDisplayHints
     */
    constructor() { 
        
        GoogleAppsDriveLabelsV2betaLabelDisplayHints.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleAppsDriveLabelsV2betaLabelDisplayHints</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleAppsDriveLabelsV2betaLabelDisplayHints} obj Optional instance to populate.
     * @return {module:model/GoogleAppsDriveLabelsV2betaLabelDisplayHints} The populated <code>GoogleAppsDriveLabelsV2betaLabelDisplayHints</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleAppsDriveLabelsV2betaLabelDisplayHints();

            if (data.hasOwnProperty('disabled')) {
                obj['disabled'] = ApiClient.convertToType(data['disabled'], 'Boolean');
            }
            if (data.hasOwnProperty('hiddenInSearch')) {
                obj['hiddenInSearch'] = ApiClient.convertToType(data['hiddenInSearch'], 'Boolean');
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'String');
            }
            if (data.hasOwnProperty('shownInApply')) {
                obj['shownInApply'] = ApiClient.convertToType(data['shownInApply'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleAppsDriveLabelsV2betaLabelDisplayHints</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleAppsDriveLabelsV2betaLabelDisplayHints</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['priority'] && !(typeof data['priority'] === 'string' || data['priority'] instanceof String)) {
            throw new Error("Expected the field `priority` to be a primitive type in the JSON string but got " + data['priority']);
        }

        return true;
    }


}



/**
 * Whether the label should be shown in the UI as disabled.
 * @member {Boolean} disabled
 */
GoogleAppsDriveLabelsV2betaLabelDisplayHints.prototype['disabled'] = undefined;

/**
 * This label should be hidden in the search menu when searching for Drive items.
 * @member {Boolean} hiddenInSearch
 */
GoogleAppsDriveLabelsV2betaLabelDisplayHints.prototype['hiddenInSearch'] = undefined;

/**
 * Order to display label in a list.
 * @member {String} priority
 */
GoogleAppsDriveLabelsV2betaLabelDisplayHints.prototype['priority'] = undefined;

/**
 * This label should be shown in the apply menu when applying values to a Drive item.
 * @member {Boolean} shownInApply
 */
GoogleAppsDriveLabelsV2betaLabelDisplayHints.prototype['shownInApply'] = undefined;






export default GoogleAppsDriveLabelsV2betaLabelDisplayHints;

