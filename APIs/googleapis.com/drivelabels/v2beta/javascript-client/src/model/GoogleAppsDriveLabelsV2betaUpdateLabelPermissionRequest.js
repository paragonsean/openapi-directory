/**
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleAppsDriveLabelsV2betaLabelPermission from './GoogleAppsDriveLabelsV2betaLabelPermission';

/**
 * The GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest model module.
 * @module model/GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest
 * @version v2beta
 */
class GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest {
    /**
     * Constructs a new <code>GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest</code>.
     * Updates a Label Permission. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.
     * @alias module:model/GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest
     */
    constructor() { 
        
        GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest} obj Optional instance to populate.
     * @return {module:model/GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest} The populated <code>GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest();

            if (data.hasOwnProperty('labelPermission')) {
                obj['labelPermission'] = GoogleAppsDriveLabelsV2betaLabelPermission.constructFromObject(data['labelPermission']);
            }
            if (data.hasOwnProperty('parent')) {
                obj['parent'] = ApiClient.convertToType(data['parent'], 'String');
            }
            if (data.hasOwnProperty('useAdminAccess')) {
                obj['useAdminAccess'] = ApiClient.convertToType(data['useAdminAccess'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `labelPermission`
        if (data['labelPermission']) { // data not null
          GoogleAppsDriveLabelsV2betaLabelPermission.validateJSON(data['labelPermission']);
        }
        // ensure the json data is a string
        if (data['parent'] && !(typeof data['parent'] === 'string' || data['parent'] instanceof String)) {
            throw new Error("Expected the field `parent` to be a primitive type in the JSON string but got " + data['parent']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleAppsDriveLabelsV2betaLabelPermission} labelPermission
 */
GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest.prototype['labelPermission'] = undefined;

/**
 * Required. The parent Label resource name.
 * @member {String} parent
 */
GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest.prototype['parent'] = undefined;

/**
 * Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.
 * @member {Boolean} useAdminAccess
 */
GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest.prototype['useAdminAccess'] = undefined;






export default GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest;

