/**
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DriveLabelsApi);
  }
}(this, function(expect, DriveLabelsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DriveLabelsApi.GoogleAppsDriveLabelsV2betaLabel();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GoogleAppsDriveLabelsV2betaLabel', function() {
    it('should create an instance of GoogleAppsDriveLabelsV2betaLabel', function() {
      // uncomment below and update the code to test GoogleAppsDriveLabelsV2betaLabel
      //var instance = new DriveLabelsApi.GoogleAppsDriveLabelsV2betaLabel();
      //expect(instance).to.be.a(DriveLabelsApi.GoogleAppsDriveLabelsV2betaLabel);
    });

    it('should have the property appliedCapabilities (base name: "appliedCapabilities")', function() {
      // uncomment below and update the code to test the property appliedCapabilities
      //var instance = new DriveLabelsApi.GoogleAppsDriveLabelsV2betaLabel();
      //expect(instance).to.be();
    });

    it('should have the property appliedLabelPolicy (base name: "appliedLabelPolicy")', function() {
      // uncomment below and update the code to test the property appliedLabelPolicy
      //var instance = new DriveLabelsApi.GoogleAppsDriveLabelsV2betaLabel();
      //expect(instance).to.be();
    });

    it('should have the property createTime (base name: "createTime")', function() {
      // uncomment below and update the code to test the property createTime
      //var instance = new DriveLabelsApi.GoogleAppsDriveLabelsV2betaLabel();
      //expect(instance).to.be();
    });

    it('should have the property creator (base name: "creator")', function() {
      // uncomment below and update the code to test the property creator
      //var instance = new DriveLabelsApi.GoogleAppsDriveLabelsV2betaLabel();
      //expect(instance).to.be();
    });

    it('should have the property customer (base name: "customer")', function() {
      // uncomment below and update the code to test the property customer
      //var instance = new DriveLabelsApi.GoogleAppsDriveLabelsV2betaLabel();
      //expect(instance).to.be();
    });

    it('should have the property disableTime (base name: "disableTime")', function() {
      // uncomment below and update the code to test the property disableTime
      //var instance = new DriveLabelsApi.GoogleAppsDriveLabelsV2betaLabel();
      //expect(instance).to.be();
    });

    it('should have the property disabler (base name: "disabler")', function() {
      // uncomment below and update the code to test the property disabler
      //var instance = new DriveLabelsApi.GoogleAppsDriveLabelsV2betaLabel();
      //expect(instance).to.be();
    });

    it('should have the property displayHints (base name: "displayHints")', function() {
      // uncomment below and update the code to test the property displayHints
      //var instance = new DriveLabelsApi.GoogleAppsDriveLabelsV2betaLabel();
      //expect(instance).to.be();
    });

    it('should have the property fields (base name: "fields")', function() {
      // uncomment below and update the code to test the property fields
      //var instance = new DriveLabelsApi.GoogleAppsDriveLabelsV2betaLabel();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new DriveLabelsApi.GoogleAppsDriveLabelsV2betaLabel();
      //expect(instance).to.be();
    });

    it('should have the property labelType (base name: "labelType")', function() {
      // uncomment below and update the code to test the property labelType
      //var instance = new DriveLabelsApi.GoogleAppsDriveLabelsV2betaLabel();
      //expect(instance).to.be();
    });

    it('should have the property learnMoreUri (base name: "learnMoreUri")', function() {
      // uncomment below and update the code to test the property learnMoreUri
      //var instance = new DriveLabelsApi.GoogleAppsDriveLabelsV2betaLabel();
      //expect(instance).to.be();
    });

    it('should have the property lifecycle (base name: "lifecycle")', function() {
      // uncomment below and update the code to test the property lifecycle
      //var instance = new DriveLabelsApi.GoogleAppsDriveLabelsV2betaLabel();
      //expect(instance).to.be();
    });

    it('should have the property lockStatus (base name: "lockStatus")', function() {
      // uncomment below and update the code to test the property lockStatus
      //var instance = new DriveLabelsApi.GoogleAppsDriveLabelsV2betaLabel();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new DriveLabelsApi.GoogleAppsDriveLabelsV2betaLabel();
      //expect(instance).to.be();
    });

    it('should have the property properties (base name: "properties")', function() {
      // uncomment below and update the code to test the property properties
      //var instance = new DriveLabelsApi.GoogleAppsDriveLabelsV2betaLabel();
      //expect(instance).to.be();
    });

    it('should have the property publishTime (base name: "publishTime")', function() {
      // uncomment below and update the code to test the property publishTime
      //var instance = new DriveLabelsApi.GoogleAppsDriveLabelsV2betaLabel();
      //expect(instance).to.be();
    });

    it('should have the property publisher (base name: "publisher")', function() {
      // uncomment below and update the code to test the property publisher
      //var instance = new DriveLabelsApi.GoogleAppsDriveLabelsV2betaLabel();
      //expect(instance).to.be();
    });

    it('should have the property revisionCreateTime (base name: "revisionCreateTime")', function() {
      // uncomment below and update the code to test the property revisionCreateTime
      //var instance = new DriveLabelsApi.GoogleAppsDriveLabelsV2betaLabel();
      //expect(instance).to.be();
    });

    it('should have the property revisionCreator (base name: "revisionCreator")', function() {
      // uncomment below and update the code to test the property revisionCreator
      //var instance = new DriveLabelsApi.GoogleAppsDriveLabelsV2betaLabel();
      //expect(instance).to.be();
    });

    it('should have the property revisionId (base name: "revisionId")', function() {
      // uncomment below and update the code to test the property revisionId
      //var instance = new DriveLabelsApi.GoogleAppsDriveLabelsV2betaLabel();
      //expect(instance).to.be();
    });

    it('should have the property schemaCapabilities (base name: "schemaCapabilities")', function() {
      // uncomment below and update the code to test the property schemaCapabilities
      //var instance = new DriveLabelsApi.GoogleAppsDriveLabelsV2betaLabel();
      //expect(instance).to.be();
    });

  });

}));
