/*
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2betaField;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2betaLabelAppliedCapabilities;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2betaLabelAppliedLabelPolicy;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2betaLabelDisplayHints;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2betaLabelProperties;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2betaLabelSchemaCapabilities;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2betaLifecycle;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2betaLockStatus;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2betaUserInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A label defines a taxonomy that can be applied to Drive items in order to organize and search across items. Labels can be simple strings, or can contain fields that describe additional metadata that can be further used to organize and search Drive items.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:43:40.592480-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAppsDriveLabelsV2betaLabel {
  public static final String SERIALIZED_NAME_APPLIED_CAPABILITIES = "appliedCapabilities";
  @SerializedName(SERIALIZED_NAME_APPLIED_CAPABILITIES)
  private GoogleAppsDriveLabelsV2betaLabelAppliedCapabilities appliedCapabilities;

  public static final String SERIALIZED_NAME_APPLIED_LABEL_POLICY = "appliedLabelPolicy";
  @SerializedName(SERIALIZED_NAME_APPLIED_LABEL_POLICY)
  private GoogleAppsDriveLabelsV2betaLabelAppliedLabelPolicy appliedLabelPolicy;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_CREATOR = "creator";
  @SerializedName(SERIALIZED_NAME_CREATOR)
  private GoogleAppsDriveLabelsV2betaUserInfo creator;

  public static final String SERIALIZED_NAME_CUSTOMER = "customer";
  @SerializedName(SERIALIZED_NAME_CUSTOMER)
  private String customer;

  public static final String SERIALIZED_NAME_DISABLE_TIME = "disableTime";
  @SerializedName(SERIALIZED_NAME_DISABLE_TIME)
  private String disableTime;

  public static final String SERIALIZED_NAME_DISABLER = "disabler";
  @SerializedName(SERIALIZED_NAME_DISABLER)
  private GoogleAppsDriveLabelsV2betaUserInfo disabler;

  public static final String SERIALIZED_NAME_DISPLAY_HINTS = "displayHints";
  @SerializedName(SERIALIZED_NAME_DISPLAY_HINTS)
  private GoogleAppsDriveLabelsV2betaLabelDisplayHints displayHints;

  public static final String SERIALIZED_NAME_FIELDS = "fields";
  @SerializedName(SERIALIZED_NAME_FIELDS)
  private List<GoogleAppsDriveLabelsV2betaField> fields = new ArrayList<>();

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  /**
   * Required. The type of label.
   */
  @JsonAdapter(LabelTypeEnum.Adapter.class)
  public enum LabelTypeEnum {
    LABEL_TYPE_UNSPECIFIED("LABEL_TYPE_UNSPECIFIED"),
    
    SHARED("SHARED"),
    
    ADMIN("ADMIN"),
    
    GOOGLE_APP("GOOGLE_APP");

    private String value;

    LabelTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LabelTypeEnum fromValue(String value) {
      for (LabelTypeEnum b : LabelTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LabelTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LabelTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LabelTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LabelTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      LabelTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_LABEL_TYPE = "labelType";
  @SerializedName(SERIALIZED_NAME_LABEL_TYPE)
  private LabelTypeEnum labelType;

  public static final String SERIALIZED_NAME_LEARN_MORE_URI = "learnMoreUri";
  @SerializedName(SERIALIZED_NAME_LEARN_MORE_URI)
  private String learnMoreUri;

  public static final String SERIALIZED_NAME_LIFECYCLE = "lifecycle";
  @SerializedName(SERIALIZED_NAME_LIFECYCLE)
  private GoogleAppsDriveLabelsV2betaLifecycle lifecycle;

  public static final String SERIALIZED_NAME_LOCK_STATUS = "lockStatus";
  @SerializedName(SERIALIZED_NAME_LOCK_STATUS)
  private GoogleAppsDriveLabelsV2betaLockStatus lockStatus;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PROPERTIES = "properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private GoogleAppsDriveLabelsV2betaLabelProperties properties;

  public static final String SERIALIZED_NAME_PUBLISH_TIME = "publishTime";
  @SerializedName(SERIALIZED_NAME_PUBLISH_TIME)
  private String publishTime;

  public static final String SERIALIZED_NAME_PUBLISHER = "publisher";
  @SerializedName(SERIALIZED_NAME_PUBLISHER)
  private GoogleAppsDriveLabelsV2betaUserInfo publisher;

  public static final String SERIALIZED_NAME_REVISION_CREATE_TIME = "revisionCreateTime";
  @SerializedName(SERIALIZED_NAME_REVISION_CREATE_TIME)
  private String revisionCreateTime;

  public static final String SERIALIZED_NAME_REVISION_CREATOR = "revisionCreator";
  @SerializedName(SERIALIZED_NAME_REVISION_CREATOR)
  private GoogleAppsDriveLabelsV2betaUserInfo revisionCreator;

  public static final String SERIALIZED_NAME_REVISION_ID = "revisionId";
  @SerializedName(SERIALIZED_NAME_REVISION_ID)
  private String revisionId;

  public static final String SERIALIZED_NAME_SCHEMA_CAPABILITIES = "schemaCapabilities";
  @SerializedName(SERIALIZED_NAME_SCHEMA_CAPABILITIES)
  private GoogleAppsDriveLabelsV2betaLabelSchemaCapabilities schemaCapabilities;

  public GoogleAppsDriveLabelsV2betaLabel() {
  }

  public GoogleAppsDriveLabelsV2betaLabel(
     String createTime, 
     String customer, 
     String disableTime, 
     String id, 
     String name, 
     String publishTime, 
     String revisionCreateTime, 
     String revisionId
  ) {
    this();
    this.createTime = createTime;
    this.customer = customer;
    this.disableTime = disableTime;
    this.id = id;
    this.name = name;
    this.publishTime = publishTime;
    this.revisionCreateTime = revisionCreateTime;
    this.revisionId = revisionId;
  }

  public GoogleAppsDriveLabelsV2betaLabel appliedCapabilities(GoogleAppsDriveLabelsV2betaLabelAppliedCapabilities appliedCapabilities) {
    this.appliedCapabilities = appliedCapabilities;
    return this;
  }

  /**
   * Get appliedCapabilities
   * @return appliedCapabilities
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2betaLabelAppliedCapabilities getAppliedCapabilities() {
    return appliedCapabilities;
  }

  public void setAppliedCapabilities(GoogleAppsDriveLabelsV2betaLabelAppliedCapabilities appliedCapabilities) {
    this.appliedCapabilities = appliedCapabilities;
  }


  public GoogleAppsDriveLabelsV2betaLabel appliedLabelPolicy(GoogleAppsDriveLabelsV2betaLabelAppliedLabelPolicy appliedLabelPolicy) {
    this.appliedLabelPolicy = appliedLabelPolicy;
    return this;
  }

  /**
   * Get appliedLabelPolicy
   * @return appliedLabelPolicy
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2betaLabelAppliedLabelPolicy getAppliedLabelPolicy() {
    return appliedLabelPolicy;
  }

  public void setAppliedLabelPolicy(GoogleAppsDriveLabelsV2betaLabelAppliedLabelPolicy appliedLabelPolicy) {
    this.appliedLabelPolicy = appliedLabelPolicy;
  }


  /**
   * Output only. The time this label was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleAppsDriveLabelsV2betaLabel creator(GoogleAppsDriveLabelsV2betaUserInfo creator) {
    this.creator = creator;
    return this;
  }

  /**
   * Get creator
   * @return creator
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2betaUserInfo getCreator() {
    return creator;
  }

  public void setCreator(GoogleAppsDriveLabelsV2betaUserInfo creator) {
    this.creator = creator;
  }


  /**
   * Output only. The customer this label belongs to. For example: \&quot;customers/123abc789.\&quot;
   * @return customer
   */
  @javax.annotation.Nullable
  public String getCustomer() {
    return customer;
  }



  /**
   * Output only. The time this label was disabled. This value has no meaning when the label is not disabled.
   * @return disableTime
   */
  @javax.annotation.Nullable
  public String getDisableTime() {
    return disableTime;
  }



  public GoogleAppsDriveLabelsV2betaLabel disabler(GoogleAppsDriveLabelsV2betaUserInfo disabler) {
    this.disabler = disabler;
    return this;
  }

  /**
   * Get disabler
   * @return disabler
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2betaUserInfo getDisabler() {
    return disabler;
  }

  public void setDisabler(GoogleAppsDriveLabelsV2betaUserInfo disabler) {
    this.disabler = disabler;
  }


  public GoogleAppsDriveLabelsV2betaLabel displayHints(GoogleAppsDriveLabelsV2betaLabelDisplayHints displayHints) {
    this.displayHints = displayHints;
    return this;
  }

  /**
   * Get displayHints
   * @return displayHints
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2betaLabelDisplayHints getDisplayHints() {
    return displayHints;
  }

  public void setDisplayHints(GoogleAppsDriveLabelsV2betaLabelDisplayHints displayHints) {
    this.displayHints = displayHints;
  }


  public GoogleAppsDriveLabelsV2betaLabel fields(List<GoogleAppsDriveLabelsV2betaField> fields) {
    this.fields = fields;
    return this;
  }

  public GoogleAppsDriveLabelsV2betaLabel addFieldsItem(GoogleAppsDriveLabelsV2betaField fieldsItem) {
    if (this.fields == null) {
      this.fields = new ArrayList<>();
    }
    this.fields.add(fieldsItem);
    return this;
  }

  /**
   * List of fields in descending priority order.
   * @return fields
   */
  @javax.annotation.Nullable
  public List<GoogleAppsDriveLabelsV2betaField> getFields() {
    return fields;
  }

  public void setFields(List<GoogleAppsDriveLabelsV2betaField> fields) {
    this.fields = fields;
  }


  /**
   * Output only. Globally unique identifier of this label. ID makes up part of the label &#x60;name&#x60;, but unlike &#x60;name&#x60;, ID is consistent between revisions. Matches the regex: &#x60;([a-zA-Z0-9])+&#x60;
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }



  public GoogleAppsDriveLabelsV2betaLabel labelType(LabelTypeEnum labelType) {
    this.labelType = labelType;
    return this;
  }

  /**
   * Required. The type of label.
   * @return labelType
   */
  @javax.annotation.Nullable
  public LabelTypeEnum getLabelType() {
    return labelType;
  }

  public void setLabelType(LabelTypeEnum labelType) {
    this.labelType = labelType;
  }


  public GoogleAppsDriveLabelsV2betaLabel learnMoreUri(String learnMoreUri) {
    this.learnMoreUri = learnMoreUri;
    return this;
  }

  /**
   * Custom URL to present to users to allow them to learn more about this label and how it should be used.
   * @return learnMoreUri
   */
  @javax.annotation.Nullable
  public String getLearnMoreUri() {
    return learnMoreUri;
  }

  public void setLearnMoreUri(String learnMoreUri) {
    this.learnMoreUri = learnMoreUri;
  }


  public GoogleAppsDriveLabelsV2betaLabel lifecycle(GoogleAppsDriveLabelsV2betaLifecycle lifecycle) {
    this.lifecycle = lifecycle;
    return this;
  }

  /**
   * Get lifecycle
   * @return lifecycle
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2betaLifecycle getLifecycle() {
    return lifecycle;
  }

  public void setLifecycle(GoogleAppsDriveLabelsV2betaLifecycle lifecycle) {
    this.lifecycle = lifecycle;
  }


  public GoogleAppsDriveLabelsV2betaLabel lockStatus(GoogleAppsDriveLabelsV2betaLockStatus lockStatus) {
    this.lockStatus = lockStatus;
    return this;
  }

  /**
   * Get lockStatus
   * @return lockStatus
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2betaLockStatus getLockStatus() {
    return lockStatus;
  }

  public void setLockStatus(GoogleAppsDriveLabelsV2betaLockStatus lockStatus) {
    this.lockStatus = lockStatus;
  }


  /**
   * Output only. Resource name of the label. Will be in the form of either: &#x60;labels/{id}&#x60; or &#x60;labels/{id}@{revision_id}&#x60; depending on the request. See &#x60;id&#x60; and &#x60;revision_id&#x60; below.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public GoogleAppsDriveLabelsV2betaLabel properties(GoogleAppsDriveLabelsV2betaLabelProperties properties) {
    this.properties = properties;
    return this;
  }

  /**
   * Get properties
   * @return properties
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2betaLabelProperties getProperties() {
    return properties;
  }

  public void setProperties(GoogleAppsDriveLabelsV2betaLabelProperties properties) {
    this.properties = properties;
  }


  /**
   * Output only. The time this label was published. This value has no meaning when the label is not published.
   * @return publishTime
   */
  @javax.annotation.Nullable
  public String getPublishTime() {
    return publishTime;
  }



  public GoogleAppsDriveLabelsV2betaLabel publisher(GoogleAppsDriveLabelsV2betaUserInfo publisher) {
    this.publisher = publisher;
    return this;
  }

  /**
   * Get publisher
   * @return publisher
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2betaUserInfo getPublisher() {
    return publisher;
  }

  public void setPublisher(GoogleAppsDriveLabelsV2betaUserInfo publisher) {
    this.publisher = publisher;
  }


  /**
   * Output only. The time this label revision was created.
   * @return revisionCreateTime
   */
  @javax.annotation.Nullable
  public String getRevisionCreateTime() {
    return revisionCreateTime;
  }



  public GoogleAppsDriveLabelsV2betaLabel revisionCreator(GoogleAppsDriveLabelsV2betaUserInfo revisionCreator) {
    this.revisionCreator = revisionCreator;
    return this;
  }

  /**
   * Get revisionCreator
   * @return revisionCreator
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2betaUserInfo getRevisionCreator() {
    return revisionCreator;
  }

  public void setRevisionCreator(GoogleAppsDriveLabelsV2betaUserInfo revisionCreator) {
    this.revisionCreator = revisionCreator;
  }


  /**
   * Output only. Revision ID of the label. Revision ID might be part of the label &#x60;name&#x60; depending on the request issued. A new revision is created whenever revisioned properties of a label are changed. Matches the regex: &#x60;([a-zA-Z0-9])+&#x60;
   * @return revisionId
   */
  @javax.annotation.Nullable
  public String getRevisionId() {
    return revisionId;
  }



  public GoogleAppsDriveLabelsV2betaLabel schemaCapabilities(GoogleAppsDriveLabelsV2betaLabelSchemaCapabilities schemaCapabilities) {
    this.schemaCapabilities = schemaCapabilities;
    return this;
  }

  /**
   * Get schemaCapabilities
   * @return schemaCapabilities
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2betaLabelSchemaCapabilities getSchemaCapabilities() {
    return schemaCapabilities;
  }

  public void setSchemaCapabilities(GoogleAppsDriveLabelsV2betaLabelSchemaCapabilities schemaCapabilities) {
    this.schemaCapabilities = schemaCapabilities;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAppsDriveLabelsV2betaLabel googleAppsDriveLabelsV2betaLabel = (GoogleAppsDriveLabelsV2betaLabel) o;
    return Objects.equals(this.appliedCapabilities, googleAppsDriveLabelsV2betaLabel.appliedCapabilities) &&
        Objects.equals(this.appliedLabelPolicy, googleAppsDriveLabelsV2betaLabel.appliedLabelPolicy) &&
        Objects.equals(this.createTime, googleAppsDriveLabelsV2betaLabel.createTime) &&
        Objects.equals(this.creator, googleAppsDriveLabelsV2betaLabel.creator) &&
        Objects.equals(this.customer, googleAppsDriveLabelsV2betaLabel.customer) &&
        Objects.equals(this.disableTime, googleAppsDriveLabelsV2betaLabel.disableTime) &&
        Objects.equals(this.disabler, googleAppsDriveLabelsV2betaLabel.disabler) &&
        Objects.equals(this.displayHints, googleAppsDriveLabelsV2betaLabel.displayHints) &&
        Objects.equals(this.fields, googleAppsDriveLabelsV2betaLabel.fields) &&
        Objects.equals(this.id, googleAppsDriveLabelsV2betaLabel.id) &&
        Objects.equals(this.labelType, googleAppsDriveLabelsV2betaLabel.labelType) &&
        Objects.equals(this.learnMoreUri, googleAppsDriveLabelsV2betaLabel.learnMoreUri) &&
        Objects.equals(this.lifecycle, googleAppsDriveLabelsV2betaLabel.lifecycle) &&
        Objects.equals(this.lockStatus, googleAppsDriveLabelsV2betaLabel.lockStatus) &&
        Objects.equals(this.name, googleAppsDriveLabelsV2betaLabel.name) &&
        Objects.equals(this.properties, googleAppsDriveLabelsV2betaLabel.properties) &&
        Objects.equals(this.publishTime, googleAppsDriveLabelsV2betaLabel.publishTime) &&
        Objects.equals(this.publisher, googleAppsDriveLabelsV2betaLabel.publisher) &&
        Objects.equals(this.revisionCreateTime, googleAppsDriveLabelsV2betaLabel.revisionCreateTime) &&
        Objects.equals(this.revisionCreator, googleAppsDriveLabelsV2betaLabel.revisionCreator) &&
        Objects.equals(this.revisionId, googleAppsDriveLabelsV2betaLabel.revisionId) &&
        Objects.equals(this.schemaCapabilities, googleAppsDriveLabelsV2betaLabel.schemaCapabilities);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appliedCapabilities, appliedLabelPolicy, createTime, creator, customer, disableTime, disabler, displayHints, fields, id, labelType, learnMoreUri, lifecycle, lockStatus, name, properties, publishTime, publisher, revisionCreateTime, revisionCreator, revisionId, schemaCapabilities);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAppsDriveLabelsV2betaLabel {\n");
    sb.append("    appliedCapabilities: ").append(toIndentedString(appliedCapabilities)).append("\n");
    sb.append("    appliedLabelPolicy: ").append(toIndentedString(appliedLabelPolicy)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    disableTime: ").append(toIndentedString(disableTime)).append("\n");
    sb.append("    disabler: ").append(toIndentedString(disabler)).append("\n");
    sb.append("    displayHints: ").append(toIndentedString(displayHints)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    labelType: ").append(toIndentedString(labelType)).append("\n");
    sb.append("    learnMoreUri: ").append(toIndentedString(learnMoreUri)).append("\n");
    sb.append("    lifecycle: ").append(toIndentedString(lifecycle)).append("\n");
    sb.append("    lockStatus: ").append(toIndentedString(lockStatus)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    publishTime: ").append(toIndentedString(publishTime)).append("\n");
    sb.append("    publisher: ").append(toIndentedString(publisher)).append("\n");
    sb.append("    revisionCreateTime: ").append(toIndentedString(revisionCreateTime)).append("\n");
    sb.append("    revisionCreator: ").append(toIndentedString(revisionCreator)).append("\n");
    sb.append("    revisionId: ").append(toIndentedString(revisionId)).append("\n");
    sb.append("    schemaCapabilities: ").append(toIndentedString(schemaCapabilities)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appliedCapabilities");
    openapiFields.add("appliedLabelPolicy");
    openapiFields.add("createTime");
    openapiFields.add("creator");
    openapiFields.add("customer");
    openapiFields.add("disableTime");
    openapiFields.add("disabler");
    openapiFields.add("displayHints");
    openapiFields.add("fields");
    openapiFields.add("id");
    openapiFields.add("labelType");
    openapiFields.add("learnMoreUri");
    openapiFields.add("lifecycle");
    openapiFields.add("lockStatus");
    openapiFields.add("name");
    openapiFields.add("properties");
    openapiFields.add("publishTime");
    openapiFields.add("publisher");
    openapiFields.add("revisionCreateTime");
    openapiFields.add("revisionCreator");
    openapiFields.add("revisionId");
    openapiFields.add("schemaCapabilities");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAppsDriveLabelsV2betaLabel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAppsDriveLabelsV2betaLabel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAppsDriveLabelsV2betaLabel is not found in the empty JSON string", GoogleAppsDriveLabelsV2betaLabel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAppsDriveLabelsV2betaLabel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAppsDriveLabelsV2betaLabel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `appliedCapabilities`
      if (jsonObj.get("appliedCapabilities") != null && !jsonObj.get("appliedCapabilities").isJsonNull()) {
        GoogleAppsDriveLabelsV2betaLabelAppliedCapabilities.validateJsonElement(jsonObj.get("appliedCapabilities"));
      }
      // validate the optional field `appliedLabelPolicy`
      if (jsonObj.get("appliedLabelPolicy") != null && !jsonObj.get("appliedLabelPolicy").isJsonNull()) {
        GoogleAppsDriveLabelsV2betaLabelAppliedLabelPolicy.validateJsonElement(jsonObj.get("appliedLabelPolicy"));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      // validate the optional field `creator`
      if (jsonObj.get("creator") != null && !jsonObj.get("creator").isJsonNull()) {
        GoogleAppsDriveLabelsV2betaUserInfo.validateJsonElement(jsonObj.get("creator"));
      }
      if ((jsonObj.get("customer") != null && !jsonObj.get("customer").isJsonNull()) && !jsonObj.get("customer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customer").toString()));
      }
      if ((jsonObj.get("disableTime") != null && !jsonObj.get("disableTime").isJsonNull()) && !jsonObj.get("disableTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disableTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disableTime").toString()));
      }
      // validate the optional field `disabler`
      if (jsonObj.get("disabler") != null && !jsonObj.get("disabler").isJsonNull()) {
        GoogleAppsDriveLabelsV2betaUserInfo.validateJsonElement(jsonObj.get("disabler"));
      }
      // validate the optional field `displayHints`
      if (jsonObj.get("displayHints") != null && !jsonObj.get("displayHints").isJsonNull()) {
        GoogleAppsDriveLabelsV2betaLabelDisplayHints.validateJsonElement(jsonObj.get("displayHints"));
      }
      if (jsonObj.get("fields") != null && !jsonObj.get("fields").isJsonNull()) {
        JsonArray jsonArrayfields = jsonObj.getAsJsonArray("fields");
        if (jsonArrayfields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("fields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `fields` to be an array in the JSON string but got `%s`", jsonObj.get("fields").toString()));
          }

          // validate the optional field `fields` (array)
          for (int i = 0; i < jsonArrayfields.size(); i++) {
            GoogleAppsDriveLabelsV2betaField.validateJsonElement(jsonArrayfields.get(i));
          };
        }
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("labelType") != null && !jsonObj.get("labelType").isJsonNull()) && !jsonObj.get("labelType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `labelType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("labelType").toString()));
      }
      // validate the optional field `labelType`
      if (jsonObj.get("labelType") != null && !jsonObj.get("labelType").isJsonNull()) {
        LabelTypeEnum.validateJsonElement(jsonObj.get("labelType"));
      }
      if ((jsonObj.get("learnMoreUri") != null && !jsonObj.get("learnMoreUri").isJsonNull()) && !jsonObj.get("learnMoreUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `learnMoreUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("learnMoreUri").toString()));
      }
      // validate the optional field `lifecycle`
      if (jsonObj.get("lifecycle") != null && !jsonObj.get("lifecycle").isJsonNull()) {
        GoogleAppsDriveLabelsV2betaLifecycle.validateJsonElement(jsonObj.get("lifecycle"));
      }
      // validate the optional field `lockStatus`
      if (jsonObj.get("lockStatus") != null && !jsonObj.get("lockStatus").isJsonNull()) {
        GoogleAppsDriveLabelsV2betaLockStatus.validateJsonElement(jsonObj.get("lockStatus"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `properties`
      if (jsonObj.get("properties") != null && !jsonObj.get("properties").isJsonNull()) {
        GoogleAppsDriveLabelsV2betaLabelProperties.validateJsonElement(jsonObj.get("properties"));
      }
      if ((jsonObj.get("publishTime") != null && !jsonObj.get("publishTime").isJsonNull()) && !jsonObj.get("publishTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publishTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publishTime").toString()));
      }
      // validate the optional field `publisher`
      if (jsonObj.get("publisher") != null && !jsonObj.get("publisher").isJsonNull()) {
        GoogleAppsDriveLabelsV2betaUserInfo.validateJsonElement(jsonObj.get("publisher"));
      }
      if ((jsonObj.get("revisionCreateTime") != null && !jsonObj.get("revisionCreateTime").isJsonNull()) && !jsonObj.get("revisionCreateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `revisionCreateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("revisionCreateTime").toString()));
      }
      // validate the optional field `revisionCreator`
      if (jsonObj.get("revisionCreator") != null && !jsonObj.get("revisionCreator").isJsonNull()) {
        GoogleAppsDriveLabelsV2betaUserInfo.validateJsonElement(jsonObj.get("revisionCreator"));
      }
      if ((jsonObj.get("revisionId") != null && !jsonObj.get("revisionId").isJsonNull()) && !jsonObj.get("revisionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `revisionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("revisionId").toString()));
      }
      // validate the optional field `schemaCapabilities`
      if (jsonObj.get("schemaCapabilities") != null && !jsonObj.get("schemaCapabilities").isJsonNull()) {
        GoogleAppsDriveLabelsV2betaLabelSchemaCapabilities.validateJsonElement(jsonObj.get("schemaCapabilities"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAppsDriveLabelsV2betaLabel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAppsDriveLabelsV2betaLabel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAppsDriveLabelsV2betaLabel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAppsDriveLabelsV2betaLabel.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAppsDriveLabelsV2betaLabel>() {
           @Override
           public void write(JsonWriter out, GoogleAppsDriveLabelsV2betaLabel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAppsDriveLabelsV2betaLabel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAppsDriveLabelsV2betaLabel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAppsDriveLabelsV2betaLabel
   * @throws IOException if the JSON string is invalid with respect to GoogleAppsDriveLabelsV2betaLabel
   */
  public static GoogleAppsDriveLabelsV2betaLabel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAppsDriveLabelsV2betaLabel.class);
  }

  /**
   * Convert an instance of GoogleAppsDriveLabelsV2betaLabel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

