/*
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2betaFieldAppliedCapabilities;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2betaFieldDateOptions;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2betaFieldDisplayHints;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2betaFieldIntegerOptions;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2betaFieldProperties;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2betaFieldSchemaCapabilities;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2betaFieldSelectionOptions;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2betaFieldTextOptions;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2betaFieldUserOptions;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2betaLifecycle;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2betaLockStatus;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2betaUserInfo;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleAppsDriveLabelsV2betaField
 */
public class GoogleAppsDriveLabelsV2betaFieldTest {
    private final GoogleAppsDriveLabelsV2betaField model = new GoogleAppsDriveLabelsV2betaField();

    /**
     * Model tests for GoogleAppsDriveLabelsV2betaField
     */
    @Test
    public void testGoogleAppsDriveLabelsV2betaField() {
        // TODO: test GoogleAppsDriveLabelsV2betaField
    }

    /**
     * Test the property 'appliedCapabilities'
     */
    @Test
    public void appliedCapabilitiesTest() {
        // TODO: test appliedCapabilities
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'creator'
     */
    @Test
    public void creatorTest() {
        // TODO: test creator
    }

    /**
     * Test the property 'dateOptions'
     */
    @Test
    public void dateOptionsTest() {
        // TODO: test dateOptions
    }

    /**
     * Test the property 'disableTime'
     */
    @Test
    public void disableTimeTest() {
        // TODO: test disableTime
    }

    /**
     * Test the property 'disabler'
     */
    @Test
    public void disablerTest() {
        // TODO: test disabler
    }

    /**
     * Test the property 'displayHints'
     */
    @Test
    public void displayHintsTest() {
        // TODO: test displayHints
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'integerOptions'
     */
    @Test
    public void integerOptionsTest() {
        // TODO: test integerOptions
    }

    /**
     * Test the property 'lifecycle'
     */
    @Test
    public void lifecycleTest() {
        // TODO: test lifecycle
    }

    /**
     * Test the property 'lockStatus'
     */
    @Test
    public void lockStatusTest() {
        // TODO: test lockStatus
    }

    /**
     * Test the property 'properties'
     */
    @Test
    public void propertiesTest() {
        // TODO: test properties
    }

    /**
     * Test the property 'publisher'
     */
    @Test
    public void publisherTest() {
        // TODO: test publisher
    }

    /**
     * Test the property 'queryKey'
     */
    @Test
    public void queryKeyTest() {
        // TODO: test queryKey
    }

    /**
     * Test the property 'schemaCapabilities'
     */
    @Test
    public void schemaCapabilitiesTest() {
        // TODO: test schemaCapabilities
    }

    /**
     * Test the property 'selectionOptions'
     */
    @Test
    public void selectionOptionsTest() {
        // TODO: test selectionOptions
    }

    /**
     * Test the property 'textOptions'
     */
    @Test
    public void textOptionsTest() {
        // TODO: test textOptions
    }

    /**
     * Test the property 'updateTime'
     */
    @Test
    public void updateTimeTest() {
        // TODO: test updateTime
    }

    /**
     * Test the property 'updater'
     */
    @Test
    public void updaterTest() {
        // TODO: test updater
    }

    /**
     * Test the property 'userOptions'
     */
    @Test
    public void userOptionsTest() {
        // TODO: test userOptions
    }

}
