/**
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest::OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest::OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest() {
    this->initializeModel();
}

OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest::~OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest() {}

void OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest::initializeModel() {

    m_label_permission_isSet = false;
    m_label_permission_isValid = false;

    m_parent_isSet = false;
    m_parent_isValid = false;

    m_use_admin_access_isSet = false;
    m_use_admin_access_isValid = false;
}

void OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest::fromJsonObject(QJsonObject json) {

    m_label_permission_isValid = ::OpenAPI::fromJsonValue(m_label_permission, json[QString("labelPermission")]);
    m_label_permission_isSet = !json[QString("labelPermission")].isNull() && m_label_permission_isValid;

    m_parent_isValid = ::OpenAPI::fromJsonValue(m_parent, json[QString("parent")]);
    m_parent_isSet = !json[QString("parent")].isNull() && m_parent_isValid;

    m_use_admin_access_isValid = ::OpenAPI::fromJsonValue(m_use_admin_access, json[QString("useAdminAccess")]);
    m_use_admin_access_isSet = !json[QString("useAdminAccess")].isNull() && m_use_admin_access_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_label_permission.isSet()) {
        obj.insert(QString("labelPermission"), ::OpenAPI::toJsonValue(m_label_permission));
    }
    if (m_parent_isSet) {
        obj.insert(QString("parent"), ::OpenAPI::toJsonValue(m_parent));
    }
    if (m_use_admin_access_isSet) {
        obj.insert(QString("useAdminAccess"), ::OpenAPI::toJsonValue(m_use_admin_access));
    }
    return obj;
}

OAIGoogleAppsDriveLabelsV2betaLabelPermission OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest::getLabelPermission() const {
    return m_label_permission;
}
void OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest::setLabelPermission(const OAIGoogleAppsDriveLabelsV2betaLabelPermission &label_permission) {
    m_label_permission = label_permission;
    m_label_permission_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest::is_label_permission_Set() const{
    return m_label_permission_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest::is_label_permission_Valid() const{
    return m_label_permission_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest::getParent() const {
    return m_parent;
}
void OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest::setParent(const QString &parent) {
    m_parent = parent;
    m_parent_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest::is_parent_Set() const{
    return m_parent_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest::is_parent_Valid() const{
    return m_parent_isValid;
}

bool OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest::isUseAdminAccess() const {
    return m_use_admin_access;
}
void OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest::setUseAdminAccess(const bool &use_admin_access) {
    m_use_admin_access = use_admin_access;
    m_use_admin_access_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest::is_use_admin_access_Set() const{
    return m_use_admin_access_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest::is_use_admin_access_Valid() const{
    return m_use_admin_access_isValid;
}

bool OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_label_permission.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_use_admin_access_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
