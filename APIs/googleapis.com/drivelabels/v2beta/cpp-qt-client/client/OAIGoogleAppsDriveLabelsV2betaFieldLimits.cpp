/**
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsDriveLabelsV2betaFieldLimits.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsDriveLabelsV2betaFieldLimits::OAIGoogleAppsDriveLabelsV2betaFieldLimits(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsDriveLabelsV2betaFieldLimits::OAIGoogleAppsDriveLabelsV2betaFieldLimits() {
    this->initializeModel();
}

OAIGoogleAppsDriveLabelsV2betaFieldLimits::~OAIGoogleAppsDriveLabelsV2betaFieldLimits() {}

void OAIGoogleAppsDriveLabelsV2betaFieldLimits::initializeModel() {

    m_date_limits_isSet = false;
    m_date_limits_isValid = false;

    m_integer_limits_isSet = false;
    m_integer_limits_isValid = false;

    m_long_text_limits_isSet = false;
    m_long_text_limits_isValid = false;

    m_max_description_length_isSet = false;
    m_max_description_length_isValid = false;

    m_max_display_name_length_isSet = false;
    m_max_display_name_length_isValid = false;

    m_max_id_length_isSet = false;
    m_max_id_length_isValid = false;

    m_selection_limits_isSet = false;
    m_selection_limits_isValid = false;

    m_text_limits_isSet = false;
    m_text_limits_isValid = false;

    m_user_limits_isSet = false;
    m_user_limits_isValid = false;
}

void OAIGoogleAppsDriveLabelsV2betaFieldLimits::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsDriveLabelsV2betaFieldLimits::fromJsonObject(QJsonObject json) {

    m_date_limits_isValid = ::OpenAPI::fromJsonValue(m_date_limits, json[QString("dateLimits")]);
    m_date_limits_isSet = !json[QString("dateLimits")].isNull() && m_date_limits_isValid;

    m_integer_limits_isValid = ::OpenAPI::fromJsonValue(m_integer_limits, json[QString("integerLimits")]);
    m_integer_limits_isSet = !json[QString("integerLimits")].isNull() && m_integer_limits_isValid;

    m_long_text_limits_isValid = ::OpenAPI::fromJsonValue(m_long_text_limits, json[QString("longTextLimits")]);
    m_long_text_limits_isSet = !json[QString("longTextLimits")].isNull() && m_long_text_limits_isValid;

    m_max_description_length_isValid = ::OpenAPI::fromJsonValue(m_max_description_length, json[QString("maxDescriptionLength")]);
    m_max_description_length_isSet = !json[QString("maxDescriptionLength")].isNull() && m_max_description_length_isValid;

    m_max_display_name_length_isValid = ::OpenAPI::fromJsonValue(m_max_display_name_length, json[QString("maxDisplayNameLength")]);
    m_max_display_name_length_isSet = !json[QString("maxDisplayNameLength")].isNull() && m_max_display_name_length_isValid;

    m_max_id_length_isValid = ::OpenAPI::fromJsonValue(m_max_id_length, json[QString("maxIdLength")]);
    m_max_id_length_isSet = !json[QString("maxIdLength")].isNull() && m_max_id_length_isValid;

    m_selection_limits_isValid = ::OpenAPI::fromJsonValue(m_selection_limits, json[QString("selectionLimits")]);
    m_selection_limits_isSet = !json[QString("selectionLimits")].isNull() && m_selection_limits_isValid;

    m_text_limits_isValid = ::OpenAPI::fromJsonValue(m_text_limits, json[QString("textLimits")]);
    m_text_limits_isSet = !json[QString("textLimits")].isNull() && m_text_limits_isValid;

    m_user_limits_isValid = ::OpenAPI::fromJsonValue(m_user_limits, json[QString("userLimits")]);
    m_user_limits_isSet = !json[QString("userLimits")].isNull() && m_user_limits_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaFieldLimits::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsDriveLabelsV2betaFieldLimits::asJsonObject() const {
    QJsonObject obj;
    if (m_date_limits.isSet()) {
        obj.insert(QString("dateLimits"), ::OpenAPI::toJsonValue(m_date_limits));
    }
    if (m_integer_limits.isSet()) {
        obj.insert(QString("integerLimits"), ::OpenAPI::toJsonValue(m_integer_limits));
    }
    if (m_long_text_limits.isSet()) {
        obj.insert(QString("longTextLimits"), ::OpenAPI::toJsonValue(m_long_text_limits));
    }
    if (m_max_description_length_isSet) {
        obj.insert(QString("maxDescriptionLength"), ::OpenAPI::toJsonValue(m_max_description_length));
    }
    if (m_max_display_name_length_isSet) {
        obj.insert(QString("maxDisplayNameLength"), ::OpenAPI::toJsonValue(m_max_display_name_length));
    }
    if (m_max_id_length_isSet) {
        obj.insert(QString("maxIdLength"), ::OpenAPI::toJsonValue(m_max_id_length));
    }
    if (m_selection_limits.isSet()) {
        obj.insert(QString("selectionLimits"), ::OpenAPI::toJsonValue(m_selection_limits));
    }
    if (m_text_limits.isSet()) {
        obj.insert(QString("textLimits"), ::OpenAPI::toJsonValue(m_text_limits));
    }
    if (m_user_limits.isSet()) {
        obj.insert(QString("userLimits"), ::OpenAPI::toJsonValue(m_user_limits));
    }
    return obj;
}

OAIGoogleAppsDriveLabelsV2betaDateLimits OAIGoogleAppsDriveLabelsV2betaFieldLimits::getDateLimits() const {
    return m_date_limits;
}
void OAIGoogleAppsDriveLabelsV2betaFieldLimits::setDateLimits(const OAIGoogleAppsDriveLabelsV2betaDateLimits &date_limits) {
    m_date_limits = date_limits;
    m_date_limits_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldLimits::is_date_limits_Set() const{
    return m_date_limits_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldLimits::is_date_limits_Valid() const{
    return m_date_limits_isValid;
}

OAIGoogleAppsDriveLabelsV2betaIntegerLimits OAIGoogleAppsDriveLabelsV2betaFieldLimits::getIntegerLimits() const {
    return m_integer_limits;
}
void OAIGoogleAppsDriveLabelsV2betaFieldLimits::setIntegerLimits(const OAIGoogleAppsDriveLabelsV2betaIntegerLimits &integer_limits) {
    m_integer_limits = integer_limits;
    m_integer_limits_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldLimits::is_integer_limits_Set() const{
    return m_integer_limits_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldLimits::is_integer_limits_Valid() const{
    return m_integer_limits_isValid;
}

OAIGoogleAppsDriveLabelsV2betaLongTextLimits OAIGoogleAppsDriveLabelsV2betaFieldLimits::getLongTextLimits() const {
    return m_long_text_limits;
}
void OAIGoogleAppsDriveLabelsV2betaFieldLimits::setLongTextLimits(const OAIGoogleAppsDriveLabelsV2betaLongTextLimits &long_text_limits) {
    m_long_text_limits = long_text_limits;
    m_long_text_limits_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldLimits::is_long_text_limits_Set() const{
    return m_long_text_limits_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldLimits::is_long_text_limits_Valid() const{
    return m_long_text_limits_isValid;
}

qint32 OAIGoogleAppsDriveLabelsV2betaFieldLimits::getMaxDescriptionLength() const {
    return m_max_description_length;
}
void OAIGoogleAppsDriveLabelsV2betaFieldLimits::setMaxDescriptionLength(const qint32 &max_description_length) {
    m_max_description_length = max_description_length;
    m_max_description_length_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldLimits::is_max_description_length_Set() const{
    return m_max_description_length_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldLimits::is_max_description_length_Valid() const{
    return m_max_description_length_isValid;
}

qint32 OAIGoogleAppsDriveLabelsV2betaFieldLimits::getMaxDisplayNameLength() const {
    return m_max_display_name_length;
}
void OAIGoogleAppsDriveLabelsV2betaFieldLimits::setMaxDisplayNameLength(const qint32 &max_display_name_length) {
    m_max_display_name_length = max_display_name_length;
    m_max_display_name_length_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldLimits::is_max_display_name_length_Set() const{
    return m_max_display_name_length_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldLimits::is_max_display_name_length_Valid() const{
    return m_max_display_name_length_isValid;
}

qint32 OAIGoogleAppsDriveLabelsV2betaFieldLimits::getMaxIdLength() const {
    return m_max_id_length;
}
void OAIGoogleAppsDriveLabelsV2betaFieldLimits::setMaxIdLength(const qint32 &max_id_length) {
    m_max_id_length = max_id_length;
    m_max_id_length_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldLimits::is_max_id_length_Set() const{
    return m_max_id_length_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldLimits::is_max_id_length_Valid() const{
    return m_max_id_length_isValid;
}

OAIGoogleAppsDriveLabelsV2betaSelectionLimits OAIGoogleAppsDriveLabelsV2betaFieldLimits::getSelectionLimits() const {
    return m_selection_limits;
}
void OAIGoogleAppsDriveLabelsV2betaFieldLimits::setSelectionLimits(const OAIGoogleAppsDriveLabelsV2betaSelectionLimits &selection_limits) {
    m_selection_limits = selection_limits;
    m_selection_limits_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldLimits::is_selection_limits_Set() const{
    return m_selection_limits_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldLimits::is_selection_limits_Valid() const{
    return m_selection_limits_isValid;
}

OAIGoogleAppsDriveLabelsV2betaTextLimits OAIGoogleAppsDriveLabelsV2betaFieldLimits::getTextLimits() const {
    return m_text_limits;
}
void OAIGoogleAppsDriveLabelsV2betaFieldLimits::setTextLimits(const OAIGoogleAppsDriveLabelsV2betaTextLimits &text_limits) {
    m_text_limits = text_limits;
    m_text_limits_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldLimits::is_text_limits_Set() const{
    return m_text_limits_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldLimits::is_text_limits_Valid() const{
    return m_text_limits_isValid;
}

OAIGoogleAppsDriveLabelsV2betaUserLimits OAIGoogleAppsDriveLabelsV2betaFieldLimits::getUserLimits() const {
    return m_user_limits;
}
void OAIGoogleAppsDriveLabelsV2betaFieldLimits::setUserLimits(const OAIGoogleAppsDriveLabelsV2betaUserLimits &user_limits) {
    m_user_limits = user_limits;
    m_user_limits_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldLimits::is_user_limits_Set() const{
    return m_user_limits_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldLimits::is_user_limits_Valid() const{
    return m_user_limits_isValid;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldLimits::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_date_limits.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_integer_limits.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_long_text_limits.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_description_length_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_display_name_length_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_id_length_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_selection_limits.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_limits.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_limits.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldLimits::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
