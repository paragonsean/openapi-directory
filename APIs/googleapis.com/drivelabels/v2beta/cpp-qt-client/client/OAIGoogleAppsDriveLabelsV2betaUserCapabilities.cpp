/**
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsDriveLabelsV2betaUserCapabilities.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsDriveLabelsV2betaUserCapabilities::OAIGoogleAppsDriveLabelsV2betaUserCapabilities(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsDriveLabelsV2betaUserCapabilities::OAIGoogleAppsDriveLabelsV2betaUserCapabilities() {
    this->initializeModel();
}

OAIGoogleAppsDriveLabelsV2betaUserCapabilities::~OAIGoogleAppsDriveLabelsV2betaUserCapabilities() {}

void OAIGoogleAppsDriveLabelsV2betaUserCapabilities::initializeModel() {

    m_can_access_label_manager_isSet = false;
    m_can_access_label_manager_isValid = false;

    m_can_administrate_labels_isSet = false;
    m_can_administrate_labels_isValid = false;

    m_can_create_admin_labels_isSet = false;
    m_can_create_admin_labels_isValid = false;

    m_can_create_shared_labels_isSet = false;
    m_can_create_shared_labels_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIGoogleAppsDriveLabelsV2betaUserCapabilities::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsDriveLabelsV2betaUserCapabilities::fromJsonObject(QJsonObject json) {

    m_can_access_label_manager_isValid = ::OpenAPI::fromJsonValue(m_can_access_label_manager, json[QString("canAccessLabelManager")]);
    m_can_access_label_manager_isSet = !json[QString("canAccessLabelManager")].isNull() && m_can_access_label_manager_isValid;

    m_can_administrate_labels_isValid = ::OpenAPI::fromJsonValue(m_can_administrate_labels, json[QString("canAdministrateLabels")]);
    m_can_administrate_labels_isSet = !json[QString("canAdministrateLabels")].isNull() && m_can_administrate_labels_isValid;

    m_can_create_admin_labels_isValid = ::OpenAPI::fromJsonValue(m_can_create_admin_labels, json[QString("canCreateAdminLabels")]);
    m_can_create_admin_labels_isSet = !json[QString("canCreateAdminLabels")].isNull() && m_can_create_admin_labels_isValid;

    m_can_create_shared_labels_isValid = ::OpenAPI::fromJsonValue(m_can_create_shared_labels, json[QString("canCreateSharedLabels")]);
    m_can_create_shared_labels_isSet = !json[QString("canCreateSharedLabels")].isNull() && m_can_create_shared_labels_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaUserCapabilities::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsDriveLabelsV2betaUserCapabilities::asJsonObject() const {
    QJsonObject obj;
    if (m_can_access_label_manager_isSet) {
        obj.insert(QString("canAccessLabelManager"), ::OpenAPI::toJsonValue(m_can_access_label_manager));
    }
    if (m_can_administrate_labels_isSet) {
        obj.insert(QString("canAdministrateLabels"), ::OpenAPI::toJsonValue(m_can_administrate_labels));
    }
    if (m_can_create_admin_labels_isSet) {
        obj.insert(QString("canCreateAdminLabels"), ::OpenAPI::toJsonValue(m_can_create_admin_labels));
    }
    if (m_can_create_shared_labels_isSet) {
        obj.insert(QString("canCreateSharedLabels"), ::OpenAPI::toJsonValue(m_can_create_shared_labels));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

bool OAIGoogleAppsDriveLabelsV2betaUserCapabilities::isCanAccessLabelManager() const {
    return m_can_access_label_manager;
}
void OAIGoogleAppsDriveLabelsV2betaUserCapabilities::setCanAccessLabelManager(const bool &can_access_label_manager) {
    m_can_access_label_manager = can_access_label_manager;
    m_can_access_label_manager_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaUserCapabilities::is_can_access_label_manager_Set() const{
    return m_can_access_label_manager_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaUserCapabilities::is_can_access_label_manager_Valid() const{
    return m_can_access_label_manager_isValid;
}

bool OAIGoogleAppsDriveLabelsV2betaUserCapabilities::isCanAdministrateLabels() const {
    return m_can_administrate_labels;
}
void OAIGoogleAppsDriveLabelsV2betaUserCapabilities::setCanAdministrateLabels(const bool &can_administrate_labels) {
    m_can_administrate_labels = can_administrate_labels;
    m_can_administrate_labels_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaUserCapabilities::is_can_administrate_labels_Set() const{
    return m_can_administrate_labels_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaUserCapabilities::is_can_administrate_labels_Valid() const{
    return m_can_administrate_labels_isValid;
}

bool OAIGoogleAppsDriveLabelsV2betaUserCapabilities::isCanCreateAdminLabels() const {
    return m_can_create_admin_labels;
}
void OAIGoogleAppsDriveLabelsV2betaUserCapabilities::setCanCreateAdminLabels(const bool &can_create_admin_labels) {
    m_can_create_admin_labels = can_create_admin_labels;
    m_can_create_admin_labels_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaUserCapabilities::is_can_create_admin_labels_Set() const{
    return m_can_create_admin_labels_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaUserCapabilities::is_can_create_admin_labels_Valid() const{
    return m_can_create_admin_labels_isValid;
}

bool OAIGoogleAppsDriveLabelsV2betaUserCapabilities::isCanCreateSharedLabels() const {
    return m_can_create_shared_labels;
}
void OAIGoogleAppsDriveLabelsV2betaUserCapabilities::setCanCreateSharedLabels(const bool &can_create_shared_labels) {
    m_can_create_shared_labels = can_create_shared_labels;
    m_can_create_shared_labels_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaUserCapabilities::is_can_create_shared_labels_Set() const{
    return m_can_create_shared_labels_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaUserCapabilities::is_can_create_shared_labels_Valid() const{
    return m_can_create_shared_labels_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaUserCapabilities::getName() const {
    return m_name;
}
void OAIGoogleAppsDriveLabelsV2betaUserCapabilities::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaUserCapabilities::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaUserCapabilities::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGoogleAppsDriveLabelsV2betaUserCapabilities::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_can_access_label_manager_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_administrate_labels_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_create_admin_labels_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_create_shared_labels_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsDriveLabelsV2betaUserCapabilities::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
