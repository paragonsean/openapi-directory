/**
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleTypeDate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleTypeDate::OAIGoogleTypeDate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleTypeDate::OAIGoogleTypeDate() {
    this->initializeModel();
}

OAIGoogleTypeDate::~OAIGoogleTypeDate() {}

void OAIGoogleTypeDate::initializeModel() {

    m_day_isSet = false;
    m_day_isValid = false;

    m_month_isSet = false;
    m_month_isValid = false;

    m_year_isSet = false;
    m_year_isValid = false;
}

void OAIGoogleTypeDate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleTypeDate::fromJsonObject(QJsonObject json) {

    m_day_isValid = ::OpenAPI::fromJsonValue(m_day, json[QString("day")]);
    m_day_isSet = !json[QString("day")].isNull() && m_day_isValid;

    m_month_isValid = ::OpenAPI::fromJsonValue(m_month, json[QString("month")]);
    m_month_isSet = !json[QString("month")].isNull() && m_month_isValid;

    m_year_isValid = ::OpenAPI::fromJsonValue(m_year, json[QString("year")]);
    m_year_isSet = !json[QString("year")].isNull() && m_year_isValid;
}

QString OAIGoogleTypeDate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleTypeDate::asJsonObject() const {
    QJsonObject obj;
    if (m_day_isSet) {
        obj.insert(QString("day"), ::OpenAPI::toJsonValue(m_day));
    }
    if (m_month_isSet) {
        obj.insert(QString("month"), ::OpenAPI::toJsonValue(m_month));
    }
    if (m_year_isSet) {
        obj.insert(QString("year"), ::OpenAPI::toJsonValue(m_year));
    }
    return obj;
}

qint32 OAIGoogleTypeDate::getDay() const {
    return m_day;
}
void OAIGoogleTypeDate::setDay(const qint32 &day) {
    m_day = day;
    m_day_isSet = true;
}

bool OAIGoogleTypeDate::is_day_Set() const{
    return m_day_isSet;
}

bool OAIGoogleTypeDate::is_day_Valid() const{
    return m_day_isValid;
}

qint32 OAIGoogleTypeDate::getMonth() const {
    return m_month;
}
void OAIGoogleTypeDate::setMonth(const qint32 &month) {
    m_month = month;
    m_month_isSet = true;
}

bool OAIGoogleTypeDate::is_month_Set() const{
    return m_month_isSet;
}

bool OAIGoogleTypeDate::is_month_Valid() const{
    return m_month_isValid;
}

qint32 OAIGoogleTypeDate::getYear() const {
    return m_year;
}
void OAIGoogleTypeDate::setYear(const qint32 &year) {
    m_year = year;
    m_year_isSet = true;
}

bool OAIGoogleTypeDate::is_year_Set() const{
    return m_year_isSet;
}

bool OAIGoogleTypeDate::is_year_Valid() const{
    return m_year_isValid;
}

bool OAIGoogleTypeDate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_day_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_month_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_year_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleTypeDate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
