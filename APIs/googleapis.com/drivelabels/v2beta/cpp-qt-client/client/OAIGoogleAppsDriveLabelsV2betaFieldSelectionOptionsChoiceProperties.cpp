/**
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties() {
    this->initializeModel();
}

OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::~OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties() {}

void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::initializeModel() {

    m_badge_config_isSet = false;
    m_badge_config_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_insert_before_choice_isSet = false;
    m_insert_before_choice_isValid = false;
}

void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::fromJsonObject(QJsonObject json) {

    m_badge_config_isValid = ::OpenAPI::fromJsonValue(m_badge_config, json[QString("badgeConfig")]);
    m_badge_config_isSet = !json[QString("badgeConfig")].isNull() && m_badge_config_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_insert_before_choice_isValid = ::OpenAPI::fromJsonValue(m_insert_before_choice, json[QString("insertBeforeChoice")]);
    m_insert_before_choice_isSet = !json[QString("insertBeforeChoice")].isNull() && m_insert_before_choice_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_badge_config.isSet()) {
        obj.insert(QString("badgeConfig"), ::OpenAPI::toJsonValue(m_badge_config));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_insert_before_choice_isSet) {
        obj.insert(QString("insertBeforeChoice"), ::OpenAPI::toJsonValue(m_insert_before_choice));
    }
    return obj;
}

OAIGoogleAppsDriveLabelsV2betaBadgeConfig OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::getBadgeConfig() const {
    return m_badge_config;
}
void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::setBadgeConfig(const OAIGoogleAppsDriveLabelsV2betaBadgeConfig &badge_config) {
    m_badge_config = badge_config;
    m_badge_config_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::is_badge_config_Set() const{
    return m_badge_config_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::is_badge_config_Valid() const{
    return m_badge_config_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::getDescription() const {
    return m_description;
}
void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::getInsertBeforeChoice() const {
    return m_insert_before_choice;
}
void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::setInsertBeforeChoice(const QString &insert_before_choice) {
    m_insert_before_choice = insert_before_choice;
    m_insert_before_choice_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::is_insert_before_choice_Set() const{
    return m_insert_before_choice_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::is_insert_before_choice_Valid() const{
    return m_insert_before_choice_isValid;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_badge_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_insert_before_choice_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
