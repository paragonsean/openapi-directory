/**
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsDriveLabelsV2betaLabel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsDriveLabelsV2betaLabel::OAIGoogleAppsDriveLabelsV2betaLabel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsDriveLabelsV2betaLabel::OAIGoogleAppsDriveLabelsV2betaLabel() {
    this->initializeModel();
}

OAIGoogleAppsDriveLabelsV2betaLabel::~OAIGoogleAppsDriveLabelsV2betaLabel() {}

void OAIGoogleAppsDriveLabelsV2betaLabel::initializeModel() {

    m_applied_capabilities_isSet = false;
    m_applied_capabilities_isValid = false;

    m_applied_label_policy_isSet = false;
    m_applied_label_policy_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_creator_isSet = false;
    m_creator_isValid = false;

    m_customer_isSet = false;
    m_customer_isValid = false;

    m_disable_time_isSet = false;
    m_disable_time_isValid = false;

    m_disabler_isSet = false;
    m_disabler_isValid = false;

    m_display_hints_isSet = false;
    m_display_hints_isValid = false;

    m_fields_isSet = false;
    m_fields_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_label_type_isSet = false;
    m_label_type_isValid = false;

    m_learn_more_uri_isSet = false;
    m_learn_more_uri_isValid = false;

    m_lifecycle_isSet = false;
    m_lifecycle_isValid = false;

    m_lock_status_isSet = false;
    m_lock_status_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_properties_isSet = false;
    m_properties_isValid = false;

    m_publish_time_isSet = false;
    m_publish_time_isValid = false;

    m_publisher_isSet = false;
    m_publisher_isValid = false;

    m_revision_create_time_isSet = false;
    m_revision_create_time_isValid = false;

    m_revision_creator_isSet = false;
    m_revision_creator_isValid = false;

    m_revision_id_isSet = false;
    m_revision_id_isValid = false;

    m_schema_capabilities_isSet = false;
    m_schema_capabilities_isValid = false;
}

void OAIGoogleAppsDriveLabelsV2betaLabel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsDriveLabelsV2betaLabel::fromJsonObject(QJsonObject json) {

    m_applied_capabilities_isValid = ::OpenAPI::fromJsonValue(m_applied_capabilities, json[QString("appliedCapabilities")]);
    m_applied_capabilities_isSet = !json[QString("appliedCapabilities")].isNull() && m_applied_capabilities_isValid;

    m_applied_label_policy_isValid = ::OpenAPI::fromJsonValue(m_applied_label_policy, json[QString("appliedLabelPolicy")]);
    m_applied_label_policy_isSet = !json[QString("appliedLabelPolicy")].isNull() && m_applied_label_policy_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_creator_isValid = ::OpenAPI::fromJsonValue(m_creator, json[QString("creator")]);
    m_creator_isSet = !json[QString("creator")].isNull() && m_creator_isValid;

    m_customer_isValid = ::OpenAPI::fromJsonValue(m_customer, json[QString("customer")]);
    m_customer_isSet = !json[QString("customer")].isNull() && m_customer_isValid;

    m_disable_time_isValid = ::OpenAPI::fromJsonValue(m_disable_time, json[QString("disableTime")]);
    m_disable_time_isSet = !json[QString("disableTime")].isNull() && m_disable_time_isValid;

    m_disabler_isValid = ::OpenAPI::fromJsonValue(m_disabler, json[QString("disabler")]);
    m_disabler_isSet = !json[QString("disabler")].isNull() && m_disabler_isValid;

    m_display_hints_isValid = ::OpenAPI::fromJsonValue(m_display_hints, json[QString("displayHints")]);
    m_display_hints_isSet = !json[QString("displayHints")].isNull() && m_display_hints_isValid;

    m_fields_isValid = ::OpenAPI::fromJsonValue(m_fields, json[QString("fields")]);
    m_fields_isSet = !json[QString("fields")].isNull() && m_fields_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_label_type_isValid = ::OpenAPI::fromJsonValue(m_label_type, json[QString("labelType")]);
    m_label_type_isSet = !json[QString("labelType")].isNull() && m_label_type_isValid;

    m_learn_more_uri_isValid = ::OpenAPI::fromJsonValue(m_learn_more_uri, json[QString("learnMoreUri")]);
    m_learn_more_uri_isSet = !json[QString("learnMoreUri")].isNull() && m_learn_more_uri_isValid;

    m_lifecycle_isValid = ::OpenAPI::fromJsonValue(m_lifecycle, json[QString("lifecycle")]);
    m_lifecycle_isSet = !json[QString("lifecycle")].isNull() && m_lifecycle_isValid;

    m_lock_status_isValid = ::OpenAPI::fromJsonValue(m_lock_status, json[QString("lockStatus")]);
    m_lock_status_isSet = !json[QString("lockStatus")].isNull() && m_lock_status_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;

    m_publish_time_isValid = ::OpenAPI::fromJsonValue(m_publish_time, json[QString("publishTime")]);
    m_publish_time_isSet = !json[QString("publishTime")].isNull() && m_publish_time_isValid;

    m_publisher_isValid = ::OpenAPI::fromJsonValue(m_publisher, json[QString("publisher")]);
    m_publisher_isSet = !json[QString("publisher")].isNull() && m_publisher_isValid;

    m_revision_create_time_isValid = ::OpenAPI::fromJsonValue(m_revision_create_time, json[QString("revisionCreateTime")]);
    m_revision_create_time_isSet = !json[QString("revisionCreateTime")].isNull() && m_revision_create_time_isValid;

    m_revision_creator_isValid = ::OpenAPI::fromJsonValue(m_revision_creator, json[QString("revisionCreator")]);
    m_revision_creator_isSet = !json[QString("revisionCreator")].isNull() && m_revision_creator_isValid;

    m_revision_id_isValid = ::OpenAPI::fromJsonValue(m_revision_id, json[QString("revisionId")]);
    m_revision_id_isSet = !json[QString("revisionId")].isNull() && m_revision_id_isValid;

    m_schema_capabilities_isValid = ::OpenAPI::fromJsonValue(m_schema_capabilities, json[QString("schemaCapabilities")]);
    m_schema_capabilities_isSet = !json[QString("schemaCapabilities")].isNull() && m_schema_capabilities_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaLabel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsDriveLabelsV2betaLabel::asJsonObject() const {
    QJsonObject obj;
    if (m_applied_capabilities.isSet()) {
        obj.insert(QString("appliedCapabilities"), ::OpenAPI::toJsonValue(m_applied_capabilities));
    }
    if (m_applied_label_policy.isSet()) {
        obj.insert(QString("appliedLabelPolicy"), ::OpenAPI::toJsonValue(m_applied_label_policy));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_creator.isSet()) {
        obj.insert(QString("creator"), ::OpenAPI::toJsonValue(m_creator));
    }
    if (m_customer_isSet) {
        obj.insert(QString("customer"), ::OpenAPI::toJsonValue(m_customer));
    }
    if (m_disable_time_isSet) {
        obj.insert(QString("disableTime"), ::OpenAPI::toJsonValue(m_disable_time));
    }
    if (m_disabler.isSet()) {
        obj.insert(QString("disabler"), ::OpenAPI::toJsonValue(m_disabler));
    }
    if (m_display_hints.isSet()) {
        obj.insert(QString("displayHints"), ::OpenAPI::toJsonValue(m_display_hints));
    }
    if (m_fields.size() > 0) {
        obj.insert(QString("fields"), ::OpenAPI::toJsonValue(m_fields));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_label_type_isSet) {
        obj.insert(QString("labelType"), ::OpenAPI::toJsonValue(m_label_type));
    }
    if (m_learn_more_uri_isSet) {
        obj.insert(QString("learnMoreUri"), ::OpenAPI::toJsonValue(m_learn_more_uri));
    }
    if (m_lifecycle.isSet()) {
        obj.insert(QString("lifecycle"), ::OpenAPI::toJsonValue(m_lifecycle));
    }
    if (m_lock_status.isSet()) {
        obj.insert(QString("lockStatus"), ::OpenAPI::toJsonValue(m_lock_status));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_properties.isSet()) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    if (m_publish_time_isSet) {
        obj.insert(QString("publishTime"), ::OpenAPI::toJsonValue(m_publish_time));
    }
    if (m_publisher.isSet()) {
        obj.insert(QString("publisher"), ::OpenAPI::toJsonValue(m_publisher));
    }
    if (m_revision_create_time_isSet) {
        obj.insert(QString("revisionCreateTime"), ::OpenAPI::toJsonValue(m_revision_create_time));
    }
    if (m_revision_creator.isSet()) {
        obj.insert(QString("revisionCreator"), ::OpenAPI::toJsonValue(m_revision_creator));
    }
    if (m_revision_id_isSet) {
        obj.insert(QString("revisionId"), ::OpenAPI::toJsonValue(m_revision_id));
    }
    if (m_schema_capabilities.isSet()) {
        obj.insert(QString("schemaCapabilities"), ::OpenAPI::toJsonValue(m_schema_capabilities));
    }
    return obj;
}

OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities OAIGoogleAppsDriveLabelsV2betaLabel::getAppliedCapabilities() const {
    return m_applied_capabilities;
}
void OAIGoogleAppsDriveLabelsV2betaLabel::setAppliedCapabilities(const OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities &applied_capabilities) {
    m_applied_capabilities = applied_capabilities;
    m_applied_capabilities_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_applied_capabilities_Set() const{
    return m_applied_capabilities_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_applied_capabilities_Valid() const{
    return m_applied_capabilities_isValid;
}

OAIGoogleAppsDriveLabelsV2betaLabelAppliedLabelPolicy OAIGoogleAppsDriveLabelsV2betaLabel::getAppliedLabelPolicy() const {
    return m_applied_label_policy;
}
void OAIGoogleAppsDriveLabelsV2betaLabel::setAppliedLabelPolicy(const OAIGoogleAppsDriveLabelsV2betaLabelAppliedLabelPolicy &applied_label_policy) {
    m_applied_label_policy = applied_label_policy;
    m_applied_label_policy_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_applied_label_policy_Set() const{
    return m_applied_label_policy_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_applied_label_policy_Valid() const{
    return m_applied_label_policy_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaLabel::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleAppsDriveLabelsV2betaLabel::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_create_time_Valid() const{
    return m_create_time_isValid;
}

OAIGoogleAppsDriveLabelsV2betaUserInfo OAIGoogleAppsDriveLabelsV2betaLabel::getCreator() const {
    return m_creator;
}
void OAIGoogleAppsDriveLabelsV2betaLabel::setCreator(const OAIGoogleAppsDriveLabelsV2betaUserInfo &creator) {
    m_creator = creator;
    m_creator_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_creator_Set() const{
    return m_creator_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_creator_Valid() const{
    return m_creator_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaLabel::getCustomer() const {
    return m_customer;
}
void OAIGoogleAppsDriveLabelsV2betaLabel::setCustomer(const QString &customer) {
    m_customer = customer;
    m_customer_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_customer_Set() const{
    return m_customer_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_customer_Valid() const{
    return m_customer_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaLabel::getDisableTime() const {
    return m_disable_time;
}
void OAIGoogleAppsDriveLabelsV2betaLabel::setDisableTime(const QString &disable_time) {
    m_disable_time = disable_time;
    m_disable_time_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_disable_time_Set() const{
    return m_disable_time_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_disable_time_Valid() const{
    return m_disable_time_isValid;
}

OAIGoogleAppsDriveLabelsV2betaUserInfo OAIGoogleAppsDriveLabelsV2betaLabel::getDisabler() const {
    return m_disabler;
}
void OAIGoogleAppsDriveLabelsV2betaLabel::setDisabler(const OAIGoogleAppsDriveLabelsV2betaUserInfo &disabler) {
    m_disabler = disabler;
    m_disabler_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_disabler_Set() const{
    return m_disabler_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_disabler_Valid() const{
    return m_disabler_isValid;
}

OAIGoogleAppsDriveLabelsV2betaLabelDisplayHints OAIGoogleAppsDriveLabelsV2betaLabel::getDisplayHints() const {
    return m_display_hints;
}
void OAIGoogleAppsDriveLabelsV2betaLabel::setDisplayHints(const OAIGoogleAppsDriveLabelsV2betaLabelDisplayHints &display_hints) {
    m_display_hints = display_hints;
    m_display_hints_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_display_hints_Set() const{
    return m_display_hints_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_display_hints_Valid() const{
    return m_display_hints_isValid;
}

QList<OAIGoogleAppsDriveLabelsV2betaField> OAIGoogleAppsDriveLabelsV2betaLabel::getFields() const {
    return m_fields;
}
void OAIGoogleAppsDriveLabelsV2betaLabel::setFields(const QList<OAIGoogleAppsDriveLabelsV2betaField> &fields) {
    m_fields = fields;
    m_fields_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_fields_Set() const{
    return m_fields_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_fields_Valid() const{
    return m_fields_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaLabel::getId() const {
    return m_id;
}
void OAIGoogleAppsDriveLabelsV2betaLabel::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaLabel::getLabelType() const {
    return m_label_type;
}
void OAIGoogleAppsDriveLabelsV2betaLabel::setLabelType(const QString &label_type) {
    m_label_type = label_type;
    m_label_type_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_label_type_Set() const{
    return m_label_type_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_label_type_Valid() const{
    return m_label_type_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaLabel::getLearnMoreUri() const {
    return m_learn_more_uri;
}
void OAIGoogleAppsDriveLabelsV2betaLabel::setLearnMoreUri(const QString &learn_more_uri) {
    m_learn_more_uri = learn_more_uri;
    m_learn_more_uri_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_learn_more_uri_Set() const{
    return m_learn_more_uri_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_learn_more_uri_Valid() const{
    return m_learn_more_uri_isValid;
}

OAIGoogleAppsDriveLabelsV2betaLifecycle OAIGoogleAppsDriveLabelsV2betaLabel::getLifecycle() const {
    return m_lifecycle;
}
void OAIGoogleAppsDriveLabelsV2betaLabel::setLifecycle(const OAIGoogleAppsDriveLabelsV2betaLifecycle &lifecycle) {
    m_lifecycle = lifecycle;
    m_lifecycle_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_lifecycle_Set() const{
    return m_lifecycle_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_lifecycle_Valid() const{
    return m_lifecycle_isValid;
}

OAIGoogleAppsDriveLabelsV2betaLockStatus OAIGoogleAppsDriveLabelsV2betaLabel::getLockStatus() const {
    return m_lock_status;
}
void OAIGoogleAppsDriveLabelsV2betaLabel::setLockStatus(const OAIGoogleAppsDriveLabelsV2betaLockStatus &lock_status) {
    m_lock_status = lock_status;
    m_lock_status_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_lock_status_Set() const{
    return m_lock_status_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_lock_status_Valid() const{
    return m_lock_status_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaLabel::getName() const {
    return m_name;
}
void OAIGoogleAppsDriveLabelsV2betaLabel::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleAppsDriveLabelsV2betaLabelProperties OAIGoogleAppsDriveLabelsV2betaLabel::getProperties() const {
    return m_properties;
}
void OAIGoogleAppsDriveLabelsV2betaLabel::setProperties(const OAIGoogleAppsDriveLabelsV2betaLabelProperties &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_properties_Valid() const{
    return m_properties_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaLabel::getPublishTime() const {
    return m_publish_time;
}
void OAIGoogleAppsDriveLabelsV2betaLabel::setPublishTime(const QString &publish_time) {
    m_publish_time = publish_time;
    m_publish_time_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_publish_time_Set() const{
    return m_publish_time_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_publish_time_Valid() const{
    return m_publish_time_isValid;
}

OAIGoogleAppsDriveLabelsV2betaUserInfo OAIGoogleAppsDriveLabelsV2betaLabel::getPublisher() const {
    return m_publisher;
}
void OAIGoogleAppsDriveLabelsV2betaLabel::setPublisher(const OAIGoogleAppsDriveLabelsV2betaUserInfo &publisher) {
    m_publisher = publisher;
    m_publisher_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_publisher_Set() const{
    return m_publisher_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_publisher_Valid() const{
    return m_publisher_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaLabel::getRevisionCreateTime() const {
    return m_revision_create_time;
}
void OAIGoogleAppsDriveLabelsV2betaLabel::setRevisionCreateTime(const QString &revision_create_time) {
    m_revision_create_time = revision_create_time;
    m_revision_create_time_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_revision_create_time_Set() const{
    return m_revision_create_time_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_revision_create_time_Valid() const{
    return m_revision_create_time_isValid;
}

OAIGoogleAppsDriveLabelsV2betaUserInfo OAIGoogleAppsDriveLabelsV2betaLabel::getRevisionCreator() const {
    return m_revision_creator;
}
void OAIGoogleAppsDriveLabelsV2betaLabel::setRevisionCreator(const OAIGoogleAppsDriveLabelsV2betaUserInfo &revision_creator) {
    m_revision_creator = revision_creator;
    m_revision_creator_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_revision_creator_Set() const{
    return m_revision_creator_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_revision_creator_Valid() const{
    return m_revision_creator_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaLabel::getRevisionId() const {
    return m_revision_id;
}
void OAIGoogleAppsDriveLabelsV2betaLabel::setRevisionId(const QString &revision_id) {
    m_revision_id = revision_id;
    m_revision_id_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_revision_id_Set() const{
    return m_revision_id_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_revision_id_Valid() const{
    return m_revision_id_isValid;
}

OAIGoogleAppsDriveLabelsV2betaLabelSchemaCapabilities OAIGoogleAppsDriveLabelsV2betaLabel::getSchemaCapabilities() const {
    return m_schema_capabilities;
}
void OAIGoogleAppsDriveLabelsV2betaLabel::setSchemaCapabilities(const OAIGoogleAppsDriveLabelsV2betaLabelSchemaCapabilities &schema_capabilities) {
    m_schema_capabilities = schema_capabilities;
    m_schema_capabilities_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_schema_capabilities_Set() const{
    return m_schema_capabilities_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::is_schema_capabilities_Valid() const{
    return m_schema_capabilities_isValid;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_applied_capabilities.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_applied_label_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creator.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_disable_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_disabler.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_hints.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_learn_more_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lifecycle.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_lock_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_publish_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publisher.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_revision_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_revision_creator.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_revision_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_schema_capabilities.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsDriveLabelsV2betaLabel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
