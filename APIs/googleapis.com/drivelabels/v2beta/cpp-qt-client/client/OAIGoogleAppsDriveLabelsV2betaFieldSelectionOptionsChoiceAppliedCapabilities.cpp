/**
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities::OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities::OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities() {
    this->initializeModel();
}

OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities::~OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities() {}

void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities::initializeModel() {

    m_can_read_isSet = false;
    m_can_read_isValid = false;

    m_can_search_isSet = false;
    m_can_search_isValid = false;

    m_can_select_isSet = false;
    m_can_select_isValid = false;
}

void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities::fromJsonObject(QJsonObject json) {

    m_can_read_isValid = ::OpenAPI::fromJsonValue(m_can_read, json[QString("canRead")]);
    m_can_read_isSet = !json[QString("canRead")].isNull() && m_can_read_isValid;

    m_can_search_isValid = ::OpenAPI::fromJsonValue(m_can_search, json[QString("canSearch")]);
    m_can_search_isSet = !json[QString("canSearch")].isNull() && m_can_search_isValid;

    m_can_select_isValid = ::OpenAPI::fromJsonValue(m_can_select, json[QString("canSelect")]);
    m_can_select_isSet = !json[QString("canSelect")].isNull() && m_can_select_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities::asJsonObject() const {
    QJsonObject obj;
    if (m_can_read_isSet) {
        obj.insert(QString("canRead"), ::OpenAPI::toJsonValue(m_can_read));
    }
    if (m_can_search_isSet) {
        obj.insert(QString("canSearch"), ::OpenAPI::toJsonValue(m_can_search));
    }
    if (m_can_select_isSet) {
        obj.insert(QString("canSelect"), ::OpenAPI::toJsonValue(m_can_select));
    }
    return obj;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities::isCanRead() const {
    return m_can_read;
}
void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities::setCanRead(const bool &can_read) {
    m_can_read = can_read;
    m_can_read_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities::is_can_read_Set() const{
    return m_can_read_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities::is_can_read_Valid() const{
    return m_can_read_isValid;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities::isCanSearch() const {
    return m_can_search;
}
void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities::setCanSearch(const bool &can_search) {
    m_can_search = can_search;
    m_can_search_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities::is_can_search_Set() const{
    return m_can_search_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities::is_can_search_Valid() const{
    return m_can_search_isValid;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities::isCanSelect() const {
    return m_can_select;
}
void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities::setCanSelect(const bool &can_select) {
    m_can_select = can_select;
    m_can_select_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities::is_can_select_Set() const{
    return m_can_select_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities::is_can_select_Valid() const{
    return m_can_select_isValid;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_can_read_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_search_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_select_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
