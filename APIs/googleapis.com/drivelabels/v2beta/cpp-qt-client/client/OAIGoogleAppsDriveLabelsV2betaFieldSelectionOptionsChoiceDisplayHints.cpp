/**
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints() {
    this->initializeModel();
}

OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::~OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints() {}

void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::initializeModel() {

    m_badge_colors_isSet = false;
    m_badge_colors_isValid = false;

    m_badge_priority_isSet = false;
    m_badge_priority_isValid = false;

    m_dark_badge_colors_isSet = false;
    m_dark_badge_colors_isValid = false;

    m_disabled_isSet = false;
    m_disabled_isValid = false;

    m_hidden_in_search_isSet = false;
    m_hidden_in_search_isValid = false;

    m_shown_in_apply_isSet = false;
    m_shown_in_apply_isValid = false;
}

void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::fromJsonObject(QJsonObject json) {

    m_badge_colors_isValid = ::OpenAPI::fromJsonValue(m_badge_colors, json[QString("badgeColors")]);
    m_badge_colors_isSet = !json[QString("badgeColors")].isNull() && m_badge_colors_isValid;

    m_badge_priority_isValid = ::OpenAPI::fromJsonValue(m_badge_priority, json[QString("badgePriority")]);
    m_badge_priority_isSet = !json[QString("badgePriority")].isNull() && m_badge_priority_isValid;

    m_dark_badge_colors_isValid = ::OpenAPI::fromJsonValue(m_dark_badge_colors, json[QString("darkBadgeColors")]);
    m_dark_badge_colors_isSet = !json[QString("darkBadgeColors")].isNull() && m_dark_badge_colors_isValid;

    m_disabled_isValid = ::OpenAPI::fromJsonValue(m_disabled, json[QString("disabled")]);
    m_disabled_isSet = !json[QString("disabled")].isNull() && m_disabled_isValid;

    m_hidden_in_search_isValid = ::OpenAPI::fromJsonValue(m_hidden_in_search, json[QString("hiddenInSearch")]);
    m_hidden_in_search_isSet = !json[QString("hiddenInSearch")].isNull() && m_hidden_in_search_isValid;

    m_shown_in_apply_isValid = ::OpenAPI::fromJsonValue(m_shown_in_apply, json[QString("shownInApply")]);
    m_shown_in_apply_isSet = !json[QString("shownInApply")].isNull() && m_shown_in_apply_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::asJsonObject() const {
    QJsonObject obj;
    if (m_badge_colors.isSet()) {
        obj.insert(QString("badgeColors"), ::OpenAPI::toJsonValue(m_badge_colors));
    }
    if (m_badge_priority_isSet) {
        obj.insert(QString("badgePriority"), ::OpenAPI::toJsonValue(m_badge_priority));
    }
    if (m_dark_badge_colors.isSet()) {
        obj.insert(QString("darkBadgeColors"), ::OpenAPI::toJsonValue(m_dark_badge_colors));
    }
    if (m_disabled_isSet) {
        obj.insert(QString("disabled"), ::OpenAPI::toJsonValue(m_disabled));
    }
    if (m_hidden_in_search_isSet) {
        obj.insert(QString("hiddenInSearch"), ::OpenAPI::toJsonValue(m_hidden_in_search));
    }
    if (m_shown_in_apply_isSet) {
        obj.insert(QString("shownInApply"), ::OpenAPI::toJsonValue(m_shown_in_apply));
    }
    return obj;
}

OAIGoogleAppsDriveLabelsV2betaBadgeColors OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::getBadgeColors() const {
    return m_badge_colors;
}
void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::setBadgeColors(const OAIGoogleAppsDriveLabelsV2betaBadgeColors &badge_colors) {
    m_badge_colors = badge_colors;
    m_badge_colors_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::is_badge_colors_Set() const{
    return m_badge_colors_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::is_badge_colors_Valid() const{
    return m_badge_colors_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::getBadgePriority() const {
    return m_badge_priority;
}
void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::setBadgePriority(const QString &badge_priority) {
    m_badge_priority = badge_priority;
    m_badge_priority_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::is_badge_priority_Set() const{
    return m_badge_priority_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::is_badge_priority_Valid() const{
    return m_badge_priority_isValid;
}

OAIGoogleAppsDriveLabelsV2betaBadgeColors OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::getDarkBadgeColors() const {
    return m_dark_badge_colors;
}
void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::setDarkBadgeColors(const OAIGoogleAppsDriveLabelsV2betaBadgeColors &dark_badge_colors) {
    m_dark_badge_colors = dark_badge_colors;
    m_dark_badge_colors_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::is_dark_badge_colors_Set() const{
    return m_dark_badge_colors_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::is_dark_badge_colors_Valid() const{
    return m_dark_badge_colors_isValid;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::isDisabled() const {
    return m_disabled;
}
void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::setDisabled(const bool &disabled) {
    m_disabled = disabled;
    m_disabled_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::is_disabled_Set() const{
    return m_disabled_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::is_disabled_Valid() const{
    return m_disabled_isValid;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::isHiddenInSearch() const {
    return m_hidden_in_search;
}
void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::setHiddenInSearch(const bool &hidden_in_search) {
    m_hidden_in_search = hidden_in_search;
    m_hidden_in_search_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::is_hidden_in_search_Set() const{
    return m_hidden_in_search_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::is_hidden_in_search_Valid() const{
    return m_hidden_in_search_isValid;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::isShownInApply() const {
    return m_shown_in_apply;
}
void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::setShownInApply(const bool &shown_in_apply) {
    m_shown_in_apply = shown_in_apply;
    m_shown_in_apply_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::is_shown_in_apply_Set() const{
    return m_shown_in_apply_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::is_shown_in_apply_Valid() const{
    return m_shown_in_apply_isValid;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_badge_colors.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_badge_priority_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dark_badge_colors.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_disabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hidden_in_search_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shown_in_apply_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
