/**
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities::OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities::OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities() {
    this->initializeModel();
}

OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities::~OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities() {}

void OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities::initializeModel() {

    m_can_apply_isSet = false;
    m_can_apply_isValid = false;

    m_can_read_isSet = false;
    m_can_read_isValid = false;

    m_can_remove_isSet = false;
    m_can_remove_isValid = false;
}

void OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities::fromJsonObject(QJsonObject json) {

    m_can_apply_isValid = ::OpenAPI::fromJsonValue(m_can_apply, json[QString("canApply")]);
    m_can_apply_isSet = !json[QString("canApply")].isNull() && m_can_apply_isValid;

    m_can_read_isValid = ::OpenAPI::fromJsonValue(m_can_read, json[QString("canRead")]);
    m_can_read_isSet = !json[QString("canRead")].isNull() && m_can_read_isValid;

    m_can_remove_isValid = ::OpenAPI::fromJsonValue(m_can_remove, json[QString("canRemove")]);
    m_can_remove_isSet = !json[QString("canRemove")].isNull() && m_can_remove_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities::asJsonObject() const {
    QJsonObject obj;
    if (m_can_apply_isSet) {
        obj.insert(QString("canApply"), ::OpenAPI::toJsonValue(m_can_apply));
    }
    if (m_can_read_isSet) {
        obj.insert(QString("canRead"), ::OpenAPI::toJsonValue(m_can_read));
    }
    if (m_can_remove_isSet) {
        obj.insert(QString("canRemove"), ::OpenAPI::toJsonValue(m_can_remove));
    }
    return obj;
}

bool OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities::isCanApply() const {
    return m_can_apply;
}
void OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities::setCanApply(const bool &can_apply) {
    m_can_apply = can_apply;
    m_can_apply_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities::is_can_apply_Set() const{
    return m_can_apply_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities::is_can_apply_Valid() const{
    return m_can_apply_isValid;
}

bool OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities::isCanRead() const {
    return m_can_read;
}
void OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities::setCanRead(const bool &can_read) {
    m_can_read = can_read;
    m_can_read_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities::is_can_read_Set() const{
    return m_can_read_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities::is_can_read_Valid() const{
    return m_can_read_isValid;
}

bool OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities::isCanRemove() const {
    return m_can_remove;
}
void OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities::setCanRemove(const bool &can_remove) {
    m_can_remove = can_remove;
    m_can_remove_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities::is_can_remove_Set() const{
    return m_can_remove_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities::is_can_remove_Valid() const{
    return m_can_remove_isValid;
}

bool OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_can_apply_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_read_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_remove_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsDriveLabelsV2betaLabelAppliedCapabilities::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
