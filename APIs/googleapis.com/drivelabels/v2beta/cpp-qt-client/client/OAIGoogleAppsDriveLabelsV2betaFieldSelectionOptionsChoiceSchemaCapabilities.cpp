/**
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities() {
    this->initializeModel();
}

OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::~OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities() {}

void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::initializeModel() {

    m_can_delete_isSet = false;
    m_can_delete_isValid = false;

    m_can_disable_isSet = false;
    m_can_disable_isValid = false;

    m_can_enable_isSet = false;
    m_can_enable_isValid = false;

    m_can_update_isSet = false;
    m_can_update_isValid = false;
}

void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::fromJsonObject(QJsonObject json) {

    m_can_delete_isValid = ::OpenAPI::fromJsonValue(m_can_delete, json[QString("canDelete")]);
    m_can_delete_isSet = !json[QString("canDelete")].isNull() && m_can_delete_isValid;

    m_can_disable_isValid = ::OpenAPI::fromJsonValue(m_can_disable, json[QString("canDisable")]);
    m_can_disable_isSet = !json[QString("canDisable")].isNull() && m_can_disable_isValid;

    m_can_enable_isValid = ::OpenAPI::fromJsonValue(m_can_enable, json[QString("canEnable")]);
    m_can_enable_isSet = !json[QString("canEnable")].isNull() && m_can_enable_isValid;

    m_can_update_isValid = ::OpenAPI::fromJsonValue(m_can_update, json[QString("canUpdate")]);
    m_can_update_isSet = !json[QString("canUpdate")].isNull() && m_can_update_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::asJsonObject() const {
    QJsonObject obj;
    if (m_can_delete_isSet) {
        obj.insert(QString("canDelete"), ::OpenAPI::toJsonValue(m_can_delete));
    }
    if (m_can_disable_isSet) {
        obj.insert(QString("canDisable"), ::OpenAPI::toJsonValue(m_can_disable));
    }
    if (m_can_enable_isSet) {
        obj.insert(QString("canEnable"), ::OpenAPI::toJsonValue(m_can_enable));
    }
    if (m_can_update_isSet) {
        obj.insert(QString("canUpdate"), ::OpenAPI::toJsonValue(m_can_update));
    }
    return obj;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::isCanDelete() const {
    return m_can_delete;
}
void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::setCanDelete(const bool &can_delete) {
    m_can_delete = can_delete;
    m_can_delete_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::is_can_delete_Set() const{
    return m_can_delete_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::is_can_delete_Valid() const{
    return m_can_delete_isValid;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::isCanDisable() const {
    return m_can_disable;
}
void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::setCanDisable(const bool &can_disable) {
    m_can_disable = can_disable;
    m_can_disable_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::is_can_disable_Set() const{
    return m_can_disable_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::is_can_disable_Valid() const{
    return m_can_disable_isValid;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::isCanEnable() const {
    return m_can_enable;
}
void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::setCanEnable(const bool &can_enable) {
    m_can_enable = can_enable;
    m_can_enable_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::is_can_enable_Set() const{
    return m_can_enable_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::is_can_enable_Valid() const{
    return m_can_enable_isValid;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::isCanUpdate() const {
    return m_can_update;
}
void OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::setCanUpdate(const bool &can_update) {
    m_can_update = can_update;
    m_can_update_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::is_can_update_Set() const{
    return m_can_update_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::is_can_update_Valid() const{
    return m_can_update_isValid;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_can_delete_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_disable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_enable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_update_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
