/**
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsDriveLabelsV2betaListLabelPermissionsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsDriveLabelsV2betaListLabelPermissionsResponse::OAIGoogleAppsDriveLabelsV2betaListLabelPermissionsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsDriveLabelsV2betaListLabelPermissionsResponse::OAIGoogleAppsDriveLabelsV2betaListLabelPermissionsResponse() {
    this->initializeModel();
}

OAIGoogleAppsDriveLabelsV2betaListLabelPermissionsResponse::~OAIGoogleAppsDriveLabelsV2betaListLabelPermissionsResponse() {}

void OAIGoogleAppsDriveLabelsV2betaListLabelPermissionsResponse::initializeModel() {

    m_label_permissions_isSet = false;
    m_label_permissions_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;
}

void OAIGoogleAppsDriveLabelsV2betaListLabelPermissionsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsDriveLabelsV2betaListLabelPermissionsResponse::fromJsonObject(QJsonObject json) {

    m_label_permissions_isValid = ::OpenAPI::fromJsonValue(m_label_permissions, json[QString("labelPermissions")]);
    m_label_permissions_isSet = !json[QString("labelPermissions")].isNull() && m_label_permissions_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaListLabelPermissionsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsDriveLabelsV2betaListLabelPermissionsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_label_permissions.size() > 0) {
        obj.insert(QString("labelPermissions"), ::OpenAPI::toJsonValue(m_label_permissions));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    return obj;
}

QList<OAIGoogleAppsDriveLabelsV2betaLabelPermission> OAIGoogleAppsDriveLabelsV2betaListLabelPermissionsResponse::getLabelPermissions() const {
    return m_label_permissions;
}
void OAIGoogleAppsDriveLabelsV2betaListLabelPermissionsResponse::setLabelPermissions(const QList<OAIGoogleAppsDriveLabelsV2betaLabelPermission> &label_permissions) {
    m_label_permissions = label_permissions;
    m_label_permissions_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaListLabelPermissionsResponse::is_label_permissions_Set() const{
    return m_label_permissions_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaListLabelPermissionsResponse::is_label_permissions_Valid() const{
    return m_label_permissions_isValid;
}

QString OAIGoogleAppsDriveLabelsV2betaListLabelPermissionsResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIGoogleAppsDriveLabelsV2betaListLabelPermissionsResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2betaListLabelPermissionsResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIGoogleAppsDriveLabelsV2betaListLabelPermissionsResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

bool OAIGoogleAppsDriveLabelsV2betaListLabelPermissionsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_label_permissions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsDriveLabelsV2betaListLabelPermissionsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
