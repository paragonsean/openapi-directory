/**
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleTypeDate from './GoogleTypeDate';

/**
 * The GoogleAppsDriveLabelsV2FieldDateOptions model module.
 * @module model/GoogleAppsDriveLabelsV2FieldDateOptions
 * @version v2
 */
class GoogleAppsDriveLabelsV2FieldDateOptions {
    /**
     * Constructs a new <code>GoogleAppsDriveLabelsV2FieldDateOptions</code>.
     * Options for the date field type.
     * @alias module:model/GoogleAppsDriveLabelsV2FieldDateOptions
     */
    constructor() { 
        
        GoogleAppsDriveLabelsV2FieldDateOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleAppsDriveLabelsV2FieldDateOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleAppsDriveLabelsV2FieldDateOptions} obj Optional instance to populate.
     * @return {module:model/GoogleAppsDriveLabelsV2FieldDateOptions} The populated <code>GoogleAppsDriveLabelsV2FieldDateOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleAppsDriveLabelsV2FieldDateOptions();

            if (data.hasOwnProperty('dateFormat')) {
                obj['dateFormat'] = ApiClient.convertToType(data['dateFormat'], 'String');
            }
            if (data.hasOwnProperty('dateFormatType')) {
                obj['dateFormatType'] = ApiClient.convertToType(data['dateFormatType'], 'String');
            }
            if (data.hasOwnProperty('maxValue')) {
                obj['maxValue'] = GoogleTypeDate.constructFromObject(data['maxValue']);
            }
            if (data.hasOwnProperty('minValue')) {
                obj['minValue'] = GoogleTypeDate.constructFromObject(data['minValue']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleAppsDriveLabelsV2FieldDateOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleAppsDriveLabelsV2FieldDateOptions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dateFormat'] && !(typeof data['dateFormat'] === 'string' || data['dateFormat'] instanceof String)) {
            throw new Error("Expected the field `dateFormat` to be a primitive type in the JSON string but got " + data['dateFormat']);
        }
        // ensure the json data is a string
        if (data['dateFormatType'] && !(typeof data['dateFormatType'] === 'string' || data['dateFormatType'] instanceof String)) {
            throw new Error("Expected the field `dateFormatType` to be a primitive type in the JSON string but got " + data['dateFormatType']);
        }
        // validate the optional field `maxValue`
        if (data['maxValue']) { // data not null
          GoogleTypeDate.validateJSON(data['maxValue']);
        }
        // validate the optional field `minValue`
        if (data['minValue']) { // data not null
          GoogleTypeDate.validateJSON(data['minValue']);
        }

        return true;
    }


}



/**
 * Output only. ICU date format.
 * @member {String} dateFormat
 */
GoogleAppsDriveLabelsV2FieldDateOptions.prototype['dateFormat'] = undefined;

/**
 * Localized date formatting option. Field values are rendered in this format according to their locale.
 * @member {module:model/GoogleAppsDriveLabelsV2FieldDateOptions.DateFormatTypeEnum} dateFormatType
 */
GoogleAppsDriveLabelsV2FieldDateOptions.prototype['dateFormatType'] = undefined;

/**
 * @member {module:model/GoogleTypeDate} maxValue
 */
GoogleAppsDriveLabelsV2FieldDateOptions.prototype['maxValue'] = undefined;

/**
 * @member {module:model/GoogleTypeDate} minValue
 */
GoogleAppsDriveLabelsV2FieldDateOptions.prototype['minValue'] = undefined;





/**
 * Allowed values for the <code>dateFormatType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleAppsDriveLabelsV2FieldDateOptions['DateFormatTypeEnum'] = {

    /**
     * value: "DATE_FORMAT_UNSPECIFIED"
     * @const
     */
    "DATE_FORMAT_UNSPECIFIED": "DATE_FORMAT_UNSPECIFIED",

    /**
     * value: "LONG_DATE"
     * @const
     */
    "LONG_DATE": "LONG_DATE",

    /**
     * value: "SHORT_DATE"
     * @const
     */
    "SHORT_DATE": "SHORT_DATE"
};



export default GoogleAppsDriveLabelsV2FieldDateOptions;

