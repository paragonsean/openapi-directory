/**
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleAppsDriveLabelsV2LifecycleDisabledPolicy from './GoogleAppsDriveLabelsV2LifecycleDisabledPolicy';

/**
 * The GoogleAppsDriveLabelsV2Lifecycle model module.
 * @module model/GoogleAppsDriveLabelsV2Lifecycle
 * @version v2
 */
class GoogleAppsDriveLabelsV2Lifecycle {
    /**
     * Constructs a new <code>GoogleAppsDriveLabelsV2Lifecycle</code>.
     * The lifecycle state of an object, such as label, field, or choice. The lifecycle enforces the following transitions: * &#x60;UNPUBLISHED_DRAFT&#x60; (starting state) * &#x60;UNPUBLISHED_DRAFT&#x60; -&gt; &#x60;PUBLISHED&#x60; * &#x60;UNPUBLISHED_DRAFT&#x60; -&gt; (Deleted) * &#x60;PUBLISHED&#x60; -&gt; &#x60;DISABLED&#x60; * &#x60;DISABLED&#x60; -&gt; &#x60;PUBLISHED&#x60; * &#x60;DISABLED&#x60; -&gt; (Deleted) The published and disabled states have some distinct characteristics: * Published—Some kinds of changes might be made to an object in this state, in which case &#x60;has_unpublished_changes&#x60; will be true. Also, some kinds of changes are not permitted. Generally, any change that would invalidate or cause new restrictions on existing metadata related to the label are rejected. * Disabled—When disabled, the configured &#x60;DisabledPolicy&#x60; takes effect.
     * @alias module:model/GoogleAppsDriveLabelsV2Lifecycle
     */
    constructor() { 
        
        GoogleAppsDriveLabelsV2Lifecycle.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleAppsDriveLabelsV2Lifecycle</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleAppsDriveLabelsV2Lifecycle} obj Optional instance to populate.
     * @return {module:model/GoogleAppsDriveLabelsV2Lifecycle} The populated <code>GoogleAppsDriveLabelsV2Lifecycle</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleAppsDriveLabelsV2Lifecycle();

            if (data.hasOwnProperty('disabledPolicy')) {
                obj['disabledPolicy'] = GoogleAppsDriveLabelsV2LifecycleDisabledPolicy.constructFromObject(data['disabledPolicy']);
            }
            if (data.hasOwnProperty('hasUnpublishedChanges')) {
                obj['hasUnpublishedChanges'] = ApiClient.convertToType(data['hasUnpublishedChanges'], 'Boolean');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleAppsDriveLabelsV2Lifecycle</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleAppsDriveLabelsV2Lifecycle</code>.
     */
    static validateJSON(data) {
        // validate the optional field `disabledPolicy`
        if (data['disabledPolicy']) { // data not null
          GoogleAppsDriveLabelsV2LifecycleDisabledPolicy.validateJSON(data['disabledPolicy']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleAppsDriveLabelsV2LifecycleDisabledPolicy} disabledPolicy
 */
GoogleAppsDriveLabelsV2Lifecycle.prototype['disabledPolicy'] = undefined;

/**
 * Output only. Whether the object associated with this lifecycle has unpublished changes.
 * @member {Boolean} hasUnpublishedChanges
 */
GoogleAppsDriveLabelsV2Lifecycle.prototype['hasUnpublishedChanges'] = undefined;

/**
 * Output only. The state of the object associated with this lifecycle.
 * @member {module:model/GoogleAppsDriveLabelsV2Lifecycle.StateEnum} state
 */
GoogleAppsDriveLabelsV2Lifecycle.prototype['state'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GoogleAppsDriveLabelsV2Lifecycle['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "UNPUBLISHED_DRAFT"
     * @const
     */
    "UNPUBLISHED_DRAFT": "UNPUBLISHED_DRAFT",

    /**
     * value: "PUBLISHED"
     * @const
     */
    "PUBLISHED": "PUBLISHED",

    /**
     * value: "DISABLED"
     * @const
     */
    "DISABLED": "DISABLED",

    /**
     * value: "DELETED"
     * @const
     */
    "DELETED": "DELETED"
};



export default GoogleAppsDriveLabelsV2Lifecycle;

