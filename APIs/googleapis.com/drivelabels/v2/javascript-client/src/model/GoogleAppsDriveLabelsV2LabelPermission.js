/**
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleAppsDriveLabelsV2LabelPermission model module.
 * @module model/GoogleAppsDriveLabelsV2LabelPermission
 * @version v2
 */
class GoogleAppsDriveLabelsV2LabelPermission {
    /**
     * Constructs a new <code>GoogleAppsDriveLabelsV2LabelPermission</code>.
     * The permission that applies to a principal (user, group, audience) on a label.
     * @alias module:model/GoogleAppsDriveLabelsV2LabelPermission
     */
    constructor() { 
        
        GoogleAppsDriveLabelsV2LabelPermission.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleAppsDriveLabelsV2LabelPermission</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleAppsDriveLabelsV2LabelPermission} obj Optional instance to populate.
     * @return {module:model/GoogleAppsDriveLabelsV2LabelPermission} The populated <code>GoogleAppsDriveLabelsV2LabelPermission</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleAppsDriveLabelsV2LabelPermission();

            if (data.hasOwnProperty('audience')) {
                obj['audience'] = ApiClient.convertToType(data['audience'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = ApiClient.convertToType(data['group'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('person')) {
                obj['person'] = ApiClient.convertToType(data['person'], 'String');
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleAppsDriveLabelsV2LabelPermission</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleAppsDriveLabelsV2LabelPermission</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['audience'] && !(typeof data['audience'] === 'string' || data['audience'] instanceof String)) {
            throw new Error("Expected the field `audience` to be a primitive type in the JSON string but got " + data['audience']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['group'] && !(typeof data['group'] === 'string' || data['group'] instanceof String)) {
            throw new Error("Expected the field `group` to be a primitive type in the JSON string but got " + data['group']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['person'] && !(typeof data['person'] === 'string' || data['person'] instanceof String)) {
            throw new Error("Expected the field `person` to be a primitive type in the JSON string but got " + data['person']);
        }
        // ensure the json data is a string
        if (data['role'] && !(typeof data['role'] === 'string' || data['role'] instanceof String)) {
            throw new Error("Expected the field `role` to be a primitive type in the JSON string but got " + data['role']);
        }

        return true;
    }


}



/**
 * Audience to grant a role to. The magic value of `audiences/default` may be used to apply the role to the default audience in the context of the organization that owns the Label.
 * @member {String} audience
 */
GoogleAppsDriveLabelsV2LabelPermission.prototype['audience'] = undefined;

/**
 * Specifies the email address for a user or group pricinpal. Not populated for audience principals. User and Group permissions may only be inserted using email address. On update requests, if email address is specified, no principal should be specified.
 * @member {String} email
 */
GoogleAppsDriveLabelsV2LabelPermission.prototype['email'] = undefined;

/**
 * Group resource name.
 * @member {String} group
 */
GoogleAppsDriveLabelsV2LabelPermission.prototype['group'] = undefined;

/**
 * Resource name of this permission.
 * @member {String} name
 */
GoogleAppsDriveLabelsV2LabelPermission.prototype['name'] = undefined;

/**
 * Person resource name.
 * @member {String} person
 */
GoogleAppsDriveLabelsV2LabelPermission.prototype['person'] = undefined;

/**
 * The role the principal should have.
 * @member {module:model/GoogleAppsDriveLabelsV2LabelPermission.RoleEnum} role
 */
GoogleAppsDriveLabelsV2LabelPermission.prototype['role'] = undefined;





/**
 * Allowed values for the <code>role</code> property.
 * @enum {String}
 * @readonly
 */
GoogleAppsDriveLabelsV2LabelPermission['RoleEnum'] = {

    /**
     * value: "LABEL_ROLE_UNSPECIFIED"
     * @const
     */
    "LABEL_ROLE_UNSPECIFIED": "LABEL_ROLE_UNSPECIFIED",

    /**
     * value: "READER"
     * @const
     */
    "READER": "READER",

    /**
     * value: "APPLIER"
     * @const
     */
    "APPLIER": "APPLIER",

    /**
     * value: "ORGANIZER"
     * @const
     */
    "ORGANIZER": "ORGANIZER",

    /**
     * value: "EDITOR"
     * @const
     */
    "EDITOR": "EDITOR"
};



export default GoogleAppsDriveLabelsV2LabelPermission;

