/*
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2FieldAppliedCapabilities;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2FieldDateOptions;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2FieldDisplayHints;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2FieldIntegerOptions;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2FieldProperties;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2FieldSchemaCapabilities;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2FieldSelectionOptions;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2FieldTextOptions;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2FieldUserOptions;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2Lifecycle;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2LockStatus;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2UserInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Defines a field that has a display name, data type, and other configuration options. This field defines the kind of metadata that may be set on a Drive item.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:43:36.456078-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAppsDriveLabelsV2Field {
  public static final String SERIALIZED_NAME_APPLIED_CAPABILITIES = "appliedCapabilities";
  @SerializedName(SERIALIZED_NAME_APPLIED_CAPABILITIES)
  private GoogleAppsDriveLabelsV2FieldAppliedCapabilities appliedCapabilities;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_CREATOR = "creator";
  @SerializedName(SERIALIZED_NAME_CREATOR)
  private GoogleAppsDriveLabelsV2UserInfo creator;

  public static final String SERIALIZED_NAME_DATE_OPTIONS = "dateOptions";
  @SerializedName(SERIALIZED_NAME_DATE_OPTIONS)
  private GoogleAppsDriveLabelsV2FieldDateOptions dateOptions;

  public static final String SERIALIZED_NAME_DISABLE_TIME = "disableTime";
  @SerializedName(SERIALIZED_NAME_DISABLE_TIME)
  private String disableTime;

  public static final String SERIALIZED_NAME_DISABLER = "disabler";
  @SerializedName(SERIALIZED_NAME_DISABLER)
  private GoogleAppsDriveLabelsV2UserInfo disabler;

  public static final String SERIALIZED_NAME_DISPLAY_HINTS = "displayHints";
  @SerializedName(SERIALIZED_NAME_DISPLAY_HINTS)
  private GoogleAppsDriveLabelsV2FieldDisplayHints displayHints;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_INTEGER_OPTIONS = "integerOptions";
  @SerializedName(SERIALIZED_NAME_INTEGER_OPTIONS)
  private GoogleAppsDriveLabelsV2FieldIntegerOptions integerOptions;

  public static final String SERIALIZED_NAME_LIFECYCLE = "lifecycle";
  @SerializedName(SERIALIZED_NAME_LIFECYCLE)
  private GoogleAppsDriveLabelsV2Lifecycle lifecycle;

  public static final String SERIALIZED_NAME_LOCK_STATUS = "lockStatus";
  @SerializedName(SERIALIZED_NAME_LOCK_STATUS)
  private GoogleAppsDriveLabelsV2LockStatus lockStatus;

  public static final String SERIALIZED_NAME_PROPERTIES = "properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private GoogleAppsDriveLabelsV2FieldProperties properties;

  public static final String SERIALIZED_NAME_PUBLISHER = "publisher";
  @SerializedName(SERIALIZED_NAME_PUBLISHER)
  private GoogleAppsDriveLabelsV2UserInfo publisher;

  public static final String SERIALIZED_NAME_QUERY_KEY = "queryKey";
  @SerializedName(SERIALIZED_NAME_QUERY_KEY)
  private String queryKey;

  public static final String SERIALIZED_NAME_SCHEMA_CAPABILITIES = "schemaCapabilities";
  @SerializedName(SERIALIZED_NAME_SCHEMA_CAPABILITIES)
  private GoogleAppsDriveLabelsV2FieldSchemaCapabilities schemaCapabilities;

  public static final String SERIALIZED_NAME_SELECTION_OPTIONS = "selectionOptions";
  @SerializedName(SERIALIZED_NAME_SELECTION_OPTIONS)
  private GoogleAppsDriveLabelsV2FieldSelectionOptions selectionOptions;

  public static final String SERIALIZED_NAME_TEXT_OPTIONS = "textOptions";
  @SerializedName(SERIALIZED_NAME_TEXT_OPTIONS)
  private GoogleAppsDriveLabelsV2FieldTextOptions textOptions;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public static final String SERIALIZED_NAME_UPDATER = "updater";
  @SerializedName(SERIALIZED_NAME_UPDATER)
  private GoogleAppsDriveLabelsV2UserInfo updater;

  public static final String SERIALIZED_NAME_USER_OPTIONS = "userOptions";
  @SerializedName(SERIALIZED_NAME_USER_OPTIONS)
  private GoogleAppsDriveLabelsV2FieldUserOptions userOptions;

  public GoogleAppsDriveLabelsV2Field() {
  }

  public GoogleAppsDriveLabelsV2Field(
     String createTime, 
     String disableTime, 
     String id, 
     String queryKey, 
     String updateTime
  ) {
    this();
    this.createTime = createTime;
    this.disableTime = disableTime;
    this.id = id;
    this.queryKey = queryKey;
    this.updateTime = updateTime;
  }

  public GoogleAppsDriveLabelsV2Field appliedCapabilities(GoogleAppsDriveLabelsV2FieldAppliedCapabilities appliedCapabilities) {
    this.appliedCapabilities = appliedCapabilities;
    return this;
  }

  /**
   * Get appliedCapabilities
   * @return appliedCapabilities
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2FieldAppliedCapabilities getAppliedCapabilities() {
    return appliedCapabilities;
  }

  public void setAppliedCapabilities(GoogleAppsDriveLabelsV2FieldAppliedCapabilities appliedCapabilities) {
    this.appliedCapabilities = appliedCapabilities;
  }


  /**
   * Output only. The time this field was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleAppsDriveLabelsV2Field creator(GoogleAppsDriveLabelsV2UserInfo creator) {
    this.creator = creator;
    return this;
  }

  /**
   * Get creator
   * @return creator
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2UserInfo getCreator() {
    return creator;
  }

  public void setCreator(GoogleAppsDriveLabelsV2UserInfo creator) {
    this.creator = creator;
  }


  public GoogleAppsDriveLabelsV2Field dateOptions(GoogleAppsDriveLabelsV2FieldDateOptions dateOptions) {
    this.dateOptions = dateOptions;
    return this;
  }

  /**
   * Get dateOptions
   * @return dateOptions
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2FieldDateOptions getDateOptions() {
    return dateOptions;
  }

  public void setDateOptions(GoogleAppsDriveLabelsV2FieldDateOptions dateOptions) {
    this.dateOptions = dateOptions;
  }


  /**
   * Output only. The time this field was disabled. This value has no meaning when the field is not disabled.
   * @return disableTime
   */
  @javax.annotation.Nullable
  public String getDisableTime() {
    return disableTime;
  }



  public GoogleAppsDriveLabelsV2Field disabler(GoogleAppsDriveLabelsV2UserInfo disabler) {
    this.disabler = disabler;
    return this;
  }

  /**
   * Get disabler
   * @return disabler
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2UserInfo getDisabler() {
    return disabler;
  }

  public void setDisabler(GoogleAppsDriveLabelsV2UserInfo disabler) {
    this.disabler = disabler;
  }


  public GoogleAppsDriveLabelsV2Field displayHints(GoogleAppsDriveLabelsV2FieldDisplayHints displayHints) {
    this.displayHints = displayHints;
    return this;
  }

  /**
   * Get displayHints
   * @return displayHints
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2FieldDisplayHints getDisplayHints() {
    return displayHints;
  }

  public void setDisplayHints(GoogleAppsDriveLabelsV2FieldDisplayHints displayHints) {
    this.displayHints = displayHints;
  }


  /**
   * Output only. The key of a field, unique within a label or library. This value is autogenerated. Matches the regex: &#x60;([a-zA-Z0-9])+&#x60;
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }



  public GoogleAppsDriveLabelsV2Field integerOptions(GoogleAppsDriveLabelsV2FieldIntegerOptions integerOptions) {
    this.integerOptions = integerOptions;
    return this;
  }

  /**
   * Get integerOptions
   * @return integerOptions
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2FieldIntegerOptions getIntegerOptions() {
    return integerOptions;
  }

  public void setIntegerOptions(GoogleAppsDriveLabelsV2FieldIntegerOptions integerOptions) {
    this.integerOptions = integerOptions;
  }


  public GoogleAppsDriveLabelsV2Field lifecycle(GoogleAppsDriveLabelsV2Lifecycle lifecycle) {
    this.lifecycle = lifecycle;
    return this;
  }

  /**
   * Get lifecycle
   * @return lifecycle
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2Lifecycle getLifecycle() {
    return lifecycle;
  }

  public void setLifecycle(GoogleAppsDriveLabelsV2Lifecycle lifecycle) {
    this.lifecycle = lifecycle;
  }


  public GoogleAppsDriveLabelsV2Field lockStatus(GoogleAppsDriveLabelsV2LockStatus lockStatus) {
    this.lockStatus = lockStatus;
    return this;
  }

  /**
   * Get lockStatus
   * @return lockStatus
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2LockStatus getLockStatus() {
    return lockStatus;
  }

  public void setLockStatus(GoogleAppsDriveLabelsV2LockStatus lockStatus) {
    this.lockStatus = lockStatus;
  }


  public GoogleAppsDriveLabelsV2Field properties(GoogleAppsDriveLabelsV2FieldProperties properties) {
    this.properties = properties;
    return this;
  }

  /**
   * Get properties
   * @return properties
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2FieldProperties getProperties() {
    return properties;
  }

  public void setProperties(GoogleAppsDriveLabelsV2FieldProperties properties) {
    this.properties = properties;
  }


  public GoogleAppsDriveLabelsV2Field publisher(GoogleAppsDriveLabelsV2UserInfo publisher) {
    this.publisher = publisher;
    return this;
  }

  /**
   * Get publisher
   * @return publisher
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2UserInfo getPublisher() {
    return publisher;
  }

  public void setPublisher(GoogleAppsDriveLabelsV2UserInfo publisher) {
    this.publisher = publisher;
  }


  /**
   * Output only. The key to use when constructing Drive search queries to find files based on values defined for this field on files. For example, \&quot;&#x60;{query_key}&#x60; &gt; 2001-01-01\&quot;.
   * @return queryKey
   */
  @javax.annotation.Nullable
  public String getQueryKey() {
    return queryKey;
  }



  public GoogleAppsDriveLabelsV2Field schemaCapabilities(GoogleAppsDriveLabelsV2FieldSchemaCapabilities schemaCapabilities) {
    this.schemaCapabilities = schemaCapabilities;
    return this;
  }

  /**
   * Get schemaCapabilities
   * @return schemaCapabilities
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2FieldSchemaCapabilities getSchemaCapabilities() {
    return schemaCapabilities;
  }

  public void setSchemaCapabilities(GoogleAppsDriveLabelsV2FieldSchemaCapabilities schemaCapabilities) {
    this.schemaCapabilities = schemaCapabilities;
  }


  public GoogleAppsDriveLabelsV2Field selectionOptions(GoogleAppsDriveLabelsV2FieldSelectionOptions selectionOptions) {
    this.selectionOptions = selectionOptions;
    return this;
  }

  /**
   * Get selectionOptions
   * @return selectionOptions
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2FieldSelectionOptions getSelectionOptions() {
    return selectionOptions;
  }

  public void setSelectionOptions(GoogleAppsDriveLabelsV2FieldSelectionOptions selectionOptions) {
    this.selectionOptions = selectionOptions;
  }


  public GoogleAppsDriveLabelsV2Field textOptions(GoogleAppsDriveLabelsV2FieldTextOptions textOptions) {
    this.textOptions = textOptions;
    return this;
  }

  /**
   * Get textOptions
   * @return textOptions
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2FieldTextOptions getTextOptions() {
    return textOptions;
  }

  public void setTextOptions(GoogleAppsDriveLabelsV2FieldTextOptions textOptions) {
    this.textOptions = textOptions;
  }


  /**
   * Output only. The time this field was updated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }



  public GoogleAppsDriveLabelsV2Field updater(GoogleAppsDriveLabelsV2UserInfo updater) {
    this.updater = updater;
    return this;
  }

  /**
   * Get updater
   * @return updater
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2UserInfo getUpdater() {
    return updater;
  }

  public void setUpdater(GoogleAppsDriveLabelsV2UserInfo updater) {
    this.updater = updater;
  }


  public GoogleAppsDriveLabelsV2Field userOptions(GoogleAppsDriveLabelsV2FieldUserOptions userOptions) {
    this.userOptions = userOptions;
    return this;
  }

  /**
   * Get userOptions
   * @return userOptions
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2FieldUserOptions getUserOptions() {
    return userOptions;
  }

  public void setUserOptions(GoogleAppsDriveLabelsV2FieldUserOptions userOptions) {
    this.userOptions = userOptions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAppsDriveLabelsV2Field googleAppsDriveLabelsV2Field = (GoogleAppsDriveLabelsV2Field) o;
    return Objects.equals(this.appliedCapabilities, googleAppsDriveLabelsV2Field.appliedCapabilities) &&
        Objects.equals(this.createTime, googleAppsDriveLabelsV2Field.createTime) &&
        Objects.equals(this.creator, googleAppsDriveLabelsV2Field.creator) &&
        Objects.equals(this.dateOptions, googleAppsDriveLabelsV2Field.dateOptions) &&
        Objects.equals(this.disableTime, googleAppsDriveLabelsV2Field.disableTime) &&
        Objects.equals(this.disabler, googleAppsDriveLabelsV2Field.disabler) &&
        Objects.equals(this.displayHints, googleAppsDriveLabelsV2Field.displayHints) &&
        Objects.equals(this.id, googleAppsDriveLabelsV2Field.id) &&
        Objects.equals(this.integerOptions, googleAppsDriveLabelsV2Field.integerOptions) &&
        Objects.equals(this.lifecycle, googleAppsDriveLabelsV2Field.lifecycle) &&
        Objects.equals(this.lockStatus, googleAppsDriveLabelsV2Field.lockStatus) &&
        Objects.equals(this.properties, googleAppsDriveLabelsV2Field.properties) &&
        Objects.equals(this.publisher, googleAppsDriveLabelsV2Field.publisher) &&
        Objects.equals(this.queryKey, googleAppsDriveLabelsV2Field.queryKey) &&
        Objects.equals(this.schemaCapabilities, googleAppsDriveLabelsV2Field.schemaCapabilities) &&
        Objects.equals(this.selectionOptions, googleAppsDriveLabelsV2Field.selectionOptions) &&
        Objects.equals(this.textOptions, googleAppsDriveLabelsV2Field.textOptions) &&
        Objects.equals(this.updateTime, googleAppsDriveLabelsV2Field.updateTime) &&
        Objects.equals(this.updater, googleAppsDriveLabelsV2Field.updater) &&
        Objects.equals(this.userOptions, googleAppsDriveLabelsV2Field.userOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appliedCapabilities, createTime, creator, dateOptions, disableTime, disabler, displayHints, id, integerOptions, lifecycle, lockStatus, properties, publisher, queryKey, schemaCapabilities, selectionOptions, textOptions, updateTime, updater, userOptions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAppsDriveLabelsV2Field {\n");
    sb.append("    appliedCapabilities: ").append(toIndentedString(appliedCapabilities)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    dateOptions: ").append(toIndentedString(dateOptions)).append("\n");
    sb.append("    disableTime: ").append(toIndentedString(disableTime)).append("\n");
    sb.append("    disabler: ").append(toIndentedString(disabler)).append("\n");
    sb.append("    displayHints: ").append(toIndentedString(displayHints)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    integerOptions: ").append(toIndentedString(integerOptions)).append("\n");
    sb.append("    lifecycle: ").append(toIndentedString(lifecycle)).append("\n");
    sb.append("    lockStatus: ").append(toIndentedString(lockStatus)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    publisher: ").append(toIndentedString(publisher)).append("\n");
    sb.append("    queryKey: ").append(toIndentedString(queryKey)).append("\n");
    sb.append("    schemaCapabilities: ").append(toIndentedString(schemaCapabilities)).append("\n");
    sb.append("    selectionOptions: ").append(toIndentedString(selectionOptions)).append("\n");
    sb.append("    textOptions: ").append(toIndentedString(textOptions)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    updater: ").append(toIndentedString(updater)).append("\n");
    sb.append("    userOptions: ").append(toIndentedString(userOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appliedCapabilities");
    openapiFields.add("createTime");
    openapiFields.add("creator");
    openapiFields.add("dateOptions");
    openapiFields.add("disableTime");
    openapiFields.add("disabler");
    openapiFields.add("displayHints");
    openapiFields.add("id");
    openapiFields.add("integerOptions");
    openapiFields.add("lifecycle");
    openapiFields.add("lockStatus");
    openapiFields.add("properties");
    openapiFields.add("publisher");
    openapiFields.add("queryKey");
    openapiFields.add("schemaCapabilities");
    openapiFields.add("selectionOptions");
    openapiFields.add("textOptions");
    openapiFields.add("updateTime");
    openapiFields.add("updater");
    openapiFields.add("userOptions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAppsDriveLabelsV2Field
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAppsDriveLabelsV2Field.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAppsDriveLabelsV2Field is not found in the empty JSON string", GoogleAppsDriveLabelsV2Field.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAppsDriveLabelsV2Field.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAppsDriveLabelsV2Field` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `appliedCapabilities`
      if (jsonObj.get("appliedCapabilities") != null && !jsonObj.get("appliedCapabilities").isJsonNull()) {
        GoogleAppsDriveLabelsV2FieldAppliedCapabilities.validateJsonElement(jsonObj.get("appliedCapabilities"));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      // validate the optional field `creator`
      if (jsonObj.get("creator") != null && !jsonObj.get("creator").isJsonNull()) {
        GoogleAppsDriveLabelsV2UserInfo.validateJsonElement(jsonObj.get("creator"));
      }
      // validate the optional field `dateOptions`
      if (jsonObj.get("dateOptions") != null && !jsonObj.get("dateOptions").isJsonNull()) {
        GoogleAppsDriveLabelsV2FieldDateOptions.validateJsonElement(jsonObj.get("dateOptions"));
      }
      if ((jsonObj.get("disableTime") != null && !jsonObj.get("disableTime").isJsonNull()) && !jsonObj.get("disableTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disableTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disableTime").toString()));
      }
      // validate the optional field `disabler`
      if (jsonObj.get("disabler") != null && !jsonObj.get("disabler").isJsonNull()) {
        GoogleAppsDriveLabelsV2UserInfo.validateJsonElement(jsonObj.get("disabler"));
      }
      // validate the optional field `displayHints`
      if (jsonObj.get("displayHints") != null && !jsonObj.get("displayHints").isJsonNull()) {
        GoogleAppsDriveLabelsV2FieldDisplayHints.validateJsonElement(jsonObj.get("displayHints"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `integerOptions`
      if (jsonObj.get("integerOptions") != null && !jsonObj.get("integerOptions").isJsonNull()) {
        GoogleAppsDriveLabelsV2FieldIntegerOptions.validateJsonElement(jsonObj.get("integerOptions"));
      }
      // validate the optional field `lifecycle`
      if (jsonObj.get("lifecycle") != null && !jsonObj.get("lifecycle").isJsonNull()) {
        GoogleAppsDriveLabelsV2Lifecycle.validateJsonElement(jsonObj.get("lifecycle"));
      }
      // validate the optional field `lockStatus`
      if (jsonObj.get("lockStatus") != null && !jsonObj.get("lockStatus").isJsonNull()) {
        GoogleAppsDriveLabelsV2LockStatus.validateJsonElement(jsonObj.get("lockStatus"));
      }
      // validate the optional field `properties`
      if (jsonObj.get("properties") != null && !jsonObj.get("properties").isJsonNull()) {
        GoogleAppsDriveLabelsV2FieldProperties.validateJsonElement(jsonObj.get("properties"));
      }
      // validate the optional field `publisher`
      if (jsonObj.get("publisher") != null && !jsonObj.get("publisher").isJsonNull()) {
        GoogleAppsDriveLabelsV2UserInfo.validateJsonElement(jsonObj.get("publisher"));
      }
      if ((jsonObj.get("queryKey") != null && !jsonObj.get("queryKey").isJsonNull()) && !jsonObj.get("queryKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `queryKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("queryKey").toString()));
      }
      // validate the optional field `schemaCapabilities`
      if (jsonObj.get("schemaCapabilities") != null && !jsonObj.get("schemaCapabilities").isJsonNull()) {
        GoogleAppsDriveLabelsV2FieldSchemaCapabilities.validateJsonElement(jsonObj.get("schemaCapabilities"));
      }
      // validate the optional field `selectionOptions`
      if (jsonObj.get("selectionOptions") != null && !jsonObj.get("selectionOptions").isJsonNull()) {
        GoogleAppsDriveLabelsV2FieldSelectionOptions.validateJsonElement(jsonObj.get("selectionOptions"));
      }
      // validate the optional field `textOptions`
      if (jsonObj.get("textOptions") != null && !jsonObj.get("textOptions").isJsonNull()) {
        GoogleAppsDriveLabelsV2FieldTextOptions.validateJsonElement(jsonObj.get("textOptions"));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
      // validate the optional field `updater`
      if (jsonObj.get("updater") != null && !jsonObj.get("updater").isJsonNull()) {
        GoogleAppsDriveLabelsV2UserInfo.validateJsonElement(jsonObj.get("updater"));
      }
      // validate the optional field `userOptions`
      if (jsonObj.get("userOptions") != null && !jsonObj.get("userOptions").isJsonNull()) {
        GoogleAppsDriveLabelsV2FieldUserOptions.validateJsonElement(jsonObj.get("userOptions"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAppsDriveLabelsV2Field.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAppsDriveLabelsV2Field' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAppsDriveLabelsV2Field> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAppsDriveLabelsV2Field.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAppsDriveLabelsV2Field>() {
           @Override
           public void write(JsonWriter out, GoogleAppsDriveLabelsV2Field value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAppsDriveLabelsV2Field read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAppsDriveLabelsV2Field given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAppsDriveLabelsV2Field
   * @throws IOException if the JSON string is invalid with respect to GoogleAppsDriveLabelsV2Field
   */
  public static GoogleAppsDriveLabelsV2Field fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAppsDriveLabelsV2Field.class);
  }

  /**
   * Convert an instance of GoogleAppsDriveLabelsV2Field to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

