/*
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2Field;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2LabelAppliedCapabilities;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2LabelAppliedLabelPolicy;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2LabelDisplayHints;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2LabelProperties;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2LabelSchemaCapabilities;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2Lifecycle;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2LockStatus;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2UserInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A label defines a taxonomy that can be applied to Drive items in order to organize and search across items. Labels can be simple strings, or can contain fields that describe additional metadata that can be further used to organize and search Drive items.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:43:36.456078-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAppsDriveLabelsV2Label {
  public static final String SERIALIZED_NAME_APPLIED_CAPABILITIES = "appliedCapabilities";
  @SerializedName(SERIALIZED_NAME_APPLIED_CAPABILITIES)
  private GoogleAppsDriveLabelsV2LabelAppliedCapabilities appliedCapabilities;

  public static final String SERIALIZED_NAME_APPLIED_LABEL_POLICY = "appliedLabelPolicy";
  @SerializedName(SERIALIZED_NAME_APPLIED_LABEL_POLICY)
  private GoogleAppsDriveLabelsV2LabelAppliedLabelPolicy appliedLabelPolicy;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_CREATOR = "creator";
  @SerializedName(SERIALIZED_NAME_CREATOR)
  private GoogleAppsDriveLabelsV2UserInfo creator;

  public static final String SERIALIZED_NAME_CUSTOMER = "customer";
  @SerializedName(SERIALIZED_NAME_CUSTOMER)
  private String customer;

  public static final String SERIALIZED_NAME_DISABLE_TIME = "disableTime";
  @SerializedName(SERIALIZED_NAME_DISABLE_TIME)
  private String disableTime;

  public static final String SERIALIZED_NAME_DISABLER = "disabler";
  @SerializedName(SERIALIZED_NAME_DISABLER)
  private GoogleAppsDriveLabelsV2UserInfo disabler;

  public static final String SERIALIZED_NAME_DISPLAY_HINTS = "displayHints";
  @SerializedName(SERIALIZED_NAME_DISPLAY_HINTS)
  private GoogleAppsDriveLabelsV2LabelDisplayHints displayHints;

  public static final String SERIALIZED_NAME_FIELDS = "fields";
  @SerializedName(SERIALIZED_NAME_FIELDS)
  private List<GoogleAppsDriveLabelsV2Field> fields = new ArrayList<>();

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  /**
   * Required. The type of label.
   */
  @JsonAdapter(LabelTypeEnum.Adapter.class)
  public enum LabelTypeEnum {
    LABEL_TYPE_UNSPECIFIED("LABEL_TYPE_UNSPECIFIED"),
    
    SHARED("SHARED"),
    
    ADMIN("ADMIN"),
    
    GOOGLE_APP("GOOGLE_APP");

    private String value;

    LabelTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LabelTypeEnum fromValue(String value) {
      for (LabelTypeEnum b : LabelTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LabelTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LabelTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LabelTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LabelTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      LabelTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_LABEL_TYPE = "labelType";
  @SerializedName(SERIALIZED_NAME_LABEL_TYPE)
  private LabelTypeEnum labelType;

  public static final String SERIALIZED_NAME_LEARN_MORE_URI = "learnMoreUri";
  @SerializedName(SERIALIZED_NAME_LEARN_MORE_URI)
  private String learnMoreUri;

  public static final String SERIALIZED_NAME_LIFECYCLE = "lifecycle";
  @SerializedName(SERIALIZED_NAME_LIFECYCLE)
  private GoogleAppsDriveLabelsV2Lifecycle lifecycle;

  public static final String SERIALIZED_NAME_LOCK_STATUS = "lockStatus";
  @SerializedName(SERIALIZED_NAME_LOCK_STATUS)
  private GoogleAppsDriveLabelsV2LockStatus lockStatus;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PROPERTIES = "properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private GoogleAppsDriveLabelsV2LabelProperties properties;

  public static final String SERIALIZED_NAME_PUBLISH_TIME = "publishTime";
  @SerializedName(SERIALIZED_NAME_PUBLISH_TIME)
  private String publishTime;

  public static final String SERIALIZED_NAME_PUBLISHER = "publisher";
  @SerializedName(SERIALIZED_NAME_PUBLISHER)
  private GoogleAppsDriveLabelsV2UserInfo publisher;

  public static final String SERIALIZED_NAME_REVISION_CREATE_TIME = "revisionCreateTime";
  @SerializedName(SERIALIZED_NAME_REVISION_CREATE_TIME)
  private String revisionCreateTime;

  public static final String SERIALIZED_NAME_REVISION_CREATOR = "revisionCreator";
  @SerializedName(SERIALIZED_NAME_REVISION_CREATOR)
  private GoogleAppsDriveLabelsV2UserInfo revisionCreator;

  public static final String SERIALIZED_NAME_REVISION_ID = "revisionId";
  @SerializedName(SERIALIZED_NAME_REVISION_ID)
  private String revisionId;

  public static final String SERIALIZED_NAME_SCHEMA_CAPABILITIES = "schemaCapabilities";
  @SerializedName(SERIALIZED_NAME_SCHEMA_CAPABILITIES)
  private GoogleAppsDriveLabelsV2LabelSchemaCapabilities schemaCapabilities;

  public GoogleAppsDriveLabelsV2Label() {
  }

  public GoogleAppsDriveLabelsV2Label(
     String createTime, 
     String customer, 
     String disableTime, 
     String id, 
     String name, 
     String publishTime, 
     String revisionCreateTime, 
     String revisionId
  ) {
    this();
    this.createTime = createTime;
    this.customer = customer;
    this.disableTime = disableTime;
    this.id = id;
    this.name = name;
    this.publishTime = publishTime;
    this.revisionCreateTime = revisionCreateTime;
    this.revisionId = revisionId;
  }

  public GoogleAppsDriveLabelsV2Label appliedCapabilities(GoogleAppsDriveLabelsV2LabelAppliedCapabilities appliedCapabilities) {
    this.appliedCapabilities = appliedCapabilities;
    return this;
  }

  /**
   * Get appliedCapabilities
   * @return appliedCapabilities
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2LabelAppliedCapabilities getAppliedCapabilities() {
    return appliedCapabilities;
  }

  public void setAppliedCapabilities(GoogleAppsDriveLabelsV2LabelAppliedCapabilities appliedCapabilities) {
    this.appliedCapabilities = appliedCapabilities;
  }


  public GoogleAppsDriveLabelsV2Label appliedLabelPolicy(GoogleAppsDriveLabelsV2LabelAppliedLabelPolicy appliedLabelPolicy) {
    this.appliedLabelPolicy = appliedLabelPolicy;
    return this;
  }

  /**
   * Get appliedLabelPolicy
   * @return appliedLabelPolicy
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2LabelAppliedLabelPolicy getAppliedLabelPolicy() {
    return appliedLabelPolicy;
  }

  public void setAppliedLabelPolicy(GoogleAppsDriveLabelsV2LabelAppliedLabelPolicy appliedLabelPolicy) {
    this.appliedLabelPolicy = appliedLabelPolicy;
  }


  /**
   * Output only. The time this label was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleAppsDriveLabelsV2Label creator(GoogleAppsDriveLabelsV2UserInfo creator) {
    this.creator = creator;
    return this;
  }

  /**
   * Get creator
   * @return creator
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2UserInfo getCreator() {
    return creator;
  }

  public void setCreator(GoogleAppsDriveLabelsV2UserInfo creator) {
    this.creator = creator;
  }


  /**
   * Output only. The customer this label belongs to. For example: \&quot;customers/123abc789.\&quot;
   * @return customer
   */
  @javax.annotation.Nullable
  public String getCustomer() {
    return customer;
  }



  /**
   * Output only. The time this label was disabled. This value has no meaning when the label is not disabled.
   * @return disableTime
   */
  @javax.annotation.Nullable
  public String getDisableTime() {
    return disableTime;
  }



  public GoogleAppsDriveLabelsV2Label disabler(GoogleAppsDriveLabelsV2UserInfo disabler) {
    this.disabler = disabler;
    return this;
  }

  /**
   * Get disabler
   * @return disabler
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2UserInfo getDisabler() {
    return disabler;
  }

  public void setDisabler(GoogleAppsDriveLabelsV2UserInfo disabler) {
    this.disabler = disabler;
  }


  public GoogleAppsDriveLabelsV2Label displayHints(GoogleAppsDriveLabelsV2LabelDisplayHints displayHints) {
    this.displayHints = displayHints;
    return this;
  }

  /**
   * Get displayHints
   * @return displayHints
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2LabelDisplayHints getDisplayHints() {
    return displayHints;
  }

  public void setDisplayHints(GoogleAppsDriveLabelsV2LabelDisplayHints displayHints) {
    this.displayHints = displayHints;
  }


  public GoogleAppsDriveLabelsV2Label fields(List<GoogleAppsDriveLabelsV2Field> fields) {
    this.fields = fields;
    return this;
  }

  public GoogleAppsDriveLabelsV2Label addFieldsItem(GoogleAppsDriveLabelsV2Field fieldsItem) {
    if (this.fields == null) {
      this.fields = new ArrayList<>();
    }
    this.fields.add(fieldsItem);
    return this;
  }

  /**
   * List of fields in descending priority order.
   * @return fields
   */
  @javax.annotation.Nullable
  public List<GoogleAppsDriveLabelsV2Field> getFields() {
    return fields;
  }

  public void setFields(List<GoogleAppsDriveLabelsV2Field> fields) {
    this.fields = fields;
  }


  /**
   * Output only. Globally unique identifier of this label. ID makes up part of the label &#x60;name&#x60;, but unlike &#x60;name&#x60;, ID is consistent between revisions. Matches the regex: &#x60;([a-zA-Z0-9])+&#x60;
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }



  public GoogleAppsDriveLabelsV2Label labelType(LabelTypeEnum labelType) {
    this.labelType = labelType;
    return this;
  }

  /**
   * Required. The type of label.
   * @return labelType
   */
  @javax.annotation.Nullable
  public LabelTypeEnum getLabelType() {
    return labelType;
  }

  public void setLabelType(LabelTypeEnum labelType) {
    this.labelType = labelType;
  }


  public GoogleAppsDriveLabelsV2Label learnMoreUri(String learnMoreUri) {
    this.learnMoreUri = learnMoreUri;
    return this;
  }

  /**
   * Custom URL to present to users to allow them to learn more about this label and how it should be used.
   * @return learnMoreUri
   */
  @javax.annotation.Nullable
  public String getLearnMoreUri() {
    return learnMoreUri;
  }

  public void setLearnMoreUri(String learnMoreUri) {
    this.learnMoreUri = learnMoreUri;
  }


  public GoogleAppsDriveLabelsV2Label lifecycle(GoogleAppsDriveLabelsV2Lifecycle lifecycle) {
    this.lifecycle = lifecycle;
    return this;
  }

  /**
   * Get lifecycle
   * @return lifecycle
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2Lifecycle getLifecycle() {
    return lifecycle;
  }

  public void setLifecycle(GoogleAppsDriveLabelsV2Lifecycle lifecycle) {
    this.lifecycle = lifecycle;
  }


  public GoogleAppsDriveLabelsV2Label lockStatus(GoogleAppsDriveLabelsV2LockStatus lockStatus) {
    this.lockStatus = lockStatus;
    return this;
  }

  /**
   * Get lockStatus
   * @return lockStatus
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2LockStatus getLockStatus() {
    return lockStatus;
  }

  public void setLockStatus(GoogleAppsDriveLabelsV2LockStatus lockStatus) {
    this.lockStatus = lockStatus;
  }


  /**
   * Output only. Resource name of the label. Will be in the form of either: &#x60;labels/{id}&#x60; or &#x60;labels/{id}@{revision_id}&#x60; depending on the request. See &#x60;id&#x60; and &#x60;revision_id&#x60; below.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public GoogleAppsDriveLabelsV2Label properties(GoogleAppsDriveLabelsV2LabelProperties properties) {
    this.properties = properties;
    return this;
  }

  /**
   * Get properties
   * @return properties
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2LabelProperties getProperties() {
    return properties;
  }

  public void setProperties(GoogleAppsDriveLabelsV2LabelProperties properties) {
    this.properties = properties;
  }


  /**
   * Output only. The time this label was published. This value has no meaning when the label is not published.
   * @return publishTime
   */
  @javax.annotation.Nullable
  public String getPublishTime() {
    return publishTime;
  }



  public GoogleAppsDriveLabelsV2Label publisher(GoogleAppsDriveLabelsV2UserInfo publisher) {
    this.publisher = publisher;
    return this;
  }

  /**
   * Get publisher
   * @return publisher
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2UserInfo getPublisher() {
    return publisher;
  }

  public void setPublisher(GoogleAppsDriveLabelsV2UserInfo publisher) {
    this.publisher = publisher;
  }


  /**
   * Output only. The time this label revision was created.
   * @return revisionCreateTime
   */
  @javax.annotation.Nullable
  public String getRevisionCreateTime() {
    return revisionCreateTime;
  }



  public GoogleAppsDriveLabelsV2Label revisionCreator(GoogleAppsDriveLabelsV2UserInfo revisionCreator) {
    this.revisionCreator = revisionCreator;
    return this;
  }

  /**
   * Get revisionCreator
   * @return revisionCreator
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2UserInfo getRevisionCreator() {
    return revisionCreator;
  }

  public void setRevisionCreator(GoogleAppsDriveLabelsV2UserInfo revisionCreator) {
    this.revisionCreator = revisionCreator;
  }


  /**
   * Output only. Revision ID of the label. Revision ID might be part of the label &#x60;name&#x60; depending on the request issued. A new revision is created whenever revisioned properties of a label are changed. Matches the regex: &#x60;([a-zA-Z0-9])+&#x60;
   * @return revisionId
   */
  @javax.annotation.Nullable
  public String getRevisionId() {
    return revisionId;
  }



  public GoogleAppsDriveLabelsV2Label schemaCapabilities(GoogleAppsDriveLabelsV2LabelSchemaCapabilities schemaCapabilities) {
    this.schemaCapabilities = schemaCapabilities;
    return this;
  }

  /**
   * Get schemaCapabilities
   * @return schemaCapabilities
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2LabelSchemaCapabilities getSchemaCapabilities() {
    return schemaCapabilities;
  }

  public void setSchemaCapabilities(GoogleAppsDriveLabelsV2LabelSchemaCapabilities schemaCapabilities) {
    this.schemaCapabilities = schemaCapabilities;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAppsDriveLabelsV2Label googleAppsDriveLabelsV2Label = (GoogleAppsDriveLabelsV2Label) o;
    return Objects.equals(this.appliedCapabilities, googleAppsDriveLabelsV2Label.appliedCapabilities) &&
        Objects.equals(this.appliedLabelPolicy, googleAppsDriveLabelsV2Label.appliedLabelPolicy) &&
        Objects.equals(this.createTime, googleAppsDriveLabelsV2Label.createTime) &&
        Objects.equals(this.creator, googleAppsDriveLabelsV2Label.creator) &&
        Objects.equals(this.customer, googleAppsDriveLabelsV2Label.customer) &&
        Objects.equals(this.disableTime, googleAppsDriveLabelsV2Label.disableTime) &&
        Objects.equals(this.disabler, googleAppsDriveLabelsV2Label.disabler) &&
        Objects.equals(this.displayHints, googleAppsDriveLabelsV2Label.displayHints) &&
        Objects.equals(this.fields, googleAppsDriveLabelsV2Label.fields) &&
        Objects.equals(this.id, googleAppsDriveLabelsV2Label.id) &&
        Objects.equals(this.labelType, googleAppsDriveLabelsV2Label.labelType) &&
        Objects.equals(this.learnMoreUri, googleAppsDriveLabelsV2Label.learnMoreUri) &&
        Objects.equals(this.lifecycle, googleAppsDriveLabelsV2Label.lifecycle) &&
        Objects.equals(this.lockStatus, googleAppsDriveLabelsV2Label.lockStatus) &&
        Objects.equals(this.name, googleAppsDriveLabelsV2Label.name) &&
        Objects.equals(this.properties, googleAppsDriveLabelsV2Label.properties) &&
        Objects.equals(this.publishTime, googleAppsDriveLabelsV2Label.publishTime) &&
        Objects.equals(this.publisher, googleAppsDriveLabelsV2Label.publisher) &&
        Objects.equals(this.revisionCreateTime, googleAppsDriveLabelsV2Label.revisionCreateTime) &&
        Objects.equals(this.revisionCreator, googleAppsDriveLabelsV2Label.revisionCreator) &&
        Objects.equals(this.revisionId, googleAppsDriveLabelsV2Label.revisionId) &&
        Objects.equals(this.schemaCapabilities, googleAppsDriveLabelsV2Label.schemaCapabilities);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appliedCapabilities, appliedLabelPolicy, createTime, creator, customer, disableTime, disabler, displayHints, fields, id, labelType, learnMoreUri, lifecycle, lockStatus, name, properties, publishTime, publisher, revisionCreateTime, revisionCreator, revisionId, schemaCapabilities);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAppsDriveLabelsV2Label {\n");
    sb.append("    appliedCapabilities: ").append(toIndentedString(appliedCapabilities)).append("\n");
    sb.append("    appliedLabelPolicy: ").append(toIndentedString(appliedLabelPolicy)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    disableTime: ").append(toIndentedString(disableTime)).append("\n");
    sb.append("    disabler: ").append(toIndentedString(disabler)).append("\n");
    sb.append("    displayHints: ").append(toIndentedString(displayHints)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    labelType: ").append(toIndentedString(labelType)).append("\n");
    sb.append("    learnMoreUri: ").append(toIndentedString(learnMoreUri)).append("\n");
    sb.append("    lifecycle: ").append(toIndentedString(lifecycle)).append("\n");
    sb.append("    lockStatus: ").append(toIndentedString(lockStatus)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    publishTime: ").append(toIndentedString(publishTime)).append("\n");
    sb.append("    publisher: ").append(toIndentedString(publisher)).append("\n");
    sb.append("    revisionCreateTime: ").append(toIndentedString(revisionCreateTime)).append("\n");
    sb.append("    revisionCreator: ").append(toIndentedString(revisionCreator)).append("\n");
    sb.append("    revisionId: ").append(toIndentedString(revisionId)).append("\n");
    sb.append("    schemaCapabilities: ").append(toIndentedString(schemaCapabilities)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appliedCapabilities");
    openapiFields.add("appliedLabelPolicy");
    openapiFields.add("createTime");
    openapiFields.add("creator");
    openapiFields.add("customer");
    openapiFields.add("disableTime");
    openapiFields.add("disabler");
    openapiFields.add("displayHints");
    openapiFields.add("fields");
    openapiFields.add("id");
    openapiFields.add("labelType");
    openapiFields.add("learnMoreUri");
    openapiFields.add("lifecycle");
    openapiFields.add("lockStatus");
    openapiFields.add("name");
    openapiFields.add("properties");
    openapiFields.add("publishTime");
    openapiFields.add("publisher");
    openapiFields.add("revisionCreateTime");
    openapiFields.add("revisionCreator");
    openapiFields.add("revisionId");
    openapiFields.add("schemaCapabilities");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAppsDriveLabelsV2Label
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAppsDriveLabelsV2Label.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAppsDriveLabelsV2Label is not found in the empty JSON string", GoogleAppsDriveLabelsV2Label.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAppsDriveLabelsV2Label.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAppsDriveLabelsV2Label` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `appliedCapabilities`
      if (jsonObj.get("appliedCapabilities") != null && !jsonObj.get("appliedCapabilities").isJsonNull()) {
        GoogleAppsDriveLabelsV2LabelAppliedCapabilities.validateJsonElement(jsonObj.get("appliedCapabilities"));
      }
      // validate the optional field `appliedLabelPolicy`
      if (jsonObj.get("appliedLabelPolicy") != null && !jsonObj.get("appliedLabelPolicy").isJsonNull()) {
        GoogleAppsDriveLabelsV2LabelAppliedLabelPolicy.validateJsonElement(jsonObj.get("appliedLabelPolicy"));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      // validate the optional field `creator`
      if (jsonObj.get("creator") != null && !jsonObj.get("creator").isJsonNull()) {
        GoogleAppsDriveLabelsV2UserInfo.validateJsonElement(jsonObj.get("creator"));
      }
      if ((jsonObj.get("customer") != null && !jsonObj.get("customer").isJsonNull()) && !jsonObj.get("customer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customer").toString()));
      }
      if ((jsonObj.get("disableTime") != null && !jsonObj.get("disableTime").isJsonNull()) && !jsonObj.get("disableTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disableTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disableTime").toString()));
      }
      // validate the optional field `disabler`
      if (jsonObj.get("disabler") != null && !jsonObj.get("disabler").isJsonNull()) {
        GoogleAppsDriveLabelsV2UserInfo.validateJsonElement(jsonObj.get("disabler"));
      }
      // validate the optional field `displayHints`
      if (jsonObj.get("displayHints") != null && !jsonObj.get("displayHints").isJsonNull()) {
        GoogleAppsDriveLabelsV2LabelDisplayHints.validateJsonElement(jsonObj.get("displayHints"));
      }
      if (jsonObj.get("fields") != null && !jsonObj.get("fields").isJsonNull()) {
        JsonArray jsonArrayfields = jsonObj.getAsJsonArray("fields");
        if (jsonArrayfields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("fields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `fields` to be an array in the JSON string but got `%s`", jsonObj.get("fields").toString()));
          }

          // validate the optional field `fields` (array)
          for (int i = 0; i < jsonArrayfields.size(); i++) {
            GoogleAppsDriveLabelsV2Field.validateJsonElement(jsonArrayfields.get(i));
          };
        }
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("labelType") != null && !jsonObj.get("labelType").isJsonNull()) && !jsonObj.get("labelType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `labelType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("labelType").toString()));
      }
      // validate the optional field `labelType`
      if (jsonObj.get("labelType") != null && !jsonObj.get("labelType").isJsonNull()) {
        LabelTypeEnum.validateJsonElement(jsonObj.get("labelType"));
      }
      if ((jsonObj.get("learnMoreUri") != null && !jsonObj.get("learnMoreUri").isJsonNull()) && !jsonObj.get("learnMoreUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `learnMoreUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("learnMoreUri").toString()));
      }
      // validate the optional field `lifecycle`
      if (jsonObj.get("lifecycle") != null && !jsonObj.get("lifecycle").isJsonNull()) {
        GoogleAppsDriveLabelsV2Lifecycle.validateJsonElement(jsonObj.get("lifecycle"));
      }
      // validate the optional field `lockStatus`
      if (jsonObj.get("lockStatus") != null && !jsonObj.get("lockStatus").isJsonNull()) {
        GoogleAppsDriveLabelsV2LockStatus.validateJsonElement(jsonObj.get("lockStatus"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `properties`
      if (jsonObj.get("properties") != null && !jsonObj.get("properties").isJsonNull()) {
        GoogleAppsDriveLabelsV2LabelProperties.validateJsonElement(jsonObj.get("properties"));
      }
      if ((jsonObj.get("publishTime") != null && !jsonObj.get("publishTime").isJsonNull()) && !jsonObj.get("publishTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publishTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publishTime").toString()));
      }
      // validate the optional field `publisher`
      if (jsonObj.get("publisher") != null && !jsonObj.get("publisher").isJsonNull()) {
        GoogleAppsDriveLabelsV2UserInfo.validateJsonElement(jsonObj.get("publisher"));
      }
      if ((jsonObj.get("revisionCreateTime") != null && !jsonObj.get("revisionCreateTime").isJsonNull()) && !jsonObj.get("revisionCreateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `revisionCreateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("revisionCreateTime").toString()));
      }
      // validate the optional field `revisionCreator`
      if (jsonObj.get("revisionCreator") != null && !jsonObj.get("revisionCreator").isJsonNull()) {
        GoogleAppsDriveLabelsV2UserInfo.validateJsonElement(jsonObj.get("revisionCreator"));
      }
      if ((jsonObj.get("revisionId") != null && !jsonObj.get("revisionId").isJsonNull()) && !jsonObj.get("revisionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `revisionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("revisionId").toString()));
      }
      // validate the optional field `schemaCapabilities`
      if (jsonObj.get("schemaCapabilities") != null && !jsonObj.get("schemaCapabilities").isJsonNull()) {
        GoogleAppsDriveLabelsV2LabelSchemaCapabilities.validateJsonElement(jsonObj.get("schemaCapabilities"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAppsDriveLabelsV2Label.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAppsDriveLabelsV2Label' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAppsDriveLabelsV2Label> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAppsDriveLabelsV2Label.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAppsDriveLabelsV2Label>() {
           @Override
           public void write(JsonWriter out, GoogleAppsDriveLabelsV2Label value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAppsDriveLabelsV2Label read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAppsDriveLabelsV2Label given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAppsDriveLabelsV2Label
   * @throws IOException if the JSON string is invalid with respect to GoogleAppsDriveLabelsV2Label
   */
  public static GoogleAppsDriveLabelsV2Label fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAppsDriveLabelsV2Label.class);
  }

  /**
   * Convert an instance of GoogleAppsDriveLabelsV2Label to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

