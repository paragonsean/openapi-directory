/*
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleAppsDriveLabelsV2FieldLimits;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Label constraints governing the structure of a Label; such as, the maximum number of Fields allowed and maximum length of the label title.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:43:36.456078-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAppsDriveLabelsV2LabelLimits {
  public static final String SERIALIZED_NAME_FIELD_LIMITS = "fieldLimits";
  @SerializedName(SERIALIZED_NAME_FIELD_LIMITS)
  private GoogleAppsDriveLabelsV2FieldLimits fieldLimits;

  public static final String SERIALIZED_NAME_MAX_DELETED_FIELDS = "maxDeletedFields";
  @SerializedName(SERIALIZED_NAME_MAX_DELETED_FIELDS)
  private Integer maxDeletedFields;

  public static final String SERIALIZED_NAME_MAX_DESCRIPTION_LENGTH = "maxDescriptionLength";
  @SerializedName(SERIALIZED_NAME_MAX_DESCRIPTION_LENGTH)
  private Integer maxDescriptionLength;

  public static final String SERIALIZED_NAME_MAX_DRAFT_REVISIONS = "maxDraftRevisions";
  @SerializedName(SERIALIZED_NAME_MAX_DRAFT_REVISIONS)
  private Integer maxDraftRevisions;

  public static final String SERIALIZED_NAME_MAX_FIELDS = "maxFields";
  @SerializedName(SERIALIZED_NAME_MAX_FIELDS)
  private Integer maxFields;

  public static final String SERIALIZED_NAME_MAX_TITLE_LENGTH = "maxTitleLength";
  @SerializedName(SERIALIZED_NAME_MAX_TITLE_LENGTH)
  private Integer maxTitleLength;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public GoogleAppsDriveLabelsV2LabelLimits() {
  }

  public GoogleAppsDriveLabelsV2LabelLimits fieldLimits(GoogleAppsDriveLabelsV2FieldLimits fieldLimits) {
    this.fieldLimits = fieldLimits;
    return this;
  }

  /**
   * Get fieldLimits
   * @return fieldLimits
   */
  @javax.annotation.Nullable
  public GoogleAppsDriveLabelsV2FieldLimits getFieldLimits() {
    return fieldLimits;
  }

  public void setFieldLimits(GoogleAppsDriveLabelsV2FieldLimits fieldLimits) {
    this.fieldLimits = fieldLimits;
  }


  public GoogleAppsDriveLabelsV2LabelLimits maxDeletedFields(Integer maxDeletedFields) {
    this.maxDeletedFields = maxDeletedFields;
    return this;
  }

  /**
   * The maximum number of published Fields that can be deleted.
   * @return maxDeletedFields
   */
  @javax.annotation.Nullable
  public Integer getMaxDeletedFields() {
    return maxDeletedFields;
  }

  public void setMaxDeletedFields(Integer maxDeletedFields) {
    this.maxDeletedFields = maxDeletedFields;
  }


  public GoogleAppsDriveLabelsV2LabelLimits maxDescriptionLength(Integer maxDescriptionLength) {
    this.maxDescriptionLength = maxDescriptionLength;
    return this;
  }

  /**
   * The maximum number of characters allowed for the description.
   * @return maxDescriptionLength
   */
  @javax.annotation.Nullable
  public Integer getMaxDescriptionLength() {
    return maxDescriptionLength;
  }

  public void setMaxDescriptionLength(Integer maxDescriptionLength) {
    this.maxDescriptionLength = maxDescriptionLength;
  }


  public GoogleAppsDriveLabelsV2LabelLimits maxDraftRevisions(Integer maxDraftRevisions) {
    this.maxDraftRevisions = maxDraftRevisions;
    return this;
  }

  /**
   * The maximum number of draft revisions that will be kept before deleting old drafts.
   * @return maxDraftRevisions
   */
  @javax.annotation.Nullable
  public Integer getMaxDraftRevisions() {
    return maxDraftRevisions;
  }

  public void setMaxDraftRevisions(Integer maxDraftRevisions) {
    this.maxDraftRevisions = maxDraftRevisions;
  }


  public GoogleAppsDriveLabelsV2LabelLimits maxFields(Integer maxFields) {
    this.maxFields = maxFields;
    return this;
  }

  /**
   * The maximum number of Fields allowed within the label.
   * @return maxFields
   */
  @javax.annotation.Nullable
  public Integer getMaxFields() {
    return maxFields;
  }

  public void setMaxFields(Integer maxFields) {
    this.maxFields = maxFields;
  }


  public GoogleAppsDriveLabelsV2LabelLimits maxTitleLength(Integer maxTitleLength) {
    this.maxTitleLength = maxTitleLength;
    return this;
  }

  /**
   * The maximum number of characters allowed for the title.
   * @return maxTitleLength
   */
  @javax.annotation.Nullable
  public Integer getMaxTitleLength() {
    return maxTitleLength;
  }

  public void setMaxTitleLength(Integer maxTitleLength) {
    this.maxTitleLength = maxTitleLength;
  }


  public GoogleAppsDriveLabelsV2LabelLimits name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Resource name.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAppsDriveLabelsV2LabelLimits googleAppsDriveLabelsV2LabelLimits = (GoogleAppsDriveLabelsV2LabelLimits) o;
    return Objects.equals(this.fieldLimits, googleAppsDriveLabelsV2LabelLimits.fieldLimits) &&
        Objects.equals(this.maxDeletedFields, googleAppsDriveLabelsV2LabelLimits.maxDeletedFields) &&
        Objects.equals(this.maxDescriptionLength, googleAppsDriveLabelsV2LabelLimits.maxDescriptionLength) &&
        Objects.equals(this.maxDraftRevisions, googleAppsDriveLabelsV2LabelLimits.maxDraftRevisions) &&
        Objects.equals(this.maxFields, googleAppsDriveLabelsV2LabelLimits.maxFields) &&
        Objects.equals(this.maxTitleLength, googleAppsDriveLabelsV2LabelLimits.maxTitleLength) &&
        Objects.equals(this.name, googleAppsDriveLabelsV2LabelLimits.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fieldLimits, maxDeletedFields, maxDescriptionLength, maxDraftRevisions, maxFields, maxTitleLength, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAppsDriveLabelsV2LabelLimits {\n");
    sb.append("    fieldLimits: ").append(toIndentedString(fieldLimits)).append("\n");
    sb.append("    maxDeletedFields: ").append(toIndentedString(maxDeletedFields)).append("\n");
    sb.append("    maxDescriptionLength: ").append(toIndentedString(maxDescriptionLength)).append("\n");
    sb.append("    maxDraftRevisions: ").append(toIndentedString(maxDraftRevisions)).append("\n");
    sb.append("    maxFields: ").append(toIndentedString(maxFields)).append("\n");
    sb.append("    maxTitleLength: ").append(toIndentedString(maxTitleLength)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("fieldLimits");
    openapiFields.add("maxDeletedFields");
    openapiFields.add("maxDescriptionLength");
    openapiFields.add("maxDraftRevisions");
    openapiFields.add("maxFields");
    openapiFields.add("maxTitleLength");
    openapiFields.add("name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAppsDriveLabelsV2LabelLimits
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAppsDriveLabelsV2LabelLimits.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAppsDriveLabelsV2LabelLimits is not found in the empty JSON string", GoogleAppsDriveLabelsV2LabelLimits.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAppsDriveLabelsV2LabelLimits.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAppsDriveLabelsV2LabelLimits` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `fieldLimits`
      if (jsonObj.get("fieldLimits") != null && !jsonObj.get("fieldLimits").isJsonNull()) {
        GoogleAppsDriveLabelsV2FieldLimits.validateJsonElement(jsonObj.get("fieldLimits"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAppsDriveLabelsV2LabelLimits.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAppsDriveLabelsV2LabelLimits' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAppsDriveLabelsV2LabelLimits> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAppsDriveLabelsV2LabelLimits.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAppsDriveLabelsV2LabelLimits>() {
           @Override
           public void write(JsonWriter out, GoogleAppsDriveLabelsV2LabelLimits value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAppsDriveLabelsV2LabelLimits read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAppsDriveLabelsV2LabelLimits given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAppsDriveLabelsV2LabelLimits
   * @throws IOException if the JSON string is invalid with respect to GoogleAppsDriveLabelsV2LabelLimits
   */
  public static GoogleAppsDriveLabelsV2LabelLimits fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAppsDriveLabelsV2LabelLimits.class);
  }

  /**
   * Convert an instance of GoogleAppsDriveLabelsV2LabelLimits to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

