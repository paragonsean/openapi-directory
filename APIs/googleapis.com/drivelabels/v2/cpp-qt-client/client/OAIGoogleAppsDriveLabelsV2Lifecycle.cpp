/**
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsDriveLabelsV2Lifecycle.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsDriveLabelsV2Lifecycle::OAIGoogleAppsDriveLabelsV2Lifecycle(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsDriveLabelsV2Lifecycle::OAIGoogleAppsDriveLabelsV2Lifecycle() {
    this->initializeModel();
}

OAIGoogleAppsDriveLabelsV2Lifecycle::~OAIGoogleAppsDriveLabelsV2Lifecycle() {}

void OAIGoogleAppsDriveLabelsV2Lifecycle::initializeModel() {

    m_disabled_policy_isSet = false;
    m_disabled_policy_isValid = false;

    m_has_unpublished_changes_isSet = false;
    m_has_unpublished_changes_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIGoogleAppsDriveLabelsV2Lifecycle::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsDriveLabelsV2Lifecycle::fromJsonObject(QJsonObject json) {

    m_disabled_policy_isValid = ::OpenAPI::fromJsonValue(m_disabled_policy, json[QString("disabledPolicy")]);
    m_disabled_policy_isSet = !json[QString("disabledPolicy")].isNull() && m_disabled_policy_isValid;

    m_has_unpublished_changes_isValid = ::OpenAPI::fromJsonValue(m_has_unpublished_changes, json[QString("hasUnpublishedChanges")]);
    m_has_unpublished_changes_isSet = !json[QString("hasUnpublishedChanges")].isNull() && m_has_unpublished_changes_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIGoogleAppsDriveLabelsV2Lifecycle::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsDriveLabelsV2Lifecycle::asJsonObject() const {
    QJsonObject obj;
    if (m_disabled_policy.isSet()) {
        obj.insert(QString("disabledPolicy"), ::OpenAPI::toJsonValue(m_disabled_policy));
    }
    if (m_has_unpublished_changes_isSet) {
        obj.insert(QString("hasUnpublishedChanges"), ::OpenAPI::toJsonValue(m_has_unpublished_changes));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

OAIGoogleAppsDriveLabelsV2LifecycleDisabledPolicy OAIGoogleAppsDriveLabelsV2Lifecycle::getDisabledPolicy() const {
    return m_disabled_policy;
}
void OAIGoogleAppsDriveLabelsV2Lifecycle::setDisabledPolicy(const OAIGoogleAppsDriveLabelsV2LifecycleDisabledPolicy &disabled_policy) {
    m_disabled_policy = disabled_policy;
    m_disabled_policy_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2Lifecycle::is_disabled_policy_Set() const{
    return m_disabled_policy_isSet;
}

bool OAIGoogleAppsDriveLabelsV2Lifecycle::is_disabled_policy_Valid() const{
    return m_disabled_policy_isValid;
}

bool OAIGoogleAppsDriveLabelsV2Lifecycle::isHasUnpublishedChanges() const {
    return m_has_unpublished_changes;
}
void OAIGoogleAppsDriveLabelsV2Lifecycle::setHasUnpublishedChanges(const bool &has_unpublished_changes) {
    m_has_unpublished_changes = has_unpublished_changes;
    m_has_unpublished_changes_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2Lifecycle::is_has_unpublished_changes_Set() const{
    return m_has_unpublished_changes_isSet;
}

bool OAIGoogleAppsDriveLabelsV2Lifecycle::is_has_unpublished_changes_Valid() const{
    return m_has_unpublished_changes_isValid;
}

QString OAIGoogleAppsDriveLabelsV2Lifecycle::getState() const {
    return m_state;
}
void OAIGoogleAppsDriveLabelsV2Lifecycle::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2Lifecycle::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleAppsDriveLabelsV2Lifecycle::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIGoogleAppsDriveLabelsV2Lifecycle::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disabled_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_has_unpublished_changes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsDriveLabelsV2Lifecycle::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
