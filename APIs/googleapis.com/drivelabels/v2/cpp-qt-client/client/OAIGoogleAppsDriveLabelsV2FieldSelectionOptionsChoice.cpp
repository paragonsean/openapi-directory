/**
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice() {
    this->initializeModel();
}

OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::~OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice() {}

void OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::initializeModel() {

    m_applied_capabilities_isSet = false;
    m_applied_capabilities_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_creator_isSet = false;
    m_creator_isValid = false;

    m_disable_time_isSet = false;
    m_disable_time_isValid = false;

    m_disabler_isSet = false;
    m_disabler_isValid = false;

    m_display_hints_isSet = false;
    m_display_hints_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_lifecycle_isSet = false;
    m_lifecycle_isValid = false;

    m_lock_status_isSet = false;
    m_lock_status_isValid = false;

    m_properties_isSet = false;
    m_properties_isValid = false;

    m_publish_time_isSet = false;
    m_publish_time_isValid = false;

    m_publisher_isSet = false;
    m_publisher_isValid = false;

    m_schema_capabilities_isSet = false;
    m_schema_capabilities_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;

    m_updater_isSet = false;
    m_updater_isValid = false;
}

void OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::fromJsonObject(QJsonObject json) {

    m_applied_capabilities_isValid = ::OpenAPI::fromJsonValue(m_applied_capabilities, json[QString("appliedCapabilities")]);
    m_applied_capabilities_isSet = !json[QString("appliedCapabilities")].isNull() && m_applied_capabilities_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_creator_isValid = ::OpenAPI::fromJsonValue(m_creator, json[QString("creator")]);
    m_creator_isSet = !json[QString("creator")].isNull() && m_creator_isValid;

    m_disable_time_isValid = ::OpenAPI::fromJsonValue(m_disable_time, json[QString("disableTime")]);
    m_disable_time_isSet = !json[QString("disableTime")].isNull() && m_disable_time_isValid;

    m_disabler_isValid = ::OpenAPI::fromJsonValue(m_disabler, json[QString("disabler")]);
    m_disabler_isSet = !json[QString("disabler")].isNull() && m_disabler_isValid;

    m_display_hints_isValid = ::OpenAPI::fromJsonValue(m_display_hints, json[QString("displayHints")]);
    m_display_hints_isSet = !json[QString("displayHints")].isNull() && m_display_hints_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_lifecycle_isValid = ::OpenAPI::fromJsonValue(m_lifecycle, json[QString("lifecycle")]);
    m_lifecycle_isSet = !json[QString("lifecycle")].isNull() && m_lifecycle_isValid;

    m_lock_status_isValid = ::OpenAPI::fromJsonValue(m_lock_status, json[QString("lockStatus")]);
    m_lock_status_isSet = !json[QString("lockStatus")].isNull() && m_lock_status_isValid;

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;

    m_publish_time_isValid = ::OpenAPI::fromJsonValue(m_publish_time, json[QString("publishTime")]);
    m_publish_time_isSet = !json[QString("publishTime")].isNull() && m_publish_time_isValid;

    m_publisher_isValid = ::OpenAPI::fromJsonValue(m_publisher, json[QString("publisher")]);
    m_publisher_isSet = !json[QString("publisher")].isNull() && m_publisher_isValid;

    m_schema_capabilities_isValid = ::OpenAPI::fromJsonValue(m_schema_capabilities, json[QString("schemaCapabilities")]);
    m_schema_capabilities_isSet = !json[QString("schemaCapabilities")].isNull() && m_schema_capabilities_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;

    m_updater_isValid = ::OpenAPI::fromJsonValue(m_updater, json[QString("updater")]);
    m_updater_isSet = !json[QString("updater")].isNull() && m_updater_isValid;
}

QString OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::asJsonObject() const {
    QJsonObject obj;
    if (m_applied_capabilities.isSet()) {
        obj.insert(QString("appliedCapabilities"), ::OpenAPI::toJsonValue(m_applied_capabilities));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_creator.isSet()) {
        obj.insert(QString("creator"), ::OpenAPI::toJsonValue(m_creator));
    }
    if (m_disable_time_isSet) {
        obj.insert(QString("disableTime"), ::OpenAPI::toJsonValue(m_disable_time));
    }
    if (m_disabler.isSet()) {
        obj.insert(QString("disabler"), ::OpenAPI::toJsonValue(m_disabler));
    }
    if (m_display_hints.isSet()) {
        obj.insert(QString("displayHints"), ::OpenAPI::toJsonValue(m_display_hints));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_lifecycle.isSet()) {
        obj.insert(QString("lifecycle"), ::OpenAPI::toJsonValue(m_lifecycle));
    }
    if (m_lock_status.isSet()) {
        obj.insert(QString("lockStatus"), ::OpenAPI::toJsonValue(m_lock_status));
    }
    if (m_properties.isSet()) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    if (m_publish_time_isSet) {
        obj.insert(QString("publishTime"), ::OpenAPI::toJsonValue(m_publish_time));
    }
    if (m_publisher.isSet()) {
        obj.insert(QString("publisher"), ::OpenAPI::toJsonValue(m_publisher));
    }
    if (m_schema_capabilities.isSet()) {
        obj.insert(QString("schemaCapabilities"), ::OpenAPI::toJsonValue(m_schema_capabilities));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    if (m_updater.isSet()) {
        obj.insert(QString("updater"), ::OpenAPI::toJsonValue(m_updater));
    }
    return obj;
}

OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceAppliedCapabilities OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::getAppliedCapabilities() const {
    return m_applied_capabilities;
}
void OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::setAppliedCapabilities(const OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceAppliedCapabilities &applied_capabilities) {
    m_applied_capabilities = applied_capabilities;
    m_applied_capabilities_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_applied_capabilities_Set() const{
    return m_applied_capabilities_isSet;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_applied_capabilities_Valid() const{
    return m_applied_capabilities_isValid;
}

QString OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_create_time_Valid() const{
    return m_create_time_isValid;
}

OAIGoogleAppsDriveLabelsV2UserInfo OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::getCreator() const {
    return m_creator;
}
void OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::setCreator(const OAIGoogleAppsDriveLabelsV2UserInfo &creator) {
    m_creator = creator;
    m_creator_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_creator_Set() const{
    return m_creator_isSet;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_creator_Valid() const{
    return m_creator_isValid;
}

QString OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::getDisableTime() const {
    return m_disable_time;
}
void OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::setDisableTime(const QString &disable_time) {
    m_disable_time = disable_time;
    m_disable_time_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_disable_time_Set() const{
    return m_disable_time_isSet;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_disable_time_Valid() const{
    return m_disable_time_isValid;
}

OAIGoogleAppsDriveLabelsV2UserInfo OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::getDisabler() const {
    return m_disabler;
}
void OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::setDisabler(const OAIGoogleAppsDriveLabelsV2UserInfo &disabler) {
    m_disabler = disabler;
    m_disabler_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_disabler_Set() const{
    return m_disabler_isSet;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_disabler_Valid() const{
    return m_disabler_isValid;
}

OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::getDisplayHints() const {
    return m_display_hints;
}
void OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::setDisplayHints(const OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints &display_hints) {
    m_display_hints = display_hints;
    m_display_hints_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_display_hints_Set() const{
    return m_display_hints_isSet;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_display_hints_Valid() const{
    return m_display_hints_isValid;
}

QString OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::getId() const {
    return m_id;
}
void OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_id_Valid() const{
    return m_id_isValid;
}

OAIGoogleAppsDriveLabelsV2Lifecycle OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::getLifecycle() const {
    return m_lifecycle;
}
void OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::setLifecycle(const OAIGoogleAppsDriveLabelsV2Lifecycle &lifecycle) {
    m_lifecycle = lifecycle;
    m_lifecycle_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_lifecycle_Set() const{
    return m_lifecycle_isSet;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_lifecycle_Valid() const{
    return m_lifecycle_isValid;
}

OAIGoogleAppsDriveLabelsV2LockStatus OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::getLockStatus() const {
    return m_lock_status;
}
void OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::setLockStatus(const OAIGoogleAppsDriveLabelsV2LockStatus &lock_status) {
    m_lock_status = lock_status;
    m_lock_status_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_lock_status_Set() const{
    return m_lock_status_isSet;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_lock_status_Valid() const{
    return m_lock_status_isValid;
}

OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::getProperties() const {
    return m_properties;
}
void OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::setProperties(const OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_properties_Valid() const{
    return m_properties_isValid;
}

QString OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::getPublishTime() const {
    return m_publish_time;
}
void OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::setPublishTime(const QString &publish_time) {
    m_publish_time = publish_time;
    m_publish_time_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_publish_time_Set() const{
    return m_publish_time_isSet;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_publish_time_Valid() const{
    return m_publish_time_isValid;
}

OAIGoogleAppsDriveLabelsV2UserInfo OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::getPublisher() const {
    return m_publisher;
}
void OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::setPublisher(const OAIGoogleAppsDriveLabelsV2UserInfo &publisher) {
    m_publisher = publisher;
    m_publisher_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_publisher_Set() const{
    return m_publisher_isSet;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_publisher_Valid() const{
    return m_publisher_isValid;
}

OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceSchemaCapabilities OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::getSchemaCapabilities() const {
    return m_schema_capabilities;
}
void OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::setSchemaCapabilities(const OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceSchemaCapabilities &schema_capabilities) {
    m_schema_capabilities = schema_capabilities;
    m_schema_capabilities_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_schema_capabilities_Set() const{
    return m_schema_capabilities_isSet;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_schema_capabilities_Valid() const{
    return m_schema_capabilities_isValid;
}

QString OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_update_time_Valid() const{
    return m_update_time_isValid;
}

OAIGoogleAppsDriveLabelsV2UserInfo OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::getUpdater() const {
    return m_updater;
}
void OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::setUpdater(const OAIGoogleAppsDriveLabelsV2UserInfo &updater) {
    m_updater = updater;
    m_updater_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_updater_Set() const{
    return m_updater_isSet;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::is_updater_Valid() const{
    return m_updater_isValid;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_applied_capabilities.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creator.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_disable_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_disabler.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_hints.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lifecycle.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_lock_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_publish_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publisher.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_schema_capabilities.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updater.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
