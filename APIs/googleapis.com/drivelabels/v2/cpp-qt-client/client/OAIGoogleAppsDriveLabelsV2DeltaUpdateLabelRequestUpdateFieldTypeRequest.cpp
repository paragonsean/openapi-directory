/**
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest() {
    this->initializeModel();
}

OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::~OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest() {}

void OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::initializeModel() {

    m_date_options_isSet = false;
    m_date_options_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_integer_options_isSet = false;
    m_integer_options_isValid = false;

    m_selection_options_isSet = false;
    m_selection_options_isValid = false;

    m_text_options_isSet = false;
    m_text_options_isValid = false;

    m_update_mask_isSet = false;
    m_update_mask_isValid = false;

    m_user_options_isSet = false;
    m_user_options_isValid = false;
}

void OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::fromJsonObject(QJsonObject json) {

    m_date_options_isValid = ::OpenAPI::fromJsonValue(m_date_options, json[QString("dateOptions")]);
    m_date_options_isSet = !json[QString("dateOptions")].isNull() && m_date_options_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_integer_options_isValid = ::OpenAPI::fromJsonValue(m_integer_options, json[QString("integerOptions")]);
    m_integer_options_isSet = !json[QString("integerOptions")].isNull() && m_integer_options_isValid;

    m_selection_options_isValid = ::OpenAPI::fromJsonValue(m_selection_options, json[QString("selectionOptions")]);
    m_selection_options_isSet = !json[QString("selectionOptions")].isNull() && m_selection_options_isValid;

    m_text_options_isValid = ::OpenAPI::fromJsonValue(m_text_options, json[QString("textOptions")]);
    m_text_options_isSet = !json[QString("textOptions")].isNull() && m_text_options_isValid;

    m_update_mask_isValid = ::OpenAPI::fromJsonValue(m_update_mask, json[QString("updateMask")]);
    m_update_mask_isSet = !json[QString("updateMask")].isNull() && m_update_mask_isValid;

    m_user_options_isValid = ::OpenAPI::fromJsonValue(m_user_options, json[QString("userOptions")]);
    m_user_options_isSet = !json[QString("userOptions")].isNull() && m_user_options_isValid;
}

QString OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_date_options.isSet()) {
        obj.insert(QString("dateOptions"), ::OpenAPI::toJsonValue(m_date_options));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_integer_options.isSet()) {
        obj.insert(QString("integerOptions"), ::OpenAPI::toJsonValue(m_integer_options));
    }
    if (m_selection_options.isSet()) {
        obj.insert(QString("selectionOptions"), ::OpenAPI::toJsonValue(m_selection_options));
    }
    if (m_text_options.isSet()) {
        obj.insert(QString("textOptions"), ::OpenAPI::toJsonValue(m_text_options));
    }
    if (m_update_mask_isSet) {
        obj.insert(QString("updateMask"), ::OpenAPI::toJsonValue(m_update_mask));
    }
    if (m_user_options.isSet()) {
        obj.insert(QString("userOptions"), ::OpenAPI::toJsonValue(m_user_options));
    }
    return obj;
}

OAIGoogleAppsDriveLabelsV2FieldDateOptions OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::getDateOptions() const {
    return m_date_options;
}
void OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::setDateOptions(const OAIGoogleAppsDriveLabelsV2FieldDateOptions &date_options) {
    m_date_options = date_options;
    m_date_options_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::is_date_options_Set() const{
    return m_date_options_isSet;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::is_date_options_Valid() const{
    return m_date_options_isValid;
}

QString OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::getId() const {
    return m_id;
}
void OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::is_id_Valid() const{
    return m_id_isValid;
}

OAIGoogleAppsDriveLabelsV2FieldIntegerOptions OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::getIntegerOptions() const {
    return m_integer_options;
}
void OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::setIntegerOptions(const OAIGoogleAppsDriveLabelsV2FieldIntegerOptions &integer_options) {
    m_integer_options = integer_options;
    m_integer_options_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::is_integer_options_Set() const{
    return m_integer_options_isSet;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::is_integer_options_Valid() const{
    return m_integer_options_isValid;
}

OAIGoogleAppsDriveLabelsV2FieldSelectionOptions OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::getSelectionOptions() const {
    return m_selection_options;
}
void OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::setSelectionOptions(const OAIGoogleAppsDriveLabelsV2FieldSelectionOptions &selection_options) {
    m_selection_options = selection_options;
    m_selection_options_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::is_selection_options_Set() const{
    return m_selection_options_isSet;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::is_selection_options_Valid() const{
    return m_selection_options_isValid;
}

OAIGoogleAppsDriveLabelsV2FieldTextOptions OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::getTextOptions() const {
    return m_text_options;
}
void OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::setTextOptions(const OAIGoogleAppsDriveLabelsV2FieldTextOptions &text_options) {
    m_text_options = text_options;
    m_text_options_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::is_text_options_Set() const{
    return m_text_options_isSet;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::is_text_options_Valid() const{
    return m_text_options_isValid;
}

QString OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::getUpdateMask() const {
    return m_update_mask;
}
void OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::setUpdateMask(const QString &update_mask) {
    m_update_mask = update_mask;
    m_update_mask_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::is_update_mask_Set() const{
    return m_update_mask_isSet;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::is_update_mask_Valid() const{
    return m_update_mask_isValid;
}

OAIGoogleAppsDriveLabelsV2FieldUserOptions OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::getUserOptions() const {
    return m_user_options;
}
void OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::setUserOptions(const OAIGoogleAppsDriveLabelsV2FieldUserOptions &user_options) {
    m_user_options = user_options;
    m_user_options_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::is_user_options_Set() const{
    return m_user_options_isSet;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::is_user_options_Valid() const{
    return m_user_options_isValid;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_date_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_integer_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_selection_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_mask_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_options.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
