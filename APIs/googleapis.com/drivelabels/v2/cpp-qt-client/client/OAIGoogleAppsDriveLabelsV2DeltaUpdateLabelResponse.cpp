/**
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelResponse::OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelResponse::OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelResponse() {
    this->initializeModel();
}

OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelResponse::~OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelResponse() {}

void OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelResponse::initializeModel() {

    m_responses_isSet = false;
    m_responses_isValid = false;

    m_updated_label_isSet = false;
    m_updated_label_isValid = false;
}

void OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelResponse::fromJsonObject(QJsonObject json) {

    m_responses_isValid = ::OpenAPI::fromJsonValue(m_responses, json[QString("responses")]);
    m_responses_isSet = !json[QString("responses")].isNull() && m_responses_isValid;

    m_updated_label_isValid = ::OpenAPI::fromJsonValue(m_updated_label, json[QString("updatedLabel")]);
    m_updated_label_isSet = !json[QString("updatedLabel")].isNull() && m_updated_label_isValid;
}

QString OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_responses.size() > 0) {
        obj.insert(QString("responses"), ::OpenAPI::toJsonValue(m_responses));
    }
    if (m_updated_label.isSet()) {
        obj.insert(QString("updatedLabel"), ::OpenAPI::toJsonValue(m_updated_label));
    }
    return obj;
}

QList<OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelResponseResponse> OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelResponse::getResponses() const {
    return m_responses;
}
void OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelResponse::setResponses(const QList<OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelResponseResponse> &responses) {
    m_responses = responses;
    m_responses_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelResponse::is_responses_Set() const{
    return m_responses_isSet;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelResponse::is_responses_Valid() const{
    return m_responses_isValid;
}

OAIGoogleAppsDriveLabelsV2Label OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelResponse::getUpdatedLabel() const {
    return m_updated_label;
}
void OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelResponse::setUpdatedLabel(const OAIGoogleAppsDriveLabelsV2Label &updated_label) {
    m_updated_label = updated_label;
    m_updated_label_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelResponse::is_updated_label_Set() const{
    return m_updated_label_isSet;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelResponse::is_updated_label_Valid() const{
    return m_updated_label_isValid;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_responses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_label.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
