/**
 * Drive Labels API
 * An API for managing Drive Labels
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateSelectionChoiceRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateSelectionChoiceRequest::OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateSelectionChoiceRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateSelectionChoiceRequest::OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateSelectionChoiceRequest() {
    this->initializeModel();
}

OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateSelectionChoiceRequest::~OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateSelectionChoiceRequest() {}

void OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateSelectionChoiceRequest::initializeModel() {

    m_choice_isSet = false;
    m_choice_isValid = false;

    m_field_id_isSet = false;
    m_field_id_isValid = false;
}

void OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateSelectionChoiceRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateSelectionChoiceRequest::fromJsonObject(QJsonObject json) {

    m_choice_isValid = ::OpenAPI::fromJsonValue(m_choice, json[QString("choice")]);
    m_choice_isSet = !json[QString("choice")].isNull() && m_choice_isValid;

    m_field_id_isValid = ::OpenAPI::fromJsonValue(m_field_id, json[QString("fieldId")]);
    m_field_id_isSet = !json[QString("fieldId")].isNull() && m_field_id_isValid;
}

QString OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateSelectionChoiceRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateSelectionChoiceRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_choice.isSet()) {
        obj.insert(QString("choice"), ::OpenAPI::toJsonValue(m_choice));
    }
    if (m_field_id_isSet) {
        obj.insert(QString("fieldId"), ::OpenAPI::toJsonValue(m_field_id));
    }
    return obj;
}

OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateSelectionChoiceRequest::getChoice() const {
    return m_choice;
}
void OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateSelectionChoiceRequest::setChoice(const OAIGoogleAppsDriveLabelsV2FieldSelectionOptionsChoice &choice) {
    m_choice = choice;
    m_choice_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateSelectionChoiceRequest::is_choice_Set() const{
    return m_choice_isSet;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateSelectionChoiceRequest::is_choice_Valid() const{
    return m_choice_isValid;
}

QString OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateSelectionChoiceRequest::getFieldId() const {
    return m_field_id;
}
void OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateSelectionChoiceRequest::setFieldId(const QString &field_id) {
    m_field_id = field_id;
    m_field_id_isSet = true;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateSelectionChoiceRequest::is_field_id_Set() const{
    return m_field_id_isSet;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateSelectionChoiceRequest::is_field_id_Valid() const{
    return m_field_id_isValid;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateSelectionChoiceRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_choice.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateSelectionChoiceRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
