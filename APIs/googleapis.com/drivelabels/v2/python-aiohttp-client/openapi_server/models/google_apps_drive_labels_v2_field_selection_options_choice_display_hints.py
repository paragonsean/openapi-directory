# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_apps_drive_labels_v2_badge_colors import GoogleAppsDriveLabelsV2BadgeColors
from openapi_server import util


class GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, badge_colors: GoogleAppsDriveLabelsV2BadgeColors=None, badge_priority: str=None, dark_badge_colors: GoogleAppsDriveLabelsV2BadgeColors=None, disabled: bool=None, hidden_in_search: bool=None, shown_in_apply: bool=None):
        """GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints - a model defined in OpenAPI

        :param badge_colors: The badge_colors of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.
        :param badge_priority: The badge_priority of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.
        :param dark_badge_colors: The dark_badge_colors of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.
        :param disabled: The disabled of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.
        :param hidden_in_search: The hidden_in_search of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.
        :param shown_in_apply: The shown_in_apply of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.
        """
        self.openapi_types = {
            'badge_colors': GoogleAppsDriveLabelsV2BadgeColors,
            'badge_priority': str,
            'dark_badge_colors': GoogleAppsDriveLabelsV2BadgeColors,
            'disabled': bool,
            'hidden_in_search': bool,
            'shown_in_apply': bool
        }

        self.attribute_map = {
            'badge_colors': 'badgeColors',
            'badge_priority': 'badgePriority',
            'dark_badge_colors': 'darkBadgeColors',
            'disabled': 'disabled',
            'hidden_in_search': 'hiddenInSearch',
            'shown_in_apply': 'shownInApply'
        }

        self._badge_colors = badge_colors
        self._badge_priority = badge_priority
        self._dark_badge_colors = dark_badge_colors
        self._disabled = disabled
        self._hidden_in_search = hidden_in_search
        self._shown_in_apply = shown_in_apply

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def badge_colors(self):
        """Gets the badge_colors of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.


        :return: The badge_colors of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.
        :rtype: GoogleAppsDriveLabelsV2BadgeColors
        """
        return self._badge_colors

    @badge_colors.setter
    def badge_colors(self, badge_colors):
        """Sets the badge_colors of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.


        :param badge_colors: The badge_colors of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.
        :type badge_colors: GoogleAppsDriveLabelsV2BadgeColors
        """

        self._badge_colors = badge_colors

    @property
    def badge_priority(self):
        """Gets the badge_priority of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.

        The priority of this badge. Used to compare and sort between multiple badges. A lower number means the badge should be shown first. When a badging configuration is not present, this will be 0. Otherwise, this will be set to `BadgeConfig.priority_override` or the default heuristic which prefers creation date of the label, and field and option priority.

        :return: The badge_priority of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.
        :rtype: str
        """
        return self._badge_priority

    @badge_priority.setter
    def badge_priority(self, badge_priority):
        """Sets the badge_priority of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.

        The priority of this badge. Used to compare and sort between multiple badges. A lower number means the badge should be shown first. When a badging configuration is not present, this will be 0. Otherwise, this will be set to `BadgeConfig.priority_override` or the default heuristic which prefers creation date of the label, and field and option priority.

        :param badge_priority: The badge_priority of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.
        :type badge_priority: str
        """

        self._badge_priority = badge_priority

    @property
    def dark_badge_colors(self):
        """Gets the dark_badge_colors of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.


        :return: The dark_badge_colors of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.
        :rtype: GoogleAppsDriveLabelsV2BadgeColors
        """
        return self._dark_badge_colors

    @dark_badge_colors.setter
    def dark_badge_colors(self, dark_badge_colors):
        """Sets the dark_badge_colors of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.


        :param dark_badge_colors: The dark_badge_colors of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.
        :type dark_badge_colors: GoogleAppsDriveLabelsV2BadgeColors
        """

        self._dark_badge_colors = dark_badge_colors

    @property
    def disabled(self):
        """Gets the disabled of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.

        Whether the option should be shown in the UI as disabled.

        :return: The disabled of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.

        Whether the option should be shown in the UI as disabled.

        :param disabled: The disabled of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.
        :type disabled: bool
        """

        self._disabled = disabled

    @property
    def hidden_in_search(self):
        """Gets the hidden_in_search of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.

        This option should be hidden in the search menu when searching for Drive items.

        :return: The hidden_in_search of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.
        :rtype: bool
        """
        return self._hidden_in_search

    @hidden_in_search.setter
    def hidden_in_search(self, hidden_in_search):
        """Sets the hidden_in_search of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.

        This option should be hidden in the search menu when searching for Drive items.

        :param hidden_in_search: The hidden_in_search of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.
        :type hidden_in_search: bool
        """

        self._hidden_in_search = hidden_in_search

    @property
    def shown_in_apply(self):
        """Gets the shown_in_apply of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.

        This option should be shown in the apply menu when applying values to a Drive item.

        :return: The shown_in_apply of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.
        :rtype: bool
        """
        return self._shown_in_apply

    @shown_in_apply.setter
    def shown_in_apply(self, shown_in_apply):
        """Sets the shown_in_apply of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.

        This option should be shown in the apply menu when applying values to a Drive item.

        :param shown_in_apply: The shown_in_apply of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints.
        :type shown_in_apply: bool
        """

        self._shown_in_apply = shown_in_apply
