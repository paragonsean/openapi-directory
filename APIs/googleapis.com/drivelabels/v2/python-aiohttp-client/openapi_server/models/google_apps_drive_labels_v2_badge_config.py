# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_type_color import GoogleTypeColor
from openapi_server import util


class GoogleAppsDriveLabelsV2BadgeConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, color: GoogleTypeColor=None, priority_override: str=None):
        """GoogleAppsDriveLabelsV2BadgeConfig - a model defined in OpenAPI

        :param color: The color of this GoogleAppsDriveLabelsV2BadgeConfig.
        :param priority_override: The priority_override of this GoogleAppsDriveLabelsV2BadgeConfig.
        """
        self.openapi_types = {
            'color': GoogleTypeColor,
            'priority_override': str
        }

        self.attribute_map = {
            'color': 'color',
            'priority_override': 'priorityOverride'
        }

        self._color = color
        self._priority_override = priority_override

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAppsDriveLabelsV2BadgeConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAppsDriveLabelsV2BadgeConfig of this GoogleAppsDriveLabelsV2BadgeConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def color(self):
        """Gets the color of this GoogleAppsDriveLabelsV2BadgeConfig.


        :return: The color of this GoogleAppsDriveLabelsV2BadgeConfig.
        :rtype: GoogleTypeColor
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this GoogleAppsDriveLabelsV2BadgeConfig.


        :param color: The color of this GoogleAppsDriveLabelsV2BadgeConfig.
        :type color: GoogleTypeColor
        """

        self._color = color

    @property
    def priority_override(self):
        """Gets the priority_override of this GoogleAppsDriveLabelsV2BadgeConfig.

        Override the default global priority of this badge. When set to 0, the default priority heuristic is used.

        :return: The priority_override of this GoogleAppsDriveLabelsV2BadgeConfig.
        :rtype: str
        """
        return self._priority_override

    @priority_override.setter
    def priority_override(self, priority_override):
        """Sets the priority_override of this GoogleAppsDriveLabelsV2BadgeConfig.

        Override the default global priority of this badge. When set to 0, the default priority heuristic is used.

        :param priority_override: The priority_override of this GoogleAppsDriveLabelsV2BadgeConfig.
        :type priority_override: str
        """

        self._priority_override = priority_override
