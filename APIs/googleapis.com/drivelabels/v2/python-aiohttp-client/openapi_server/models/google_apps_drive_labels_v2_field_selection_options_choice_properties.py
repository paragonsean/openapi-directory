# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_apps_drive_labels_v2_badge_config import GoogleAppsDriveLabelsV2BadgeConfig
from openapi_server import util


class GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, badge_config: GoogleAppsDriveLabelsV2BadgeConfig=None, description: str=None, display_name: str=None, insert_before_choice: str=None):
        """GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties - a model defined in OpenAPI

        :param badge_config: The badge_config of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties.
        :param description: The description of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties.
        :param display_name: The display_name of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties.
        :param insert_before_choice: The insert_before_choice of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties.
        """
        self.openapi_types = {
            'badge_config': GoogleAppsDriveLabelsV2BadgeConfig,
            'description': str,
            'display_name': str,
            'insert_before_choice': str
        }

        self.attribute_map = {
            'badge_config': 'badgeConfig',
            'description': 'description',
            'display_name': 'displayName',
            'insert_before_choice': 'insertBeforeChoice'
        }

        self._badge_config = badge_config
        self._description = description
        self._display_name = display_name
        self._insert_before_choice = insert_before_choice

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def badge_config(self):
        """Gets the badge_config of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties.


        :return: The badge_config of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties.
        :rtype: GoogleAppsDriveLabelsV2BadgeConfig
        """
        return self._badge_config

    @badge_config.setter
    def badge_config(self, badge_config):
        """Sets the badge_config of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties.


        :param badge_config: The badge_config of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties.
        :type badge_config: GoogleAppsDriveLabelsV2BadgeConfig
        """

        self._badge_config = badge_config

    @property
    def description(self):
        """Gets the description of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties.

        The description of this label.

        :return: The description of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties.

        The description of this label.

        :param description: The description of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties.

        Required. The display text to show in the UI identifying this field.

        :return: The display_name of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties.

        Required. The display text to show in the UI identifying this field.

        :param display_name: The display_name of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def insert_before_choice(self):
        """Gets the insert_before_choice of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties.

        Input only. Insert or move this choice before the indicated choice. If empty, the choice is placed at the end of the list.

        :return: The insert_before_choice of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties.
        :rtype: str
        """
        return self._insert_before_choice

    @insert_before_choice.setter
    def insert_before_choice(self, insert_before_choice):
        """Sets the insert_before_choice of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties.

        Input only. Insert or move this choice before the indicated choice. If empty, the choice is placed at the end of the list.

        :param insert_before_choice: The insert_before_choice of this GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties.
        :type insert_before_choice: str
        """

        self._insert_before_choice = insert_before_choice
