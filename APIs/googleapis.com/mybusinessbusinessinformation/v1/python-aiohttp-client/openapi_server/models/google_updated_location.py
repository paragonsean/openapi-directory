# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.location import Location
from openapi_server import util


class GoogleUpdatedLocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, diff_mask: str=None, location: Location=None, pending_mask: str=None):
        """GoogleUpdatedLocation - a model defined in OpenAPI

        :param diff_mask: The diff_mask of this GoogleUpdatedLocation.
        :param location: The location of this GoogleUpdatedLocation.
        :param pending_mask: The pending_mask of this GoogleUpdatedLocation.
        """
        self.openapi_types = {
            'diff_mask': str,
            'location': Location,
            'pending_mask': str
        }

        self.attribute_map = {
            'diff_mask': 'diffMask',
            'location': 'location',
            'pending_mask': 'pendingMask'
        }

        self._diff_mask = diff_mask
        self._location = location
        self._pending_mask = pending_mask

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleUpdatedLocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleUpdatedLocation of this GoogleUpdatedLocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def diff_mask(self):
        """Gets the diff_mask of this GoogleUpdatedLocation.

        The fields that Google updated.

        :return: The diff_mask of this GoogleUpdatedLocation.
        :rtype: str
        """
        return self._diff_mask

    @diff_mask.setter
    def diff_mask(self, diff_mask):
        """Sets the diff_mask of this GoogleUpdatedLocation.

        The fields that Google updated.

        :param diff_mask: The diff_mask of this GoogleUpdatedLocation.
        :type diff_mask: str
        """

        self._diff_mask = diff_mask

    @property
    def location(self):
        """Gets the location of this GoogleUpdatedLocation.


        :return: The location of this GoogleUpdatedLocation.
        :rtype: Location
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this GoogleUpdatedLocation.


        :param location: The location of this GoogleUpdatedLocation.
        :type location: Location
        """

        self._location = location

    @property
    def pending_mask(self):
        """Gets the pending_mask of this GoogleUpdatedLocation.

        The fields that have pending edits that haven't yet been pushed to Maps and Search.

        :return: The pending_mask of this GoogleUpdatedLocation.
        :rtype: str
        """
        return self._pending_mask

    @pending_mask.setter
    def pending_mask(self, pending_mask):
        """Sets the pending_mask of this GoogleUpdatedLocation.

        The fields that have pending edits that haven't yet been pushed to Maps and Search.

        :param pending_mask: The pending_mask of this GoogleUpdatedLocation.
        :type pending_mask: str
        """

        self._pending_mask = pending_mask
