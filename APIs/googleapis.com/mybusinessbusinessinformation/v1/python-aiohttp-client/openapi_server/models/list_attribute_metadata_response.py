# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.attribute_metadata import AttributeMetadata
from openapi_server import util


class ListAttributeMetadataResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attribute_metadata: List[AttributeMetadata]=None, next_page_token: str=None):
        """ListAttributeMetadataResponse - a model defined in OpenAPI

        :param attribute_metadata: The attribute_metadata of this ListAttributeMetadataResponse.
        :param next_page_token: The next_page_token of this ListAttributeMetadataResponse.
        """
        self.openapi_types = {
            'attribute_metadata': List[AttributeMetadata],
            'next_page_token': str
        }

        self.attribute_map = {
            'attribute_metadata': 'attributeMetadata',
            'next_page_token': 'nextPageToken'
        }

        self._attribute_metadata = attribute_metadata
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListAttributeMetadataResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListAttributeMetadataResponse of this ListAttributeMetadataResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attribute_metadata(self):
        """Gets the attribute_metadata of this ListAttributeMetadataResponse.

        A collection of attribute metadata for the available attributes.

        :return: The attribute_metadata of this ListAttributeMetadataResponse.
        :rtype: List[AttributeMetadata]
        """
        return self._attribute_metadata

    @attribute_metadata.setter
    def attribute_metadata(self, attribute_metadata):
        """Sets the attribute_metadata of this ListAttributeMetadataResponse.

        A collection of attribute metadata for the available attributes.

        :param attribute_metadata: The attribute_metadata of this ListAttributeMetadataResponse.
        :type attribute_metadata: List[AttributeMetadata]
        """

        self._attribute_metadata = attribute_metadata

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListAttributeMetadataResponse.

        If the number of attributes exceeded the requested page size, this field will be populated with a token to fetch the next page of attributes on a subsequent call to `attributes.list`. If there are no more attributes, this field will not be present in the response.

        :return: The next_page_token of this ListAttributeMetadataResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListAttributeMetadataResponse.

        If the number of attributes exceeded the requested page size, this field will be populated with a token to fetch the next page of attributes on a subsequent call to `attributes.list`. If there are no more attributes, this field will not be present in the response.

        :param next_page_token: The next_page_token of this ListAttributeMetadataResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
