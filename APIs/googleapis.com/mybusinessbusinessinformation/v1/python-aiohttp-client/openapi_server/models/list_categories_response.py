# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.category import Category
from openapi_server import util


class ListCategoriesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, categories: List[Category]=None, next_page_token: str=None):
        """ListCategoriesResponse - a model defined in OpenAPI

        :param categories: The categories of this ListCategoriesResponse.
        :param next_page_token: The next_page_token of this ListCategoriesResponse.
        """
        self.openapi_types = {
            'categories': List[Category],
            'next_page_token': str
        }

        self.attribute_map = {
            'categories': 'categories',
            'next_page_token': 'nextPageToken'
        }

        self._categories = categories
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListCategoriesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListCategoriesResponse of this ListCategoriesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def categories(self):
        """Gets the categories of this ListCategoriesResponse.

        The matching categories based on the requested parameters.

        :return: The categories of this ListCategoriesResponse.
        :rtype: List[Category]
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """Sets the categories of this ListCategoriesResponse.

        The matching categories based on the requested parameters.

        :param categories: The categories of this ListCategoriesResponse.
        :type categories: List[Category]
        """

        self._categories = categories

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListCategoriesResponse.

        If the number of categories exceeded the requested page size, this field will be populated with a token to fetch the next page of categories on a subsequent call to `ListCategories`.

        :return: The next_page_token of this ListCategoriesResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListCategoriesResponse.

        If the number of categories exceeded the requested page size, this field will be populated with a token to fetch the next page of categories on a subsequent call to `ListCategories`.

        :param next_page_token: The next_page_token of this ListCategoriesResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
