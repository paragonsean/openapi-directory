# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PhoneNumbers(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_phones: List[str]=None, primary_phone: str=None):
        """PhoneNumbers - a model defined in OpenAPI

        :param additional_phones: The additional_phones of this PhoneNumbers.
        :param primary_phone: The primary_phone of this PhoneNumbers.
        """
        self.openapi_types = {
            'additional_phones': List[str],
            'primary_phone': str
        }

        self.attribute_map = {
            'additional_phones': 'additionalPhones',
            'primary_phone': 'primaryPhone'
        }

        self._additional_phones = additional_phones
        self._primary_phone = primary_phone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PhoneNumbers':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PhoneNumbers of this PhoneNumbers.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_phones(self):
        """Gets the additional_phones of this PhoneNumbers.

        Optional. Up to two phone numbers (mobile or landline, no fax) at which your business can be called, in addition to your primary phone number.

        :return: The additional_phones of this PhoneNumbers.
        :rtype: List[str]
        """
        return self._additional_phones

    @additional_phones.setter
    def additional_phones(self, additional_phones):
        """Sets the additional_phones of this PhoneNumbers.

        Optional. Up to two phone numbers (mobile or landline, no fax) at which your business can be called, in addition to your primary phone number.

        :param additional_phones: The additional_phones of this PhoneNumbers.
        :type additional_phones: List[str]
        """

        self._additional_phones = additional_phones

    @property
    def primary_phone(self):
        """Gets the primary_phone of this PhoneNumbers.

        Required. A phone number that connects to your individual business location as directly as possible. Use a local phone number instead of a central, call center helpline number whenever possible.

        :return: The primary_phone of this PhoneNumbers.
        :rtype: str
        """
        return self._primary_phone

    @primary_phone.setter
    def primary_phone(self, primary_phone):
        """Sets the primary_phone of this PhoneNumbers.

        Required. A phone number that connects to your individual business location as directly as possible. Use a local phone number instead of a central, call center helpline number whenever possible.

        :param primary_phone: The primary_phone of this PhoneNumbers.
        :type primary_phone: str
        """

        self._primary_phone = primary_phone
