# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ad_words_location_extensions import AdWordsLocationExtensions
from openapi_server.models.business_hours import BusinessHours
from openapi_server.models.categories import Categories
from openapi_server.models.lat_lng import LatLng
from openapi_server.models.metadata import Metadata
from openapi_server.models.more_hours import MoreHours
from openapi_server.models.open_info import OpenInfo
from openapi_server.models.phone_numbers import PhoneNumbers
from openapi_server.models.postal_address import PostalAddress
from openapi_server.models.profile import Profile
from openapi_server.models.relationship_data import RelationshipData
from openapi_server.models.service_area_business import ServiceAreaBusiness
from openapi_server.models.service_item import ServiceItem
from openapi_server.models.special_hours import SpecialHours
from openapi_server import util


class Location(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ad_words_location_extensions: AdWordsLocationExtensions=None, categories: Categories=None, labels: List[str]=None, language_code: str=None, latlng: LatLng=None, metadata: Metadata=None, more_hours: List[MoreHours]=None, name: str=None, open_info: OpenInfo=None, phone_numbers: PhoneNumbers=None, profile: Profile=None, regular_hours: BusinessHours=None, relationship_data: RelationshipData=None, service_area: ServiceAreaBusiness=None, service_items: List[ServiceItem]=None, special_hours: SpecialHours=None, store_code: str=None, storefront_address: PostalAddress=None, title: str=None, website_uri: str=None):
        """Location - a model defined in OpenAPI

        :param ad_words_location_extensions: The ad_words_location_extensions of this Location.
        :param categories: The categories of this Location.
        :param labels: The labels of this Location.
        :param language_code: The language_code of this Location.
        :param latlng: The latlng of this Location.
        :param metadata: The metadata of this Location.
        :param more_hours: The more_hours of this Location.
        :param name: The name of this Location.
        :param open_info: The open_info of this Location.
        :param phone_numbers: The phone_numbers of this Location.
        :param profile: The profile of this Location.
        :param regular_hours: The regular_hours of this Location.
        :param relationship_data: The relationship_data of this Location.
        :param service_area: The service_area of this Location.
        :param service_items: The service_items of this Location.
        :param special_hours: The special_hours of this Location.
        :param store_code: The store_code of this Location.
        :param storefront_address: The storefront_address of this Location.
        :param title: The title of this Location.
        :param website_uri: The website_uri of this Location.
        """
        self.openapi_types = {
            'ad_words_location_extensions': AdWordsLocationExtensions,
            'categories': Categories,
            'labels': List[str],
            'language_code': str,
            'latlng': LatLng,
            'metadata': Metadata,
            'more_hours': List[MoreHours],
            'name': str,
            'open_info': OpenInfo,
            'phone_numbers': PhoneNumbers,
            'profile': Profile,
            'regular_hours': BusinessHours,
            'relationship_data': RelationshipData,
            'service_area': ServiceAreaBusiness,
            'service_items': List[ServiceItem],
            'special_hours': SpecialHours,
            'store_code': str,
            'storefront_address': PostalAddress,
            'title': str,
            'website_uri': str
        }

        self.attribute_map = {
            'ad_words_location_extensions': 'adWordsLocationExtensions',
            'categories': 'categories',
            'labels': 'labels',
            'language_code': 'languageCode',
            'latlng': 'latlng',
            'metadata': 'metadata',
            'more_hours': 'moreHours',
            'name': 'name',
            'open_info': 'openInfo',
            'phone_numbers': 'phoneNumbers',
            'profile': 'profile',
            'regular_hours': 'regularHours',
            'relationship_data': 'relationshipData',
            'service_area': 'serviceArea',
            'service_items': 'serviceItems',
            'special_hours': 'specialHours',
            'store_code': 'storeCode',
            'storefront_address': 'storefrontAddress',
            'title': 'title',
            'website_uri': 'websiteUri'
        }

        self._ad_words_location_extensions = ad_words_location_extensions
        self._categories = categories
        self._labels = labels
        self._language_code = language_code
        self._latlng = latlng
        self._metadata = metadata
        self._more_hours = more_hours
        self._name = name
        self._open_info = open_info
        self._phone_numbers = phone_numbers
        self._profile = profile
        self._regular_hours = regular_hours
        self._relationship_data = relationship_data
        self._service_area = service_area
        self._service_items = service_items
        self._special_hours = special_hours
        self._store_code = store_code
        self._storefront_address = storefront_address
        self._title = title
        self._website_uri = website_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Location':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Location of this Location.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ad_words_location_extensions(self):
        """Gets the ad_words_location_extensions of this Location.


        :return: The ad_words_location_extensions of this Location.
        :rtype: AdWordsLocationExtensions
        """
        return self._ad_words_location_extensions

    @ad_words_location_extensions.setter
    def ad_words_location_extensions(self, ad_words_location_extensions):
        """Sets the ad_words_location_extensions of this Location.


        :param ad_words_location_extensions: The ad_words_location_extensions of this Location.
        :type ad_words_location_extensions: AdWordsLocationExtensions
        """

        self._ad_words_location_extensions = ad_words_location_extensions

    @property
    def categories(self):
        """Gets the categories of this Location.


        :return: The categories of this Location.
        :rtype: Categories
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """Sets the categories of this Location.


        :param categories: The categories of this Location.
        :type categories: Categories
        """

        self._categories = categories

    @property
    def labels(self):
        """Gets the labels of this Location.

        Optional. A collection of free-form strings to allow you to tag your business. These labels are NOT user facing; only you can see them. Must be between 1-255 characters per label.

        :return: The labels of this Location.
        :rtype: List[str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this Location.

        Optional. A collection of free-form strings to allow you to tag your business. These labels are NOT user facing; only you can see them. Must be between 1-255 characters per label.

        :param labels: The labels of this Location.
        :type labels: List[str]
        """

        self._labels = labels

    @property
    def language_code(self):
        """Gets the language_code of this Location.

        Immutable. The language of the location. Set during creation and not updateable.

        :return: The language_code of this Location.
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this Location.

        Immutable. The language of the location. Set during creation and not updateable.

        :param language_code: The language_code of this Location.
        :type language_code: str
        """

        self._language_code = language_code

    @property
    def latlng(self):
        """Gets the latlng of this Location.


        :return: The latlng of this Location.
        :rtype: LatLng
        """
        return self._latlng

    @latlng.setter
    def latlng(self, latlng):
        """Sets the latlng of this Location.


        :param latlng: The latlng of this Location.
        :type latlng: LatLng
        """

        self._latlng = latlng

    @property
    def metadata(self):
        """Gets the metadata of this Location.


        :return: The metadata of this Location.
        :rtype: Metadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this Location.


        :param metadata: The metadata of this Location.
        :type metadata: Metadata
        """

        self._metadata = metadata

    @property
    def more_hours(self):
        """Gets the more_hours of this Location.

        Optional. More hours for a business's different departments or specific customers.

        :return: The more_hours of this Location.
        :rtype: List[MoreHours]
        """
        return self._more_hours

    @more_hours.setter
    def more_hours(self, more_hours):
        """Sets the more_hours of this Location.

        Optional. More hours for a business's different departments or specific customers.

        :param more_hours: The more_hours of this Location.
        :type more_hours: List[MoreHours]
        """

        self._more_hours = more_hours

    @property
    def name(self):
        """Gets the name of this Location.

        Google identifier for this location in the form: `locations/{location_id}`.

        :return: The name of this Location.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Location.

        Google identifier for this location in the form: `locations/{location_id}`.

        :param name: The name of this Location.
        :type name: str
        """

        self._name = name

    @property
    def open_info(self):
        """Gets the open_info of this Location.


        :return: The open_info of this Location.
        :rtype: OpenInfo
        """
        return self._open_info

    @open_info.setter
    def open_info(self, open_info):
        """Sets the open_info of this Location.


        :param open_info: The open_info of this Location.
        :type open_info: OpenInfo
        """

        self._open_info = open_info

    @property
    def phone_numbers(self):
        """Gets the phone_numbers of this Location.


        :return: The phone_numbers of this Location.
        :rtype: PhoneNumbers
        """
        return self._phone_numbers

    @phone_numbers.setter
    def phone_numbers(self, phone_numbers):
        """Sets the phone_numbers of this Location.


        :param phone_numbers: The phone_numbers of this Location.
        :type phone_numbers: PhoneNumbers
        """

        self._phone_numbers = phone_numbers

    @property
    def profile(self):
        """Gets the profile of this Location.


        :return: The profile of this Location.
        :rtype: Profile
        """
        return self._profile

    @profile.setter
    def profile(self, profile):
        """Sets the profile of this Location.


        :param profile: The profile of this Location.
        :type profile: Profile
        """

        self._profile = profile

    @property
    def regular_hours(self):
        """Gets the regular_hours of this Location.


        :return: The regular_hours of this Location.
        :rtype: BusinessHours
        """
        return self._regular_hours

    @regular_hours.setter
    def regular_hours(self, regular_hours):
        """Sets the regular_hours of this Location.


        :param regular_hours: The regular_hours of this Location.
        :type regular_hours: BusinessHours
        """

        self._regular_hours = regular_hours

    @property
    def relationship_data(self):
        """Gets the relationship_data of this Location.


        :return: The relationship_data of this Location.
        :rtype: RelationshipData
        """
        return self._relationship_data

    @relationship_data.setter
    def relationship_data(self, relationship_data):
        """Sets the relationship_data of this Location.


        :param relationship_data: The relationship_data of this Location.
        :type relationship_data: RelationshipData
        """

        self._relationship_data = relationship_data

    @property
    def service_area(self):
        """Gets the service_area of this Location.


        :return: The service_area of this Location.
        :rtype: ServiceAreaBusiness
        """
        return self._service_area

    @service_area.setter
    def service_area(self, service_area):
        """Sets the service_area of this Location.


        :param service_area: The service_area of this Location.
        :type service_area: ServiceAreaBusiness
        """

        self._service_area = service_area

    @property
    def service_items(self):
        """Gets the service_items of this Location.

        Optional. List of services supported by merchants. A service can be haircut, install water heater, etc. Duplicated service items will be removed automatically.

        :return: The service_items of this Location.
        :rtype: List[ServiceItem]
        """
        return self._service_items

    @service_items.setter
    def service_items(self, service_items):
        """Sets the service_items of this Location.

        Optional. List of services supported by merchants. A service can be haircut, install water heater, etc. Duplicated service items will be removed automatically.

        :param service_items: The service_items of this Location.
        :type service_items: List[ServiceItem]
        """

        self._service_items = service_items

    @property
    def special_hours(self):
        """Gets the special_hours of this Location.


        :return: The special_hours of this Location.
        :rtype: SpecialHours
        """
        return self._special_hours

    @special_hours.setter
    def special_hours(self, special_hours):
        """Sets the special_hours of this Location.


        :param special_hours: The special_hours of this Location.
        :type special_hours: SpecialHours
        """

        self._special_hours = special_hours

    @property
    def store_code(self):
        """Gets the store_code of this Location.

        Optional. External identifier for this location, which must be unique within a given account. This is a means of associating the location with your own records.

        :return: The store_code of this Location.
        :rtype: str
        """
        return self._store_code

    @store_code.setter
    def store_code(self, store_code):
        """Sets the store_code of this Location.

        Optional. External identifier for this location, which must be unique within a given account. This is a means of associating the location with your own records.

        :param store_code: The store_code of this Location.
        :type store_code: str
        """

        self._store_code = store_code

    @property
    def storefront_address(self):
        """Gets the storefront_address of this Location.


        :return: The storefront_address of this Location.
        :rtype: PostalAddress
        """
        return self._storefront_address

    @storefront_address.setter
    def storefront_address(self, storefront_address):
        """Sets the storefront_address of this Location.


        :param storefront_address: The storefront_address of this Location.
        :type storefront_address: PostalAddress
        """

        self._storefront_address = storefront_address

    @property
    def title(self):
        """Gets the title of this Location.

        Required. Location name should reflect your business's real-world name, as used consistently on your storefront, website, and stationery, and as known to customers. Any additional information, when relevant, can be included in other fields of the resource (for example, `Address`, `Categories`). Don't add unnecessary information to your name (for example, prefer \"Google\" over \"Google Inc. - Mountain View Corporate Headquarters\"). Don't include marketing taglines, store codes, special characters, hours or closed/open status, phone numbers, website URLs, service/product information, location/address or directions, or containment information (for example, \"Chase ATM in Duane Reade\").

        :return: The title of this Location.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Location.

        Required. Location name should reflect your business's real-world name, as used consistently on your storefront, website, and stationery, and as known to customers. Any additional information, when relevant, can be included in other fields of the resource (for example, `Address`, `Categories`). Don't add unnecessary information to your name (for example, prefer \"Google\" over \"Google Inc. - Mountain View Corporate Headquarters\"). Don't include marketing taglines, store codes, special characters, hours or closed/open status, phone numbers, website URLs, service/product information, location/address or directions, or containment information (for example, \"Chase ATM in Duane Reade\").

        :param title: The title of this Location.
        :type title: str
        """

        self._title = title

    @property
    def website_uri(self):
        """Gets the website_uri of this Location.

        Optional. A URL for this business. If possible, use a URL that represents this individual business location instead of a generic website/URL that represents all locations, or the brand.

        :return: The website_uri of this Location.
        :rtype: str
        """
        return self._website_uri

    @website_uri.setter
    def website_uri(self, website_uri):
        """Sets the website_uri of this Location.

        Optional. A URL for this business. If possible, use a URL that represents this individual business location instead of a generic website/URL that represents all locations, or the brand.

        :param website_uri: The website_uri of this Location.
        :type website_uri: str
        """

        self._website_uri = website_uri
