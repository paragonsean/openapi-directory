# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.place_info import PlaceInfo
from openapi_server import util


class Places(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, place_infos: List[PlaceInfo]=None):
        """Places - a model defined in OpenAPI

        :param place_infos: The place_infos of this Places.
        """
        self.openapi_types = {
            'place_infos': List[PlaceInfo]
        }

        self.attribute_map = {
            'place_infos': 'placeInfos'
        }

        self._place_infos = place_infos

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Places':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Places of this Places.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def place_infos(self):
        """Gets the place_infos of this Places.

        The areas represented by place IDs. Limited to a maximum of 20 places.

        :return: The place_infos of this Places.
        :rtype: List[PlaceInfo]
        """
        return self._place_infos

    @place_infos.setter
    def place_infos(self, place_infos):
        """Sets the place_infos of this Places.

        The areas represented by place IDs. Limited to a maximum of 20 places.

        :param place_infos: The place_infos of this Places.
        :type place_infos: List[PlaceInfo]
        """

        self._place_infos = place_infos
