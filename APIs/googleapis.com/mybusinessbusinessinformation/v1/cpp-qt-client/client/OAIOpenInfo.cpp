/**
 * My Business Business Information API
 * The My Business Business Information API provides an interface for managing business information. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOpenInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOpenInfo::OAIOpenInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOpenInfo::OAIOpenInfo() {
    this->initializeModel();
}

OAIOpenInfo::~OAIOpenInfo() {}

void OAIOpenInfo::initializeModel() {

    m_can_reopen_isSet = false;
    m_can_reopen_isValid = false;

    m_opening_date_isSet = false;
    m_opening_date_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIOpenInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOpenInfo::fromJsonObject(QJsonObject json) {

    m_can_reopen_isValid = ::OpenAPI::fromJsonValue(m_can_reopen, json[QString("canReopen")]);
    m_can_reopen_isSet = !json[QString("canReopen")].isNull() && m_can_reopen_isValid;

    m_opening_date_isValid = ::OpenAPI::fromJsonValue(m_opening_date, json[QString("openingDate")]);
    m_opening_date_isSet = !json[QString("openingDate")].isNull() && m_opening_date_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIOpenInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOpenInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_can_reopen_isSet) {
        obj.insert(QString("canReopen"), ::OpenAPI::toJsonValue(m_can_reopen));
    }
    if (m_opening_date.isSet()) {
        obj.insert(QString("openingDate"), ::OpenAPI::toJsonValue(m_opening_date));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

bool OAIOpenInfo::isCanReopen() const {
    return m_can_reopen;
}
void OAIOpenInfo::setCanReopen(const bool &can_reopen) {
    m_can_reopen = can_reopen;
    m_can_reopen_isSet = true;
}

bool OAIOpenInfo::is_can_reopen_Set() const{
    return m_can_reopen_isSet;
}

bool OAIOpenInfo::is_can_reopen_Valid() const{
    return m_can_reopen_isValid;
}

OAIDate OAIOpenInfo::getOpeningDate() const {
    return m_opening_date;
}
void OAIOpenInfo::setOpeningDate(const OAIDate &opening_date) {
    m_opening_date = opening_date;
    m_opening_date_isSet = true;
}

bool OAIOpenInfo::is_opening_date_Set() const{
    return m_opening_date_isSet;
}

bool OAIOpenInfo::is_opening_date_Valid() const{
    return m_opening_date_isValid;
}

QString OAIOpenInfo::getStatus() const {
    return m_status;
}
void OAIOpenInfo::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIOpenInfo::is_status_Set() const{
    return m_status_isSet;
}

bool OAIOpenInfo::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIOpenInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_can_reopen_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_opening_date.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOpenInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
