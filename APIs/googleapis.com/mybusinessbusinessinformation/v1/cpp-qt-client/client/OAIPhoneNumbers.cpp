/**
 * My Business Business Information API
 * The My Business Business Information API provides an interface for managing business information. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPhoneNumbers.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPhoneNumbers::OAIPhoneNumbers(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPhoneNumbers::OAIPhoneNumbers() {
    this->initializeModel();
}

OAIPhoneNumbers::~OAIPhoneNumbers() {}

void OAIPhoneNumbers::initializeModel() {

    m_additional_phones_isSet = false;
    m_additional_phones_isValid = false;

    m_primary_phone_isSet = false;
    m_primary_phone_isValid = false;
}

void OAIPhoneNumbers::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPhoneNumbers::fromJsonObject(QJsonObject json) {

    m_additional_phones_isValid = ::OpenAPI::fromJsonValue(m_additional_phones, json[QString("additionalPhones")]);
    m_additional_phones_isSet = !json[QString("additionalPhones")].isNull() && m_additional_phones_isValid;

    m_primary_phone_isValid = ::OpenAPI::fromJsonValue(m_primary_phone, json[QString("primaryPhone")]);
    m_primary_phone_isSet = !json[QString("primaryPhone")].isNull() && m_primary_phone_isValid;
}

QString OAIPhoneNumbers::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPhoneNumbers::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_phones.size() > 0) {
        obj.insert(QString("additionalPhones"), ::OpenAPI::toJsonValue(m_additional_phones));
    }
    if (m_primary_phone_isSet) {
        obj.insert(QString("primaryPhone"), ::OpenAPI::toJsonValue(m_primary_phone));
    }
    return obj;
}

QList<QString> OAIPhoneNumbers::getAdditionalPhones() const {
    return m_additional_phones;
}
void OAIPhoneNumbers::setAdditionalPhones(const QList<QString> &additional_phones) {
    m_additional_phones = additional_phones;
    m_additional_phones_isSet = true;
}

bool OAIPhoneNumbers::is_additional_phones_Set() const{
    return m_additional_phones_isSet;
}

bool OAIPhoneNumbers::is_additional_phones_Valid() const{
    return m_additional_phones_isValid;
}

QString OAIPhoneNumbers::getPrimaryPhone() const {
    return m_primary_phone;
}
void OAIPhoneNumbers::setPrimaryPhone(const QString &primary_phone) {
    m_primary_phone = primary_phone;
    m_primary_phone_isSet = true;
}

bool OAIPhoneNumbers::is_primary_phone_Set() const{
    return m_primary_phone_isSet;
}

bool OAIPhoneNumbers::is_primary_phone_Valid() const{
    return m_primary_phone_isValid;
}

bool OAIPhoneNumbers::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_phones.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_phone_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPhoneNumbers::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
