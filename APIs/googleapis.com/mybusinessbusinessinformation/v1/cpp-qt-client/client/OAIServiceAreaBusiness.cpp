/**
 * My Business Business Information API
 * The My Business Business Information API provides an interface for managing business information. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceAreaBusiness.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceAreaBusiness::OAIServiceAreaBusiness(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceAreaBusiness::OAIServiceAreaBusiness() {
    this->initializeModel();
}

OAIServiceAreaBusiness::~OAIServiceAreaBusiness() {}

void OAIServiceAreaBusiness::initializeModel() {

    m_business_type_isSet = false;
    m_business_type_isValid = false;

    m_places_isSet = false;
    m_places_isValid = false;

    m_region_code_isSet = false;
    m_region_code_isValid = false;
}

void OAIServiceAreaBusiness::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServiceAreaBusiness::fromJsonObject(QJsonObject json) {

    m_business_type_isValid = ::OpenAPI::fromJsonValue(m_business_type, json[QString("businessType")]);
    m_business_type_isSet = !json[QString("businessType")].isNull() && m_business_type_isValid;

    m_places_isValid = ::OpenAPI::fromJsonValue(m_places, json[QString("places")]);
    m_places_isSet = !json[QString("places")].isNull() && m_places_isValid;

    m_region_code_isValid = ::OpenAPI::fromJsonValue(m_region_code, json[QString("regionCode")]);
    m_region_code_isSet = !json[QString("regionCode")].isNull() && m_region_code_isValid;
}

QString OAIServiceAreaBusiness::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServiceAreaBusiness::asJsonObject() const {
    QJsonObject obj;
    if (m_business_type_isSet) {
        obj.insert(QString("businessType"), ::OpenAPI::toJsonValue(m_business_type));
    }
    if (m_places.isSet()) {
        obj.insert(QString("places"), ::OpenAPI::toJsonValue(m_places));
    }
    if (m_region_code_isSet) {
        obj.insert(QString("regionCode"), ::OpenAPI::toJsonValue(m_region_code));
    }
    return obj;
}

QString OAIServiceAreaBusiness::getBusinessType() const {
    return m_business_type;
}
void OAIServiceAreaBusiness::setBusinessType(const QString &business_type) {
    m_business_type = business_type;
    m_business_type_isSet = true;
}

bool OAIServiceAreaBusiness::is_business_type_Set() const{
    return m_business_type_isSet;
}

bool OAIServiceAreaBusiness::is_business_type_Valid() const{
    return m_business_type_isValid;
}

OAIPlaces OAIServiceAreaBusiness::getPlaces() const {
    return m_places;
}
void OAIServiceAreaBusiness::setPlaces(const OAIPlaces &places) {
    m_places = places;
    m_places_isSet = true;
}

bool OAIServiceAreaBusiness::is_places_Set() const{
    return m_places_isSet;
}

bool OAIServiceAreaBusiness::is_places_Valid() const{
    return m_places_isValid;
}

QString OAIServiceAreaBusiness::getRegionCode() const {
    return m_region_code;
}
void OAIServiceAreaBusiness::setRegionCode(const QString &region_code) {
    m_region_code = region_code;
    m_region_code_isSet = true;
}

bool OAIServiceAreaBusiness::is_region_code_Set() const{
    return m_region_code_isSet;
}

bool OAIServiceAreaBusiness::is_region_code_Valid() const{
    return m_region_code_isValid;
}

bool OAIServiceAreaBusiness::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_business_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_places.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_region_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServiceAreaBusiness::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
