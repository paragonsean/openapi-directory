/**
 * My Business Business Information API
 * The My Business Business Information API provides an interface for managing business information. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITimePeriod.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITimePeriod::OAITimePeriod(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITimePeriod::OAITimePeriod() {
    this->initializeModel();
}

OAITimePeriod::~OAITimePeriod() {}

void OAITimePeriod::initializeModel() {

    m_close_day_isSet = false;
    m_close_day_isValid = false;

    m_close_time_isSet = false;
    m_close_time_isValid = false;

    m_open_day_isSet = false;
    m_open_day_isValid = false;

    m_open_time_isSet = false;
    m_open_time_isValid = false;
}

void OAITimePeriod::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITimePeriod::fromJsonObject(QJsonObject json) {

    m_close_day_isValid = ::OpenAPI::fromJsonValue(m_close_day, json[QString("closeDay")]);
    m_close_day_isSet = !json[QString("closeDay")].isNull() && m_close_day_isValid;

    m_close_time_isValid = ::OpenAPI::fromJsonValue(m_close_time, json[QString("closeTime")]);
    m_close_time_isSet = !json[QString("closeTime")].isNull() && m_close_time_isValid;

    m_open_day_isValid = ::OpenAPI::fromJsonValue(m_open_day, json[QString("openDay")]);
    m_open_day_isSet = !json[QString("openDay")].isNull() && m_open_day_isValid;

    m_open_time_isValid = ::OpenAPI::fromJsonValue(m_open_time, json[QString("openTime")]);
    m_open_time_isSet = !json[QString("openTime")].isNull() && m_open_time_isValid;
}

QString OAITimePeriod::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITimePeriod::asJsonObject() const {
    QJsonObject obj;
    if (m_close_day_isSet) {
        obj.insert(QString("closeDay"), ::OpenAPI::toJsonValue(m_close_day));
    }
    if (m_close_time.isSet()) {
        obj.insert(QString("closeTime"), ::OpenAPI::toJsonValue(m_close_time));
    }
    if (m_open_day_isSet) {
        obj.insert(QString("openDay"), ::OpenAPI::toJsonValue(m_open_day));
    }
    if (m_open_time.isSet()) {
        obj.insert(QString("openTime"), ::OpenAPI::toJsonValue(m_open_time));
    }
    return obj;
}

QString OAITimePeriod::getCloseDay() const {
    return m_close_day;
}
void OAITimePeriod::setCloseDay(const QString &close_day) {
    m_close_day = close_day;
    m_close_day_isSet = true;
}

bool OAITimePeriod::is_close_day_Set() const{
    return m_close_day_isSet;
}

bool OAITimePeriod::is_close_day_Valid() const{
    return m_close_day_isValid;
}

OAITimeOfDay OAITimePeriod::getCloseTime() const {
    return m_close_time;
}
void OAITimePeriod::setCloseTime(const OAITimeOfDay &close_time) {
    m_close_time = close_time;
    m_close_time_isSet = true;
}

bool OAITimePeriod::is_close_time_Set() const{
    return m_close_time_isSet;
}

bool OAITimePeriod::is_close_time_Valid() const{
    return m_close_time_isValid;
}

QString OAITimePeriod::getOpenDay() const {
    return m_open_day;
}
void OAITimePeriod::setOpenDay(const QString &open_day) {
    m_open_day = open_day;
    m_open_day_isSet = true;
}

bool OAITimePeriod::is_open_day_Set() const{
    return m_open_day_isSet;
}

bool OAITimePeriod::is_open_day_Valid() const{
    return m_open_day_isValid;
}

OAITimeOfDay OAITimePeriod::getOpenTime() const {
    return m_open_time;
}
void OAITimePeriod::setOpenTime(const OAITimeOfDay &open_time) {
    m_open_time = open_time;
    m_open_time_isSet = true;
}

bool OAITimePeriod::is_open_time_Set() const{
    return m_open_time_isSet;
}

bool OAITimePeriod::is_open_time_Valid() const{
    return m_open_time_isValid;
}

bool OAITimePeriod::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_close_day_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_close_time.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_open_day_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_open_time.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITimePeriod::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
