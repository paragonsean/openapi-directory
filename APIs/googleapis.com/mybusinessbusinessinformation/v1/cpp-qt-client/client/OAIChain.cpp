/**
 * My Business Business Information API
 * The My Business Business Information API provides an interface for managing business information. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChain.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChain::OAIChain(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChain::OAIChain() {
    this->initializeModel();
}

OAIChain::~OAIChain() {}

void OAIChain::initializeModel() {

    m_chain_names_isSet = false;
    m_chain_names_isValid = false;

    m_location_count_isSet = false;
    m_location_count_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_websites_isSet = false;
    m_websites_isValid = false;
}

void OAIChain::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChain::fromJsonObject(QJsonObject json) {

    m_chain_names_isValid = ::OpenAPI::fromJsonValue(m_chain_names, json[QString("chainNames")]);
    m_chain_names_isSet = !json[QString("chainNames")].isNull() && m_chain_names_isValid;

    m_location_count_isValid = ::OpenAPI::fromJsonValue(m_location_count, json[QString("locationCount")]);
    m_location_count_isSet = !json[QString("locationCount")].isNull() && m_location_count_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_websites_isValid = ::OpenAPI::fromJsonValue(m_websites, json[QString("websites")]);
    m_websites_isSet = !json[QString("websites")].isNull() && m_websites_isValid;
}

QString OAIChain::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChain::asJsonObject() const {
    QJsonObject obj;
    if (m_chain_names.size() > 0) {
        obj.insert(QString("chainNames"), ::OpenAPI::toJsonValue(m_chain_names));
    }
    if (m_location_count_isSet) {
        obj.insert(QString("locationCount"), ::OpenAPI::toJsonValue(m_location_count));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_websites.size() > 0) {
        obj.insert(QString("websites"), ::OpenAPI::toJsonValue(m_websites));
    }
    return obj;
}

QList<OAIChainName> OAIChain::getChainNames() const {
    return m_chain_names;
}
void OAIChain::setChainNames(const QList<OAIChainName> &chain_names) {
    m_chain_names = chain_names;
    m_chain_names_isSet = true;
}

bool OAIChain::is_chain_names_Set() const{
    return m_chain_names_isSet;
}

bool OAIChain::is_chain_names_Valid() const{
    return m_chain_names_isValid;
}

qint32 OAIChain::getLocationCount() const {
    return m_location_count;
}
void OAIChain::setLocationCount(const qint32 &location_count) {
    m_location_count = location_count;
    m_location_count_isSet = true;
}

bool OAIChain::is_location_count_Set() const{
    return m_location_count_isSet;
}

bool OAIChain::is_location_count_Valid() const{
    return m_location_count_isValid;
}

QString OAIChain::getName() const {
    return m_name;
}
void OAIChain::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIChain::is_name_Set() const{
    return m_name_isSet;
}

bool OAIChain::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIChainUri> OAIChain::getWebsites() const {
    return m_websites;
}
void OAIChain::setWebsites(const QList<OAIChainUri> &websites) {
    m_websites = websites;
    m_websites_isSet = true;
}

bool OAIChain::is_websites_Set() const{
    return m_websites_isSet;
}

bool OAIChain::is_websites_Valid() const{
    return m_websites_isValid;
}

bool OAIChain::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_chain_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_websites.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChain::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
