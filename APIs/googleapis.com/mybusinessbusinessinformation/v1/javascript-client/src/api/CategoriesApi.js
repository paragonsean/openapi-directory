/**
 * My Business Business Information API
 * The My Business Business Information API provides an interface for managing business information. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BatchGetCategoriesResponse from '../model/BatchGetCategoriesResponse';
import ListCategoriesResponse from '../model/ListCategoriesResponse';

/**
* Categories service.
* @module api/CategoriesApi
* @version v1
*/
export default class CategoriesApi {

    /**
    * Constructs a new CategoriesApi. 
    * @alias module:api/CategoriesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the mybusinessbusinessinformationCategoriesBatchGet operation.
     * @callback module:api/CategoriesApi~mybusinessbusinessinformationCategoriesBatchGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchGetCategoriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of business categories for the provided language and GConcept ids.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [languageCode] Required. The BCP 47 code of language that the category names should be returned in.
     * @param {Array.<String>} [names] Required. At least one name must be set. The GConcept ids the localized category names should be returned for. To return details for more than one category, repeat this parameter in the request.
     * @param {String} [regionCode] Optional. The ISO 3166-1 alpha-2 country code used to infer non-standard language.
     * @param {module:model/String} [view] Required. Specifies which parts to the Category resource should be returned in the response.
     * @param {module:api/CategoriesApi~mybusinessbusinessinformationCategoriesBatchGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchGetCategoriesResponse}
     */
    mybusinessbusinessinformationCategoriesBatchGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'languageCode': opts['languageCode'],
        'names': this.apiClient.buildCollectionParam(opts['names'], 'multi'),
        'regionCode': opts['regionCode'],
        'view': opts['view']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BatchGetCategoriesResponse;
      return this.apiClient.callApi(
        '/v1/categories:batchGet', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mybusinessbusinessinformationCategoriesList operation.
     * @callback module:api/CategoriesApi~mybusinessbusinessinformationCategoriesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListCategoriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of business categories. Search will match the category name but not the category ID. Search only matches the front of a category name (that is, 'food' may return 'Food Court' but not 'Fast Food Restaurant').
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Optional. Filter string from user. The only field that supported is `displayName`. Eg: `filter=displayName=foo`.
     * @param {String} [languageCode] Required. The BCP 47 code of language.
     * @param {Number} [pageSize] Optional. How many categories to fetch per page. Default is 100, minimum is 1, and maximum page size is 100.
     * @param {String} [pageToken] Optional. If specified, the next page of categories will be fetched.
     * @param {String} [regionCode] Required. The ISO 3166-1 alpha-2 country code.
     * @param {module:model/String} [view] Required. Specifies which parts to the Category resource should be returned in the response.
     * @param {module:api/CategoriesApi~mybusinessbusinessinformationCategoriesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListCategoriesResponse}
     */
    mybusinessbusinessinformationCategoriesList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'languageCode': opts['languageCode'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'regionCode': opts['regionCode'],
        'view': opts['view']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListCategoriesResponse;
      return this.apiClient.callApi(
        '/v1/categories', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
