/**
 * My Business Business Information API
 * The My Business Business Information API provides an interface for managing business information. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Location from './Location';

/**
 * The SearchGoogleLocationsRequest model module.
 * @module model/SearchGoogleLocationsRequest
 * @version v1
 */
class SearchGoogleLocationsRequest {
    /**
     * Constructs a new <code>SearchGoogleLocationsRequest</code>.
     * Request message for GoogleLocations.SearchGoogleLocations.
     * @alias module:model/SearchGoogleLocationsRequest
     */
    constructor() { 
        
        SearchGoogleLocationsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SearchGoogleLocationsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchGoogleLocationsRequest} obj Optional instance to populate.
     * @return {module:model/SearchGoogleLocationsRequest} The populated <code>SearchGoogleLocationsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchGoogleLocationsRequest();

            if (data.hasOwnProperty('location')) {
                obj['location'] = Location.constructFromObject(data['location']);
            }
            if (data.hasOwnProperty('pageSize')) {
                obj['pageSize'] = ApiClient.convertToType(data['pageSize'], 'Number');
            }
            if (data.hasOwnProperty('query')) {
                obj['query'] = ApiClient.convertToType(data['query'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchGoogleLocationsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchGoogleLocationsRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `location`
        if (data['location']) { // data not null
          Location.validateJSON(data['location']);
        }
        // ensure the json data is a string
        if (data['query'] && !(typeof data['query'] === 'string' || data['query'] instanceof String)) {
            throw new Error("Expected the field `query` to be a primitive type in the JSON string but got " + data['query']);
        }

        return true;
    }


}



/**
 * @member {module:model/Location} location
 */
SearchGoogleLocationsRequest.prototype['location'] = undefined;

/**
 * The number of matches to return. The default value is 3, with a maximum of 10. Note that latency may increase if more are requested. There is no pagination.
 * @member {Number} pageSize
 */
SearchGoogleLocationsRequest.prototype['pageSize'] = undefined;

/**
 * Text query to search for. The search results from a query string will be less accurate than if providing an exact location, but can provide more inexact matches.
 * @member {String} query
 */
SearchGoogleLocationsRequest.prototype['query'] = undefined;






export default SearchGoogleLocationsRequest;

