/**
 * My Business Business Information API
 * The My Business Business Information API provides an interface for managing business information. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PhoneNumbers model module.
 * @module model/PhoneNumbers
 * @version v1
 */
class PhoneNumbers {
    /**
     * Constructs a new <code>PhoneNumbers</code>.
     * A collection of phone numbers for the business. During updates, both fields must be set. Clients may not update just the primary or additional phone numbers using the update mask. International phone format is preferred, such as \&quot;+1 415 555 0132\&quot;, see more in (https://developers.google.com/style/phone-numbers#international-phone-numbers).
     * @alias module:model/PhoneNumbers
     */
    constructor() { 
        
        PhoneNumbers.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PhoneNumbers</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PhoneNumbers} obj Optional instance to populate.
     * @return {module:model/PhoneNumbers} The populated <code>PhoneNumbers</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PhoneNumbers();

            if (data.hasOwnProperty('additionalPhones')) {
                obj['additionalPhones'] = ApiClient.convertToType(data['additionalPhones'], ['String']);
            }
            if (data.hasOwnProperty('primaryPhone')) {
                obj['primaryPhone'] = ApiClient.convertToType(data['primaryPhone'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PhoneNumbers</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PhoneNumbers</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['additionalPhones'])) {
            throw new Error("Expected the field `additionalPhones` to be an array in the JSON data but got " + data['additionalPhones']);
        }
        // ensure the json data is a string
        if (data['primaryPhone'] && !(typeof data['primaryPhone'] === 'string' || data['primaryPhone'] instanceof String)) {
            throw new Error("Expected the field `primaryPhone` to be a primitive type in the JSON string but got " + data['primaryPhone']);
        }

        return true;
    }


}



/**
 * Optional. Up to two phone numbers (mobile or landline, no fax) at which your business can be called, in addition to your primary phone number.
 * @member {Array.<String>} additionalPhones
 */
PhoneNumbers.prototype['additionalPhones'] = undefined;

/**
 * Required. A phone number that connects to your individual business location as directly as possible. Use a local phone number instead of a central, call center helpline number whenever possible.
 * @member {String} primaryPhone
 */
PhoneNumbers.prototype['primaryPhone'] = undefined;






export default PhoneNumbers;

