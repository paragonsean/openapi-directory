/**
 * My Business Business Information API
 * The My Business Business Information API provides an interface for managing business information. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Label from './Label';

/**
 * The FreeFormServiceItem model module.
 * @module model/FreeFormServiceItem
 * @version v1
 */
class FreeFormServiceItem {
    /**
     * Constructs a new <code>FreeFormServiceItem</code>.
     * Represents a free-form service offered by the merchant. These are services that are not exposed as part of our structure service data. The merchant manually enters the names for of such services via a geomerchant surface.
     * @alias module:model/FreeFormServiceItem
     */
    constructor() { 
        
        FreeFormServiceItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FreeFormServiceItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FreeFormServiceItem} obj Optional instance to populate.
     * @return {module:model/FreeFormServiceItem} The populated <code>FreeFormServiceItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FreeFormServiceItem();

            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = Label.constructFromObject(data['label']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FreeFormServiceItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FreeFormServiceItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['category'] && !(typeof data['category'] === 'string' || data['category'] instanceof String)) {
            throw new Error("Expected the field `category` to be a primitive type in the JSON string but got " + data['category']);
        }
        // validate the optional field `label`
        if (data['label']) { // data not null
          Label.validateJSON(data['label']);
        }

        return true;
    }


}



/**
 * Required. This field represents the category name (i.e. the category's stable ID). The `category` and `service_type_id` should match the possible combinations provided in the `Category` message.
 * @member {String} category
 */
FreeFormServiceItem.prototype['category'] = undefined;

/**
 * @member {module:model/Label} label
 */
FreeFormServiceItem.prototype['label'] = undefined;






export default FreeFormServiceItem;

