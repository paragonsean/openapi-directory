/**
 * My Business Business Information API
 * The My Business Business Information API provides an interface for managing business information. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RelevantLocation from './RelevantLocation';

/**
 * The RelationshipData model module.
 * @module model/RelationshipData
 * @version v1
 */
class RelationshipData {
    /**
     * Constructs a new <code>RelationshipData</code>.
     * Information of all parent and children locations related to this one.
     * @alias module:model/RelationshipData
     */
    constructor() { 
        
        RelationshipData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RelationshipData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RelationshipData} obj Optional instance to populate.
     * @return {module:model/RelationshipData} The populated <code>RelationshipData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RelationshipData();

            if (data.hasOwnProperty('childrenLocations')) {
                obj['childrenLocations'] = ApiClient.convertToType(data['childrenLocations'], [RelevantLocation]);
            }
            if (data.hasOwnProperty('parentChain')) {
                obj['parentChain'] = ApiClient.convertToType(data['parentChain'], 'String');
            }
            if (data.hasOwnProperty('parentLocation')) {
                obj['parentLocation'] = RelevantLocation.constructFromObject(data['parentLocation']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RelationshipData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RelationshipData</code>.
     */
    static validateJSON(data) {
        if (data['childrenLocations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['childrenLocations'])) {
                throw new Error("Expected the field `childrenLocations` to be an array in the JSON data but got " + data['childrenLocations']);
            }
            // validate the optional field `childrenLocations` (array)
            for (const item of data['childrenLocations']) {
                RelevantLocation.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['parentChain'] && !(typeof data['parentChain'] === 'string' || data['parentChain'] instanceof String)) {
            throw new Error("Expected the field `parentChain` to be a primitive type in the JSON string but got " + data['parentChain']);
        }
        // validate the optional field `parentLocation`
        if (data['parentLocation']) { // data not null
          RelevantLocation.validateJSON(data['parentLocation']);
        }

        return true;
    }


}



/**
 * The list of children locations that this location has relations with.
 * @member {Array.<module:model/RelevantLocation>} childrenLocations
 */
RelationshipData.prototype['childrenLocations'] = undefined;

/**
 * The resource name of the Chain that this location is member of. How to find Chain ID
 * @member {String} parentChain
 */
RelationshipData.prototype['parentChain'] = undefined;

/**
 * @member {module:model/RelevantLocation} parentLocation
 */
RelationshipData.prototype['parentLocation'] = undefined;






export default RelationshipData;

