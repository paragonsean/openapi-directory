/**
 * My Business Business Information API
 * The My Business Business Information API provides an interface for managing business information. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FreeFormServiceItem from './FreeFormServiceItem';
import Money from './Money';
import StructuredServiceItem from './StructuredServiceItem';

/**
 * The ServiceItem model module.
 * @module model/ServiceItem
 * @version v1
 */
class ServiceItem {
    /**
     * Constructs a new <code>ServiceItem</code>.
     * A message that describes a single service item. It is used to describe the type of service that the merchant provides. For example, haircut can be a service.
     * @alias module:model/ServiceItem
     */
    constructor() { 
        
        ServiceItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceItem} obj Optional instance to populate.
     * @return {module:model/ServiceItem} The populated <code>ServiceItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceItem();

            if (data.hasOwnProperty('freeFormServiceItem')) {
                obj['freeFormServiceItem'] = FreeFormServiceItem.constructFromObject(data['freeFormServiceItem']);
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = Money.constructFromObject(data['price']);
            }
            if (data.hasOwnProperty('structuredServiceItem')) {
                obj['structuredServiceItem'] = StructuredServiceItem.constructFromObject(data['structuredServiceItem']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceItem</code>.
     */
    static validateJSON(data) {
        // validate the optional field `freeFormServiceItem`
        if (data['freeFormServiceItem']) { // data not null
          FreeFormServiceItem.validateJSON(data['freeFormServiceItem']);
        }
        // validate the optional field `price`
        if (data['price']) { // data not null
          Money.validateJSON(data['price']);
        }
        // validate the optional field `structuredServiceItem`
        if (data['structuredServiceItem']) { // data not null
          StructuredServiceItem.validateJSON(data['structuredServiceItem']);
        }

        return true;
    }


}



/**
 * @member {module:model/FreeFormServiceItem} freeFormServiceItem
 */
ServiceItem.prototype['freeFormServiceItem'] = undefined;

/**
 * @member {module:model/Money} price
 */
ServiceItem.prototype['price'] = undefined;

/**
 * @member {module:model/StructuredServiceItem} structuredServiceItem
 */
ServiceItem.prototype['structuredServiceItem'] = undefined;






export default ServiceItem;

