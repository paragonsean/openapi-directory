# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_catalog_config import DataCatalogConfig
from openapi_server.models.dataplex_config import DataplexConfig
from openapi_server import util


class MetadataIntegration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_catalog_config: DataCatalogConfig=None, dataplex_config: DataplexConfig=None):
        """MetadataIntegration - a model defined in OpenAPI

        :param data_catalog_config: The data_catalog_config of this MetadataIntegration.
        :param dataplex_config: The dataplex_config of this MetadataIntegration.
        """
        self.openapi_types = {
            'data_catalog_config': DataCatalogConfig,
            'dataplex_config': DataplexConfig
        }

        self.attribute_map = {
            'data_catalog_config': 'dataCatalogConfig',
            'dataplex_config': 'dataplexConfig'
        }

        self._data_catalog_config = data_catalog_config
        self._dataplex_config = dataplex_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetadataIntegration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetadataIntegration of this MetadataIntegration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_catalog_config(self):
        """Gets the data_catalog_config of this MetadataIntegration.


        :return: The data_catalog_config of this MetadataIntegration.
        :rtype: DataCatalogConfig
        """
        return self._data_catalog_config

    @data_catalog_config.setter
    def data_catalog_config(self, data_catalog_config):
        """Sets the data_catalog_config of this MetadataIntegration.


        :param data_catalog_config: The data_catalog_config of this MetadataIntegration.
        :type data_catalog_config: DataCatalogConfig
        """

        self._data_catalog_config = data_catalog_config

    @property
    def dataplex_config(self):
        """Gets the dataplex_config of this MetadataIntegration.


        :return: The dataplex_config of this MetadataIntegration.
        :rtype: DataplexConfig
        """
        return self._dataplex_config

    @dataplex_config.setter
    def dataplex_config(self, dataplex_config):
        """Sets the dataplex_config of this MetadataIntegration.


        :param dataplex_config: The dataplex_config of this MetadataIntegration.
        :type dataplex_config: DataplexConfig
        """

        self._dataplex_config = dataplex_config
