/**
 * Dataproc Metastore API
 * The Dataproc Metastore API is used to manage the lifecycle and configuration of metastore services.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScalingConfig.h
 *
 * Represents the scaling configuration of a metastore service.
 */

#ifndef OAIScalingConfig_H
#define OAIScalingConfig_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIScalingConfig : public OAIObject {
public:
    OAIScalingConfig();
    OAIScalingConfig(QString json);
    ~OAIScalingConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getInstanceSize() const;
    void setInstanceSize(const QString &instance_size);
    bool is_instance_size_Set() const;
    bool is_instance_size_Valid() const;

    float getScalingFactor() const;
    void setScalingFactor(const float &scaling_factor);
    bool is_scaling_factor_Set() const;
    bool is_scaling_factor_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_instance_size;
    bool m_instance_size_isSet;
    bool m_instance_size_isValid;

    float m_scaling_factor;
    bool m_scaling_factor_isSet;
    bool m_scaling_factor_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScalingConfig)

#endif // OAIScalingConfig_H
