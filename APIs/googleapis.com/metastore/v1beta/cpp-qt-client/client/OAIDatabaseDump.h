/**
 * Dataproc Metastore API
 * The Dataproc Metastore API is used to manage the lifecycle and configuration of metastore services.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDatabaseDump.h
 *
 * A specification of the location of and metadata about a database dump from a relational database management system.
 */

#ifndef OAIDatabaseDump_H
#define OAIDatabaseDump_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDatabaseDump : public OAIObject {
public:
    OAIDatabaseDump();
    OAIDatabaseDump(QString json);
    ~OAIDatabaseDump() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    Q_DECL_DEPRECATED QString getDatabaseType() const;
    Q_DECL_DEPRECATED void setDatabaseType(const QString &database_type);
    Q_DECL_DEPRECATED bool is_database_type_Set() const;
    Q_DECL_DEPRECATED bool is_database_type_Valid() const;

    QString getGcsUri() const;
    void setGcsUri(const QString &gcs_uri);
    bool is_gcs_uri_Set() const;
    bool is_gcs_uri_Valid() const;

    Q_DECL_DEPRECATED QString getSourceDatabase() const;
    Q_DECL_DEPRECATED void setSourceDatabase(const QString &source_database);
    Q_DECL_DEPRECATED bool is_source_database_Set() const;
    Q_DECL_DEPRECATED bool is_source_database_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_database_type;
    bool m_database_type_isSet;
    bool m_database_type_isValid;

    QString m_gcs_uri;
    bool m_gcs_uri_isSet;
    bool m_gcs_uri_isValid;

    QString m_source_database;
    bool m_source_database_isSet;
    bool m_source_database_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDatabaseDump)

#endif // OAIDatabaseDump_H
