/**
 * Dataproc Metastore API
 * The Dataproc Metastore API is used to manage the lifecycle and configuration of metastore services.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAuxiliaryVersionConfig.h
 *
 * Configuration information for the auxiliary service versions.
 */

#ifndef OAIAuxiliaryVersionConfig_H
#define OAIAuxiliaryVersionConfig_H

#include <QJsonObject>

#include "OAINetworkConfig.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINetworkConfig;

class OAIAuxiliaryVersionConfig : public OAIObject {
public:
    OAIAuxiliaryVersionConfig();
    OAIAuxiliaryVersionConfig(QString json);
    ~OAIAuxiliaryVersionConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getConfigOverrides() const;
    void setConfigOverrides(const QMap<QString, QString> &config_overrides);
    bool is_config_overrides_Set() const;
    bool is_config_overrides_Valid() const;

    OAINetworkConfig getNetworkConfig() const;
    void setNetworkConfig(const OAINetworkConfig &network_config);
    bool is_network_config_Set() const;
    bool is_network_config_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_config_overrides;
    bool m_config_overrides_isSet;
    bool m_config_overrides_isValid;

    OAINetworkConfig m_network_config;
    bool m_network_config_isSet;
    bool m_network_config_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAuxiliaryVersionConfig)

#endif // OAIAuxiliaryVersionConfig_H
