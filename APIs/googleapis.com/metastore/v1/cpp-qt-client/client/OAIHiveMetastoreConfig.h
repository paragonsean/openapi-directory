/**
 * Dataproc Metastore API
 * The Dataproc Metastore API is used to manage the lifecycle and configuration of metastore services.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHiveMetastoreConfig.h
 *
 * Specifies configuration information specific to running Hive metastore software as the metastore service.
 */

#ifndef OAIHiveMetastoreConfig_H
#define OAIHiveMetastoreConfig_H

#include <QJsonObject>

#include "OAIAuxiliaryVersionConfig.h"
#include "OAIKerberosConfig.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAuxiliaryVersionConfig;
class OAIKerberosConfig;

class OAIHiveMetastoreConfig : public OAIObject {
public:
    OAIHiveMetastoreConfig();
    OAIHiveMetastoreConfig(QString json);
    ~OAIHiveMetastoreConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, OAIAuxiliaryVersionConfig> getAuxiliaryVersions() const;
    void setAuxiliaryVersions(const QMap<QString, OAIAuxiliaryVersionConfig> &auxiliary_versions);
    bool is_auxiliary_versions_Set() const;
    bool is_auxiliary_versions_Valid() const;

    QMap<QString, QString> getConfigOverrides() const;
    void setConfigOverrides(const QMap<QString, QString> &config_overrides);
    bool is_config_overrides_Set() const;
    bool is_config_overrides_Valid() const;

    QString getEndpointProtocol() const;
    void setEndpointProtocol(const QString &endpoint_protocol);
    bool is_endpoint_protocol_Set() const;
    bool is_endpoint_protocol_Valid() const;

    OAIKerberosConfig getKerberosConfig() const;
    void setKerberosConfig(const OAIKerberosConfig &kerberos_config);
    bool is_kerberos_config_Set() const;
    bool is_kerberos_config_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, OAIAuxiliaryVersionConfig> m_auxiliary_versions;
    bool m_auxiliary_versions_isSet;
    bool m_auxiliary_versions_isValid;

    QMap<QString, QString> m_config_overrides;
    bool m_config_overrides_isSet;
    bool m_config_overrides_isValid;

    QString m_endpoint_protocol;
    bool m_endpoint_protocol_isSet;
    bool m_endpoint_protocol_isValid;

    OAIKerberosConfig m_kerberos_config;
    bool m_kerberos_config_isSet;
    bool m_kerberos_config_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHiveMetastoreConfig)

#endif // OAIHiveMetastoreConfig_H
