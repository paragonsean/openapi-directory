/**
 * Dataproc Metastore API
 * The Dataproc Metastore API is used to manage the lifecycle and configuration of metastore services.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMetadataIntegration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMetadataIntegration::OAIMetadataIntegration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMetadataIntegration::OAIMetadataIntegration() {
    this->initializeModel();
}

OAIMetadataIntegration::~OAIMetadataIntegration() {}

void OAIMetadataIntegration::initializeModel() {

    m_data_catalog_config_isSet = false;
    m_data_catalog_config_isValid = false;
}

void OAIMetadataIntegration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMetadataIntegration::fromJsonObject(QJsonObject json) {

    m_data_catalog_config_isValid = ::OpenAPI::fromJsonValue(m_data_catalog_config, json[QString("dataCatalogConfig")]);
    m_data_catalog_config_isSet = !json[QString("dataCatalogConfig")].isNull() && m_data_catalog_config_isValid;
}

QString OAIMetadataIntegration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMetadataIntegration::asJsonObject() const {
    QJsonObject obj;
    if (m_data_catalog_config.isSet()) {
        obj.insert(QString("dataCatalogConfig"), ::OpenAPI::toJsonValue(m_data_catalog_config));
    }
    return obj;
}

OAIDataCatalogConfig OAIMetadataIntegration::getDataCatalogConfig() const {
    return m_data_catalog_config;
}
void OAIMetadataIntegration::setDataCatalogConfig(const OAIDataCatalogConfig &data_catalog_config) {
    m_data_catalog_config = data_catalog_config;
    m_data_catalog_config_isSet = true;
}

bool OAIMetadataIntegration::is_data_catalog_config_Set() const{
    return m_data_catalog_config_isSet;
}

bool OAIMetadataIntegration::is_data_catalog_config_Valid() const{
    return m_data_catalog_config_isValid;
}

bool OAIMetadataIntegration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_catalog_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMetadataIntegration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
