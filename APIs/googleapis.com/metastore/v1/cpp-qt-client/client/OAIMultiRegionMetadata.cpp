/**
 * Dataproc Metastore API
 * The Dataproc Metastore API is used to manage the lifecycle and configuration of metastore services.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMultiRegionMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMultiRegionMetadata::OAIMultiRegionMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMultiRegionMetadata::OAIMultiRegionMetadata() {
    this->initializeModel();
}

OAIMultiRegionMetadata::~OAIMultiRegionMetadata() {}

void OAIMultiRegionMetadata::initializeModel() {

    m_constituent_regions_isSet = false;
    m_constituent_regions_isValid = false;
}

void OAIMultiRegionMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMultiRegionMetadata::fromJsonObject(QJsonObject json) {

    m_constituent_regions_isValid = ::OpenAPI::fromJsonValue(m_constituent_regions, json[QString("constituentRegions")]);
    m_constituent_regions_isSet = !json[QString("constituentRegions")].isNull() && m_constituent_regions_isValid;
}

QString OAIMultiRegionMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMultiRegionMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_constituent_regions.size() > 0) {
        obj.insert(QString("constituentRegions"), ::OpenAPI::toJsonValue(m_constituent_regions));
    }
    return obj;
}

QList<QString> OAIMultiRegionMetadata::getConstituentRegions() const {
    return m_constituent_regions;
}
void OAIMultiRegionMetadata::setConstituentRegions(const QList<QString> &constituent_regions) {
    m_constituent_regions = constituent_regions;
    m_constituent_regions_isSet = true;
}

bool OAIMultiRegionMetadata::is_constituent_regions_Set() const{
    return m_constituent_regions_isSet;
}

bool OAIMultiRegionMetadata::is_constituent_regions_Valid() const{
    return m_constituent_regions_isValid;
}

bool OAIMultiRegionMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_constituent_regions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMultiRegionMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
