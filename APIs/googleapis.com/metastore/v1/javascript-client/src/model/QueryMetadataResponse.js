/**
 * Dataproc Metastore API
 * The Dataproc Metastore API is used to manage the lifecycle and configuration of metastore services.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QueryMetadataResponse model module.
 * @module model/QueryMetadataResponse
 * @version v1
 */
class QueryMetadataResponse {
    /**
     * Constructs a new <code>QueryMetadataResponse</code>.
     * Response message for DataprocMetastore.QueryMetadata.
     * @alias module:model/QueryMetadataResponse
     */
    constructor() { 
        
        QueryMetadataResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QueryMetadataResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryMetadataResponse} obj Optional instance to populate.
     * @return {module:model/QueryMetadataResponse} The populated <code>QueryMetadataResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryMetadataResponse();

            if (data.hasOwnProperty('resultManifestUri')) {
                obj['resultManifestUri'] = ApiClient.convertToType(data['resultManifestUri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueryMetadataResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueryMetadataResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['resultManifestUri'] && !(typeof data['resultManifestUri'] === 'string' || data['resultManifestUri'] instanceof String)) {
            throw new Error("Expected the field `resultManifestUri` to be a primitive type in the JSON string but got " + data['resultManifestUri']);
        }

        return true;
    }


}



/**
 * The manifest URI is link to a JSON instance in Cloud Storage. This instance manifests immediately along with QueryMetadataResponse. The content of the URI is not retriable until the long-running operation query against the metadata finishes.
 * @member {String} resultManifestUri
 */
QueryMetadataResponse.prototype['resultManifestUri'] = undefined;






export default QueryMetadataResponse;

