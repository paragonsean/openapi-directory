# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.consumer import Consumer
from openapi_server import util


class NetworkConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, consumers: List[Consumer]=None):
        """NetworkConfig - a model defined in OpenAPI

        :param consumers: The consumers of this NetworkConfig.
        """
        self.openapi_types = {
            'consumers': List[Consumer]
        }

        self.attribute_map = {
            'consumers': 'consumers'
        }

        self._consumers = consumers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetworkConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NetworkConfig of this NetworkConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def consumers(self):
        """Gets the consumers of this NetworkConfig.

        Immutable. The consumer-side network configuration for the Dataproc Metastore instance.

        :return: The consumers of this NetworkConfig.
        :rtype: List[Consumer]
        """
        return self._consumers

    @consumers.setter
    def consumers(self, consumers):
        """Sets the consumers of this NetworkConfig.

        Immutable. The consumer-side network configuration for the Dataproc Metastore instance.

        :param consumers: The consumers of this NetworkConfig.
        :type consumers: List[Consumer]
        """

        self._consumers = consumers
