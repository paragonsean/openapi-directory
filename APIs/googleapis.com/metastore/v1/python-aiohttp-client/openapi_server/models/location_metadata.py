# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.hive_metastore_version import HiveMetastoreVersion
from openapi_server.models.multi_region_metadata import MultiRegionMetadata
from openapi_server import util


class LocationMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, multi_region_metadata: MultiRegionMetadata=None, supported_hive_metastore_versions: List[HiveMetastoreVersion]=None):
        """LocationMetadata - a model defined in OpenAPI

        :param multi_region_metadata: The multi_region_metadata of this LocationMetadata.
        :param supported_hive_metastore_versions: The supported_hive_metastore_versions of this LocationMetadata.
        """
        self.openapi_types = {
            'multi_region_metadata': MultiRegionMetadata,
            'supported_hive_metastore_versions': List[HiveMetastoreVersion]
        }

        self.attribute_map = {
            'multi_region_metadata': 'multiRegionMetadata',
            'supported_hive_metastore_versions': 'supportedHiveMetastoreVersions'
        }

        self._multi_region_metadata = multi_region_metadata
        self._supported_hive_metastore_versions = supported_hive_metastore_versions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LocationMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LocationMetadata of this LocationMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def multi_region_metadata(self):
        """Gets the multi_region_metadata of this LocationMetadata.


        :return: The multi_region_metadata of this LocationMetadata.
        :rtype: MultiRegionMetadata
        """
        return self._multi_region_metadata

    @multi_region_metadata.setter
    def multi_region_metadata(self, multi_region_metadata):
        """Sets the multi_region_metadata of this LocationMetadata.


        :param multi_region_metadata: The multi_region_metadata of this LocationMetadata.
        :type multi_region_metadata: MultiRegionMetadata
        """

        self._multi_region_metadata = multi_region_metadata

    @property
    def supported_hive_metastore_versions(self):
        """Gets the supported_hive_metastore_versions of this LocationMetadata.

        The versions of Hive Metastore that can be used when creating a new metastore service in this location. The server guarantees that exactly one HiveMetastoreVersion in the list will set is_default.

        :return: The supported_hive_metastore_versions of this LocationMetadata.
        :rtype: List[HiveMetastoreVersion]
        """
        return self._supported_hive_metastore_versions

    @supported_hive_metastore_versions.setter
    def supported_hive_metastore_versions(self, supported_hive_metastore_versions):
        """Sets the supported_hive_metastore_versions of this LocationMetadata.

        The versions of Hive Metastore that can be used when creating a new metastore service in this location. The server guarantees that exactly one HiveMetastoreVersion in the list will set is_default.

        :param supported_hive_metastore_versions: The supported_hive_metastore_versions of this LocationMetadata.
        :type supported_hive_metastore_versions: List[HiveMetastoreVersion]
        """

        self._supported_hive_metastore_versions = supported_hive_metastore_versions
