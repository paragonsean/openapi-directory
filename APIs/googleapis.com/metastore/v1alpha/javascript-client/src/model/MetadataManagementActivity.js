/**
 * Dataproc Metastore API
 * The Dataproc Metastore API is used to manage the lifecycle and configuration of metastore services.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MetadataExport from './MetadataExport';
import Restore from './Restore';

/**
 * The MetadataManagementActivity model module.
 * @module model/MetadataManagementActivity
 * @version v1alpha
 */
class MetadataManagementActivity {
    /**
     * Constructs a new <code>MetadataManagementActivity</code>.
     * The metadata management activities of the metastore service.
     * @alias module:model/MetadataManagementActivity
     */
    constructor() { 
        
        MetadataManagementActivity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MetadataManagementActivity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MetadataManagementActivity} obj Optional instance to populate.
     * @return {module:model/MetadataManagementActivity} The populated <code>MetadataManagementActivity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MetadataManagementActivity();

            if (data.hasOwnProperty('metadataExports')) {
                obj['metadataExports'] = ApiClient.convertToType(data['metadataExports'], [MetadataExport]);
            }
            if (data.hasOwnProperty('restores')) {
                obj['restores'] = ApiClient.convertToType(data['restores'], [Restore]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MetadataManagementActivity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MetadataManagementActivity</code>.
     */
    static validateJSON(data) {
        if (data['metadataExports']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['metadataExports'])) {
                throw new Error("Expected the field `metadataExports` to be an array in the JSON data but got " + data['metadataExports']);
            }
            // validate the optional field `metadataExports` (array)
            for (const item of data['metadataExports']) {
                MetadataExport.validateJSON(item);
            };
        }
        if (data['restores']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['restores'])) {
                throw new Error("Expected the field `restores` to be an array in the JSON data but got " + data['restores']);
            }
            // validate the optional field `restores` (array)
            for (const item of data['restores']) {
                Restore.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Output only. The latest metadata exports of the metastore service.
 * @member {Array.<module:model/MetadataExport>} metadataExports
 */
MetadataManagementActivity.prototype['metadataExports'] = undefined;

/**
 * Output only. The latest restores of the metastore service.
 * @member {Array.<module:model/Restore>} restores
 */
MetadataManagementActivity.prototype['restores'] = undefined;






export default MetadataManagementActivity;

