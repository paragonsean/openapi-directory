/**
 * Dataproc Metastore API
 * The Dataproc Metastore API is used to manage the lifecycle and configuration of metastore services.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LatestBackup model module.
 * @module model/LatestBackup
 * @version v1alpha
 */
class LatestBackup {
    /**
     * Constructs a new <code>LatestBackup</code>.
     * The details of the latest scheduled backup.
     * @alias module:model/LatestBackup
     */
    constructor() { 
        
        LatestBackup.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LatestBackup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LatestBackup} obj Optional instance to populate.
     * @return {module:model/LatestBackup} The populated <code>LatestBackup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LatestBackup();

            if (data.hasOwnProperty('backupId')) {
                obj['backupId'] = ApiClient.convertToType(data['backupId'], 'String');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LatestBackup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LatestBackup</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['backupId'] && !(typeof data['backupId'] === 'string' || data['backupId'] instanceof String)) {
            throw new Error("Expected the field `backupId` to be a primitive type in the JSON string but got " + data['backupId']);
        }
        // ensure the json data is a string
        if (data['duration'] && !(typeof data['duration'] === 'string' || data['duration'] instanceof String)) {
            throw new Error("Expected the field `duration` to be a primitive type in the JSON string but got " + data['duration']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * Output only. The ID of an in-progress scheduled backup. Empty if no backup is in progress.
 * @member {String} backupId
 */
LatestBackup.prototype['backupId'] = undefined;

/**
 * Output only. The duration of the backup completion.
 * @member {String} duration
 */
LatestBackup.prototype['duration'] = undefined;

/**
 * Output only. The time when the backup was started.
 * @member {String} startTime
 */
LatestBackup.prototype['startTime'] = undefined;

/**
 * Output only. The current state of the backup.
 * @member {module:model/LatestBackup.StateEnum} state
 */
LatestBackup.prototype['state'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
LatestBackup['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "IN_PROGRESS"
     * @const
     */
    "IN_PROGRESS": "IN_PROGRESS",

    /**
     * value: "SUCCEEDED"
     * @const
     */
    "SUCCEEDED": "SUCCEEDED",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED"
};



export default LatestBackup;

