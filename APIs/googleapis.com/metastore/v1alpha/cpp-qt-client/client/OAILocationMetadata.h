/**
 * Dataproc Metastore API
 * The Dataproc Metastore API is used to manage the lifecycle and configuration of metastore services.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILocationMetadata.h
 *
 * Metadata about the service in a location.
 */

#ifndef OAILocationMetadata_H
#define OAILocationMetadata_H

#include <QJsonObject>

#include "OAIHiveMetastoreVersion.h"
#include "OAIMultiRegionMetadata.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMultiRegionMetadata;
class OAIHiveMetastoreVersion;

class OAILocationMetadata : public OAIObject {
public:
    OAILocationMetadata();
    OAILocationMetadata(QString json);
    ~OAILocationMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMultiRegionMetadata getMultiRegionMetadata() const;
    void setMultiRegionMetadata(const OAIMultiRegionMetadata &multi_region_metadata);
    bool is_multi_region_metadata_Set() const;
    bool is_multi_region_metadata_Valid() const;

    QList<OAIHiveMetastoreVersion> getSupportedHiveMetastoreVersions() const;
    void setSupportedHiveMetastoreVersions(const QList<OAIHiveMetastoreVersion> &supported_hive_metastore_versions);
    bool is_supported_hive_metastore_versions_Set() const;
    bool is_supported_hive_metastore_versions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMultiRegionMetadata m_multi_region_metadata;
    bool m_multi_region_metadata_isSet;
    bool m_multi_region_metadata_isValid;

    QList<OAIHiveMetastoreVersion> m_supported_hive_metastore_versions;
    bool m_supported_hive_metastore_versions_isSet;
    bool m_supported_hive_metastore_versions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILocationMetadata)

#endif // OAILocationMetadata_H
