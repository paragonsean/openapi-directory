/**
 * Dataproc Metastore API
 * The Dataproc Metastore API is used to manage the lifecycle and configuration of metastore services.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBackendMetastore.h
 *
 * Represents a backend metastore for the federation.
 */

#ifndef OAIBackendMetastore_H
#define OAIBackendMetastore_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBackendMetastore : public OAIObject {
public:
    OAIBackendMetastore();
    OAIBackendMetastore(QString json);
    ~OAIBackendMetastore() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMetastoreType() const;
    void setMetastoreType(const QString &metastore_type);
    bool is_metastore_type_Set() const;
    bool is_metastore_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_metastore_type;
    bool m_metastore_type_isSet;
    bool m_metastore_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBackendMetastore)

#endif // OAIBackendMetastore_H
