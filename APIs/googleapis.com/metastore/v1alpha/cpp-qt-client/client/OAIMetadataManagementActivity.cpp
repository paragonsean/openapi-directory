/**
 * Dataproc Metastore API
 * The Dataproc Metastore API is used to manage the lifecycle and configuration of metastore services.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMetadataManagementActivity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMetadataManagementActivity::OAIMetadataManagementActivity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMetadataManagementActivity::OAIMetadataManagementActivity() {
    this->initializeModel();
}

OAIMetadataManagementActivity::~OAIMetadataManagementActivity() {}

void OAIMetadataManagementActivity::initializeModel() {

    m_metadata_exports_isSet = false;
    m_metadata_exports_isValid = false;

    m_restores_isSet = false;
    m_restores_isValid = false;
}

void OAIMetadataManagementActivity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMetadataManagementActivity::fromJsonObject(QJsonObject json) {

    m_metadata_exports_isValid = ::OpenAPI::fromJsonValue(m_metadata_exports, json[QString("metadataExports")]);
    m_metadata_exports_isSet = !json[QString("metadataExports")].isNull() && m_metadata_exports_isValid;

    m_restores_isValid = ::OpenAPI::fromJsonValue(m_restores, json[QString("restores")]);
    m_restores_isSet = !json[QString("restores")].isNull() && m_restores_isValid;
}

QString OAIMetadataManagementActivity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMetadataManagementActivity::asJsonObject() const {
    QJsonObject obj;
    if (m_metadata_exports.size() > 0) {
        obj.insert(QString("metadataExports"), ::OpenAPI::toJsonValue(m_metadata_exports));
    }
    if (m_restores.size() > 0) {
        obj.insert(QString("restores"), ::OpenAPI::toJsonValue(m_restores));
    }
    return obj;
}

QList<OAIMetadataExport> OAIMetadataManagementActivity::getMetadataExports() const {
    return m_metadata_exports;
}
void OAIMetadataManagementActivity::setMetadataExports(const QList<OAIMetadataExport> &metadata_exports) {
    m_metadata_exports = metadata_exports;
    m_metadata_exports_isSet = true;
}

bool OAIMetadataManagementActivity::is_metadata_exports_Set() const{
    return m_metadata_exports_isSet;
}

bool OAIMetadataManagementActivity::is_metadata_exports_Valid() const{
    return m_metadata_exports_isValid;
}

QList<OAIRestore> OAIMetadataManagementActivity::getRestores() const {
    return m_restores;
}
void OAIMetadataManagementActivity::setRestores(const QList<OAIRestore> &restores) {
    m_restores = restores;
    m_restores_isSet = true;
}

bool OAIMetadataManagementActivity::is_restores_Set() const{
    return m_restores_isSet;
}

bool OAIMetadataManagementActivity::is_restores_Valid() const{
    return m_restores_isValid;
}

bool OAIMetadataManagementActivity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_metadata_exports.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_restores.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMetadataManagementActivity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
