/**
 * Dataproc Metastore API
 * The Dataproc Metastore API is used to manage the lifecycle and configuration of metastore services.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINetworkConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINetworkConfig::OAINetworkConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINetworkConfig::OAINetworkConfig() {
    this->initializeModel();
}

OAINetworkConfig::~OAINetworkConfig() {}

void OAINetworkConfig::initializeModel() {

    m_consumers_isSet = false;
    m_consumers_isValid = false;

    m_custom_routes_enabled_isSet = false;
    m_custom_routes_enabled_isValid = false;
}

void OAINetworkConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINetworkConfig::fromJsonObject(QJsonObject json) {

    m_consumers_isValid = ::OpenAPI::fromJsonValue(m_consumers, json[QString("consumers")]);
    m_consumers_isSet = !json[QString("consumers")].isNull() && m_consumers_isValid;

    m_custom_routes_enabled_isValid = ::OpenAPI::fromJsonValue(m_custom_routes_enabled, json[QString("customRoutesEnabled")]);
    m_custom_routes_enabled_isSet = !json[QString("customRoutesEnabled")].isNull() && m_custom_routes_enabled_isValid;
}

QString OAINetworkConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINetworkConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_consumers.size() > 0) {
        obj.insert(QString("consumers"), ::OpenAPI::toJsonValue(m_consumers));
    }
    if (m_custom_routes_enabled_isSet) {
        obj.insert(QString("customRoutesEnabled"), ::OpenAPI::toJsonValue(m_custom_routes_enabled));
    }
    return obj;
}

QList<OAIConsumer> OAINetworkConfig::getConsumers() const {
    return m_consumers;
}
void OAINetworkConfig::setConsumers(const QList<OAIConsumer> &consumers) {
    m_consumers = consumers;
    m_consumers_isSet = true;
}

bool OAINetworkConfig::is_consumers_Set() const{
    return m_consumers_isSet;
}

bool OAINetworkConfig::is_consumers_Valid() const{
    return m_consumers_isValid;
}

bool OAINetworkConfig::isCustomRoutesEnabled() const {
    return m_custom_routes_enabled;
}
void OAINetworkConfig::setCustomRoutesEnabled(const bool &custom_routes_enabled) {
    m_custom_routes_enabled = custom_routes_enabled;
    m_custom_routes_enabled_isSet = true;
}

bool OAINetworkConfig::is_custom_routes_enabled_Set() const{
    return m_custom_routes_enabled_isSet;
}

bool OAINetworkConfig::is_custom_routes_enabled_Valid() const{
    return m_custom_routes_enabled_isValid;
}

bool OAINetworkConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_consumers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_routes_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINetworkConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
