# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.secret import Secret
from openapi_server import util


class KerberosConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, keytab: Secret=None, krb5_config_gcs_uri: str=None, principal: str=None):
        """KerberosConfig - a model defined in OpenAPI

        :param keytab: The keytab of this KerberosConfig.
        :param krb5_config_gcs_uri: The krb5_config_gcs_uri of this KerberosConfig.
        :param principal: The principal of this KerberosConfig.
        """
        self.openapi_types = {
            'keytab': Secret,
            'krb5_config_gcs_uri': str,
            'principal': str
        }

        self.attribute_map = {
            'keytab': 'keytab',
            'krb5_config_gcs_uri': 'krb5ConfigGcsUri',
            'principal': 'principal'
        }

        self._keytab = keytab
        self._krb5_config_gcs_uri = krb5_config_gcs_uri
        self._principal = principal

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KerberosConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KerberosConfig of this KerberosConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def keytab(self):
        """Gets the keytab of this KerberosConfig.


        :return: The keytab of this KerberosConfig.
        :rtype: Secret
        """
        return self._keytab

    @keytab.setter
    def keytab(self, keytab):
        """Sets the keytab of this KerberosConfig.


        :param keytab: The keytab of this KerberosConfig.
        :type keytab: Secret
        """

        self._keytab = keytab

    @property
    def krb5_config_gcs_uri(self):
        """Gets the krb5_config_gcs_uri of this KerberosConfig.

        A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf, although the file does not need to be named krb5.conf explicitly.

        :return: The krb5_config_gcs_uri of this KerberosConfig.
        :rtype: str
        """
        return self._krb5_config_gcs_uri

    @krb5_config_gcs_uri.setter
    def krb5_config_gcs_uri(self, krb5_config_gcs_uri):
        """Sets the krb5_config_gcs_uri of this KerberosConfig.

        A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf, although the file does not need to be named krb5.conf explicitly.

        :param krb5_config_gcs_uri: The krb5_config_gcs_uri of this KerberosConfig.
        :type krb5_config_gcs_uri: str
        """

        self._krb5_config_gcs_uri = krb5_config_gcs_uri

    @property
    def principal(self):
        """Gets the principal of this KerberosConfig.

        A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical principal is of the form primary/instance@REALM, but there is no exact format.

        :return: The principal of this KerberosConfig.
        :rtype: str
        """
        return self._principal

    @principal.setter
    def principal(self, principal):
        """Sets the principal of this KerberosConfig.

        A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical principal is of the form primary/instance@REALM, but there is no exact format.

        :param principal: The principal of this KerberosConfig.
        :type principal: str
        """

        self._principal = principal
