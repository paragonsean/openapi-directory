# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RemoveIamPolicyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asynchronous: bool=None):
        """RemoveIamPolicyRequest - a model defined in OpenAPI

        :param asynchronous: The asynchronous of this RemoveIamPolicyRequest.
        """
        self.openapi_types = {
            'asynchronous': bool
        }

        self.attribute_map = {
            'asynchronous': 'asynchronous'
        }

        self._asynchronous = asynchronous

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RemoveIamPolicyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RemoveIamPolicyRequest of this RemoveIamPolicyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asynchronous(self):
        """Gets the asynchronous of this RemoveIamPolicyRequest.

        Optional. Removes IAM policy attached to database or table asynchronously when it is set. The default is false.

        :return: The asynchronous of this RemoveIamPolicyRequest.
        :rtype: bool
        """
        return self._asynchronous

    @asynchronous.setter
    def asynchronous(self, asynchronous):
        """Sets the asynchronous of this RemoveIamPolicyRequest.

        Optional. Removes IAM policy attached to database or table asynchronously when it is set. The default is false.

        :param asynchronous: The asynchronous of this RemoveIamPolicyRequest.
        :type asynchronous: bool
        """

        self._asynchronous = asynchronous
