# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HiveMetastoreVersion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_default: bool=None, version: str=None):
        """HiveMetastoreVersion - a model defined in OpenAPI

        :param is_default: The is_default of this HiveMetastoreVersion.
        :param version: The version of this HiveMetastoreVersion.
        """
        self.openapi_types = {
            'is_default': bool,
            'version': str
        }

        self.attribute_map = {
            'is_default': 'isDefault',
            'version': 'version'
        }

        self._is_default = is_default
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HiveMetastoreVersion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HiveMetastoreVersion of this HiveMetastoreVersion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_default(self):
        """Gets the is_default of this HiveMetastoreVersion.

        Whether version will be chosen by the server if a metastore service is created with a HiveMetastoreConfig that omits the version.

        :return: The is_default of this HiveMetastoreVersion.
        :rtype: bool
        """
        return self._is_default

    @is_default.setter
    def is_default(self, is_default):
        """Sets the is_default of this HiveMetastoreVersion.

        Whether version will be chosen by the server if a metastore service is created with a HiveMetastoreConfig that omits the version.

        :param is_default: The is_default of this HiveMetastoreVersion.
        :type is_default: bool
        """

        self._is_default = is_default

    @property
    def version(self):
        """Gets the version of this HiveMetastoreVersion.

        The semantic version of the Hive Metastore software.

        :return: The version of this HiveMetastoreVersion.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this HiveMetastoreVersion.

        The semantic version of the Hive Metastore software.

        :param version: The version of this HiveMetastoreVersion.
        :type version: str
        """

        self._version = version
