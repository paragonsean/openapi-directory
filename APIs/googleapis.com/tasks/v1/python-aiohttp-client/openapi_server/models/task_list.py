# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TaskList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, etag: str=None, id: str=None, kind: str=None, self_link: str=None, title: str=None, updated: str=None):
        """TaskList - a model defined in OpenAPI

        :param etag: The etag of this TaskList.
        :param id: The id of this TaskList.
        :param kind: The kind of this TaskList.
        :param self_link: The self_link of this TaskList.
        :param title: The title of this TaskList.
        :param updated: The updated of this TaskList.
        """
        self.openapi_types = {
            'etag': str,
            'id': str,
            'kind': str,
            'self_link': str,
            'title': str,
            'updated': str
        }

        self.attribute_map = {
            'etag': 'etag',
            'id': 'id',
            'kind': 'kind',
            'self_link': 'selfLink',
            'title': 'title',
            'updated': 'updated'
        }

        self._etag = etag
        self._id = id
        self._kind = kind
        self._self_link = self_link
        self._title = title
        self._updated = updated

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TaskList of this TaskList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def etag(self):
        """Gets the etag of this TaskList.

        ETag of the resource.

        :return: The etag of this TaskList.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this TaskList.

        ETag of the resource.

        :param etag: The etag of this TaskList.
        :type etag: str
        """

        self._etag = etag

    @property
    def id(self):
        """Gets the id of this TaskList.

        Task list identifier.

        :return: The id of this TaskList.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TaskList.

        Task list identifier.

        :param id: The id of this TaskList.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this TaskList.

        Type of the resource. This is always \"tasks#taskList\".

        :return: The kind of this TaskList.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this TaskList.

        Type of the resource. This is always \"tasks#taskList\".

        :param kind: The kind of this TaskList.
        :type kind: str
        """

        self._kind = kind

    @property
    def self_link(self):
        """Gets the self_link of this TaskList.

        URL pointing to this task list. Used to retrieve, update, or delete this task list.

        :return: The self_link of this TaskList.
        :rtype: str
        """
        return self._self_link

    @self_link.setter
    def self_link(self, self_link):
        """Sets the self_link of this TaskList.

        URL pointing to this task list. Used to retrieve, update, or delete this task list.

        :param self_link: The self_link of this TaskList.
        :type self_link: str
        """

        self._self_link = self_link

    @property
    def title(self):
        """Gets the title of this TaskList.

        Title of the task list.

        :return: The title of this TaskList.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this TaskList.

        Title of the task list.

        :param title: The title of this TaskList.
        :type title: str
        """

        self._title = title

    @property
    def updated(self):
        """Gets the updated of this TaskList.

        Last modification time of the task list (as a RFC 3339 timestamp).

        :return: The updated of this TaskList.
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this TaskList.

        Last modification time of the task list (as a RFC 3339 timestamp).

        :param updated: The updated of this TaskList.
        :type updated: str
        """

        self._updated = updated
