# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TaskLinksInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, link: str=None, type: str=None):
        """TaskLinksInner - a model defined in OpenAPI

        :param description: The description of this TaskLinksInner.
        :param link: The link of this TaskLinksInner.
        :param type: The type of this TaskLinksInner.
        """
        self.openapi_types = {
            'description': str,
            'link': str,
            'type': str
        }

        self.attribute_map = {
            'description': 'description',
            'link': 'link',
            'type': 'type'
        }

        self._description = description
        self._link = link
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskLinksInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Task_links_inner of this TaskLinksInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this TaskLinksInner.

        The description. In HTML speak: Everything between <a> and </a>.

        :return: The description of this TaskLinksInner.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this TaskLinksInner.

        The description. In HTML speak: Everything between <a> and </a>.

        :param description: The description of this TaskLinksInner.
        :type description: str
        """

        self._description = description

    @property
    def link(self):
        """Gets the link of this TaskLinksInner.

        The URL.

        :return: The link of this TaskLinksInner.
        :rtype: str
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this TaskLinksInner.

        The URL.

        :param link: The link of this TaskLinksInner.
        :type link: str
        """

        self._link = link

    @property
    def type(self):
        """Gets the type of this TaskLinksInner.

        Type of the link, e.g. \"email\".

        :return: The type of this TaskLinksInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this TaskLinksInner.

        Type of the link, e.g. \"email\".

        :param type: The type of this TaskLinksInner.
        :type type: str
        """

        self._type = type
