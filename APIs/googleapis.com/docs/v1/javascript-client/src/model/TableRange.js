/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TableCellLocation from './TableCellLocation';

/**
 * The TableRange model module.
 * @module model/TableRange
 * @version v1
 */
class TableRange {
    /**
     * Constructs a new <code>TableRange</code>.
     * A table range represents a reference to a subset of a table. It&#39;s important to note that the cells specified by a table range do not necessarily form a rectangle. For example, let&#39;s say we have a 3 x 3 table where all the cells of the last row are merged together. The table looks like this: [ ] A table range with table cell location &#x3D; (table_start_location, row &#x3D; 0, column &#x3D; 0), row span &#x3D; 3 and column span &#x3D; 2 specifies the following cells: x x [ x x x ]
     * @alias module:model/TableRange
     */
    constructor() { 
        
        TableRange.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TableRange</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TableRange} obj Optional instance to populate.
     * @return {module:model/TableRange} The populated <code>TableRange</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TableRange();

            if (data.hasOwnProperty('columnSpan')) {
                obj['columnSpan'] = ApiClient.convertToType(data['columnSpan'], 'Number');
            }
            if (data.hasOwnProperty('rowSpan')) {
                obj['rowSpan'] = ApiClient.convertToType(data['rowSpan'], 'Number');
            }
            if (data.hasOwnProperty('tableCellLocation')) {
                obj['tableCellLocation'] = TableCellLocation.constructFromObject(data['tableCellLocation']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TableRange</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TableRange</code>.
     */
    static validateJSON(data) {
        // validate the optional field `tableCellLocation`
        if (data['tableCellLocation']) { // data not null
          TableCellLocation.validateJSON(data['tableCellLocation']);
        }

        return true;
    }


}



/**
 * The column span of the table range.
 * @member {Number} columnSpan
 */
TableRange.prototype['columnSpan'] = undefined;

/**
 * The row span of the table range.
 * @member {Number} rowSpan
 */
TableRange.prototype['rowSpan'] = undefined;

/**
 * @member {module:model/TableCellLocation} tableCellLocation
 */
TableRange.prototype['tableCellLocation'] = undefined;






export default TableRange;

