/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReplaceAllTextResponse model module.
 * @module model/ReplaceAllTextResponse
 * @version v1
 */
class ReplaceAllTextResponse {
    /**
     * Constructs a new <code>ReplaceAllTextResponse</code>.
     * The result of replacing text.
     * @alias module:model/ReplaceAllTextResponse
     */
    constructor() { 
        
        ReplaceAllTextResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReplaceAllTextResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReplaceAllTextResponse} obj Optional instance to populate.
     * @return {module:model/ReplaceAllTextResponse} The populated <code>ReplaceAllTextResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReplaceAllTextResponse();

            if (data.hasOwnProperty('occurrencesChanged')) {
                obj['occurrencesChanged'] = ApiClient.convertToType(data['occurrencesChanged'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReplaceAllTextResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReplaceAllTextResponse</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The number of occurrences changed by replacing all text.
 * @member {Number} occurrencesChanged
 */
ReplaceAllTextResponse.prototype['occurrencesChanged'] = undefined;






export default ReplaceAllTextResponse;

