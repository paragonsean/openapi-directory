/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EmbeddedObjectBorderSuggestionState model module.
 * @module model/EmbeddedObjectBorderSuggestionState
 * @version v1
 */
class EmbeddedObjectBorderSuggestionState {
    /**
     * Constructs a new <code>EmbeddedObjectBorderSuggestionState</code>.
     * A mask that indicates which of the fields on the base EmbeddedObjectBorder have been changed in this suggestion. For any field set to true, there&#39;s a new suggested value.
     * @alias module:model/EmbeddedObjectBorderSuggestionState
     */
    constructor() { 
        
        EmbeddedObjectBorderSuggestionState.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EmbeddedObjectBorderSuggestionState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EmbeddedObjectBorderSuggestionState} obj Optional instance to populate.
     * @return {module:model/EmbeddedObjectBorderSuggestionState} The populated <code>EmbeddedObjectBorderSuggestionState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EmbeddedObjectBorderSuggestionState();

            if (data.hasOwnProperty('colorSuggested')) {
                obj['colorSuggested'] = ApiClient.convertToType(data['colorSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('dashStyleSuggested')) {
                obj['dashStyleSuggested'] = ApiClient.convertToType(data['dashStyleSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('propertyStateSuggested')) {
                obj['propertyStateSuggested'] = ApiClient.convertToType(data['propertyStateSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('widthSuggested')) {
                obj['widthSuggested'] = ApiClient.convertToType(data['widthSuggested'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EmbeddedObjectBorderSuggestionState</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EmbeddedObjectBorderSuggestionState</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Indicates if there was a suggested change to color.
 * @member {Boolean} colorSuggested
 */
EmbeddedObjectBorderSuggestionState.prototype['colorSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to dash_style.
 * @member {Boolean} dashStyleSuggested
 */
EmbeddedObjectBorderSuggestionState.prototype['dashStyleSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to property_state.
 * @member {Boolean} propertyStateSuggested
 */
EmbeddedObjectBorderSuggestionState.prototype['propertyStateSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to width.
 * @member {Boolean} widthSuggested
 */
EmbeddedObjectBorderSuggestionState.prototype['widthSuggested'] = undefined;






export default EmbeddedObjectBorderSuggestionState;

