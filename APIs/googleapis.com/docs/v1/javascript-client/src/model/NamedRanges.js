/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NamedRange from './NamedRange';

/**
 * The NamedRanges model module.
 * @module model/NamedRanges
 * @version v1
 */
class NamedRanges {
    /**
     * Constructs a new <code>NamedRanges</code>.
     * A collection of all the NamedRanges in the document that share a given name.
     * @alias module:model/NamedRanges
     */
    constructor() { 
        
        NamedRanges.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NamedRanges</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NamedRanges} obj Optional instance to populate.
     * @return {module:model/NamedRanges} The populated <code>NamedRanges</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NamedRanges();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('namedRanges')) {
                obj['namedRanges'] = ApiClient.convertToType(data['namedRanges'], [NamedRange]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NamedRanges</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NamedRanges</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['namedRanges']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['namedRanges'])) {
                throw new Error("Expected the field `namedRanges` to be an array in the JSON data but got " + data['namedRanges']);
            }
            // validate the optional field `namedRanges` (array)
            for (const item of data['namedRanges']) {
                NamedRange.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The name that all the named ranges share.
 * @member {String} name
 */
NamedRanges.prototype['name'] = undefined;

/**
 * The NamedRanges that share the same name.
 * @member {Array.<module:model/NamedRange>} namedRanges
 */
NamedRanges.prototype['namedRanges'] = undefined;






export default NamedRanges;

