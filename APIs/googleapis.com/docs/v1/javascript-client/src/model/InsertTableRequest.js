/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EndOfSegmentLocation from './EndOfSegmentLocation';
import Location from './Location';

/**
 * The InsertTableRequest model module.
 * @module model/InsertTableRequest
 * @version v1
 */
class InsertTableRequest {
    /**
     * Constructs a new <code>InsertTableRequest</code>.
     * Inserts a table at the specified location. A newline character will be inserted before the inserted table.
     * @alias module:model/InsertTableRequest
     */
    constructor() { 
        
        InsertTableRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InsertTableRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InsertTableRequest} obj Optional instance to populate.
     * @return {module:model/InsertTableRequest} The populated <code>InsertTableRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InsertTableRequest();

            if (data.hasOwnProperty('columns')) {
                obj['columns'] = ApiClient.convertToType(data['columns'], 'Number');
            }
            if (data.hasOwnProperty('endOfSegmentLocation')) {
                obj['endOfSegmentLocation'] = EndOfSegmentLocation.constructFromObject(data['endOfSegmentLocation']);
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = Location.constructFromObject(data['location']);
            }
            if (data.hasOwnProperty('rows')) {
                obj['rows'] = ApiClient.convertToType(data['rows'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InsertTableRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InsertTableRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `endOfSegmentLocation`
        if (data['endOfSegmentLocation']) { // data not null
          EndOfSegmentLocation.validateJSON(data['endOfSegmentLocation']);
        }
        // validate the optional field `location`
        if (data['location']) { // data not null
          Location.validateJSON(data['location']);
        }

        return true;
    }


}



/**
 * The number of columns in the table.
 * @member {Number} columns
 */
InsertTableRequest.prototype['columns'] = undefined;

/**
 * @member {module:model/EndOfSegmentLocation} endOfSegmentLocation
 */
InsertTableRequest.prototype['endOfSegmentLocation'] = undefined;

/**
 * @member {module:model/Location} location
 */
InsertTableRequest.prototype['location'] = undefined;

/**
 * The number of rows in the table.
 * @member {Number} rows
 */
InsertTableRequest.prototype['rows'] = undefined;






export default InsertTableRequest;

