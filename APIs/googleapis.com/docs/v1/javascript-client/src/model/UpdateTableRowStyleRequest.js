/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Location from './Location';
import TableRowStyle from './TableRowStyle';

/**
 * The UpdateTableRowStyleRequest model module.
 * @module model/UpdateTableRowStyleRequest
 * @version v1
 */
class UpdateTableRowStyleRequest {
    /**
     * Constructs a new <code>UpdateTableRowStyleRequest</code>.
     * Updates the TableRowStyle of rows in a table.
     * @alias module:model/UpdateTableRowStyleRequest
     */
    constructor() { 
        
        UpdateTableRowStyleRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateTableRowStyleRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateTableRowStyleRequest} obj Optional instance to populate.
     * @return {module:model/UpdateTableRowStyleRequest} The populated <code>UpdateTableRowStyleRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateTableRowStyleRequest();

            if (data.hasOwnProperty('fields')) {
                obj['fields'] = ApiClient.convertToType(data['fields'], 'String');
            }
            if (data.hasOwnProperty('rowIndices')) {
                obj['rowIndices'] = ApiClient.convertToType(data['rowIndices'], ['Number']);
            }
            if (data.hasOwnProperty('tableRowStyle')) {
                obj['tableRowStyle'] = TableRowStyle.constructFromObject(data['tableRowStyle']);
            }
            if (data.hasOwnProperty('tableStartLocation')) {
                obj['tableStartLocation'] = Location.constructFromObject(data['tableStartLocation']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateTableRowStyleRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateTableRowStyleRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['fields'] && !(typeof data['fields'] === 'string' || data['fields'] instanceof String)) {
            throw new Error("Expected the field `fields` to be a primitive type in the JSON string but got " + data['fields']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['rowIndices'])) {
            throw new Error("Expected the field `rowIndices` to be an array in the JSON data but got " + data['rowIndices']);
        }
        // validate the optional field `tableRowStyle`
        if (data['tableRowStyle']) { // data not null
          TableRowStyle.validateJSON(data['tableRowStyle']);
        }
        // validate the optional field `tableStartLocation`
        if (data['tableStartLocation']) { // data not null
          Location.validateJSON(data['tableStartLocation']);
        }

        return true;
    }


}



/**
 * The fields that should be updated. At least one field must be specified. The root `tableRowStyle` is implied and should not be specified. A single `\"*\"` can be used as short-hand for listing every field. For example to update the minimum row height, set `fields` to `\"min_row_height\"`.
 * @member {String} fields
 */
UpdateTableRowStyleRequest.prototype['fields'] = undefined;

/**
 * The list of zero-based row indices whose style should be updated. If no indices are specified, all rows will be updated.
 * @member {Array.<Number>} rowIndices
 */
UpdateTableRowStyleRequest.prototype['rowIndices'] = undefined;

/**
 * @member {module:model/TableRowStyle} tableRowStyle
 */
UpdateTableRowStyleRequest.prototype['tableRowStyle'] = undefined;

/**
 * @member {module:model/Location} tableStartLocation
 */
UpdateTableRowStyleRequest.prototype['tableStartLocation'] = undefined;






export default UpdateTableRowStyleRequest;

