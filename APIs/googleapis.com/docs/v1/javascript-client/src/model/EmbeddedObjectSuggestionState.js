/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EmbeddedObjectBorderSuggestionState from './EmbeddedObjectBorderSuggestionState';
import ImagePropertiesSuggestionState from './ImagePropertiesSuggestionState';
import LinkedContentReferenceSuggestionState from './LinkedContentReferenceSuggestionState';
import SizeSuggestionState from './SizeSuggestionState';

/**
 * The EmbeddedObjectSuggestionState model module.
 * @module model/EmbeddedObjectSuggestionState
 * @version v1
 */
class EmbeddedObjectSuggestionState {
    /**
     * Constructs a new <code>EmbeddedObjectSuggestionState</code>.
     * A mask that indicates which of the fields on the base EmbeddedObject have been changed in this suggestion. For any field set to true, there&#39;s a new suggested value.
     * @alias module:model/EmbeddedObjectSuggestionState
     */
    constructor() { 
        
        EmbeddedObjectSuggestionState.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EmbeddedObjectSuggestionState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EmbeddedObjectSuggestionState} obj Optional instance to populate.
     * @return {module:model/EmbeddedObjectSuggestionState} The populated <code>EmbeddedObjectSuggestionState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EmbeddedObjectSuggestionState();

            if (data.hasOwnProperty('descriptionSuggested')) {
                obj['descriptionSuggested'] = ApiClient.convertToType(data['descriptionSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('embeddedDrawingPropertiesSuggestionState')) {
                obj['embeddedDrawingPropertiesSuggestionState'] = ApiClient.convertToType(data['embeddedDrawingPropertiesSuggestionState'], Object);
            }
            if (data.hasOwnProperty('embeddedObjectBorderSuggestionState')) {
                obj['embeddedObjectBorderSuggestionState'] = EmbeddedObjectBorderSuggestionState.constructFromObject(data['embeddedObjectBorderSuggestionState']);
            }
            if (data.hasOwnProperty('imagePropertiesSuggestionState')) {
                obj['imagePropertiesSuggestionState'] = ImagePropertiesSuggestionState.constructFromObject(data['imagePropertiesSuggestionState']);
            }
            if (data.hasOwnProperty('linkedContentReferenceSuggestionState')) {
                obj['linkedContentReferenceSuggestionState'] = LinkedContentReferenceSuggestionState.constructFromObject(data['linkedContentReferenceSuggestionState']);
            }
            if (data.hasOwnProperty('marginBottomSuggested')) {
                obj['marginBottomSuggested'] = ApiClient.convertToType(data['marginBottomSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('marginLeftSuggested')) {
                obj['marginLeftSuggested'] = ApiClient.convertToType(data['marginLeftSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('marginRightSuggested')) {
                obj['marginRightSuggested'] = ApiClient.convertToType(data['marginRightSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('marginTopSuggested')) {
                obj['marginTopSuggested'] = ApiClient.convertToType(data['marginTopSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('sizeSuggestionState')) {
                obj['sizeSuggestionState'] = SizeSuggestionState.constructFromObject(data['sizeSuggestionState']);
            }
            if (data.hasOwnProperty('titleSuggested')) {
                obj['titleSuggested'] = ApiClient.convertToType(data['titleSuggested'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EmbeddedObjectSuggestionState</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EmbeddedObjectSuggestionState</code>.
     */
    static validateJSON(data) {
        // validate the optional field `embeddedObjectBorderSuggestionState`
        if (data['embeddedObjectBorderSuggestionState']) { // data not null
          EmbeddedObjectBorderSuggestionState.validateJSON(data['embeddedObjectBorderSuggestionState']);
        }
        // validate the optional field `imagePropertiesSuggestionState`
        if (data['imagePropertiesSuggestionState']) { // data not null
          ImagePropertiesSuggestionState.validateJSON(data['imagePropertiesSuggestionState']);
        }
        // validate the optional field `linkedContentReferenceSuggestionState`
        if (data['linkedContentReferenceSuggestionState']) { // data not null
          LinkedContentReferenceSuggestionState.validateJSON(data['linkedContentReferenceSuggestionState']);
        }
        // validate the optional field `sizeSuggestionState`
        if (data['sizeSuggestionState']) { // data not null
          SizeSuggestionState.validateJSON(data['sizeSuggestionState']);
        }

        return true;
    }


}



/**
 * Indicates if there was a suggested change to description.
 * @member {Boolean} descriptionSuggested
 */
EmbeddedObjectSuggestionState.prototype['descriptionSuggested'] = undefined;

/**
 * A mask that indicates which of the fields on the base EmbeddedDrawingProperties have been changed in this suggestion. For any field set to true, there's a new suggested value.
 * @member {Object} embeddedDrawingPropertiesSuggestionState
 */
EmbeddedObjectSuggestionState.prototype['embeddedDrawingPropertiesSuggestionState'] = undefined;

/**
 * @member {module:model/EmbeddedObjectBorderSuggestionState} embeddedObjectBorderSuggestionState
 */
EmbeddedObjectSuggestionState.prototype['embeddedObjectBorderSuggestionState'] = undefined;

/**
 * @member {module:model/ImagePropertiesSuggestionState} imagePropertiesSuggestionState
 */
EmbeddedObjectSuggestionState.prototype['imagePropertiesSuggestionState'] = undefined;

/**
 * @member {module:model/LinkedContentReferenceSuggestionState} linkedContentReferenceSuggestionState
 */
EmbeddedObjectSuggestionState.prototype['linkedContentReferenceSuggestionState'] = undefined;

/**
 * Indicates if there was a suggested change to margin_bottom.
 * @member {Boolean} marginBottomSuggested
 */
EmbeddedObjectSuggestionState.prototype['marginBottomSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to margin_left.
 * @member {Boolean} marginLeftSuggested
 */
EmbeddedObjectSuggestionState.prototype['marginLeftSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to margin_right.
 * @member {Boolean} marginRightSuggested
 */
EmbeddedObjectSuggestionState.prototype['marginRightSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to margin_top.
 * @member {Boolean} marginTopSuggested
 */
EmbeddedObjectSuggestionState.prototype['marginTopSuggested'] = undefined;

/**
 * @member {module:model/SizeSuggestionState} sizeSuggestionState
 */
EmbeddedObjectSuggestionState.prototype['sizeSuggestionState'] = undefined;

/**
 * Indicates if there was a suggested change to title.
 * @member {Boolean} titleSuggested
 */
EmbeddedObjectSuggestionState.prototype['titleSuggested'] = undefined;






export default EmbeddedObjectSuggestionState;

