/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Background from './Background';
import Dimension from './Dimension';
import Size from './Size';

/**
 * The DocumentStyle model module.
 * @module model/DocumentStyle
 * @version v1
 */
class DocumentStyle {
    /**
     * Constructs a new <code>DocumentStyle</code>.
     * The style of the document.
     * @alias module:model/DocumentStyle
     */
    constructor() { 
        
        DocumentStyle.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DocumentStyle</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DocumentStyle} obj Optional instance to populate.
     * @return {module:model/DocumentStyle} The populated <code>DocumentStyle</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DocumentStyle();

            if (data.hasOwnProperty('background')) {
                obj['background'] = Background.constructFromObject(data['background']);
            }
            if (data.hasOwnProperty('defaultFooterId')) {
                obj['defaultFooterId'] = ApiClient.convertToType(data['defaultFooterId'], 'String');
            }
            if (data.hasOwnProperty('defaultHeaderId')) {
                obj['defaultHeaderId'] = ApiClient.convertToType(data['defaultHeaderId'], 'String');
            }
            if (data.hasOwnProperty('evenPageFooterId')) {
                obj['evenPageFooterId'] = ApiClient.convertToType(data['evenPageFooterId'], 'String');
            }
            if (data.hasOwnProperty('evenPageHeaderId')) {
                obj['evenPageHeaderId'] = ApiClient.convertToType(data['evenPageHeaderId'], 'String');
            }
            if (data.hasOwnProperty('firstPageFooterId')) {
                obj['firstPageFooterId'] = ApiClient.convertToType(data['firstPageFooterId'], 'String');
            }
            if (data.hasOwnProperty('firstPageHeaderId')) {
                obj['firstPageHeaderId'] = ApiClient.convertToType(data['firstPageHeaderId'], 'String');
            }
            if (data.hasOwnProperty('flipPageOrientation')) {
                obj['flipPageOrientation'] = ApiClient.convertToType(data['flipPageOrientation'], 'Boolean');
            }
            if (data.hasOwnProperty('marginBottom')) {
                obj['marginBottom'] = Dimension.constructFromObject(data['marginBottom']);
            }
            if (data.hasOwnProperty('marginFooter')) {
                obj['marginFooter'] = Dimension.constructFromObject(data['marginFooter']);
            }
            if (data.hasOwnProperty('marginHeader')) {
                obj['marginHeader'] = Dimension.constructFromObject(data['marginHeader']);
            }
            if (data.hasOwnProperty('marginLeft')) {
                obj['marginLeft'] = Dimension.constructFromObject(data['marginLeft']);
            }
            if (data.hasOwnProperty('marginRight')) {
                obj['marginRight'] = Dimension.constructFromObject(data['marginRight']);
            }
            if (data.hasOwnProperty('marginTop')) {
                obj['marginTop'] = Dimension.constructFromObject(data['marginTop']);
            }
            if (data.hasOwnProperty('pageNumberStart')) {
                obj['pageNumberStart'] = ApiClient.convertToType(data['pageNumberStart'], 'Number');
            }
            if (data.hasOwnProperty('pageSize')) {
                obj['pageSize'] = Size.constructFromObject(data['pageSize']);
            }
            if (data.hasOwnProperty('useCustomHeaderFooterMargins')) {
                obj['useCustomHeaderFooterMargins'] = ApiClient.convertToType(data['useCustomHeaderFooterMargins'], 'Boolean');
            }
            if (data.hasOwnProperty('useEvenPageHeaderFooter')) {
                obj['useEvenPageHeaderFooter'] = ApiClient.convertToType(data['useEvenPageHeaderFooter'], 'Boolean');
            }
            if (data.hasOwnProperty('useFirstPageHeaderFooter')) {
                obj['useFirstPageHeaderFooter'] = ApiClient.convertToType(data['useFirstPageHeaderFooter'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DocumentStyle</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DocumentStyle</code>.
     */
    static validateJSON(data) {
        // validate the optional field `background`
        if (data['background']) { // data not null
          Background.validateJSON(data['background']);
        }
        // ensure the json data is a string
        if (data['defaultFooterId'] && !(typeof data['defaultFooterId'] === 'string' || data['defaultFooterId'] instanceof String)) {
            throw new Error("Expected the field `defaultFooterId` to be a primitive type in the JSON string but got " + data['defaultFooterId']);
        }
        // ensure the json data is a string
        if (data['defaultHeaderId'] && !(typeof data['defaultHeaderId'] === 'string' || data['defaultHeaderId'] instanceof String)) {
            throw new Error("Expected the field `defaultHeaderId` to be a primitive type in the JSON string but got " + data['defaultHeaderId']);
        }
        // ensure the json data is a string
        if (data['evenPageFooterId'] && !(typeof data['evenPageFooterId'] === 'string' || data['evenPageFooterId'] instanceof String)) {
            throw new Error("Expected the field `evenPageFooterId` to be a primitive type in the JSON string but got " + data['evenPageFooterId']);
        }
        // ensure the json data is a string
        if (data['evenPageHeaderId'] && !(typeof data['evenPageHeaderId'] === 'string' || data['evenPageHeaderId'] instanceof String)) {
            throw new Error("Expected the field `evenPageHeaderId` to be a primitive type in the JSON string but got " + data['evenPageHeaderId']);
        }
        // ensure the json data is a string
        if (data['firstPageFooterId'] && !(typeof data['firstPageFooterId'] === 'string' || data['firstPageFooterId'] instanceof String)) {
            throw new Error("Expected the field `firstPageFooterId` to be a primitive type in the JSON string but got " + data['firstPageFooterId']);
        }
        // ensure the json data is a string
        if (data['firstPageHeaderId'] && !(typeof data['firstPageHeaderId'] === 'string' || data['firstPageHeaderId'] instanceof String)) {
            throw new Error("Expected the field `firstPageHeaderId` to be a primitive type in the JSON string but got " + data['firstPageHeaderId']);
        }
        // validate the optional field `marginBottom`
        if (data['marginBottom']) { // data not null
          Dimension.validateJSON(data['marginBottom']);
        }
        // validate the optional field `marginFooter`
        if (data['marginFooter']) { // data not null
          Dimension.validateJSON(data['marginFooter']);
        }
        // validate the optional field `marginHeader`
        if (data['marginHeader']) { // data not null
          Dimension.validateJSON(data['marginHeader']);
        }
        // validate the optional field `marginLeft`
        if (data['marginLeft']) { // data not null
          Dimension.validateJSON(data['marginLeft']);
        }
        // validate the optional field `marginRight`
        if (data['marginRight']) { // data not null
          Dimension.validateJSON(data['marginRight']);
        }
        // validate the optional field `marginTop`
        if (data['marginTop']) { // data not null
          Dimension.validateJSON(data['marginTop']);
        }
        // validate the optional field `pageSize`
        if (data['pageSize']) { // data not null
          Size.validateJSON(data['pageSize']);
        }

        return true;
    }


}



/**
 * @member {module:model/Background} background
 */
DocumentStyle.prototype['background'] = undefined;

/**
 * The ID of the default footer. If not set, there's no default footer. This property is read-only.
 * @member {String} defaultFooterId
 */
DocumentStyle.prototype['defaultFooterId'] = undefined;

/**
 * The ID of the default header. If not set, there's no default header. This property is read-only.
 * @member {String} defaultHeaderId
 */
DocumentStyle.prototype['defaultHeaderId'] = undefined;

/**
 * The ID of the footer used only for even pages. The value of use_even_page_header_footer determines whether to use the default_footer_id or this value for the footer on even pages. If not set, there's no even page footer. This property is read-only.
 * @member {String} evenPageFooterId
 */
DocumentStyle.prototype['evenPageFooterId'] = undefined;

/**
 * The ID of the header used only for even pages. The value of use_even_page_header_footer determines whether to use the default_header_id or this value for the header on even pages. If not set, there's no even page header. This property is read-only.
 * @member {String} evenPageHeaderId
 */
DocumentStyle.prototype['evenPageHeaderId'] = undefined;

/**
 * The ID of the footer used only for the first page. If not set then a unique footer for the first page does not exist. The value of use_first_page_header_footer determines whether to use the default_footer_id or this value for the footer on the first page. If not set, there's no first page footer. This property is read-only.
 * @member {String} firstPageFooterId
 */
DocumentStyle.prototype['firstPageFooterId'] = undefined;

/**
 * The ID of the header used only for the first page. If not set then a unique header for the first page does not exist. The value of use_first_page_header_footer determines whether to use the default_header_id or this value for the header on the first page. If not set, there's no first page header. This property is read-only.
 * @member {String} firstPageHeaderId
 */
DocumentStyle.prototype['firstPageHeaderId'] = undefined;

/**
 * Optional. Indicates whether to flip the dimensions of the page_size, which allows changing the page orientation between portrait and landscape.
 * @member {Boolean} flipPageOrientation
 */
DocumentStyle.prototype['flipPageOrientation'] = undefined;

/**
 * @member {module:model/Dimension} marginBottom
 */
DocumentStyle.prototype['marginBottom'] = undefined;

/**
 * @member {module:model/Dimension} marginFooter
 */
DocumentStyle.prototype['marginFooter'] = undefined;

/**
 * @member {module:model/Dimension} marginHeader
 */
DocumentStyle.prototype['marginHeader'] = undefined;

/**
 * @member {module:model/Dimension} marginLeft
 */
DocumentStyle.prototype['marginLeft'] = undefined;

/**
 * @member {module:model/Dimension} marginRight
 */
DocumentStyle.prototype['marginRight'] = undefined;

/**
 * @member {module:model/Dimension} marginTop
 */
DocumentStyle.prototype['marginTop'] = undefined;

/**
 * The page number from which to start counting the number of pages.
 * @member {Number} pageNumberStart
 */
DocumentStyle.prototype['pageNumberStart'] = undefined;

/**
 * @member {module:model/Size} pageSize
 */
DocumentStyle.prototype['pageSize'] = undefined;

/**
 * Indicates whether DocumentStyle margin_header, SectionStyle margin_header and DocumentStyle margin_footer, SectionStyle margin_footer are respected. When false, the default values in the Docs editor for header and footer margin are used. This property is read-only.
 * @member {Boolean} useCustomHeaderFooterMargins
 */
DocumentStyle.prototype['useCustomHeaderFooterMargins'] = undefined;

/**
 * Indicates whether to use the even page header / footer IDs for the even pages.
 * @member {Boolean} useEvenPageHeaderFooter
 */
DocumentStyle.prototype['useEvenPageHeaderFooter'] = undefined;

/**
 * Indicates whether to use the first page header / footer IDs for the first page.
 * @member {Boolean} useFirstPageHeaderFooter
 */
DocumentStyle.prototype['useFirstPageHeaderFooter'] = undefined;






export default DocumentStyle;

