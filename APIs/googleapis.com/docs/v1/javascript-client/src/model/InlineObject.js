/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InlineObjectProperties from './InlineObjectProperties';
import SuggestedInlineObjectProperties from './SuggestedInlineObjectProperties';

/**
 * The InlineObject model module.
 * @module model/InlineObject
 * @version v1
 */
class InlineObject {
    /**
     * Constructs a new <code>InlineObject</code>.
     * An object that appears inline with text. An InlineObject contains an EmbeddedObject such as an image.
     * @alias module:model/InlineObject
     */
    constructor() { 
        
        InlineObject.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineObject} obj Optional instance to populate.
     * @return {module:model/InlineObject} The populated <code>InlineObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineObject();

            if (data.hasOwnProperty('inlineObjectProperties')) {
                obj['inlineObjectProperties'] = InlineObjectProperties.constructFromObject(data['inlineObjectProperties']);
            }
            if (data.hasOwnProperty('objectId')) {
                obj['objectId'] = ApiClient.convertToType(data['objectId'], 'String');
            }
            if (data.hasOwnProperty('suggestedDeletionIds')) {
                obj['suggestedDeletionIds'] = ApiClient.convertToType(data['suggestedDeletionIds'], ['String']);
            }
            if (data.hasOwnProperty('suggestedInlineObjectPropertiesChanges')) {
                obj['suggestedInlineObjectPropertiesChanges'] = ApiClient.convertToType(data['suggestedInlineObjectPropertiesChanges'], {'String': SuggestedInlineObjectProperties});
            }
            if (data.hasOwnProperty('suggestedInsertionId')) {
                obj['suggestedInsertionId'] = ApiClient.convertToType(data['suggestedInsertionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InlineObject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InlineObject</code>.
     */
    static validateJSON(data) {
        // validate the optional field `inlineObjectProperties`
        if (data['inlineObjectProperties']) { // data not null
          InlineObjectProperties.validateJSON(data['inlineObjectProperties']);
        }
        // ensure the json data is a string
        if (data['objectId'] && !(typeof data['objectId'] === 'string' || data['objectId'] instanceof String)) {
            throw new Error("Expected the field `objectId` to be a primitive type in the JSON string but got " + data['objectId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['suggestedDeletionIds'])) {
            throw new Error("Expected the field `suggestedDeletionIds` to be an array in the JSON data but got " + data['suggestedDeletionIds']);
        }
        // ensure the json data is a string
        if (data['suggestedInsertionId'] && !(typeof data['suggestedInsertionId'] === 'string' || data['suggestedInsertionId'] instanceof String)) {
            throw new Error("Expected the field `suggestedInsertionId` to be a primitive type in the JSON string but got " + data['suggestedInsertionId']);
        }

        return true;
    }


}



/**
 * @member {module:model/InlineObjectProperties} inlineObjectProperties
 */
InlineObject.prototype['inlineObjectProperties'] = undefined;

/**
 * The ID of this inline object. Can be used to update an objectâ€™s properties.
 * @member {String} objectId
 */
InlineObject.prototype['objectId'] = undefined;

/**
 * The suggested deletion IDs. If empty, then there are no suggested deletions of this content.
 * @member {Array.<String>} suggestedDeletionIds
 */
InlineObject.prototype['suggestedDeletionIds'] = undefined;

/**
 * The suggested changes to the inline object properties, keyed by suggestion ID.
 * @member {Object.<String, module:model/SuggestedInlineObjectProperties>} suggestedInlineObjectPropertiesChanges
 */
InlineObject.prototype['suggestedInlineObjectPropertiesChanges'] = undefined;

/**
 * The suggested insertion ID. If empty, then this is not a suggested insertion.
 * @member {String} suggestedInsertionId
 */
InlineObject.prototype['suggestedInsertionId'] = undefined;






export default InlineObject;

