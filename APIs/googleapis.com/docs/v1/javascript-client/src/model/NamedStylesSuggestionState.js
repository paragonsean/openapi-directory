/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NamedStyleSuggestionState from './NamedStyleSuggestionState';

/**
 * The NamedStylesSuggestionState model module.
 * @module model/NamedStylesSuggestionState
 * @version v1
 */
class NamedStylesSuggestionState {
    /**
     * Constructs a new <code>NamedStylesSuggestionState</code>.
     * The suggestion state of a NamedStyles message.
     * @alias module:model/NamedStylesSuggestionState
     */
    constructor() { 
        
        NamedStylesSuggestionState.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NamedStylesSuggestionState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NamedStylesSuggestionState} obj Optional instance to populate.
     * @return {module:model/NamedStylesSuggestionState} The populated <code>NamedStylesSuggestionState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NamedStylesSuggestionState();

            if (data.hasOwnProperty('stylesSuggestionStates')) {
                obj['stylesSuggestionStates'] = ApiClient.convertToType(data['stylesSuggestionStates'], [NamedStyleSuggestionState]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NamedStylesSuggestionState</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NamedStylesSuggestionState</code>.
     */
    static validateJSON(data) {
        if (data['stylesSuggestionStates']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['stylesSuggestionStates'])) {
                throw new Error("Expected the field `stylesSuggestionStates` to be an array in the JSON data but got " + data['stylesSuggestionStates']);
            }
            // validate the optional field `stylesSuggestionStates` (array)
            for (const item of data['stylesSuggestionStates']) {
                NamedStyleSuggestionState.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * A mask that indicates which of the fields on the corresponding NamedStyle in styles have been changed in this suggestion. The order of these named style suggestion states matches the order of the corresponding named style within the named styles suggestion.
 * @member {Array.<module:model/NamedStyleSuggestionState>} stylesSuggestionStates
 */
NamedStylesSuggestionState.prototype['stylesSuggestionStates'] = undefined;






export default NamedStylesSuggestionState;

