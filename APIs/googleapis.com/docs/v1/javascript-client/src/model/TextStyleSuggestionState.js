/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TextStyleSuggestionState model module.
 * @module model/TextStyleSuggestionState
 * @version v1
 */
class TextStyleSuggestionState {
    /**
     * Constructs a new <code>TextStyleSuggestionState</code>.
     * A mask that indicates which of the fields on the base TextStyle have been changed in this suggestion. For any field set to true, there&#39;s a new suggested value.
     * @alias module:model/TextStyleSuggestionState
     */
    constructor() { 
        
        TextStyleSuggestionState.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TextStyleSuggestionState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TextStyleSuggestionState} obj Optional instance to populate.
     * @return {module:model/TextStyleSuggestionState} The populated <code>TextStyleSuggestionState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TextStyleSuggestionState();

            if (data.hasOwnProperty('backgroundColorSuggested')) {
                obj['backgroundColorSuggested'] = ApiClient.convertToType(data['backgroundColorSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('baselineOffsetSuggested')) {
                obj['baselineOffsetSuggested'] = ApiClient.convertToType(data['baselineOffsetSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('boldSuggested')) {
                obj['boldSuggested'] = ApiClient.convertToType(data['boldSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('fontSizeSuggested')) {
                obj['fontSizeSuggested'] = ApiClient.convertToType(data['fontSizeSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('foregroundColorSuggested')) {
                obj['foregroundColorSuggested'] = ApiClient.convertToType(data['foregroundColorSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('italicSuggested')) {
                obj['italicSuggested'] = ApiClient.convertToType(data['italicSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('linkSuggested')) {
                obj['linkSuggested'] = ApiClient.convertToType(data['linkSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('smallCapsSuggested')) {
                obj['smallCapsSuggested'] = ApiClient.convertToType(data['smallCapsSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('strikethroughSuggested')) {
                obj['strikethroughSuggested'] = ApiClient.convertToType(data['strikethroughSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('underlineSuggested')) {
                obj['underlineSuggested'] = ApiClient.convertToType(data['underlineSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('weightedFontFamilySuggested')) {
                obj['weightedFontFamilySuggested'] = ApiClient.convertToType(data['weightedFontFamilySuggested'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TextStyleSuggestionState</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TextStyleSuggestionState</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Indicates if there was a suggested change to background_color.
 * @member {Boolean} backgroundColorSuggested
 */
TextStyleSuggestionState.prototype['backgroundColorSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to baseline_offset.
 * @member {Boolean} baselineOffsetSuggested
 */
TextStyleSuggestionState.prototype['baselineOffsetSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to bold.
 * @member {Boolean} boldSuggested
 */
TextStyleSuggestionState.prototype['boldSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to font_size.
 * @member {Boolean} fontSizeSuggested
 */
TextStyleSuggestionState.prototype['fontSizeSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to foreground_color.
 * @member {Boolean} foregroundColorSuggested
 */
TextStyleSuggestionState.prototype['foregroundColorSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to italic.
 * @member {Boolean} italicSuggested
 */
TextStyleSuggestionState.prototype['italicSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to link.
 * @member {Boolean} linkSuggested
 */
TextStyleSuggestionState.prototype['linkSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to small_caps.
 * @member {Boolean} smallCapsSuggested
 */
TextStyleSuggestionState.prototype['smallCapsSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to strikethrough.
 * @member {Boolean} strikethroughSuggested
 */
TextStyleSuggestionState.prototype['strikethroughSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to underline.
 * @member {Boolean} underlineSuggested
 */
TextStyleSuggestionState.prototype['underlineSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to weighted_font_family.
 * @member {Boolean} weightedFontFamilySuggested
 */
TextStyleSuggestionState.prototype['weightedFontFamilySuggested'] = undefined;






export default TextStyleSuggestionState;

