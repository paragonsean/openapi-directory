/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SuggestedTextStyle from './SuggestedTextStyle';
import TextStyle from './TextStyle';

/**
 * The ColumnBreak model module.
 * @module model/ColumnBreak
 * @version v1
 */
class ColumnBreak {
    /**
     * Constructs a new <code>ColumnBreak</code>.
     * A ParagraphElement representing a column break. A column break makes the subsequent text start at the top of the next column.
     * @alias module:model/ColumnBreak
     */
    constructor() { 
        
        ColumnBreak.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ColumnBreak</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ColumnBreak} obj Optional instance to populate.
     * @return {module:model/ColumnBreak} The populated <code>ColumnBreak</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ColumnBreak();

            if (data.hasOwnProperty('suggestedDeletionIds')) {
                obj['suggestedDeletionIds'] = ApiClient.convertToType(data['suggestedDeletionIds'], ['String']);
            }
            if (data.hasOwnProperty('suggestedInsertionIds')) {
                obj['suggestedInsertionIds'] = ApiClient.convertToType(data['suggestedInsertionIds'], ['String']);
            }
            if (data.hasOwnProperty('suggestedTextStyleChanges')) {
                obj['suggestedTextStyleChanges'] = ApiClient.convertToType(data['suggestedTextStyleChanges'], {'String': SuggestedTextStyle});
            }
            if (data.hasOwnProperty('textStyle')) {
                obj['textStyle'] = TextStyle.constructFromObject(data['textStyle']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ColumnBreak</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ColumnBreak</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['suggestedDeletionIds'])) {
            throw new Error("Expected the field `suggestedDeletionIds` to be an array in the JSON data but got " + data['suggestedDeletionIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['suggestedInsertionIds'])) {
            throw new Error("Expected the field `suggestedInsertionIds` to be an array in the JSON data but got " + data['suggestedInsertionIds']);
        }
        // validate the optional field `textStyle`
        if (data['textStyle']) { // data not null
          TextStyle.validateJSON(data['textStyle']);
        }

        return true;
    }


}



/**
 * The suggested deletion IDs. If empty, then there are no suggested deletions of this content.
 * @member {Array.<String>} suggestedDeletionIds
 */
ColumnBreak.prototype['suggestedDeletionIds'] = undefined;

/**
 * The suggested insertion IDs. A ColumnBreak may have multiple insertion IDs if it's a nested suggested change. If empty, then this is not a suggested insertion.
 * @member {Array.<String>} suggestedInsertionIds
 */
ColumnBreak.prototype['suggestedInsertionIds'] = undefined;

/**
 * The suggested text style changes to this ColumnBreak, keyed by suggestion ID.
 * @member {Object.<String, module:model/SuggestedTextStyle>} suggestedTextStyleChanges
 */
ColumnBreak.prototype['suggestedTextStyleChanges'] = undefined;

/**
 * @member {module:model/TextStyle} textStyle
 */
ColumnBreak.prototype['textStyle'] = undefined;






export default ColumnBreak;

