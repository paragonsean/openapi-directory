/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TableCellStyleSuggestionState model module.
 * @module model/TableCellStyleSuggestionState
 * @version v1
 */
class TableCellStyleSuggestionState {
    /**
     * Constructs a new <code>TableCellStyleSuggestionState</code>.
     * A mask that indicates which of the fields on the base TableCellStyle have been changed in this suggestion. For any field set to true, there&#39;s a new suggested value.
     * @alias module:model/TableCellStyleSuggestionState
     */
    constructor() { 
        
        TableCellStyleSuggestionState.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TableCellStyleSuggestionState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TableCellStyleSuggestionState} obj Optional instance to populate.
     * @return {module:model/TableCellStyleSuggestionState} The populated <code>TableCellStyleSuggestionState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TableCellStyleSuggestionState();

            if (data.hasOwnProperty('backgroundColorSuggested')) {
                obj['backgroundColorSuggested'] = ApiClient.convertToType(data['backgroundColorSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('borderBottomSuggested')) {
                obj['borderBottomSuggested'] = ApiClient.convertToType(data['borderBottomSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('borderLeftSuggested')) {
                obj['borderLeftSuggested'] = ApiClient.convertToType(data['borderLeftSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('borderRightSuggested')) {
                obj['borderRightSuggested'] = ApiClient.convertToType(data['borderRightSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('borderTopSuggested')) {
                obj['borderTopSuggested'] = ApiClient.convertToType(data['borderTopSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('columnSpanSuggested')) {
                obj['columnSpanSuggested'] = ApiClient.convertToType(data['columnSpanSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('contentAlignmentSuggested')) {
                obj['contentAlignmentSuggested'] = ApiClient.convertToType(data['contentAlignmentSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('paddingBottomSuggested')) {
                obj['paddingBottomSuggested'] = ApiClient.convertToType(data['paddingBottomSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('paddingLeftSuggested')) {
                obj['paddingLeftSuggested'] = ApiClient.convertToType(data['paddingLeftSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('paddingRightSuggested')) {
                obj['paddingRightSuggested'] = ApiClient.convertToType(data['paddingRightSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('paddingTopSuggested')) {
                obj['paddingTopSuggested'] = ApiClient.convertToType(data['paddingTopSuggested'], 'Boolean');
            }
            if (data.hasOwnProperty('rowSpanSuggested')) {
                obj['rowSpanSuggested'] = ApiClient.convertToType(data['rowSpanSuggested'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TableCellStyleSuggestionState</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TableCellStyleSuggestionState</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Indicates if there was a suggested change to background_color.
 * @member {Boolean} backgroundColorSuggested
 */
TableCellStyleSuggestionState.prototype['backgroundColorSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to border_bottom.
 * @member {Boolean} borderBottomSuggested
 */
TableCellStyleSuggestionState.prototype['borderBottomSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to border_left.
 * @member {Boolean} borderLeftSuggested
 */
TableCellStyleSuggestionState.prototype['borderLeftSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to border_right.
 * @member {Boolean} borderRightSuggested
 */
TableCellStyleSuggestionState.prototype['borderRightSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to border_top.
 * @member {Boolean} borderTopSuggested
 */
TableCellStyleSuggestionState.prototype['borderTopSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to column_span.
 * @member {Boolean} columnSpanSuggested
 */
TableCellStyleSuggestionState.prototype['columnSpanSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to content_alignment.
 * @member {Boolean} contentAlignmentSuggested
 */
TableCellStyleSuggestionState.prototype['contentAlignmentSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to padding_bottom.
 * @member {Boolean} paddingBottomSuggested
 */
TableCellStyleSuggestionState.prototype['paddingBottomSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to padding_left.
 * @member {Boolean} paddingLeftSuggested
 */
TableCellStyleSuggestionState.prototype['paddingLeftSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to padding_right.
 * @member {Boolean} paddingRightSuggested
 */
TableCellStyleSuggestionState.prototype['paddingRightSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to padding_top.
 * @member {Boolean} paddingTopSuggested
 */
TableCellStyleSuggestionState.prototype['paddingTopSuggested'] = undefined;

/**
 * Indicates if there was a suggested change to row_span.
 * @member {Boolean} rowSpanSuggested
 */
TableCellStyleSuggestionState.prototype['rowSpanSuggested'] = undefined;






export default TableCellStyleSuggestionState;

