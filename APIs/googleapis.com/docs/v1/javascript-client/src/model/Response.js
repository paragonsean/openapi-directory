/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateFooterResponse from './CreateFooterResponse';
import CreateFootnoteResponse from './CreateFootnoteResponse';
import CreateHeaderResponse from './CreateHeaderResponse';
import CreateNamedRangeResponse from './CreateNamedRangeResponse';
import InsertInlineImageResponse from './InsertInlineImageResponse';
import InsertInlineSheetsChartResponse from './InsertInlineSheetsChartResponse';
import ReplaceAllTextResponse from './ReplaceAllTextResponse';

/**
 * The Response model module.
 * @module model/Response
 * @version v1
 */
class Response {
    /**
     * Constructs a new <code>Response</code>.
     * A single response from an update.
     * @alias module:model/Response
     */
    constructor() { 
        
        Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Response} obj Optional instance to populate.
     * @return {module:model/Response} The populated <code>Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Response();

            if (data.hasOwnProperty('createFooter')) {
                obj['createFooter'] = CreateFooterResponse.constructFromObject(data['createFooter']);
            }
            if (data.hasOwnProperty('createFootnote')) {
                obj['createFootnote'] = CreateFootnoteResponse.constructFromObject(data['createFootnote']);
            }
            if (data.hasOwnProperty('createHeader')) {
                obj['createHeader'] = CreateHeaderResponse.constructFromObject(data['createHeader']);
            }
            if (data.hasOwnProperty('createNamedRange')) {
                obj['createNamedRange'] = CreateNamedRangeResponse.constructFromObject(data['createNamedRange']);
            }
            if (data.hasOwnProperty('insertInlineImage')) {
                obj['insertInlineImage'] = InsertInlineImageResponse.constructFromObject(data['insertInlineImage']);
            }
            if (data.hasOwnProperty('insertInlineSheetsChart')) {
                obj['insertInlineSheetsChart'] = InsertInlineSheetsChartResponse.constructFromObject(data['insertInlineSheetsChart']);
            }
            if (data.hasOwnProperty('replaceAllText')) {
                obj['replaceAllText'] = ReplaceAllTextResponse.constructFromObject(data['replaceAllText']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Response</code>.
     */
    static validateJSON(data) {
        // validate the optional field `createFooter`
        if (data['createFooter']) { // data not null
          CreateFooterResponse.validateJSON(data['createFooter']);
        }
        // validate the optional field `createFootnote`
        if (data['createFootnote']) { // data not null
          CreateFootnoteResponse.validateJSON(data['createFootnote']);
        }
        // validate the optional field `createHeader`
        if (data['createHeader']) { // data not null
          CreateHeaderResponse.validateJSON(data['createHeader']);
        }
        // validate the optional field `createNamedRange`
        if (data['createNamedRange']) { // data not null
          CreateNamedRangeResponse.validateJSON(data['createNamedRange']);
        }
        // validate the optional field `insertInlineImage`
        if (data['insertInlineImage']) { // data not null
          InsertInlineImageResponse.validateJSON(data['insertInlineImage']);
        }
        // validate the optional field `insertInlineSheetsChart`
        if (data['insertInlineSheetsChart']) { // data not null
          InsertInlineSheetsChartResponse.validateJSON(data['insertInlineSheetsChart']);
        }
        // validate the optional field `replaceAllText`
        if (data['replaceAllText']) { // data not null
          ReplaceAllTextResponse.validateJSON(data['replaceAllText']);
        }

        return true;
    }


}



/**
 * @member {module:model/CreateFooterResponse} createFooter
 */
Response.prototype['createFooter'] = undefined;

/**
 * @member {module:model/CreateFootnoteResponse} createFootnote
 */
Response.prototype['createFootnote'] = undefined;

/**
 * @member {module:model/CreateHeaderResponse} createHeader
 */
Response.prototype['createHeader'] = undefined;

/**
 * @member {module:model/CreateNamedRangeResponse} createNamedRange
 */
Response.prototype['createNamedRange'] = undefined;

/**
 * @member {module:model/InsertInlineImageResponse} insertInlineImage
 */
Response.prototype['insertInlineImage'] = undefined;

/**
 * @member {module:model/InsertInlineSheetsChartResponse} insertInlineSheetsChart
 */
Response.prototype['insertInlineSheetsChart'] = undefined;

/**
 * @member {module:model/ReplaceAllTextResponse} replaceAllText
 */
Response.prototype['replaceAllText'] = undefined;






export default Response;

