/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NestingLevelSuggestionState from './NestingLevelSuggestionState';

/**
 * The ListPropertiesSuggestionState model module.
 * @module model/ListPropertiesSuggestionState
 * @version v1
 */
class ListPropertiesSuggestionState {
    /**
     * Constructs a new <code>ListPropertiesSuggestionState</code>.
     * A mask that indicates which of the fields on the base ListProperties have been changed in this suggestion. For any field set to true, there&#39;s a new suggested value.
     * @alias module:model/ListPropertiesSuggestionState
     */
    constructor() { 
        
        ListPropertiesSuggestionState.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListPropertiesSuggestionState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListPropertiesSuggestionState} obj Optional instance to populate.
     * @return {module:model/ListPropertiesSuggestionState} The populated <code>ListPropertiesSuggestionState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListPropertiesSuggestionState();

            if (data.hasOwnProperty('nestingLevelsSuggestionStates')) {
                obj['nestingLevelsSuggestionStates'] = ApiClient.convertToType(data['nestingLevelsSuggestionStates'], [NestingLevelSuggestionState]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListPropertiesSuggestionState</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListPropertiesSuggestionState</code>.
     */
    static validateJSON(data) {
        if (data['nestingLevelsSuggestionStates']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['nestingLevelsSuggestionStates'])) {
                throw new Error("Expected the field `nestingLevelsSuggestionStates` to be an array in the JSON data but got " + data['nestingLevelsSuggestionStates']);
            }
            // validate the optional field `nestingLevelsSuggestionStates` (array)
            for (const item of data['nestingLevelsSuggestionStates']) {
                NestingLevelSuggestionState.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * A mask that indicates which of the fields on the corresponding NestingLevel in nesting_levels have been changed in this suggestion. The nesting level suggestion states are returned in ascending order of the nesting level with the least nested returned first.
 * @member {Array.<module:model/NestingLevelSuggestionState>} nestingLevelsSuggestionStates
 */
ListPropertiesSuggestionState.prototype['nestingLevelsSuggestionStates'] = undefined;






export default ListPropertiesSuggestionState;

