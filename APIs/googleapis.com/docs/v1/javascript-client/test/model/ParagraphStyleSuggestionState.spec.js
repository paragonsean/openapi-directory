/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleDocsApi);
  }
}(this, function(expect, GoogleDocsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleDocsApi.ParagraphStyleSuggestionState();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ParagraphStyleSuggestionState', function() {
    it('should create an instance of ParagraphStyleSuggestionState', function() {
      // uncomment below and update the code to test ParagraphStyleSuggestionState
      //var instance = new GoogleDocsApi.ParagraphStyleSuggestionState();
      //expect(instance).to.be.a(GoogleDocsApi.ParagraphStyleSuggestionState);
    });

    it('should have the property alignmentSuggested (base name: "alignmentSuggested")', function() {
      // uncomment below and update the code to test the property alignmentSuggested
      //var instance = new GoogleDocsApi.ParagraphStyleSuggestionState();
      //expect(instance).to.be();
    });

    it('should have the property avoidWidowAndOrphanSuggested (base name: "avoidWidowAndOrphanSuggested")', function() {
      // uncomment below and update the code to test the property avoidWidowAndOrphanSuggested
      //var instance = new GoogleDocsApi.ParagraphStyleSuggestionState();
      //expect(instance).to.be();
    });

    it('should have the property borderBetweenSuggested (base name: "borderBetweenSuggested")', function() {
      // uncomment below and update the code to test the property borderBetweenSuggested
      //var instance = new GoogleDocsApi.ParagraphStyleSuggestionState();
      //expect(instance).to.be();
    });

    it('should have the property borderBottomSuggested (base name: "borderBottomSuggested")', function() {
      // uncomment below and update the code to test the property borderBottomSuggested
      //var instance = new GoogleDocsApi.ParagraphStyleSuggestionState();
      //expect(instance).to.be();
    });

    it('should have the property borderLeftSuggested (base name: "borderLeftSuggested")', function() {
      // uncomment below and update the code to test the property borderLeftSuggested
      //var instance = new GoogleDocsApi.ParagraphStyleSuggestionState();
      //expect(instance).to.be();
    });

    it('should have the property borderRightSuggested (base name: "borderRightSuggested")', function() {
      // uncomment below and update the code to test the property borderRightSuggested
      //var instance = new GoogleDocsApi.ParagraphStyleSuggestionState();
      //expect(instance).to.be();
    });

    it('should have the property borderTopSuggested (base name: "borderTopSuggested")', function() {
      // uncomment below and update the code to test the property borderTopSuggested
      //var instance = new GoogleDocsApi.ParagraphStyleSuggestionState();
      //expect(instance).to.be();
    });

    it('should have the property directionSuggested (base name: "directionSuggested")', function() {
      // uncomment below and update the code to test the property directionSuggested
      //var instance = new GoogleDocsApi.ParagraphStyleSuggestionState();
      //expect(instance).to.be();
    });

    it('should have the property headingIdSuggested (base name: "headingIdSuggested")', function() {
      // uncomment below and update the code to test the property headingIdSuggested
      //var instance = new GoogleDocsApi.ParagraphStyleSuggestionState();
      //expect(instance).to.be();
    });

    it('should have the property indentEndSuggested (base name: "indentEndSuggested")', function() {
      // uncomment below and update the code to test the property indentEndSuggested
      //var instance = new GoogleDocsApi.ParagraphStyleSuggestionState();
      //expect(instance).to.be();
    });

    it('should have the property indentFirstLineSuggested (base name: "indentFirstLineSuggested")', function() {
      // uncomment below and update the code to test the property indentFirstLineSuggested
      //var instance = new GoogleDocsApi.ParagraphStyleSuggestionState();
      //expect(instance).to.be();
    });

    it('should have the property indentStartSuggested (base name: "indentStartSuggested")', function() {
      // uncomment below and update the code to test the property indentStartSuggested
      //var instance = new GoogleDocsApi.ParagraphStyleSuggestionState();
      //expect(instance).to.be();
    });

    it('should have the property keepLinesTogetherSuggested (base name: "keepLinesTogetherSuggested")', function() {
      // uncomment below and update the code to test the property keepLinesTogetherSuggested
      //var instance = new GoogleDocsApi.ParagraphStyleSuggestionState();
      //expect(instance).to.be();
    });

    it('should have the property keepWithNextSuggested (base name: "keepWithNextSuggested")', function() {
      // uncomment below and update the code to test the property keepWithNextSuggested
      //var instance = new GoogleDocsApi.ParagraphStyleSuggestionState();
      //expect(instance).to.be();
    });

    it('should have the property lineSpacingSuggested (base name: "lineSpacingSuggested")', function() {
      // uncomment below and update the code to test the property lineSpacingSuggested
      //var instance = new GoogleDocsApi.ParagraphStyleSuggestionState();
      //expect(instance).to.be();
    });

    it('should have the property namedStyleTypeSuggested (base name: "namedStyleTypeSuggested")', function() {
      // uncomment below and update the code to test the property namedStyleTypeSuggested
      //var instance = new GoogleDocsApi.ParagraphStyleSuggestionState();
      //expect(instance).to.be();
    });

    it('should have the property pageBreakBeforeSuggested (base name: "pageBreakBeforeSuggested")', function() {
      // uncomment below and update the code to test the property pageBreakBeforeSuggested
      //var instance = new GoogleDocsApi.ParagraphStyleSuggestionState();
      //expect(instance).to.be();
    });

    it('should have the property shadingSuggestionState (base name: "shadingSuggestionState")', function() {
      // uncomment below and update the code to test the property shadingSuggestionState
      //var instance = new GoogleDocsApi.ParagraphStyleSuggestionState();
      //expect(instance).to.be();
    });

    it('should have the property spaceAboveSuggested (base name: "spaceAboveSuggested")', function() {
      // uncomment below and update the code to test the property spaceAboveSuggested
      //var instance = new GoogleDocsApi.ParagraphStyleSuggestionState();
      //expect(instance).to.be();
    });

    it('should have the property spaceBelowSuggested (base name: "spaceBelowSuggested")', function() {
      // uncomment below and update the code to test the property spaceBelowSuggested
      //var instance = new GoogleDocsApi.ParagraphStyleSuggestionState();
      //expect(instance).to.be();
    });

    it('should have the property spacingModeSuggested (base name: "spacingModeSuggested")', function() {
      // uncomment below and update the code to test the property spacingModeSuggested
      //var instance = new GoogleDocsApi.ParagraphStyleSuggestionState();
      //expect(instance).to.be();
    });

  });

}));
