/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleDocsApi);
  }
}(this, function(expect, GoogleDocsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleDocsApi.SectionStyle();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SectionStyle', function() {
    it('should create an instance of SectionStyle', function() {
      // uncomment below and update the code to test SectionStyle
      //var instance = new GoogleDocsApi.SectionStyle();
      //expect(instance).to.be.a(GoogleDocsApi.SectionStyle);
    });

    it('should have the property columnProperties (base name: "columnProperties")', function() {
      // uncomment below and update the code to test the property columnProperties
      //var instance = new GoogleDocsApi.SectionStyle();
      //expect(instance).to.be();
    });

    it('should have the property columnSeparatorStyle (base name: "columnSeparatorStyle")', function() {
      // uncomment below and update the code to test the property columnSeparatorStyle
      //var instance = new GoogleDocsApi.SectionStyle();
      //expect(instance).to.be();
    });

    it('should have the property contentDirection (base name: "contentDirection")', function() {
      // uncomment below and update the code to test the property contentDirection
      //var instance = new GoogleDocsApi.SectionStyle();
      //expect(instance).to.be();
    });

    it('should have the property defaultFooterId (base name: "defaultFooterId")', function() {
      // uncomment below and update the code to test the property defaultFooterId
      //var instance = new GoogleDocsApi.SectionStyle();
      //expect(instance).to.be();
    });

    it('should have the property defaultHeaderId (base name: "defaultHeaderId")', function() {
      // uncomment below and update the code to test the property defaultHeaderId
      //var instance = new GoogleDocsApi.SectionStyle();
      //expect(instance).to.be();
    });

    it('should have the property evenPageFooterId (base name: "evenPageFooterId")', function() {
      // uncomment below and update the code to test the property evenPageFooterId
      //var instance = new GoogleDocsApi.SectionStyle();
      //expect(instance).to.be();
    });

    it('should have the property evenPageHeaderId (base name: "evenPageHeaderId")', function() {
      // uncomment below and update the code to test the property evenPageHeaderId
      //var instance = new GoogleDocsApi.SectionStyle();
      //expect(instance).to.be();
    });

    it('should have the property firstPageFooterId (base name: "firstPageFooterId")', function() {
      // uncomment below and update the code to test the property firstPageFooterId
      //var instance = new GoogleDocsApi.SectionStyle();
      //expect(instance).to.be();
    });

    it('should have the property firstPageHeaderId (base name: "firstPageHeaderId")', function() {
      // uncomment below and update the code to test the property firstPageHeaderId
      //var instance = new GoogleDocsApi.SectionStyle();
      //expect(instance).to.be();
    });

    it('should have the property flipPageOrientation (base name: "flipPageOrientation")', function() {
      // uncomment below and update the code to test the property flipPageOrientation
      //var instance = new GoogleDocsApi.SectionStyle();
      //expect(instance).to.be();
    });

    it('should have the property marginBottom (base name: "marginBottom")', function() {
      // uncomment below and update the code to test the property marginBottom
      //var instance = new GoogleDocsApi.SectionStyle();
      //expect(instance).to.be();
    });

    it('should have the property marginFooter (base name: "marginFooter")', function() {
      // uncomment below and update the code to test the property marginFooter
      //var instance = new GoogleDocsApi.SectionStyle();
      //expect(instance).to.be();
    });

    it('should have the property marginHeader (base name: "marginHeader")', function() {
      // uncomment below and update the code to test the property marginHeader
      //var instance = new GoogleDocsApi.SectionStyle();
      //expect(instance).to.be();
    });

    it('should have the property marginLeft (base name: "marginLeft")', function() {
      // uncomment below and update the code to test the property marginLeft
      //var instance = new GoogleDocsApi.SectionStyle();
      //expect(instance).to.be();
    });

    it('should have the property marginRight (base name: "marginRight")', function() {
      // uncomment below and update the code to test the property marginRight
      //var instance = new GoogleDocsApi.SectionStyle();
      //expect(instance).to.be();
    });

    it('should have the property marginTop (base name: "marginTop")', function() {
      // uncomment below and update the code to test the property marginTop
      //var instance = new GoogleDocsApi.SectionStyle();
      //expect(instance).to.be();
    });

    it('should have the property pageNumberStart (base name: "pageNumberStart")', function() {
      // uncomment below and update the code to test the property pageNumberStart
      //var instance = new GoogleDocsApi.SectionStyle();
      //expect(instance).to.be();
    });

    it('should have the property sectionType (base name: "sectionType")', function() {
      // uncomment below and update the code to test the property sectionType
      //var instance = new GoogleDocsApi.SectionStyle();
      //expect(instance).to.be();
    });

    it('should have the property useFirstPageHeaderFooter (base name: "useFirstPageHeaderFooter")', function() {
      // uncomment below and update the code to test the property useFirstPageHeaderFooter
      //var instance = new GoogleDocsApi.SectionStyle();
      //expect(instance).to.be();
    });

  });

}));
