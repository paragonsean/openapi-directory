/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleDocsApi);
  }
}(this, function(expect, GoogleDocsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleDocsApi.ParagraphStyle();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ParagraphStyle', function() {
    it('should create an instance of ParagraphStyle', function() {
      // uncomment below and update the code to test ParagraphStyle
      //var instance = new GoogleDocsApi.ParagraphStyle();
      //expect(instance).to.be.a(GoogleDocsApi.ParagraphStyle);
    });

    it('should have the property alignment (base name: "alignment")', function() {
      // uncomment below and update the code to test the property alignment
      //var instance = new GoogleDocsApi.ParagraphStyle();
      //expect(instance).to.be();
    });

    it('should have the property avoidWidowAndOrphan (base name: "avoidWidowAndOrphan")', function() {
      // uncomment below and update the code to test the property avoidWidowAndOrphan
      //var instance = new GoogleDocsApi.ParagraphStyle();
      //expect(instance).to.be();
    });

    it('should have the property borderBetween (base name: "borderBetween")', function() {
      // uncomment below and update the code to test the property borderBetween
      //var instance = new GoogleDocsApi.ParagraphStyle();
      //expect(instance).to.be();
    });

    it('should have the property borderBottom (base name: "borderBottom")', function() {
      // uncomment below and update the code to test the property borderBottom
      //var instance = new GoogleDocsApi.ParagraphStyle();
      //expect(instance).to.be();
    });

    it('should have the property borderLeft (base name: "borderLeft")', function() {
      // uncomment below and update the code to test the property borderLeft
      //var instance = new GoogleDocsApi.ParagraphStyle();
      //expect(instance).to.be();
    });

    it('should have the property borderRight (base name: "borderRight")', function() {
      // uncomment below and update the code to test the property borderRight
      //var instance = new GoogleDocsApi.ParagraphStyle();
      //expect(instance).to.be();
    });

    it('should have the property borderTop (base name: "borderTop")', function() {
      // uncomment below and update the code to test the property borderTop
      //var instance = new GoogleDocsApi.ParagraphStyle();
      //expect(instance).to.be();
    });

    it('should have the property direction (base name: "direction")', function() {
      // uncomment below and update the code to test the property direction
      //var instance = new GoogleDocsApi.ParagraphStyle();
      //expect(instance).to.be();
    });

    it('should have the property headingId (base name: "headingId")', function() {
      // uncomment below and update the code to test the property headingId
      //var instance = new GoogleDocsApi.ParagraphStyle();
      //expect(instance).to.be();
    });

    it('should have the property indentEnd (base name: "indentEnd")', function() {
      // uncomment below and update the code to test the property indentEnd
      //var instance = new GoogleDocsApi.ParagraphStyle();
      //expect(instance).to.be();
    });

    it('should have the property indentFirstLine (base name: "indentFirstLine")', function() {
      // uncomment below and update the code to test the property indentFirstLine
      //var instance = new GoogleDocsApi.ParagraphStyle();
      //expect(instance).to.be();
    });

    it('should have the property indentStart (base name: "indentStart")', function() {
      // uncomment below and update the code to test the property indentStart
      //var instance = new GoogleDocsApi.ParagraphStyle();
      //expect(instance).to.be();
    });

    it('should have the property keepLinesTogether (base name: "keepLinesTogether")', function() {
      // uncomment below and update the code to test the property keepLinesTogether
      //var instance = new GoogleDocsApi.ParagraphStyle();
      //expect(instance).to.be();
    });

    it('should have the property keepWithNext (base name: "keepWithNext")', function() {
      // uncomment below and update the code to test the property keepWithNext
      //var instance = new GoogleDocsApi.ParagraphStyle();
      //expect(instance).to.be();
    });

    it('should have the property lineSpacing (base name: "lineSpacing")', function() {
      // uncomment below and update the code to test the property lineSpacing
      //var instance = new GoogleDocsApi.ParagraphStyle();
      //expect(instance).to.be();
    });

    it('should have the property namedStyleType (base name: "namedStyleType")', function() {
      // uncomment below and update the code to test the property namedStyleType
      //var instance = new GoogleDocsApi.ParagraphStyle();
      //expect(instance).to.be();
    });

    it('should have the property pageBreakBefore (base name: "pageBreakBefore")', function() {
      // uncomment below and update the code to test the property pageBreakBefore
      //var instance = new GoogleDocsApi.ParagraphStyle();
      //expect(instance).to.be();
    });

    it('should have the property shading (base name: "shading")', function() {
      // uncomment below and update the code to test the property shading
      //var instance = new GoogleDocsApi.ParagraphStyle();
      //expect(instance).to.be();
    });

    it('should have the property spaceAbove (base name: "spaceAbove")', function() {
      // uncomment below and update the code to test the property spaceAbove
      //var instance = new GoogleDocsApi.ParagraphStyle();
      //expect(instance).to.be();
    });

    it('should have the property spaceBelow (base name: "spaceBelow")', function() {
      // uncomment below and update the code to test the property spaceBelow
      //var instance = new GoogleDocsApi.ParagraphStyle();
      //expect(instance).to.be();
    });

    it('should have the property spacingMode (base name: "spacingMode")', function() {
      // uncomment below and update the code to test the property spacingMode
      //var instance = new GoogleDocsApi.ParagraphStyle();
      //expect(instance).to.be();
    });

    it('should have the property tabStops (base name: "tabStops")', function() {
      // uncomment below and update the code to test the property tabStops
      //var instance = new GoogleDocsApi.ParagraphStyle();
      //expect(instance).to.be();
    });

  });

}));
