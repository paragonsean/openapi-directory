/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISuggestedInlineObjectProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISuggestedInlineObjectProperties::OAISuggestedInlineObjectProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISuggestedInlineObjectProperties::OAISuggestedInlineObjectProperties() {
    this->initializeModel();
}

OAISuggestedInlineObjectProperties::~OAISuggestedInlineObjectProperties() {}

void OAISuggestedInlineObjectProperties::initializeModel() {

    m_inline_object_properties_isSet = false;
    m_inline_object_properties_isValid = false;

    m_inline_object_properties_suggestion_state_isSet = false;
    m_inline_object_properties_suggestion_state_isValid = false;
}

void OAISuggestedInlineObjectProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISuggestedInlineObjectProperties::fromJsonObject(QJsonObject json) {

    m_inline_object_properties_isValid = ::OpenAPI::fromJsonValue(m_inline_object_properties, json[QString("inlineObjectProperties")]);
    m_inline_object_properties_isSet = !json[QString("inlineObjectProperties")].isNull() && m_inline_object_properties_isValid;

    m_inline_object_properties_suggestion_state_isValid = ::OpenAPI::fromJsonValue(m_inline_object_properties_suggestion_state, json[QString("inlineObjectPropertiesSuggestionState")]);
    m_inline_object_properties_suggestion_state_isSet = !json[QString("inlineObjectPropertiesSuggestionState")].isNull() && m_inline_object_properties_suggestion_state_isValid;
}

QString OAISuggestedInlineObjectProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISuggestedInlineObjectProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_inline_object_properties.isSet()) {
        obj.insert(QString("inlineObjectProperties"), ::OpenAPI::toJsonValue(m_inline_object_properties));
    }
    if (m_inline_object_properties_suggestion_state.isSet()) {
        obj.insert(QString("inlineObjectPropertiesSuggestionState"), ::OpenAPI::toJsonValue(m_inline_object_properties_suggestion_state));
    }
    return obj;
}

OAIInlineObjectProperties OAISuggestedInlineObjectProperties::getInlineObjectProperties() const {
    return m_inline_object_properties;
}
void OAISuggestedInlineObjectProperties::setInlineObjectProperties(const OAIInlineObjectProperties &inline_object_properties) {
    m_inline_object_properties = inline_object_properties;
    m_inline_object_properties_isSet = true;
}

bool OAISuggestedInlineObjectProperties::is_inline_object_properties_Set() const{
    return m_inline_object_properties_isSet;
}

bool OAISuggestedInlineObjectProperties::is_inline_object_properties_Valid() const{
    return m_inline_object_properties_isValid;
}

OAIInlineObjectPropertiesSuggestionState OAISuggestedInlineObjectProperties::getInlineObjectPropertiesSuggestionState() const {
    return m_inline_object_properties_suggestion_state;
}
void OAISuggestedInlineObjectProperties::setInlineObjectPropertiesSuggestionState(const OAIInlineObjectPropertiesSuggestionState &inline_object_properties_suggestion_state) {
    m_inline_object_properties_suggestion_state = inline_object_properties_suggestion_state;
    m_inline_object_properties_suggestion_state_isSet = true;
}

bool OAISuggestedInlineObjectProperties::is_inline_object_properties_suggestion_state_Set() const{
    return m_inline_object_properties_suggestion_state_isSet;
}

bool OAISuggestedInlineObjectProperties::is_inline_object_properties_suggestion_state_Valid() const{
    return m_inline_object_properties_suggestion_state_isValid;
}

bool OAISuggestedInlineObjectProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_inline_object_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_inline_object_properties_suggestion_state.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISuggestedInlineObjectProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
