/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUnmergeTableCellsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUnmergeTableCellsRequest::OAIUnmergeTableCellsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUnmergeTableCellsRequest::OAIUnmergeTableCellsRequest() {
    this->initializeModel();
}

OAIUnmergeTableCellsRequest::~OAIUnmergeTableCellsRequest() {}

void OAIUnmergeTableCellsRequest::initializeModel() {

    m_table_range_isSet = false;
    m_table_range_isValid = false;
}

void OAIUnmergeTableCellsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUnmergeTableCellsRequest::fromJsonObject(QJsonObject json) {

    m_table_range_isValid = ::OpenAPI::fromJsonValue(m_table_range, json[QString("tableRange")]);
    m_table_range_isSet = !json[QString("tableRange")].isNull() && m_table_range_isValid;
}

QString OAIUnmergeTableCellsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUnmergeTableCellsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_table_range.isSet()) {
        obj.insert(QString("tableRange"), ::OpenAPI::toJsonValue(m_table_range));
    }
    return obj;
}

OAITableRange OAIUnmergeTableCellsRequest::getTableRange() const {
    return m_table_range;
}
void OAIUnmergeTableCellsRequest::setTableRange(const OAITableRange &table_range) {
    m_table_range = table_range;
    m_table_range_isSet = true;
}

bool OAIUnmergeTableCellsRequest::is_table_range_Set() const{
    return m_table_range_isSet;
}

bool OAIUnmergeTableCellsRequest::is_table_range_Valid() const{
    return m_table_range_isValid;
}

bool OAIUnmergeTableCellsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_table_range.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUnmergeTableCellsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
