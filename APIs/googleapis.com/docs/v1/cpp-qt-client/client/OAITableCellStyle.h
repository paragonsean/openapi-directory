/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITableCellStyle.h
 *
 * The style of a TableCell. Inherited table cell styles are represented as unset fields in this message. A table cell style can inherit from the table&#39;s style.
 */

#ifndef OAITableCellStyle_H
#define OAITableCellStyle_H

#include <QJsonObject>

#include "OAIDimension.h"
#include "OAIOptionalColor.h"
#include "OAITableCellBorder.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOptionalColor;
class OAITableCellBorder;
class OAIDimension;

class OAITableCellStyle : public OAIObject {
public:
    OAITableCellStyle();
    OAITableCellStyle(QString json);
    ~OAITableCellStyle() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIOptionalColor getBackgroundColor() const;
    void setBackgroundColor(const OAIOptionalColor &background_color);
    bool is_background_color_Set() const;
    bool is_background_color_Valid() const;

    OAITableCellBorder getBorderBottom() const;
    void setBorderBottom(const OAITableCellBorder &border_bottom);
    bool is_border_bottom_Set() const;
    bool is_border_bottom_Valid() const;

    OAITableCellBorder getBorderLeft() const;
    void setBorderLeft(const OAITableCellBorder &border_left);
    bool is_border_left_Set() const;
    bool is_border_left_Valid() const;

    OAITableCellBorder getBorderRight() const;
    void setBorderRight(const OAITableCellBorder &border_right);
    bool is_border_right_Set() const;
    bool is_border_right_Valid() const;

    OAITableCellBorder getBorderTop() const;
    void setBorderTop(const OAITableCellBorder &border_top);
    bool is_border_top_Set() const;
    bool is_border_top_Valid() const;

    qint32 getColumnSpan() const;
    void setColumnSpan(const qint32 &column_span);
    bool is_column_span_Set() const;
    bool is_column_span_Valid() const;

    QString getContentAlignment() const;
    void setContentAlignment(const QString &content_alignment);
    bool is_content_alignment_Set() const;
    bool is_content_alignment_Valid() const;

    OAIDimension getPaddingBottom() const;
    void setPaddingBottom(const OAIDimension &padding_bottom);
    bool is_padding_bottom_Set() const;
    bool is_padding_bottom_Valid() const;

    OAIDimension getPaddingLeft() const;
    void setPaddingLeft(const OAIDimension &padding_left);
    bool is_padding_left_Set() const;
    bool is_padding_left_Valid() const;

    OAIDimension getPaddingRight() const;
    void setPaddingRight(const OAIDimension &padding_right);
    bool is_padding_right_Set() const;
    bool is_padding_right_Valid() const;

    OAIDimension getPaddingTop() const;
    void setPaddingTop(const OAIDimension &padding_top);
    bool is_padding_top_Set() const;
    bool is_padding_top_Valid() const;

    qint32 getRowSpan() const;
    void setRowSpan(const qint32 &row_span);
    bool is_row_span_Set() const;
    bool is_row_span_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIOptionalColor m_background_color;
    bool m_background_color_isSet;
    bool m_background_color_isValid;

    OAITableCellBorder m_border_bottom;
    bool m_border_bottom_isSet;
    bool m_border_bottom_isValid;

    OAITableCellBorder m_border_left;
    bool m_border_left_isSet;
    bool m_border_left_isValid;

    OAITableCellBorder m_border_right;
    bool m_border_right_isSet;
    bool m_border_right_isValid;

    OAITableCellBorder m_border_top;
    bool m_border_top_isSet;
    bool m_border_top_isValid;

    qint32 m_column_span;
    bool m_column_span_isSet;
    bool m_column_span_isValid;

    QString m_content_alignment;
    bool m_content_alignment_isSet;
    bool m_content_alignment_isValid;

    OAIDimension m_padding_bottom;
    bool m_padding_bottom_isSet;
    bool m_padding_bottom_isValid;

    OAIDimension m_padding_left;
    bool m_padding_left_isSet;
    bool m_padding_left_isValid;

    OAIDimension m_padding_right;
    bool m_padding_right_isSet;
    bool m_padding_right_isValid;

    OAIDimension m_padding_top;
    bool m_padding_top_isSet;
    bool m_padding_top_isValid;

    qint32 m_row_span;
    bool m_row_span_isSet;
    bool m_row_span_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITableCellStyle)

#endif // OAITableCellStyle_H
