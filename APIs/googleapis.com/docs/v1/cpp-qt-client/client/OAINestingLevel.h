/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINestingLevel.h
 *
 * Contains properties describing the look and feel of a list bullet at a given level of nesting.
 */

#ifndef OAINestingLevel_H
#define OAINestingLevel_H

#include <QJsonObject>

#include "OAIDimension.h"
#include "OAITextStyle.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDimension;
class OAITextStyle;

class OAINestingLevel : public OAIObject {
public:
    OAINestingLevel();
    OAINestingLevel(QString json);
    ~OAINestingLevel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBulletAlignment() const;
    void setBulletAlignment(const QString &bullet_alignment);
    bool is_bullet_alignment_Set() const;
    bool is_bullet_alignment_Valid() const;

    QString getGlyphFormat() const;
    void setGlyphFormat(const QString &glyph_format);
    bool is_glyph_format_Set() const;
    bool is_glyph_format_Valid() const;

    QString getGlyphSymbol() const;
    void setGlyphSymbol(const QString &glyph_symbol);
    bool is_glyph_symbol_Set() const;
    bool is_glyph_symbol_Valid() const;

    QString getGlyphType() const;
    void setGlyphType(const QString &glyph_type);
    bool is_glyph_type_Set() const;
    bool is_glyph_type_Valid() const;

    OAIDimension getIndentFirstLine() const;
    void setIndentFirstLine(const OAIDimension &indent_first_line);
    bool is_indent_first_line_Set() const;
    bool is_indent_first_line_Valid() const;

    OAIDimension getIndentStart() const;
    void setIndentStart(const OAIDimension &indent_start);
    bool is_indent_start_Set() const;
    bool is_indent_start_Valid() const;

    qint32 getStartNumber() const;
    void setStartNumber(const qint32 &start_number);
    bool is_start_number_Set() const;
    bool is_start_number_Valid() const;

    OAITextStyle getTextStyle() const;
    void setTextStyle(const OAITextStyle &text_style);
    bool is_text_style_Set() const;
    bool is_text_style_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bullet_alignment;
    bool m_bullet_alignment_isSet;
    bool m_bullet_alignment_isValid;

    QString m_glyph_format;
    bool m_glyph_format_isSet;
    bool m_glyph_format_isValid;

    QString m_glyph_symbol;
    bool m_glyph_symbol_isSet;
    bool m_glyph_symbol_isValid;

    QString m_glyph_type;
    bool m_glyph_type_isSet;
    bool m_glyph_type_isValid;

    OAIDimension m_indent_first_line;
    bool m_indent_first_line_isSet;
    bool m_indent_first_line_isValid;

    OAIDimension m_indent_start;
    bool m_indent_start_isSet;
    bool m_indent_start_isValid;

    qint32 m_start_number;
    bool m_start_number_isSet;
    bool m_start_number_isValid;

    OAITextStyle m_text_style;
    bool m_text_style_isSet;
    bool m_text_style_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINestingLevel)

#endif // OAINestingLevel_H
