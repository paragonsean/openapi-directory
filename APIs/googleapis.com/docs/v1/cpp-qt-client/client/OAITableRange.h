/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITableRange.h
 *
 * A table range represents a reference to a subset of a table. It&#39;s important to note that the cells specified by a table range do not necessarily form a rectangle. For example, let&#39;s say we have a 3 x 3 table where all the cells of the last row are merged together. The table looks like this: [ ] A table range with table cell location &#x3D; (table_start_location, row &#x3D; 0, column &#x3D; 0), row span &#x3D; 3 and column span &#x3D; 2 specifies the following cells: x x [ x x x ]
 */

#ifndef OAITableRange_H
#define OAITableRange_H

#include <QJsonObject>

#include "OAITableCellLocation.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITableCellLocation;

class OAITableRange : public OAIObject {
public:
    OAITableRange();
    OAITableRange(QString json);
    ~OAITableRange() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getColumnSpan() const;
    void setColumnSpan(const qint32 &column_span);
    bool is_column_span_Set() const;
    bool is_column_span_Valid() const;

    qint32 getRowSpan() const;
    void setRowSpan(const qint32 &row_span);
    bool is_row_span_Set() const;
    bool is_row_span_Valid() const;

    OAITableCellLocation getTableCellLocation() const;
    void setTableCellLocation(const OAITableCellLocation &table_cell_location);
    bool is_table_cell_location_Set() const;
    bool is_table_cell_location_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_column_span;
    bool m_column_span_isSet;
    bool m_column_span_isValid;

    qint32 m_row_span;
    bool m_row_span_isSet;
    bool m_row_span_isValid;

    OAITableCellLocation m_table_cell_location;
    bool m_table_cell_location_isSet;
    bool m_table_cell_location_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITableRange)

#endif // OAITableRange_H
