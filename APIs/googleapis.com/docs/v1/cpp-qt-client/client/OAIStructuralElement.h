/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStructuralElement.h
 *
 * A StructuralElement describes content that provides structure to the document.
 */

#ifndef OAIStructuralElement_H
#define OAIStructuralElement_H

#include <QJsonObject>

#include "OAIParagraph.h"
#include "OAISectionBreak.h"
#include "OAITable.h"
#include "OAITableOfContents.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIParagraph;
class OAISectionBreak;
class OAITable;
class OAITableOfContents;

class OAIStructuralElement : public OAIObject {
public:
    OAIStructuralElement();
    OAIStructuralElement(QString json);
    ~OAIStructuralElement() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getEndIndex() const;
    void setEndIndex(const qint32 &end_index);
    bool is_end_index_Set() const;
    bool is_end_index_Valid() const;

    OAIParagraph getParagraph() const;
    void setParagraph(const OAIParagraph &paragraph);
    bool is_paragraph_Set() const;
    bool is_paragraph_Valid() const;

    OAISectionBreak getSectionBreak() const;
    void setSectionBreak(const OAISectionBreak &section_break);
    bool is_section_break_Set() const;
    bool is_section_break_Valid() const;

    qint32 getStartIndex() const;
    void setStartIndex(const qint32 &start_index);
    bool is_start_index_Set() const;
    bool is_start_index_Valid() const;

    OAITable getTable() const;
    void setTable(const OAITable &table);
    bool is_table_Set() const;
    bool is_table_Valid() const;

    OAITableOfContents getTableOfContents() const;
    void setTableOfContents(const OAITableOfContents &table_of_contents);
    bool is_table_of_contents_Set() const;
    bool is_table_of_contents_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_end_index;
    bool m_end_index_isSet;
    bool m_end_index_isValid;

    OAIParagraph m_paragraph;
    bool m_paragraph_isSet;
    bool m_paragraph_isValid;

    OAISectionBreak m_section_break;
    bool m_section_break_isSet;
    bool m_section_break_isValid;

    qint32 m_start_index;
    bool m_start_index_isSet;
    bool m_start_index_isValid;

    OAITable m_table;
    bool m_table_isSet;
    bool m_table_isValid;

    OAITableOfContents m_table_of_contents;
    bool m_table_of_contents_isSet;
    bool m_table_of_contents_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStructuralElement)

#endif // OAIStructuralElement_H
