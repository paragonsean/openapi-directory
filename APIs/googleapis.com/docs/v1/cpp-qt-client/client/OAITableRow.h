/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITableRow.h
 *
 * The contents and style of a row in a Table.
 */

#ifndef OAITableRow_H
#define OAITableRow_H

#include <QJsonObject>

#include "OAISuggestedTableRowStyle.h"
#include "OAITableCell.h"
#include "OAITableRowStyle.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISuggestedTableRowStyle;
class OAITableCell;
class OAITableRowStyle;

class OAITableRow : public OAIObject {
public:
    OAITableRow();
    OAITableRow(QString json);
    ~OAITableRow() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getEndIndex() const;
    void setEndIndex(const qint32 &end_index);
    bool is_end_index_Set() const;
    bool is_end_index_Valid() const;

    qint32 getStartIndex() const;
    void setStartIndex(const qint32 &start_index);
    bool is_start_index_Set() const;
    bool is_start_index_Valid() const;

    QList<QString> getSuggestedDeletionIds() const;
    void setSuggestedDeletionIds(const QList<QString> &suggested_deletion_ids);
    bool is_suggested_deletion_ids_Set() const;
    bool is_suggested_deletion_ids_Valid() const;

    QList<QString> getSuggestedInsertionIds() const;
    void setSuggestedInsertionIds(const QList<QString> &suggested_insertion_ids);
    bool is_suggested_insertion_ids_Set() const;
    bool is_suggested_insertion_ids_Valid() const;

    QMap<QString, OAISuggestedTableRowStyle> getSuggestedTableRowStyleChanges() const;
    void setSuggestedTableRowStyleChanges(const QMap<QString, OAISuggestedTableRowStyle> &suggested_table_row_style_changes);
    bool is_suggested_table_row_style_changes_Set() const;
    bool is_suggested_table_row_style_changes_Valid() const;

    QList<OAITableCell> getTableCells() const;
    void setTableCells(const QList<OAITableCell> &table_cells);
    bool is_table_cells_Set() const;
    bool is_table_cells_Valid() const;

    OAITableRowStyle getTableRowStyle() const;
    void setTableRowStyle(const OAITableRowStyle &table_row_style);
    bool is_table_row_style_Set() const;
    bool is_table_row_style_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_end_index;
    bool m_end_index_isSet;
    bool m_end_index_isValid;

    qint32 m_start_index;
    bool m_start_index_isSet;
    bool m_start_index_isValid;

    QList<QString> m_suggested_deletion_ids;
    bool m_suggested_deletion_ids_isSet;
    bool m_suggested_deletion_ids_isValid;

    QList<QString> m_suggested_insertion_ids;
    bool m_suggested_insertion_ids_isSet;
    bool m_suggested_insertion_ids_isValid;

    QMap<QString, OAISuggestedTableRowStyle> m_suggested_table_row_style_changes;
    bool m_suggested_table_row_style_changes_isSet;
    bool m_suggested_table_row_style_changes_isValid;

    QList<OAITableCell> m_table_cells;
    bool m_table_cells_isSet;
    bool m_table_cells_isValid;

    OAITableRowStyle m_table_row_style;
    bool m_table_row_style_isSet;
    bool m_table_row_style_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITableRow)

#endif // OAITableRow_H
