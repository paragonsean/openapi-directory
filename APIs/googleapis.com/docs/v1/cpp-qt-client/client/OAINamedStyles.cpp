/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINamedStyles.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINamedStyles::OAINamedStyles(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINamedStyles::OAINamedStyles() {
    this->initializeModel();
}

OAINamedStyles::~OAINamedStyles() {}

void OAINamedStyles::initializeModel() {

    m_styles_isSet = false;
    m_styles_isValid = false;
}

void OAINamedStyles::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINamedStyles::fromJsonObject(QJsonObject json) {

    m_styles_isValid = ::OpenAPI::fromJsonValue(m_styles, json[QString("styles")]);
    m_styles_isSet = !json[QString("styles")].isNull() && m_styles_isValid;
}

QString OAINamedStyles::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINamedStyles::asJsonObject() const {
    QJsonObject obj;
    if (m_styles.size() > 0) {
        obj.insert(QString("styles"), ::OpenAPI::toJsonValue(m_styles));
    }
    return obj;
}

QList<OAINamedStyle> OAINamedStyles::getStyles() const {
    return m_styles;
}
void OAINamedStyles::setStyles(const QList<OAINamedStyle> &styles) {
    m_styles = styles;
    m_styles_isSet = true;
}

bool OAINamedStyles::is_styles_Set() const{
    return m_styles_isSet;
}

bool OAINamedStyles::is_styles_Valid() const{
    return m_styles_isValid;
}

bool OAINamedStyles::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_styles.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINamedStyles::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
