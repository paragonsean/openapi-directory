/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINamedRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINamedRange::OAINamedRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINamedRange::OAINamedRange() {
    this->initializeModel();
}

OAINamedRange::~OAINamedRange() {}

void OAINamedRange::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_named_range_id_isSet = false;
    m_named_range_id_isValid = false;

    m_ranges_isSet = false;
    m_ranges_isValid = false;
}

void OAINamedRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINamedRange::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_named_range_id_isValid = ::OpenAPI::fromJsonValue(m_named_range_id, json[QString("namedRangeId")]);
    m_named_range_id_isSet = !json[QString("namedRangeId")].isNull() && m_named_range_id_isValid;

    m_ranges_isValid = ::OpenAPI::fromJsonValue(m_ranges, json[QString("ranges")]);
    m_ranges_isSet = !json[QString("ranges")].isNull() && m_ranges_isValid;
}

QString OAINamedRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINamedRange::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_named_range_id_isSet) {
        obj.insert(QString("namedRangeId"), ::OpenAPI::toJsonValue(m_named_range_id));
    }
    if (m_ranges.size() > 0) {
        obj.insert(QString("ranges"), ::OpenAPI::toJsonValue(m_ranges));
    }
    return obj;
}

QString OAINamedRange::getName() const {
    return m_name;
}
void OAINamedRange::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAINamedRange::is_name_Set() const{
    return m_name_isSet;
}

bool OAINamedRange::is_name_Valid() const{
    return m_name_isValid;
}

QString OAINamedRange::getNamedRangeId() const {
    return m_named_range_id;
}
void OAINamedRange::setNamedRangeId(const QString &named_range_id) {
    m_named_range_id = named_range_id;
    m_named_range_id_isSet = true;
}

bool OAINamedRange::is_named_range_id_Set() const{
    return m_named_range_id_isSet;
}

bool OAINamedRange::is_named_range_id_Valid() const{
    return m_named_range_id_isValid;
}

QList<OAIRange> OAINamedRange::getRanges() const {
    return m_ranges;
}
void OAINamedRange::setRanges(const QList<OAIRange> &ranges) {
    m_ranges = ranges;
    m_ranges_isSet = true;
}

bool OAINamedRange::is_ranges_Set() const{
    return m_ranges_isSet;
}

bool OAINamedRange::is_ranges_Valid() const{
    return m_ranges_isValid;
}

bool OAINamedRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_named_range_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ranges.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINamedRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
