/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINamedStylesSuggestionState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINamedStylesSuggestionState::OAINamedStylesSuggestionState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINamedStylesSuggestionState::OAINamedStylesSuggestionState() {
    this->initializeModel();
}

OAINamedStylesSuggestionState::~OAINamedStylesSuggestionState() {}

void OAINamedStylesSuggestionState::initializeModel() {

    m_styles_suggestion_states_isSet = false;
    m_styles_suggestion_states_isValid = false;
}

void OAINamedStylesSuggestionState::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINamedStylesSuggestionState::fromJsonObject(QJsonObject json) {

    m_styles_suggestion_states_isValid = ::OpenAPI::fromJsonValue(m_styles_suggestion_states, json[QString("stylesSuggestionStates")]);
    m_styles_suggestion_states_isSet = !json[QString("stylesSuggestionStates")].isNull() && m_styles_suggestion_states_isValid;
}

QString OAINamedStylesSuggestionState::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINamedStylesSuggestionState::asJsonObject() const {
    QJsonObject obj;
    if (m_styles_suggestion_states.size() > 0) {
        obj.insert(QString("stylesSuggestionStates"), ::OpenAPI::toJsonValue(m_styles_suggestion_states));
    }
    return obj;
}

QList<OAINamedStyleSuggestionState> OAINamedStylesSuggestionState::getStylesSuggestionStates() const {
    return m_styles_suggestion_states;
}
void OAINamedStylesSuggestionState::setStylesSuggestionStates(const QList<OAINamedStyleSuggestionState> &styles_suggestion_states) {
    m_styles_suggestion_states = styles_suggestion_states;
    m_styles_suggestion_states_isSet = true;
}

bool OAINamedStylesSuggestionState::is_styles_suggestion_states_Set() const{
    return m_styles_suggestion_states_isSet;
}

bool OAINamedStylesSuggestionState::is_styles_suggestion_states_Valid() const{
    return m_styles_suggestion_states_isValid;
}

bool OAINamedStylesSuggestionState::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_styles_suggestion_states.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINamedStylesSuggestionState::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
