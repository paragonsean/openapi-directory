/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICropProperties.h
 *
 * The crop properties of an image. The crop rectangle is represented using fractional offsets from the original content&#39;s 4 edges. - If the offset is in the interval (0, 1), the corresponding edge of crop rectangle is positioned inside of the image&#39;s original bounding rectangle. - If the offset is negative or greater than 1, the corresponding edge of crop rectangle is positioned outside of the image&#39;s original bounding rectangle. - If all offsets and rotation angle are 0, the image is not cropped.
 */

#ifndef OAICropProperties_H
#define OAICropProperties_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICropProperties : public OAIObject {
public:
    OAICropProperties();
    OAICropProperties(QString json);
    ~OAICropProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    float getAngle() const;
    void setAngle(const float &angle);
    bool is_angle_Set() const;
    bool is_angle_Valid() const;

    float getOffsetBottom() const;
    void setOffsetBottom(const float &offset_bottom);
    bool is_offset_bottom_Set() const;
    bool is_offset_bottom_Valid() const;

    float getOffsetLeft() const;
    void setOffsetLeft(const float &offset_left);
    bool is_offset_left_Set() const;
    bool is_offset_left_Valid() const;

    float getOffsetRight() const;
    void setOffsetRight(const float &offset_right);
    bool is_offset_right_Set() const;
    bool is_offset_right_Valid() const;

    float getOffsetTop() const;
    void setOffsetTop(const float &offset_top);
    bool is_offset_top_Set() const;
    bool is_offset_top_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    float m_angle;
    bool m_angle_isSet;
    bool m_angle_isValid;

    float m_offset_bottom;
    bool m_offset_bottom_isSet;
    bool m_offset_bottom_isValid;

    float m_offset_left;
    bool m_offset_left_isSet;
    bool m_offset_left_isValid;

    float m_offset_right;
    bool m_offset_right_isSet;
    bool m_offset_right_isValid;

    float m_offset_top;
    bool m_offset_top_isSet;
    bool m_offset_top_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICropProperties)

#endif // OAICropProperties_H
