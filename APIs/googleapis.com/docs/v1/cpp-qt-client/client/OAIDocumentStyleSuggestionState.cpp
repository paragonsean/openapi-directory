/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDocumentStyleSuggestionState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDocumentStyleSuggestionState::OAIDocumentStyleSuggestionState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDocumentStyleSuggestionState::OAIDocumentStyleSuggestionState() {
    this->initializeModel();
}

OAIDocumentStyleSuggestionState::~OAIDocumentStyleSuggestionState() {}

void OAIDocumentStyleSuggestionState::initializeModel() {

    m_background_suggestion_state_isSet = false;
    m_background_suggestion_state_isValid = false;

    m_default_footer_id_suggested_isSet = false;
    m_default_footer_id_suggested_isValid = false;

    m_default_header_id_suggested_isSet = false;
    m_default_header_id_suggested_isValid = false;

    m_even_page_footer_id_suggested_isSet = false;
    m_even_page_footer_id_suggested_isValid = false;

    m_even_page_header_id_suggested_isSet = false;
    m_even_page_header_id_suggested_isValid = false;

    m_first_page_footer_id_suggested_isSet = false;
    m_first_page_footer_id_suggested_isValid = false;

    m_first_page_header_id_suggested_isSet = false;
    m_first_page_header_id_suggested_isValid = false;

    m_flip_page_orientation_suggested_isSet = false;
    m_flip_page_orientation_suggested_isValid = false;

    m_margin_bottom_suggested_isSet = false;
    m_margin_bottom_suggested_isValid = false;

    m_margin_footer_suggested_isSet = false;
    m_margin_footer_suggested_isValid = false;

    m_margin_header_suggested_isSet = false;
    m_margin_header_suggested_isValid = false;

    m_margin_left_suggested_isSet = false;
    m_margin_left_suggested_isValid = false;

    m_margin_right_suggested_isSet = false;
    m_margin_right_suggested_isValid = false;

    m_margin_top_suggested_isSet = false;
    m_margin_top_suggested_isValid = false;

    m_page_number_start_suggested_isSet = false;
    m_page_number_start_suggested_isValid = false;

    m_page_size_suggestion_state_isSet = false;
    m_page_size_suggestion_state_isValid = false;

    m_use_custom_header_footer_margins_suggested_isSet = false;
    m_use_custom_header_footer_margins_suggested_isValid = false;

    m_use_even_page_header_footer_suggested_isSet = false;
    m_use_even_page_header_footer_suggested_isValid = false;

    m_use_first_page_header_footer_suggested_isSet = false;
    m_use_first_page_header_footer_suggested_isValid = false;
}

void OAIDocumentStyleSuggestionState::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDocumentStyleSuggestionState::fromJsonObject(QJsonObject json) {

    m_background_suggestion_state_isValid = ::OpenAPI::fromJsonValue(m_background_suggestion_state, json[QString("backgroundSuggestionState")]);
    m_background_suggestion_state_isSet = !json[QString("backgroundSuggestionState")].isNull() && m_background_suggestion_state_isValid;

    m_default_footer_id_suggested_isValid = ::OpenAPI::fromJsonValue(m_default_footer_id_suggested, json[QString("defaultFooterIdSuggested")]);
    m_default_footer_id_suggested_isSet = !json[QString("defaultFooterIdSuggested")].isNull() && m_default_footer_id_suggested_isValid;

    m_default_header_id_suggested_isValid = ::OpenAPI::fromJsonValue(m_default_header_id_suggested, json[QString("defaultHeaderIdSuggested")]);
    m_default_header_id_suggested_isSet = !json[QString("defaultHeaderIdSuggested")].isNull() && m_default_header_id_suggested_isValid;

    m_even_page_footer_id_suggested_isValid = ::OpenAPI::fromJsonValue(m_even_page_footer_id_suggested, json[QString("evenPageFooterIdSuggested")]);
    m_even_page_footer_id_suggested_isSet = !json[QString("evenPageFooterIdSuggested")].isNull() && m_even_page_footer_id_suggested_isValid;

    m_even_page_header_id_suggested_isValid = ::OpenAPI::fromJsonValue(m_even_page_header_id_suggested, json[QString("evenPageHeaderIdSuggested")]);
    m_even_page_header_id_suggested_isSet = !json[QString("evenPageHeaderIdSuggested")].isNull() && m_even_page_header_id_suggested_isValid;

    m_first_page_footer_id_suggested_isValid = ::OpenAPI::fromJsonValue(m_first_page_footer_id_suggested, json[QString("firstPageFooterIdSuggested")]);
    m_first_page_footer_id_suggested_isSet = !json[QString("firstPageFooterIdSuggested")].isNull() && m_first_page_footer_id_suggested_isValid;

    m_first_page_header_id_suggested_isValid = ::OpenAPI::fromJsonValue(m_first_page_header_id_suggested, json[QString("firstPageHeaderIdSuggested")]);
    m_first_page_header_id_suggested_isSet = !json[QString("firstPageHeaderIdSuggested")].isNull() && m_first_page_header_id_suggested_isValid;

    m_flip_page_orientation_suggested_isValid = ::OpenAPI::fromJsonValue(m_flip_page_orientation_suggested, json[QString("flipPageOrientationSuggested")]);
    m_flip_page_orientation_suggested_isSet = !json[QString("flipPageOrientationSuggested")].isNull() && m_flip_page_orientation_suggested_isValid;

    m_margin_bottom_suggested_isValid = ::OpenAPI::fromJsonValue(m_margin_bottom_suggested, json[QString("marginBottomSuggested")]);
    m_margin_bottom_suggested_isSet = !json[QString("marginBottomSuggested")].isNull() && m_margin_bottom_suggested_isValid;

    m_margin_footer_suggested_isValid = ::OpenAPI::fromJsonValue(m_margin_footer_suggested, json[QString("marginFooterSuggested")]);
    m_margin_footer_suggested_isSet = !json[QString("marginFooterSuggested")].isNull() && m_margin_footer_suggested_isValid;

    m_margin_header_suggested_isValid = ::OpenAPI::fromJsonValue(m_margin_header_suggested, json[QString("marginHeaderSuggested")]);
    m_margin_header_suggested_isSet = !json[QString("marginHeaderSuggested")].isNull() && m_margin_header_suggested_isValid;

    m_margin_left_suggested_isValid = ::OpenAPI::fromJsonValue(m_margin_left_suggested, json[QString("marginLeftSuggested")]);
    m_margin_left_suggested_isSet = !json[QString("marginLeftSuggested")].isNull() && m_margin_left_suggested_isValid;

    m_margin_right_suggested_isValid = ::OpenAPI::fromJsonValue(m_margin_right_suggested, json[QString("marginRightSuggested")]);
    m_margin_right_suggested_isSet = !json[QString("marginRightSuggested")].isNull() && m_margin_right_suggested_isValid;

    m_margin_top_suggested_isValid = ::OpenAPI::fromJsonValue(m_margin_top_suggested, json[QString("marginTopSuggested")]);
    m_margin_top_suggested_isSet = !json[QString("marginTopSuggested")].isNull() && m_margin_top_suggested_isValid;

    m_page_number_start_suggested_isValid = ::OpenAPI::fromJsonValue(m_page_number_start_suggested, json[QString("pageNumberStartSuggested")]);
    m_page_number_start_suggested_isSet = !json[QString("pageNumberStartSuggested")].isNull() && m_page_number_start_suggested_isValid;

    m_page_size_suggestion_state_isValid = ::OpenAPI::fromJsonValue(m_page_size_suggestion_state, json[QString("pageSizeSuggestionState")]);
    m_page_size_suggestion_state_isSet = !json[QString("pageSizeSuggestionState")].isNull() && m_page_size_suggestion_state_isValid;

    m_use_custom_header_footer_margins_suggested_isValid = ::OpenAPI::fromJsonValue(m_use_custom_header_footer_margins_suggested, json[QString("useCustomHeaderFooterMarginsSuggested")]);
    m_use_custom_header_footer_margins_suggested_isSet = !json[QString("useCustomHeaderFooterMarginsSuggested")].isNull() && m_use_custom_header_footer_margins_suggested_isValid;

    m_use_even_page_header_footer_suggested_isValid = ::OpenAPI::fromJsonValue(m_use_even_page_header_footer_suggested, json[QString("useEvenPageHeaderFooterSuggested")]);
    m_use_even_page_header_footer_suggested_isSet = !json[QString("useEvenPageHeaderFooterSuggested")].isNull() && m_use_even_page_header_footer_suggested_isValid;

    m_use_first_page_header_footer_suggested_isValid = ::OpenAPI::fromJsonValue(m_use_first_page_header_footer_suggested, json[QString("useFirstPageHeaderFooterSuggested")]);
    m_use_first_page_header_footer_suggested_isSet = !json[QString("useFirstPageHeaderFooterSuggested")].isNull() && m_use_first_page_header_footer_suggested_isValid;
}

QString OAIDocumentStyleSuggestionState::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDocumentStyleSuggestionState::asJsonObject() const {
    QJsonObject obj;
    if (m_background_suggestion_state.isSet()) {
        obj.insert(QString("backgroundSuggestionState"), ::OpenAPI::toJsonValue(m_background_suggestion_state));
    }
    if (m_default_footer_id_suggested_isSet) {
        obj.insert(QString("defaultFooterIdSuggested"), ::OpenAPI::toJsonValue(m_default_footer_id_suggested));
    }
    if (m_default_header_id_suggested_isSet) {
        obj.insert(QString("defaultHeaderIdSuggested"), ::OpenAPI::toJsonValue(m_default_header_id_suggested));
    }
    if (m_even_page_footer_id_suggested_isSet) {
        obj.insert(QString("evenPageFooterIdSuggested"), ::OpenAPI::toJsonValue(m_even_page_footer_id_suggested));
    }
    if (m_even_page_header_id_suggested_isSet) {
        obj.insert(QString("evenPageHeaderIdSuggested"), ::OpenAPI::toJsonValue(m_even_page_header_id_suggested));
    }
    if (m_first_page_footer_id_suggested_isSet) {
        obj.insert(QString("firstPageFooterIdSuggested"), ::OpenAPI::toJsonValue(m_first_page_footer_id_suggested));
    }
    if (m_first_page_header_id_suggested_isSet) {
        obj.insert(QString("firstPageHeaderIdSuggested"), ::OpenAPI::toJsonValue(m_first_page_header_id_suggested));
    }
    if (m_flip_page_orientation_suggested_isSet) {
        obj.insert(QString("flipPageOrientationSuggested"), ::OpenAPI::toJsonValue(m_flip_page_orientation_suggested));
    }
    if (m_margin_bottom_suggested_isSet) {
        obj.insert(QString("marginBottomSuggested"), ::OpenAPI::toJsonValue(m_margin_bottom_suggested));
    }
    if (m_margin_footer_suggested_isSet) {
        obj.insert(QString("marginFooterSuggested"), ::OpenAPI::toJsonValue(m_margin_footer_suggested));
    }
    if (m_margin_header_suggested_isSet) {
        obj.insert(QString("marginHeaderSuggested"), ::OpenAPI::toJsonValue(m_margin_header_suggested));
    }
    if (m_margin_left_suggested_isSet) {
        obj.insert(QString("marginLeftSuggested"), ::OpenAPI::toJsonValue(m_margin_left_suggested));
    }
    if (m_margin_right_suggested_isSet) {
        obj.insert(QString("marginRightSuggested"), ::OpenAPI::toJsonValue(m_margin_right_suggested));
    }
    if (m_margin_top_suggested_isSet) {
        obj.insert(QString("marginTopSuggested"), ::OpenAPI::toJsonValue(m_margin_top_suggested));
    }
    if (m_page_number_start_suggested_isSet) {
        obj.insert(QString("pageNumberStartSuggested"), ::OpenAPI::toJsonValue(m_page_number_start_suggested));
    }
    if (m_page_size_suggestion_state.isSet()) {
        obj.insert(QString("pageSizeSuggestionState"), ::OpenAPI::toJsonValue(m_page_size_suggestion_state));
    }
    if (m_use_custom_header_footer_margins_suggested_isSet) {
        obj.insert(QString("useCustomHeaderFooterMarginsSuggested"), ::OpenAPI::toJsonValue(m_use_custom_header_footer_margins_suggested));
    }
    if (m_use_even_page_header_footer_suggested_isSet) {
        obj.insert(QString("useEvenPageHeaderFooterSuggested"), ::OpenAPI::toJsonValue(m_use_even_page_header_footer_suggested));
    }
    if (m_use_first_page_header_footer_suggested_isSet) {
        obj.insert(QString("useFirstPageHeaderFooterSuggested"), ::OpenAPI::toJsonValue(m_use_first_page_header_footer_suggested));
    }
    return obj;
}

OAIBackgroundSuggestionState OAIDocumentStyleSuggestionState::getBackgroundSuggestionState() const {
    return m_background_suggestion_state;
}
void OAIDocumentStyleSuggestionState::setBackgroundSuggestionState(const OAIBackgroundSuggestionState &background_suggestion_state) {
    m_background_suggestion_state = background_suggestion_state;
    m_background_suggestion_state_isSet = true;
}

bool OAIDocumentStyleSuggestionState::is_background_suggestion_state_Set() const{
    return m_background_suggestion_state_isSet;
}

bool OAIDocumentStyleSuggestionState::is_background_suggestion_state_Valid() const{
    return m_background_suggestion_state_isValid;
}

bool OAIDocumentStyleSuggestionState::isDefaultFooterIdSuggested() const {
    return m_default_footer_id_suggested;
}
void OAIDocumentStyleSuggestionState::setDefaultFooterIdSuggested(const bool &default_footer_id_suggested) {
    m_default_footer_id_suggested = default_footer_id_suggested;
    m_default_footer_id_suggested_isSet = true;
}

bool OAIDocumentStyleSuggestionState::is_default_footer_id_suggested_Set() const{
    return m_default_footer_id_suggested_isSet;
}

bool OAIDocumentStyleSuggestionState::is_default_footer_id_suggested_Valid() const{
    return m_default_footer_id_suggested_isValid;
}

bool OAIDocumentStyleSuggestionState::isDefaultHeaderIdSuggested() const {
    return m_default_header_id_suggested;
}
void OAIDocumentStyleSuggestionState::setDefaultHeaderIdSuggested(const bool &default_header_id_suggested) {
    m_default_header_id_suggested = default_header_id_suggested;
    m_default_header_id_suggested_isSet = true;
}

bool OAIDocumentStyleSuggestionState::is_default_header_id_suggested_Set() const{
    return m_default_header_id_suggested_isSet;
}

bool OAIDocumentStyleSuggestionState::is_default_header_id_suggested_Valid() const{
    return m_default_header_id_suggested_isValid;
}

bool OAIDocumentStyleSuggestionState::isEvenPageFooterIdSuggested() const {
    return m_even_page_footer_id_suggested;
}
void OAIDocumentStyleSuggestionState::setEvenPageFooterIdSuggested(const bool &even_page_footer_id_suggested) {
    m_even_page_footer_id_suggested = even_page_footer_id_suggested;
    m_even_page_footer_id_suggested_isSet = true;
}

bool OAIDocumentStyleSuggestionState::is_even_page_footer_id_suggested_Set() const{
    return m_even_page_footer_id_suggested_isSet;
}

bool OAIDocumentStyleSuggestionState::is_even_page_footer_id_suggested_Valid() const{
    return m_even_page_footer_id_suggested_isValid;
}

bool OAIDocumentStyleSuggestionState::isEvenPageHeaderIdSuggested() const {
    return m_even_page_header_id_suggested;
}
void OAIDocumentStyleSuggestionState::setEvenPageHeaderIdSuggested(const bool &even_page_header_id_suggested) {
    m_even_page_header_id_suggested = even_page_header_id_suggested;
    m_even_page_header_id_suggested_isSet = true;
}

bool OAIDocumentStyleSuggestionState::is_even_page_header_id_suggested_Set() const{
    return m_even_page_header_id_suggested_isSet;
}

bool OAIDocumentStyleSuggestionState::is_even_page_header_id_suggested_Valid() const{
    return m_even_page_header_id_suggested_isValid;
}

bool OAIDocumentStyleSuggestionState::isFirstPageFooterIdSuggested() const {
    return m_first_page_footer_id_suggested;
}
void OAIDocumentStyleSuggestionState::setFirstPageFooterIdSuggested(const bool &first_page_footer_id_suggested) {
    m_first_page_footer_id_suggested = first_page_footer_id_suggested;
    m_first_page_footer_id_suggested_isSet = true;
}

bool OAIDocumentStyleSuggestionState::is_first_page_footer_id_suggested_Set() const{
    return m_first_page_footer_id_suggested_isSet;
}

bool OAIDocumentStyleSuggestionState::is_first_page_footer_id_suggested_Valid() const{
    return m_first_page_footer_id_suggested_isValid;
}

bool OAIDocumentStyleSuggestionState::isFirstPageHeaderIdSuggested() const {
    return m_first_page_header_id_suggested;
}
void OAIDocumentStyleSuggestionState::setFirstPageHeaderIdSuggested(const bool &first_page_header_id_suggested) {
    m_first_page_header_id_suggested = first_page_header_id_suggested;
    m_first_page_header_id_suggested_isSet = true;
}

bool OAIDocumentStyleSuggestionState::is_first_page_header_id_suggested_Set() const{
    return m_first_page_header_id_suggested_isSet;
}

bool OAIDocumentStyleSuggestionState::is_first_page_header_id_suggested_Valid() const{
    return m_first_page_header_id_suggested_isValid;
}

bool OAIDocumentStyleSuggestionState::isFlipPageOrientationSuggested() const {
    return m_flip_page_orientation_suggested;
}
void OAIDocumentStyleSuggestionState::setFlipPageOrientationSuggested(const bool &flip_page_orientation_suggested) {
    m_flip_page_orientation_suggested = flip_page_orientation_suggested;
    m_flip_page_orientation_suggested_isSet = true;
}

bool OAIDocumentStyleSuggestionState::is_flip_page_orientation_suggested_Set() const{
    return m_flip_page_orientation_suggested_isSet;
}

bool OAIDocumentStyleSuggestionState::is_flip_page_orientation_suggested_Valid() const{
    return m_flip_page_orientation_suggested_isValid;
}

bool OAIDocumentStyleSuggestionState::isMarginBottomSuggested() const {
    return m_margin_bottom_suggested;
}
void OAIDocumentStyleSuggestionState::setMarginBottomSuggested(const bool &margin_bottom_suggested) {
    m_margin_bottom_suggested = margin_bottom_suggested;
    m_margin_bottom_suggested_isSet = true;
}

bool OAIDocumentStyleSuggestionState::is_margin_bottom_suggested_Set() const{
    return m_margin_bottom_suggested_isSet;
}

bool OAIDocumentStyleSuggestionState::is_margin_bottom_suggested_Valid() const{
    return m_margin_bottom_suggested_isValid;
}

bool OAIDocumentStyleSuggestionState::isMarginFooterSuggested() const {
    return m_margin_footer_suggested;
}
void OAIDocumentStyleSuggestionState::setMarginFooterSuggested(const bool &margin_footer_suggested) {
    m_margin_footer_suggested = margin_footer_suggested;
    m_margin_footer_suggested_isSet = true;
}

bool OAIDocumentStyleSuggestionState::is_margin_footer_suggested_Set() const{
    return m_margin_footer_suggested_isSet;
}

bool OAIDocumentStyleSuggestionState::is_margin_footer_suggested_Valid() const{
    return m_margin_footer_suggested_isValid;
}

bool OAIDocumentStyleSuggestionState::isMarginHeaderSuggested() const {
    return m_margin_header_suggested;
}
void OAIDocumentStyleSuggestionState::setMarginHeaderSuggested(const bool &margin_header_suggested) {
    m_margin_header_suggested = margin_header_suggested;
    m_margin_header_suggested_isSet = true;
}

bool OAIDocumentStyleSuggestionState::is_margin_header_suggested_Set() const{
    return m_margin_header_suggested_isSet;
}

bool OAIDocumentStyleSuggestionState::is_margin_header_suggested_Valid() const{
    return m_margin_header_suggested_isValid;
}

bool OAIDocumentStyleSuggestionState::isMarginLeftSuggested() const {
    return m_margin_left_suggested;
}
void OAIDocumentStyleSuggestionState::setMarginLeftSuggested(const bool &margin_left_suggested) {
    m_margin_left_suggested = margin_left_suggested;
    m_margin_left_suggested_isSet = true;
}

bool OAIDocumentStyleSuggestionState::is_margin_left_suggested_Set() const{
    return m_margin_left_suggested_isSet;
}

bool OAIDocumentStyleSuggestionState::is_margin_left_suggested_Valid() const{
    return m_margin_left_suggested_isValid;
}

bool OAIDocumentStyleSuggestionState::isMarginRightSuggested() const {
    return m_margin_right_suggested;
}
void OAIDocumentStyleSuggestionState::setMarginRightSuggested(const bool &margin_right_suggested) {
    m_margin_right_suggested = margin_right_suggested;
    m_margin_right_suggested_isSet = true;
}

bool OAIDocumentStyleSuggestionState::is_margin_right_suggested_Set() const{
    return m_margin_right_suggested_isSet;
}

bool OAIDocumentStyleSuggestionState::is_margin_right_suggested_Valid() const{
    return m_margin_right_suggested_isValid;
}

bool OAIDocumentStyleSuggestionState::isMarginTopSuggested() const {
    return m_margin_top_suggested;
}
void OAIDocumentStyleSuggestionState::setMarginTopSuggested(const bool &margin_top_suggested) {
    m_margin_top_suggested = margin_top_suggested;
    m_margin_top_suggested_isSet = true;
}

bool OAIDocumentStyleSuggestionState::is_margin_top_suggested_Set() const{
    return m_margin_top_suggested_isSet;
}

bool OAIDocumentStyleSuggestionState::is_margin_top_suggested_Valid() const{
    return m_margin_top_suggested_isValid;
}

bool OAIDocumentStyleSuggestionState::isPageNumberStartSuggested() const {
    return m_page_number_start_suggested;
}
void OAIDocumentStyleSuggestionState::setPageNumberStartSuggested(const bool &page_number_start_suggested) {
    m_page_number_start_suggested = page_number_start_suggested;
    m_page_number_start_suggested_isSet = true;
}

bool OAIDocumentStyleSuggestionState::is_page_number_start_suggested_Set() const{
    return m_page_number_start_suggested_isSet;
}

bool OAIDocumentStyleSuggestionState::is_page_number_start_suggested_Valid() const{
    return m_page_number_start_suggested_isValid;
}

OAISizeSuggestionState OAIDocumentStyleSuggestionState::getPageSizeSuggestionState() const {
    return m_page_size_suggestion_state;
}
void OAIDocumentStyleSuggestionState::setPageSizeSuggestionState(const OAISizeSuggestionState &page_size_suggestion_state) {
    m_page_size_suggestion_state = page_size_suggestion_state;
    m_page_size_suggestion_state_isSet = true;
}

bool OAIDocumentStyleSuggestionState::is_page_size_suggestion_state_Set() const{
    return m_page_size_suggestion_state_isSet;
}

bool OAIDocumentStyleSuggestionState::is_page_size_suggestion_state_Valid() const{
    return m_page_size_suggestion_state_isValid;
}

bool OAIDocumentStyleSuggestionState::isUseCustomHeaderFooterMarginsSuggested() const {
    return m_use_custom_header_footer_margins_suggested;
}
void OAIDocumentStyleSuggestionState::setUseCustomHeaderFooterMarginsSuggested(const bool &use_custom_header_footer_margins_suggested) {
    m_use_custom_header_footer_margins_suggested = use_custom_header_footer_margins_suggested;
    m_use_custom_header_footer_margins_suggested_isSet = true;
}

bool OAIDocumentStyleSuggestionState::is_use_custom_header_footer_margins_suggested_Set() const{
    return m_use_custom_header_footer_margins_suggested_isSet;
}

bool OAIDocumentStyleSuggestionState::is_use_custom_header_footer_margins_suggested_Valid() const{
    return m_use_custom_header_footer_margins_suggested_isValid;
}

bool OAIDocumentStyleSuggestionState::isUseEvenPageHeaderFooterSuggested() const {
    return m_use_even_page_header_footer_suggested;
}
void OAIDocumentStyleSuggestionState::setUseEvenPageHeaderFooterSuggested(const bool &use_even_page_header_footer_suggested) {
    m_use_even_page_header_footer_suggested = use_even_page_header_footer_suggested;
    m_use_even_page_header_footer_suggested_isSet = true;
}

bool OAIDocumentStyleSuggestionState::is_use_even_page_header_footer_suggested_Set() const{
    return m_use_even_page_header_footer_suggested_isSet;
}

bool OAIDocumentStyleSuggestionState::is_use_even_page_header_footer_suggested_Valid() const{
    return m_use_even_page_header_footer_suggested_isValid;
}

bool OAIDocumentStyleSuggestionState::isUseFirstPageHeaderFooterSuggested() const {
    return m_use_first_page_header_footer_suggested;
}
void OAIDocumentStyleSuggestionState::setUseFirstPageHeaderFooterSuggested(const bool &use_first_page_header_footer_suggested) {
    m_use_first_page_header_footer_suggested = use_first_page_header_footer_suggested;
    m_use_first_page_header_footer_suggested_isSet = true;
}

bool OAIDocumentStyleSuggestionState::is_use_first_page_header_footer_suggested_Set() const{
    return m_use_first_page_header_footer_suggested_isSet;
}

bool OAIDocumentStyleSuggestionState::is_use_first_page_header_footer_suggested_Valid() const{
    return m_use_first_page_header_footer_suggested_isValid;
}

bool OAIDocumentStyleSuggestionState::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_background_suggestion_state.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_footer_id_suggested_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_header_id_suggested_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_even_page_footer_id_suggested_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_even_page_header_id_suggested_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_page_footer_id_suggested_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_page_header_id_suggested_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_flip_page_orientation_suggested_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_margin_bottom_suggested_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_margin_footer_suggested_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_margin_header_suggested_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_margin_left_suggested_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_margin_right_suggested_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_margin_top_suggested_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_number_start_suggested_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_size_suggestion_state.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_use_custom_header_footer_margins_suggested_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_use_even_page_header_footer_suggested_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_use_first_page_header_footer_suggested_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDocumentStyleSuggestionState::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
