/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEmbeddedObject.h
 *
 * An embedded object in the document.
 */

#ifndef OAIEmbeddedObject_H
#define OAIEmbeddedObject_H

#include <QJsonObject>

#include "OAIDimension.h"
#include "OAIEmbeddedObjectBorder.h"
#include "OAIImageProperties.h"
#include "OAILinkedContentReference.h"
#include "OAIObject.h"
#include "OAISize.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEmbeddedObjectBorder;
class OAIImageProperties;
class OAILinkedContentReference;
class OAIDimension;
class OAISize;

class OAIEmbeddedObject : public OAIObject {
public:
    OAIEmbeddedObject();
    OAIEmbeddedObject(QString json);
    ~OAIEmbeddedObject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIObject getEmbeddedDrawingProperties() const;
    void setEmbeddedDrawingProperties(const OAIObject &embedded_drawing_properties);
    bool is_embedded_drawing_properties_Set() const;
    bool is_embedded_drawing_properties_Valid() const;

    OAIEmbeddedObjectBorder getEmbeddedObjectBorder() const;
    void setEmbeddedObjectBorder(const OAIEmbeddedObjectBorder &embedded_object_border);
    bool is_embedded_object_border_Set() const;
    bool is_embedded_object_border_Valid() const;

    OAIImageProperties getImageProperties() const;
    void setImageProperties(const OAIImageProperties &image_properties);
    bool is_image_properties_Set() const;
    bool is_image_properties_Valid() const;

    OAILinkedContentReference getLinkedContentReference() const;
    void setLinkedContentReference(const OAILinkedContentReference &linked_content_reference);
    bool is_linked_content_reference_Set() const;
    bool is_linked_content_reference_Valid() const;

    OAIDimension getMarginBottom() const;
    void setMarginBottom(const OAIDimension &margin_bottom);
    bool is_margin_bottom_Set() const;
    bool is_margin_bottom_Valid() const;

    OAIDimension getMarginLeft() const;
    void setMarginLeft(const OAIDimension &margin_left);
    bool is_margin_left_Set() const;
    bool is_margin_left_Valid() const;

    OAIDimension getMarginRight() const;
    void setMarginRight(const OAIDimension &margin_right);
    bool is_margin_right_Set() const;
    bool is_margin_right_Valid() const;

    OAIDimension getMarginTop() const;
    void setMarginTop(const OAIDimension &margin_top);
    bool is_margin_top_Set() const;
    bool is_margin_top_Valid() const;

    OAISize getSize() const;
    void setSize(const OAISize &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIObject m_embedded_drawing_properties;
    bool m_embedded_drawing_properties_isSet;
    bool m_embedded_drawing_properties_isValid;

    OAIEmbeddedObjectBorder m_embedded_object_border;
    bool m_embedded_object_border_isSet;
    bool m_embedded_object_border_isValid;

    OAIImageProperties m_image_properties;
    bool m_image_properties_isSet;
    bool m_image_properties_isValid;

    OAILinkedContentReference m_linked_content_reference;
    bool m_linked_content_reference_isSet;
    bool m_linked_content_reference_isValid;

    OAIDimension m_margin_bottom;
    bool m_margin_bottom_isSet;
    bool m_margin_bottom_isValid;

    OAIDimension m_margin_left;
    bool m_margin_left_isSet;
    bool m_margin_left_isValid;

    OAIDimension m_margin_right;
    bool m_margin_right_isSet;
    bool m_margin_right_isValid;

    OAIDimension m_margin_top;
    bool m_margin_top_isSet;
    bool m_margin_top_isValid;

    OAISize m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEmbeddedObject)

#endif // OAIEmbeddedObject_H
