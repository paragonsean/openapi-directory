/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITableCell.h
 *
 * The contents and style of a cell in a Table.
 */

#ifndef OAITableCell_H
#define OAITableCell_H

#include <QJsonObject>

#include "OAIStructuralElement.h"
#include "OAISuggestedTableCellStyle.h"
#include "OAITableCellStyle.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStructuralElement;
class OAISuggestedTableCellStyle;
class OAITableCellStyle;

class OAITableCell : public OAIObject {
public:
    OAITableCell();
    OAITableCell(QString json);
    ~OAITableCell() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIStructuralElement> getContent() const;
    void setContent(const QList<OAIStructuralElement> &content);
    bool is_content_Set() const;
    bool is_content_Valid() const;

    qint32 getEndIndex() const;
    void setEndIndex(const qint32 &end_index);
    bool is_end_index_Set() const;
    bool is_end_index_Valid() const;

    qint32 getStartIndex() const;
    void setStartIndex(const qint32 &start_index);
    bool is_start_index_Set() const;
    bool is_start_index_Valid() const;

    QList<QString> getSuggestedDeletionIds() const;
    void setSuggestedDeletionIds(const QList<QString> &suggested_deletion_ids);
    bool is_suggested_deletion_ids_Set() const;
    bool is_suggested_deletion_ids_Valid() const;

    QList<QString> getSuggestedInsertionIds() const;
    void setSuggestedInsertionIds(const QList<QString> &suggested_insertion_ids);
    bool is_suggested_insertion_ids_Set() const;
    bool is_suggested_insertion_ids_Valid() const;

    QMap<QString, OAISuggestedTableCellStyle> getSuggestedTableCellStyleChanges() const;
    void setSuggestedTableCellStyleChanges(const QMap<QString, OAISuggestedTableCellStyle> &suggested_table_cell_style_changes);
    bool is_suggested_table_cell_style_changes_Set() const;
    bool is_suggested_table_cell_style_changes_Valid() const;

    OAITableCellStyle getTableCellStyle() const;
    void setTableCellStyle(const OAITableCellStyle &table_cell_style);
    bool is_table_cell_style_Set() const;
    bool is_table_cell_style_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIStructuralElement> m_content;
    bool m_content_isSet;
    bool m_content_isValid;

    qint32 m_end_index;
    bool m_end_index_isSet;
    bool m_end_index_isValid;

    qint32 m_start_index;
    bool m_start_index_isSet;
    bool m_start_index_isValid;

    QList<QString> m_suggested_deletion_ids;
    bool m_suggested_deletion_ids_isSet;
    bool m_suggested_deletion_ids_isValid;

    QList<QString> m_suggested_insertion_ids;
    bool m_suggested_insertion_ids_isSet;
    bool m_suggested_insertion_ids_isValid;

    QMap<QString, OAISuggestedTableCellStyle> m_suggested_table_cell_style_changes;
    bool m_suggested_table_cell_style_changes_isSet;
    bool m_suggested_table_cell_style_changes_isValid;

    OAITableCellStyle m_table_cell_style;
    bool m_table_cell_style_isSet;
    bool m_table_cell_style_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITableCell)

#endif // OAITableCell_H
