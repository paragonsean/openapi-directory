/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISuggestedPositionedObjectProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISuggestedPositionedObjectProperties::OAISuggestedPositionedObjectProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISuggestedPositionedObjectProperties::OAISuggestedPositionedObjectProperties() {
    this->initializeModel();
}

OAISuggestedPositionedObjectProperties::~OAISuggestedPositionedObjectProperties() {}

void OAISuggestedPositionedObjectProperties::initializeModel() {

    m_positioned_object_properties_isSet = false;
    m_positioned_object_properties_isValid = false;

    m_positioned_object_properties_suggestion_state_isSet = false;
    m_positioned_object_properties_suggestion_state_isValid = false;
}

void OAISuggestedPositionedObjectProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISuggestedPositionedObjectProperties::fromJsonObject(QJsonObject json) {

    m_positioned_object_properties_isValid = ::OpenAPI::fromJsonValue(m_positioned_object_properties, json[QString("positionedObjectProperties")]);
    m_positioned_object_properties_isSet = !json[QString("positionedObjectProperties")].isNull() && m_positioned_object_properties_isValid;

    m_positioned_object_properties_suggestion_state_isValid = ::OpenAPI::fromJsonValue(m_positioned_object_properties_suggestion_state, json[QString("positionedObjectPropertiesSuggestionState")]);
    m_positioned_object_properties_suggestion_state_isSet = !json[QString("positionedObjectPropertiesSuggestionState")].isNull() && m_positioned_object_properties_suggestion_state_isValid;
}

QString OAISuggestedPositionedObjectProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISuggestedPositionedObjectProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_positioned_object_properties.isSet()) {
        obj.insert(QString("positionedObjectProperties"), ::OpenAPI::toJsonValue(m_positioned_object_properties));
    }
    if (m_positioned_object_properties_suggestion_state.isSet()) {
        obj.insert(QString("positionedObjectPropertiesSuggestionState"), ::OpenAPI::toJsonValue(m_positioned_object_properties_suggestion_state));
    }
    return obj;
}

OAIPositionedObjectProperties OAISuggestedPositionedObjectProperties::getPositionedObjectProperties() const {
    return m_positioned_object_properties;
}
void OAISuggestedPositionedObjectProperties::setPositionedObjectProperties(const OAIPositionedObjectProperties &positioned_object_properties) {
    m_positioned_object_properties = positioned_object_properties;
    m_positioned_object_properties_isSet = true;
}

bool OAISuggestedPositionedObjectProperties::is_positioned_object_properties_Set() const{
    return m_positioned_object_properties_isSet;
}

bool OAISuggestedPositionedObjectProperties::is_positioned_object_properties_Valid() const{
    return m_positioned_object_properties_isValid;
}

OAIPositionedObjectPropertiesSuggestionState OAISuggestedPositionedObjectProperties::getPositionedObjectPropertiesSuggestionState() const {
    return m_positioned_object_properties_suggestion_state;
}
void OAISuggestedPositionedObjectProperties::setPositionedObjectPropertiesSuggestionState(const OAIPositionedObjectPropertiesSuggestionState &positioned_object_properties_suggestion_state) {
    m_positioned_object_properties_suggestion_state = positioned_object_properties_suggestion_state;
    m_positioned_object_properties_suggestion_state_isSet = true;
}

bool OAISuggestedPositionedObjectProperties::is_positioned_object_properties_suggestion_state_Set() const{
    return m_positioned_object_properties_suggestion_state_isSet;
}

bool OAISuggestedPositionedObjectProperties::is_positioned_object_properties_suggestion_state_Valid() const{
    return m_positioned_object_properties_suggestion_state_isValid;
}

bool OAISuggestedPositionedObjectProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_positioned_object_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_positioned_object_properties_suggestion_state.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISuggestedPositionedObjectProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
