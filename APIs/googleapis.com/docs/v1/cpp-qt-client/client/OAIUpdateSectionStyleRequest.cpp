/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateSectionStyleRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateSectionStyleRequest::OAIUpdateSectionStyleRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateSectionStyleRequest::OAIUpdateSectionStyleRequest() {
    this->initializeModel();
}

OAIUpdateSectionStyleRequest::~OAIUpdateSectionStyleRequest() {}

void OAIUpdateSectionStyleRequest::initializeModel() {

    m_fields_isSet = false;
    m_fields_isValid = false;

    m_range_isSet = false;
    m_range_isValid = false;

    m_section_style_isSet = false;
    m_section_style_isValid = false;
}

void OAIUpdateSectionStyleRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateSectionStyleRequest::fromJsonObject(QJsonObject json) {

    m_fields_isValid = ::OpenAPI::fromJsonValue(m_fields, json[QString("fields")]);
    m_fields_isSet = !json[QString("fields")].isNull() && m_fields_isValid;

    m_range_isValid = ::OpenAPI::fromJsonValue(m_range, json[QString("range")]);
    m_range_isSet = !json[QString("range")].isNull() && m_range_isValid;

    m_section_style_isValid = ::OpenAPI::fromJsonValue(m_section_style, json[QString("sectionStyle")]);
    m_section_style_isSet = !json[QString("sectionStyle")].isNull() && m_section_style_isValid;
}

QString OAIUpdateSectionStyleRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateSectionStyleRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_fields_isSet) {
        obj.insert(QString("fields"), ::OpenAPI::toJsonValue(m_fields));
    }
    if (m_range.isSet()) {
        obj.insert(QString("range"), ::OpenAPI::toJsonValue(m_range));
    }
    if (m_section_style.isSet()) {
        obj.insert(QString("sectionStyle"), ::OpenAPI::toJsonValue(m_section_style));
    }
    return obj;
}

QString OAIUpdateSectionStyleRequest::getFields() const {
    return m_fields;
}
void OAIUpdateSectionStyleRequest::setFields(const QString &fields) {
    m_fields = fields;
    m_fields_isSet = true;
}

bool OAIUpdateSectionStyleRequest::is_fields_Set() const{
    return m_fields_isSet;
}

bool OAIUpdateSectionStyleRequest::is_fields_Valid() const{
    return m_fields_isValid;
}

OAIRange OAIUpdateSectionStyleRequest::getRange() const {
    return m_range;
}
void OAIUpdateSectionStyleRequest::setRange(const OAIRange &range) {
    m_range = range;
    m_range_isSet = true;
}

bool OAIUpdateSectionStyleRequest::is_range_Set() const{
    return m_range_isSet;
}

bool OAIUpdateSectionStyleRequest::is_range_Valid() const{
    return m_range_isValid;
}

OAISectionStyle OAIUpdateSectionStyleRequest::getSectionStyle() const {
    return m_section_style;
}
void OAIUpdateSectionStyleRequest::setSectionStyle(const OAISectionStyle &section_style) {
    m_section_style = section_style;
    m_section_style_isSet = true;
}

bool OAIUpdateSectionStyleRequest::is_section_style_Set() const{
    return m_section_style_isSet;
}

bool OAIUpdateSectionStyleRequest::is_section_style_Valid() const{
    return m_section_style_isValid;
}

bool OAIUpdateSectionStyleRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_range.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_section_style.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateSectionStyleRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
