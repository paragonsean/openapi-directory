/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIParagraphStyle.h
 *
 * Styles that apply to a whole paragraph. Inherited paragraph styles are represented as unset fields in this message. A paragraph style&#39;s parent depends on where the paragraph style is defined: * The ParagraphStyle on a Paragraph inherits from the paragraph&#39;s corresponding named style type. * The ParagraphStyle on a named style inherits from the normal text named style. * The ParagraphStyle of the normal text named style inherits from the default paragraph style in the Docs editor. * The ParagraphStyle on a Paragraph element that&#39;s contained in a table may inherit its paragraph style from the table style. If the paragraph style does not inherit from a parent, unsetting fields will revert the style to a value matching the defaults in the Docs editor.
 */

#ifndef OAIParagraphStyle_H
#define OAIParagraphStyle_H

#include <QJsonObject>

#include "OAIDimension.h"
#include "OAIParagraphBorder.h"
#include "OAIShading.h"
#include "OAITabStop.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIParagraphBorder;
class OAIDimension;
class OAIShading;
class OAITabStop;

class OAIParagraphStyle : public OAIObject {
public:
    OAIParagraphStyle();
    OAIParagraphStyle(QString json);
    ~OAIParagraphStyle() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlignment() const;
    void setAlignment(const QString &alignment);
    bool is_alignment_Set() const;
    bool is_alignment_Valid() const;

    bool isAvoidWidowAndOrphan() const;
    void setAvoidWidowAndOrphan(const bool &avoid_widow_and_orphan);
    bool is_avoid_widow_and_orphan_Set() const;
    bool is_avoid_widow_and_orphan_Valid() const;

    OAIParagraphBorder getBorderBetween() const;
    void setBorderBetween(const OAIParagraphBorder &border_between);
    bool is_border_between_Set() const;
    bool is_border_between_Valid() const;

    OAIParagraphBorder getBorderBottom() const;
    void setBorderBottom(const OAIParagraphBorder &border_bottom);
    bool is_border_bottom_Set() const;
    bool is_border_bottom_Valid() const;

    OAIParagraphBorder getBorderLeft() const;
    void setBorderLeft(const OAIParagraphBorder &border_left);
    bool is_border_left_Set() const;
    bool is_border_left_Valid() const;

    OAIParagraphBorder getBorderRight() const;
    void setBorderRight(const OAIParagraphBorder &border_right);
    bool is_border_right_Set() const;
    bool is_border_right_Valid() const;

    OAIParagraphBorder getBorderTop() const;
    void setBorderTop(const OAIParagraphBorder &border_top);
    bool is_border_top_Set() const;
    bool is_border_top_Valid() const;

    QString getDirection() const;
    void setDirection(const QString &direction);
    bool is_direction_Set() const;
    bool is_direction_Valid() const;

    QString getHeadingId() const;
    void setHeadingId(const QString &heading_id);
    bool is_heading_id_Set() const;
    bool is_heading_id_Valid() const;

    OAIDimension getIndentEnd() const;
    void setIndentEnd(const OAIDimension &indent_end);
    bool is_indent_end_Set() const;
    bool is_indent_end_Valid() const;

    OAIDimension getIndentFirstLine() const;
    void setIndentFirstLine(const OAIDimension &indent_first_line);
    bool is_indent_first_line_Set() const;
    bool is_indent_first_line_Valid() const;

    OAIDimension getIndentStart() const;
    void setIndentStart(const OAIDimension &indent_start);
    bool is_indent_start_Set() const;
    bool is_indent_start_Valid() const;

    bool isKeepLinesTogether() const;
    void setKeepLinesTogether(const bool &keep_lines_together);
    bool is_keep_lines_together_Set() const;
    bool is_keep_lines_together_Valid() const;

    bool isKeepWithNext() const;
    void setKeepWithNext(const bool &keep_with_next);
    bool is_keep_with_next_Set() const;
    bool is_keep_with_next_Valid() const;

    float getLineSpacing() const;
    void setLineSpacing(const float &line_spacing);
    bool is_line_spacing_Set() const;
    bool is_line_spacing_Valid() const;

    QString getNamedStyleType() const;
    void setNamedStyleType(const QString &named_style_type);
    bool is_named_style_type_Set() const;
    bool is_named_style_type_Valid() const;

    bool isPageBreakBefore() const;
    void setPageBreakBefore(const bool &page_break_before);
    bool is_page_break_before_Set() const;
    bool is_page_break_before_Valid() const;

    OAIShading getShading() const;
    void setShading(const OAIShading &shading);
    bool is_shading_Set() const;
    bool is_shading_Valid() const;

    OAIDimension getSpaceAbove() const;
    void setSpaceAbove(const OAIDimension &space_above);
    bool is_space_above_Set() const;
    bool is_space_above_Valid() const;

    OAIDimension getSpaceBelow() const;
    void setSpaceBelow(const OAIDimension &space_below);
    bool is_space_below_Set() const;
    bool is_space_below_Valid() const;

    QString getSpacingMode() const;
    void setSpacingMode(const QString &spacing_mode);
    bool is_spacing_mode_Set() const;
    bool is_spacing_mode_Valid() const;

    QList<OAITabStop> getTabStops() const;
    void setTabStops(const QList<OAITabStop> &tab_stops);
    bool is_tab_stops_Set() const;
    bool is_tab_stops_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_alignment;
    bool m_alignment_isSet;
    bool m_alignment_isValid;

    bool m_avoid_widow_and_orphan;
    bool m_avoid_widow_and_orphan_isSet;
    bool m_avoid_widow_and_orphan_isValid;

    OAIParagraphBorder m_border_between;
    bool m_border_between_isSet;
    bool m_border_between_isValid;

    OAIParagraphBorder m_border_bottom;
    bool m_border_bottom_isSet;
    bool m_border_bottom_isValid;

    OAIParagraphBorder m_border_left;
    bool m_border_left_isSet;
    bool m_border_left_isValid;

    OAIParagraphBorder m_border_right;
    bool m_border_right_isSet;
    bool m_border_right_isValid;

    OAIParagraphBorder m_border_top;
    bool m_border_top_isSet;
    bool m_border_top_isValid;

    QString m_direction;
    bool m_direction_isSet;
    bool m_direction_isValid;

    QString m_heading_id;
    bool m_heading_id_isSet;
    bool m_heading_id_isValid;

    OAIDimension m_indent_end;
    bool m_indent_end_isSet;
    bool m_indent_end_isValid;

    OAIDimension m_indent_first_line;
    bool m_indent_first_line_isSet;
    bool m_indent_first_line_isValid;

    OAIDimension m_indent_start;
    bool m_indent_start_isSet;
    bool m_indent_start_isValid;

    bool m_keep_lines_together;
    bool m_keep_lines_together_isSet;
    bool m_keep_lines_together_isValid;

    bool m_keep_with_next;
    bool m_keep_with_next_isSet;
    bool m_keep_with_next_isValid;

    float m_line_spacing;
    bool m_line_spacing_isSet;
    bool m_line_spacing_isValid;

    QString m_named_style_type;
    bool m_named_style_type_isSet;
    bool m_named_style_type_isValid;

    bool m_page_break_before;
    bool m_page_break_before_isSet;
    bool m_page_break_before_isValid;

    OAIShading m_shading;
    bool m_shading_isSet;
    bool m_shading_isValid;

    OAIDimension m_space_above;
    bool m_space_above_isSet;
    bool m_space_above_isValid;

    OAIDimension m_space_below;
    bool m_space_below_isSet;
    bool m_space_below_isValid;

    QString m_spacing_mode;
    bool m_spacing_mode_isSet;
    bool m_spacing_mode_isValid;

    QList<OAITabStop> m_tab_stops;
    bool m_tab_stops_isSet;
    bool m_tab_stops_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIParagraphStyle)

#endif // OAIParagraphStyle_H
