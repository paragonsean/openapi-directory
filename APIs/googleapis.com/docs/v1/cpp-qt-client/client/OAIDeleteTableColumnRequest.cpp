/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeleteTableColumnRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeleteTableColumnRequest::OAIDeleteTableColumnRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeleteTableColumnRequest::OAIDeleteTableColumnRequest() {
    this->initializeModel();
}

OAIDeleteTableColumnRequest::~OAIDeleteTableColumnRequest() {}

void OAIDeleteTableColumnRequest::initializeModel() {

    m_table_cell_location_isSet = false;
    m_table_cell_location_isValid = false;
}

void OAIDeleteTableColumnRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeleteTableColumnRequest::fromJsonObject(QJsonObject json) {

    m_table_cell_location_isValid = ::OpenAPI::fromJsonValue(m_table_cell_location, json[QString("tableCellLocation")]);
    m_table_cell_location_isSet = !json[QString("tableCellLocation")].isNull() && m_table_cell_location_isValid;
}

QString OAIDeleteTableColumnRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeleteTableColumnRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_table_cell_location.isSet()) {
        obj.insert(QString("tableCellLocation"), ::OpenAPI::toJsonValue(m_table_cell_location));
    }
    return obj;
}

OAITableCellLocation OAIDeleteTableColumnRequest::getTableCellLocation() const {
    return m_table_cell_location;
}
void OAIDeleteTableColumnRequest::setTableCellLocation(const OAITableCellLocation &table_cell_location) {
    m_table_cell_location = table_cell_location;
    m_table_cell_location_isSet = true;
}

bool OAIDeleteTableColumnRequest::is_table_cell_location_Set() const{
    return m_table_cell_location_isSet;
}

bool OAIDeleteTableColumnRequest::is_table_cell_location_Valid() const{
    return m_table_cell_location_isValid;
}

bool OAIDeleteTableColumnRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_table_cell_location.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeleteTableColumnRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
