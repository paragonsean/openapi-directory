/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDocumentStyle.h
 *
 * The style of the document.
 */

#ifndef OAIDocumentStyle_H
#define OAIDocumentStyle_H

#include <QJsonObject>

#include "OAIBackground.h"
#include "OAIDimension.h"
#include "OAISize.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBackground;
class OAIDimension;
class OAISize;

class OAIDocumentStyle : public OAIObject {
public:
    OAIDocumentStyle();
    OAIDocumentStyle(QString json);
    ~OAIDocumentStyle() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBackground getBackground() const;
    void setBackground(const OAIBackground &background);
    bool is_background_Set() const;
    bool is_background_Valid() const;

    QString getDefaultFooterId() const;
    void setDefaultFooterId(const QString &default_footer_id);
    bool is_default_footer_id_Set() const;
    bool is_default_footer_id_Valid() const;

    QString getDefaultHeaderId() const;
    void setDefaultHeaderId(const QString &default_header_id);
    bool is_default_header_id_Set() const;
    bool is_default_header_id_Valid() const;

    QString getEvenPageFooterId() const;
    void setEvenPageFooterId(const QString &even_page_footer_id);
    bool is_even_page_footer_id_Set() const;
    bool is_even_page_footer_id_Valid() const;

    QString getEvenPageHeaderId() const;
    void setEvenPageHeaderId(const QString &even_page_header_id);
    bool is_even_page_header_id_Set() const;
    bool is_even_page_header_id_Valid() const;

    QString getFirstPageFooterId() const;
    void setFirstPageFooterId(const QString &first_page_footer_id);
    bool is_first_page_footer_id_Set() const;
    bool is_first_page_footer_id_Valid() const;

    QString getFirstPageHeaderId() const;
    void setFirstPageHeaderId(const QString &first_page_header_id);
    bool is_first_page_header_id_Set() const;
    bool is_first_page_header_id_Valid() const;

    bool isFlipPageOrientation() const;
    void setFlipPageOrientation(const bool &flip_page_orientation);
    bool is_flip_page_orientation_Set() const;
    bool is_flip_page_orientation_Valid() const;

    OAIDimension getMarginBottom() const;
    void setMarginBottom(const OAIDimension &margin_bottom);
    bool is_margin_bottom_Set() const;
    bool is_margin_bottom_Valid() const;

    OAIDimension getMarginFooter() const;
    void setMarginFooter(const OAIDimension &margin_footer);
    bool is_margin_footer_Set() const;
    bool is_margin_footer_Valid() const;

    OAIDimension getMarginHeader() const;
    void setMarginHeader(const OAIDimension &margin_header);
    bool is_margin_header_Set() const;
    bool is_margin_header_Valid() const;

    OAIDimension getMarginLeft() const;
    void setMarginLeft(const OAIDimension &margin_left);
    bool is_margin_left_Set() const;
    bool is_margin_left_Valid() const;

    OAIDimension getMarginRight() const;
    void setMarginRight(const OAIDimension &margin_right);
    bool is_margin_right_Set() const;
    bool is_margin_right_Valid() const;

    OAIDimension getMarginTop() const;
    void setMarginTop(const OAIDimension &margin_top);
    bool is_margin_top_Set() const;
    bool is_margin_top_Valid() const;

    qint32 getPageNumberStart() const;
    void setPageNumberStart(const qint32 &page_number_start);
    bool is_page_number_start_Set() const;
    bool is_page_number_start_Valid() const;

    OAISize getPageSize() const;
    void setPageSize(const OAISize &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    bool isUseCustomHeaderFooterMargins() const;
    void setUseCustomHeaderFooterMargins(const bool &use_custom_header_footer_margins);
    bool is_use_custom_header_footer_margins_Set() const;
    bool is_use_custom_header_footer_margins_Valid() const;

    bool isUseEvenPageHeaderFooter() const;
    void setUseEvenPageHeaderFooter(const bool &use_even_page_header_footer);
    bool is_use_even_page_header_footer_Set() const;
    bool is_use_even_page_header_footer_Valid() const;

    bool isUseFirstPageHeaderFooter() const;
    void setUseFirstPageHeaderFooter(const bool &use_first_page_header_footer);
    bool is_use_first_page_header_footer_Set() const;
    bool is_use_first_page_header_footer_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBackground m_background;
    bool m_background_isSet;
    bool m_background_isValid;

    QString m_default_footer_id;
    bool m_default_footer_id_isSet;
    bool m_default_footer_id_isValid;

    QString m_default_header_id;
    bool m_default_header_id_isSet;
    bool m_default_header_id_isValid;

    QString m_even_page_footer_id;
    bool m_even_page_footer_id_isSet;
    bool m_even_page_footer_id_isValid;

    QString m_even_page_header_id;
    bool m_even_page_header_id_isSet;
    bool m_even_page_header_id_isValid;

    QString m_first_page_footer_id;
    bool m_first_page_footer_id_isSet;
    bool m_first_page_footer_id_isValid;

    QString m_first_page_header_id;
    bool m_first_page_header_id_isSet;
    bool m_first_page_header_id_isValid;

    bool m_flip_page_orientation;
    bool m_flip_page_orientation_isSet;
    bool m_flip_page_orientation_isValid;

    OAIDimension m_margin_bottom;
    bool m_margin_bottom_isSet;
    bool m_margin_bottom_isValid;

    OAIDimension m_margin_footer;
    bool m_margin_footer_isSet;
    bool m_margin_footer_isValid;

    OAIDimension m_margin_header;
    bool m_margin_header_isSet;
    bool m_margin_header_isValid;

    OAIDimension m_margin_left;
    bool m_margin_left_isSet;
    bool m_margin_left_isValid;

    OAIDimension m_margin_right;
    bool m_margin_right_isSet;
    bool m_margin_right_isValid;

    OAIDimension m_margin_top;
    bool m_margin_top_isSet;
    bool m_margin_top_isValid;

    qint32 m_page_number_start;
    bool m_page_number_start_isSet;
    bool m_page_number_start_isValid;

    OAISize m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;

    bool m_use_custom_header_footer_margins;
    bool m_use_custom_header_footer_margins_isSet;
    bool m_use_custom_header_footer_margins_isValid;

    bool m_use_even_page_header_footer;
    bool m_use_even_page_header_footer_isSet;
    bool m_use_even_page_header_footer_isValid;

    bool m_use_first_page_header_footer;
    bool m_use_first_page_header_footer_isSet;
    bool m_use_first_page_header_footer_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDocumentStyle)

#endif // OAIDocumentStyle_H
