/**
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBackgroundSuggestionState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBackgroundSuggestionState::OAIBackgroundSuggestionState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBackgroundSuggestionState::OAIBackgroundSuggestionState() {
    this->initializeModel();
}

OAIBackgroundSuggestionState::~OAIBackgroundSuggestionState() {}

void OAIBackgroundSuggestionState::initializeModel() {

    m_background_color_suggested_isSet = false;
    m_background_color_suggested_isValid = false;
}

void OAIBackgroundSuggestionState::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBackgroundSuggestionState::fromJsonObject(QJsonObject json) {

    m_background_color_suggested_isValid = ::OpenAPI::fromJsonValue(m_background_color_suggested, json[QString("backgroundColorSuggested")]);
    m_background_color_suggested_isSet = !json[QString("backgroundColorSuggested")].isNull() && m_background_color_suggested_isValid;
}

QString OAIBackgroundSuggestionState::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBackgroundSuggestionState::asJsonObject() const {
    QJsonObject obj;
    if (m_background_color_suggested_isSet) {
        obj.insert(QString("backgroundColorSuggested"), ::OpenAPI::toJsonValue(m_background_color_suggested));
    }
    return obj;
}

bool OAIBackgroundSuggestionState::isBackgroundColorSuggested() const {
    return m_background_color_suggested;
}
void OAIBackgroundSuggestionState::setBackgroundColorSuggested(const bool &background_color_suggested) {
    m_background_color_suggested = background_color_suggested;
    m_background_color_suggested_isSet = true;
}

bool OAIBackgroundSuggestionState::is_background_color_suggested_Set() const{
    return m_background_color_suggested_isSet;
}

bool OAIBackgroundSuggestionState::is_background_color_suggested_Valid() const{
    return m_background_color_suggested_isValid;
}

bool OAIBackgroundSuggestionState::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_background_color_suggested_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBackgroundSuggestionState::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
