# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TextStyleSuggestionState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, background_color_suggested: bool=None, baseline_offset_suggested: bool=None, bold_suggested: bool=None, font_size_suggested: bool=None, foreground_color_suggested: bool=None, italic_suggested: bool=None, link_suggested: bool=None, small_caps_suggested: bool=None, strikethrough_suggested: bool=None, underline_suggested: bool=None, weighted_font_family_suggested: bool=None):
        """TextStyleSuggestionState - a model defined in OpenAPI

        :param background_color_suggested: The background_color_suggested of this TextStyleSuggestionState.
        :param baseline_offset_suggested: The baseline_offset_suggested of this TextStyleSuggestionState.
        :param bold_suggested: The bold_suggested of this TextStyleSuggestionState.
        :param font_size_suggested: The font_size_suggested of this TextStyleSuggestionState.
        :param foreground_color_suggested: The foreground_color_suggested of this TextStyleSuggestionState.
        :param italic_suggested: The italic_suggested of this TextStyleSuggestionState.
        :param link_suggested: The link_suggested of this TextStyleSuggestionState.
        :param small_caps_suggested: The small_caps_suggested of this TextStyleSuggestionState.
        :param strikethrough_suggested: The strikethrough_suggested of this TextStyleSuggestionState.
        :param underline_suggested: The underline_suggested of this TextStyleSuggestionState.
        :param weighted_font_family_suggested: The weighted_font_family_suggested of this TextStyleSuggestionState.
        """
        self.openapi_types = {
            'background_color_suggested': bool,
            'baseline_offset_suggested': bool,
            'bold_suggested': bool,
            'font_size_suggested': bool,
            'foreground_color_suggested': bool,
            'italic_suggested': bool,
            'link_suggested': bool,
            'small_caps_suggested': bool,
            'strikethrough_suggested': bool,
            'underline_suggested': bool,
            'weighted_font_family_suggested': bool
        }

        self.attribute_map = {
            'background_color_suggested': 'backgroundColorSuggested',
            'baseline_offset_suggested': 'baselineOffsetSuggested',
            'bold_suggested': 'boldSuggested',
            'font_size_suggested': 'fontSizeSuggested',
            'foreground_color_suggested': 'foregroundColorSuggested',
            'italic_suggested': 'italicSuggested',
            'link_suggested': 'linkSuggested',
            'small_caps_suggested': 'smallCapsSuggested',
            'strikethrough_suggested': 'strikethroughSuggested',
            'underline_suggested': 'underlineSuggested',
            'weighted_font_family_suggested': 'weightedFontFamilySuggested'
        }

        self._background_color_suggested = background_color_suggested
        self._baseline_offset_suggested = baseline_offset_suggested
        self._bold_suggested = bold_suggested
        self._font_size_suggested = font_size_suggested
        self._foreground_color_suggested = foreground_color_suggested
        self._italic_suggested = italic_suggested
        self._link_suggested = link_suggested
        self._small_caps_suggested = small_caps_suggested
        self._strikethrough_suggested = strikethrough_suggested
        self._underline_suggested = underline_suggested
        self._weighted_font_family_suggested = weighted_font_family_suggested

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TextStyleSuggestionState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TextStyleSuggestionState of this TextStyleSuggestionState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def background_color_suggested(self):
        """Gets the background_color_suggested of this TextStyleSuggestionState.

        Indicates if there was a suggested change to background_color.

        :return: The background_color_suggested of this TextStyleSuggestionState.
        :rtype: bool
        """
        return self._background_color_suggested

    @background_color_suggested.setter
    def background_color_suggested(self, background_color_suggested):
        """Sets the background_color_suggested of this TextStyleSuggestionState.

        Indicates if there was a suggested change to background_color.

        :param background_color_suggested: The background_color_suggested of this TextStyleSuggestionState.
        :type background_color_suggested: bool
        """

        self._background_color_suggested = background_color_suggested

    @property
    def baseline_offset_suggested(self):
        """Gets the baseline_offset_suggested of this TextStyleSuggestionState.

        Indicates if there was a suggested change to baseline_offset.

        :return: The baseline_offset_suggested of this TextStyleSuggestionState.
        :rtype: bool
        """
        return self._baseline_offset_suggested

    @baseline_offset_suggested.setter
    def baseline_offset_suggested(self, baseline_offset_suggested):
        """Sets the baseline_offset_suggested of this TextStyleSuggestionState.

        Indicates if there was a suggested change to baseline_offset.

        :param baseline_offset_suggested: The baseline_offset_suggested of this TextStyleSuggestionState.
        :type baseline_offset_suggested: bool
        """

        self._baseline_offset_suggested = baseline_offset_suggested

    @property
    def bold_suggested(self):
        """Gets the bold_suggested of this TextStyleSuggestionState.

        Indicates if there was a suggested change to bold.

        :return: The bold_suggested of this TextStyleSuggestionState.
        :rtype: bool
        """
        return self._bold_suggested

    @bold_suggested.setter
    def bold_suggested(self, bold_suggested):
        """Sets the bold_suggested of this TextStyleSuggestionState.

        Indicates if there was a suggested change to bold.

        :param bold_suggested: The bold_suggested of this TextStyleSuggestionState.
        :type bold_suggested: bool
        """

        self._bold_suggested = bold_suggested

    @property
    def font_size_suggested(self):
        """Gets the font_size_suggested of this TextStyleSuggestionState.

        Indicates if there was a suggested change to font_size.

        :return: The font_size_suggested of this TextStyleSuggestionState.
        :rtype: bool
        """
        return self._font_size_suggested

    @font_size_suggested.setter
    def font_size_suggested(self, font_size_suggested):
        """Sets the font_size_suggested of this TextStyleSuggestionState.

        Indicates if there was a suggested change to font_size.

        :param font_size_suggested: The font_size_suggested of this TextStyleSuggestionState.
        :type font_size_suggested: bool
        """

        self._font_size_suggested = font_size_suggested

    @property
    def foreground_color_suggested(self):
        """Gets the foreground_color_suggested of this TextStyleSuggestionState.

        Indicates if there was a suggested change to foreground_color.

        :return: The foreground_color_suggested of this TextStyleSuggestionState.
        :rtype: bool
        """
        return self._foreground_color_suggested

    @foreground_color_suggested.setter
    def foreground_color_suggested(self, foreground_color_suggested):
        """Sets the foreground_color_suggested of this TextStyleSuggestionState.

        Indicates if there was a suggested change to foreground_color.

        :param foreground_color_suggested: The foreground_color_suggested of this TextStyleSuggestionState.
        :type foreground_color_suggested: bool
        """

        self._foreground_color_suggested = foreground_color_suggested

    @property
    def italic_suggested(self):
        """Gets the italic_suggested of this TextStyleSuggestionState.

        Indicates if there was a suggested change to italic.

        :return: The italic_suggested of this TextStyleSuggestionState.
        :rtype: bool
        """
        return self._italic_suggested

    @italic_suggested.setter
    def italic_suggested(self, italic_suggested):
        """Sets the italic_suggested of this TextStyleSuggestionState.

        Indicates if there was a suggested change to italic.

        :param italic_suggested: The italic_suggested of this TextStyleSuggestionState.
        :type italic_suggested: bool
        """

        self._italic_suggested = italic_suggested

    @property
    def link_suggested(self):
        """Gets the link_suggested of this TextStyleSuggestionState.

        Indicates if there was a suggested change to link.

        :return: The link_suggested of this TextStyleSuggestionState.
        :rtype: bool
        """
        return self._link_suggested

    @link_suggested.setter
    def link_suggested(self, link_suggested):
        """Sets the link_suggested of this TextStyleSuggestionState.

        Indicates if there was a suggested change to link.

        :param link_suggested: The link_suggested of this TextStyleSuggestionState.
        :type link_suggested: bool
        """

        self._link_suggested = link_suggested

    @property
    def small_caps_suggested(self):
        """Gets the small_caps_suggested of this TextStyleSuggestionState.

        Indicates if there was a suggested change to small_caps.

        :return: The small_caps_suggested of this TextStyleSuggestionState.
        :rtype: bool
        """
        return self._small_caps_suggested

    @small_caps_suggested.setter
    def small_caps_suggested(self, small_caps_suggested):
        """Sets the small_caps_suggested of this TextStyleSuggestionState.

        Indicates if there was a suggested change to small_caps.

        :param small_caps_suggested: The small_caps_suggested of this TextStyleSuggestionState.
        :type small_caps_suggested: bool
        """

        self._small_caps_suggested = small_caps_suggested

    @property
    def strikethrough_suggested(self):
        """Gets the strikethrough_suggested of this TextStyleSuggestionState.

        Indicates if there was a suggested change to strikethrough.

        :return: The strikethrough_suggested of this TextStyleSuggestionState.
        :rtype: bool
        """
        return self._strikethrough_suggested

    @strikethrough_suggested.setter
    def strikethrough_suggested(self, strikethrough_suggested):
        """Sets the strikethrough_suggested of this TextStyleSuggestionState.

        Indicates if there was a suggested change to strikethrough.

        :param strikethrough_suggested: The strikethrough_suggested of this TextStyleSuggestionState.
        :type strikethrough_suggested: bool
        """

        self._strikethrough_suggested = strikethrough_suggested

    @property
    def underline_suggested(self):
        """Gets the underline_suggested of this TextStyleSuggestionState.

        Indicates if there was a suggested change to underline.

        :return: The underline_suggested of this TextStyleSuggestionState.
        :rtype: bool
        """
        return self._underline_suggested

    @underline_suggested.setter
    def underline_suggested(self, underline_suggested):
        """Sets the underline_suggested of this TextStyleSuggestionState.

        Indicates if there was a suggested change to underline.

        :param underline_suggested: The underline_suggested of this TextStyleSuggestionState.
        :type underline_suggested: bool
        """

        self._underline_suggested = underline_suggested

    @property
    def weighted_font_family_suggested(self):
        """Gets the weighted_font_family_suggested of this TextStyleSuggestionState.

        Indicates if there was a suggested change to weighted_font_family.

        :return: The weighted_font_family_suggested of this TextStyleSuggestionState.
        :rtype: bool
        """
        return self._weighted_font_family_suggested

    @weighted_font_family_suggested.setter
    def weighted_font_family_suggested(self, weighted_font_family_suggested):
        """Sets the weighted_font_family_suggested of this TextStyleSuggestionState.

        Indicates if there was a suggested change to weighted_font_family.

        :param weighted_font_family_suggested: The weighted_font_family_suggested of this TextStyleSuggestionState.
        :type weighted_font_family_suggested: bool
        """

        self._weighted_font_family_suggested = weighted_font_family_suggested
