# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.positioned_object_properties import PositionedObjectProperties
from openapi_server.models.positioned_object_properties_suggestion_state import PositionedObjectPropertiesSuggestionState
from openapi_server import util


class SuggestedPositionedObjectProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, positioned_object_properties: PositionedObjectProperties=None, positioned_object_properties_suggestion_state: PositionedObjectPropertiesSuggestionState=None):
        """SuggestedPositionedObjectProperties - a model defined in OpenAPI

        :param positioned_object_properties: The positioned_object_properties of this SuggestedPositionedObjectProperties.
        :param positioned_object_properties_suggestion_state: The positioned_object_properties_suggestion_state of this SuggestedPositionedObjectProperties.
        """
        self.openapi_types = {
            'positioned_object_properties': PositionedObjectProperties,
            'positioned_object_properties_suggestion_state': PositionedObjectPropertiesSuggestionState
        }

        self.attribute_map = {
            'positioned_object_properties': 'positionedObjectProperties',
            'positioned_object_properties_suggestion_state': 'positionedObjectPropertiesSuggestionState'
        }

        self._positioned_object_properties = positioned_object_properties
        self._positioned_object_properties_suggestion_state = positioned_object_properties_suggestion_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SuggestedPositionedObjectProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SuggestedPositionedObjectProperties of this SuggestedPositionedObjectProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def positioned_object_properties(self):
        """Gets the positioned_object_properties of this SuggestedPositionedObjectProperties.


        :return: The positioned_object_properties of this SuggestedPositionedObjectProperties.
        :rtype: PositionedObjectProperties
        """
        return self._positioned_object_properties

    @positioned_object_properties.setter
    def positioned_object_properties(self, positioned_object_properties):
        """Sets the positioned_object_properties of this SuggestedPositionedObjectProperties.


        :param positioned_object_properties: The positioned_object_properties of this SuggestedPositionedObjectProperties.
        :type positioned_object_properties: PositionedObjectProperties
        """

        self._positioned_object_properties = positioned_object_properties

    @property
    def positioned_object_properties_suggestion_state(self):
        """Gets the positioned_object_properties_suggestion_state of this SuggestedPositionedObjectProperties.


        :return: The positioned_object_properties_suggestion_state of this SuggestedPositionedObjectProperties.
        :rtype: PositionedObjectPropertiesSuggestionState
        """
        return self._positioned_object_properties_suggestion_state

    @positioned_object_properties_suggestion_state.setter
    def positioned_object_properties_suggestion_state(self, positioned_object_properties_suggestion_state):
        """Sets the positioned_object_properties_suggestion_state of this SuggestedPositionedObjectProperties.


        :param positioned_object_properties_suggestion_state: The positioned_object_properties_suggestion_state of this SuggestedPositionedObjectProperties.
        :type positioned_object_properties_suggestion_state: PositionedObjectPropertiesSuggestionState
        """

        self._positioned_object_properties_suggestion_state = positioned_object_properties_suggestion_state
