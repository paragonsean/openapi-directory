# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.auto_text import AutoText
from openapi_server.models.column_break import ColumnBreak
from openapi_server.models.equation import Equation
from openapi_server.models.footnote_reference import FootnoteReference
from openapi_server.models.horizontal_rule import HorizontalRule
from openapi_server.models.inline_object_element import InlineObjectElement
from openapi_server.models.page_break import PageBreak
from openapi_server.models.person import Person
from openapi_server.models.rich_link import RichLink
from openapi_server.models.text_run import TextRun
from openapi_server import util


class ParagraphElement(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_text: AutoText=None, column_break: ColumnBreak=None, end_index: int=None, equation: Equation=None, footnote_reference: FootnoteReference=None, horizontal_rule: HorizontalRule=None, inline_object_element: InlineObjectElement=None, page_break: PageBreak=None, person: Person=None, rich_link: RichLink=None, start_index: int=None, text_run: TextRun=None):
        """ParagraphElement - a model defined in OpenAPI

        :param auto_text: The auto_text of this ParagraphElement.
        :param column_break: The column_break of this ParagraphElement.
        :param end_index: The end_index of this ParagraphElement.
        :param equation: The equation of this ParagraphElement.
        :param footnote_reference: The footnote_reference of this ParagraphElement.
        :param horizontal_rule: The horizontal_rule of this ParagraphElement.
        :param inline_object_element: The inline_object_element of this ParagraphElement.
        :param page_break: The page_break of this ParagraphElement.
        :param person: The person of this ParagraphElement.
        :param rich_link: The rich_link of this ParagraphElement.
        :param start_index: The start_index of this ParagraphElement.
        :param text_run: The text_run of this ParagraphElement.
        """
        self.openapi_types = {
            'auto_text': AutoText,
            'column_break': ColumnBreak,
            'end_index': int,
            'equation': Equation,
            'footnote_reference': FootnoteReference,
            'horizontal_rule': HorizontalRule,
            'inline_object_element': InlineObjectElement,
            'page_break': PageBreak,
            'person': Person,
            'rich_link': RichLink,
            'start_index': int,
            'text_run': TextRun
        }

        self.attribute_map = {
            'auto_text': 'autoText',
            'column_break': 'columnBreak',
            'end_index': 'endIndex',
            'equation': 'equation',
            'footnote_reference': 'footnoteReference',
            'horizontal_rule': 'horizontalRule',
            'inline_object_element': 'inlineObjectElement',
            'page_break': 'pageBreak',
            'person': 'person',
            'rich_link': 'richLink',
            'start_index': 'startIndex',
            'text_run': 'textRun'
        }

        self._auto_text = auto_text
        self._column_break = column_break
        self._end_index = end_index
        self._equation = equation
        self._footnote_reference = footnote_reference
        self._horizontal_rule = horizontal_rule
        self._inline_object_element = inline_object_element
        self._page_break = page_break
        self._person = person
        self._rich_link = rich_link
        self._start_index = start_index
        self._text_run = text_run

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ParagraphElement':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ParagraphElement of this ParagraphElement.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_text(self):
        """Gets the auto_text of this ParagraphElement.


        :return: The auto_text of this ParagraphElement.
        :rtype: AutoText
        """
        return self._auto_text

    @auto_text.setter
    def auto_text(self, auto_text):
        """Sets the auto_text of this ParagraphElement.


        :param auto_text: The auto_text of this ParagraphElement.
        :type auto_text: AutoText
        """

        self._auto_text = auto_text

    @property
    def column_break(self):
        """Gets the column_break of this ParagraphElement.


        :return: The column_break of this ParagraphElement.
        :rtype: ColumnBreak
        """
        return self._column_break

    @column_break.setter
    def column_break(self, column_break):
        """Sets the column_break of this ParagraphElement.


        :param column_break: The column_break of this ParagraphElement.
        :type column_break: ColumnBreak
        """

        self._column_break = column_break

    @property
    def end_index(self):
        """Gets the end_index of this ParagraphElement.

        The zero-base end index of this paragraph element, exclusive, in UTF-16 code units.

        :return: The end_index of this ParagraphElement.
        :rtype: int
        """
        return self._end_index

    @end_index.setter
    def end_index(self, end_index):
        """Sets the end_index of this ParagraphElement.

        The zero-base end index of this paragraph element, exclusive, in UTF-16 code units.

        :param end_index: The end_index of this ParagraphElement.
        :type end_index: int
        """

        self._end_index = end_index

    @property
    def equation(self):
        """Gets the equation of this ParagraphElement.


        :return: The equation of this ParagraphElement.
        :rtype: Equation
        """
        return self._equation

    @equation.setter
    def equation(self, equation):
        """Sets the equation of this ParagraphElement.


        :param equation: The equation of this ParagraphElement.
        :type equation: Equation
        """

        self._equation = equation

    @property
    def footnote_reference(self):
        """Gets the footnote_reference of this ParagraphElement.


        :return: The footnote_reference of this ParagraphElement.
        :rtype: FootnoteReference
        """
        return self._footnote_reference

    @footnote_reference.setter
    def footnote_reference(self, footnote_reference):
        """Sets the footnote_reference of this ParagraphElement.


        :param footnote_reference: The footnote_reference of this ParagraphElement.
        :type footnote_reference: FootnoteReference
        """

        self._footnote_reference = footnote_reference

    @property
    def horizontal_rule(self):
        """Gets the horizontal_rule of this ParagraphElement.


        :return: The horizontal_rule of this ParagraphElement.
        :rtype: HorizontalRule
        """
        return self._horizontal_rule

    @horizontal_rule.setter
    def horizontal_rule(self, horizontal_rule):
        """Sets the horizontal_rule of this ParagraphElement.


        :param horizontal_rule: The horizontal_rule of this ParagraphElement.
        :type horizontal_rule: HorizontalRule
        """

        self._horizontal_rule = horizontal_rule

    @property
    def inline_object_element(self):
        """Gets the inline_object_element of this ParagraphElement.


        :return: The inline_object_element of this ParagraphElement.
        :rtype: InlineObjectElement
        """
        return self._inline_object_element

    @inline_object_element.setter
    def inline_object_element(self, inline_object_element):
        """Sets the inline_object_element of this ParagraphElement.


        :param inline_object_element: The inline_object_element of this ParagraphElement.
        :type inline_object_element: InlineObjectElement
        """

        self._inline_object_element = inline_object_element

    @property
    def page_break(self):
        """Gets the page_break of this ParagraphElement.


        :return: The page_break of this ParagraphElement.
        :rtype: PageBreak
        """
        return self._page_break

    @page_break.setter
    def page_break(self, page_break):
        """Sets the page_break of this ParagraphElement.


        :param page_break: The page_break of this ParagraphElement.
        :type page_break: PageBreak
        """

        self._page_break = page_break

    @property
    def person(self):
        """Gets the person of this ParagraphElement.


        :return: The person of this ParagraphElement.
        :rtype: Person
        """
        return self._person

    @person.setter
    def person(self, person):
        """Sets the person of this ParagraphElement.


        :param person: The person of this ParagraphElement.
        :type person: Person
        """

        self._person = person

    @property
    def rich_link(self):
        """Gets the rich_link of this ParagraphElement.


        :return: The rich_link of this ParagraphElement.
        :rtype: RichLink
        """
        return self._rich_link

    @rich_link.setter
    def rich_link(self, rich_link):
        """Sets the rich_link of this ParagraphElement.


        :param rich_link: The rich_link of this ParagraphElement.
        :type rich_link: RichLink
        """

        self._rich_link = rich_link

    @property
    def start_index(self):
        """Gets the start_index of this ParagraphElement.

        The zero-based start index of this paragraph element, in UTF-16 code units.

        :return: The start_index of this ParagraphElement.
        :rtype: int
        """
        return self._start_index

    @start_index.setter
    def start_index(self, start_index):
        """Sets the start_index of this ParagraphElement.

        The zero-based start index of this paragraph element, in UTF-16 code units.

        :param start_index: The start_index of this ParagraphElement.
        :type start_index: int
        """

        self._start_index = start_index

    @property
    def text_run(self):
        """Gets the text_run of this ParagraphElement.


        :return: The text_run of this ParagraphElement.
        :rtype: TextRun
        """
        return self._text_run

    @text_run.setter
    def text_run(self, text_run):
        """Sets the text_run of this ParagraphElement.


        :param text_run: The text_run of this ParagraphElement.
        :type text_run: TextRun
        """

        self._text_run = text_run
