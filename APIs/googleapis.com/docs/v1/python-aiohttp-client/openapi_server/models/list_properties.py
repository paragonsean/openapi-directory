# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.nesting_level import NestingLevel
from openapi_server import util


class ListProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, nesting_levels: List[NestingLevel]=None):
        """ListProperties - a model defined in OpenAPI

        :param nesting_levels: The nesting_levels of this ListProperties.
        """
        self.openapi_types = {
            'nesting_levels': List[NestingLevel]
        }

        self.attribute_map = {
            'nesting_levels': 'nestingLevels'
        }

        self._nesting_levels = nesting_levels

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListProperties of this ListProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nesting_levels(self):
        """Gets the nesting_levels of this ListProperties.

        Describes the properties of the bullets at the associated level. A list has at most 9 levels of nesting with nesting level 0 corresponding to the top-most level and nesting level 8 corresponding to the most nested level. The nesting levels are returned in ascending order with the least nested returned first.

        :return: The nesting_levels of this ListProperties.
        :rtype: List[NestingLevel]
        """
        return self._nesting_levels

    @nesting_levels.setter
    def nesting_levels(self, nesting_levels):
        """Sets the nesting_levels of this ListProperties.

        Describes the properties of the bullets at the associated level. A list has at most 9 levels of nesting with nesting level 0 corresponding to the top-most level and nesting level 8 corresponding to the most nested level. The nesting levels are returned in ascending order with the least nested returned first.

        :param nesting_levels: The nesting_levels of this ListProperties.
        :type nesting_levels: List[NestingLevel]
        """

        self._nesting_levels = nesting_levels
