# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RichLinkProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mime_type: str=None, title: str=None, uri: str=None):
        """RichLinkProperties - a model defined in OpenAPI

        :param mime_type: The mime_type of this RichLinkProperties.
        :param title: The title of this RichLinkProperties.
        :param uri: The uri of this RichLinkProperties.
        """
        self.openapi_types = {
            'mime_type': str,
            'title': str,
            'uri': str
        }

        self.attribute_map = {
            'mime_type': 'mimeType',
            'title': 'title',
            'uri': 'uri'
        }

        self._mime_type = mime_type
        self._title = title
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RichLinkProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RichLinkProperties of this RichLinkProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mime_type(self):
        """Gets the mime_type of this RichLinkProperties.

        Output only. The [MIME type](https://developers.google.com/drive/api/v3/mime-types) of the RichLink, if there's one (for example, when it's a file in Drive).

        :return: The mime_type of this RichLinkProperties.
        :rtype: str
        """
        return self._mime_type

    @mime_type.setter
    def mime_type(self, mime_type):
        """Sets the mime_type of this RichLinkProperties.

        Output only. The [MIME type](https://developers.google.com/drive/api/v3/mime-types) of the RichLink, if there's one (for example, when it's a file in Drive).

        :param mime_type: The mime_type of this RichLinkProperties.
        :type mime_type: str
        """

        self._mime_type = mime_type

    @property
    def title(self):
        """Gets the title of this RichLinkProperties.

        Output only. The title of the RichLink as displayed in the link. This title matches the title of the linked resource at the time of the insertion or last update of the link. This field is always present.

        :return: The title of this RichLinkProperties.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this RichLinkProperties.

        Output only. The title of the RichLink as displayed in the link. This title matches the title of the linked resource at the time of the insertion or last update of the link. This field is always present.

        :param title: The title of this RichLinkProperties.
        :type title: str
        """

        self._title = title

    @property
    def uri(self):
        """Gets the uri of this RichLinkProperties.

        Output only. The URI to the RichLink. This is always present.

        :return: The uri of this RichLinkProperties.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this RichLinkProperties.

        Output only. The URI to the RichLink. This is always present.

        :param uri: The uri of this RichLinkProperties.
        :type uri: str
        """

        self._uri = uri
