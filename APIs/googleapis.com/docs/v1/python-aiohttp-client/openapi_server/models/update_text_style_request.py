# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.range import Range
from openapi_server.models.text_style import TextStyle
from openapi_server import util


class UpdateTextStyleRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fields: str=None, range: Range=None, text_style: TextStyle=None):
        """UpdateTextStyleRequest - a model defined in OpenAPI

        :param fields: The fields of this UpdateTextStyleRequest.
        :param range: The range of this UpdateTextStyleRequest.
        :param text_style: The text_style of this UpdateTextStyleRequest.
        """
        self.openapi_types = {
            'fields': str,
            'range': Range,
            'text_style': TextStyle
        }

        self.attribute_map = {
            'fields': 'fields',
            'range': 'range',
            'text_style': 'textStyle'
        }

        self._fields = fields
        self._range = range
        self._text_style = text_style

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateTextStyleRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateTextStyleRequest of this UpdateTextStyleRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fields(self):
        """Gets the fields of this UpdateTextStyleRequest.

        The fields that should be updated. At least one field must be specified. The root `text_style` is implied and should not be specified. A single `\"*\"` can be used as short-hand for listing every field. For example, to update the text style to bold, set `fields` to `\"bold\"`. To reset a property to its default value, include its field name in the field mask but leave the field itself unset.

        :return: The fields of this UpdateTextStyleRequest.
        :rtype: str
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this UpdateTextStyleRequest.

        The fields that should be updated. At least one field must be specified. The root `text_style` is implied and should not be specified. A single `\"*\"` can be used as short-hand for listing every field. For example, to update the text style to bold, set `fields` to `\"bold\"`. To reset a property to its default value, include its field name in the field mask but leave the field itself unset.

        :param fields: The fields of this UpdateTextStyleRequest.
        :type fields: str
        """

        self._fields = fields

    @property
    def range(self):
        """Gets the range of this UpdateTextStyleRequest.


        :return: The range of this UpdateTextStyleRequest.
        :rtype: Range
        """
        return self._range

    @range.setter
    def range(self, range):
        """Sets the range of this UpdateTextStyleRequest.


        :param range: The range of this UpdateTextStyleRequest.
        :type range: Range
        """

        self._range = range

    @property
    def text_style(self):
        """Gets the text_style of this UpdateTextStyleRequest.


        :return: The text_style of this UpdateTextStyleRequest.
        :rtype: TextStyle
        """
        return self._text_style

    @text_style.setter
    def text_style(self, text_style):
        """Sets the text_style of this UpdateTextStyleRequest.


        :param text_style: The text_style of this UpdateTextStyleRequest.
        :type text_style: TextStyle
        """

        self._text_style = text_style
