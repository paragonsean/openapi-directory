# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.request import Request
from openapi_server.models.write_control import WriteControl
from openapi_server import util


class BatchUpdateDocumentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, requests: List[Request]=None, write_control: WriteControl=None):
        """BatchUpdateDocumentRequest - a model defined in OpenAPI

        :param requests: The requests of this BatchUpdateDocumentRequest.
        :param write_control: The write_control of this BatchUpdateDocumentRequest.
        """
        self.openapi_types = {
            'requests': List[Request],
            'write_control': WriteControl
        }

        self.attribute_map = {
            'requests': 'requests',
            'write_control': 'writeControl'
        }

        self._requests = requests
        self._write_control = write_control

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchUpdateDocumentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchUpdateDocumentRequest of this BatchUpdateDocumentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def requests(self):
        """Gets the requests of this BatchUpdateDocumentRequest.

        A list of updates to apply to the document.

        :return: The requests of this BatchUpdateDocumentRequest.
        :rtype: List[Request]
        """
        return self._requests

    @requests.setter
    def requests(self, requests):
        """Sets the requests of this BatchUpdateDocumentRequest.

        A list of updates to apply to the document.

        :param requests: The requests of this BatchUpdateDocumentRequest.
        :type requests: List[Request]
        """

        self._requests = requests

    @property
    def write_control(self):
        """Gets the write_control of this BatchUpdateDocumentRequest.


        :return: The write_control of this BatchUpdateDocumentRequest.
        :rtype: WriteControl
        """
        return self._write_control

    @write_control.setter
    def write_control(self, write_control):
        """Sets the write_control of this BatchUpdateDocumentRequest.


        :param write_control: The write_control of this BatchUpdateDocumentRequest.
        :type write_control: WriteControl
        """

        self._write_control = write_control
