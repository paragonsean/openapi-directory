# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Link(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bookmark_id: str=None, heading_id: str=None, url: str=None):
        """Link - a model defined in OpenAPI

        :param bookmark_id: The bookmark_id of this Link.
        :param heading_id: The heading_id of this Link.
        :param url: The url of this Link.
        """
        self.openapi_types = {
            'bookmark_id': str,
            'heading_id': str,
            'url': str
        }

        self.attribute_map = {
            'bookmark_id': 'bookmarkId',
            'heading_id': 'headingId',
            'url': 'url'
        }

        self._bookmark_id = bookmark_id
        self._heading_id = heading_id
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Link':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Link of this Link.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bookmark_id(self):
        """Gets the bookmark_id of this Link.

        The ID of a bookmark in this document.

        :return: The bookmark_id of this Link.
        :rtype: str
        """
        return self._bookmark_id

    @bookmark_id.setter
    def bookmark_id(self, bookmark_id):
        """Sets the bookmark_id of this Link.

        The ID of a bookmark in this document.

        :param bookmark_id: The bookmark_id of this Link.
        :type bookmark_id: str
        """

        self._bookmark_id = bookmark_id

    @property
    def heading_id(self):
        """Gets the heading_id of this Link.

        The ID of a heading in this document.

        :return: The heading_id of this Link.
        :rtype: str
        """
        return self._heading_id

    @heading_id.setter
    def heading_id(self, heading_id):
        """Sets the heading_id of this Link.

        The ID of a heading in this document.

        :param heading_id: The heading_id of this Link.
        :type heading_id: str
        """

        self._heading_id = heading_id

    @property
    def url(self):
        """Gets the url of this Link.

        An external URL.

        :return: The url of this Link.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Link.

        An external URL.

        :param url: The url of this Link.
        :type url: str
        """

        self._url = url
