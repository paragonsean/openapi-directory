# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.response import Response
from openapi_server.models.write_control import WriteControl
from openapi_server import util


class BatchUpdateDocumentResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, document_id: str=None, replies: List[Response]=None, write_control: WriteControl=None):
        """BatchUpdateDocumentResponse - a model defined in OpenAPI

        :param document_id: The document_id of this BatchUpdateDocumentResponse.
        :param replies: The replies of this BatchUpdateDocumentResponse.
        :param write_control: The write_control of this BatchUpdateDocumentResponse.
        """
        self.openapi_types = {
            'document_id': str,
            'replies': List[Response],
            'write_control': WriteControl
        }

        self.attribute_map = {
            'document_id': 'documentId',
            'replies': 'replies',
            'write_control': 'writeControl'
        }

        self._document_id = document_id
        self._replies = replies
        self._write_control = write_control

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchUpdateDocumentResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchUpdateDocumentResponse of this BatchUpdateDocumentResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def document_id(self):
        """Gets the document_id of this BatchUpdateDocumentResponse.

        The ID of the document to which the updates were applied to.

        :return: The document_id of this BatchUpdateDocumentResponse.
        :rtype: str
        """
        return self._document_id

    @document_id.setter
    def document_id(self, document_id):
        """Sets the document_id of this BatchUpdateDocumentResponse.

        The ID of the document to which the updates were applied to.

        :param document_id: The document_id of this BatchUpdateDocumentResponse.
        :type document_id: str
        """

        self._document_id = document_id

    @property
    def replies(self):
        """Gets the replies of this BatchUpdateDocumentResponse.

        The reply of the updates. This maps 1:1 with the updates, although replies to some requests may be empty.

        :return: The replies of this BatchUpdateDocumentResponse.
        :rtype: List[Response]
        """
        return self._replies

    @replies.setter
    def replies(self, replies):
        """Sets the replies of this BatchUpdateDocumentResponse.

        The reply of the updates. This maps 1:1 with the updates, although replies to some requests may be empty.

        :param replies: The replies of this BatchUpdateDocumentResponse.
        :type replies: List[Response]
        """

        self._replies = replies

    @property
    def write_control(self):
        """Gets the write_control of this BatchUpdateDocumentResponse.


        :return: The write_control of this BatchUpdateDocumentResponse.
        :rtype: WriteControl
        """
        return self._write_control

    @write_control.setter
    def write_control(self, write_control):
        """Sets the write_control of this BatchUpdateDocumentResponse.


        :param write_control: The write_control of this BatchUpdateDocumentResponse.
        :type write_control: WriteControl
        """

        self._write_control = write_control
