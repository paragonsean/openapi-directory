# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.paragraph import Paragraph
from openapi_server.models.section_break import SectionBreak
from openapi_server.models.table import Table
from openapi_server.models.table_of_contents import TableOfContents
from openapi_server import util


class StructuralElement(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_index: int=None, paragraph: Paragraph=None, section_break: SectionBreak=None, start_index: int=None, table: Table=None, table_of_contents: TableOfContents=None):
        """StructuralElement - a model defined in OpenAPI

        :param end_index: The end_index of this StructuralElement.
        :param paragraph: The paragraph of this StructuralElement.
        :param section_break: The section_break of this StructuralElement.
        :param start_index: The start_index of this StructuralElement.
        :param table: The table of this StructuralElement.
        :param table_of_contents: The table_of_contents of this StructuralElement.
        """
        self.openapi_types = {
            'end_index': int,
            'paragraph': Paragraph,
            'section_break': SectionBreak,
            'start_index': int,
            'table': Table,
            'table_of_contents': TableOfContents
        }

        self.attribute_map = {
            'end_index': 'endIndex',
            'paragraph': 'paragraph',
            'section_break': 'sectionBreak',
            'start_index': 'startIndex',
            'table': 'table',
            'table_of_contents': 'tableOfContents'
        }

        self._end_index = end_index
        self._paragraph = paragraph
        self._section_break = section_break
        self._start_index = start_index
        self._table = table
        self._table_of_contents = table_of_contents

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StructuralElement':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StructuralElement of this StructuralElement.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_index(self):
        """Gets the end_index of this StructuralElement.

        The zero-based end index of this structural element, exclusive, in UTF-16 code units.

        :return: The end_index of this StructuralElement.
        :rtype: int
        """
        return self._end_index

    @end_index.setter
    def end_index(self, end_index):
        """Sets the end_index of this StructuralElement.

        The zero-based end index of this structural element, exclusive, in UTF-16 code units.

        :param end_index: The end_index of this StructuralElement.
        :type end_index: int
        """

        self._end_index = end_index

    @property
    def paragraph(self):
        """Gets the paragraph of this StructuralElement.


        :return: The paragraph of this StructuralElement.
        :rtype: Paragraph
        """
        return self._paragraph

    @paragraph.setter
    def paragraph(self, paragraph):
        """Sets the paragraph of this StructuralElement.


        :param paragraph: The paragraph of this StructuralElement.
        :type paragraph: Paragraph
        """

        self._paragraph = paragraph

    @property
    def section_break(self):
        """Gets the section_break of this StructuralElement.


        :return: The section_break of this StructuralElement.
        :rtype: SectionBreak
        """
        return self._section_break

    @section_break.setter
    def section_break(self, section_break):
        """Sets the section_break of this StructuralElement.


        :param section_break: The section_break of this StructuralElement.
        :type section_break: SectionBreak
        """

        self._section_break = section_break

    @property
    def start_index(self):
        """Gets the start_index of this StructuralElement.

        The zero-based start index of this structural element, in UTF-16 code units.

        :return: The start_index of this StructuralElement.
        :rtype: int
        """
        return self._start_index

    @start_index.setter
    def start_index(self, start_index):
        """Sets the start_index of this StructuralElement.

        The zero-based start index of this structural element, in UTF-16 code units.

        :param start_index: The start_index of this StructuralElement.
        :type start_index: int
        """

        self._start_index = start_index

    @property
    def table(self):
        """Gets the table of this StructuralElement.


        :return: The table of this StructuralElement.
        :rtype: Table
        """
        return self._table

    @table.setter
    def table(self, table):
        """Sets the table of this StructuralElement.


        :param table: The table of this StructuralElement.
        :type table: Table
        """

        self._table = table

    @property
    def table_of_contents(self):
        """Gets the table_of_contents of this StructuralElement.


        :return: The table_of_contents of this StructuralElement.
        :rtype: TableOfContents
        """
        return self._table_of_contents

    @table_of_contents.setter
    def table_of_contents(self, table_of_contents):
        """Sets the table_of_contents of this StructuralElement.


        :param table_of_contents: The table_of_contents of this StructuralElement.
        :type table_of_contents: TableOfContents
        """

        self._table_of_contents = table_of_contents
