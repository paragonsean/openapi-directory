# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReplaceNamedRangeContentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, named_range_id: str=None, named_range_name: str=None, text: str=None):
        """ReplaceNamedRangeContentRequest - a model defined in OpenAPI

        :param named_range_id: The named_range_id of this ReplaceNamedRangeContentRequest.
        :param named_range_name: The named_range_name of this ReplaceNamedRangeContentRequest.
        :param text: The text of this ReplaceNamedRangeContentRequest.
        """
        self.openapi_types = {
            'named_range_id': str,
            'named_range_name': str,
            'text': str
        }

        self.attribute_map = {
            'named_range_id': 'namedRangeId',
            'named_range_name': 'namedRangeName',
            'text': 'text'
        }

        self._named_range_id = named_range_id
        self._named_range_name = named_range_name
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReplaceNamedRangeContentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReplaceNamedRangeContentRequest of this ReplaceNamedRangeContentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def named_range_id(self):
        """Gets the named_range_id of this ReplaceNamedRangeContentRequest.

        The ID of the named range whose content will be replaced. If there is no named range with the given ID a 400 bad request error is returned.

        :return: The named_range_id of this ReplaceNamedRangeContentRequest.
        :rtype: str
        """
        return self._named_range_id

    @named_range_id.setter
    def named_range_id(self, named_range_id):
        """Sets the named_range_id of this ReplaceNamedRangeContentRequest.

        The ID of the named range whose content will be replaced. If there is no named range with the given ID a 400 bad request error is returned.

        :param named_range_id: The named_range_id of this ReplaceNamedRangeContentRequest.
        :type named_range_id: str
        """

        self._named_range_id = named_range_id

    @property
    def named_range_name(self):
        """Gets the named_range_name of this ReplaceNamedRangeContentRequest.

        The name of the NamedRanges whose content will be replaced. If there are multiple named ranges with the given name, then the content of each one will be replaced. If there are no named ranges with the given name, then the request will be a no-op.

        :return: The named_range_name of this ReplaceNamedRangeContentRequest.
        :rtype: str
        """
        return self._named_range_name

    @named_range_name.setter
    def named_range_name(self, named_range_name):
        """Sets the named_range_name of this ReplaceNamedRangeContentRequest.

        The name of the NamedRanges whose content will be replaced. If there are multiple named ranges with the given name, then the content of each one will be replaced. If there are no named ranges with the given name, then the request will be a no-op.

        :param named_range_name: The named_range_name of this ReplaceNamedRangeContentRequest.
        :type named_range_name: str
        """

        self._named_range_name = named_range_name

    @property
    def text(self):
        """Gets the text of this ReplaceNamedRangeContentRequest.

        Replaces the content of the specified named range(s) with the given text.

        :return: The text of this ReplaceNamedRangeContentRequest.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this ReplaceNamedRangeContentRequest.

        Replaces the content of the specified named range(s) with the given text.

        :param text: The text of this ReplaceNamedRangeContentRequest.
        :type text: str
        """

        self._text = text
