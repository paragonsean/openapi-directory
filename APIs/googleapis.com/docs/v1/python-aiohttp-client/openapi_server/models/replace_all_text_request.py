# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.substring_match_criteria import SubstringMatchCriteria
from openapi_server import util


class ReplaceAllTextRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contains_text: SubstringMatchCriteria=None, replace_text: str=None):
        """ReplaceAllTextRequest - a model defined in OpenAPI

        :param contains_text: The contains_text of this ReplaceAllTextRequest.
        :param replace_text: The replace_text of this ReplaceAllTextRequest.
        """
        self.openapi_types = {
            'contains_text': SubstringMatchCriteria,
            'replace_text': str
        }

        self.attribute_map = {
            'contains_text': 'containsText',
            'replace_text': 'replaceText'
        }

        self._contains_text = contains_text
        self._replace_text = replace_text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReplaceAllTextRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReplaceAllTextRequest of this ReplaceAllTextRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contains_text(self):
        """Gets the contains_text of this ReplaceAllTextRequest.


        :return: The contains_text of this ReplaceAllTextRequest.
        :rtype: SubstringMatchCriteria
        """
        return self._contains_text

    @contains_text.setter
    def contains_text(self, contains_text):
        """Sets the contains_text of this ReplaceAllTextRequest.


        :param contains_text: The contains_text of this ReplaceAllTextRequest.
        :type contains_text: SubstringMatchCriteria
        """

        self._contains_text = contains_text

    @property
    def replace_text(self):
        """Gets the replace_text of this ReplaceAllTextRequest.

        The text that will replace the matched text.

        :return: The replace_text of this ReplaceAllTextRequest.
        :rtype: str
        """
        return self._replace_text

    @replace_text.setter
    def replace_text(self, replace_text):
        """Sets the replace_text of this ReplaceAllTextRequest.

        The text that will replace the matched text.

        :param replace_text: The replace_text of this ReplaceAllTextRequest.
        :type replace_text: str
        """

        self._replace_text = replace_text
