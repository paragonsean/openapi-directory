# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PositionedObjectPositioningSuggestionState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, layout_suggested: bool=None, left_offset_suggested: bool=None, top_offset_suggested: bool=None):
        """PositionedObjectPositioningSuggestionState - a model defined in OpenAPI

        :param layout_suggested: The layout_suggested of this PositionedObjectPositioningSuggestionState.
        :param left_offset_suggested: The left_offset_suggested of this PositionedObjectPositioningSuggestionState.
        :param top_offset_suggested: The top_offset_suggested of this PositionedObjectPositioningSuggestionState.
        """
        self.openapi_types = {
            'layout_suggested': bool,
            'left_offset_suggested': bool,
            'top_offset_suggested': bool
        }

        self.attribute_map = {
            'layout_suggested': 'layoutSuggested',
            'left_offset_suggested': 'leftOffsetSuggested',
            'top_offset_suggested': 'topOffsetSuggested'
        }

        self._layout_suggested = layout_suggested
        self._left_offset_suggested = left_offset_suggested
        self._top_offset_suggested = top_offset_suggested

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PositionedObjectPositioningSuggestionState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PositionedObjectPositioningSuggestionState of this PositionedObjectPositioningSuggestionState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def layout_suggested(self):
        """Gets the layout_suggested of this PositionedObjectPositioningSuggestionState.

        Indicates if there was a suggested change to layout.

        :return: The layout_suggested of this PositionedObjectPositioningSuggestionState.
        :rtype: bool
        """
        return self._layout_suggested

    @layout_suggested.setter
    def layout_suggested(self, layout_suggested):
        """Sets the layout_suggested of this PositionedObjectPositioningSuggestionState.

        Indicates if there was a suggested change to layout.

        :param layout_suggested: The layout_suggested of this PositionedObjectPositioningSuggestionState.
        :type layout_suggested: bool
        """

        self._layout_suggested = layout_suggested

    @property
    def left_offset_suggested(self):
        """Gets the left_offset_suggested of this PositionedObjectPositioningSuggestionState.

        Indicates if there was a suggested change to left_offset.

        :return: The left_offset_suggested of this PositionedObjectPositioningSuggestionState.
        :rtype: bool
        """
        return self._left_offset_suggested

    @left_offset_suggested.setter
    def left_offset_suggested(self, left_offset_suggested):
        """Sets the left_offset_suggested of this PositionedObjectPositioningSuggestionState.

        Indicates if there was a suggested change to left_offset.

        :param left_offset_suggested: The left_offset_suggested of this PositionedObjectPositioningSuggestionState.
        :type left_offset_suggested: bool
        """

        self._left_offset_suggested = left_offset_suggested

    @property
    def top_offset_suggested(self):
        """Gets the top_offset_suggested of this PositionedObjectPositioningSuggestionState.

        Indicates if there was a suggested change to top_offset.

        :return: The top_offset_suggested of this PositionedObjectPositioningSuggestionState.
        :rtype: bool
        """
        return self._top_offset_suggested

    @top_offset_suggested.setter
    def top_offset_suggested(self, top_offset_suggested):
        """Sets the top_offset_suggested of this PositionedObjectPositioningSuggestionState.

        Indicates if there was a suggested change to top_offset.

        :param top_offset_suggested: The top_offset_suggested of this PositionedObjectPositioningSuggestionState.
        :type top_offset_suggested: bool
        """

        self._top_offset_suggested = top_offset_suggested
