# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.embedded_object import EmbeddedObject
from openapi_server.models.positioned_object_positioning import PositionedObjectPositioning
from openapi_server import util


class PositionedObjectProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, embedded_object: EmbeddedObject=None, positioning: PositionedObjectPositioning=None):
        """PositionedObjectProperties - a model defined in OpenAPI

        :param embedded_object: The embedded_object of this PositionedObjectProperties.
        :param positioning: The positioning of this PositionedObjectProperties.
        """
        self.openapi_types = {
            'embedded_object': EmbeddedObject,
            'positioning': PositionedObjectPositioning
        }

        self.attribute_map = {
            'embedded_object': 'embeddedObject',
            'positioning': 'positioning'
        }

        self._embedded_object = embedded_object
        self._positioning = positioning

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PositionedObjectProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PositionedObjectProperties of this PositionedObjectProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def embedded_object(self):
        """Gets the embedded_object of this PositionedObjectProperties.


        :return: The embedded_object of this PositionedObjectProperties.
        :rtype: EmbeddedObject
        """
        return self._embedded_object

    @embedded_object.setter
    def embedded_object(self, embedded_object):
        """Sets the embedded_object of this PositionedObjectProperties.


        :param embedded_object: The embedded_object of this PositionedObjectProperties.
        :type embedded_object: EmbeddedObject
        """

        self._embedded_object = embedded_object

    @property
    def positioning(self):
        """Gets the positioning of this PositionedObjectProperties.


        :return: The positioning of this PositionedObjectProperties.
        :rtype: PositionedObjectPositioning
        """
        return self._positioning

    @positioning.setter
    def positioning(self, positioning):
        """Sets the positioning of this PositionedObjectProperties.


        :param positioning: The positioning of this PositionedObjectProperties.
        :type positioning: PositionedObjectPositioning
        """

        self._positioning = positioning
