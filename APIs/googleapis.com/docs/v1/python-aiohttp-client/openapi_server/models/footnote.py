# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.structural_element import StructuralElement
from openapi_server import util


class Footnote(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content: List[StructuralElement]=None, footnote_id: str=None):
        """Footnote - a model defined in OpenAPI

        :param content: The content of this Footnote.
        :param footnote_id: The footnote_id of this Footnote.
        """
        self.openapi_types = {
            'content': List[StructuralElement],
            'footnote_id': str
        }

        self.attribute_map = {
            'content': 'content',
            'footnote_id': 'footnoteId'
        }

        self._content = content
        self._footnote_id = footnote_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Footnote':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Footnote of this Footnote.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content(self):
        """Gets the content of this Footnote.

        The contents of the footnote. The indexes for a footnote's content begin at zero.

        :return: The content of this Footnote.
        :rtype: List[StructuralElement]
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this Footnote.

        The contents of the footnote. The indexes for a footnote's content begin at zero.

        :param content: The content of this Footnote.
        :type content: List[StructuralElement]
        """

        self._content = content

    @property
    def footnote_id(self):
        """Gets the footnote_id of this Footnote.

        The ID of the footnote.

        :return: The footnote_id of this Footnote.
        :rtype: str
        """
        return self._footnote_id

    @footnote_id.setter
    def footnote_id(self, footnote_id):
        """Sets the footnote_id of this Footnote.

        The ID of the footnote.

        :param footnote_id: The footnote_id of this Footnote.
        :type footnote_id: str
        """

        self._footnote_id = footnote_id
