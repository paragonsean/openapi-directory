# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.end_of_segment_location import EndOfSegmentLocation
from openapi_server.models.location import Location
from openapi_server import util


class InsertTextRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_of_segment_location: EndOfSegmentLocation=None, location: Location=None, text: str=None):
        """InsertTextRequest - a model defined in OpenAPI

        :param end_of_segment_location: The end_of_segment_location of this InsertTextRequest.
        :param location: The location of this InsertTextRequest.
        :param text: The text of this InsertTextRequest.
        """
        self.openapi_types = {
            'end_of_segment_location': EndOfSegmentLocation,
            'location': Location,
            'text': str
        }

        self.attribute_map = {
            'end_of_segment_location': 'endOfSegmentLocation',
            'location': 'location',
            'text': 'text'
        }

        self._end_of_segment_location = end_of_segment_location
        self._location = location
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InsertTextRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InsertTextRequest of this InsertTextRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_of_segment_location(self):
        """Gets the end_of_segment_location of this InsertTextRequest.


        :return: The end_of_segment_location of this InsertTextRequest.
        :rtype: EndOfSegmentLocation
        """
        return self._end_of_segment_location

    @end_of_segment_location.setter
    def end_of_segment_location(self, end_of_segment_location):
        """Sets the end_of_segment_location of this InsertTextRequest.


        :param end_of_segment_location: The end_of_segment_location of this InsertTextRequest.
        :type end_of_segment_location: EndOfSegmentLocation
        """

        self._end_of_segment_location = end_of_segment_location

    @property
    def location(self):
        """Gets the location of this InsertTextRequest.


        :return: The location of this InsertTextRequest.
        :rtype: Location
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this InsertTextRequest.


        :param location: The location of this InsertTextRequest.
        :type location: Location
        """

        self._location = location

    @property
    def text(self):
        """Gets the text of this InsertTextRequest.

        The text to be inserted. Inserting a newline character will implicitly create a new Paragraph at that index. The paragraph style of the new paragraph will be copied from the paragraph at the current insertion index, including lists and bullets. Text styles for inserted text will be determined automatically, generally preserving the styling of neighboring text. In most cases, the text style for the inserted text will match the text immediately before the insertion index. Some control characters (U+0000-U+0008, U+000C-U+001F) and characters from the Unicode Basic Multilingual Plane Private Use Area (U+E000-U+F8FF) will be stripped out of the inserted text.

        :return: The text of this InsertTextRequest.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this InsertTextRequest.

        The text to be inserted. Inserting a newline character will implicitly create a new Paragraph at that index. The paragraph style of the new paragraph will be copied from the paragraph at the current insertion index, including lists and bullets. Text styles for inserted text will be determined automatically, generally preserving the styling of neighboring text. In most cases, the text style for the inserted text will match the text immediately before the insertion index. Some control characters (U+0000-U+0008, U+000C-U+001F) and characters from the Unicode Basic Multilingual Plane Private Use Area (U+E000-U+F8FF) will be stripped out of the inserted text.

        :param text: The text of this InsertTextRequest.
        :type text: str
        """

        self._text = text
