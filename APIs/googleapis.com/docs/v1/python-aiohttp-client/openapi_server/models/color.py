# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rgb_color import RgbColor
from openapi_server import util


class Color(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rgb_color: RgbColor=None):
        """Color - a model defined in OpenAPI

        :param rgb_color: The rgb_color of this Color.
        """
        self.openapi_types = {
            'rgb_color': RgbColor
        }

        self.attribute_map = {
            'rgb_color': 'rgbColor'
        }

        self._rgb_color = rgb_color

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Color':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Color of this Color.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rgb_color(self):
        """Gets the rgb_color of this Color.


        :return: The rgb_color of this Color.
        :rtype: RgbColor
        """
        return self._rgb_color

    @rgb_color.setter
    def rgb_color(self, rgb_color):
        """Sets the rgb_color of this Color.


        :param rgb_color: The rgb_color of this Color.
        :type rgb_color: RgbColor
        """

        self._rgb_color = rgb_color
