# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Range(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_index: int=None, segment_id: str=None, start_index: int=None):
        """Range - a model defined in OpenAPI

        :param end_index: The end_index of this Range.
        :param segment_id: The segment_id of this Range.
        :param start_index: The start_index of this Range.
        """
        self.openapi_types = {
            'end_index': int,
            'segment_id': str,
            'start_index': int
        }

        self.attribute_map = {
            'end_index': 'endIndex',
            'segment_id': 'segmentId',
            'start_index': 'startIndex'
        }

        self._end_index = end_index
        self._segment_id = segment_id
        self._start_index = start_index

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Range':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Range of this Range.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_index(self):
        """Gets the end_index of this Range.

        The zero-based end index of this range, exclusive, in UTF-16 code units. In all current uses, an end index must be provided. This field is an Int32Value in order to accommodate future use cases with open-ended ranges.

        :return: The end_index of this Range.
        :rtype: int
        """
        return self._end_index

    @end_index.setter
    def end_index(self, end_index):
        """Sets the end_index of this Range.

        The zero-based end index of this range, exclusive, in UTF-16 code units. In all current uses, an end index must be provided. This field is an Int32Value in order to accommodate future use cases with open-ended ranges.

        :param end_index: The end_index of this Range.
        :type end_index: int
        """

        self._end_index = end_index

    @property
    def segment_id(self):
        """Gets the segment_id of this Range.

        The ID of the header, footer, or footnote that this range is contained in. An empty segment ID signifies the document's body.

        :return: The segment_id of this Range.
        :rtype: str
        """
        return self._segment_id

    @segment_id.setter
    def segment_id(self, segment_id):
        """Sets the segment_id of this Range.

        The ID of the header, footer, or footnote that this range is contained in. An empty segment ID signifies the document's body.

        :param segment_id: The segment_id of this Range.
        :type segment_id: str
        """

        self._segment_id = segment_id

    @property
    def start_index(self):
        """Gets the start_index of this Range.

        The zero-based start index of this range, in UTF-16 code units. In all current uses, a start index must be provided. This field is an Int32Value in order to accommodate future use cases with open-ended ranges.

        :return: The start_index of this Range.
        :rtype: int
        """
        return self._start_index

    @start_index.setter
    def start_index(self, start_index):
        """Sets the start_index of this Range.

        The zero-based start index of this range, in UTF-16 code units. In all current uses, a start index must be provided. This field is an Int32Value in order to accommodate future use cases with open-ended ranges.

        :param start_index: The start_index of this Range.
        :type start_index: int
        """

        self._start_index = start_index
