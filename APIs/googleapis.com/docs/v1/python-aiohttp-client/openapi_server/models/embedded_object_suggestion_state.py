# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.embedded_object_border_suggestion_state import EmbeddedObjectBorderSuggestionState
from openapi_server.models.image_properties_suggestion_state import ImagePropertiesSuggestionState
from openapi_server.models.linked_content_reference_suggestion_state import LinkedContentReferenceSuggestionState
from openapi_server.models.size_suggestion_state import SizeSuggestionState
from openapi_server import util


class EmbeddedObjectSuggestionState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description_suggested: bool=None, embedded_drawing_properties_suggestion_state: object=None, embedded_object_border_suggestion_state: EmbeddedObjectBorderSuggestionState=None, image_properties_suggestion_state: ImagePropertiesSuggestionState=None, linked_content_reference_suggestion_state: LinkedContentReferenceSuggestionState=None, margin_bottom_suggested: bool=None, margin_left_suggested: bool=None, margin_right_suggested: bool=None, margin_top_suggested: bool=None, size_suggestion_state: SizeSuggestionState=None, title_suggested: bool=None):
        """EmbeddedObjectSuggestionState - a model defined in OpenAPI

        :param description_suggested: The description_suggested of this EmbeddedObjectSuggestionState.
        :param embedded_drawing_properties_suggestion_state: The embedded_drawing_properties_suggestion_state of this EmbeddedObjectSuggestionState.
        :param embedded_object_border_suggestion_state: The embedded_object_border_suggestion_state of this EmbeddedObjectSuggestionState.
        :param image_properties_suggestion_state: The image_properties_suggestion_state of this EmbeddedObjectSuggestionState.
        :param linked_content_reference_suggestion_state: The linked_content_reference_suggestion_state of this EmbeddedObjectSuggestionState.
        :param margin_bottom_suggested: The margin_bottom_suggested of this EmbeddedObjectSuggestionState.
        :param margin_left_suggested: The margin_left_suggested of this EmbeddedObjectSuggestionState.
        :param margin_right_suggested: The margin_right_suggested of this EmbeddedObjectSuggestionState.
        :param margin_top_suggested: The margin_top_suggested of this EmbeddedObjectSuggestionState.
        :param size_suggestion_state: The size_suggestion_state of this EmbeddedObjectSuggestionState.
        :param title_suggested: The title_suggested of this EmbeddedObjectSuggestionState.
        """
        self.openapi_types = {
            'description_suggested': bool,
            'embedded_drawing_properties_suggestion_state': object,
            'embedded_object_border_suggestion_state': EmbeddedObjectBorderSuggestionState,
            'image_properties_suggestion_state': ImagePropertiesSuggestionState,
            'linked_content_reference_suggestion_state': LinkedContentReferenceSuggestionState,
            'margin_bottom_suggested': bool,
            'margin_left_suggested': bool,
            'margin_right_suggested': bool,
            'margin_top_suggested': bool,
            'size_suggestion_state': SizeSuggestionState,
            'title_suggested': bool
        }

        self.attribute_map = {
            'description_suggested': 'descriptionSuggested',
            'embedded_drawing_properties_suggestion_state': 'embeddedDrawingPropertiesSuggestionState',
            'embedded_object_border_suggestion_state': 'embeddedObjectBorderSuggestionState',
            'image_properties_suggestion_state': 'imagePropertiesSuggestionState',
            'linked_content_reference_suggestion_state': 'linkedContentReferenceSuggestionState',
            'margin_bottom_suggested': 'marginBottomSuggested',
            'margin_left_suggested': 'marginLeftSuggested',
            'margin_right_suggested': 'marginRightSuggested',
            'margin_top_suggested': 'marginTopSuggested',
            'size_suggestion_state': 'sizeSuggestionState',
            'title_suggested': 'titleSuggested'
        }

        self._description_suggested = description_suggested
        self._embedded_drawing_properties_suggestion_state = embedded_drawing_properties_suggestion_state
        self._embedded_object_border_suggestion_state = embedded_object_border_suggestion_state
        self._image_properties_suggestion_state = image_properties_suggestion_state
        self._linked_content_reference_suggestion_state = linked_content_reference_suggestion_state
        self._margin_bottom_suggested = margin_bottom_suggested
        self._margin_left_suggested = margin_left_suggested
        self._margin_right_suggested = margin_right_suggested
        self._margin_top_suggested = margin_top_suggested
        self._size_suggestion_state = size_suggestion_state
        self._title_suggested = title_suggested

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EmbeddedObjectSuggestionState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EmbeddedObjectSuggestionState of this EmbeddedObjectSuggestionState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description_suggested(self):
        """Gets the description_suggested of this EmbeddedObjectSuggestionState.

        Indicates if there was a suggested change to description.

        :return: The description_suggested of this EmbeddedObjectSuggestionState.
        :rtype: bool
        """
        return self._description_suggested

    @description_suggested.setter
    def description_suggested(self, description_suggested):
        """Sets the description_suggested of this EmbeddedObjectSuggestionState.

        Indicates if there was a suggested change to description.

        :param description_suggested: The description_suggested of this EmbeddedObjectSuggestionState.
        :type description_suggested: bool
        """

        self._description_suggested = description_suggested

    @property
    def embedded_drawing_properties_suggestion_state(self):
        """Gets the embedded_drawing_properties_suggestion_state of this EmbeddedObjectSuggestionState.

        A mask that indicates which of the fields on the base EmbeddedDrawingProperties have been changed in this suggestion. For any field set to true, there's a new suggested value.

        :return: The embedded_drawing_properties_suggestion_state of this EmbeddedObjectSuggestionState.
        :rtype: object
        """
        return self._embedded_drawing_properties_suggestion_state

    @embedded_drawing_properties_suggestion_state.setter
    def embedded_drawing_properties_suggestion_state(self, embedded_drawing_properties_suggestion_state):
        """Sets the embedded_drawing_properties_suggestion_state of this EmbeddedObjectSuggestionState.

        A mask that indicates which of the fields on the base EmbeddedDrawingProperties have been changed in this suggestion. For any field set to true, there's a new suggested value.

        :param embedded_drawing_properties_suggestion_state: The embedded_drawing_properties_suggestion_state of this EmbeddedObjectSuggestionState.
        :type embedded_drawing_properties_suggestion_state: object
        """

        self._embedded_drawing_properties_suggestion_state = embedded_drawing_properties_suggestion_state

    @property
    def embedded_object_border_suggestion_state(self):
        """Gets the embedded_object_border_suggestion_state of this EmbeddedObjectSuggestionState.


        :return: The embedded_object_border_suggestion_state of this EmbeddedObjectSuggestionState.
        :rtype: EmbeddedObjectBorderSuggestionState
        """
        return self._embedded_object_border_suggestion_state

    @embedded_object_border_suggestion_state.setter
    def embedded_object_border_suggestion_state(self, embedded_object_border_suggestion_state):
        """Sets the embedded_object_border_suggestion_state of this EmbeddedObjectSuggestionState.


        :param embedded_object_border_suggestion_state: The embedded_object_border_suggestion_state of this EmbeddedObjectSuggestionState.
        :type embedded_object_border_suggestion_state: EmbeddedObjectBorderSuggestionState
        """

        self._embedded_object_border_suggestion_state = embedded_object_border_suggestion_state

    @property
    def image_properties_suggestion_state(self):
        """Gets the image_properties_suggestion_state of this EmbeddedObjectSuggestionState.


        :return: The image_properties_suggestion_state of this EmbeddedObjectSuggestionState.
        :rtype: ImagePropertiesSuggestionState
        """
        return self._image_properties_suggestion_state

    @image_properties_suggestion_state.setter
    def image_properties_suggestion_state(self, image_properties_suggestion_state):
        """Sets the image_properties_suggestion_state of this EmbeddedObjectSuggestionState.


        :param image_properties_suggestion_state: The image_properties_suggestion_state of this EmbeddedObjectSuggestionState.
        :type image_properties_suggestion_state: ImagePropertiesSuggestionState
        """

        self._image_properties_suggestion_state = image_properties_suggestion_state

    @property
    def linked_content_reference_suggestion_state(self):
        """Gets the linked_content_reference_suggestion_state of this EmbeddedObjectSuggestionState.


        :return: The linked_content_reference_suggestion_state of this EmbeddedObjectSuggestionState.
        :rtype: LinkedContentReferenceSuggestionState
        """
        return self._linked_content_reference_suggestion_state

    @linked_content_reference_suggestion_state.setter
    def linked_content_reference_suggestion_state(self, linked_content_reference_suggestion_state):
        """Sets the linked_content_reference_suggestion_state of this EmbeddedObjectSuggestionState.


        :param linked_content_reference_suggestion_state: The linked_content_reference_suggestion_state of this EmbeddedObjectSuggestionState.
        :type linked_content_reference_suggestion_state: LinkedContentReferenceSuggestionState
        """

        self._linked_content_reference_suggestion_state = linked_content_reference_suggestion_state

    @property
    def margin_bottom_suggested(self):
        """Gets the margin_bottom_suggested of this EmbeddedObjectSuggestionState.

        Indicates if there was a suggested change to margin_bottom.

        :return: The margin_bottom_suggested of this EmbeddedObjectSuggestionState.
        :rtype: bool
        """
        return self._margin_bottom_suggested

    @margin_bottom_suggested.setter
    def margin_bottom_suggested(self, margin_bottom_suggested):
        """Sets the margin_bottom_suggested of this EmbeddedObjectSuggestionState.

        Indicates if there was a suggested change to margin_bottom.

        :param margin_bottom_suggested: The margin_bottom_suggested of this EmbeddedObjectSuggestionState.
        :type margin_bottom_suggested: bool
        """

        self._margin_bottom_suggested = margin_bottom_suggested

    @property
    def margin_left_suggested(self):
        """Gets the margin_left_suggested of this EmbeddedObjectSuggestionState.

        Indicates if there was a suggested change to margin_left.

        :return: The margin_left_suggested of this EmbeddedObjectSuggestionState.
        :rtype: bool
        """
        return self._margin_left_suggested

    @margin_left_suggested.setter
    def margin_left_suggested(self, margin_left_suggested):
        """Sets the margin_left_suggested of this EmbeddedObjectSuggestionState.

        Indicates if there was a suggested change to margin_left.

        :param margin_left_suggested: The margin_left_suggested of this EmbeddedObjectSuggestionState.
        :type margin_left_suggested: bool
        """

        self._margin_left_suggested = margin_left_suggested

    @property
    def margin_right_suggested(self):
        """Gets the margin_right_suggested of this EmbeddedObjectSuggestionState.

        Indicates if there was a suggested change to margin_right.

        :return: The margin_right_suggested of this EmbeddedObjectSuggestionState.
        :rtype: bool
        """
        return self._margin_right_suggested

    @margin_right_suggested.setter
    def margin_right_suggested(self, margin_right_suggested):
        """Sets the margin_right_suggested of this EmbeddedObjectSuggestionState.

        Indicates if there was a suggested change to margin_right.

        :param margin_right_suggested: The margin_right_suggested of this EmbeddedObjectSuggestionState.
        :type margin_right_suggested: bool
        """

        self._margin_right_suggested = margin_right_suggested

    @property
    def margin_top_suggested(self):
        """Gets the margin_top_suggested of this EmbeddedObjectSuggestionState.

        Indicates if there was a suggested change to margin_top.

        :return: The margin_top_suggested of this EmbeddedObjectSuggestionState.
        :rtype: bool
        """
        return self._margin_top_suggested

    @margin_top_suggested.setter
    def margin_top_suggested(self, margin_top_suggested):
        """Sets the margin_top_suggested of this EmbeddedObjectSuggestionState.

        Indicates if there was a suggested change to margin_top.

        :param margin_top_suggested: The margin_top_suggested of this EmbeddedObjectSuggestionState.
        :type margin_top_suggested: bool
        """

        self._margin_top_suggested = margin_top_suggested

    @property
    def size_suggestion_state(self):
        """Gets the size_suggestion_state of this EmbeddedObjectSuggestionState.


        :return: The size_suggestion_state of this EmbeddedObjectSuggestionState.
        :rtype: SizeSuggestionState
        """
        return self._size_suggestion_state

    @size_suggestion_state.setter
    def size_suggestion_state(self, size_suggestion_state):
        """Sets the size_suggestion_state of this EmbeddedObjectSuggestionState.


        :param size_suggestion_state: The size_suggestion_state of this EmbeddedObjectSuggestionState.
        :type size_suggestion_state: SizeSuggestionState
        """

        self._size_suggestion_state = size_suggestion_state

    @property
    def title_suggested(self):
        """Gets the title_suggested of this EmbeddedObjectSuggestionState.

        Indicates if there was a suggested change to title.

        :return: The title_suggested of this EmbeddedObjectSuggestionState.
        :rtype: bool
        """
        return self._title_suggested

    @title_suggested.setter
    def title_suggested(self, title_suggested):
        """Sets the title_suggested of this EmbeddedObjectSuggestionState.

        Indicates if there was a suggested change to title.

        :param title_suggested: The title_suggested of this EmbeddedObjectSuggestionState.
        :type title_suggested: bool
        """

        self._title_suggested = title_suggested
