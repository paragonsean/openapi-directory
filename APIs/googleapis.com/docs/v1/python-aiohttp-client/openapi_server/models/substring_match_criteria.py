# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SubstringMatchCriteria(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, match_case: bool=None, text: str=None):
        """SubstringMatchCriteria - a model defined in OpenAPI

        :param match_case: The match_case of this SubstringMatchCriteria.
        :param text: The text of this SubstringMatchCriteria.
        """
        self.openapi_types = {
            'match_case': bool,
            'text': str
        }

        self.attribute_map = {
            'match_case': 'matchCase',
            'text': 'text'
        }

        self._match_case = match_case
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubstringMatchCriteria':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubstringMatchCriteria of this SubstringMatchCriteria.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def match_case(self):
        """Gets the match_case of this SubstringMatchCriteria.

        Indicates whether the search should respect case: - `True`: the search is case sensitive. - `False`: the search is case insensitive.

        :return: The match_case of this SubstringMatchCriteria.
        :rtype: bool
        """
        return self._match_case

    @match_case.setter
    def match_case(self, match_case):
        """Sets the match_case of this SubstringMatchCriteria.

        Indicates whether the search should respect case: - `True`: the search is case sensitive. - `False`: the search is case insensitive.

        :param match_case: The match_case of this SubstringMatchCriteria.
        :type match_case: bool
        """

        self._match_case = match_case

    @property
    def text(self):
        """Gets the text of this SubstringMatchCriteria.

        The text to search for in the document.

        :return: The text of this SubstringMatchCriteria.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this SubstringMatchCriteria.

        The text to search for in the document.

        :param text: The text of this SubstringMatchCriteria.
        :type text: str
        """

        self._text = text
