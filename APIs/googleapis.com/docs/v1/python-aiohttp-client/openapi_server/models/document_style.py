# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.background import Background
from openapi_server.models.dimension import Dimension
from openapi_server.models.size import Size
from openapi_server import util


class DocumentStyle(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, background: Background=None, default_footer_id: str=None, default_header_id: str=None, even_page_footer_id: str=None, even_page_header_id: str=None, first_page_footer_id: str=None, first_page_header_id: str=None, flip_page_orientation: bool=None, margin_bottom: Dimension=None, margin_footer: Dimension=None, margin_header: Dimension=None, margin_left: Dimension=None, margin_right: Dimension=None, margin_top: Dimension=None, page_number_start: int=None, page_size: Size=None, use_custom_header_footer_margins: bool=None, use_even_page_header_footer: bool=None, use_first_page_header_footer: bool=None):
        """DocumentStyle - a model defined in OpenAPI

        :param background: The background of this DocumentStyle.
        :param default_footer_id: The default_footer_id of this DocumentStyle.
        :param default_header_id: The default_header_id of this DocumentStyle.
        :param even_page_footer_id: The even_page_footer_id of this DocumentStyle.
        :param even_page_header_id: The even_page_header_id of this DocumentStyle.
        :param first_page_footer_id: The first_page_footer_id of this DocumentStyle.
        :param first_page_header_id: The first_page_header_id of this DocumentStyle.
        :param flip_page_orientation: The flip_page_orientation of this DocumentStyle.
        :param margin_bottom: The margin_bottom of this DocumentStyle.
        :param margin_footer: The margin_footer of this DocumentStyle.
        :param margin_header: The margin_header of this DocumentStyle.
        :param margin_left: The margin_left of this DocumentStyle.
        :param margin_right: The margin_right of this DocumentStyle.
        :param margin_top: The margin_top of this DocumentStyle.
        :param page_number_start: The page_number_start of this DocumentStyle.
        :param page_size: The page_size of this DocumentStyle.
        :param use_custom_header_footer_margins: The use_custom_header_footer_margins of this DocumentStyle.
        :param use_even_page_header_footer: The use_even_page_header_footer of this DocumentStyle.
        :param use_first_page_header_footer: The use_first_page_header_footer of this DocumentStyle.
        """
        self.openapi_types = {
            'background': Background,
            'default_footer_id': str,
            'default_header_id': str,
            'even_page_footer_id': str,
            'even_page_header_id': str,
            'first_page_footer_id': str,
            'first_page_header_id': str,
            'flip_page_orientation': bool,
            'margin_bottom': Dimension,
            'margin_footer': Dimension,
            'margin_header': Dimension,
            'margin_left': Dimension,
            'margin_right': Dimension,
            'margin_top': Dimension,
            'page_number_start': int,
            'page_size': Size,
            'use_custom_header_footer_margins': bool,
            'use_even_page_header_footer': bool,
            'use_first_page_header_footer': bool
        }

        self.attribute_map = {
            'background': 'background',
            'default_footer_id': 'defaultFooterId',
            'default_header_id': 'defaultHeaderId',
            'even_page_footer_id': 'evenPageFooterId',
            'even_page_header_id': 'evenPageHeaderId',
            'first_page_footer_id': 'firstPageFooterId',
            'first_page_header_id': 'firstPageHeaderId',
            'flip_page_orientation': 'flipPageOrientation',
            'margin_bottom': 'marginBottom',
            'margin_footer': 'marginFooter',
            'margin_header': 'marginHeader',
            'margin_left': 'marginLeft',
            'margin_right': 'marginRight',
            'margin_top': 'marginTop',
            'page_number_start': 'pageNumberStart',
            'page_size': 'pageSize',
            'use_custom_header_footer_margins': 'useCustomHeaderFooterMargins',
            'use_even_page_header_footer': 'useEvenPageHeaderFooter',
            'use_first_page_header_footer': 'useFirstPageHeaderFooter'
        }

        self._background = background
        self._default_footer_id = default_footer_id
        self._default_header_id = default_header_id
        self._even_page_footer_id = even_page_footer_id
        self._even_page_header_id = even_page_header_id
        self._first_page_footer_id = first_page_footer_id
        self._first_page_header_id = first_page_header_id
        self._flip_page_orientation = flip_page_orientation
        self._margin_bottom = margin_bottom
        self._margin_footer = margin_footer
        self._margin_header = margin_header
        self._margin_left = margin_left
        self._margin_right = margin_right
        self._margin_top = margin_top
        self._page_number_start = page_number_start
        self._page_size = page_size
        self._use_custom_header_footer_margins = use_custom_header_footer_margins
        self._use_even_page_header_footer = use_even_page_header_footer
        self._use_first_page_header_footer = use_first_page_header_footer

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DocumentStyle':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DocumentStyle of this DocumentStyle.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def background(self):
        """Gets the background of this DocumentStyle.


        :return: The background of this DocumentStyle.
        :rtype: Background
        """
        return self._background

    @background.setter
    def background(self, background):
        """Sets the background of this DocumentStyle.


        :param background: The background of this DocumentStyle.
        :type background: Background
        """

        self._background = background

    @property
    def default_footer_id(self):
        """Gets the default_footer_id of this DocumentStyle.

        The ID of the default footer. If not set, there's no default footer. This property is read-only.

        :return: The default_footer_id of this DocumentStyle.
        :rtype: str
        """
        return self._default_footer_id

    @default_footer_id.setter
    def default_footer_id(self, default_footer_id):
        """Sets the default_footer_id of this DocumentStyle.

        The ID of the default footer. If not set, there's no default footer. This property is read-only.

        :param default_footer_id: The default_footer_id of this DocumentStyle.
        :type default_footer_id: str
        """

        self._default_footer_id = default_footer_id

    @property
    def default_header_id(self):
        """Gets the default_header_id of this DocumentStyle.

        The ID of the default header. If not set, there's no default header. This property is read-only.

        :return: The default_header_id of this DocumentStyle.
        :rtype: str
        """
        return self._default_header_id

    @default_header_id.setter
    def default_header_id(self, default_header_id):
        """Sets the default_header_id of this DocumentStyle.

        The ID of the default header. If not set, there's no default header. This property is read-only.

        :param default_header_id: The default_header_id of this DocumentStyle.
        :type default_header_id: str
        """

        self._default_header_id = default_header_id

    @property
    def even_page_footer_id(self):
        """Gets the even_page_footer_id of this DocumentStyle.

        The ID of the footer used only for even pages. The value of use_even_page_header_footer determines whether to use the default_footer_id or this value for the footer on even pages. If not set, there's no even page footer. This property is read-only.

        :return: The even_page_footer_id of this DocumentStyle.
        :rtype: str
        """
        return self._even_page_footer_id

    @even_page_footer_id.setter
    def even_page_footer_id(self, even_page_footer_id):
        """Sets the even_page_footer_id of this DocumentStyle.

        The ID of the footer used only for even pages. The value of use_even_page_header_footer determines whether to use the default_footer_id or this value for the footer on even pages. If not set, there's no even page footer. This property is read-only.

        :param even_page_footer_id: The even_page_footer_id of this DocumentStyle.
        :type even_page_footer_id: str
        """

        self._even_page_footer_id = even_page_footer_id

    @property
    def even_page_header_id(self):
        """Gets the even_page_header_id of this DocumentStyle.

        The ID of the header used only for even pages. The value of use_even_page_header_footer determines whether to use the default_header_id or this value for the header on even pages. If not set, there's no even page header. This property is read-only.

        :return: The even_page_header_id of this DocumentStyle.
        :rtype: str
        """
        return self._even_page_header_id

    @even_page_header_id.setter
    def even_page_header_id(self, even_page_header_id):
        """Sets the even_page_header_id of this DocumentStyle.

        The ID of the header used only for even pages. The value of use_even_page_header_footer determines whether to use the default_header_id or this value for the header on even pages. If not set, there's no even page header. This property is read-only.

        :param even_page_header_id: The even_page_header_id of this DocumentStyle.
        :type even_page_header_id: str
        """

        self._even_page_header_id = even_page_header_id

    @property
    def first_page_footer_id(self):
        """Gets the first_page_footer_id of this DocumentStyle.

        The ID of the footer used only for the first page. If not set then a unique footer for the first page does not exist. The value of use_first_page_header_footer determines whether to use the default_footer_id or this value for the footer on the first page. If not set, there's no first page footer. This property is read-only.

        :return: The first_page_footer_id of this DocumentStyle.
        :rtype: str
        """
        return self._first_page_footer_id

    @first_page_footer_id.setter
    def first_page_footer_id(self, first_page_footer_id):
        """Sets the first_page_footer_id of this DocumentStyle.

        The ID of the footer used only for the first page. If not set then a unique footer for the first page does not exist. The value of use_first_page_header_footer determines whether to use the default_footer_id or this value for the footer on the first page. If not set, there's no first page footer. This property is read-only.

        :param first_page_footer_id: The first_page_footer_id of this DocumentStyle.
        :type first_page_footer_id: str
        """

        self._first_page_footer_id = first_page_footer_id

    @property
    def first_page_header_id(self):
        """Gets the first_page_header_id of this DocumentStyle.

        The ID of the header used only for the first page. If not set then a unique header for the first page does not exist. The value of use_first_page_header_footer determines whether to use the default_header_id or this value for the header on the first page. If not set, there's no first page header. This property is read-only.

        :return: The first_page_header_id of this DocumentStyle.
        :rtype: str
        """
        return self._first_page_header_id

    @first_page_header_id.setter
    def first_page_header_id(self, first_page_header_id):
        """Sets the first_page_header_id of this DocumentStyle.

        The ID of the header used only for the first page. If not set then a unique header for the first page does not exist. The value of use_first_page_header_footer determines whether to use the default_header_id or this value for the header on the first page. If not set, there's no first page header. This property is read-only.

        :param first_page_header_id: The first_page_header_id of this DocumentStyle.
        :type first_page_header_id: str
        """

        self._first_page_header_id = first_page_header_id

    @property
    def flip_page_orientation(self):
        """Gets the flip_page_orientation of this DocumentStyle.

        Optional. Indicates whether to flip the dimensions of the page_size, which allows changing the page orientation between portrait and landscape.

        :return: The flip_page_orientation of this DocumentStyle.
        :rtype: bool
        """
        return self._flip_page_orientation

    @flip_page_orientation.setter
    def flip_page_orientation(self, flip_page_orientation):
        """Sets the flip_page_orientation of this DocumentStyle.

        Optional. Indicates whether to flip the dimensions of the page_size, which allows changing the page orientation between portrait and landscape.

        :param flip_page_orientation: The flip_page_orientation of this DocumentStyle.
        :type flip_page_orientation: bool
        """

        self._flip_page_orientation = flip_page_orientation

    @property
    def margin_bottom(self):
        """Gets the margin_bottom of this DocumentStyle.


        :return: The margin_bottom of this DocumentStyle.
        :rtype: Dimension
        """
        return self._margin_bottom

    @margin_bottom.setter
    def margin_bottom(self, margin_bottom):
        """Sets the margin_bottom of this DocumentStyle.


        :param margin_bottom: The margin_bottom of this DocumentStyle.
        :type margin_bottom: Dimension
        """

        self._margin_bottom = margin_bottom

    @property
    def margin_footer(self):
        """Gets the margin_footer of this DocumentStyle.


        :return: The margin_footer of this DocumentStyle.
        :rtype: Dimension
        """
        return self._margin_footer

    @margin_footer.setter
    def margin_footer(self, margin_footer):
        """Sets the margin_footer of this DocumentStyle.


        :param margin_footer: The margin_footer of this DocumentStyle.
        :type margin_footer: Dimension
        """

        self._margin_footer = margin_footer

    @property
    def margin_header(self):
        """Gets the margin_header of this DocumentStyle.


        :return: The margin_header of this DocumentStyle.
        :rtype: Dimension
        """
        return self._margin_header

    @margin_header.setter
    def margin_header(self, margin_header):
        """Sets the margin_header of this DocumentStyle.


        :param margin_header: The margin_header of this DocumentStyle.
        :type margin_header: Dimension
        """

        self._margin_header = margin_header

    @property
    def margin_left(self):
        """Gets the margin_left of this DocumentStyle.


        :return: The margin_left of this DocumentStyle.
        :rtype: Dimension
        """
        return self._margin_left

    @margin_left.setter
    def margin_left(self, margin_left):
        """Sets the margin_left of this DocumentStyle.


        :param margin_left: The margin_left of this DocumentStyle.
        :type margin_left: Dimension
        """

        self._margin_left = margin_left

    @property
    def margin_right(self):
        """Gets the margin_right of this DocumentStyle.


        :return: The margin_right of this DocumentStyle.
        :rtype: Dimension
        """
        return self._margin_right

    @margin_right.setter
    def margin_right(self, margin_right):
        """Sets the margin_right of this DocumentStyle.


        :param margin_right: The margin_right of this DocumentStyle.
        :type margin_right: Dimension
        """

        self._margin_right = margin_right

    @property
    def margin_top(self):
        """Gets the margin_top of this DocumentStyle.


        :return: The margin_top of this DocumentStyle.
        :rtype: Dimension
        """
        return self._margin_top

    @margin_top.setter
    def margin_top(self, margin_top):
        """Sets the margin_top of this DocumentStyle.


        :param margin_top: The margin_top of this DocumentStyle.
        :type margin_top: Dimension
        """

        self._margin_top = margin_top

    @property
    def page_number_start(self):
        """Gets the page_number_start of this DocumentStyle.

        The page number from which to start counting the number of pages.

        :return: The page_number_start of this DocumentStyle.
        :rtype: int
        """
        return self._page_number_start

    @page_number_start.setter
    def page_number_start(self, page_number_start):
        """Sets the page_number_start of this DocumentStyle.

        The page number from which to start counting the number of pages.

        :param page_number_start: The page_number_start of this DocumentStyle.
        :type page_number_start: int
        """

        self._page_number_start = page_number_start

    @property
    def page_size(self):
        """Gets the page_size of this DocumentStyle.


        :return: The page_size of this DocumentStyle.
        :rtype: Size
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this DocumentStyle.


        :param page_size: The page_size of this DocumentStyle.
        :type page_size: Size
        """

        self._page_size = page_size

    @property
    def use_custom_header_footer_margins(self):
        """Gets the use_custom_header_footer_margins of this DocumentStyle.

        Indicates whether DocumentStyle margin_header, SectionStyle margin_header and DocumentStyle margin_footer, SectionStyle margin_footer are respected. When false, the default values in the Docs editor for header and footer margin are used. This property is read-only.

        :return: The use_custom_header_footer_margins of this DocumentStyle.
        :rtype: bool
        """
        return self._use_custom_header_footer_margins

    @use_custom_header_footer_margins.setter
    def use_custom_header_footer_margins(self, use_custom_header_footer_margins):
        """Sets the use_custom_header_footer_margins of this DocumentStyle.

        Indicates whether DocumentStyle margin_header, SectionStyle margin_header and DocumentStyle margin_footer, SectionStyle margin_footer are respected. When false, the default values in the Docs editor for header and footer margin are used. This property is read-only.

        :param use_custom_header_footer_margins: The use_custom_header_footer_margins of this DocumentStyle.
        :type use_custom_header_footer_margins: bool
        """

        self._use_custom_header_footer_margins = use_custom_header_footer_margins

    @property
    def use_even_page_header_footer(self):
        """Gets the use_even_page_header_footer of this DocumentStyle.

        Indicates whether to use the even page header / footer IDs for the even pages.

        :return: The use_even_page_header_footer of this DocumentStyle.
        :rtype: bool
        """
        return self._use_even_page_header_footer

    @use_even_page_header_footer.setter
    def use_even_page_header_footer(self, use_even_page_header_footer):
        """Sets the use_even_page_header_footer of this DocumentStyle.

        Indicates whether to use the even page header / footer IDs for the even pages.

        :param use_even_page_header_footer: The use_even_page_header_footer of this DocumentStyle.
        :type use_even_page_header_footer: bool
        """

        self._use_even_page_header_footer = use_even_page_header_footer

    @property
    def use_first_page_header_footer(self):
        """Gets the use_first_page_header_footer of this DocumentStyle.

        Indicates whether to use the first page header / footer IDs for the first page.

        :return: The use_first_page_header_footer of this DocumentStyle.
        :rtype: bool
        """
        return self._use_first_page_header_footer

    @use_first_page_header_footer.setter
    def use_first_page_header_footer(self, use_first_page_header_footer):
        """Sets the use_first_page_header_footer of this DocumentStyle.

        Indicates whether to use the first page header / footer IDs for the first page.

        :param use_first_page_header_footer: The use_first_page_header_footer of this DocumentStyle.
        :type use_first_page_header_footer: bool
        """

        self._use_first_page_header_footer = use_first_page_header_footer
