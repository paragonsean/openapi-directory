# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReplaceImageRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image_object_id: str=None, image_replace_method: str=None, uri: str=None):
        """ReplaceImageRequest - a model defined in OpenAPI

        :param image_object_id: The image_object_id of this ReplaceImageRequest.
        :param image_replace_method: The image_replace_method of this ReplaceImageRequest.
        :param uri: The uri of this ReplaceImageRequest.
        """
        self.openapi_types = {
            'image_object_id': str,
            'image_replace_method': str,
            'uri': str
        }

        self.attribute_map = {
            'image_object_id': 'imageObjectId',
            'image_replace_method': 'imageReplaceMethod',
            'uri': 'uri'
        }

        self._image_object_id = image_object_id
        self._image_replace_method = image_replace_method
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReplaceImageRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReplaceImageRequest of this ReplaceImageRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_object_id(self):
        """Gets the image_object_id of this ReplaceImageRequest.

        The ID of the existing image that will be replaced. The ID can be retrieved from the response of a get request.

        :return: The image_object_id of this ReplaceImageRequest.
        :rtype: str
        """
        return self._image_object_id

    @image_object_id.setter
    def image_object_id(self, image_object_id):
        """Sets the image_object_id of this ReplaceImageRequest.

        The ID of the existing image that will be replaced. The ID can be retrieved from the response of a get request.

        :param image_object_id: The image_object_id of this ReplaceImageRequest.
        :type image_object_id: str
        """

        self._image_object_id = image_object_id

    @property
    def image_replace_method(self):
        """Gets the image_replace_method of this ReplaceImageRequest.

        The replacement method.

        :return: The image_replace_method of this ReplaceImageRequest.
        :rtype: str
        """
        return self._image_replace_method

    @image_replace_method.setter
    def image_replace_method(self, image_replace_method):
        """Sets the image_replace_method of this ReplaceImageRequest.

        The replacement method.

        :param image_replace_method: The image_replace_method of this ReplaceImageRequest.
        :type image_replace_method: str
        """
        allowed_values = ["IMAGE_REPLACE_METHOD_UNSPECIFIED", "CENTER_CROP"]  # noqa: E501
        if image_replace_method not in allowed_values:
            raise ValueError(
                "Invalid value for `image_replace_method` ({0}), must be one of {1}"
                .format(image_replace_method, allowed_values)
            )

        self._image_replace_method = image_replace_method

    @property
    def uri(self):
        """Gets the uri of this ReplaceImageRequest.

        The URI of the new image. The image is fetched once at insertion time and a copy is stored for display inside the document. Images must be less than 50MB, cannot exceed 25 megapixels, and must be in PNG, JPEG, or GIF format. The provided URI can't surpass 2 KB in length. The URI is saved with the image, and exposed through the ImageProperties.source_uri field.

        :return: The uri of this ReplaceImageRequest.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this ReplaceImageRequest.

        The URI of the new image. The image is fetched once at insertion time and a copy is stored for display inside the document. Images must be less than 50MB, cannot exceed 25 megapixels, and must be in PNG, JPEG, or GIF format. The provided URI can't surpass 2 KB in length. The URI is saved with the image, and exposed through the ImageProperties.source_uri field.

        :param uri: The uri of this ReplaceImageRequest.
        :type uri: str
        """

        self._uri = uri
