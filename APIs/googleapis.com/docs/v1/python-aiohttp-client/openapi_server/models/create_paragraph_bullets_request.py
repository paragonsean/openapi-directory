# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.range import Range
from openapi_server import util


class CreateParagraphBulletsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bullet_preset: str=None, range: Range=None):
        """CreateParagraphBulletsRequest - a model defined in OpenAPI

        :param bullet_preset: The bullet_preset of this CreateParagraphBulletsRequest.
        :param range: The range of this CreateParagraphBulletsRequest.
        """
        self.openapi_types = {
            'bullet_preset': str,
            'range': Range
        }

        self.attribute_map = {
            'bullet_preset': 'bulletPreset',
            'range': 'range'
        }

        self._bullet_preset = bullet_preset
        self._range = range

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateParagraphBulletsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateParagraphBulletsRequest of this CreateParagraphBulletsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bullet_preset(self):
        """Gets the bullet_preset of this CreateParagraphBulletsRequest.

        The kinds of bullet glyphs to be used.

        :return: The bullet_preset of this CreateParagraphBulletsRequest.
        :rtype: str
        """
        return self._bullet_preset

    @bullet_preset.setter
    def bullet_preset(self, bullet_preset):
        """Sets the bullet_preset of this CreateParagraphBulletsRequest.

        The kinds of bullet glyphs to be used.

        :param bullet_preset: The bullet_preset of this CreateParagraphBulletsRequest.
        :type bullet_preset: str
        """
        allowed_values = ["BULLET_GLYPH_PRESET_UNSPECIFIED", "BULLET_DISC_CIRCLE_SQUARE", "BULLET_DIAMONDX_ARROW3D_SQUARE", "BULLET_CHECKBOX", "BULLET_ARROW_DIAMOND_DISC", "BULLET_STAR_CIRCLE_SQUARE", "BULLET_ARROW3D_CIRCLE_SQUARE", "BULLET_LEFTTRIANGLE_DIAMOND_DISC", "BULLET_DIAMONDX_HOLLOWDIAMOND_SQUARE", "BULLET_DIAMOND_CIRCLE_SQUARE", "NUMBERED_DECIMAL_ALPHA_ROMAN", "NUMBERED_DECIMAL_ALPHA_ROMAN_PARENS", "NUMBERED_DECIMAL_NESTED", "NUMBERED_UPPERALPHA_ALPHA_ROMAN", "NUMBERED_UPPERROMAN_UPPERALPHA_DECIMAL", "NUMBERED_ZERODECIMAL_ALPHA_ROMAN"]  # noqa: E501
        if bullet_preset not in allowed_values:
            raise ValueError(
                "Invalid value for `bullet_preset` ({0}), must be one of {1}"
                .format(bullet_preset, allowed_values)
            )

        self._bullet_preset = bullet_preset

    @property
    def range(self):
        """Gets the range of this CreateParagraphBulletsRequest.


        :return: The range of this CreateParagraphBulletsRequest.
        :rtype: Range
        """
        return self._range

    @range.setter
    def range(self, range):
        """Sets the range of this CreateParagraphBulletsRequest.


        :param range: The range of this CreateParagraphBulletsRequest.
        :type range: Range
        """

        self._range = range
