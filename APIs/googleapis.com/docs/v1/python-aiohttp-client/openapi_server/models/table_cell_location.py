# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.location import Location
from openapi_server import util


class TableCellLocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, column_index: int=None, row_index: int=None, table_start_location: Location=None):
        """TableCellLocation - a model defined in OpenAPI

        :param column_index: The column_index of this TableCellLocation.
        :param row_index: The row_index of this TableCellLocation.
        :param table_start_location: The table_start_location of this TableCellLocation.
        """
        self.openapi_types = {
            'column_index': int,
            'row_index': int,
            'table_start_location': Location
        }

        self.attribute_map = {
            'column_index': 'columnIndex',
            'row_index': 'rowIndex',
            'table_start_location': 'tableStartLocation'
        }

        self._column_index = column_index
        self._row_index = row_index
        self._table_start_location = table_start_location

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TableCellLocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TableCellLocation of this TableCellLocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def column_index(self):
        """Gets the column_index of this TableCellLocation.

        The zero-based column index. For example, the second column in the table has a column index of 1.

        :return: The column_index of this TableCellLocation.
        :rtype: int
        """
        return self._column_index

    @column_index.setter
    def column_index(self, column_index):
        """Sets the column_index of this TableCellLocation.

        The zero-based column index. For example, the second column in the table has a column index of 1.

        :param column_index: The column_index of this TableCellLocation.
        :type column_index: int
        """

        self._column_index = column_index

    @property
    def row_index(self):
        """Gets the row_index of this TableCellLocation.

        The zero-based row index. For example, the second row in the table has a row index of 1.

        :return: The row_index of this TableCellLocation.
        :rtype: int
        """
        return self._row_index

    @row_index.setter
    def row_index(self, row_index):
        """Sets the row_index of this TableCellLocation.

        The zero-based row index. For example, the second row in the table has a row index of 1.

        :param row_index: The row_index of this TableCellLocation.
        :type row_index: int
        """

        self._row_index = row_index

    @property
    def table_start_location(self):
        """Gets the table_start_location of this TableCellLocation.


        :return: The table_start_location of this TableCellLocation.
        :rtype: Location
        """
        return self._table_start_location

    @table_start_location.setter
    def table_start_location(self, table_start_location):
        """Sets the table_start_location of this TableCellLocation.


        :param table_start_location: The table_start_location of this TableCellLocation.
        :type table_start_location: Location
        """

        self._table_start_location = table_start_location
