# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.nesting_level_suggestion_state import NestingLevelSuggestionState
from openapi_server import util


class ListPropertiesSuggestionState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, nesting_levels_suggestion_states: List[NestingLevelSuggestionState]=None):
        """ListPropertiesSuggestionState - a model defined in OpenAPI

        :param nesting_levels_suggestion_states: The nesting_levels_suggestion_states of this ListPropertiesSuggestionState.
        """
        self.openapi_types = {
            'nesting_levels_suggestion_states': List[NestingLevelSuggestionState]
        }

        self.attribute_map = {
            'nesting_levels_suggestion_states': 'nestingLevelsSuggestionStates'
        }

        self._nesting_levels_suggestion_states = nesting_levels_suggestion_states

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListPropertiesSuggestionState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListPropertiesSuggestionState of this ListPropertiesSuggestionState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nesting_levels_suggestion_states(self):
        """Gets the nesting_levels_suggestion_states of this ListPropertiesSuggestionState.

        A mask that indicates which of the fields on the corresponding NestingLevel in nesting_levels have been changed in this suggestion. The nesting level suggestion states are returned in ascending order of the nesting level with the least nested returned first.

        :return: The nesting_levels_suggestion_states of this ListPropertiesSuggestionState.
        :rtype: List[NestingLevelSuggestionState]
        """
        return self._nesting_levels_suggestion_states

    @nesting_levels_suggestion_states.setter
    def nesting_levels_suggestion_states(self, nesting_levels_suggestion_states):
        """Sets the nesting_levels_suggestion_states of this ListPropertiesSuggestionState.

        A mask that indicates which of the fields on the corresponding NestingLevel in nesting_levels have been changed in this suggestion. The nesting level suggestion states are returned in ascending order of the nesting level with the least nested returned first.

        :param nesting_levels_suggestion_states: The nesting_levels_suggestion_states of this ListPropertiesSuggestionState.
        :type nesting_levels_suggestion_states: List[NestingLevelSuggestionState]
        """

        self._nesting_levels_suggestion_states = nesting_levels_suggestion_states
