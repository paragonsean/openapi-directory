# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.structural_element import StructuralElement
from openapi_server import util


class Header(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content: List[StructuralElement]=None, header_id: str=None):
        """Header - a model defined in OpenAPI

        :param content: The content of this Header.
        :param header_id: The header_id of this Header.
        """
        self.openapi_types = {
            'content': List[StructuralElement],
            'header_id': str
        }

        self.attribute_map = {
            'content': 'content',
            'header_id': 'headerId'
        }

        self._content = content
        self._header_id = header_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Header':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Header of this Header.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content(self):
        """Gets the content of this Header.

        The contents of the header. The indexes for a header's content begin at zero.

        :return: The content of this Header.
        :rtype: List[StructuralElement]
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this Header.

        The contents of the header. The indexes for a header's content begin at zero.

        :param content: The content of this Header.
        :type content: List[StructuralElement]
        """

        self._content = content

    @property
    def header_id(self):
        """Gets the header_id of this Header.

        The ID of the header.

        :return: The header_id of this Header.
        :rtype: str
        """
        return self._header_id

    @header_id.setter
    def header_id(self, header_id):
        """Sets the header_id of this Header.

        The ID of the header.

        :param header_id: The header_id of this Header.
        :type header_id: str
        """

        self._header_id = header_id
