# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.color import Color
from openapi_server import util


class OptionalColor(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, color: Color=None):
        """OptionalColor - a model defined in OpenAPI

        :param color: The color of this OptionalColor.
        """
        self.openapi_types = {
            'color': Color
        }

        self.attribute_map = {
            'color': 'color'
        }

        self._color = color

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OptionalColor':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OptionalColor of this OptionalColor.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def color(self):
        """Gets the color of this OptionalColor.


        :return: The color of this OptionalColor.
        :rtype: Color
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this OptionalColor.


        :param color: The color of this OptionalColor.
        :type color: Color
        """

        self._color = color
