# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.optional_color import OptionalColor
from openapi_server import util


class Shading(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, background_color: OptionalColor=None):
        """Shading - a model defined in OpenAPI

        :param background_color: The background_color of this Shading.
        """
        self.openapi_types = {
            'background_color': OptionalColor
        }

        self.attribute_map = {
            'background_color': 'backgroundColor'
        }

        self._background_color = background_color

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Shading':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Shading of this Shading.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def background_color(self):
        """Gets the background_color of this Shading.


        :return: The background_color of this Shading.
        :rtype: OptionalColor
        """
        return self._background_color

    @background_color.setter
    def background_color(self, background_color):
        """Sets the background_color of this Shading.


        :param background_color: The background_color of this Shading.
        :type background_color: OptionalColor
        """

        self._background_color = background_color
