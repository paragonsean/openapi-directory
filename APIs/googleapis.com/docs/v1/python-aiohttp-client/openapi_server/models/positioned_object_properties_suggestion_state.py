# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.embedded_object_suggestion_state import EmbeddedObjectSuggestionState
from openapi_server.models.positioned_object_positioning_suggestion_state import PositionedObjectPositioningSuggestionState
from openapi_server import util


class PositionedObjectPropertiesSuggestionState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, embedded_object_suggestion_state: EmbeddedObjectSuggestionState=None, positioning_suggestion_state: PositionedObjectPositioningSuggestionState=None):
        """PositionedObjectPropertiesSuggestionState - a model defined in OpenAPI

        :param embedded_object_suggestion_state: The embedded_object_suggestion_state of this PositionedObjectPropertiesSuggestionState.
        :param positioning_suggestion_state: The positioning_suggestion_state of this PositionedObjectPropertiesSuggestionState.
        """
        self.openapi_types = {
            'embedded_object_suggestion_state': EmbeddedObjectSuggestionState,
            'positioning_suggestion_state': PositionedObjectPositioningSuggestionState
        }

        self.attribute_map = {
            'embedded_object_suggestion_state': 'embeddedObjectSuggestionState',
            'positioning_suggestion_state': 'positioningSuggestionState'
        }

        self._embedded_object_suggestion_state = embedded_object_suggestion_state
        self._positioning_suggestion_state = positioning_suggestion_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PositionedObjectPropertiesSuggestionState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PositionedObjectPropertiesSuggestionState of this PositionedObjectPropertiesSuggestionState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def embedded_object_suggestion_state(self):
        """Gets the embedded_object_suggestion_state of this PositionedObjectPropertiesSuggestionState.


        :return: The embedded_object_suggestion_state of this PositionedObjectPropertiesSuggestionState.
        :rtype: EmbeddedObjectSuggestionState
        """
        return self._embedded_object_suggestion_state

    @embedded_object_suggestion_state.setter
    def embedded_object_suggestion_state(self, embedded_object_suggestion_state):
        """Sets the embedded_object_suggestion_state of this PositionedObjectPropertiesSuggestionState.


        :param embedded_object_suggestion_state: The embedded_object_suggestion_state of this PositionedObjectPropertiesSuggestionState.
        :type embedded_object_suggestion_state: EmbeddedObjectSuggestionState
        """

        self._embedded_object_suggestion_state = embedded_object_suggestion_state

    @property
    def positioning_suggestion_state(self):
        """Gets the positioning_suggestion_state of this PositionedObjectPropertiesSuggestionState.


        :return: The positioning_suggestion_state of this PositionedObjectPropertiesSuggestionState.
        :rtype: PositionedObjectPositioningSuggestionState
        """
        return self._positioning_suggestion_state

    @positioning_suggestion_state.setter
    def positioning_suggestion_state(self, positioning_suggestion_state):
        """Sets the positioning_suggestion_state of this PositionedObjectPropertiesSuggestionState.


        :param positioning_suggestion_state: The positioning_suggestion_state of this PositionedObjectPropertiesSuggestionState.
        :type positioning_suggestion_state: PositionedObjectPositioningSuggestionState
        """

        self._positioning_suggestion_state = positioning_suggestion_state
