# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.paragraph_style import ParagraphStyle
from openapi_server.models.range import Range
from openapi_server import util


class UpdateParagraphStyleRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fields: str=None, paragraph_style: ParagraphStyle=None, range: Range=None):
        """UpdateParagraphStyleRequest - a model defined in OpenAPI

        :param fields: The fields of this UpdateParagraphStyleRequest.
        :param paragraph_style: The paragraph_style of this UpdateParagraphStyleRequest.
        :param range: The range of this UpdateParagraphStyleRequest.
        """
        self.openapi_types = {
            'fields': str,
            'paragraph_style': ParagraphStyle,
            'range': Range
        }

        self.attribute_map = {
            'fields': 'fields',
            'paragraph_style': 'paragraphStyle',
            'range': 'range'
        }

        self._fields = fields
        self._paragraph_style = paragraph_style
        self._range = range

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateParagraphStyleRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateParagraphStyleRequest of this UpdateParagraphStyleRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fields(self):
        """Gets the fields of this UpdateParagraphStyleRequest.

        The fields that should be updated. At least one field must be specified. The root `paragraph_style` is implied and should not be specified. A single `\"*\"` can be used as short-hand for listing every field. For example, to update the paragraph style's alignment property, set `fields` to `\"alignment\"`. To reset a property to its default value, include its field name in the field mask but leave the field itself unset.

        :return: The fields of this UpdateParagraphStyleRequest.
        :rtype: str
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this UpdateParagraphStyleRequest.

        The fields that should be updated. At least one field must be specified. The root `paragraph_style` is implied and should not be specified. A single `\"*\"` can be used as short-hand for listing every field. For example, to update the paragraph style's alignment property, set `fields` to `\"alignment\"`. To reset a property to its default value, include its field name in the field mask but leave the field itself unset.

        :param fields: The fields of this UpdateParagraphStyleRequest.
        :type fields: str
        """

        self._fields = fields

    @property
    def paragraph_style(self):
        """Gets the paragraph_style of this UpdateParagraphStyleRequest.


        :return: The paragraph_style of this UpdateParagraphStyleRequest.
        :rtype: ParagraphStyle
        """
        return self._paragraph_style

    @paragraph_style.setter
    def paragraph_style(self, paragraph_style):
        """Sets the paragraph_style of this UpdateParagraphStyleRequest.


        :param paragraph_style: The paragraph_style of this UpdateParagraphStyleRequest.
        :type paragraph_style: ParagraphStyle
        """

        self._paragraph_style = paragraph_style

    @property
    def range(self):
        """Gets the range of this UpdateParagraphStyleRequest.


        :return: The range of this UpdateParagraphStyleRequest.
        :rtype: Range
        """
        return self._range

    @range.setter
    def range(self, range):
        """Sets the range of this UpdateParagraphStyleRequest.


        :param range: The range of this UpdateParagraphStyleRequest.
        :type range: Range
        """

        self._range = range
