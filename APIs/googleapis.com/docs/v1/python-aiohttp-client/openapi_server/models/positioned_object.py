# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.positioned_object_properties import PositionedObjectProperties
from openapi_server.models.suggested_positioned_object_properties import SuggestedPositionedObjectProperties
from openapi_server import util


class PositionedObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, object_id: str=None, positioned_object_properties: PositionedObjectProperties=None, suggested_deletion_ids: List[str]=None, suggested_insertion_id: str=None, suggested_positioned_object_properties_changes: Dict[str, SuggestedPositionedObjectProperties]=None):
        """PositionedObject - a model defined in OpenAPI

        :param object_id: The object_id of this PositionedObject.
        :param positioned_object_properties: The positioned_object_properties of this PositionedObject.
        :param suggested_deletion_ids: The suggested_deletion_ids of this PositionedObject.
        :param suggested_insertion_id: The suggested_insertion_id of this PositionedObject.
        :param suggested_positioned_object_properties_changes: The suggested_positioned_object_properties_changes of this PositionedObject.
        """
        self.openapi_types = {
            'object_id': str,
            'positioned_object_properties': PositionedObjectProperties,
            'suggested_deletion_ids': List[str],
            'suggested_insertion_id': str,
            'suggested_positioned_object_properties_changes': Dict[str, SuggestedPositionedObjectProperties]
        }

        self.attribute_map = {
            'object_id': 'objectId',
            'positioned_object_properties': 'positionedObjectProperties',
            'suggested_deletion_ids': 'suggestedDeletionIds',
            'suggested_insertion_id': 'suggestedInsertionId',
            'suggested_positioned_object_properties_changes': 'suggestedPositionedObjectPropertiesChanges'
        }

        self._object_id = object_id
        self._positioned_object_properties = positioned_object_properties
        self._suggested_deletion_ids = suggested_deletion_ids
        self._suggested_insertion_id = suggested_insertion_id
        self._suggested_positioned_object_properties_changes = suggested_positioned_object_properties_changes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PositionedObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PositionedObject of this PositionedObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def object_id(self):
        """Gets the object_id of this PositionedObject.

        The ID of this positioned object.

        :return: The object_id of this PositionedObject.
        :rtype: str
        """
        return self._object_id

    @object_id.setter
    def object_id(self, object_id):
        """Sets the object_id of this PositionedObject.

        The ID of this positioned object.

        :param object_id: The object_id of this PositionedObject.
        :type object_id: str
        """

        self._object_id = object_id

    @property
    def positioned_object_properties(self):
        """Gets the positioned_object_properties of this PositionedObject.


        :return: The positioned_object_properties of this PositionedObject.
        :rtype: PositionedObjectProperties
        """
        return self._positioned_object_properties

    @positioned_object_properties.setter
    def positioned_object_properties(self, positioned_object_properties):
        """Sets the positioned_object_properties of this PositionedObject.


        :param positioned_object_properties: The positioned_object_properties of this PositionedObject.
        :type positioned_object_properties: PositionedObjectProperties
        """

        self._positioned_object_properties = positioned_object_properties

    @property
    def suggested_deletion_ids(self):
        """Gets the suggested_deletion_ids of this PositionedObject.

        The suggested deletion IDs. If empty, then there are no suggested deletions of this content.

        :return: The suggested_deletion_ids of this PositionedObject.
        :rtype: List[str]
        """
        return self._suggested_deletion_ids

    @suggested_deletion_ids.setter
    def suggested_deletion_ids(self, suggested_deletion_ids):
        """Sets the suggested_deletion_ids of this PositionedObject.

        The suggested deletion IDs. If empty, then there are no suggested deletions of this content.

        :param suggested_deletion_ids: The suggested_deletion_ids of this PositionedObject.
        :type suggested_deletion_ids: List[str]
        """

        self._suggested_deletion_ids = suggested_deletion_ids

    @property
    def suggested_insertion_id(self):
        """Gets the suggested_insertion_id of this PositionedObject.

        The suggested insertion ID. If empty, then this is not a suggested insertion.

        :return: The suggested_insertion_id of this PositionedObject.
        :rtype: str
        """
        return self._suggested_insertion_id

    @suggested_insertion_id.setter
    def suggested_insertion_id(self, suggested_insertion_id):
        """Sets the suggested_insertion_id of this PositionedObject.

        The suggested insertion ID. If empty, then this is not a suggested insertion.

        :param suggested_insertion_id: The suggested_insertion_id of this PositionedObject.
        :type suggested_insertion_id: str
        """

        self._suggested_insertion_id = suggested_insertion_id

    @property
    def suggested_positioned_object_properties_changes(self):
        """Gets the suggested_positioned_object_properties_changes of this PositionedObject.

        The suggested changes to the positioned object properties, keyed by suggestion ID.

        :return: The suggested_positioned_object_properties_changes of this PositionedObject.
        :rtype: Dict[str, SuggestedPositionedObjectProperties]
        """
        return self._suggested_positioned_object_properties_changes

    @suggested_positioned_object_properties_changes.setter
    def suggested_positioned_object_properties_changes(self, suggested_positioned_object_properties_changes):
        """Sets the suggested_positioned_object_properties_changes of this PositionedObject.

        The suggested changes to the positioned object properties, keyed by suggestion ID.

        :param suggested_positioned_object_properties_changes: The suggested_positioned_object_properties_changes of this PositionedObject.
        :type suggested_positioned_object_properties_changes: Dict[str, SuggestedPositionedObjectProperties]
        """

        self._suggested_positioned_object_properties_changes = suggested_positioned_object_properties_changes
