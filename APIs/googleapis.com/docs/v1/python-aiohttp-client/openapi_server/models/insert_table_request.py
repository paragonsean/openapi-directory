# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.end_of_segment_location import EndOfSegmentLocation
from openapi_server.models.location import Location
from openapi_server import util


class InsertTableRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, columns: int=None, end_of_segment_location: EndOfSegmentLocation=None, location: Location=None, rows: int=None):
        """InsertTableRequest - a model defined in OpenAPI

        :param columns: The columns of this InsertTableRequest.
        :param end_of_segment_location: The end_of_segment_location of this InsertTableRequest.
        :param location: The location of this InsertTableRequest.
        :param rows: The rows of this InsertTableRequest.
        """
        self.openapi_types = {
            'columns': int,
            'end_of_segment_location': EndOfSegmentLocation,
            'location': Location,
            'rows': int
        }

        self.attribute_map = {
            'columns': 'columns',
            'end_of_segment_location': 'endOfSegmentLocation',
            'location': 'location',
            'rows': 'rows'
        }

        self._columns = columns
        self._end_of_segment_location = end_of_segment_location
        self._location = location
        self._rows = rows

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InsertTableRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InsertTableRequest of this InsertTableRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def columns(self):
        """Gets the columns of this InsertTableRequest.

        The number of columns in the table.

        :return: The columns of this InsertTableRequest.
        :rtype: int
        """
        return self._columns

    @columns.setter
    def columns(self, columns):
        """Sets the columns of this InsertTableRequest.

        The number of columns in the table.

        :param columns: The columns of this InsertTableRequest.
        :type columns: int
        """

        self._columns = columns

    @property
    def end_of_segment_location(self):
        """Gets the end_of_segment_location of this InsertTableRequest.


        :return: The end_of_segment_location of this InsertTableRequest.
        :rtype: EndOfSegmentLocation
        """
        return self._end_of_segment_location

    @end_of_segment_location.setter
    def end_of_segment_location(self, end_of_segment_location):
        """Sets the end_of_segment_location of this InsertTableRequest.


        :param end_of_segment_location: The end_of_segment_location of this InsertTableRequest.
        :type end_of_segment_location: EndOfSegmentLocation
        """

        self._end_of_segment_location = end_of_segment_location

    @property
    def location(self):
        """Gets the location of this InsertTableRequest.


        :return: The location of this InsertTableRequest.
        :rtype: Location
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this InsertTableRequest.


        :param location: The location of this InsertTableRequest.
        :type location: Location
        """

        self._location = location

    @property
    def rows(self):
        """Gets the rows of this InsertTableRequest.

        The number of rows in the table.

        :return: The rows of this InsertTableRequest.
        :rtype: int
        """
        return self._rows

    @rows.setter
    def rows(self, rows):
        """Sets the rows of this InsertTableRequest.

        The number of rows in the table.

        :param rows: The rows of this InsertTableRequest.
        :type rows: int
        """

        self._rows = rows
