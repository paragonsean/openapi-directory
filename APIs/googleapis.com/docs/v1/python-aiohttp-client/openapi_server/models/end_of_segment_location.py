# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EndOfSegmentLocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, segment_id: str=None):
        """EndOfSegmentLocation - a model defined in OpenAPI

        :param segment_id: The segment_id of this EndOfSegmentLocation.
        """
        self.openapi_types = {
            'segment_id': str
        }

        self.attribute_map = {
            'segment_id': 'segmentId'
        }

        self._segment_id = segment_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EndOfSegmentLocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EndOfSegmentLocation of this EndOfSegmentLocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def segment_id(self):
        """Gets the segment_id of this EndOfSegmentLocation.

        The ID of the header, footer or footnote the location is in. An empty segment ID signifies the document's body.

        :return: The segment_id of this EndOfSegmentLocation.
        :rtype: str
        """
        return self._segment_id

    @segment_id.setter
    def segment_id(self, segment_id):
        """Sets the segment_id of this EndOfSegmentLocation.

        The ID of the header, footer or footnote the location is in. An empty segment ID signifies the document's body.

        :param segment_id: The segment_id of this EndOfSegmentLocation.
        :type segment_id: str
        """

        self._segment_id = segment_id
