# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.inline_object_properties import InlineObjectProperties
from openapi_server.models.suggested_inline_object_properties import SuggestedInlineObjectProperties
from openapi_server import util


class InlineObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, inline_object_properties: InlineObjectProperties=None, object_id: str=None, suggested_deletion_ids: List[str]=None, suggested_inline_object_properties_changes: Dict[str, SuggestedInlineObjectProperties]=None, suggested_insertion_id: str=None):
        """InlineObject - a model defined in OpenAPI

        :param inline_object_properties: The inline_object_properties of this InlineObject.
        :param object_id: The object_id of this InlineObject.
        :param suggested_deletion_ids: The suggested_deletion_ids of this InlineObject.
        :param suggested_inline_object_properties_changes: The suggested_inline_object_properties_changes of this InlineObject.
        :param suggested_insertion_id: The suggested_insertion_id of this InlineObject.
        """
        self.openapi_types = {
            'inline_object_properties': InlineObjectProperties,
            'object_id': str,
            'suggested_deletion_ids': List[str],
            'suggested_inline_object_properties_changes': Dict[str, SuggestedInlineObjectProperties],
            'suggested_insertion_id': str
        }

        self.attribute_map = {
            'inline_object_properties': 'inlineObjectProperties',
            'object_id': 'objectId',
            'suggested_deletion_ids': 'suggestedDeletionIds',
            'suggested_inline_object_properties_changes': 'suggestedInlineObjectPropertiesChanges',
            'suggested_insertion_id': 'suggestedInsertionId'
        }

        self._inline_object_properties = inline_object_properties
        self._object_id = object_id
        self._suggested_deletion_ids = suggested_deletion_ids
        self._suggested_inline_object_properties_changes = suggested_inline_object_properties_changes
        self._suggested_insertion_id = suggested_insertion_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InlineObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InlineObject of this InlineObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inline_object_properties(self):
        """Gets the inline_object_properties of this InlineObject.


        :return: The inline_object_properties of this InlineObject.
        :rtype: InlineObjectProperties
        """
        return self._inline_object_properties

    @inline_object_properties.setter
    def inline_object_properties(self, inline_object_properties):
        """Sets the inline_object_properties of this InlineObject.


        :param inline_object_properties: The inline_object_properties of this InlineObject.
        :type inline_object_properties: InlineObjectProperties
        """

        self._inline_object_properties = inline_object_properties

    @property
    def object_id(self):
        """Gets the object_id of this InlineObject.

        The ID of this inline object. Can be used to update an object’s properties.

        :return: The object_id of this InlineObject.
        :rtype: str
        """
        return self._object_id

    @object_id.setter
    def object_id(self, object_id):
        """Sets the object_id of this InlineObject.

        The ID of this inline object. Can be used to update an object’s properties.

        :param object_id: The object_id of this InlineObject.
        :type object_id: str
        """

        self._object_id = object_id

    @property
    def suggested_deletion_ids(self):
        """Gets the suggested_deletion_ids of this InlineObject.

        The suggested deletion IDs. If empty, then there are no suggested deletions of this content.

        :return: The suggested_deletion_ids of this InlineObject.
        :rtype: List[str]
        """
        return self._suggested_deletion_ids

    @suggested_deletion_ids.setter
    def suggested_deletion_ids(self, suggested_deletion_ids):
        """Sets the suggested_deletion_ids of this InlineObject.

        The suggested deletion IDs. If empty, then there are no suggested deletions of this content.

        :param suggested_deletion_ids: The suggested_deletion_ids of this InlineObject.
        :type suggested_deletion_ids: List[str]
        """

        self._suggested_deletion_ids = suggested_deletion_ids

    @property
    def suggested_inline_object_properties_changes(self):
        """Gets the suggested_inline_object_properties_changes of this InlineObject.

        The suggested changes to the inline object properties, keyed by suggestion ID.

        :return: The suggested_inline_object_properties_changes of this InlineObject.
        :rtype: Dict[str, SuggestedInlineObjectProperties]
        """
        return self._suggested_inline_object_properties_changes

    @suggested_inline_object_properties_changes.setter
    def suggested_inline_object_properties_changes(self, suggested_inline_object_properties_changes):
        """Sets the suggested_inline_object_properties_changes of this InlineObject.

        The suggested changes to the inline object properties, keyed by suggestion ID.

        :param suggested_inline_object_properties_changes: The suggested_inline_object_properties_changes of this InlineObject.
        :type suggested_inline_object_properties_changes: Dict[str, SuggestedInlineObjectProperties]
        """

        self._suggested_inline_object_properties_changes = suggested_inline_object_properties_changes

    @property
    def suggested_insertion_id(self):
        """Gets the suggested_insertion_id of this InlineObject.

        The suggested insertion ID. If empty, then this is not a suggested insertion.

        :return: The suggested_insertion_id of this InlineObject.
        :rtype: str
        """
        return self._suggested_insertion_id

    @suggested_insertion_id.setter
    def suggested_insertion_id(self, suggested_insertion_id):
        """Sets the suggested_insertion_id of this InlineObject.

        The suggested insertion ID. If empty, then this is not a suggested insertion.

        :param suggested_insertion_id: The suggested_insertion_id of this InlineObject.
        :type suggested_insertion_id: str
        """

        self._suggested_insertion_id = suggested_insertion_id
