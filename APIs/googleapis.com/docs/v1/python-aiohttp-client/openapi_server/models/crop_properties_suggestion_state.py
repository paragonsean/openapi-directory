# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CropPropertiesSuggestionState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, angle_suggested: bool=None, offset_bottom_suggested: bool=None, offset_left_suggested: bool=None, offset_right_suggested: bool=None, offset_top_suggested: bool=None):
        """CropPropertiesSuggestionState - a model defined in OpenAPI

        :param angle_suggested: The angle_suggested of this CropPropertiesSuggestionState.
        :param offset_bottom_suggested: The offset_bottom_suggested of this CropPropertiesSuggestionState.
        :param offset_left_suggested: The offset_left_suggested of this CropPropertiesSuggestionState.
        :param offset_right_suggested: The offset_right_suggested of this CropPropertiesSuggestionState.
        :param offset_top_suggested: The offset_top_suggested of this CropPropertiesSuggestionState.
        """
        self.openapi_types = {
            'angle_suggested': bool,
            'offset_bottom_suggested': bool,
            'offset_left_suggested': bool,
            'offset_right_suggested': bool,
            'offset_top_suggested': bool
        }

        self.attribute_map = {
            'angle_suggested': 'angleSuggested',
            'offset_bottom_suggested': 'offsetBottomSuggested',
            'offset_left_suggested': 'offsetLeftSuggested',
            'offset_right_suggested': 'offsetRightSuggested',
            'offset_top_suggested': 'offsetTopSuggested'
        }

        self._angle_suggested = angle_suggested
        self._offset_bottom_suggested = offset_bottom_suggested
        self._offset_left_suggested = offset_left_suggested
        self._offset_right_suggested = offset_right_suggested
        self._offset_top_suggested = offset_top_suggested

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CropPropertiesSuggestionState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CropPropertiesSuggestionState of this CropPropertiesSuggestionState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def angle_suggested(self):
        """Gets the angle_suggested of this CropPropertiesSuggestionState.

        Indicates if there was a suggested change to angle.

        :return: The angle_suggested of this CropPropertiesSuggestionState.
        :rtype: bool
        """
        return self._angle_suggested

    @angle_suggested.setter
    def angle_suggested(self, angle_suggested):
        """Sets the angle_suggested of this CropPropertiesSuggestionState.

        Indicates if there was a suggested change to angle.

        :param angle_suggested: The angle_suggested of this CropPropertiesSuggestionState.
        :type angle_suggested: bool
        """

        self._angle_suggested = angle_suggested

    @property
    def offset_bottom_suggested(self):
        """Gets the offset_bottom_suggested of this CropPropertiesSuggestionState.

        Indicates if there was a suggested change to offset_bottom.

        :return: The offset_bottom_suggested of this CropPropertiesSuggestionState.
        :rtype: bool
        """
        return self._offset_bottom_suggested

    @offset_bottom_suggested.setter
    def offset_bottom_suggested(self, offset_bottom_suggested):
        """Sets the offset_bottom_suggested of this CropPropertiesSuggestionState.

        Indicates if there was a suggested change to offset_bottom.

        :param offset_bottom_suggested: The offset_bottom_suggested of this CropPropertiesSuggestionState.
        :type offset_bottom_suggested: bool
        """

        self._offset_bottom_suggested = offset_bottom_suggested

    @property
    def offset_left_suggested(self):
        """Gets the offset_left_suggested of this CropPropertiesSuggestionState.

        Indicates if there was a suggested change to offset_left.

        :return: The offset_left_suggested of this CropPropertiesSuggestionState.
        :rtype: bool
        """
        return self._offset_left_suggested

    @offset_left_suggested.setter
    def offset_left_suggested(self, offset_left_suggested):
        """Sets the offset_left_suggested of this CropPropertiesSuggestionState.

        Indicates if there was a suggested change to offset_left.

        :param offset_left_suggested: The offset_left_suggested of this CropPropertiesSuggestionState.
        :type offset_left_suggested: bool
        """

        self._offset_left_suggested = offset_left_suggested

    @property
    def offset_right_suggested(self):
        """Gets the offset_right_suggested of this CropPropertiesSuggestionState.

        Indicates if there was a suggested change to offset_right.

        :return: The offset_right_suggested of this CropPropertiesSuggestionState.
        :rtype: bool
        """
        return self._offset_right_suggested

    @offset_right_suggested.setter
    def offset_right_suggested(self, offset_right_suggested):
        """Sets the offset_right_suggested of this CropPropertiesSuggestionState.

        Indicates if there was a suggested change to offset_right.

        :param offset_right_suggested: The offset_right_suggested of this CropPropertiesSuggestionState.
        :type offset_right_suggested: bool
        """

        self._offset_right_suggested = offset_right_suggested

    @property
    def offset_top_suggested(self):
        """Gets the offset_top_suggested of this CropPropertiesSuggestionState.

        Indicates if there was a suggested change to offset_top.

        :return: The offset_top_suggested of this CropPropertiesSuggestionState.
        :rtype: bool
        """
        return self._offset_top_suggested

    @offset_top_suggested.setter
    def offset_top_suggested(self, offset_top_suggested):
        """Sets the offset_top_suggested of this CropPropertiesSuggestionState.

        Indicates if there was a suggested change to offset_top.

        :param offset_top_suggested: The offset_top_suggested of this CropPropertiesSuggestionState.
        :type offset_top_suggested: bool
        """

        self._offset_top_suggested = offset_top_suggested
