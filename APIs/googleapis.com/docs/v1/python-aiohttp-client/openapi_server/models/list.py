# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_properties import ListProperties
from openapi_server.models.suggested_list_properties import SuggestedListProperties
from openapi_server import util


class List(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, list_properties: ListProperties=None, suggested_deletion_ids: List[str]=None, suggested_insertion_id: str=None, suggested_list_properties_changes: Dict[str, SuggestedListProperties]=None):
        """List - a model defined in OpenAPI

        :param list_properties: The list_properties of this List.
        :param suggested_deletion_ids: The suggested_deletion_ids of this List.
        :param suggested_insertion_id: The suggested_insertion_id of this List.
        :param suggested_list_properties_changes: The suggested_list_properties_changes of this List.
        """
        self.openapi_types = {
            'list_properties': ListProperties,
            'suggested_deletion_ids': List[str],
            'suggested_insertion_id': str,
            'suggested_list_properties_changes': Dict[str, SuggestedListProperties]
        }

        self.attribute_map = {
            'list_properties': 'listProperties',
            'suggested_deletion_ids': 'suggestedDeletionIds',
            'suggested_insertion_id': 'suggestedInsertionId',
            'suggested_list_properties_changes': 'suggestedListPropertiesChanges'
        }

        self._list_properties = list_properties
        self._suggested_deletion_ids = suggested_deletion_ids
        self._suggested_insertion_id = suggested_insertion_id
        self._suggested_list_properties_changes = suggested_list_properties_changes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'List':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The List of this List.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def list_properties(self):
        """Gets the list_properties of this List.


        :return: The list_properties of this List.
        :rtype: ListProperties
        """
        return self._list_properties

    @list_properties.setter
    def list_properties(self, list_properties):
        """Sets the list_properties of this List.


        :param list_properties: The list_properties of this List.
        :type list_properties: ListProperties
        """

        self._list_properties = list_properties

    @property
    def suggested_deletion_ids(self):
        """Gets the suggested_deletion_ids of this List.

        The suggested deletion IDs. If empty, then there are no suggested deletions of this list.

        :return: The suggested_deletion_ids of this List.
        :rtype: List[str]
        """
        return self._suggested_deletion_ids

    @suggested_deletion_ids.setter
    def suggested_deletion_ids(self, suggested_deletion_ids):
        """Sets the suggested_deletion_ids of this List.

        The suggested deletion IDs. If empty, then there are no suggested deletions of this list.

        :param suggested_deletion_ids: The suggested_deletion_ids of this List.
        :type suggested_deletion_ids: List[str]
        """

        self._suggested_deletion_ids = suggested_deletion_ids

    @property
    def suggested_insertion_id(self):
        """Gets the suggested_insertion_id of this List.

        The suggested insertion ID. If empty, then this is not a suggested insertion.

        :return: The suggested_insertion_id of this List.
        :rtype: str
        """
        return self._suggested_insertion_id

    @suggested_insertion_id.setter
    def suggested_insertion_id(self, suggested_insertion_id):
        """Sets the suggested_insertion_id of this List.

        The suggested insertion ID. If empty, then this is not a suggested insertion.

        :param suggested_insertion_id: The suggested_insertion_id of this List.
        :type suggested_insertion_id: str
        """

        self._suggested_insertion_id = suggested_insertion_id

    @property
    def suggested_list_properties_changes(self):
        """Gets the suggested_list_properties_changes of this List.

        The suggested changes to the list properties, keyed by suggestion ID.

        :return: The suggested_list_properties_changes of this List.
        :rtype: Dict[str, SuggestedListProperties]
        """
        return self._suggested_list_properties_changes

    @suggested_list_properties_changes.setter
    def suggested_list_properties_changes(self, suggested_list_properties_changes):
        """Sets the suggested_list_properties_changes of this List.

        The suggested changes to the list properties, keyed by suggestion ID.

        :param suggested_list_properties_changes: The suggested_list_properties_changes of this List.
        :type suggested_list_properties_changes: Dict[str, SuggestedListProperties]
        """

        self._suggested_list_properties_changes = suggested_list_properties_changes
