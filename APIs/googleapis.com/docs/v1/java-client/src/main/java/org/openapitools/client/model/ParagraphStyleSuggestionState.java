/*
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ShadingSuggestionState;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A mask that indicates which of the fields on the base ParagraphStyle have been changed in this suggestion. For any field set to true, there&#39;s a new suggested value.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:07.584674-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ParagraphStyleSuggestionState {
  public static final String SERIALIZED_NAME_ALIGNMENT_SUGGESTED = "alignmentSuggested";
  @SerializedName(SERIALIZED_NAME_ALIGNMENT_SUGGESTED)
  private Boolean alignmentSuggested;

  public static final String SERIALIZED_NAME_AVOID_WIDOW_AND_ORPHAN_SUGGESTED = "avoidWidowAndOrphanSuggested";
  @SerializedName(SERIALIZED_NAME_AVOID_WIDOW_AND_ORPHAN_SUGGESTED)
  private Boolean avoidWidowAndOrphanSuggested;

  public static final String SERIALIZED_NAME_BORDER_BETWEEN_SUGGESTED = "borderBetweenSuggested";
  @SerializedName(SERIALIZED_NAME_BORDER_BETWEEN_SUGGESTED)
  private Boolean borderBetweenSuggested;

  public static final String SERIALIZED_NAME_BORDER_BOTTOM_SUGGESTED = "borderBottomSuggested";
  @SerializedName(SERIALIZED_NAME_BORDER_BOTTOM_SUGGESTED)
  private Boolean borderBottomSuggested;

  public static final String SERIALIZED_NAME_BORDER_LEFT_SUGGESTED = "borderLeftSuggested";
  @SerializedName(SERIALIZED_NAME_BORDER_LEFT_SUGGESTED)
  private Boolean borderLeftSuggested;

  public static final String SERIALIZED_NAME_BORDER_RIGHT_SUGGESTED = "borderRightSuggested";
  @SerializedName(SERIALIZED_NAME_BORDER_RIGHT_SUGGESTED)
  private Boolean borderRightSuggested;

  public static final String SERIALIZED_NAME_BORDER_TOP_SUGGESTED = "borderTopSuggested";
  @SerializedName(SERIALIZED_NAME_BORDER_TOP_SUGGESTED)
  private Boolean borderTopSuggested;

  public static final String SERIALIZED_NAME_DIRECTION_SUGGESTED = "directionSuggested";
  @SerializedName(SERIALIZED_NAME_DIRECTION_SUGGESTED)
  private Boolean directionSuggested;

  public static final String SERIALIZED_NAME_HEADING_ID_SUGGESTED = "headingIdSuggested";
  @SerializedName(SERIALIZED_NAME_HEADING_ID_SUGGESTED)
  private Boolean headingIdSuggested;

  public static final String SERIALIZED_NAME_INDENT_END_SUGGESTED = "indentEndSuggested";
  @SerializedName(SERIALIZED_NAME_INDENT_END_SUGGESTED)
  private Boolean indentEndSuggested;

  public static final String SERIALIZED_NAME_INDENT_FIRST_LINE_SUGGESTED = "indentFirstLineSuggested";
  @SerializedName(SERIALIZED_NAME_INDENT_FIRST_LINE_SUGGESTED)
  private Boolean indentFirstLineSuggested;

  public static final String SERIALIZED_NAME_INDENT_START_SUGGESTED = "indentStartSuggested";
  @SerializedName(SERIALIZED_NAME_INDENT_START_SUGGESTED)
  private Boolean indentStartSuggested;

  public static final String SERIALIZED_NAME_KEEP_LINES_TOGETHER_SUGGESTED = "keepLinesTogetherSuggested";
  @SerializedName(SERIALIZED_NAME_KEEP_LINES_TOGETHER_SUGGESTED)
  private Boolean keepLinesTogetherSuggested;

  public static final String SERIALIZED_NAME_KEEP_WITH_NEXT_SUGGESTED = "keepWithNextSuggested";
  @SerializedName(SERIALIZED_NAME_KEEP_WITH_NEXT_SUGGESTED)
  private Boolean keepWithNextSuggested;

  public static final String SERIALIZED_NAME_LINE_SPACING_SUGGESTED = "lineSpacingSuggested";
  @SerializedName(SERIALIZED_NAME_LINE_SPACING_SUGGESTED)
  private Boolean lineSpacingSuggested;

  public static final String SERIALIZED_NAME_NAMED_STYLE_TYPE_SUGGESTED = "namedStyleTypeSuggested";
  @SerializedName(SERIALIZED_NAME_NAMED_STYLE_TYPE_SUGGESTED)
  private Boolean namedStyleTypeSuggested;

  public static final String SERIALIZED_NAME_PAGE_BREAK_BEFORE_SUGGESTED = "pageBreakBeforeSuggested";
  @SerializedName(SERIALIZED_NAME_PAGE_BREAK_BEFORE_SUGGESTED)
  private Boolean pageBreakBeforeSuggested;

  public static final String SERIALIZED_NAME_SHADING_SUGGESTION_STATE = "shadingSuggestionState";
  @SerializedName(SERIALIZED_NAME_SHADING_SUGGESTION_STATE)
  private ShadingSuggestionState shadingSuggestionState;

  public static final String SERIALIZED_NAME_SPACE_ABOVE_SUGGESTED = "spaceAboveSuggested";
  @SerializedName(SERIALIZED_NAME_SPACE_ABOVE_SUGGESTED)
  private Boolean spaceAboveSuggested;

  public static final String SERIALIZED_NAME_SPACE_BELOW_SUGGESTED = "spaceBelowSuggested";
  @SerializedName(SERIALIZED_NAME_SPACE_BELOW_SUGGESTED)
  private Boolean spaceBelowSuggested;

  public static final String SERIALIZED_NAME_SPACING_MODE_SUGGESTED = "spacingModeSuggested";
  @SerializedName(SERIALIZED_NAME_SPACING_MODE_SUGGESTED)
  private Boolean spacingModeSuggested;

  public ParagraphStyleSuggestionState() {
  }

  public ParagraphStyleSuggestionState alignmentSuggested(Boolean alignmentSuggested) {
    this.alignmentSuggested = alignmentSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to alignment.
   * @return alignmentSuggested
   */
  @javax.annotation.Nullable
  public Boolean getAlignmentSuggested() {
    return alignmentSuggested;
  }

  public void setAlignmentSuggested(Boolean alignmentSuggested) {
    this.alignmentSuggested = alignmentSuggested;
  }


  public ParagraphStyleSuggestionState avoidWidowAndOrphanSuggested(Boolean avoidWidowAndOrphanSuggested) {
    this.avoidWidowAndOrphanSuggested = avoidWidowAndOrphanSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to avoid_widow_and_orphan.
   * @return avoidWidowAndOrphanSuggested
   */
  @javax.annotation.Nullable
  public Boolean getAvoidWidowAndOrphanSuggested() {
    return avoidWidowAndOrphanSuggested;
  }

  public void setAvoidWidowAndOrphanSuggested(Boolean avoidWidowAndOrphanSuggested) {
    this.avoidWidowAndOrphanSuggested = avoidWidowAndOrphanSuggested;
  }


  public ParagraphStyleSuggestionState borderBetweenSuggested(Boolean borderBetweenSuggested) {
    this.borderBetweenSuggested = borderBetweenSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to border_between.
   * @return borderBetweenSuggested
   */
  @javax.annotation.Nullable
  public Boolean getBorderBetweenSuggested() {
    return borderBetweenSuggested;
  }

  public void setBorderBetweenSuggested(Boolean borderBetweenSuggested) {
    this.borderBetweenSuggested = borderBetweenSuggested;
  }


  public ParagraphStyleSuggestionState borderBottomSuggested(Boolean borderBottomSuggested) {
    this.borderBottomSuggested = borderBottomSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to border_bottom.
   * @return borderBottomSuggested
   */
  @javax.annotation.Nullable
  public Boolean getBorderBottomSuggested() {
    return borderBottomSuggested;
  }

  public void setBorderBottomSuggested(Boolean borderBottomSuggested) {
    this.borderBottomSuggested = borderBottomSuggested;
  }


  public ParagraphStyleSuggestionState borderLeftSuggested(Boolean borderLeftSuggested) {
    this.borderLeftSuggested = borderLeftSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to border_left.
   * @return borderLeftSuggested
   */
  @javax.annotation.Nullable
  public Boolean getBorderLeftSuggested() {
    return borderLeftSuggested;
  }

  public void setBorderLeftSuggested(Boolean borderLeftSuggested) {
    this.borderLeftSuggested = borderLeftSuggested;
  }


  public ParagraphStyleSuggestionState borderRightSuggested(Boolean borderRightSuggested) {
    this.borderRightSuggested = borderRightSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to border_right.
   * @return borderRightSuggested
   */
  @javax.annotation.Nullable
  public Boolean getBorderRightSuggested() {
    return borderRightSuggested;
  }

  public void setBorderRightSuggested(Boolean borderRightSuggested) {
    this.borderRightSuggested = borderRightSuggested;
  }


  public ParagraphStyleSuggestionState borderTopSuggested(Boolean borderTopSuggested) {
    this.borderTopSuggested = borderTopSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to border_top.
   * @return borderTopSuggested
   */
  @javax.annotation.Nullable
  public Boolean getBorderTopSuggested() {
    return borderTopSuggested;
  }

  public void setBorderTopSuggested(Boolean borderTopSuggested) {
    this.borderTopSuggested = borderTopSuggested;
  }


  public ParagraphStyleSuggestionState directionSuggested(Boolean directionSuggested) {
    this.directionSuggested = directionSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to direction.
   * @return directionSuggested
   */
  @javax.annotation.Nullable
  public Boolean getDirectionSuggested() {
    return directionSuggested;
  }

  public void setDirectionSuggested(Boolean directionSuggested) {
    this.directionSuggested = directionSuggested;
  }


  public ParagraphStyleSuggestionState headingIdSuggested(Boolean headingIdSuggested) {
    this.headingIdSuggested = headingIdSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to heading_id.
   * @return headingIdSuggested
   */
  @javax.annotation.Nullable
  public Boolean getHeadingIdSuggested() {
    return headingIdSuggested;
  }

  public void setHeadingIdSuggested(Boolean headingIdSuggested) {
    this.headingIdSuggested = headingIdSuggested;
  }


  public ParagraphStyleSuggestionState indentEndSuggested(Boolean indentEndSuggested) {
    this.indentEndSuggested = indentEndSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to indent_end.
   * @return indentEndSuggested
   */
  @javax.annotation.Nullable
  public Boolean getIndentEndSuggested() {
    return indentEndSuggested;
  }

  public void setIndentEndSuggested(Boolean indentEndSuggested) {
    this.indentEndSuggested = indentEndSuggested;
  }


  public ParagraphStyleSuggestionState indentFirstLineSuggested(Boolean indentFirstLineSuggested) {
    this.indentFirstLineSuggested = indentFirstLineSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to indent_first_line.
   * @return indentFirstLineSuggested
   */
  @javax.annotation.Nullable
  public Boolean getIndentFirstLineSuggested() {
    return indentFirstLineSuggested;
  }

  public void setIndentFirstLineSuggested(Boolean indentFirstLineSuggested) {
    this.indentFirstLineSuggested = indentFirstLineSuggested;
  }


  public ParagraphStyleSuggestionState indentStartSuggested(Boolean indentStartSuggested) {
    this.indentStartSuggested = indentStartSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to indent_start.
   * @return indentStartSuggested
   */
  @javax.annotation.Nullable
  public Boolean getIndentStartSuggested() {
    return indentStartSuggested;
  }

  public void setIndentStartSuggested(Boolean indentStartSuggested) {
    this.indentStartSuggested = indentStartSuggested;
  }


  public ParagraphStyleSuggestionState keepLinesTogetherSuggested(Boolean keepLinesTogetherSuggested) {
    this.keepLinesTogetherSuggested = keepLinesTogetherSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to keep_lines_together.
   * @return keepLinesTogetherSuggested
   */
  @javax.annotation.Nullable
  public Boolean getKeepLinesTogetherSuggested() {
    return keepLinesTogetherSuggested;
  }

  public void setKeepLinesTogetherSuggested(Boolean keepLinesTogetherSuggested) {
    this.keepLinesTogetherSuggested = keepLinesTogetherSuggested;
  }


  public ParagraphStyleSuggestionState keepWithNextSuggested(Boolean keepWithNextSuggested) {
    this.keepWithNextSuggested = keepWithNextSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to keep_with_next.
   * @return keepWithNextSuggested
   */
  @javax.annotation.Nullable
  public Boolean getKeepWithNextSuggested() {
    return keepWithNextSuggested;
  }

  public void setKeepWithNextSuggested(Boolean keepWithNextSuggested) {
    this.keepWithNextSuggested = keepWithNextSuggested;
  }


  public ParagraphStyleSuggestionState lineSpacingSuggested(Boolean lineSpacingSuggested) {
    this.lineSpacingSuggested = lineSpacingSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to line_spacing.
   * @return lineSpacingSuggested
   */
  @javax.annotation.Nullable
  public Boolean getLineSpacingSuggested() {
    return lineSpacingSuggested;
  }

  public void setLineSpacingSuggested(Boolean lineSpacingSuggested) {
    this.lineSpacingSuggested = lineSpacingSuggested;
  }


  public ParagraphStyleSuggestionState namedStyleTypeSuggested(Boolean namedStyleTypeSuggested) {
    this.namedStyleTypeSuggested = namedStyleTypeSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to named_style_type.
   * @return namedStyleTypeSuggested
   */
  @javax.annotation.Nullable
  public Boolean getNamedStyleTypeSuggested() {
    return namedStyleTypeSuggested;
  }

  public void setNamedStyleTypeSuggested(Boolean namedStyleTypeSuggested) {
    this.namedStyleTypeSuggested = namedStyleTypeSuggested;
  }


  public ParagraphStyleSuggestionState pageBreakBeforeSuggested(Boolean pageBreakBeforeSuggested) {
    this.pageBreakBeforeSuggested = pageBreakBeforeSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to page_break_before.
   * @return pageBreakBeforeSuggested
   */
  @javax.annotation.Nullable
  public Boolean getPageBreakBeforeSuggested() {
    return pageBreakBeforeSuggested;
  }

  public void setPageBreakBeforeSuggested(Boolean pageBreakBeforeSuggested) {
    this.pageBreakBeforeSuggested = pageBreakBeforeSuggested;
  }


  public ParagraphStyleSuggestionState shadingSuggestionState(ShadingSuggestionState shadingSuggestionState) {
    this.shadingSuggestionState = shadingSuggestionState;
    return this;
  }

  /**
   * Get shadingSuggestionState
   * @return shadingSuggestionState
   */
  @javax.annotation.Nullable
  public ShadingSuggestionState getShadingSuggestionState() {
    return shadingSuggestionState;
  }

  public void setShadingSuggestionState(ShadingSuggestionState shadingSuggestionState) {
    this.shadingSuggestionState = shadingSuggestionState;
  }


  public ParagraphStyleSuggestionState spaceAboveSuggested(Boolean spaceAboveSuggested) {
    this.spaceAboveSuggested = spaceAboveSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to space_above.
   * @return spaceAboveSuggested
   */
  @javax.annotation.Nullable
  public Boolean getSpaceAboveSuggested() {
    return spaceAboveSuggested;
  }

  public void setSpaceAboveSuggested(Boolean spaceAboveSuggested) {
    this.spaceAboveSuggested = spaceAboveSuggested;
  }


  public ParagraphStyleSuggestionState spaceBelowSuggested(Boolean spaceBelowSuggested) {
    this.spaceBelowSuggested = spaceBelowSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to space_below.
   * @return spaceBelowSuggested
   */
  @javax.annotation.Nullable
  public Boolean getSpaceBelowSuggested() {
    return spaceBelowSuggested;
  }

  public void setSpaceBelowSuggested(Boolean spaceBelowSuggested) {
    this.spaceBelowSuggested = spaceBelowSuggested;
  }


  public ParagraphStyleSuggestionState spacingModeSuggested(Boolean spacingModeSuggested) {
    this.spacingModeSuggested = spacingModeSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to spacing_mode.
   * @return spacingModeSuggested
   */
  @javax.annotation.Nullable
  public Boolean getSpacingModeSuggested() {
    return spacingModeSuggested;
  }

  public void setSpacingModeSuggested(Boolean spacingModeSuggested) {
    this.spacingModeSuggested = spacingModeSuggested;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ParagraphStyleSuggestionState paragraphStyleSuggestionState = (ParagraphStyleSuggestionState) o;
    return Objects.equals(this.alignmentSuggested, paragraphStyleSuggestionState.alignmentSuggested) &&
        Objects.equals(this.avoidWidowAndOrphanSuggested, paragraphStyleSuggestionState.avoidWidowAndOrphanSuggested) &&
        Objects.equals(this.borderBetweenSuggested, paragraphStyleSuggestionState.borderBetweenSuggested) &&
        Objects.equals(this.borderBottomSuggested, paragraphStyleSuggestionState.borderBottomSuggested) &&
        Objects.equals(this.borderLeftSuggested, paragraphStyleSuggestionState.borderLeftSuggested) &&
        Objects.equals(this.borderRightSuggested, paragraphStyleSuggestionState.borderRightSuggested) &&
        Objects.equals(this.borderTopSuggested, paragraphStyleSuggestionState.borderTopSuggested) &&
        Objects.equals(this.directionSuggested, paragraphStyleSuggestionState.directionSuggested) &&
        Objects.equals(this.headingIdSuggested, paragraphStyleSuggestionState.headingIdSuggested) &&
        Objects.equals(this.indentEndSuggested, paragraphStyleSuggestionState.indentEndSuggested) &&
        Objects.equals(this.indentFirstLineSuggested, paragraphStyleSuggestionState.indentFirstLineSuggested) &&
        Objects.equals(this.indentStartSuggested, paragraphStyleSuggestionState.indentStartSuggested) &&
        Objects.equals(this.keepLinesTogetherSuggested, paragraphStyleSuggestionState.keepLinesTogetherSuggested) &&
        Objects.equals(this.keepWithNextSuggested, paragraphStyleSuggestionState.keepWithNextSuggested) &&
        Objects.equals(this.lineSpacingSuggested, paragraphStyleSuggestionState.lineSpacingSuggested) &&
        Objects.equals(this.namedStyleTypeSuggested, paragraphStyleSuggestionState.namedStyleTypeSuggested) &&
        Objects.equals(this.pageBreakBeforeSuggested, paragraphStyleSuggestionState.pageBreakBeforeSuggested) &&
        Objects.equals(this.shadingSuggestionState, paragraphStyleSuggestionState.shadingSuggestionState) &&
        Objects.equals(this.spaceAboveSuggested, paragraphStyleSuggestionState.spaceAboveSuggested) &&
        Objects.equals(this.spaceBelowSuggested, paragraphStyleSuggestionState.spaceBelowSuggested) &&
        Objects.equals(this.spacingModeSuggested, paragraphStyleSuggestionState.spacingModeSuggested);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alignmentSuggested, avoidWidowAndOrphanSuggested, borderBetweenSuggested, borderBottomSuggested, borderLeftSuggested, borderRightSuggested, borderTopSuggested, directionSuggested, headingIdSuggested, indentEndSuggested, indentFirstLineSuggested, indentStartSuggested, keepLinesTogetherSuggested, keepWithNextSuggested, lineSpacingSuggested, namedStyleTypeSuggested, pageBreakBeforeSuggested, shadingSuggestionState, spaceAboveSuggested, spaceBelowSuggested, spacingModeSuggested);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ParagraphStyleSuggestionState {\n");
    sb.append("    alignmentSuggested: ").append(toIndentedString(alignmentSuggested)).append("\n");
    sb.append("    avoidWidowAndOrphanSuggested: ").append(toIndentedString(avoidWidowAndOrphanSuggested)).append("\n");
    sb.append("    borderBetweenSuggested: ").append(toIndentedString(borderBetweenSuggested)).append("\n");
    sb.append("    borderBottomSuggested: ").append(toIndentedString(borderBottomSuggested)).append("\n");
    sb.append("    borderLeftSuggested: ").append(toIndentedString(borderLeftSuggested)).append("\n");
    sb.append("    borderRightSuggested: ").append(toIndentedString(borderRightSuggested)).append("\n");
    sb.append("    borderTopSuggested: ").append(toIndentedString(borderTopSuggested)).append("\n");
    sb.append("    directionSuggested: ").append(toIndentedString(directionSuggested)).append("\n");
    sb.append("    headingIdSuggested: ").append(toIndentedString(headingIdSuggested)).append("\n");
    sb.append("    indentEndSuggested: ").append(toIndentedString(indentEndSuggested)).append("\n");
    sb.append("    indentFirstLineSuggested: ").append(toIndentedString(indentFirstLineSuggested)).append("\n");
    sb.append("    indentStartSuggested: ").append(toIndentedString(indentStartSuggested)).append("\n");
    sb.append("    keepLinesTogetherSuggested: ").append(toIndentedString(keepLinesTogetherSuggested)).append("\n");
    sb.append("    keepWithNextSuggested: ").append(toIndentedString(keepWithNextSuggested)).append("\n");
    sb.append("    lineSpacingSuggested: ").append(toIndentedString(lineSpacingSuggested)).append("\n");
    sb.append("    namedStyleTypeSuggested: ").append(toIndentedString(namedStyleTypeSuggested)).append("\n");
    sb.append("    pageBreakBeforeSuggested: ").append(toIndentedString(pageBreakBeforeSuggested)).append("\n");
    sb.append("    shadingSuggestionState: ").append(toIndentedString(shadingSuggestionState)).append("\n");
    sb.append("    spaceAboveSuggested: ").append(toIndentedString(spaceAboveSuggested)).append("\n");
    sb.append("    spaceBelowSuggested: ").append(toIndentedString(spaceBelowSuggested)).append("\n");
    sb.append("    spacingModeSuggested: ").append(toIndentedString(spacingModeSuggested)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("alignmentSuggested");
    openapiFields.add("avoidWidowAndOrphanSuggested");
    openapiFields.add("borderBetweenSuggested");
    openapiFields.add("borderBottomSuggested");
    openapiFields.add("borderLeftSuggested");
    openapiFields.add("borderRightSuggested");
    openapiFields.add("borderTopSuggested");
    openapiFields.add("directionSuggested");
    openapiFields.add("headingIdSuggested");
    openapiFields.add("indentEndSuggested");
    openapiFields.add("indentFirstLineSuggested");
    openapiFields.add("indentStartSuggested");
    openapiFields.add("keepLinesTogetherSuggested");
    openapiFields.add("keepWithNextSuggested");
    openapiFields.add("lineSpacingSuggested");
    openapiFields.add("namedStyleTypeSuggested");
    openapiFields.add("pageBreakBeforeSuggested");
    openapiFields.add("shadingSuggestionState");
    openapiFields.add("spaceAboveSuggested");
    openapiFields.add("spaceBelowSuggested");
    openapiFields.add("spacingModeSuggested");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ParagraphStyleSuggestionState
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ParagraphStyleSuggestionState.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ParagraphStyleSuggestionState is not found in the empty JSON string", ParagraphStyleSuggestionState.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ParagraphStyleSuggestionState.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ParagraphStyleSuggestionState` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `shadingSuggestionState`
      if (jsonObj.get("shadingSuggestionState") != null && !jsonObj.get("shadingSuggestionState").isJsonNull()) {
        ShadingSuggestionState.validateJsonElement(jsonObj.get("shadingSuggestionState"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ParagraphStyleSuggestionState.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ParagraphStyleSuggestionState' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ParagraphStyleSuggestionState> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ParagraphStyleSuggestionState.class));

       return (TypeAdapter<T>) new TypeAdapter<ParagraphStyleSuggestionState>() {
           @Override
           public void write(JsonWriter out, ParagraphStyleSuggestionState value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ParagraphStyleSuggestionState read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ParagraphStyleSuggestionState given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ParagraphStyleSuggestionState
   * @throws IOException if the JSON string is invalid with respect to ParagraphStyleSuggestionState
   */
  public static ParagraphStyleSuggestionState fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ParagraphStyleSuggestionState.class);
  }

  /**
   * Convert an instance of ParagraphStyleSuggestionState to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

