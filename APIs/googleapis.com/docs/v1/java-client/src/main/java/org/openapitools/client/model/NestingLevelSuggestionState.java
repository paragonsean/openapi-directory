/*
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.TextStyleSuggestionState;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A mask that indicates which of the fields on the base NestingLevel have been changed in this suggestion. For any field set to true, there&#39;s a new suggested value.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:07.584674-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class NestingLevelSuggestionState {
  public static final String SERIALIZED_NAME_BULLET_ALIGNMENT_SUGGESTED = "bulletAlignmentSuggested";
  @SerializedName(SERIALIZED_NAME_BULLET_ALIGNMENT_SUGGESTED)
  private Boolean bulletAlignmentSuggested;

  public static final String SERIALIZED_NAME_GLYPH_FORMAT_SUGGESTED = "glyphFormatSuggested";
  @SerializedName(SERIALIZED_NAME_GLYPH_FORMAT_SUGGESTED)
  private Boolean glyphFormatSuggested;

  public static final String SERIALIZED_NAME_GLYPH_SYMBOL_SUGGESTED = "glyphSymbolSuggested";
  @SerializedName(SERIALIZED_NAME_GLYPH_SYMBOL_SUGGESTED)
  private Boolean glyphSymbolSuggested;

  public static final String SERIALIZED_NAME_GLYPH_TYPE_SUGGESTED = "glyphTypeSuggested";
  @SerializedName(SERIALIZED_NAME_GLYPH_TYPE_SUGGESTED)
  private Boolean glyphTypeSuggested;

  public static final String SERIALIZED_NAME_INDENT_FIRST_LINE_SUGGESTED = "indentFirstLineSuggested";
  @SerializedName(SERIALIZED_NAME_INDENT_FIRST_LINE_SUGGESTED)
  private Boolean indentFirstLineSuggested;

  public static final String SERIALIZED_NAME_INDENT_START_SUGGESTED = "indentStartSuggested";
  @SerializedName(SERIALIZED_NAME_INDENT_START_SUGGESTED)
  private Boolean indentStartSuggested;

  public static final String SERIALIZED_NAME_START_NUMBER_SUGGESTED = "startNumberSuggested";
  @SerializedName(SERIALIZED_NAME_START_NUMBER_SUGGESTED)
  private Boolean startNumberSuggested;

  public static final String SERIALIZED_NAME_TEXT_STYLE_SUGGESTION_STATE = "textStyleSuggestionState";
  @SerializedName(SERIALIZED_NAME_TEXT_STYLE_SUGGESTION_STATE)
  private TextStyleSuggestionState textStyleSuggestionState;

  public NestingLevelSuggestionState() {
  }

  public NestingLevelSuggestionState bulletAlignmentSuggested(Boolean bulletAlignmentSuggested) {
    this.bulletAlignmentSuggested = bulletAlignmentSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to bullet_alignment.
   * @return bulletAlignmentSuggested
   */
  @javax.annotation.Nullable
  public Boolean getBulletAlignmentSuggested() {
    return bulletAlignmentSuggested;
  }

  public void setBulletAlignmentSuggested(Boolean bulletAlignmentSuggested) {
    this.bulletAlignmentSuggested = bulletAlignmentSuggested;
  }


  public NestingLevelSuggestionState glyphFormatSuggested(Boolean glyphFormatSuggested) {
    this.glyphFormatSuggested = glyphFormatSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to glyph_format.
   * @return glyphFormatSuggested
   */
  @javax.annotation.Nullable
  public Boolean getGlyphFormatSuggested() {
    return glyphFormatSuggested;
  }

  public void setGlyphFormatSuggested(Boolean glyphFormatSuggested) {
    this.glyphFormatSuggested = glyphFormatSuggested;
  }


  public NestingLevelSuggestionState glyphSymbolSuggested(Boolean glyphSymbolSuggested) {
    this.glyphSymbolSuggested = glyphSymbolSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to glyph_symbol.
   * @return glyphSymbolSuggested
   */
  @javax.annotation.Nullable
  public Boolean getGlyphSymbolSuggested() {
    return glyphSymbolSuggested;
  }

  public void setGlyphSymbolSuggested(Boolean glyphSymbolSuggested) {
    this.glyphSymbolSuggested = glyphSymbolSuggested;
  }


  public NestingLevelSuggestionState glyphTypeSuggested(Boolean glyphTypeSuggested) {
    this.glyphTypeSuggested = glyphTypeSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to glyph_type.
   * @return glyphTypeSuggested
   */
  @javax.annotation.Nullable
  public Boolean getGlyphTypeSuggested() {
    return glyphTypeSuggested;
  }

  public void setGlyphTypeSuggested(Boolean glyphTypeSuggested) {
    this.glyphTypeSuggested = glyphTypeSuggested;
  }


  public NestingLevelSuggestionState indentFirstLineSuggested(Boolean indentFirstLineSuggested) {
    this.indentFirstLineSuggested = indentFirstLineSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to indent_first_line.
   * @return indentFirstLineSuggested
   */
  @javax.annotation.Nullable
  public Boolean getIndentFirstLineSuggested() {
    return indentFirstLineSuggested;
  }

  public void setIndentFirstLineSuggested(Boolean indentFirstLineSuggested) {
    this.indentFirstLineSuggested = indentFirstLineSuggested;
  }


  public NestingLevelSuggestionState indentStartSuggested(Boolean indentStartSuggested) {
    this.indentStartSuggested = indentStartSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to indent_start.
   * @return indentStartSuggested
   */
  @javax.annotation.Nullable
  public Boolean getIndentStartSuggested() {
    return indentStartSuggested;
  }

  public void setIndentStartSuggested(Boolean indentStartSuggested) {
    this.indentStartSuggested = indentStartSuggested;
  }


  public NestingLevelSuggestionState startNumberSuggested(Boolean startNumberSuggested) {
    this.startNumberSuggested = startNumberSuggested;
    return this;
  }

  /**
   * Indicates if there was a suggested change to start_number.
   * @return startNumberSuggested
   */
  @javax.annotation.Nullable
  public Boolean getStartNumberSuggested() {
    return startNumberSuggested;
  }

  public void setStartNumberSuggested(Boolean startNumberSuggested) {
    this.startNumberSuggested = startNumberSuggested;
  }


  public NestingLevelSuggestionState textStyleSuggestionState(TextStyleSuggestionState textStyleSuggestionState) {
    this.textStyleSuggestionState = textStyleSuggestionState;
    return this;
  }

  /**
   * Get textStyleSuggestionState
   * @return textStyleSuggestionState
   */
  @javax.annotation.Nullable
  public TextStyleSuggestionState getTextStyleSuggestionState() {
    return textStyleSuggestionState;
  }

  public void setTextStyleSuggestionState(TextStyleSuggestionState textStyleSuggestionState) {
    this.textStyleSuggestionState = textStyleSuggestionState;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NestingLevelSuggestionState nestingLevelSuggestionState = (NestingLevelSuggestionState) o;
    return Objects.equals(this.bulletAlignmentSuggested, nestingLevelSuggestionState.bulletAlignmentSuggested) &&
        Objects.equals(this.glyphFormatSuggested, nestingLevelSuggestionState.glyphFormatSuggested) &&
        Objects.equals(this.glyphSymbolSuggested, nestingLevelSuggestionState.glyphSymbolSuggested) &&
        Objects.equals(this.glyphTypeSuggested, nestingLevelSuggestionState.glyphTypeSuggested) &&
        Objects.equals(this.indentFirstLineSuggested, nestingLevelSuggestionState.indentFirstLineSuggested) &&
        Objects.equals(this.indentStartSuggested, nestingLevelSuggestionState.indentStartSuggested) &&
        Objects.equals(this.startNumberSuggested, nestingLevelSuggestionState.startNumberSuggested) &&
        Objects.equals(this.textStyleSuggestionState, nestingLevelSuggestionState.textStyleSuggestionState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bulletAlignmentSuggested, glyphFormatSuggested, glyphSymbolSuggested, glyphTypeSuggested, indentFirstLineSuggested, indentStartSuggested, startNumberSuggested, textStyleSuggestionState);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NestingLevelSuggestionState {\n");
    sb.append("    bulletAlignmentSuggested: ").append(toIndentedString(bulletAlignmentSuggested)).append("\n");
    sb.append("    glyphFormatSuggested: ").append(toIndentedString(glyphFormatSuggested)).append("\n");
    sb.append("    glyphSymbolSuggested: ").append(toIndentedString(glyphSymbolSuggested)).append("\n");
    sb.append("    glyphTypeSuggested: ").append(toIndentedString(glyphTypeSuggested)).append("\n");
    sb.append("    indentFirstLineSuggested: ").append(toIndentedString(indentFirstLineSuggested)).append("\n");
    sb.append("    indentStartSuggested: ").append(toIndentedString(indentStartSuggested)).append("\n");
    sb.append("    startNumberSuggested: ").append(toIndentedString(startNumberSuggested)).append("\n");
    sb.append("    textStyleSuggestionState: ").append(toIndentedString(textStyleSuggestionState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bulletAlignmentSuggested");
    openapiFields.add("glyphFormatSuggested");
    openapiFields.add("glyphSymbolSuggested");
    openapiFields.add("glyphTypeSuggested");
    openapiFields.add("indentFirstLineSuggested");
    openapiFields.add("indentStartSuggested");
    openapiFields.add("startNumberSuggested");
    openapiFields.add("textStyleSuggestionState");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NestingLevelSuggestionState
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NestingLevelSuggestionState.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NestingLevelSuggestionState is not found in the empty JSON string", NestingLevelSuggestionState.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NestingLevelSuggestionState.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NestingLevelSuggestionState` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `textStyleSuggestionState`
      if (jsonObj.get("textStyleSuggestionState") != null && !jsonObj.get("textStyleSuggestionState").isJsonNull()) {
        TextStyleSuggestionState.validateJsonElement(jsonObj.get("textStyleSuggestionState"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NestingLevelSuggestionState.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NestingLevelSuggestionState' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NestingLevelSuggestionState> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NestingLevelSuggestionState.class));

       return (TypeAdapter<T>) new TypeAdapter<NestingLevelSuggestionState>() {
           @Override
           public void write(JsonWriter out, NestingLevelSuggestionState value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NestingLevelSuggestionState read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NestingLevelSuggestionState given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NestingLevelSuggestionState
   * @throws IOException if the JSON string is invalid with respect to NestingLevelSuggestionState
   */
  public static NestingLevelSuggestionState fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NestingLevelSuggestionState.class);
  }

  /**
   * Convert an instance of NestingLevelSuggestionState to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

