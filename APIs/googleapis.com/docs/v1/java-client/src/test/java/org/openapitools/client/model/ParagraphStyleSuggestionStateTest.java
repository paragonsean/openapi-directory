/*
 * Google Docs API
 * Reads and writes Google Docs documents.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ShadingSuggestionState;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ParagraphStyleSuggestionState
 */
public class ParagraphStyleSuggestionStateTest {
    private final ParagraphStyleSuggestionState model = new ParagraphStyleSuggestionState();

    /**
     * Model tests for ParagraphStyleSuggestionState
     */
    @Test
    public void testParagraphStyleSuggestionState() {
        // TODO: test ParagraphStyleSuggestionState
    }

    /**
     * Test the property 'alignmentSuggested'
     */
    @Test
    public void alignmentSuggestedTest() {
        // TODO: test alignmentSuggested
    }

    /**
     * Test the property 'avoidWidowAndOrphanSuggested'
     */
    @Test
    public void avoidWidowAndOrphanSuggestedTest() {
        // TODO: test avoidWidowAndOrphanSuggested
    }

    /**
     * Test the property 'borderBetweenSuggested'
     */
    @Test
    public void borderBetweenSuggestedTest() {
        // TODO: test borderBetweenSuggested
    }

    /**
     * Test the property 'borderBottomSuggested'
     */
    @Test
    public void borderBottomSuggestedTest() {
        // TODO: test borderBottomSuggested
    }

    /**
     * Test the property 'borderLeftSuggested'
     */
    @Test
    public void borderLeftSuggestedTest() {
        // TODO: test borderLeftSuggested
    }

    /**
     * Test the property 'borderRightSuggested'
     */
    @Test
    public void borderRightSuggestedTest() {
        // TODO: test borderRightSuggested
    }

    /**
     * Test the property 'borderTopSuggested'
     */
    @Test
    public void borderTopSuggestedTest() {
        // TODO: test borderTopSuggested
    }

    /**
     * Test the property 'directionSuggested'
     */
    @Test
    public void directionSuggestedTest() {
        // TODO: test directionSuggested
    }

    /**
     * Test the property 'headingIdSuggested'
     */
    @Test
    public void headingIdSuggestedTest() {
        // TODO: test headingIdSuggested
    }

    /**
     * Test the property 'indentEndSuggested'
     */
    @Test
    public void indentEndSuggestedTest() {
        // TODO: test indentEndSuggested
    }

    /**
     * Test the property 'indentFirstLineSuggested'
     */
    @Test
    public void indentFirstLineSuggestedTest() {
        // TODO: test indentFirstLineSuggested
    }

    /**
     * Test the property 'indentStartSuggested'
     */
    @Test
    public void indentStartSuggestedTest() {
        // TODO: test indentStartSuggested
    }

    /**
     * Test the property 'keepLinesTogetherSuggested'
     */
    @Test
    public void keepLinesTogetherSuggestedTest() {
        // TODO: test keepLinesTogetherSuggested
    }

    /**
     * Test the property 'keepWithNextSuggested'
     */
    @Test
    public void keepWithNextSuggestedTest() {
        // TODO: test keepWithNextSuggested
    }

    /**
     * Test the property 'lineSpacingSuggested'
     */
    @Test
    public void lineSpacingSuggestedTest() {
        // TODO: test lineSpacingSuggested
    }

    /**
     * Test the property 'namedStyleTypeSuggested'
     */
    @Test
    public void namedStyleTypeSuggestedTest() {
        // TODO: test namedStyleTypeSuggested
    }

    /**
     * Test the property 'pageBreakBeforeSuggested'
     */
    @Test
    public void pageBreakBeforeSuggestedTest() {
        // TODO: test pageBreakBeforeSuggested
    }

    /**
     * Test the property 'shadingSuggestionState'
     */
    @Test
    public void shadingSuggestionStateTest() {
        // TODO: test shadingSuggestionState
    }

    /**
     * Test the property 'spaceAboveSuggested'
     */
    @Test
    public void spaceAboveSuggestedTest() {
        // TODO: test spaceAboveSuggested
    }

    /**
     * Test the property 'spaceBelowSuggested'
     */
    @Test
    public void spaceBelowSuggestedTest() {
        // TODO: test spaceBelowSuggested
    }

    /**
     * Test the property 'spacingModeSuggested'
     */
    @Test
    public void spacingModeSuggestedTest() {
        // TODO: test spacingModeSuggested
    }

}
