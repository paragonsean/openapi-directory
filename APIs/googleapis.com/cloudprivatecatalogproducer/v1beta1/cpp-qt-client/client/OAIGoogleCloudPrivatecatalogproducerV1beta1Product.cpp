/**
 * Cloud Private Catalog Producer
 * Enables cloud users to manage and share enterprise catalogs intheir organizations.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudPrivatecatalogproducerV1beta1Product.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudPrivatecatalogproducerV1beta1Product::OAIGoogleCloudPrivatecatalogproducerV1beta1Product(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudPrivatecatalogproducerV1beta1Product::OAIGoogleCloudPrivatecatalogproducerV1beta1Product() {
    this->initializeModel();
}

OAIGoogleCloudPrivatecatalogproducerV1beta1Product::~OAIGoogleCloudPrivatecatalogproducerV1beta1Product() {}

void OAIGoogleCloudPrivatecatalogproducerV1beta1Product::initializeModel() {

    m_asset_type_isSet = false;
    m_asset_type_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_display_metadata_isSet = false;
    m_display_metadata_isValid = false;

    m_icon_uri_isSet = false;
    m_icon_uri_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudPrivatecatalogproducerV1beta1Product::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudPrivatecatalogproducerV1beta1Product::fromJsonObject(QJsonObject json) {

    m_asset_type_isValid = ::OpenAPI::fromJsonValue(m_asset_type, json[QString("assetType")]);
    m_asset_type_isSet = !json[QString("assetType")].isNull() && m_asset_type_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_display_metadata_isValid = ::OpenAPI::fromJsonValue(m_display_metadata, json[QString("displayMetadata")]);
    m_display_metadata_isSet = !json[QString("displayMetadata")].isNull() && m_display_metadata_isValid;

    m_icon_uri_isValid = ::OpenAPI::fromJsonValue(m_icon_uri, json[QString("iconUri")]);
    m_icon_uri_isSet = !json[QString("iconUri")].isNull() && m_icon_uri_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudPrivatecatalogproducerV1beta1Product::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudPrivatecatalogproducerV1beta1Product::asJsonObject() const {
    QJsonObject obj;
    if (m_asset_type_isSet) {
        obj.insert(QString("assetType"), ::OpenAPI::toJsonValue(m_asset_type));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_display_metadata.size() > 0) {
        obj.insert(QString("displayMetadata"), ::OpenAPI::toJsonValue(m_display_metadata));
    }
    if (m_icon_uri_isSet) {
        obj.insert(QString("iconUri"), ::OpenAPI::toJsonValue(m_icon_uri));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIGoogleCloudPrivatecatalogproducerV1beta1Product::getAssetType() const {
    return m_asset_type;
}
void OAIGoogleCloudPrivatecatalogproducerV1beta1Product::setAssetType(const QString &asset_type) {
    m_asset_type = asset_type;
    m_asset_type_isSet = true;
}

bool OAIGoogleCloudPrivatecatalogproducerV1beta1Product::is_asset_type_Set() const{
    return m_asset_type_isSet;
}

bool OAIGoogleCloudPrivatecatalogproducerV1beta1Product::is_asset_type_Valid() const{
    return m_asset_type_isValid;
}

QString OAIGoogleCloudPrivatecatalogproducerV1beta1Product::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudPrivatecatalogproducerV1beta1Product::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudPrivatecatalogproducerV1beta1Product::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudPrivatecatalogproducerV1beta1Product::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QMap<QString, QJsonValue> OAIGoogleCloudPrivatecatalogproducerV1beta1Product::getDisplayMetadata() const {
    return m_display_metadata;
}
void OAIGoogleCloudPrivatecatalogproducerV1beta1Product::setDisplayMetadata(const QMap<QString, QJsonValue> &display_metadata) {
    m_display_metadata = display_metadata;
    m_display_metadata_isSet = true;
}

bool OAIGoogleCloudPrivatecatalogproducerV1beta1Product::is_display_metadata_Set() const{
    return m_display_metadata_isSet;
}

bool OAIGoogleCloudPrivatecatalogproducerV1beta1Product::is_display_metadata_Valid() const{
    return m_display_metadata_isValid;
}

QString OAIGoogleCloudPrivatecatalogproducerV1beta1Product::getIconUri() const {
    return m_icon_uri;
}
void OAIGoogleCloudPrivatecatalogproducerV1beta1Product::setIconUri(const QString &icon_uri) {
    m_icon_uri = icon_uri;
    m_icon_uri_isSet = true;
}

bool OAIGoogleCloudPrivatecatalogproducerV1beta1Product::is_icon_uri_Set() const{
    return m_icon_uri_isSet;
}

bool OAIGoogleCloudPrivatecatalogproducerV1beta1Product::is_icon_uri_Valid() const{
    return m_icon_uri_isValid;
}

QString OAIGoogleCloudPrivatecatalogproducerV1beta1Product::getName() const {
    return m_name;
}
void OAIGoogleCloudPrivatecatalogproducerV1beta1Product::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudPrivatecatalogproducerV1beta1Product::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudPrivatecatalogproducerV1beta1Product::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudPrivatecatalogproducerV1beta1Product::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudPrivatecatalogproducerV1beta1Product::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudPrivatecatalogproducerV1beta1Product::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudPrivatecatalogproducerV1beta1Product::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudPrivatecatalogproducerV1beta1Product::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_asset_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_metadata.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_icon_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudPrivatecatalogproducerV1beta1Product::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
