/**
 * Cloud Private Catalog Producer
 * Enables cloud users to manage and share enterprise catalogs intheir organizations.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest::OAIGoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest::OAIGoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest() {
    this->initializeModel();
}

OAIGoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest::~OAIGoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest() {}

void OAIGoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest::initializeModel() {

    m_association_isSet = false;
    m_association_isValid = false;
}

void OAIGoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest::fromJsonObject(QJsonObject json) {

    m_association_isValid = ::OpenAPI::fromJsonValue(m_association, json[QString("association")]);
    m_association_isSet = !json[QString("association")].isNull() && m_association_isValid;
}

QString OAIGoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_association.isSet()) {
        obj.insert(QString("association"), ::OpenAPI::toJsonValue(m_association));
    }
    return obj;
}

OAIGoogleCloudPrivatecatalogproducerV1beta1Association OAIGoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest::getAssociation() const {
    return m_association;
}
void OAIGoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest::setAssociation(const OAIGoogleCloudPrivatecatalogproducerV1beta1Association &association) {
    m_association = association;
    m_association_isSet = true;
}

bool OAIGoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest::is_association_Set() const{
    return m_association_isSet;
}

bool OAIGoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest::is_association_Valid() const{
    return m_association_isValid;
}

bool OAIGoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_association.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
