# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudPrivatecatalogproducerV1beta1Version(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset: Dict[str, object]=None, create_time: str=None, description: str=None, name: str=None, original_asset: Dict[str, object]=None, update_time: str=None):
        """GoogleCloudPrivatecatalogproducerV1beta1Version - a model defined in OpenAPI

        :param asset: The asset of this GoogleCloudPrivatecatalogproducerV1beta1Version.
        :param create_time: The create_time of this GoogleCloudPrivatecatalogproducerV1beta1Version.
        :param description: The description of this GoogleCloudPrivatecatalogproducerV1beta1Version.
        :param name: The name of this GoogleCloudPrivatecatalogproducerV1beta1Version.
        :param original_asset: The original_asset of this GoogleCloudPrivatecatalogproducerV1beta1Version.
        :param update_time: The update_time of this GoogleCloudPrivatecatalogproducerV1beta1Version.
        """
        self.openapi_types = {
            'asset': Dict[str, object],
            'create_time': str,
            'description': str,
            'name': str,
            'original_asset': Dict[str, object],
            'update_time': str
        }

        self.attribute_map = {
            'asset': 'asset',
            'create_time': 'createTime',
            'description': 'description',
            'name': 'name',
            'original_asset': 'originalAsset',
            'update_time': 'updateTime'
        }

        self._asset = asset
        self._create_time = create_time
        self._description = description
        self._name = name
        self._original_asset = original_asset
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudPrivatecatalogproducerV1beta1Version':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudPrivatecatalogproducerV1beta1Version of this GoogleCloudPrivatecatalogproducerV1beta1Version.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset(self):
        """Gets the asset of this GoogleCloudPrivatecatalogproducerV1beta1Version.

        Output only. The asset which has been validated and is ready to be provisioned. See Version.original_asset for the schema.

        :return: The asset of this GoogleCloudPrivatecatalogproducerV1beta1Version.
        :rtype: Dict[str, object]
        """
        return self._asset

    @asset.setter
    def asset(self, asset):
        """Sets the asset of this GoogleCloudPrivatecatalogproducerV1beta1Version.

        Output only. The asset which has been validated and is ready to be provisioned. See Version.original_asset for the schema.

        :param asset: The asset of this GoogleCloudPrivatecatalogproducerV1beta1Version.
        :type asset: Dict[str, object]
        """

        self._asset = asset

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudPrivatecatalogproducerV1beta1Version.

        Output only. The time when the version was created.

        :return: The create_time of this GoogleCloudPrivatecatalogproducerV1beta1Version.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudPrivatecatalogproducerV1beta1Version.

        Output only. The time when the version was created.

        :param create_time: The create_time of this GoogleCloudPrivatecatalogproducerV1beta1Version.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def description(self):
        """Gets the description of this GoogleCloudPrivatecatalogproducerV1beta1Version.

        The user-supplied description of the version. Maximum of 256 characters.

        :return: The description of this GoogleCloudPrivatecatalogproducerV1beta1Version.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudPrivatecatalogproducerV1beta1Version.

        The user-supplied description of the version. Maximum of 256 characters.

        :param description: The description of this GoogleCloudPrivatecatalogproducerV1beta1Version.
        :type description: str
        """

        self._description = description

    @property
    def name(self):
        """Gets the name of this GoogleCloudPrivatecatalogproducerV1beta1Version.

        Required. The resource name of the version, in the format `catalogs/{catalog_id}/products/{product_id}/versions/a-z*[a-z0-9]'.  A unique identifier for the version under a product, which can't be changed after the version is created. The final segment of the name must between 1 and 63 characters in length.

        :return: The name of this GoogleCloudPrivatecatalogproducerV1beta1Version.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudPrivatecatalogproducerV1beta1Version.

        Required. The resource name of the version, in the format `catalogs/{catalog_id}/products/{product_id}/versions/a-z*[a-z0-9]'.  A unique identifier for the version under a product, which can't be changed after the version is created. The final segment of the name must between 1 and 63 characters in length.

        :param name: The name of this GoogleCloudPrivatecatalogproducerV1beta1Version.
        :type name: str
        """

        self._name = name

    @property
    def original_asset(self):
        """Gets the original_asset of this GoogleCloudPrivatecatalogproducerV1beta1Version.

        The user-supplied asset payload. The maximum size of the payload is 2MB. The JSON schema of the payload is defined as:  ``` type: object properties:   mainTemplate:     type: string     description: The file name of the main template and name prefix of     schema file. The content of the main template should be set in the     imports list. The schema file name is expected to be     <mainTemplate>.schema in the imports list. required: true   imports:     type: array     description: Import template and schema file contents. Required to have     both <mainTemplate> and <mainTemplate>.schema files. required: true     minItems: 2     items:       type: object       properties:         name:           type: string         content:           type: string ```

        :return: The original_asset of this GoogleCloudPrivatecatalogproducerV1beta1Version.
        :rtype: Dict[str, object]
        """
        return self._original_asset

    @original_asset.setter
    def original_asset(self, original_asset):
        """Sets the original_asset of this GoogleCloudPrivatecatalogproducerV1beta1Version.

        The user-supplied asset payload. The maximum size of the payload is 2MB. The JSON schema of the payload is defined as:  ``` type: object properties:   mainTemplate:     type: string     description: The file name of the main template and name prefix of     schema file. The content of the main template should be set in the     imports list. The schema file name is expected to be     <mainTemplate>.schema in the imports list. required: true   imports:     type: array     description: Import template and schema file contents. Required to have     both <mainTemplate> and <mainTemplate>.schema files. required: true     minItems: 2     items:       type: object       properties:         name:           type: string         content:           type: string ```

        :param original_asset: The original_asset of this GoogleCloudPrivatecatalogproducerV1beta1Version.
        :type original_asset: Dict[str, object]
        """

        self._original_asset = original_asset

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudPrivatecatalogproducerV1beta1Version.

        Output only. The time when the version was last updated.

        :return: The update_time of this GoogleCloudPrivatecatalogproducerV1beta1Version.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudPrivatecatalogproducerV1beta1Version.

        Output only. The time when the version was last updated.

        :param update_time: The update_time of this GoogleCloudPrivatecatalogproducerV1beta1Version.
        :type update_time: str
        """

        self._update_time = update_time
