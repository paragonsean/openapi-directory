# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_type_expr import GoogleTypeExpr
from openapi_server import util


class GoogleIamV1Binding(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, condition: GoogleTypeExpr=None, members: List[str]=None, role: str=None):
        """GoogleIamV1Binding - a model defined in OpenAPI

        :param condition: The condition of this GoogleIamV1Binding.
        :param members: The members of this GoogleIamV1Binding.
        :param role: The role of this GoogleIamV1Binding.
        """
        self.openapi_types = {
            'condition': GoogleTypeExpr,
            'members': List[str],
            'role': str
        }

        self.attribute_map = {
            'condition': 'condition',
            'members': 'members',
            'role': 'role'
        }

        self._condition = condition
        self._members = members
        self._role = role

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleIamV1Binding':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleIamV1Binding of this GoogleIamV1Binding.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def condition(self):
        """Gets the condition of this GoogleIamV1Binding.


        :return: The condition of this GoogleIamV1Binding.
        :rtype: GoogleTypeExpr
        """
        return self._condition

    @condition.setter
    def condition(self, condition):
        """Sets the condition of this GoogleIamV1Binding.


        :param condition: The condition of this GoogleIamV1Binding.
        :type condition: GoogleTypeExpr
        """

        self._condition = condition

    @property
    def members(self):
        """Gets the members of this GoogleIamV1Binding.

        Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values:  * `allUsers`: A special identifier that represents anyone who is    on the internet; with or without a Google account.  * `allAuthenticatedUsers`: A special identifier that represents anyone    who is authenticated with a Google account or a service account.  * `user:{emailid}`: An email address that represents a specific Google    account. For example, `alice@example.com` .   * `serviceAccount:{emailid}`: An email address that represents a service    account. For example, `my-other-app@appspot.gserviceaccount.com`.  * `group:{emailid}`: An email address that represents a Google group.    For example, `admins@example.com`.  * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique    identifier) representing a user that has been recently deleted. For    example, `alice@example.com?uid=123456789012345678901`. If the user is    recovered, this value reverts to `user:{emailid}` and the recovered user    retains the role in the binding.  * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus    unique identifier) representing a service account that has been recently    deleted. For example,    `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.    If the service account is undeleted, this value reverts to    `serviceAccount:{emailid}` and the undeleted service account retains the    role in the binding.  * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique    identifier) representing a Google group that has been recently    deleted. For example, `admins@example.com?uid=123456789012345678901`. If    the group is recovered, this value reverts to `group:{emailid}` and the    recovered group retains the role in the binding.   * `domain:{domain}`: The G Suite domain (primary) that represents all the    users of that domain. For example, `google.com` or `example.com`.  

        :return: The members of this GoogleIamV1Binding.
        :rtype: List[str]
        """
        return self._members

    @members.setter
    def members(self, members):
        """Sets the members of this GoogleIamV1Binding.

        Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values:  * `allUsers`: A special identifier that represents anyone who is    on the internet; with or without a Google account.  * `allAuthenticatedUsers`: A special identifier that represents anyone    who is authenticated with a Google account or a service account.  * `user:{emailid}`: An email address that represents a specific Google    account. For example, `alice@example.com` .   * `serviceAccount:{emailid}`: An email address that represents a service    account. For example, `my-other-app@appspot.gserviceaccount.com`.  * `group:{emailid}`: An email address that represents a Google group.    For example, `admins@example.com`.  * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique    identifier) representing a user that has been recently deleted. For    example, `alice@example.com?uid=123456789012345678901`. If the user is    recovered, this value reverts to `user:{emailid}` and the recovered user    retains the role in the binding.  * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus    unique identifier) representing a service account that has been recently    deleted. For example,    `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.    If the service account is undeleted, this value reverts to    `serviceAccount:{emailid}` and the undeleted service account retains the    role in the binding.  * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique    identifier) representing a Google group that has been recently    deleted. For example, `admins@example.com?uid=123456789012345678901`. If    the group is recovered, this value reverts to `group:{emailid}` and the    recovered group retains the role in the binding.   * `domain:{domain}`: The G Suite domain (primary) that represents all the    users of that domain. For example, `google.com` or `example.com`.  

        :param members: The members of this GoogleIamV1Binding.
        :type members: List[str]
        """

        self._members = members

    @property
    def role(self):
        """Gets the role of this GoogleIamV1Binding.

        Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.

        :return: The role of this GoogleIamV1Binding.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role):
        """Sets the role of this GoogleIamV1Binding.

        Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.

        :param role: The role of this GoogleIamV1Binding.
        :type role: str
        """

        self._role = role
