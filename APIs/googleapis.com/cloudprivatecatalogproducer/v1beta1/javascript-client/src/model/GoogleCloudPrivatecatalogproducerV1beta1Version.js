/**
 * Cloud Private Catalog Producer
 * Enables cloud users to manage and share enterprise catalogs intheir organizations.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudPrivatecatalogproducerV1beta1Version model module.
 * @module model/GoogleCloudPrivatecatalogproducerV1beta1Version
 * @version v1beta1
 */
class GoogleCloudPrivatecatalogproducerV1beta1Version {
    /**
     * Constructs a new <code>GoogleCloudPrivatecatalogproducerV1beta1Version</code>.
     * The producer representation of a version, which is a child resource under a &#x60;Product&#x60; with asset data.
     * @alias module:model/GoogleCloudPrivatecatalogproducerV1beta1Version
     */
    constructor() { 
        
        GoogleCloudPrivatecatalogproducerV1beta1Version.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudPrivatecatalogproducerV1beta1Version</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudPrivatecatalogproducerV1beta1Version} obj Optional instance to populate.
     * @return {module:model/GoogleCloudPrivatecatalogproducerV1beta1Version} The populated <code>GoogleCloudPrivatecatalogproducerV1beta1Version</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudPrivatecatalogproducerV1beta1Version();

            if (data.hasOwnProperty('asset')) {
                obj['asset'] = ApiClient.convertToType(data['asset'], {'String': Object});
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('originalAsset')) {
                obj['originalAsset'] = ApiClient.convertToType(data['originalAsset'], {'String': Object});
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudPrivatecatalogproducerV1beta1Version</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudPrivatecatalogproducerV1beta1Version</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Output only. The asset which has been validated and is ready to be provisioned. See Version.original_asset for the schema.
 * @member {Object.<String, Object>} asset
 */
GoogleCloudPrivatecatalogproducerV1beta1Version.prototype['asset'] = undefined;

/**
 * Output only. The time when the version was created.
 * @member {String} createTime
 */
GoogleCloudPrivatecatalogproducerV1beta1Version.prototype['createTime'] = undefined;

/**
 * The user-supplied description of the version. Maximum of 256 characters.
 * @member {String} description
 */
GoogleCloudPrivatecatalogproducerV1beta1Version.prototype['description'] = undefined;

/**
 * Required. The resource name of the version, in the format `catalogs/{catalog_id}/products/{product_id}/versions/a-z*[a-z0-9]'.  A unique identifier for the version under a product, which can't be changed after the version is created. The final segment of the name must between 1 and 63 characters in length.
 * @member {String} name
 */
GoogleCloudPrivatecatalogproducerV1beta1Version.prototype['name'] = undefined;

/**
 * The user-supplied asset payload. The maximum size of the payload is 2MB. The JSON schema of the payload is defined as:  ``` type: object properties:   mainTemplate:     type: string     description: The file name of the main template and name prefix of     schema file. The content of the main template should be set in the     imports list. The schema file name is expected to be     <mainTemplate>.schema in the imports list. required: true   imports:     type: array     description: Import template and schema file contents. Required to have     both <mainTemplate> and <mainTemplate>.schema files. required: true     minItems: 2     items:       type: object       properties:         name:           type: string         content:           type: string ```
 * @member {Object.<String, Object>} originalAsset
 */
GoogleCloudPrivatecatalogproducerV1beta1Version.prototype['originalAsset'] = undefined;

/**
 * Output only. The time when the version was last updated.
 * @member {String} updateTime
 */
GoogleCloudPrivatecatalogproducerV1beta1Version.prototype['updateTime'] = undefined;






export default GoogleCloudPrivatecatalogproducerV1beta1Version;

