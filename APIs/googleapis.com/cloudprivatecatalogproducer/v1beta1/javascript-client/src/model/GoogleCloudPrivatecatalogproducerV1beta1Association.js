/**
 * Cloud Private Catalog Producer
 * Enables cloud users to manage and share enterprise catalogs intheir organizations.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudPrivatecatalogproducerV1beta1Association model module.
 * @module model/GoogleCloudPrivatecatalogproducerV1beta1Association
 * @version v1beta1
 */
class GoogleCloudPrivatecatalogproducerV1beta1Association {
    /**
     * Constructs a new <code>GoogleCloudPrivatecatalogproducerV1beta1Association</code>.
     * An association tuple that pairs a &#x60;Catalog&#x60; to a resource that can use the &#x60;Catalog&#x60;. After association, a google.cloud.privatecatalog.v1beta1.Catalog becomes available to consumers under specified Association.resource and all of its child nodes. Users who have the &#x60;cloudprivatecatalog.targets.get&#x60; permission on any of the resource nodes can access the catalog and child products under the node.  For example, suppose the cloud resource hierarchy is as follows:  * organizations/example.com   * folders/team     * projects/test  After creating an association with &#x60;organizations/example.com&#x60;, the catalog &#x60;catalogs/1&#x60;  is accessible from the following paths:  * organizations/example.com * folders/team * projects/test  Users can access them by google.cloud.v1beta1.PrivateCatalog.SearchCatalogs action.
     * @alias module:model/GoogleCloudPrivatecatalogproducerV1beta1Association
     */
    constructor() { 
        
        GoogleCloudPrivatecatalogproducerV1beta1Association.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudPrivatecatalogproducerV1beta1Association</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudPrivatecatalogproducerV1beta1Association} obj Optional instance to populate.
     * @return {module:model/GoogleCloudPrivatecatalogproducerV1beta1Association} The populated <code>GoogleCloudPrivatecatalogproducerV1beta1Association</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudPrivatecatalogproducerV1beta1Association();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('resource')) {
                obj['resource'] = ApiClient.convertToType(data['resource'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudPrivatecatalogproducerV1beta1Association</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudPrivatecatalogproducerV1beta1Association</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['resource'] && !(typeof data['resource'] === 'string' || data['resource'] instanceof String)) {
            throw new Error("Expected the field `resource` to be a primitive type in the JSON string but got " + data['resource']);
        }

        return true;
    }


}



/**
 * The creation time of the association.
 * @member {String} createTime
 */
GoogleCloudPrivatecatalogproducerV1beta1Association.prototype['createTime'] = undefined;

/**
 * Output only. The resource name of the catalog association, in the format `catalogs/{catalog_id}/associations/{association_id}'.  A unique identifier for the catalog association, which is generated by catalog service.
 * @member {String} name
 */
GoogleCloudPrivatecatalogproducerV1beta1Association.prototype['name'] = undefined;

/**
 * Required. The user-supplied fully qualified name of the `Resource` associated to the `Catalog`. It supports `Organization`, `Folder`, and `Project`. Values are of the form  * `//cloudresourcemanager.googleapis.com/projects/{product_number}` * `//cloudresourcemanager.googleapis.com/folders/{folder_id}` * `//cloudresourcemanager.googleapis.com/organizations/{organization_id}`
 * @member {String} resource
 */
GoogleCloudPrivatecatalogproducerV1beta1Association.prototype['resource'] = undefined;






export default GoogleCloudPrivatecatalogproducerV1beta1Association;

