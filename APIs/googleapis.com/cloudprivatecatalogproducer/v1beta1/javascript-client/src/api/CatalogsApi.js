/**
 * Cloud Private Catalog Producer
 * Enables cloud users to manage and share enterprise catalogs intheir organizations.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GoogleCloudPrivatecatalogproducerV1beta1Association from '../model/GoogleCloudPrivatecatalogproducerV1beta1Association';
import GoogleCloudPrivatecatalogproducerV1beta1Catalog from '../model/GoogleCloudPrivatecatalogproducerV1beta1Catalog';
import GoogleCloudPrivatecatalogproducerV1beta1CopyProductRequest from '../model/GoogleCloudPrivatecatalogproducerV1beta1CopyProductRequest';
import GoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest from '../model/GoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest';
import GoogleCloudPrivatecatalogproducerV1beta1ListAssociationsResponse from '../model/GoogleCloudPrivatecatalogproducerV1beta1ListAssociationsResponse';
import GoogleCloudPrivatecatalogproducerV1beta1ListCatalogsResponse from '../model/GoogleCloudPrivatecatalogproducerV1beta1ListCatalogsResponse';
import GoogleCloudPrivatecatalogproducerV1beta1ListProductsResponse from '../model/GoogleCloudPrivatecatalogproducerV1beta1ListProductsResponse';
import GoogleCloudPrivatecatalogproducerV1beta1ListVersionsResponse from '../model/GoogleCloudPrivatecatalogproducerV1beta1ListVersionsResponse';
import GoogleCloudPrivatecatalogproducerV1beta1Product from '../model/GoogleCloudPrivatecatalogproducerV1beta1Product';
import GoogleCloudPrivatecatalogproducerV1beta1UploadIconRequest from '../model/GoogleCloudPrivatecatalogproducerV1beta1UploadIconRequest';
import GoogleCloudPrivatecatalogproducerV1beta1Version from '../model/GoogleCloudPrivatecatalogproducerV1beta1Version';
import GoogleIamV1Policy from '../model/GoogleIamV1Policy';
import GoogleIamV1SetIamPolicyRequest from '../model/GoogleIamV1SetIamPolicyRequest';
import GoogleIamV1TestIamPermissionsRequest from '../model/GoogleIamV1TestIamPermissionsRequest';
import GoogleIamV1TestIamPermissionsResponse from '../model/GoogleIamV1TestIamPermissionsResponse';
import GoogleLongrunningOperation from '../model/GoogleLongrunningOperation';

/**
* Catalogs service.
* @module api/CatalogsApi
* @version v1beta1
*/
export default class CatalogsApi {

    /**
    * Constructs a new CatalogsApi. 
    * @alias module:api/CatalogsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the cloudprivatecatalogproducerCatalogsAssociationsCreate operation.
     * @callback module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsAssociationsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudPrivatecatalogproducerV1beta1Association} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an Association instance under a given Catalog.
     * @param {String} parent The `Catalog` resource's name.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {String} [callback] JSONP
     * @param {module:model/GoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest} [googleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest] 
     * @param {module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsAssociationsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudPrivatecatalogproducerV1beta1Association}
     */
    cloudprivatecatalogproducerCatalogsAssociationsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling cloudprivatecatalogproducerCatalogsAssociationsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'upload_protocol': opts['uploadProtocol'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'fields': opts['fields'],
        'uploadType': opts['uploadType'],
        '$.xgafv': opts['xgafv'],
        'oauth_token': opts['oauthToken'],
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = GoogleCloudPrivatecatalogproducerV1beta1Association;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/associations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cloudprivatecatalogproducerCatalogsAssociationsList operation.
     * @callback module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsAssociationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudPrivatecatalogproducerV1beta1ListAssociationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all Association resources under a catalog.
     * @param {String} parent The resource name of the `Catalog` whose `Associations` are being retrieved. In the format `catalogs/<catalog>`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {String} [callback] JSONP
     * @param {Number} [pageSize] The maximum number of catalog associations to return.
     * @param {String} [pageToken] A pagination token returned from the previous call to `ListAssociations`.
     * @param {module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsAssociationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudPrivatecatalogproducerV1beta1ListAssociationsResponse}
     */
    cloudprivatecatalogproducerCatalogsAssociationsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling cloudprivatecatalogproducerCatalogsAssociationsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'upload_protocol': opts['uploadProtocol'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'fields': opts['fields'],
        'uploadType': opts['uploadType'],
        '$.xgafv': opts['xgafv'],
        'oauth_token': opts['oauthToken'],
        'callback': opts['callback'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = GoogleCloudPrivatecatalogproducerV1beta1ListAssociationsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/associations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cloudprivatecatalogproducerCatalogsCreate operation.
     * @callback module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new Catalog resource.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {String} [callback] JSONP
     * @param {module:model/GoogleCloudPrivatecatalogproducerV1beta1Catalog} [googleCloudPrivatecatalogproducerV1beta1Catalog] 
     * @param {module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    cloudprivatecatalogproducerCatalogsCreate(opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudPrivatecatalogproducerV1beta1Catalog'];

      let pathParams = {
      };
      let queryParams = {
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'upload_protocol': opts['uploadProtocol'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'fields': opts['fields'],
        'uploadType': opts['uploadType'],
        '$.xgafv': opts['xgafv'],
        'oauth_token': opts['oauthToken'],
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/catalogs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cloudprivatecatalogproducerCatalogsGetIamPolicy operation.
     * @callback module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsGetIamPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleIamV1Policy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets IAM policy for the specified Catalog.
     * @param {String} resource REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {String} [callback] JSONP
     * @param {Number} [optionsRequestedPolicyVersion] Optional. The policy format version to be returned.  Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.  Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset.
     * @param {module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsGetIamPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleIamV1Policy}
     */
    cloudprivatecatalogproducerCatalogsGetIamPolicy(resource, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resource' is set
      if (resource === undefined || resource === null) {
        throw new Error("Missing the required parameter 'resource' when calling cloudprivatecatalogproducerCatalogsGetIamPolicy");
      }

      let pathParams = {
        'resource': resource
      };
      let queryParams = {
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'upload_protocol': opts['uploadProtocol'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'fields': opts['fields'],
        'uploadType': opts['uploadType'],
        '$.xgafv': opts['xgafv'],
        'oauth_token': opts['oauthToken'],
        'callback': opts['callback'],
        'options.requestedPolicyVersion': opts['optionsRequestedPolicyVersion']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = GoogleIamV1Policy;
      return this.apiClient.callApi(
        '/v1beta1/{resource}:getIamPolicy', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cloudprivatecatalogproducerCatalogsList operation.
     * @callback module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudPrivatecatalogproducerV1beta1ListCatalogsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists Catalog resources that the producer has access to, within the scope of the parent resource.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {String} [callback] JSONP
     * @param {Number} [pageSize] The maximum number of catalogs to return.
     * @param {String} [pageToken] A pagination token returned from a previous call to ListCatalogs that indicates where this listing should continue from. This field is optional.
     * @param {String} [parent] The resource name of the parent resource.
     * @param {module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudPrivatecatalogproducerV1beta1ListCatalogsResponse}
     */
    cloudprivatecatalogproducerCatalogsList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'upload_protocol': opts['uploadProtocol'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'fields': opts['fields'],
        'uploadType': opts['uploadType'],
        '$.xgafv': opts['xgafv'],
        'oauth_token': opts['oauthToken'],
        'callback': opts['callback'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'parent': opts['parent']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = GoogleCloudPrivatecatalogproducerV1beta1ListCatalogsResponse;
      return this.apiClient.callApi(
        '/v1beta1/catalogs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cloudprivatecatalogproducerCatalogsProductsCopy operation.
     * @callback module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsProductsCopyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Copies a Product under another Catalog.
     * @param {String} name The resource name of the current product that is copied from.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {String} [callback] JSONP
     * @param {module:model/GoogleCloudPrivatecatalogproducerV1beta1CopyProductRequest} [googleCloudPrivatecatalogproducerV1beta1CopyProductRequest] 
     * @param {module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsProductsCopyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    cloudprivatecatalogproducerCatalogsProductsCopy(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudPrivatecatalogproducerV1beta1CopyProductRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling cloudprivatecatalogproducerCatalogsProductsCopy");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'upload_protocol': opts['uploadProtocol'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'fields': opts['fields'],
        'uploadType': opts['uploadType'],
        '$.xgafv': opts['xgafv'],
        'oauth_token': opts['oauthToken'],
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{name}:copy', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cloudprivatecatalogproducerCatalogsProductsCreate operation.
     * @callback module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsProductsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudPrivatecatalogproducerV1beta1Product} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a Product instance under a given Catalog.
     * @param {String} parent The catalog name of the new product's parent.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {String} [callback] JSONP
     * @param {module:model/GoogleCloudPrivatecatalogproducerV1beta1Product} [googleCloudPrivatecatalogproducerV1beta1Product] 
     * @param {module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsProductsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudPrivatecatalogproducerV1beta1Product}
     */
    cloudprivatecatalogproducerCatalogsProductsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudPrivatecatalogproducerV1beta1Product'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling cloudprivatecatalogproducerCatalogsProductsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'upload_protocol': opts['uploadProtocol'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'fields': opts['fields'],
        'uploadType': opts['uploadType'],
        '$.xgafv': opts['xgafv'],
        'oauth_token': opts['oauthToken'],
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = GoogleCloudPrivatecatalogproducerV1beta1Product;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/products', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cloudprivatecatalogproducerCatalogsProductsIconsUpload operation.
     * @callback module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsProductsIconsUploadCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an Icon instance under a given Product. If Product only has a default icon, a new Icon instance is created and associated with the given Product. If Product already has a non-default icon, the action creates a new Icon instance, associates the newly created Icon with the given Product and deletes the old icon.
     * @param {String} product The resource name of the product.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {String} [callback] JSONP
     * @param {module:model/GoogleCloudPrivatecatalogproducerV1beta1UploadIconRequest} [googleCloudPrivatecatalogproducerV1beta1UploadIconRequest] 
     * @param {module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsProductsIconsUploadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    cloudprivatecatalogproducerCatalogsProductsIconsUpload(product, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudPrivatecatalogproducerV1beta1UploadIconRequest'];
      // verify the required parameter 'product' is set
      if (product === undefined || product === null) {
        throw new Error("Missing the required parameter 'product' when calling cloudprivatecatalogproducerCatalogsProductsIconsUpload");
      }

      let pathParams = {
        'product': product
      };
      let queryParams = {
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'upload_protocol': opts['uploadProtocol'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'fields': opts['fields'],
        'uploadType': opts['uploadType'],
        '$.xgafv': opts['xgafv'],
        'oauth_token': opts['oauthToken'],
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1beta1/{product}/icons:upload', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cloudprivatecatalogproducerCatalogsProductsList operation.
     * @callback module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsProductsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudPrivatecatalogproducerV1beta1ListProductsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists Product resources that the producer has access to, within the scope of the parent catalog.
     * @param {String} parent The resource name of the parent resource.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {String} [callback] JSONP
     * @param {String} [filter] A filter expression used to restrict the returned results based upon properties of the product.
     * @param {Number} [pageSize] The maximum number of products to return.
     * @param {String} [pageToken] A pagination token returned from a previous call to ListProducts that indicates where this listing should continue from. This field is optional.
     * @param {module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsProductsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudPrivatecatalogproducerV1beta1ListProductsResponse}
     */
    cloudprivatecatalogproducerCatalogsProductsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling cloudprivatecatalogproducerCatalogsProductsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'upload_protocol': opts['uploadProtocol'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'fields': opts['fields'],
        'uploadType': opts['uploadType'],
        '$.xgafv': opts['xgafv'],
        'oauth_token': opts['oauthToken'],
        'callback': opts['callback'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = GoogleCloudPrivatecatalogproducerV1beta1ListProductsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/products', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cloudprivatecatalogproducerCatalogsProductsVersionsCreate operation.
     * @callback module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsProductsVersionsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a Version instance under a given Product.
     * @param {String} parent The product name of the new version's parent.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {String} [callback] JSONP
     * @param {module:model/GoogleCloudPrivatecatalogproducerV1beta1Version} [googleCloudPrivatecatalogproducerV1beta1Version] 
     * @param {module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsProductsVersionsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    cloudprivatecatalogproducerCatalogsProductsVersionsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudPrivatecatalogproducerV1beta1Version'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling cloudprivatecatalogproducerCatalogsProductsVersionsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'upload_protocol': opts['uploadProtocol'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'fields': opts['fields'],
        'uploadType': opts['uploadType'],
        '$.xgafv': opts['xgafv'],
        'oauth_token': opts['oauthToken'],
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/versions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cloudprivatecatalogproducerCatalogsProductsVersionsDelete operation.
     * @callback module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsProductsVersionsDeleteCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Hard deletes a Version.
     * @param {String} name The resource name of the version.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {String} [callback] JSONP
     * @param {Boolean} [force] Forces deletion of the `Catalog` and its `Association` resources. If the `Catalog` is still associated with other resources and force is not set to true, then the operation fails.
     * @param {module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsProductsVersionsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    cloudprivatecatalogproducerCatalogsProductsVersionsDelete(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling cloudprivatecatalogproducerCatalogsProductsVersionsDelete");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'upload_protocol': opts['uploadProtocol'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'fields': opts['fields'],
        'uploadType': opts['uploadType'],
        '$.xgafv': opts['xgafv'],
        'oauth_token': opts['oauthToken'],
        'callback': opts['callback'],
        'force': opts['force']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1beta1/{name}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cloudprivatecatalogproducerCatalogsProductsVersionsGet operation.
     * @callback module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsProductsVersionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudPrivatecatalogproducerV1beta1Version} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the requested Version resource.
     * @param {String} name The resource name of the version.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {String} [callback] JSONP
     * @param {module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsProductsVersionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudPrivatecatalogproducerV1beta1Version}
     */
    cloudprivatecatalogproducerCatalogsProductsVersionsGet(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling cloudprivatecatalogproducerCatalogsProductsVersionsGet");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'upload_protocol': opts['uploadProtocol'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'fields': opts['fields'],
        'uploadType': opts['uploadType'],
        '$.xgafv': opts['xgafv'],
        'oauth_token': opts['oauthToken'],
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = GoogleCloudPrivatecatalogproducerV1beta1Version;
      return this.apiClient.callApi(
        '/v1beta1/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cloudprivatecatalogproducerCatalogsProductsVersionsList operation.
     * @callback module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsProductsVersionsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudPrivatecatalogproducerV1beta1ListVersionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists Version resources that the producer has access to, within the scope of the parent Product.
     * @param {String} parent The resource name of the parent resource.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {String} [callback] JSONP
     * @param {Number} [pageSize] The maximum number of versions to return.
     * @param {String} [pageToken] A pagination token returned from a previous call to ListVersions that indicates where this listing should continue from. This field is optional.
     * @param {module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsProductsVersionsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudPrivatecatalogproducerV1beta1ListVersionsResponse}
     */
    cloudprivatecatalogproducerCatalogsProductsVersionsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling cloudprivatecatalogproducerCatalogsProductsVersionsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'upload_protocol': opts['uploadProtocol'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'fields': opts['fields'],
        'uploadType': opts['uploadType'],
        '$.xgafv': opts['xgafv'],
        'oauth_token': opts['oauthToken'],
        'callback': opts['callback'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = GoogleCloudPrivatecatalogproducerV1beta1ListVersionsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/versions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cloudprivatecatalogproducerCatalogsProductsVersionsPatch operation.
     * @callback module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsProductsVersionsPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudPrivatecatalogproducerV1beta1Version} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a specific Version resource.
     * @param {String} name Required. The resource name of the version, in the format `catalogs/{catalog_id}/products/{product_id}/versions/a-z*[a-z0-9]'.  A unique identifier for the version under a product, which can't be changed after the version is created. The final segment of the name must between 1 and 63 characters in length.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {String} [callback] JSONP
     * @param {String} [updateMask] Field mask that controls which fields of the version should be updated.
     * @param {module:model/GoogleCloudPrivatecatalogproducerV1beta1Version} [googleCloudPrivatecatalogproducerV1beta1Version] 
     * @param {module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsProductsVersionsPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudPrivatecatalogproducerV1beta1Version}
     */
    cloudprivatecatalogproducerCatalogsProductsVersionsPatch(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudPrivatecatalogproducerV1beta1Version'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling cloudprivatecatalogproducerCatalogsProductsVersionsPatch");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'upload_protocol': opts['uploadProtocol'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'fields': opts['fields'],
        'uploadType': opts['uploadType'],
        '$.xgafv': opts['xgafv'],
        'oauth_token': opts['oauthToken'],
        'callback': opts['callback'],
        'updateMask': opts['updateMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = GoogleCloudPrivatecatalogproducerV1beta1Version;
      return this.apiClient.callApi(
        '/v1beta1/{name}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cloudprivatecatalogproducerCatalogsSetIamPolicy operation.
     * @callback module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsSetIamPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleIamV1Policy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Sets the IAM policy for the specified Catalog.
     * @param {String} resource REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {String} [callback] JSONP
     * @param {module:model/GoogleIamV1SetIamPolicyRequest} [googleIamV1SetIamPolicyRequest] 
     * @param {module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsSetIamPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleIamV1Policy}
     */
    cloudprivatecatalogproducerCatalogsSetIamPolicy(resource, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleIamV1SetIamPolicyRequest'];
      // verify the required parameter 'resource' is set
      if (resource === undefined || resource === null) {
        throw new Error("Missing the required parameter 'resource' when calling cloudprivatecatalogproducerCatalogsSetIamPolicy");
      }

      let pathParams = {
        'resource': resource
      };
      let queryParams = {
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'upload_protocol': opts['uploadProtocol'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'fields': opts['fields'],
        'uploadType': opts['uploadType'],
        '$.xgafv': opts['xgafv'],
        'oauth_token': opts['oauthToken'],
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = GoogleIamV1Policy;
      return this.apiClient.callApi(
        '/v1beta1/{resource}:setIamPolicy', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cloudprivatecatalogproducerCatalogsTestIamPermissions operation.
     * @callback module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsTestIamPermissionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleIamV1TestIamPermissionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Tests the IAM permissions for the specified Catalog.
     * @param {String} resource REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {String} [callback] JSONP
     * @param {module:model/GoogleIamV1TestIamPermissionsRequest} [googleIamV1TestIamPermissionsRequest] 
     * @param {module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsTestIamPermissionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleIamV1TestIamPermissionsResponse}
     */
    cloudprivatecatalogproducerCatalogsTestIamPermissions(resource, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleIamV1TestIamPermissionsRequest'];
      // verify the required parameter 'resource' is set
      if (resource === undefined || resource === null) {
        throw new Error("Missing the required parameter 'resource' when calling cloudprivatecatalogproducerCatalogsTestIamPermissions");
      }

      let pathParams = {
        'resource': resource
      };
      let queryParams = {
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'upload_protocol': opts['uploadProtocol'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'fields': opts['fields'],
        'uploadType': opts['uploadType'],
        '$.xgafv': opts['xgafv'],
        'oauth_token': opts['oauthToken'],
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = GoogleIamV1TestIamPermissionsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{resource}:testIamPermissions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cloudprivatecatalogproducerCatalogsUndelete operation.
     * @callback module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsUndeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudPrivatecatalogproducerV1beta1Catalog} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Undeletes a deleted Catalog and all resources under it.
     * @param {String} name The resource name of the catalog.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {String} [callback] JSONP
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/CatalogsApi~cloudprivatecatalogproducerCatalogsUndeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudPrivatecatalogproducerV1beta1Catalog}
     */
    cloudprivatecatalogproducerCatalogsUndelete(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling cloudprivatecatalogproducerCatalogsUndelete");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'upload_protocol': opts['uploadProtocol'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'fields': opts['fields'],
        'uploadType': opts['uploadType'],
        '$.xgafv': opts['xgafv'],
        'oauth_token': opts['oauthToken'],
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = GoogleCloudPrivatecatalogproducerV1beta1Catalog;
      return this.apiClient.callApi(
        '/v1beta1/{name}:undelete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
