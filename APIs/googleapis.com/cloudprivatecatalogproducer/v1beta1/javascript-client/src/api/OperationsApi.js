/**
 * Cloud Private Catalog Producer
 * Enables cloud users to manage and share enterprise catalogs intheir organizations.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GoogleLongrunningListOperationsResponse from '../model/GoogleLongrunningListOperationsResponse';

/**
* Operations service.
* @module api/OperationsApi
* @version v1beta1
*/
export default class OperationsApi {

    /**
    * Constructs a new OperationsApi. 
    * @alias module:api/OperationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the cloudprivatecatalogproducerOperationsCancel operation.
     * @callback module:api/OperationsApi~cloudprivatecatalogproducerOperationsCancelCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Starts asynchronous cancellation on a long-running operation.  The server makes a best effort to cancel the operation, but success is not guaranteed.  If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.  Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
     * @param {String} name The name of the operation resource to be cancelled.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {String} [callback] JSONP
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/OperationsApi~cloudprivatecatalogproducerOperationsCancelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    cloudprivatecatalogproducerOperationsCancel(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling cloudprivatecatalogproducerOperationsCancel");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'upload_protocol': opts['uploadProtocol'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'fields': opts['fields'],
        'uploadType': opts['uploadType'],
        '$.xgafv': opts['xgafv'],
        'oauth_token': opts['oauthToken'],
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1beta1/{name}:cancel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cloudprivatecatalogproducerOperationsList operation.
     * @callback module:api/OperationsApi~cloudprivatecatalogproducerOperationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningListOperationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.  NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/_*_/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/_*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {String} [callback] JSONP
     * @param {String} [filter] The standard list filter.
     * @param {String} [name] The name of the operation's parent resource.
     * @param {Number} [pageSize] The standard list page size.
     * @param {String} [pageToken] The standard list page token.
     * @param {module:api/OperationsApi~cloudprivatecatalogproducerOperationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningListOperationsResponse}
     */
    cloudprivatecatalogproducerOperationsList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'upload_protocol': opts['uploadProtocol'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'fields': opts['fields'],
        'uploadType': opts['uploadType'],
        '$.xgafv': opts['xgafv'],
        'oauth_token': opts['oauthToken'],
        'callback': opts['callback'],
        'filter': opts['filter'],
        'name': opts['name'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = GoogleLongrunningListOperationsResponse;
      return this.apiClient.callApi(
        '/v1beta1/operations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
