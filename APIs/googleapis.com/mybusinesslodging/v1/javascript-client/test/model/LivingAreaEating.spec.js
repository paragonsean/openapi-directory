/**
 * My Business Lodging API
 * The My Business Lodging API enables managing lodging business information on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MyBusinessLodgingApi);
  }
}(this, function(expect, MyBusinessLodgingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MyBusinessLodgingApi.LivingAreaEating();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LivingAreaEating', function() {
    it('should create an instance of LivingAreaEating', function() {
      // uncomment below and update the code to test LivingAreaEating
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be.a(MyBusinessLodgingApi.LivingAreaEating);
    });

    it('should have the property coffeeMaker (base name: "coffeeMaker")', function() {
      // uncomment below and update the code to test the property coffeeMaker
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property coffeeMakerException (base name: "coffeeMakerException")', function() {
      // uncomment below and update the code to test the property coffeeMakerException
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property cookware (base name: "cookware")', function() {
      // uncomment below and update the code to test the property cookware
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property cookwareException (base name: "cookwareException")', function() {
      // uncomment below and update the code to test the property cookwareException
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property dishwasher (base name: "dishwasher")', function() {
      // uncomment below and update the code to test the property dishwasher
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property dishwasherException (base name: "dishwasherException")', function() {
      // uncomment below and update the code to test the property dishwasherException
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property indoorGrill (base name: "indoorGrill")', function() {
      // uncomment below and update the code to test the property indoorGrill
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property indoorGrillException (base name: "indoorGrillException")', function() {
      // uncomment below and update the code to test the property indoorGrillException
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property kettle (base name: "kettle")', function() {
      // uncomment below and update the code to test the property kettle
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property kettleException (base name: "kettleException")', function() {
      // uncomment below and update the code to test the property kettleException
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property kitchenAvailable (base name: "kitchenAvailable")', function() {
      // uncomment below and update the code to test the property kitchenAvailable
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property kitchenAvailableException (base name: "kitchenAvailableException")', function() {
      // uncomment below and update the code to test the property kitchenAvailableException
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property microwave (base name: "microwave")', function() {
      // uncomment below and update the code to test the property microwave
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property microwaveException (base name: "microwaveException")', function() {
      // uncomment below and update the code to test the property microwaveException
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property minibar (base name: "minibar")', function() {
      // uncomment below and update the code to test the property minibar
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property minibarException (base name: "minibarException")', function() {
      // uncomment below and update the code to test the property minibarException
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property outdoorGrill (base name: "outdoorGrill")', function() {
      // uncomment below and update the code to test the property outdoorGrill
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property outdoorGrillException (base name: "outdoorGrillException")', function() {
      // uncomment below and update the code to test the property outdoorGrillException
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property oven (base name: "oven")', function() {
      // uncomment below and update the code to test the property oven
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property ovenException (base name: "ovenException")', function() {
      // uncomment below and update the code to test the property ovenException
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property refrigerator (base name: "refrigerator")', function() {
      // uncomment below and update the code to test the property refrigerator
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property refrigeratorException (base name: "refrigeratorException")', function() {
      // uncomment below and update the code to test the property refrigeratorException
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property sink (base name: "sink")', function() {
      // uncomment below and update the code to test the property sink
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property sinkException (base name: "sinkException")', function() {
      // uncomment below and update the code to test the property sinkException
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property snackbar (base name: "snackbar")', function() {
      // uncomment below and update the code to test the property snackbar
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property snackbarException (base name: "snackbarException")', function() {
      // uncomment below and update the code to test the property snackbarException
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property stove (base name: "stove")', function() {
      // uncomment below and update the code to test the property stove
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property stoveException (base name: "stoveException")', function() {
      // uncomment below and update the code to test the property stoveException
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property teaStation (base name: "teaStation")', function() {
      // uncomment below and update the code to test the property teaStation
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property teaStationException (base name: "teaStationException")', function() {
      // uncomment below and update the code to test the property teaStationException
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property toaster (base name: "toaster")', function() {
      // uncomment below and update the code to test the property toaster
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

    it('should have the property toasterException (base name: "toasterException")', function() {
      // uncomment below and update the code to test the property toasterException
      //var instance = new MyBusinessLodgingApi.LivingAreaEating();
      //expect(instance).to.be();
    });

  });

}));
