/**
 * My Business Lodging API
 * The My Business Lodging API enables managing lodging business information on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MyBusinessLodgingApi);
  }
}(this, function(expect, MyBusinessLodgingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MyBusinessLodgingApi.LivingAreaSleeping();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LivingAreaSleeping', function() {
    it('should create an instance of LivingAreaSleeping', function() {
      // uncomment below and update the code to test LivingAreaSleeping
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be.a(MyBusinessLodgingApi.LivingAreaSleeping);
    });

    it('should have the property bedsCount (base name: "bedsCount")', function() {
      // uncomment below and update the code to test the property bedsCount
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property bedsCountException (base name: "bedsCountException")', function() {
      // uncomment below and update the code to test the property bedsCountException
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property bunkBedsCount (base name: "bunkBedsCount")', function() {
      // uncomment below and update the code to test the property bunkBedsCount
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property bunkBedsCountException (base name: "bunkBedsCountException")', function() {
      // uncomment below and update the code to test the property bunkBedsCountException
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property cribsCount (base name: "cribsCount")', function() {
      // uncomment below and update the code to test the property cribsCount
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property cribsCountException (base name: "cribsCountException")', function() {
      // uncomment below and update the code to test the property cribsCountException
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property doubleBedsCount (base name: "doubleBedsCount")', function() {
      // uncomment below and update the code to test the property doubleBedsCount
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property doubleBedsCountException (base name: "doubleBedsCountException")', function() {
      // uncomment below and update the code to test the property doubleBedsCountException
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property featherPillows (base name: "featherPillows")', function() {
      // uncomment below and update the code to test the property featherPillows
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property featherPillowsException (base name: "featherPillowsException")', function() {
      // uncomment below and update the code to test the property featherPillowsException
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property hypoallergenicBedding (base name: "hypoallergenicBedding")', function() {
      // uncomment below and update the code to test the property hypoallergenicBedding
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property hypoallergenicBeddingException (base name: "hypoallergenicBeddingException")', function() {
      // uncomment below and update the code to test the property hypoallergenicBeddingException
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property kingBedsCount (base name: "kingBedsCount")', function() {
      // uncomment below and update the code to test the property kingBedsCount
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property kingBedsCountException (base name: "kingBedsCountException")', function() {
      // uncomment below and update the code to test the property kingBedsCountException
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property memoryFoamPillows (base name: "memoryFoamPillows")', function() {
      // uncomment below and update the code to test the property memoryFoamPillows
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property memoryFoamPillowsException (base name: "memoryFoamPillowsException")', function() {
      // uncomment below and update the code to test the property memoryFoamPillowsException
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property otherBedsCount (base name: "otherBedsCount")', function() {
      // uncomment below and update the code to test the property otherBedsCount
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property otherBedsCountException (base name: "otherBedsCountException")', function() {
      // uncomment below and update the code to test the property otherBedsCountException
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property queenBedsCount (base name: "queenBedsCount")', function() {
      // uncomment below and update the code to test the property queenBedsCount
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property queenBedsCountException (base name: "queenBedsCountException")', function() {
      // uncomment below and update the code to test the property queenBedsCountException
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property rollAwayBedsCount (base name: "rollAwayBedsCount")', function() {
      // uncomment below and update the code to test the property rollAwayBedsCount
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property rollAwayBedsCountException (base name: "rollAwayBedsCountException")', function() {
      // uncomment below and update the code to test the property rollAwayBedsCountException
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property singleOrTwinBedsCount (base name: "singleOrTwinBedsCount")', function() {
      // uncomment below and update the code to test the property singleOrTwinBedsCount
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property singleOrTwinBedsCountException (base name: "singleOrTwinBedsCountException")', function() {
      // uncomment below and update the code to test the property singleOrTwinBedsCountException
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property sofaBedsCount (base name: "sofaBedsCount")', function() {
      // uncomment below and update the code to test the property sofaBedsCount
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property sofaBedsCountException (base name: "sofaBedsCountException")', function() {
      // uncomment below and update the code to test the property sofaBedsCountException
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property syntheticPillows (base name: "syntheticPillows")', function() {
      // uncomment below and update the code to test the property syntheticPillows
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

    it('should have the property syntheticPillowsException (base name: "syntheticPillowsException")', function() {
      // uncomment below and update the code to test the property syntheticPillowsException
      //var instance = new MyBusinessLodgingApi.LivingAreaSleeping();
      //expect(instance).to.be();
    });

  });

}));
