/**
 * My Business Lodging API
 * The My Business Lodging API enables managing lodging business information on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MyBusinessLodgingApi);
  }
}(this, function(expect, MyBusinessLodgingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MyBusinessLodgingApi.MinimizedContact();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MinimizedContact', function() {
    it('should create an instance of MinimizedContact', function() {
      // uncomment below and update the code to test MinimizedContact
      //var instance = new MyBusinessLodgingApi.MinimizedContact();
      //expect(instance).to.be.a(MyBusinessLodgingApi.MinimizedContact);
    });

    it('should have the property contactlessCheckinCheckout (base name: "contactlessCheckinCheckout")', function() {
      // uncomment below and update the code to test the property contactlessCheckinCheckout
      //var instance = new MyBusinessLodgingApi.MinimizedContact();
      //expect(instance).to.be();
    });

    it('should have the property contactlessCheckinCheckoutException (base name: "contactlessCheckinCheckoutException")', function() {
      // uncomment below and update the code to test the property contactlessCheckinCheckoutException
      //var instance = new MyBusinessLodgingApi.MinimizedContact();
      //expect(instance).to.be();
    });

    it('should have the property digitalGuestRoomKeys (base name: "digitalGuestRoomKeys")', function() {
      // uncomment below and update the code to test the property digitalGuestRoomKeys
      //var instance = new MyBusinessLodgingApi.MinimizedContact();
      //expect(instance).to.be();
    });

    it('should have the property digitalGuestRoomKeysException (base name: "digitalGuestRoomKeysException")', function() {
      // uncomment below and update the code to test the property digitalGuestRoomKeysException
      //var instance = new MyBusinessLodgingApi.MinimizedContact();
      //expect(instance).to.be();
    });

    it('should have the property housekeepingScheduledRequestOnly (base name: "housekeepingScheduledRequestOnly")', function() {
      // uncomment below and update the code to test the property housekeepingScheduledRequestOnly
      //var instance = new MyBusinessLodgingApi.MinimizedContact();
      //expect(instance).to.be();
    });

    it('should have the property housekeepingScheduledRequestOnlyException (base name: "housekeepingScheduledRequestOnlyException")', function() {
      // uncomment below and update the code to test the property housekeepingScheduledRequestOnlyException
      //var instance = new MyBusinessLodgingApi.MinimizedContact();
      //expect(instance).to.be();
    });

    it('should have the property noHighTouchItemsCommonAreas (base name: "noHighTouchItemsCommonAreas")', function() {
      // uncomment below and update the code to test the property noHighTouchItemsCommonAreas
      //var instance = new MyBusinessLodgingApi.MinimizedContact();
      //expect(instance).to.be();
    });

    it('should have the property noHighTouchItemsCommonAreasException (base name: "noHighTouchItemsCommonAreasException")', function() {
      // uncomment below and update the code to test the property noHighTouchItemsCommonAreasException
      //var instance = new MyBusinessLodgingApi.MinimizedContact();
      //expect(instance).to.be();
    });

    it('should have the property noHighTouchItemsGuestRooms (base name: "noHighTouchItemsGuestRooms")', function() {
      // uncomment below and update the code to test the property noHighTouchItemsGuestRooms
      //var instance = new MyBusinessLodgingApi.MinimizedContact();
      //expect(instance).to.be();
    });

    it('should have the property noHighTouchItemsGuestRoomsException (base name: "noHighTouchItemsGuestRoomsException")', function() {
      // uncomment below and update the code to test the property noHighTouchItemsGuestRoomsException
      //var instance = new MyBusinessLodgingApi.MinimizedContact();
      //expect(instance).to.be();
    });

    it('should have the property plasticKeycardsDisinfected (base name: "plasticKeycardsDisinfected")', function() {
      // uncomment below and update the code to test the property plasticKeycardsDisinfected
      //var instance = new MyBusinessLodgingApi.MinimizedContact();
      //expect(instance).to.be();
    });

    it('should have the property plasticKeycardsDisinfectedException (base name: "plasticKeycardsDisinfectedException")', function() {
      // uncomment below and update the code to test the property plasticKeycardsDisinfectedException
      //var instance = new MyBusinessLodgingApi.MinimizedContact();
      //expect(instance).to.be();
    });

    it('should have the property roomBookingsBuffer (base name: "roomBookingsBuffer")', function() {
      // uncomment below and update the code to test the property roomBookingsBuffer
      //var instance = new MyBusinessLodgingApi.MinimizedContact();
      //expect(instance).to.be();
    });

    it('should have the property roomBookingsBufferException (base name: "roomBookingsBufferException")', function() {
      // uncomment below and update the code to test the property roomBookingsBufferException
      //var instance = new MyBusinessLodgingApi.MinimizedContact();
      //expect(instance).to.be();
    });

  });

}));
