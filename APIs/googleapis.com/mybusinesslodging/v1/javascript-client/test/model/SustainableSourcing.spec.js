/**
 * My Business Lodging API
 * The My Business Lodging API enables managing lodging business information on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MyBusinessLodgingApi);
  }
}(this, function(expect, MyBusinessLodgingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MyBusinessLodgingApi.SustainableSourcing();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SustainableSourcing', function() {
    it('should create an instance of SustainableSourcing', function() {
      // uncomment below and update the code to test SustainableSourcing
      //var instance = new MyBusinessLodgingApi.SustainableSourcing();
      //expect(instance).to.be.a(MyBusinessLodgingApi.SustainableSourcing);
    });

    it('should have the property ecoFriendlyToiletries (base name: "ecoFriendlyToiletries")', function() {
      // uncomment below and update the code to test the property ecoFriendlyToiletries
      //var instance = new MyBusinessLodgingApi.SustainableSourcing();
      //expect(instance).to.be();
    });

    it('should have the property ecoFriendlyToiletriesException (base name: "ecoFriendlyToiletriesException")', function() {
      // uncomment below and update the code to test the property ecoFriendlyToiletriesException
      //var instance = new MyBusinessLodgingApi.SustainableSourcing();
      //expect(instance).to.be();
    });

    it('should have the property locallySourcedFoodAndBeverages (base name: "locallySourcedFoodAndBeverages")', function() {
      // uncomment below and update the code to test the property locallySourcedFoodAndBeverages
      //var instance = new MyBusinessLodgingApi.SustainableSourcing();
      //expect(instance).to.be();
    });

    it('should have the property locallySourcedFoodAndBeveragesException (base name: "locallySourcedFoodAndBeveragesException")', function() {
      // uncomment below and update the code to test the property locallySourcedFoodAndBeveragesException
      //var instance = new MyBusinessLodgingApi.SustainableSourcing();
      //expect(instance).to.be();
    });

    it('should have the property organicCageFreeEggs (base name: "organicCageFreeEggs")', function() {
      // uncomment below and update the code to test the property organicCageFreeEggs
      //var instance = new MyBusinessLodgingApi.SustainableSourcing();
      //expect(instance).to.be();
    });

    it('should have the property organicCageFreeEggsException (base name: "organicCageFreeEggsException")', function() {
      // uncomment below and update the code to test the property organicCageFreeEggsException
      //var instance = new MyBusinessLodgingApi.SustainableSourcing();
      //expect(instance).to.be();
    });

    it('should have the property organicFoodAndBeverages (base name: "organicFoodAndBeverages")', function() {
      // uncomment below and update the code to test the property organicFoodAndBeverages
      //var instance = new MyBusinessLodgingApi.SustainableSourcing();
      //expect(instance).to.be();
    });

    it('should have the property organicFoodAndBeveragesException (base name: "organicFoodAndBeveragesException")', function() {
      // uncomment below and update the code to test the property organicFoodAndBeveragesException
      //var instance = new MyBusinessLodgingApi.SustainableSourcing();
      //expect(instance).to.be();
    });

    it('should have the property responsiblePurchasingPolicy (base name: "responsiblePurchasingPolicy")', function() {
      // uncomment below and update the code to test the property responsiblePurchasingPolicy
      //var instance = new MyBusinessLodgingApi.SustainableSourcing();
      //expect(instance).to.be();
    });

    it('should have the property responsiblePurchasingPolicyException (base name: "responsiblePurchasingPolicyException")', function() {
      // uncomment below and update the code to test the property responsiblePurchasingPolicyException
      //var instance = new MyBusinessLodgingApi.SustainableSourcing();
      //expect(instance).to.be();
    });

    it('should have the property responsiblySourcesSeafood (base name: "responsiblySourcesSeafood")', function() {
      // uncomment below and update the code to test the property responsiblySourcesSeafood
      //var instance = new MyBusinessLodgingApi.SustainableSourcing();
      //expect(instance).to.be();
    });

    it('should have the property responsiblySourcesSeafoodException (base name: "responsiblySourcesSeafoodException")', function() {
      // uncomment below and update the code to test the property responsiblySourcesSeafoodException
      //var instance = new MyBusinessLodgingApi.SustainableSourcing();
      //expect(instance).to.be();
    });

    it('should have the property veganMeals (base name: "veganMeals")', function() {
      // uncomment below and update the code to test the property veganMeals
      //var instance = new MyBusinessLodgingApi.SustainableSourcing();
      //expect(instance).to.be();
    });

    it('should have the property veganMealsException (base name: "veganMealsException")', function() {
      // uncomment below and update the code to test the property veganMealsException
      //var instance = new MyBusinessLodgingApi.SustainableSourcing();
      //expect(instance).to.be();
    });

    it('should have the property vegetarianMeals (base name: "vegetarianMeals")', function() {
      // uncomment below and update the code to test the property vegetarianMeals
      //var instance = new MyBusinessLodgingApi.SustainableSourcing();
      //expect(instance).to.be();
    });

    it('should have the property vegetarianMealsException (base name: "vegetarianMealsException")', function() {
      // uncomment below and update the code to test the property vegetarianMealsException
      //var instance = new MyBusinessLodgingApi.SustainableSourcing();
      //expect(instance).to.be();
    });

  });

}));
