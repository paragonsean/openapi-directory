/**
 * My Business Lodging API
 * The My Business Lodging API enables managing lodging business information on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnhancedCleaning from './EnhancedCleaning';
import IncreasedFoodSafety from './IncreasedFoodSafety';
import MinimizedContact from './MinimizedContact';
import PersonalProtection from './PersonalProtection';
import PhysicalDistancing from './PhysicalDistancing';

/**
 * The HealthAndSafety model module.
 * @module model/HealthAndSafety
 * @version v1
 */
class HealthAndSafety {
    /**
     * Constructs a new <code>HealthAndSafety</code>.
     * Health and safety measures implemented by the hotel during COVID-19.
     * @alias module:model/HealthAndSafety
     */
    constructor() { 
        
        HealthAndSafety.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HealthAndSafety</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HealthAndSafety} obj Optional instance to populate.
     * @return {module:model/HealthAndSafety} The populated <code>HealthAndSafety</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HealthAndSafety();

            if (data.hasOwnProperty('enhancedCleaning')) {
                obj['enhancedCleaning'] = EnhancedCleaning.constructFromObject(data['enhancedCleaning']);
            }
            if (data.hasOwnProperty('increasedFoodSafety')) {
                obj['increasedFoodSafety'] = IncreasedFoodSafety.constructFromObject(data['increasedFoodSafety']);
            }
            if (data.hasOwnProperty('minimizedContact')) {
                obj['minimizedContact'] = MinimizedContact.constructFromObject(data['minimizedContact']);
            }
            if (data.hasOwnProperty('personalProtection')) {
                obj['personalProtection'] = PersonalProtection.constructFromObject(data['personalProtection']);
            }
            if (data.hasOwnProperty('physicalDistancing')) {
                obj['physicalDistancing'] = PhysicalDistancing.constructFromObject(data['physicalDistancing']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HealthAndSafety</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HealthAndSafety</code>.
     */
    static validateJSON(data) {
        // validate the optional field `enhancedCleaning`
        if (data['enhancedCleaning']) { // data not null
          EnhancedCleaning.validateJSON(data['enhancedCleaning']);
        }
        // validate the optional field `increasedFoodSafety`
        if (data['increasedFoodSafety']) { // data not null
          IncreasedFoodSafety.validateJSON(data['increasedFoodSafety']);
        }
        // validate the optional field `minimizedContact`
        if (data['minimizedContact']) { // data not null
          MinimizedContact.validateJSON(data['minimizedContact']);
        }
        // validate the optional field `personalProtection`
        if (data['personalProtection']) { // data not null
          PersonalProtection.validateJSON(data['personalProtection']);
        }
        // validate the optional field `physicalDistancing`
        if (data['physicalDistancing']) { // data not null
          PhysicalDistancing.validateJSON(data['physicalDistancing']);
        }

        return true;
    }


}



/**
 * @member {module:model/EnhancedCleaning} enhancedCleaning
 */
HealthAndSafety.prototype['enhancedCleaning'] = undefined;

/**
 * @member {module:model/IncreasedFoodSafety} increasedFoodSafety
 */
HealthAndSafety.prototype['increasedFoodSafety'] = undefined;

/**
 * @member {module:model/MinimizedContact} minimizedContact
 */
HealthAndSafety.prototype['minimizedContact'] = undefined;

/**
 * @member {module:model/PersonalProtection} personalProtection
 */
HealthAndSafety.prototype['personalProtection'] = undefined;

/**
 * @member {module:model/PhysicalDistancing} physicalDistancing
 */
HealthAndSafety.prototype['physicalDistancing'] = undefined;






export default HealthAndSafety;

