/**
 * My Business Lodging API
 * The My Business Lodging API enables managing lodging business information on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnergyEfficiency from './EnergyEfficiency';
import SustainabilityCertifications from './SustainabilityCertifications';
import SustainableSourcing from './SustainableSourcing';
import WasteReduction from './WasteReduction';
import WaterConservation from './WaterConservation';

/**
 * The Sustainability model module.
 * @module model/Sustainability
 * @version v1
 */
class Sustainability {
    /**
     * Constructs a new <code>Sustainability</code>.
     * Sustainability practices implemented at the hotel.
     * @alias module:model/Sustainability
     */
    constructor() { 
        
        Sustainability.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Sustainability</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Sustainability} obj Optional instance to populate.
     * @return {module:model/Sustainability} The populated <code>Sustainability</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Sustainability();

            if (data.hasOwnProperty('energyEfficiency')) {
                obj['energyEfficiency'] = EnergyEfficiency.constructFromObject(data['energyEfficiency']);
            }
            if (data.hasOwnProperty('sustainabilityCertifications')) {
                obj['sustainabilityCertifications'] = SustainabilityCertifications.constructFromObject(data['sustainabilityCertifications']);
            }
            if (data.hasOwnProperty('sustainableSourcing')) {
                obj['sustainableSourcing'] = SustainableSourcing.constructFromObject(data['sustainableSourcing']);
            }
            if (data.hasOwnProperty('wasteReduction')) {
                obj['wasteReduction'] = WasteReduction.constructFromObject(data['wasteReduction']);
            }
            if (data.hasOwnProperty('waterConservation')) {
                obj['waterConservation'] = WaterConservation.constructFromObject(data['waterConservation']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Sustainability</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Sustainability</code>.
     */
    static validateJSON(data) {
        // validate the optional field `energyEfficiency`
        if (data['energyEfficiency']) { // data not null
          EnergyEfficiency.validateJSON(data['energyEfficiency']);
        }
        // validate the optional field `sustainabilityCertifications`
        if (data['sustainabilityCertifications']) { // data not null
          SustainabilityCertifications.validateJSON(data['sustainabilityCertifications']);
        }
        // validate the optional field `sustainableSourcing`
        if (data['sustainableSourcing']) { // data not null
          SustainableSourcing.validateJSON(data['sustainableSourcing']);
        }
        // validate the optional field `wasteReduction`
        if (data['wasteReduction']) { // data not null
          WasteReduction.validateJSON(data['wasteReduction']);
        }
        // validate the optional field `waterConservation`
        if (data['waterConservation']) { // data not null
          WaterConservation.validateJSON(data['waterConservation']);
        }

        return true;
    }


}



/**
 * @member {module:model/EnergyEfficiency} energyEfficiency
 */
Sustainability.prototype['energyEfficiency'] = undefined;

/**
 * @member {module:model/SustainabilityCertifications} sustainabilityCertifications
 */
Sustainability.prototype['sustainabilityCertifications'] = undefined;

/**
 * @member {module:model/SustainableSourcing} sustainableSourcing
 */
Sustainability.prototype['sustainableSourcing'] = undefined;

/**
 * @member {module:model/WasteReduction} wasteReduction
 */
Sustainability.prototype['wasteReduction'] = undefined;

/**
 * @member {module:model/WaterConservation} waterConservation
 */
Sustainability.prototype['waterConservation'] = undefined;






export default Sustainability;

