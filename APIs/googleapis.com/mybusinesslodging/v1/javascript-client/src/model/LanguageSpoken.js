/**
 * My Business Lodging API
 * The My Business Lodging API enables managing lodging business information on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LanguageSpoken model module.
 * @module model/LanguageSpoken
 * @version v1
 */
class LanguageSpoken {
    /**
     * Constructs a new <code>LanguageSpoken</code>.
     * Language spoken by at least one staff member.
     * @alias module:model/LanguageSpoken
     */
    constructor() { 
        
        LanguageSpoken.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LanguageSpoken</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LanguageSpoken} obj Optional instance to populate.
     * @return {module:model/LanguageSpoken} The populated <code>LanguageSpoken</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LanguageSpoken();

            if (data.hasOwnProperty('languageCode')) {
                obj['languageCode'] = ApiClient.convertToType(data['languageCode'], 'String');
            }
            if (data.hasOwnProperty('spoken')) {
                obj['spoken'] = ApiClient.convertToType(data['spoken'], 'Boolean');
            }
            if (data.hasOwnProperty('spokenException')) {
                obj['spokenException'] = ApiClient.convertToType(data['spokenException'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LanguageSpoken</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LanguageSpoken</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['languageCode'] && !(typeof data['languageCode'] === 'string' || data['languageCode'] instanceof String)) {
            throw new Error("Expected the field `languageCode` to be a primitive type in the JSON string but got " + data['languageCode']);
        }
        // ensure the json data is a string
        if (data['spokenException'] && !(typeof data['spokenException'] === 'string' || data['spokenException'] instanceof String)) {
            throw new Error("Expected the field `spokenException` to be a primitive type in the JSON string but got " + data['spokenException']);
        }

        return true;
    }


}



/**
 * Required. The BCP-47 language code for the spoken language. Currently accepted codes: ar, de, en, es, fil, fr, hi, id, it, ja, ko, nl, pt, ru, vi, yue, zh.
 * @member {String} languageCode
 */
LanguageSpoken.prototype['languageCode'] = undefined;

/**
 * At least one member of the staff can speak the language.
 * @member {Boolean} spoken
 */
LanguageSpoken.prototype['spoken'] = undefined;

/**
 * Spoken exception.
 * @member {module:model/LanguageSpoken.SpokenExceptionEnum} spokenException
 */
LanguageSpoken.prototype['spokenException'] = undefined;





/**
 * Allowed values for the <code>spokenException</code> property.
 * @enum {String}
 * @readonly
 */
LanguageSpoken['SpokenExceptionEnum'] = {

    /**
     * value: "EXCEPTION_UNSPECIFIED"
     * @const
     */
    "EXCEPTION_UNSPECIFIED": "EXCEPTION_UNSPECIFIED",

    /**
     * value: "UNDER_CONSTRUCTION"
     * @const
     */
    "UNDER_CONSTRUCTION": "UNDER_CONSTRUCTION",

    /**
     * value: "DEPENDENT_ON_SEASON"
     * @const
     */
    "DEPENDENT_ON_SEASON": "DEPENDENT_ON_SEASON",

    /**
     * value: "DEPENDENT_ON_DAY_OF_WEEK"
     * @const
     */
    "DEPENDENT_ON_DAY_OF_WEEK": "DEPENDENT_ON_DAY_OF_WEEK"
};



export default LanguageSpoken;

