/**
 * My Business Lodging API
 * The My Business Lodging API enables managing lodging business information on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GuestUnitFeatures from './GuestUnitFeatures';

/**
 * The GuestUnitType model module.
 * @module model/GuestUnitType
 * @version v1
 */
class GuestUnitType {
    /**
     * Constructs a new <code>GuestUnitType</code>.
     * A specific type of unit primarily defined by its features.
     * @alias module:model/GuestUnitType
     */
    constructor() { 
        
        GuestUnitType.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GuestUnitType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GuestUnitType} obj Optional instance to populate.
     * @return {module:model/GuestUnitType} The populated <code>GuestUnitType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GuestUnitType();

            if (data.hasOwnProperty('codes')) {
                obj['codes'] = ApiClient.convertToType(data['codes'], ['String']);
            }
            if (data.hasOwnProperty('features')) {
                obj['features'] = GuestUnitFeatures.constructFromObject(data['features']);
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GuestUnitType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GuestUnitType</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['codes'])) {
            throw new Error("Expected the field `codes` to be an array in the JSON data but got " + data['codes']);
        }
        // validate the optional field `features`
        if (data['features']) { // data not null
          GuestUnitFeatures.validateJSON(data['features']);
        }
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }

        return true;
    }


}



/**
 * Required. Unit or room code identifiers for a single GuestUnitType. Each code must be unique within a Lodging instance.
 * @member {Array.<String>} codes
 */
GuestUnitType.prototype['codes'] = undefined;

/**
 * @member {module:model/GuestUnitFeatures} features
 */
GuestUnitType.prototype['features'] = undefined;

/**
 * Required. Short, English label or name of the GuestUnitType. Target <50 chars.
 * @member {String} label
 */
GuestUnitType.prototype['label'] = undefined;






export default GuestUnitType;

