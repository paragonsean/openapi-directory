/**
 * My Business Lodging API
 * The My Business Lodging API enables managing lodging business information on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EcoCertification from './EcoCertification';

/**
 * The SustainabilityCertifications model module.
 * @module model/SustainabilityCertifications
 * @version v1
 */
class SustainabilityCertifications {
    /**
     * Constructs a new <code>SustainabilityCertifications</code>.
     * Sustainability certifications the hotel has been awarded. Deprecated: this message is no longer populated. All certification data is now provided by BeCause.
     * @alias module:model/SustainabilityCertifications
     */
    constructor() { 
        
        SustainabilityCertifications.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SustainabilityCertifications</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SustainabilityCertifications} obj Optional instance to populate.
     * @return {module:model/SustainabilityCertifications} The populated <code>SustainabilityCertifications</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SustainabilityCertifications();

            if (data.hasOwnProperty('breeamCertification')) {
                obj['breeamCertification'] = ApiClient.convertToType(data['breeamCertification'], 'String');
            }
            if (data.hasOwnProperty('breeamCertificationException')) {
                obj['breeamCertificationException'] = ApiClient.convertToType(data['breeamCertificationException'], 'String');
            }
            if (data.hasOwnProperty('ecoCertifications')) {
                obj['ecoCertifications'] = ApiClient.convertToType(data['ecoCertifications'], [EcoCertification]);
            }
            if (data.hasOwnProperty('leedCertification')) {
                obj['leedCertification'] = ApiClient.convertToType(data['leedCertification'], 'String');
            }
            if (data.hasOwnProperty('leedCertificationException')) {
                obj['leedCertificationException'] = ApiClient.convertToType(data['leedCertificationException'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SustainabilityCertifications</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SustainabilityCertifications</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['breeamCertification'] && !(typeof data['breeamCertification'] === 'string' || data['breeamCertification'] instanceof String)) {
            throw new Error("Expected the field `breeamCertification` to be a primitive type in the JSON string but got " + data['breeamCertification']);
        }
        // ensure the json data is a string
        if (data['breeamCertificationException'] && !(typeof data['breeamCertificationException'] === 'string' || data['breeamCertificationException'] instanceof String)) {
            throw new Error("Expected the field `breeamCertificationException` to be a primitive type in the JSON string but got " + data['breeamCertificationException']);
        }
        if (data['ecoCertifications']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ecoCertifications'])) {
                throw new Error("Expected the field `ecoCertifications` to be an array in the JSON data but got " + data['ecoCertifications']);
            }
            // validate the optional field `ecoCertifications` (array)
            for (const item of data['ecoCertifications']) {
                EcoCertification.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['leedCertification'] && !(typeof data['leedCertification'] === 'string' || data['leedCertification'] instanceof String)) {
            throw new Error("Expected the field `leedCertification` to be a primitive type in the JSON string but got " + data['leedCertification']);
        }
        // ensure the json data is a string
        if (data['leedCertificationException'] && !(typeof data['leedCertificationException'] === 'string' || data['leedCertificationException'] instanceof String)) {
            throw new Error("Expected the field `leedCertificationException` to be a primitive type in the JSON string but got " + data['leedCertificationException']);
        }

        return true;
    }


}



/**
 * BREEAM certification.
 * @member {module:model/SustainabilityCertifications.BreeamCertificationEnum} breeamCertification
 */
SustainabilityCertifications.prototype['breeamCertification'] = undefined;

/**
 * BREEAM certification exception.
 * @member {module:model/SustainabilityCertifications.BreeamCertificationExceptionEnum} breeamCertificationException
 */
SustainabilityCertifications.prototype['breeamCertificationException'] = undefined;

/**
 * The eco certificates awarded to the hotel.
 * @member {Array.<module:model/EcoCertification>} ecoCertifications
 */
SustainabilityCertifications.prototype['ecoCertifications'] = undefined;

/**
 * LEED certification.
 * @member {module:model/SustainabilityCertifications.LeedCertificationEnum} leedCertification
 */
SustainabilityCertifications.prototype['leedCertification'] = undefined;

/**
 * LEED certification exception.
 * @member {module:model/SustainabilityCertifications.LeedCertificationExceptionEnum} leedCertificationException
 */
SustainabilityCertifications.prototype['leedCertificationException'] = undefined;





/**
 * Allowed values for the <code>breeamCertification</code> property.
 * @enum {String}
 * @readonly
 */
SustainabilityCertifications['BreeamCertificationEnum'] = {

    /**
     * value: "BREEAM_CERTIFICATION_UNSPECIFIED"
     * @const
     */
    "BREEAM_CERTIFICATION_UNSPECIFIED": "BREEAM_CERTIFICATION_UNSPECIFIED",

    /**
     * value: "NO_BREEAM_CERTIFICATION"
     * @const
     */
    "NO_BREEAM_CERTIFICATION": "NO_BREEAM_CERTIFICATION",

    /**
     * value: "BREEAM_PASS"
     * @const
     */
    "BREEAM_PASS": "BREEAM_PASS",

    /**
     * value: "BREEAM_GOOD"
     * @const
     */
    "BREEAM_GOOD": "BREEAM_GOOD",

    /**
     * value: "BREEAM_VERY_GOOD"
     * @const
     */
    "BREEAM_VERY_GOOD": "BREEAM_VERY_GOOD",

    /**
     * value: "BREEAM_EXCELLENT"
     * @const
     */
    "BREEAM_EXCELLENT": "BREEAM_EXCELLENT",

    /**
     * value: "BREEAM_OUTSTANDING"
     * @const
     */
    "BREEAM_OUTSTANDING": "BREEAM_OUTSTANDING"
};


/**
 * Allowed values for the <code>breeamCertificationException</code> property.
 * @enum {String}
 * @readonly
 */
SustainabilityCertifications['BreeamCertificationExceptionEnum'] = {

    /**
     * value: "EXCEPTION_UNSPECIFIED"
     * @const
     */
    "EXCEPTION_UNSPECIFIED": "EXCEPTION_UNSPECIFIED",

    /**
     * value: "UNDER_CONSTRUCTION"
     * @const
     */
    "UNDER_CONSTRUCTION": "UNDER_CONSTRUCTION",

    /**
     * value: "DEPENDENT_ON_SEASON"
     * @const
     */
    "DEPENDENT_ON_SEASON": "DEPENDENT_ON_SEASON",

    /**
     * value: "DEPENDENT_ON_DAY_OF_WEEK"
     * @const
     */
    "DEPENDENT_ON_DAY_OF_WEEK": "DEPENDENT_ON_DAY_OF_WEEK"
};


/**
 * Allowed values for the <code>leedCertification</code> property.
 * @enum {String}
 * @readonly
 */
SustainabilityCertifications['LeedCertificationEnum'] = {

    /**
     * value: "LEED_CERTIFICATION_UNSPECIFIED"
     * @const
     */
    "LEED_CERTIFICATION_UNSPECIFIED": "LEED_CERTIFICATION_UNSPECIFIED",

    /**
     * value: "NO_LEED_CERTIFICATION"
     * @const
     */
    "NO_LEED_CERTIFICATION": "NO_LEED_CERTIFICATION",

    /**
     * value: "LEED_CERTIFIED"
     * @const
     */
    "LEED_CERTIFIED": "LEED_CERTIFIED",

    /**
     * value: "LEED_SILVER"
     * @const
     */
    "LEED_SILVER": "LEED_SILVER",

    /**
     * value: "LEED_GOLD"
     * @const
     */
    "LEED_GOLD": "LEED_GOLD",

    /**
     * value: "LEED_PLATINUM"
     * @const
     */
    "LEED_PLATINUM": "LEED_PLATINUM"
};


/**
 * Allowed values for the <code>leedCertificationException</code> property.
 * @enum {String}
 * @readonly
 */
SustainabilityCertifications['LeedCertificationExceptionEnum'] = {

    /**
     * value: "EXCEPTION_UNSPECIFIED"
     * @const
     */
    "EXCEPTION_UNSPECIFIED": "EXCEPTION_UNSPECIFIED",

    /**
     * value: "UNDER_CONSTRUCTION"
     * @const
     */
    "UNDER_CONSTRUCTION": "UNDER_CONSTRUCTION",

    /**
     * value: "DEPENDENT_ON_SEASON"
     * @const
     */
    "DEPENDENT_ON_SEASON": "DEPENDENT_ON_SEASON",

    /**
     * value: "DEPENDENT_ON_DAY_OF_WEEK"
     * @const
     */
    "DEPENDENT_ON_DAY_OF_WEEK": "DEPENDENT_ON_DAY_OF_WEEK"
};



export default SustainabilityCertifications;

