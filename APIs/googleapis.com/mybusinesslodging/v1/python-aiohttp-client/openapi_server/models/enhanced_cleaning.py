# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EnhancedCleaning(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, commercial_grade_disinfectant_cleaning: bool=None, commercial_grade_disinfectant_cleaning_exception: str=None, common_areas_enhanced_cleaning: bool=None, common_areas_enhanced_cleaning_exception: str=None, employees_trained_cleaning_procedures: bool=None, employees_trained_cleaning_procedures_exception: str=None, employees_trained_thorough_hand_washing: bool=None, employees_trained_thorough_hand_washing_exception: str=None, employees_wear_protective_equipment: bool=None, employees_wear_protective_equipment_exception: str=None, guest_rooms_enhanced_cleaning: bool=None, guest_rooms_enhanced_cleaning_exception: str=None):
        """EnhancedCleaning - a model defined in OpenAPI

        :param commercial_grade_disinfectant_cleaning: The commercial_grade_disinfectant_cleaning of this EnhancedCleaning.
        :param commercial_grade_disinfectant_cleaning_exception: The commercial_grade_disinfectant_cleaning_exception of this EnhancedCleaning.
        :param common_areas_enhanced_cleaning: The common_areas_enhanced_cleaning of this EnhancedCleaning.
        :param common_areas_enhanced_cleaning_exception: The common_areas_enhanced_cleaning_exception of this EnhancedCleaning.
        :param employees_trained_cleaning_procedures: The employees_trained_cleaning_procedures of this EnhancedCleaning.
        :param employees_trained_cleaning_procedures_exception: The employees_trained_cleaning_procedures_exception of this EnhancedCleaning.
        :param employees_trained_thorough_hand_washing: The employees_trained_thorough_hand_washing of this EnhancedCleaning.
        :param employees_trained_thorough_hand_washing_exception: The employees_trained_thorough_hand_washing_exception of this EnhancedCleaning.
        :param employees_wear_protective_equipment: The employees_wear_protective_equipment of this EnhancedCleaning.
        :param employees_wear_protective_equipment_exception: The employees_wear_protective_equipment_exception of this EnhancedCleaning.
        :param guest_rooms_enhanced_cleaning: The guest_rooms_enhanced_cleaning of this EnhancedCleaning.
        :param guest_rooms_enhanced_cleaning_exception: The guest_rooms_enhanced_cleaning_exception of this EnhancedCleaning.
        """
        self.openapi_types = {
            'commercial_grade_disinfectant_cleaning': bool,
            'commercial_grade_disinfectant_cleaning_exception': str,
            'common_areas_enhanced_cleaning': bool,
            'common_areas_enhanced_cleaning_exception': str,
            'employees_trained_cleaning_procedures': bool,
            'employees_trained_cleaning_procedures_exception': str,
            'employees_trained_thorough_hand_washing': bool,
            'employees_trained_thorough_hand_washing_exception': str,
            'employees_wear_protective_equipment': bool,
            'employees_wear_protective_equipment_exception': str,
            'guest_rooms_enhanced_cleaning': bool,
            'guest_rooms_enhanced_cleaning_exception': str
        }

        self.attribute_map = {
            'commercial_grade_disinfectant_cleaning': 'commercialGradeDisinfectantCleaning',
            'commercial_grade_disinfectant_cleaning_exception': 'commercialGradeDisinfectantCleaningException',
            'common_areas_enhanced_cleaning': 'commonAreasEnhancedCleaning',
            'common_areas_enhanced_cleaning_exception': 'commonAreasEnhancedCleaningException',
            'employees_trained_cleaning_procedures': 'employeesTrainedCleaningProcedures',
            'employees_trained_cleaning_procedures_exception': 'employeesTrainedCleaningProceduresException',
            'employees_trained_thorough_hand_washing': 'employeesTrainedThoroughHandWashing',
            'employees_trained_thorough_hand_washing_exception': 'employeesTrainedThoroughHandWashingException',
            'employees_wear_protective_equipment': 'employeesWearProtectiveEquipment',
            'employees_wear_protective_equipment_exception': 'employeesWearProtectiveEquipmentException',
            'guest_rooms_enhanced_cleaning': 'guestRoomsEnhancedCleaning',
            'guest_rooms_enhanced_cleaning_exception': 'guestRoomsEnhancedCleaningException'
        }

        self._commercial_grade_disinfectant_cleaning = commercial_grade_disinfectant_cleaning
        self._commercial_grade_disinfectant_cleaning_exception = commercial_grade_disinfectant_cleaning_exception
        self._common_areas_enhanced_cleaning = common_areas_enhanced_cleaning
        self._common_areas_enhanced_cleaning_exception = common_areas_enhanced_cleaning_exception
        self._employees_trained_cleaning_procedures = employees_trained_cleaning_procedures
        self._employees_trained_cleaning_procedures_exception = employees_trained_cleaning_procedures_exception
        self._employees_trained_thorough_hand_washing = employees_trained_thorough_hand_washing
        self._employees_trained_thorough_hand_washing_exception = employees_trained_thorough_hand_washing_exception
        self._employees_wear_protective_equipment = employees_wear_protective_equipment
        self._employees_wear_protective_equipment_exception = employees_wear_protective_equipment_exception
        self._guest_rooms_enhanced_cleaning = guest_rooms_enhanced_cleaning
        self._guest_rooms_enhanced_cleaning_exception = guest_rooms_enhanced_cleaning_exception

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnhancedCleaning':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnhancedCleaning of this EnhancedCleaning.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def commercial_grade_disinfectant_cleaning(self):
        """Gets the commercial_grade_disinfectant_cleaning of this EnhancedCleaning.

        Commercial-grade disinfectant used to clean the property.

        :return: The commercial_grade_disinfectant_cleaning of this EnhancedCleaning.
        :rtype: bool
        """
        return self._commercial_grade_disinfectant_cleaning

    @commercial_grade_disinfectant_cleaning.setter
    def commercial_grade_disinfectant_cleaning(self, commercial_grade_disinfectant_cleaning):
        """Sets the commercial_grade_disinfectant_cleaning of this EnhancedCleaning.

        Commercial-grade disinfectant used to clean the property.

        :param commercial_grade_disinfectant_cleaning: The commercial_grade_disinfectant_cleaning of this EnhancedCleaning.
        :type commercial_grade_disinfectant_cleaning: bool
        """

        self._commercial_grade_disinfectant_cleaning = commercial_grade_disinfectant_cleaning

    @property
    def commercial_grade_disinfectant_cleaning_exception(self):
        """Gets the commercial_grade_disinfectant_cleaning_exception of this EnhancedCleaning.

        Commercial grade disinfectant cleaning exception.

        :return: The commercial_grade_disinfectant_cleaning_exception of this EnhancedCleaning.
        :rtype: str
        """
        return self._commercial_grade_disinfectant_cleaning_exception

    @commercial_grade_disinfectant_cleaning_exception.setter
    def commercial_grade_disinfectant_cleaning_exception(self, commercial_grade_disinfectant_cleaning_exception):
        """Sets the commercial_grade_disinfectant_cleaning_exception of this EnhancedCleaning.

        Commercial grade disinfectant cleaning exception.

        :param commercial_grade_disinfectant_cleaning_exception: The commercial_grade_disinfectant_cleaning_exception of this EnhancedCleaning.
        :type commercial_grade_disinfectant_cleaning_exception: str
        """
        allowed_values = ["EXCEPTION_UNSPECIFIED", "UNDER_CONSTRUCTION", "DEPENDENT_ON_SEASON", "DEPENDENT_ON_DAY_OF_WEEK"]  # noqa: E501
        if commercial_grade_disinfectant_cleaning_exception not in allowed_values:
            raise ValueError(
                "Invalid value for `commercial_grade_disinfectant_cleaning_exception` ({0}), must be one of {1}"
                .format(commercial_grade_disinfectant_cleaning_exception, allowed_values)
            )

        self._commercial_grade_disinfectant_cleaning_exception = commercial_grade_disinfectant_cleaning_exception

    @property
    def common_areas_enhanced_cleaning(self):
        """Gets the common_areas_enhanced_cleaning of this EnhancedCleaning.

        Enhanced cleaning of common areas.

        :return: The common_areas_enhanced_cleaning of this EnhancedCleaning.
        :rtype: bool
        """
        return self._common_areas_enhanced_cleaning

    @common_areas_enhanced_cleaning.setter
    def common_areas_enhanced_cleaning(self, common_areas_enhanced_cleaning):
        """Sets the common_areas_enhanced_cleaning of this EnhancedCleaning.

        Enhanced cleaning of common areas.

        :param common_areas_enhanced_cleaning: The common_areas_enhanced_cleaning of this EnhancedCleaning.
        :type common_areas_enhanced_cleaning: bool
        """

        self._common_areas_enhanced_cleaning = common_areas_enhanced_cleaning

    @property
    def common_areas_enhanced_cleaning_exception(self):
        """Gets the common_areas_enhanced_cleaning_exception of this EnhancedCleaning.

        Common areas enhanced cleaning exception.

        :return: The common_areas_enhanced_cleaning_exception of this EnhancedCleaning.
        :rtype: str
        """
        return self._common_areas_enhanced_cleaning_exception

    @common_areas_enhanced_cleaning_exception.setter
    def common_areas_enhanced_cleaning_exception(self, common_areas_enhanced_cleaning_exception):
        """Sets the common_areas_enhanced_cleaning_exception of this EnhancedCleaning.

        Common areas enhanced cleaning exception.

        :param common_areas_enhanced_cleaning_exception: The common_areas_enhanced_cleaning_exception of this EnhancedCleaning.
        :type common_areas_enhanced_cleaning_exception: str
        """
        allowed_values = ["EXCEPTION_UNSPECIFIED", "UNDER_CONSTRUCTION", "DEPENDENT_ON_SEASON", "DEPENDENT_ON_DAY_OF_WEEK"]  # noqa: E501
        if common_areas_enhanced_cleaning_exception not in allowed_values:
            raise ValueError(
                "Invalid value for `common_areas_enhanced_cleaning_exception` ({0}), must be one of {1}"
                .format(common_areas_enhanced_cleaning_exception, allowed_values)
            )

        self._common_areas_enhanced_cleaning_exception = common_areas_enhanced_cleaning_exception

    @property
    def employees_trained_cleaning_procedures(self):
        """Gets the employees_trained_cleaning_procedures of this EnhancedCleaning.

        Employees trained in COVID-19 cleaning procedures.

        :return: The employees_trained_cleaning_procedures of this EnhancedCleaning.
        :rtype: bool
        """
        return self._employees_trained_cleaning_procedures

    @employees_trained_cleaning_procedures.setter
    def employees_trained_cleaning_procedures(self, employees_trained_cleaning_procedures):
        """Sets the employees_trained_cleaning_procedures of this EnhancedCleaning.

        Employees trained in COVID-19 cleaning procedures.

        :param employees_trained_cleaning_procedures: The employees_trained_cleaning_procedures of this EnhancedCleaning.
        :type employees_trained_cleaning_procedures: bool
        """

        self._employees_trained_cleaning_procedures = employees_trained_cleaning_procedures

    @property
    def employees_trained_cleaning_procedures_exception(self):
        """Gets the employees_trained_cleaning_procedures_exception of this EnhancedCleaning.

        Employees trained cleaning procedures exception.

        :return: The employees_trained_cleaning_procedures_exception of this EnhancedCleaning.
        :rtype: str
        """
        return self._employees_trained_cleaning_procedures_exception

    @employees_trained_cleaning_procedures_exception.setter
    def employees_trained_cleaning_procedures_exception(self, employees_trained_cleaning_procedures_exception):
        """Sets the employees_trained_cleaning_procedures_exception of this EnhancedCleaning.

        Employees trained cleaning procedures exception.

        :param employees_trained_cleaning_procedures_exception: The employees_trained_cleaning_procedures_exception of this EnhancedCleaning.
        :type employees_trained_cleaning_procedures_exception: str
        """
        allowed_values = ["EXCEPTION_UNSPECIFIED", "UNDER_CONSTRUCTION", "DEPENDENT_ON_SEASON", "DEPENDENT_ON_DAY_OF_WEEK"]  # noqa: E501
        if employees_trained_cleaning_procedures_exception not in allowed_values:
            raise ValueError(
                "Invalid value for `employees_trained_cleaning_procedures_exception` ({0}), must be one of {1}"
                .format(employees_trained_cleaning_procedures_exception, allowed_values)
            )

        self._employees_trained_cleaning_procedures_exception = employees_trained_cleaning_procedures_exception

    @property
    def employees_trained_thorough_hand_washing(self):
        """Gets the employees_trained_thorough_hand_washing of this EnhancedCleaning.

        Employees trained in thorough hand-washing.

        :return: The employees_trained_thorough_hand_washing of this EnhancedCleaning.
        :rtype: bool
        """
        return self._employees_trained_thorough_hand_washing

    @employees_trained_thorough_hand_washing.setter
    def employees_trained_thorough_hand_washing(self, employees_trained_thorough_hand_washing):
        """Sets the employees_trained_thorough_hand_washing of this EnhancedCleaning.

        Employees trained in thorough hand-washing.

        :param employees_trained_thorough_hand_washing: The employees_trained_thorough_hand_washing of this EnhancedCleaning.
        :type employees_trained_thorough_hand_washing: bool
        """

        self._employees_trained_thorough_hand_washing = employees_trained_thorough_hand_washing

    @property
    def employees_trained_thorough_hand_washing_exception(self):
        """Gets the employees_trained_thorough_hand_washing_exception of this EnhancedCleaning.

        Employees trained thorough hand washing exception.

        :return: The employees_trained_thorough_hand_washing_exception of this EnhancedCleaning.
        :rtype: str
        """
        return self._employees_trained_thorough_hand_washing_exception

    @employees_trained_thorough_hand_washing_exception.setter
    def employees_trained_thorough_hand_washing_exception(self, employees_trained_thorough_hand_washing_exception):
        """Sets the employees_trained_thorough_hand_washing_exception of this EnhancedCleaning.

        Employees trained thorough hand washing exception.

        :param employees_trained_thorough_hand_washing_exception: The employees_trained_thorough_hand_washing_exception of this EnhancedCleaning.
        :type employees_trained_thorough_hand_washing_exception: str
        """
        allowed_values = ["EXCEPTION_UNSPECIFIED", "UNDER_CONSTRUCTION", "DEPENDENT_ON_SEASON", "DEPENDENT_ON_DAY_OF_WEEK"]  # noqa: E501
        if employees_trained_thorough_hand_washing_exception not in allowed_values:
            raise ValueError(
                "Invalid value for `employees_trained_thorough_hand_washing_exception` ({0}), must be one of {1}"
                .format(employees_trained_thorough_hand_washing_exception, allowed_values)
            )

        self._employees_trained_thorough_hand_washing_exception = employees_trained_thorough_hand_washing_exception

    @property
    def employees_wear_protective_equipment(self):
        """Gets the employees_wear_protective_equipment of this EnhancedCleaning.

        Employees wear masks, face shields, and/or gloves.

        :return: The employees_wear_protective_equipment of this EnhancedCleaning.
        :rtype: bool
        """
        return self._employees_wear_protective_equipment

    @employees_wear_protective_equipment.setter
    def employees_wear_protective_equipment(self, employees_wear_protective_equipment):
        """Sets the employees_wear_protective_equipment of this EnhancedCleaning.

        Employees wear masks, face shields, and/or gloves.

        :param employees_wear_protective_equipment: The employees_wear_protective_equipment of this EnhancedCleaning.
        :type employees_wear_protective_equipment: bool
        """

        self._employees_wear_protective_equipment = employees_wear_protective_equipment

    @property
    def employees_wear_protective_equipment_exception(self):
        """Gets the employees_wear_protective_equipment_exception of this EnhancedCleaning.

        Employees wear protective equipment exception.

        :return: The employees_wear_protective_equipment_exception of this EnhancedCleaning.
        :rtype: str
        """
        return self._employees_wear_protective_equipment_exception

    @employees_wear_protective_equipment_exception.setter
    def employees_wear_protective_equipment_exception(self, employees_wear_protective_equipment_exception):
        """Sets the employees_wear_protective_equipment_exception of this EnhancedCleaning.

        Employees wear protective equipment exception.

        :param employees_wear_protective_equipment_exception: The employees_wear_protective_equipment_exception of this EnhancedCleaning.
        :type employees_wear_protective_equipment_exception: str
        """
        allowed_values = ["EXCEPTION_UNSPECIFIED", "UNDER_CONSTRUCTION", "DEPENDENT_ON_SEASON", "DEPENDENT_ON_DAY_OF_WEEK"]  # noqa: E501
        if employees_wear_protective_equipment_exception not in allowed_values:
            raise ValueError(
                "Invalid value for `employees_wear_protective_equipment_exception` ({0}), must be one of {1}"
                .format(employees_wear_protective_equipment_exception, allowed_values)
            )

        self._employees_wear_protective_equipment_exception = employees_wear_protective_equipment_exception

    @property
    def guest_rooms_enhanced_cleaning(self):
        """Gets the guest_rooms_enhanced_cleaning of this EnhancedCleaning.

        Enhanced cleaning of guest rooms.

        :return: The guest_rooms_enhanced_cleaning of this EnhancedCleaning.
        :rtype: bool
        """
        return self._guest_rooms_enhanced_cleaning

    @guest_rooms_enhanced_cleaning.setter
    def guest_rooms_enhanced_cleaning(self, guest_rooms_enhanced_cleaning):
        """Sets the guest_rooms_enhanced_cleaning of this EnhancedCleaning.

        Enhanced cleaning of guest rooms.

        :param guest_rooms_enhanced_cleaning: The guest_rooms_enhanced_cleaning of this EnhancedCleaning.
        :type guest_rooms_enhanced_cleaning: bool
        """

        self._guest_rooms_enhanced_cleaning = guest_rooms_enhanced_cleaning

    @property
    def guest_rooms_enhanced_cleaning_exception(self):
        """Gets the guest_rooms_enhanced_cleaning_exception of this EnhancedCleaning.

        Guest rooms enhanced cleaning exception.

        :return: The guest_rooms_enhanced_cleaning_exception of this EnhancedCleaning.
        :rtype: str
        """
        return self._guest_rooms_enhanced_cleaning_exception

    @guest_rooms_enhanced_cleaning_exception.setter
    def guest_rooms_enhanced_cleaning_exception(self, guest_rooms_enhanced_cleaning_exception):
        """Sets the guest_rooms_enhanced_cleaning_exception of this EnhancedCleaning.

        Guest rooms enhanced cleaning exception.

        :param guest_rooms_enhanced_cleaning_exception: The guest_rooms_enhanced_cleaning_exception of this EnhancedCleaning.
        :type guest_rooms_enhanced_cleaning_exception: str
        """
        allowed_values = ["EXCEPTION_UNSPECIFIED", "UNDER_CONSTRUCTION", "DEPENDENT_ON_SEASON", "DEPENDENT_ON_DAY_OF_WEEK"]  # noqa: E501
        if guest_rooms_enhanced_cleaning_exception not in allowed_values:
            raise ValueError(
                "Invalid value for `guest_rooms_enhanced_cleaning_exception` ({0}), must be one of {1}"
                .format(guest_rooms_enhanced_cleaning_exception, allowed_values)
            )

        self._guest_rooms_enhanced_cleaning_exception = guest_rooms_enhanced_cleaning_exception
