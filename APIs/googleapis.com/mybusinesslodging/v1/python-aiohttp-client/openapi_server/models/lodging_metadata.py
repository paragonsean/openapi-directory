# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LodgingMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, update_time: str=None):
        """LodgingMetadata - a model defined in OpenAPI

        :param update_time: The update_time of this LodgingMetadata.
        """
        self.openapi_types = {
            'update_time': str
        }

        self.attribute_map = {
            'update_time': 'updateTime'
        }

        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LodgingMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LodgingMetadata of this LodgingMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def update_time(self):
        """Gets the update_time of this LodgingMetadata.

        Required. The latest time at which the Lodging data is asserted to be true in the real world. This is not necessarily the time at which the request is made.

        :return: The update_time of this LodgingMetadata.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this LodgingMetadata.

        Required. The latest time at which the Lodging data is asserted to be true in the real world. This is not necessarily the time at which the request is made.

        :param update_time: The update_time of this LodgingMetadata.
        :type update_time: str
        """

        self._update_time = update_time
