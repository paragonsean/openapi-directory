/*
 * My Business Lodging API
 * The My Business Lodging API enables managing lodging business information on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Accessibility;
import org.openapitools.client.model.Activities;
import org.openapitools.client.model.Business;
import org.openapitools.client.model.Connectivity;
import org.openapitools.client.model.Families;
import org.openapitools.client.model.FoodAndDrink;
import org.openapitools.client.model.GuestUnitFeatures;
import org.openapitools.client.model.GuestUnitType;
import org.openapitools.client.model.HealthAndSafety;
import org.openapitools.client.model.Housekeeping;
import org.openapitools.client.model.LivingArea;
import org.openapitools.client.model.LodgingMetadata;
import org.openapitools.client.model.Parking;
import org.openapitools.client.model.Pets;
import org.openapitools.client.model.Policies;
import org.openapitools.client.model.Pools;
import org.openapitools.client.model.Property;
import org.openapitools.client.model.Services;
import org.openapitools.client.model.Sustainability;
import org.openapitools.client.model.Transportation;
import org.openapitools.client.model.Wellness;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Lodging of a location that provides accomodations.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:48:19.182361-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Lodging {
  public static final String SERIALIZED_NAME_ACCESSIBILITY = "accessibility";
  @SerializedName(SERIALIZED_NAME_ACCESSIBILITY)
  private Accessibility accessibility;

  public static final String SERIALIZED_NAME_ACTIVITIES = "activities";
  @SerializedName(SERIALIZED_NAME_ACTIVITIES)
  private Activities activities;

  public static final String SERIALIZED_NAME_ALL_UNITS = "allUnits";
  @SerializedName(SERIALIZED_NAME_ALL_UNITS)
  private GuestUnitFeatures allUnits;

  public static final String SERIALIZED_NAME_BUSINESS = "business";
  @SerializedName(SERIALIZED_NAME_BUSINESS)
  private Business business;

  public static final String SERIALIZED_NAME_COMMON_LIVING_AREA = "commonLivingArea";
  @SerializedName(SERIALIZED_NAME_COMMON_LIVING_AREA)
  private LivingArea commonLivingArea;

  public static final String SERIALIZED_NAME_CONNECTIVITY = "connectivity";
  @SerializedName(SERIALIZED_NAME_CONNECTIVITY)
  private Connectivity connectivity;

  public static final String SERIALIZED_NAME_FAMILIES = "families";
  @SerializedName(SERIALIZED_NAME_FAMILIES)
  private Families families;

  public static final String SERIALIZED_NAME_FOOD_AND_DRINK = "foodAndDrink";
  @SerializedName(SERIALIZED_NAME_FOOD_AND_DRINK)
  private FoodAndDrink foodAndDrink;

  public static final String SERIALIZED_NAME_GUEST_UNITS = "guestUnits";
  @SerializedName(SERIALIZED_NAME_GUEST_UNITS)
  private List<GuestUnitType> guestUnits = new ArrayList<>();

  public static final String SERIALIZED_NAME_HEALTH_AND_SAFETY = "healthAndSafety";
  @SerializedName(SERIALIZED_NAME_HEALTH_AND_SAFETY)
  private HealthAndSafety healthAndSafety;

  public static final String SERIALIZED_NAME_HOUSEKEEPING = "housekeeping";
  @SerializedName(SERIALIZED_NAME_HOUSEKEEPING)
  private Housekeeping housekeeping;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private LodgingMetadata metadata;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PARKING = "parking";
  @SerializedName(SERIALIZED_NAME_PARKING)
  private Parking parking;

  public static final String SERIALIZED_NAME_PETS = "pets";
  @SerializedName(SERIALIZED_NAME_PETS)
  private Pets pets;

  public static final String SERIALIZED_NAME_POLICIES = "policies";
  @SerializedName(SERIALIZED_NAME_POLICIES)
  private Policies policies;

  public static final String SERIALIZED_NAME_POOLS = "pools";
  @SerializedName(SERIALIZED_NAME_POOLS)
  private Pools pools;

  public static final String SERIALIZED_NAME_PROPERTY = "property";
  @SerializedName(SERIALIZED_NAME_PROPERTY)
  private Property property;

  public static final String SERIALIZED_NAME_SERVICES = "services";
  @SerializedName(SERIALIZED_NAME_SERVICES)
  private Services services;

  public static final String SERIALIZED_NAME_SOME_UNITS = "someUnits";
  @SerializedName(SERIALIZED_NAME_SOME_UNITS)
  private GuestUnitFeatures someUnits;

  public static final String SERIALIZED_NAME_SUSTAINABILITY = "sustainability";
  @SerializedName(SERIALIZED_NAME_SUSTAINABILITY)
  private Sustainability sustainability;

  public static final String SERIALIZED_NAME_TRANSPORTATION = "transportation";
  @SerializedName(SERIALIZED_NAME_TRANSPORTATION)
  private Transportation transportation;

  public static final String SERIALIZED_NAME_WELLNESS = "wellness";
  @SerializedName(SERIALIZED_NAME_WELLNESS)
  private Wellness wellness;

  public Lodging() {
  }

  public Lodging accessibility(Accessibility accessibility) {
    this.accessibility = accessibility;
    return this;
  }

  /**
   * Get accessibility
   * @return accessibility
   */
  @javax.annotation.Nullable
  public Accessibility getAccessibility() {
    return accessibility;
  }

  public void setAccessibility(Accessibility accessibility) {
    this.accessibility = accessibility;
  }


  public Lodging activities(Activities activities) {
    this.activities = activities;
    return this;
  }

  /**
   * Get activities
   * @return activities
   */
  @javax.annotation.Nullable
  public Activities getActivities() {
    return activities;
  }

  public void setActivities(Activities activities) {
    this.activities = activities;
  }


  public Lodging allUnits(GuestUnitFeatures allUnits) {
    this.allUnits = allUnits;
    return this;
  }

  /**
   * Get allUnits
   * @return allUnits
   */
  @javax.annotation.Nullable
  public GuestUnitFeatures getAllUnits() {
    return allUnits;
  }

  public void setAllUnits(GuestUnitFeatures allUnits) {
    this.allUnits = allUnits;
  }


  public Lodging business(Business business) {
    this.business = business;
    return this;
  }

  /**
   * Get business
   * @return business
   */
  @javax.annotation.Nullable
  public Business getBusiness() {
    return business;
  }

  public void setBusiness(Business business) {
    this.business = business;
  }


  public Lodging commonLivingArea(LivingArea commonLivingArea) {
    this.commonLivingArea = commonLivingArea;
    return this;
  }

  /**
   * Get commonLivingArea
   * @return commonLivingArea
   */
  @javax.annotation.Nullable
  public LivingArea getCommonLivingArea() {
    return commonLivingArea;
  }

  public void setCommonLivingArea(LivingArea commonLivingArea) {
    this.commonLivingArea = commonLivingArea;
  }


  public Lodging connectivity(Connectivity connectivity) {
    this.connectivity = connectivity;
    return this;
  }

  /**
   * Get connectivity
   * @return connectivity
   */
  @javax.annotation.Nullable
  public Connectivity getConnectivity() {
    return connectivity;
  }

  public void setConnectivity(Connectivity connectivity) {
    this.connectivity = connectivity;
  }


  public Lodging families(Families families) {
    this.families = families;
    return this;
  }

  /**
   * Get families
   * @return families
   */
  @javax.annotation.Nullable
  public Families getFamilies() {
    return families;
  }

  public void setFamilies(Families families) {
    this.families = families;
  }


  public Lodging foodAndDrink(FoodAndDrink foodAndDrink) {
    this.foodAndDrink = foodAndDrink;
    return this;
  }

  /**
   * Get foodAndDrink
   * @return foodAndDrink
   */
  @javax.annotation.Nullable
  public FoodAndDrink getFoodAndDrink() {
    return foodAndDrink;
  }

  public void setFoodAndDrink(FoodAndDrink foodAndDrink) {
    this.foodAndDrink = foodAndDrink;
  }


  public Lodging guestUnits(List<GuestUnitType> guestUnits) {
    this.guestUnits = guestUnits;
    return this;
  }

  public Lodging addGuestUnitsItem(GuestUnitType guestUnitsItem) {
    if (this.guestUnits == null) {
      this.guestUnits = new ArrayList<>();
    }
    this.guestUnits.add(guestUnitsItem);
    return this;
  }

  /**
   * Individual GuestUnitTypes that are available in this Lodging.
   * @return guestUnits
   */
  @javax.annotation.Nullable
  public List<GuestUnitType> getGuestUnits() {
    return guestUnits;
  }

  public void setGuestUnits(List<GuestUnitType> guestUnits) {
    this.guestUnits = guestUnits;
  }


  public Lodging healthAndSafety(HealthAndSafety healthAndSafety) {
    this.healthAndSafety = healthAndSafety;
    return this;
  }

  /**
   * Get healthAndSafety
   * @return healthAndSafety
   */
  @javax.annotation.Nullable
  public HealthAndSafety getHealthAndSafety() {
    return healthAndSafety;
  }

  public void setHealthAndSafety(HealthAndSafety healthAndSafety) {
    this.healthAndSafety = healthAndSafety;
  }


  public Lodging housekeeping(Housekeeping housekeeping) {
    this.housekeeping = housekeeping;
    return this;
  }

  /**
   * Get housekeeping
   * @return housekeeping
   */
  @javax.annotation.Nullable
  public Housekeeping getHousekeeping() {
    return housekeeping;
  }

  public void setHousekeeping(Housekeeping housekeeping) {
    this.housekeeping = housekeeping;
  }


  public Lodging metadata(LodgingMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  public LodgingMetadata getMetadata() {
    return metadata;
  }

  public void setMetadata(LodgingMetadata metadata) {
    this.metadata = metadata;
  }


  public Lodging name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. Google identifier for this location in the form: &#x60;locations/{location_id}/lodging&#x60;
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Lodging parking(Parking parking) {
    this.parking = parking;
    return this;
  }

  /**
   * Get parking
   * @return parking
   */
  @javax.annotation.Nullable
  public Parking getParking() {
    return parking;
  }

  public void setParking(Parking parking) {
    this.parking = parking;
  }


  public Lodging pets(Pets pets) {
    this.pets = pets;
    return this;
  }

  /**
   * Get pets
   * @return pets
   */
  @javax.annotation.Nullable
  public Pets getPets() {
    return pets;
  }

  public void setPets(Pets pets) {
    this.pets = pets;
  }


  public Lodging policies(Policies policies) {
    this.policies = policies;
    return this;
  }

  /**
   * Get policies
   * @return policies
   */
  @javax.annotation.Nullable
  public Policies getPolicies() {
    return policies;
  }

  public void setPolicies(Policies policies) {
    this.policies = policies;
  }


  public Lodging pools(Pools pools) {
    this.pools = pools;
    return this;
  }

  /**
   * Get pools
   * @return pools
   */
  @javax.annotation.Nullable
  public Pools getPools() {
    return pools;
  }

  public void setPools(Pools pools) {
    this.pools = pools;
  }


  public Lodging property(Property property) {
    this.property = property;
    return this;
  }

  /**
   * Get property
   * @return property
   */
  @javax.annotation.Nullable
  public Property getProperty() {
    return property;
  }

  public void setProperty(Property property) {
    this.property = property;
  }


  public Lodging services(Services services) {
    this.services = services;
    return this;
  }

  /**
   * Get services
   * @return services
   */
  @javax.annotation.Nullable
  public Services getServices() {
    return services;
  }

  public void setServices(Services services) {
    this.services = services;
  }


  public Lodging someUnits(GuestUnitFeatures someUnits) {
    this.someUnits = someUnits;
    return this;
  }

  /**
   * Get someUnits
   * @return someUnits
   */
  @javax.annotation.Nullable
  public GuestUnitFeatures getSomeUnits() {
    return someUnits;
  }

  public void setSomeUnits(GuestUnitFeatures someUnits) {
    this.someUnits = someUnits;
  }


  public Lodging sustainability(Sustainability sustainability) {
    this.sustainability = sustainability;
    return this;
  }

  /**
   * Get sustainability
   * @return sustainability
   */
  @javax.annotation.Nullable
  public Sustainability getSustainability() {
    return sustainability;
  }

  public void setSustainability(Sustainability sustainability) {
    this.sustainability = sustainability;
  }


  public Lodging transportation(Transportation transportation) {
    this.transportation = transportation;
    return this;
  }

  /**
   * Get transportation
   * @return transportation
   */
  @javax.annotation.Nullable
  public Transportation getTransportation() {
    return transportation;
  }

  public void setTransportation(Transportation transportation) {
    this.transportation = transportation;
  }


  public Lodging wellness(Wellness wellness) {
    this.wellness = wellness;
    return this;
  }

  /**
   * Get wellness
   * @return wellness
   */
  @javax.annotation.Nullable
  public Wellness getWellness() {
    return wellness;
  }

  public void setWellness(Wellness wellness) {
    this.wellness = wellness;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Lodging lodging = (Lodging) o;
    return Objects.equals(this.accessibility, lodging.accessibility) &&
        Objects.equals(this.activities, lodging.activities) &&
        Objects.equals(this.allUnits, lodging.allUnits) &&
        Objects.equals(this.business, lodging.business) &&
        Objects.equals(this.commonLivingArea, lodging.commonLivingArea) &&
        Objects.equals(this.connectivity, lodging.connectivity) &&
        Objects.equals(this.families, lodging.families) &&
        Objects.equals(this.foodAndDrink, lodging.foodAndDrink) &&
        Objects.equals(this.guestUnits, lodging.guestUnits) &&
        Objects.equals(this.healthAndSafety, lodging.healthAndSafety) &&
        Objects.equals(this.housekeeping, lodging.housekeeping) &&
        Objects.equals(this.metadata, lodging.metadata) &&
        Objects.equals(this.name, lodging.name) &&
        Objects.equals(this.parking, lodging.parking) &&
        Objects.equals(this.pets, lodging.pets) &&
        Objects.equals(this.policies, lodging.policies) &&
        Objects.equals(this.pools, lodging.pools) &&
        Objects.equals(this.property, lodging.property) &&
        Objects.equals(this.services, lodging.services) &&
        Objects.equals(this.someUnits, lodging.someUnits) &&
        Objects.equals(this.sustainability, lodging.sustainability) &&
        Objects.equals(this.transportation, lodging.transportation) &&
        Objects.equals(this.wellness, lodging.wellness);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessibility, activities, allUnits, business, commonLivingArea, connectivity, families, foodAndDrink, guestUnits, healthAndSafety, housekeeping, metadata, name, parking, pets, policies, pools, property, services, someUnits, sustainability, transportation, wellness);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Lodging {\n");
    sb.append("    accessibility: ").append(toIndentedString(accessibility)).append("\n");
    sb.append("    activities: ").append(toIndentedString(activities)).append("\n");
    sb.append("    allUnits: ").append(toIndentedString(allUnits)).append("\n");
    sb.append("    business: ").append(toIndentedString(business)).append("\n");
    sb.append("    commonLivingArea: ").append(toIndentedString(commonLivingArea)).append("\n");
    sb.append("    connectivity: ").append(toIndentedString(connectivity)).append("\n");
    sb.append("    families: ").append(toIndentedString(families)).append("\n");
    sb.append("    foodAndDrink: ").append(toIndentedString(foodAndDrink)).append("\n");
    sb.append("    guestUnits: ").append(toIndentedString(guestUnits)).append("\n");
    sb.append("    healthAndSafety: ").append(toIndentedString(healthAndSafety)).append("\n");
    sb.append("    housekeeping: ").append(toIndentedString(housekeeping)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    parking: ").append(toIndentedString(parking)).append("\n");
    sb.append("    pets: ").append(toIndentedString(pets)).append("\n");
    sb.append("    policies: ").append(toIndentedString(policies)).append("\n");
    sb.append("    pools: ").append(toIndentedString(pools)).append("\n");
    sb.append("    property: ").append(toIndentedString(property)).append("\n");
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("    someUnits: ").append(toIndentedString(someUnits)).append("\n");
    sb.append("    sustainability: ").append(toIndentedString(sustainability)).append("\n");
    sb.append("    transportation: ").append(toIndentedString(transportation)).append("\n");
    sb.append("    wellness: ").append(toIndentedString(wellness)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accessibility");
    openapiFields.add("activities");
    openapiFields.add("allUnits");
    openapiFields.add("business");
    openapiFields.add("commonLivingArea");
    openapiFields.add("connectivity");
    openapiFields.add("families");
    openapiFields.add("foodAndDrink");
    openapiFields.add("guestUnits");
    openapiFields.add("healthAndSafety");
    openapiFields.add("housekeeping");
    openapiFields.add("metadata");
    openapiFields.add("name");
    openapiFields.add("parking");
    openapiFields.add("pets");
    openapiFields.add("policies");
    openapiFields.add("pools");
    openapiFields.add("property");
    openapiFields.add("services");
    openapiFields.add("someUnits");
    openapiFields.add("sustainability");
    openapiFields.add("transportation");
    openapiFields.add("wellness");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Lodging
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Lodging.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Lodging is not found in the empty JSON string", Lodging.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Lodging.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Lodging` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `accessibility`
      if (jsonObj.get("accessibility") != null && !jsonObj.get("accessibility").isJsonNull()) {
        Accessibility.validateJsonElement(jsonObj.get("accessibility"));
      }
      // validate the optional field `activities`
      if (jsonObj.get("activities") != null && !jsonObj.get("activities").isJsonNull()) {
        Activities.validateJsonElement(jsonObj.get("activities"));
      }
      // validate the optional field `allUnits`
      if (jsonObj.get("allUnits") != null && !jsonObj.get("allUnits").isJsonNull()) {
        GuestUnitFeatures.validateJsonElement(jsonObj.get("allUnits"));
      }
      // validate the optional field `business`
      if (jsonObj.get("business") != null && !jsonObj.get("business").isJsonNull()) {
        Business.validateJsonElement(jsonObj.get("business"));
      }
      // validate the optional field `commonLivingArea`
      if (jsonObj.get("commonLivingArea") != null && !jsonObj.get("commonLivingArea").isJsonNull()) {
        LivingArea.validateJsonElement(jsonObj.get("commonLivingArea"));
      }
      // validate the optional field `connectivity`
      if (jsonObj.get("connectivity") != null && !jsonObj.get("connectivity").isJsonNull()) {
        Connectivity.validateJsonElement(jsonObj.get("connectivity"));
      }
      // validate the optional field `families`
      if (jsonObj.get("families") != null && !jsonObj.get("families").isJsonNull()) {
        Families.validateJsonElement(jsonObj.get("families"));
      }
      // validate the optional field `foodAndDrink`
      if (jsonObj.get("foodAndDrink") != null && !jsonObj.get("foodAndDrink").isJsonNull()) {
        FoodAndDrink.validateJsonElement(jsonObj.get("foodAndDrink"));
      }
      if (jsonObj.get("guestUnits") != null && !jsonObj.get("guestUnits").isJsonNull()) {
        JsonArray jsonArrayguestUnits = jsonObj.getAsJsonArray("guestUnits");
        if (jsonArrayguestUnits != null) {
          // ensure the json data is an array
          if (!jsonObj.get("guestUnits").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `guestUnits` to be an array in the JSON string but got `%s`", jsonObj.get("guestUnits").toString()));
          }

          // validate the optional field `guestUnits` (array)
          for (int i = 0; i < jsonArrayguestUnits.size(); i++) {
            GuestUnitType.validateJsonElement(jsonArrayguestUnits.get(i));
          };
        }
      }
      // validate the optional field `healthAndSafety`
      if (jsonObj.get("healthAndSafety") != null && !jsonObj.get("healthAndSafety").isJsonNull()) {
        HealthAndSafety.validateJsonElement(jsonObj.get("healthAndSafety"));
      }
      // validate the optional field `housekeeping`
      if (jsonObj.get("housekeeping") != null && !jsonObj.get("housekeeping").isJsonNull()) {
        Housekeeping.validateJsonElement(jsonObj.get("housekeeping"));
      }
      // validate the optional field `metadata`
      if (jsonObj.get("metadata") != null && !jsonObj.get("metadata").isJsonNull()) {
        LodgingMetadata.validateJsonElement(jsonObj.get("metadata"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `parking`
      if (jsonObj.get("parking") != null && !jsonObj.get("parking").isJsonNull()) {
        Parking.validateJsonElement(jsonObj.get("parking"));
      }
      // validate the optional field `pets`
      if (jsonObj.get("pets") != null && !jsonObj.get("pets").isJsonNull()) {
        Pets.validateJsonElement(jsonObj.get("pets"));
      }
      // validate the optional field `policies`
      if (jsonObj.get("policies") != null && !jsonObj.get("policies").isJsonNull()) {
        Policies.validateJsonElement(jsonObj.get("policies"));
      }
      // validate the optional field `pools`
      if (jsonObj.get("pools") != null && !jsonObj.get("pools").isJsonNull()) {
        Pools.validateJsonElement(jsonObj.get("pools"));
      }
      // validate the optional field `property`
      if (jsonObj.get("property") != null && !jsonObj.get("property").isJsonNull()) {
        Property.validateJsonElement(jsonObj.get("property"));
      }
      // validate the optional field `services`
      if (jsonObj.get("services") != null && !jsonObj.get("services").isJsonNull()) {
        Services.validateJsonElement(jsonObj.get("services"));
      }
      // validate the optional field `someUnits`
      if (jsonObj.get("someUnits") != null && !jsonObj.get("someUnits").isJsonNull()) {
        GuestUnitFeatures.validateJsonElement(jsonObj.get("someUnits"));
      }
      // validate the optional field `sustainability`
      if (jsonObj.get("sustainability") != null && !jsonObj.get("sustainability").isJsonNull()) {
        Sustainability.validateJsonElement(jsonObj.get("sustainability"));
      }
      // validate the optional field `transportation`
      if (jsonObj.get("transportation") != null && !jsonObj.get("transportation").isJsonNull()) {
        Transportation.validateJsonElement(jsonObj.get("transportation"));
      }
      // validate the optional field `wellness`
      if (jsonObj.get("wellness") != null && !jsonObj.get("wellness").isJsonNull()) {
        Wellness.validateJsonElement(jsonObj.get("wellness"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Lodging.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Lodging' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Lodging> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Lodging.class));

       return (TypeAdapter<T>) new TypeAdapter<Lodging>() {
           @Override
           public void write(JsonWriter out, Lodging value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Lodging read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Lodging given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Lodging
   * @throws IOException if the JSON string is invalid with respect to Lodging
   */
  public static Lodging fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Lodging.class);
  }

  /**
   * Convert an instance of Lodging to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

