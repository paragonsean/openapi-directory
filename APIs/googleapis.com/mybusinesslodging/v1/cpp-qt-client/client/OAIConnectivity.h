/**
 * My Business Lodging API
 * The My Business Lodging API enables managing lodging business information on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConnectivity.h
 *
 * The ways in which the property provides guests with the ability to access the internet.
 */

#ifndef OAIConnectivity_H
#define OAIConnectivity_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConnectivity : public OAIObject {
public:
    OAIConnectivity();
    OAIConnectivity(QString json);
    ~OAIConnectivity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isFreeWifi() const;
    void setFreeWifi(const bool &free_wifi);
    bool is_free_wifi_Set() const;
    bool is_free_wifi_Valid() const;

    QString getFreeWifiException() const;
    void setFreeWifiException(const QString &free_wifi_exception);
    bool is_free_wifi_exception_Set() const;
    bool is_free_wifi_exception_Valid() const;

    bool isPublicAreaWifiAvailable() const;
    void setPublicAreaWifiAvailable(const bool &public_area_wifi_available);
    bool is_public_area_wifi_available_Set() const;
    bool is_public_area_wifi_available_Valid() const;

    QString getPublicAreaWifiAvailableException() const;
    void setPublicAreaWifiAvailableException(const QString &public_area_wifi_available_exception);
    bool is_public_area_wifi_available_exception_Set() const;
    bool is_public_area_wifi_available_exception_Valid() const;

    bool isPublicInternetTerminal() const;
    void setPublicInternetTerminal(const bool &public_internet_terminal);
    bool is_public_internet_terminal_Set() const;
    bool is_public_internet_terminal_Valid() const;

    QString getPublicInternetTerminalException() const;
    void setPublicInternetTerminalException(const QString &public_internet_terminal_exception);
    bool is_public_internet_terminal_exception_Set() const;
    bool is_public_internet_terminal_exception_Valid() const;

    bool isWifiAvailable() const;
    void setWifiAvailable(const bool &wifi_available);
    bool is_wifi_available_Set() const;
    bool is_wifi_available_Valid() const;

    QString getWifiAvailableException() const;
    void setWifiAvailableException(const QString &wifi_available_exception);
    bool is_wifi_available_exception_Set() const;
    bool is_wifi_available_exception_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_free_wifi;
    bool m_free_wifi_isSet;
    bool m_free_wifi_isValid;

    QString m_free_wifi_exception;
    bool m_free_wifi_exception_isSet;
    bool m_free_wifi_exception_isValid;

    bool m_public_area_wifi_available;
    bool m_public_area_wifi_available_isSet;
    bool m_public_area_wifi_available_isValid;

    QString m_public_area_wifi_available_exception;
    bool m_public_area_wifi_available_exception_isSet;
    bool m_public_area_wifi_available_exception_isValid;

    bool m_public_internet_terminal;
    bool m_public_internet_terminal_isSet;
    bool m_public_internet_terminal_isValid;

    QString m_public_internet_terminal_exception;
    bool m_public_internet_terminal_exception_isSet;
    bool m_public_internet_terminal_exception_isValid;

    bool m_wifi_available;
    bool m_wifi_available_isSet;
    bool m_wifi_available_isValid;

    QString m_wifi_available_exception;
    bool m_wifi_available_exception_isSet;
    bool m_wifi_available_exception_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConnectivity)

#endif // OAIConnectivity_H
