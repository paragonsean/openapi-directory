/**
 * My Business Lodging API
 * The My Business Lodging API enables managing lodging business information on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILivingAreaAccessibility.h
 *
 * Accessibility features of the living area.
 */

#ifndef OAILivingAreaAccessibility_H
#define OAILivingAreaAccessibility_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILivingAreaAccessibility : public OAIObject {
public:
    OAILivingAreaAccessibility();
    OAILivingAreaAccessibility(QString json);
    ~OAILivingAreaAccessibility() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAdaCompliantUnit() const;
    void setAdaCompliantUnit(const bool &ada_compliant_unit);
    bool is_ada_compliant_unit_Set() const;
    bool is_ada_compliant_unit_Valid() const;

    QString getAdaCompliantUnitException() const;
    void setAdaCompliantUnitException(const QString &ada_compliant_unit_exception);
    bool is_ada_compliant_unit_exception_Set() const;
    bool is_ada_compliant_unit_exception_Valid() const;

    bool isHearingAccessibleDoorbell() const;
    void setHearingAccessibleDoorbell(const bool &hearing_accessible_doorbell);
    bool is_hearing_accessible_doorbell_Set() const;
    bool is_hearing_accessible_doorbell_Valid() const;

    QString getHearingAccessibleDoorbellException() const;
    void setHearingAccessibleDoorbellException(const QString &hearing_accessible_doorbell_exception);
    bool is_hearing_accessible_doorbell_exception_Set() const;
    bool is_hearing_accessible_doorbell_exception_Valid() const;

    bool isHearingAccessibleFireAlarm() const;
    void setHearingAccessibleFireAlarm(const bool &hearing_accessible_fire_alarm);
    bool is_hearing_accessible_fire_alarm_Set() const;
    bool is_hearing_accessible_fire_alarm_Valid() const;

    QString getHearingAccessibleFireAlarmException() const;
    void setHearingAccessibleFireAlarmException(const QString &hearing_accessible_fire_alarm_exception);
    bool is_hearing_accessible_fire_alarm_exception_Set() const;
    bool is_hearing_accessible_fire_alarm_exception_Valid() const;

    bool isHearingAccessibleUnit() const;
    void setHearingAccessibleUnit(const bool &hearing_accessible_unit);
    bool is_hearing_accessible_unit_Set() const;
    bool is_hearing_accessible_unit_Valid() const;

    QString getHearingAccessibleUnitException() const;
    void setHearingAccessibleUnitException(const QString &hearing_accessible_unit_exception);
    bool is_hearing_accessible_unit_exception_Set() const;
    bool is_hearing_accessible_unit_exception_Valid() const;

    bool isMobilityAccessibleBathtub() const;
    void setMobilityAccessibleBathtub(const bool &mobility_accessible_bathtub);
    bool is_mobility_accessible_bathtub_Set() const;
    bool is_mobility_accessible_bathtub_Valid() const;

    QString getMobilityAccessibleBathtubException() const;
    void setMobilityAccessibleBathtubException(const QString &mobility_accessible_bathtub_exception);
    bool is_mobility_accessible_bathtub_exception_Set() const;
    bool is_mobility_accessible_bathtub_exception_Valid() const;

    bool isMobilityAccessibleShower() const;
    void setMobilityAccessibleShower(const bool &mobility_accessible_shower);
    bool is_mobility_accessible_shower_Set() const;
    bool is_mobility_accessible_shower_Valid() const;

    QString getMobilityAccessibleShowerException() const;
    void setMobilityAccessibleShowerException(const QString &mobility_accessible_shower_exception);
    bool is_mobility_accessible_shower_exception_Set() const;
    bool is_mobility_accessible_shower_exception_Valid() const;

    bool isMobilityAccessibleToilet() const;
    void setMobilityAccessibleToilet(const bool &mobility_accessible_toilet);
    bool is_mobility_accessible_toilet_Set() const;
    bool is_mobility_accessible_toilet_Valid() const;

    QString getMobilityAccessibleToiletException() const;
    void setMobilityAccessibleToiletException(const QString &mobility_accessible_toilet_exception);
    bool is_mobility_accessible_toilet_exception_Set() const;
    bool is_mobility_accessible_toilet_exception_Valid() const;

    bool isMobilityAccessibleUnit() const;
    void setMobilityAccessibleUnit(const bool &mobility_accessible_unit);
    bool is_mobility_accessible_unit_Set() const;
    bool is_mobility_accessible_unit_Valid() const;

    QString getMobilityAccessibleUnitException() const;
    void setMobilityAccessibleUnitException(const QString &mobility_accessible_unit_exception);
    bool is_mobility_accessible_unit_exception_Set() const;
    bool is_mobility_accessible_unit_exception_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_ada_compliant_unit;
    bool m_ada_compliant_unit_isSet;
    bool m_ada_compliant_unit_isValid;

    QString m_ada_compliant_unit_exception;
    bool m_ada_compliant_unit_exception_isSet;
    bool m_ada_compliant_unit_exception_isValid;

    bool m_hearing_accessible_doorbell;
    bool m_hearing_accessible_doorbell_isSet;
    bool m_hearing_accessible_doorbell_isValid;

    QString m_hearing_accessible_doorbell_exception;
    bool m_hearing_accessible_doorbell_exception_isSet;
    bool m_hearing_accessible_doorbell_exception_isValid;

    bool m_hearing_accessible_fire_alarm;
    bool m_hearing_accessible_fire_alarm_isSet;
    bool m_hearing_accessible_fire_alarm_isValid;

    QString m_hearing_accessible_fire_alarm_exception;
    bool m_hearing_accessible_fire_alarm_exception_isSet;
    bool m_hearing_accessible_fire_alarm_exception_isValid;

    bool m_hearing_accessible_unit;
    bool m_hearing_accessible_unit_isSet;
    bool m_hearing_accessible_unit_isValid;

    QString m_hearing_accessible_unit_exception;
    bool m_hearing_accessible_unit_exception_isSet;
    bool m_hearing_accessible_unit_exception_isValid;

    bool m_mobility_accessible_bathtub;
    bool m_mobility_accessible_bathtub_isSet;
    bool m_mobility_accessible_bathtub_isValid;

    QString m_mobility_accessible_bathtub_exception;
    bool m_mobility_accessible_bathtub_exception_isSet;
    bool m_mobility_accessible_bathtub_exception_isValid;

    bool m_mobility_accessible_shower;
    bool m_mobility_accessible_shower_isSet;
    bool m_mobility_accessible_shower_isValid;

    QString m_mobility_accessible_shower_exception;
    bool m_mobility_accessible_shower_exception_isSet;
    bool m_mobility_accessible_shower_exception_isValid;

    bool m_mobility_accessible_toilet;
    bool m_mobility_accessible_toilet_isSet;
    bool m_mobility_accessible_toilet_isValid;

    QString m_mobility_accessible_toilet_exception;
    bool m_mobility_accessible_toilet_exception_isSet;
    bool m_mobility_accessible_toilet_exception_isValid;

    bool m_mobility_accessible_unit;
    bool m_mobility_accessible_unit_isSet;
    bool m_mobility_accessible_unit_isValid;

    QString m_mobility_accessible_unit_exception;
    bool m_mobility_accessible_unit_exception_isSet;
    bool m_mobility_accessible_unit_exception_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILivingAreaAccessibility)

#endif // OAILivingAreaAccessibility_H
