/**
 * My Business Lodging API
 * The My Business Lodging API enables managing lodging business information on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILivingArea.h
 *
 * An individual room, such as kitchen, bathroom, bedroom, within a bookable guest unit.
 */

#ifndef OAILivingArea_H
#define OAILivingArea_H

#include <QJsonObject>

#include "OAILivingAreaAccessibility.h"
#include "OAILivingAreaEating.h"
#include "OAILivingAreaFeatures.h"
#include "OAILivingAreaLayout.h"
#include "OAILivingAreaSleeping.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILivingAreaAccessibility;
class OAILivingAreaEating;
class OAILivingAreaFeatures;
class OAILivingAreaLayout;
class OAILivingAreaSleeping;

class OAILivingArea : public OAIObject {
public:
    OAILivingArea();
    OAILivingArea(QString json);
    ~OAILivingArea() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILivingAreaAccessibility getAccessibility() const;
    void setAccessibility(const OAILivingAreaAccessibility &accessibility);
    bool is_accessibility_Set() const;
    bool is_accessibility_Valid() const;

    OAILivingAreaEating getEating() const;
    void setEating(const OAILivingAreaEating &eating);
    bool is_eating_Set() const;
    bool is_eating_Valid() const;

    OAILivingAreaFeatures getFeatures() const;
    void setFeatures(const OAILivingAreaFeatures &features);
    bool is_features_Set() const;
    bool is_features_Valid() const;

    OAILivingAreaLayout getLayout() const;
    void setLayout(const OAILivingAreaLayout &layout);
    bool is_layout_Set() const;
    bool is_layout_Valid() const;

    OAILivingAreaSleeping getSleeping() const;
    void setSleeping(const OAILivingAreaSleeping &sleeping);
    bool is_sleeping_Set() const;
    bool is_sleeping_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILivingAreaAccessibility m_accessibility;
    bool m_accessibility_isSet;
    bool m_accessibility_isValid;

    OAILivingAreaEating m_eating;
    bool m_eating_isSet;
    bool m_eating_isValid;

    OAILivingAreaFeatures m_features;
    bool m_features_isSet;
    bool m_features_isValid;

    OAILivingAreaLayout m_layout;
    bool m_layout_isSet;
    bool m_layout_isValid;

    OAILivingAreaSleeping m_sleeping;
    bool m_sleeping_isSet;
    bool m_sleeping_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILivingArea)

#endif // OAILivingArea_H
