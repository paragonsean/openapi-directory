/**
 * My Business Lodging API
 * The My Business Lodging API enables managing lodging business information on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWaterConservation.h
 *
 * Water conservation practices implemented at the hotel.
 */

#ifndef OAIWaterConservation_H
#define OAIWaterConservation_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWaterConservation : public OAIObject {
public:
    OAIWaterConservation();
    OAIWaterConservation(QString json);
    ~OAIWaterConservation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIndependentOrganizationAuditsWaterUse() const;
    void setIndependentOrganizationAuditsWaterUse(const bool &independent_organization_audits_water_use);
    bool is_independent_organization_audits_water_use_Set() const;
    bool is_independent_organization_audits_water_use_Valid() const;

    QString getIndependentOrganizationAuditsWaterUseException() const;
    void setIndependentOrganizationAuditsWaterUseException(const QString &independent_organization_audits_water_use_exception);
    bool is_independent_organization_audits_water_use_exception_Set() const;
    bool is_independent_organization_audits_water_use_exception_Valid() const;

    bool isLinenReuseProgram() const;
    void setLinenReuseProgram(const bool &linen_reuse_program);
    bool is_linen_reuse_program_Set() const;
    bool is_linen_reuse_program_Valid() const;

    QString getLinenReuseProgramException() const;
    void setLinenReuseProgramException(const QString &linen_reuse_program_exception);
    bool is_linen_reuse_program_exception_Set() const;
    bool is_linen_reuse_program_exception_Valid() const;

    bool isTowelReuseProgram() const;
    void setTowelReuseProgram(const bool &towel_reuse_program);
    bool is_towel_reuse_program_Set() const;
    bool is_towel_reuse_program_Valid() const;

    QString getTowelReuseProgramException() const;
    void setTowelReuseProgramException(const QString &towel_reuse_program_exception);
    bool is_towel_reuse_program_exception_Set() const;
    bool is_towel_reuse_program_exception_Valid() const;

    bool isWaterSavingShowers() const;
    void setWaterSavingShowers(const bool &water_saving_showers);
    bool is_water_saving_showers_Set() const;
    bool is_water_saving_showers_Valid() const;

    QString getWaterSavingShowersException() const;
    void setWaterSavingShowersException(const QString &water_saving_showers_exception);
    bool is_water_saving_showers_exception_Set() const;
    bool is_water_saving_showers_exception_Valid() const;

    bool isWaterSavingSinks() const;
    void setWaterSavingSinks(const bool &water_saving_sinks);
    bool is_water_saving_sinks_Set() const;
    bool is_water_saving_sinks_Valid() const;

    QString getWaterSavingSinksException() const;
    void setWaterSavingSinksException(const QString &water_saving_sinks_exception);
    bool is_water_saving_sinks_exception_Set() const;
    bool is_water_saving_sinks_exception_Valid() const;

    bool isWaterSavingToilets() const;
    void setWaterSavingToilets(const bool &water_saving_toilets);
    bool is_water_saving_toilets_Set() const;
    bool is_water_saving_toilets_Valid() const;

    QString getWaterSavingToiletsException() const;
    void setWaterSavingToiletsException(const QString &water_saving_toilets_exception);
    bool is_water_saving_toilets_exception_Set() const;
    bool is_water_saving_toilets_exception_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_independent_organization_audits_water_use;
    bool m_independent_organization_audits_water_use_isSet;
    bool m_independent_organization_audits_water_use_isValid;

    QString m_independent_organization_audits_water_use_exception;
    bool m_independent_organization_audits_water_use_exception_isSet;
    bool m_independent_organization_audits_water_use_exception_isValid;

    bool m_linen_reuse_program;
    bool m_linen_reuse_program_isSet;
    bool m_linen_reuse_program_isValid;

    QString m_linen_reuse_program_exception;
    bool m_linen_reuse_program_exception_isSet;
    bool m_linen_reuse_program_exception_isValid;

    bool m_towel_reuse_program;
    bool m_towel_reuse_program_isSet;
    bool m_towel_reuse_program_isValid;

    QString m_towel_reuse_program_exception;
    bool m_towel_reuse_program_exception_isSet;
    bool m_towel_reuse_program_exception_isValid;

    bool m_water_saving_showers;
    bool m_water_saving_showers_isSet;
    bool m_water_saving_showers_isValid;

    QString m_water_saving_showers_exception;
    bool m_water_saving_showers_exception_isSet;
    bool m_water_saving_showers_exception_isValid;

    bool m_water_saving_sinks;
    bool m_water_saving_sinks_isSet;
    bool m_water_saving_sinks_isValid;

    QString m_water_saving_sinks_exception;
    bool m_water_saving_sinks_exception_isSet;
    bool m_water_saving_sinks_exception_isValid;

    bool m_water_saving_toilets;
    bool m_water_saving_toilets_isSet;
    bool m_water_saving_toilets_isValid;

    QString m_water_saving_toilets_exception;
    bool m_water_saving_toilets_exception_isSet;
    bool m_water_saving_toilets_exception_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWaterConservation)

#endif // OAIWaterConservation_H
