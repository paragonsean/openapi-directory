/**
 * My Business Lodging API
 * The My Business Lodging API enables managing lodging business information on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWellness.h
 *
 * Guest facilities at the property to promote or maintain health, beauty, and fitness.
 */

#ifndef OAIWellness_H
#define OAIWellness_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWellness : public OAIObject {
public:
    OAIWellness();
    OAIWellness(QString json);
    ~OAIWellness() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDoctorOnCall() const;
    void setDoctorOnCall(const bool &doctor_on_call);
    bool is_doctor_on_call_Set() const;
    bool is_doctor_on_call_Valid() const;

    QString getDoctorOnCallException() const;
    void setDoctorOnCallException(const QString &doctor_on_call_exception);
    bool is_doctor_on_call_exception_Set() const;
    bool is_doctor_on_call_exception_Valid() const;

    bool isEllipticalMachine() const;
    void setEllipticalMachine(const bool &elliptical_machine);
    bool is_elliptical_machine_Set() const;
    bool is_elliptical_machine_Valid() const;

    QString getEllipticalMachineException() const;
    void setEllipticalMachineException(const QString &elliptical_machine_exception);
    bool is_elliptical_machine_exception_Set() const;
    bool is_elliptical_machine_exception_Valid() const;

    bool isFitnessCenter() const;
    void setFitnessCenter(const bool &fitness_center);
    bool is_fitness_center_Set() const;
    bool is_fitness_center_Valid() const;

    QString getFitnessCenterException() const;
    void setFitnessCenterException(const QString &fitness_center_exception);
    bool is_fitness_center_exception_Set() const;
    bool is_fitness_center_exception_Valid() const;

    bool isFreeFitnessCenter() const;
    void setFreeFitnessCenter(const bool &free_fitness_center);
    bool is_free_fitness_center_Set() const;
    bool is_free_fitness_center_Valid() const;

    QString getFreeFitnessCenterException() const;
    void setFreeFitnessCenterException(const QString &free_fitness_center_exception);
    bool is_free_fitness_center_exception_Set() const;
    bool is_free_fitness_center_exception_Valid() const;

    bool isFreeWeights() const;
    void setFreeWeights(const bool &free_weights);
    bool is_free_weights_Set() const;
    bool is_free_weights_Valid() const;

    QString getFreeWeightsException() const;
    void setFreeWeightsException(const QString &free_weights_exception);
    bool is_free_weights_exception_Set() const;
    bool is_free_weights_exception_Valid() const;

    bool isMassage() const;
    void setMassage(const bool &massage);
    bool is_massage_Set() const;
    bool is_massage_Valid() const;

    QString getMassageException() const;
    void setMassageException(const QString &massage_exception);
    bool is_massage_exception_Set() const;
    bool is_massage_exception_Valid() const;

    bool isSalon() const;
    void setSalon(const bool &salon);
    bool is_salon_Set() const;
    bool is_salon_Valid() const;

    QString getSalonException() const;
    void setSalonException(const QString &salon_exception);
    bool is_salon_exception_Set() const;
    bool is_salon_exception_Valid() const;

    bool isSauna() const;
    void setSauna(const bool &sauna);
    bool is_sauna_Set() const;
    bool is_sauna_Valid() const;

    QString getSaunaException() const;
    void setSaunaException(const QString &sauna_exception);
    bool is_sauna_exception_Set() const;
    bool is_sauna_exception_Valid() const;

    bool isSpa() const;
    void setSpa(const bool &spa);
    bool is_spa_Set() const;
    bool is_spa_Valid() const;

    QString getSpaException() const;
    void setSpaException(const QString &spa_exception);
    bool is_spa_exception_Set() const;
    bool is_spa_exception_Valid() const;

    bool isTreadmill() const;
    void setTreadmill(const bool &treadmill);
    bool is_treadmill_Set() const;
    bool is_treadmill_Valid() const;

    QString getTreadmillException() const;
    void setTreadmillException(const QString &treadmill_exception);
    bool is_treadmill_exception_Set() const;
    bool is_treadmill_exception_Valid() const;

    bool isWeightMachine() const;
    void setWeightMachine(const bool &weight_machine);
    bool is_weight_machine_Set() const;
    bool is_weight_machine_Valid() const;

    QString getWeightMachineException() const;
    void setWeightMachineException(const QString &weight_machine_exception);
    bool is_weight_machine_exception_Set() const;
    bool is_weight_machine_exception_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_doctor_on_call;
    bool m_doctor_on_call_isSet;
    bool m_doctor_on_call_isValid;

    QString m_doctor_on_call_exception;
    bool m_doctor_on_call_exception_isSet;
    bool m_doctor_on_call_exception_isValid;

    bool m_elliptical_machine;
    bool m_elliptical_machine_isSet;
    bool m_elliptical_machine_isValid;

    QString m_elliptical_machine_exception;
    bool m_elliptical_machine_exception_isSet;
    bool m_elliptical_machine_exception_isValid;

    bool m_fitness_center;
    bool m_fitness_center_isSet;
    bool m_fitness_center_isValid;

    QString m_fitness_center_exception;
    bool m_fitness_center_exception_isSet;
    bool m_fitness_center_exception_isValid;

    bool m_free_fitness_center;
    bool m_free_fitness_center_isSet;
    bool m_free_fitness_center_isValid;

    QString m_free_fitness_center_exception;
    bool m_free_fitness_center_exception_isSet;
    bool m_free_fitness_center_exception_isValid;

    bool m_free_weights;
    bool m_free_weights_isSet;
    bool m_free_weights_isValid;

    QString m_free_weights_exception;
    bool m_free_weights_exception_isSet;
    bool m_free_weights_exception_isValid;

    bool m_massage;
    bool m_massage_isSet;
    bool m_massage_isValid;

    QString m_massage_exception;
    bool m_massage_exception_isSet;
    bool m_massage_exception_isValid;

    bool m_salon;
    bool m_salon_isSet;
    bool m_salon_isValid;

    QString m_salon_exception;
    bool m_salon_exception_isSet;
    bool m_salon_exception_isValid;

    bool m_sauna;
    bool m_sauna_isSet;
    bool m_sauna_isValid;

    QString m_sauna_exception;
    bool m_sauna_exception_isSet;
    bool m_sauna_exception_isValid;

    bool m_spa;
    bool m_spa_isSet;
    bool m_spa_isValid;

    QString m_spa_exception;
    bool m_spa_exception_isSet;
    bool m_spa_exception_isValid;

    bool m_treadmill;
    bool m_treadmill_isSet;
    bool m_treadmill_isValid;

    QString m_treadmill_exception;
    bool m_treadmill_exception_isSet;
    bool m_treadmill_exception_isValid;

    bool m_weight_machine;
    bool m_weight_machine_isSet;
    bool m_weight_machine_isValid;

    QString m_weight_machine_exception;
    bool m_weight_machine_exception_isSet;
    bool m_weight_machine_exception_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWellness)

#endif // OAIWellness_H
