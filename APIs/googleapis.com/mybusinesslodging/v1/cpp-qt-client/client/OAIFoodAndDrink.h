/**
 * My Business Lodging API
 * The My Business Lodging API enables managing lodging business information on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFoodAndDrink.h
 *
 * Meals, snacks, and beverages available at the property.
 */

#ifndef OAIFoodAndDrink_H
#define OAIFoodAndDrink_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFoodAndDrink : public OAIObject {
public:
    OAIFoodAndDrink();
    OAIFoodAndDrink(QString json);
    ~OAIFoodAndDrink() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isBar() const;
    void setBar(const bool &bar);
    bool is_bar_Set() const;
    bool is_bar_Valid() const;

    QString getBarException() const;
    void setBarException(const QString &bar_exception);
    bool is_bar_exception_Set() const;
    bool is_bar_exception_Valid() const;

    bool isBreakfastAvailable() const;
    void setBreakfastAvailable(const bool &breakfast_available);
    bool is_breakfast_available_Set() const;
    bool is_breakfast_available_Valid() const;

    QString getBreakfastAvailableException() const;
    void setBreakfastAvailableException(const QString &breakfast_available_exception);
    bool is_breakfast_available_exception_Set() const;
    bool is_breakfast_available_exception_Valid() const;

    bool isBreakfastBuffet() const;
    void setBreakfastBuffet(const bool &breakfast_buffet);
    bool is_breakfast_buffet_Set() const;
    bool is_breakfast_buffet_Valid() const;

    QString getBreakfastBuffetException() const;
    void setBreakfastBuffetException(const QString &breakfast_buffet_exception);
    bool is_breakfast_buffet_exception_Set() const;
    bool is_breakfast_buffet_exception_Valid() const;

    bool isBuffet() const;
    void setBuffet(const bool &buffet);
    bool is_buffet_Set() const;
    bool is_buffet_Valid() const;

    QString getBuffetException() const;
    void setBuffetException(const QString &buffet_exception);
    bool is_buffet_exception_Set() const;
    bool is_buffet_exception_Valid() const;

    bool isDinnerBuffet() const;
    void setDinnerBuffet(const bool &dinner_buffet);
    bool is_dinner_buffet_Set() const;
    bool is_dinner_buffet_Valid() const;

    QString getDinnerBuffetException() const;
    void setDinnerBuffetException(const QString &dinner_buffet_exception);
    bool is_dinner_buffet_exception_Set() const;
    bool is_dinner_buffet_exception_Valid() const;

    bool isFreeBreakfast() const;
    void setFreeBreakfast(const bool &free_breakfast);
    bool is_free_breakfast_Set() const;
    bool is_free_breakfast_Valid() const;

    QString getFreeBreakfastException() const;
    void setFreeBreakfastException(const QString &free_breakfast_exception);
    bool is_free_breakfast_exception_Set() const;
    bool is_free_breakfast_exception_Valid() const;

    bool isRestaurant() const;
    void setRestaurant(const bool &restaurant);
    bool is_restaurant_Set() const;
    bool is_restaurant_Valid() const;

    QString getRestaurantException() const;
    void setRestaurantException(const QString &restaurant_exception);
    bool is_restaurant_exception_Set() const;
    bool is_restaurant_exception_Valid() const;

    qint32 getRestaurantsCount() const;
    void setRestaurantsCount(const qint32 &restaurants_count);
    bool is_restaurants_count_Set() const;
    bool is_restaurants_count_Valid() const;

    QString getRestaurantsCountException() const;
    void setRestaurantsCountException(const QString &restaurants_count_exception);
    bool is_restaurants_count_exception_Set() const;
    bool is_restaurants_count_exception_Valid() const;

    bool isRoomService() const;
    void setRoomService(const bool &room_service);
    bool is_room_service_Set() const;
    bool is_room_service_Valid() const;

    QString getRoomServiceException() const;
    void setRoomServiceException(const QString &room_service_exception);
    bool is_room_service_exception_Set() const;
    bool is_room_service_exception_Valid() const;

    bool isTableService() const;
    void setTableService(const bool &table_service);
    bool is_table_service_Set() const;
    bool is_table_service_Valid() const;

    QString getTableServiceException() const;
    void setTableServiceException(const QString &table_service_exception);
    bool is_table_service_exception_Set() const;
    bool is_table_service_exception_Valid() const;

    bool isTwentyFourHourRoomService() const;
    void setTwentyFourHourRoomService(const bool &twenty_four_hour_room_service);
    bool is_twenty_four_hour_room_service_Set() const;
    bool is_twenty_four_hour_room_service_Valid() const;

    QString getTwentyFourHourRoomServiceException() const;
    void setTwentyFourHourRoomServiceException(const QString &twenty_four_hour_room_service_exception);
    bool is_twenty_four_hour_room_service_exception_Set() const;
    bool is_twenty_four_hour_room_service_exception_Valid() const;

    bool isVendingMachine() const;
    void setVendingMachine(const bool &vending_machine);
    bool is_vending_machine_Set() const;
    bool is_vending_machine_Valid() const;

    QString getVendingMachineException() const;
    void setVendingMachineException(const QString &vending_machine_exception);
    bool is_vending_machine_exception_Set() const;
    bool is_vending_machine_exception_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_bar;
    bool m_bar_isSet;
    bool m_bar_isValid;

    QString m_bar_exception;
    bool m_bar_exception_isSet;
    bool m_bar_exception_isValid;

    bool m_breakfast_available;
    bool m_breakfast_available_isSet;
    bool m_breakfast_available_isValid;

    QString m_breakfast_available_exception;
    bool m_breakfast_available_exception_isSet;
    bool m_breakfast_available_exception_isValid;

    bool m_breakfast_buffet;
    bool m_breakfast_buffet_isSet;
    bool m_breakfast_buffet_isValid;

    QString m_breakfast_buffet_exception;
    bool m_breakfast_buffet_exception_isSet;
    bool m_breakfast_buffet_exception_isValid;

    bool m_buffet;
    bool m_buffet_isSet;
    bool m_buffet_isValid;

    QString m_buffet_exception;
    bool m_buffet_exception_isSet;
    bool m_buffet_exception_isValid;

    bool m_dinner_buffet;
    bool m_dinner_buffet_isSet;
    bool m_dinner_buffet_isValid;

    QString m_dinner_buffet_exception;
    bool m_dinner_buffet_exception_isSet;
    bool m_dinner_buffet_exception_isValid;

    bool m_free_breakfast;
    bool m_free_breakfast_isSet;
    bool m_free_breakfast_isValid;

    QString m_free_breakfast_exception;
    bool m_free_breakfast_exception_isSet;
    bool m_free_breakfast_exception_isValid;

    bool m_restaurant;
    bool m_restaurant_isSet;
    bool m_restaurant_isValid;

    QString m_restaurant_exception;
    bool m_restaurant_exception_isSet;
    bool m_restaurant_exception_isValid;

    qint32 m_restaurants_count;
    bool m_restaurants_count_isSet;
    bool m_restaurants_count_isValid;

    QString m_restaurants_count_exception;
    bool m_restaurants_count_exception_isSet;
    bool m_restaurants_count_exception_isValid;

    bool m_room_service;
    bool m_room_service_isSet;
    bool m_room_service_isValid;

    QString m_room_service_exception;
    bool m_room_service_exception_isSet;
    bool m_room_service_exception_isValid;

    bool m_table_service;
    bool m_table_service_isSet;
    bool m_table_service_isValid;

    QString m_table_service_exception;
    bool m_table_service_exception_isSet;
    bool m_table_service_exception_isValid;

    bool m_twenty_four_hour_room_service;
    bool m_twenty_four_hour_room_service_isSet;
    bool m_twenty_four_hour_room_service_isValid;

    QString m_twenty_four_hour_room_service_exception;
    bool m_twenty_four_hour_room_service_exception_isSet;
    bool m_twenty_four_hour_room_service_exception_isValid;

    bool m_vending_machine;
    bool m_vending_machine_isSet;
    bool m_vending_machine_isValid;

    QString m_vending_machine_exception;
    bool m_vending_machine_exception_isSet;
    bool m_vending_machine_exception_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFoodAndDrink)

#endif // OAIFoodAndDrink_H
