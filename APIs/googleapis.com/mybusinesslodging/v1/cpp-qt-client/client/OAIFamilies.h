/**
 * My Business Lodging API
 * The My Business Lodging API enables managing lodging business information on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFamilies.h
 *
 * Services and amenities for families and young guests.
 */

#ifndef OAIFamilies_H
#define OAIFamilies_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFamilies : public OAIObject {
public:
    OAIFamilies();
    OAIFamilies(QString json);
    ~OAIFamilies() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isBabysitting() const;
    void setBabysitting(const bool &babysitting);
    bool is_babysitting_Set() const;
    bool is_babysitting_Valid() const;

    QString getBabysittingException() const;
    void setBabysittingException(const QString &babysitting_exception);
    bool is_babysitting_exception_Set() const;
    bool is_babysitting_exception_Valid() const;

    bool isKidsActivities() const;
    void setKidsActivities(const bool &kids_activities);
    bool is_kids_activities_Set() const;
    bool is_kids_activities_Valid() const;

    QString getKidsActivitiesException() const;
    void setKidsActivitiesException(const QString &kids_activities_exception);
    bool is_kids_activities_exception_Set() const;
    bool is_kids_activities_exception_Valid() const;

    bool isKidsClub() const;
    void setKidsClub(const bool &kids_club);
    bool is_kids_club_Set() const;
    bool is_kids_club_Valid() const;

    QString getKidsClubException() const;
    void setKidsClubException(const QString &kids_club_exception);
    bool is_kids_club_exception_Set() const;
    bool is_kids_club_exception_Valid() const;

    bool isKidsFriendly() const;
    void setKidsFriendly(const bool &kids_friendly);
    bool is_kids_friendly_Set() const;
    bool is_kids_friendly_Valid() const;

    QString getKidsFriendlyException() const;
    void setKidsFriendlyException(const QString &kids_friendly_exception);
    bool is_kids_friendly_exception_Set() const;
    bool is_kids_friendly_exception_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_babysitting;
    bool m_babysitting_isSet;
    bool m_babysitting_isValid;

    QString m_babysitting_exception;
    bool m_babysitting_exception_isSet;
    bool m_babysitting_exception_isValid;

    bool m_kids_activities;
    bool m_kids_activities_isSet;
    bool m_kids_activities_isValid;

    QString m_kids_activities_exception;
    bool m_kids_activities_exception_isSet;
    bool m_kids_activities_exception_isValid;

    bool m_kids_club;
    bool m_kids_club_isSet;
    bool m_kids_club_isValid;

    QString m_kids_club_exception;
    bool m_kids_club_exception_isSet;
    bool m_kids_club_exception_isValid;

    bool m_kids_friendly;
    bool m_kids_friendly_isSet;
    bool m_kids_friendly_isValid;

    QString m_kids_friendly_exception;
    bool m_kids_friendly_exception_isSet;
    bool m_kids_friendly_exception_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFamilies)

#endif // OAIFamilies_H
