/**
 * My Business Lodging API
 * The My Business Lodging API enables managing lodging business information on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIncreasedFoodSafety.h
 *
 * Increased food safety measures implemented by the hotel during COVID-19.
 */

#ifndef OAIIncreasedFoodSafety_H
#define OAIIncreasedFoodSafety_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIncreasedFoodSafety : public OAIObject {
public:
    OAIIncreasedFoodSafety();
    OAIIncreasedFoodSafety(QString json);
    ~OAIIncreasedFoodSafety() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDiningAreasAdditionalSanitation() const;
    void setDiningAreasAdditionalSanitation(const bool &dining_areas_additional_sanitation);
    bool is_dining_areas_additional_sanitation_Set() const;
    bool is_dining_areas_additional_sanitation_Valid() const;

    QString getDiningAreasAdditionalSanitationException() const;
    void setDiningAreasAdditionalSanitationException(const QString &dining_areas_additional_sanitation_exception);
    bool is_dining_areas_additional_sanitation_exception_Set() const;
    bool is_dining_areas_additional_sanitation_exception_Valid() const;

    bool isDisposableFlatware() const;
    void setDisposableFlatware(const bool &disposable_flatware);
    bool is_disposable_flatware_Set() const;
    bool is_disposable_flatware_Valid() const;

    QString getDisposableFlatwareException() const;
    void setDisposableFlatwareException(const QString &disposable_flatware_exception);
    bool is_disposable_flatware_exception_Set() const;
    bool is_disposable_flatware_exception_Valid() const;

    bool isFoodPreparationAndServingAdditionalSafety() const;
    void setFoodPreparationAndServingAdditionalSafety(const bool &food_preparation_and_serving_additional_safety);
    bool is_food_preparation_and_serving_additional_safety_Set() const;
    bool is_food_preparation_and_serving_additional_safety_Valid() const;

    QString getFoodPreparationAndServingAdditionalSafetyException() const;
    void setFoodPreparationAndServingAdditionalSafetyException(const QString &food_preparation_and_serving_additional_safety_exception);
    bool is_food_preparation_and_serving_additional_safety_exception_Set() const;
    bool is_food_preparation_and_serving_additional_safety_exception_Valid() const;

    bool isIndividualPackagedMeals() const;
    void setIndividualPackagedMeals(const bool &individual_packaged_meals);
    bool is_individual_packaged_meals_Set() const;
    bool is_individual_packaged_meals_Valid() const;

    QString getIndividualPackagedMealsException() const;
    void setIndividualPackagedMealsException(const QString &individual_packaged_meals_exception);
    bool is_individual_packaged_meals_exception_Set() const;
    bool is_individual_packaged_meals_exception_Valid() const;

    bool isSingleUseFoodMenus() const;
    void setSingleUseFoodMenus(const bool &single_use_food_menus);
    bool is_single_use_food_menus_Set() const;
    bool is_single_use_food_menus_Valid() const;

    QString getSingleUseFoodMenusException() const;
    void setSingleUseFoodMenusException(const QString &single_use_food_menus_exception);
    bool is_single_use_food_menus_exception_Set() const;
    bool is_single_use_food_menus_exception_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_dining_areas_additional_sanitation;
    bool m_dining_areas_additional_sanitation_isSet;
    bool m_dining_areas_additional_sanitation_isValid;

    QString m_dining_areas_additional_sanitation_exception;
    bool m_dining_areas_additional_sanitation_exception_isSet;
    bool m_dining_areas_additional_sanitation_exception_isValid;

    bool m_disposable_flatware;
    bool m_disposable_flatware_isSet;
    bool m_disposable_flatware_isValid;

    QString m_disposable_flatware_exception;
    bool m_disposable_flatware_exception_isSet;
    bool m_disposable_flatware_exception_isValid;

    bool m_food_preparation_and_serving_additional_safety;
    bool m_food_preparation_and_serving_additional_safety_isSet;
    bool m_food_preparation_and_serving_additional_safety_isValid;

    QString m_food_preparation_and_serving_additional_safety_exception;
    bool m_food_preparation_and_serving_additional_safety_exception_isSet;
    bool m_food_preparation_and_serving_additional_safety_exception_isValid;

    bool m_individual_packaged_meals;
    bool m_individual_packaged_meals_isSet;
    bool m_individual_packaged_meals_isValid;

    QString m_individual_packaged_meals_exception;
    bool m_individual_packaged_meals_exception_isSet;
    bool m_individual_packaged_meals_exception_isValid;

    bool m_single_use_food_menus;
    bool m_single_use_food_menus_isSet;
    bool m_single_use_food_menus_isValid;

    QString m_single_use_food_menus_exception;
    bool m_single_use_food_menus_exception_isSet;
    bool m_single_use_food_menus_exception_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIncreasedFoodSafety)

#endif // OAIIncreasedFoodSafety_H
