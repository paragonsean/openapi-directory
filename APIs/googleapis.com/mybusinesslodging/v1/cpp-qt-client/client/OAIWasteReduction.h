/**
 * My Business Lodging API
 * The My Business Lodging API enables managing lodging business information on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWasteReduction.h
 *
 * Waste reduction practices implemented at the hotel.
 */

#ifndef OAIWasteReduction_H
#define OAIWasteReduction_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWasteReduction : public OAIObject {
public:
    OAIWasteReduction();
    OAIWasteReduction(QString json);
    ~OAIWasteReduction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCompostableFoodContainersAndCutlery() const;
    void setCompostableFoodContainersAndCutlery(const bool &compostable_food_containers_and_cutlery);
    bool is_compostable_food_containers_and_cutlery_Set() const;
    bool is_compostable_food_containers_and_cutlery_Valid() const;

    QString getCompostableFoodContainersAndCutleryException() const;
    void setCompostableFoodContainersAndCutleryException(const QString &compostable_food_containers_and_cutlery_exception);
    bool is_compostable_food_containers_and_cutlery_exception_Set() const;
    bool is_compostable_food_containers_and_cutlery_exception_Valid() const;

    bool isCompostsExcessFood() const;
    void setCompostsExcessFood(const bool &composts_excess_food);
    bool is_composts_excess_food_Set() const;
    bool is_composts_excess_food_Valid() const;

    QString getCompostsExcessFoodException() const;
    void setCompostsExcessFoodException(const QString &composts_excess_food_exception);
    bool is_composts_excess_food_exception_Set() const;
    bool is_composts_excess_food_exception_Valid() const;

    bool isDonatesExcessFood() const;
    void setDonatesExcessFood(const bool &donates_excess_food);
    bool is_donates_excess_food_Set() const;
    bool is_donates_excess_food_Valid() const;

    QString getDonatesExcessFoodException() const;
    void setDonatesExcessFoodException(const QString &donates_excess_food_exception);
    bool is_donates_excess_food_exception_Set() const;
    bool is_donates_excess_food_exception_Valid() const;

    bool isFoodWasteReductionProgram() const;
    void setFoodWasteReductionProgram(const bool &food_waste_reduction_program);
    bool is_food_waste_reduction_program_Set() const;
    bool is_food_waste_reduction_program_Valid() const;

    QString getFoodWasteReductionProgramException() const;
    void setFoodWasteReductionProgramException(const QString &food_waste_reduction_program_exception);
    bool is_food_waste_reduction_program_exception_Set() const;
    bool is_food_waste_reduction_program_exception_Valid() const;

    bool isNoSingleUsePlasticStraws() const;
    void setNoSingleUsePlasticStraws(const bool &no_single_use_plastic_straws);
    bool is_no_single_use_plastic_straws_Set() const;
    bool is_no_single_use_plastic_straws_Valid() const;

    QString getNoSingleUsePlasticStrawsException() const;
    void setNoSingleUsePlasticStrawsException(const QString &no_single_use_plastic_straws_exception);
    bool is_no_single_use_plastic_straws_exception_Set() const;
    bool is_no_single_use_plastic_straws_exception_Valid() const;

    bool isNoSingleUsePlasticWaterBottles() const;
    void setNoSingleUsePlasticWaterBottles(const bool &no_single_use_plastic_water_bottles);
    bool is_no_single_use_plastic_water_bottles_Set() const;
    bool is_no_single_use_plastic_water_bottles_Valid() const;

    QString getNoSingleUsePlasticWaterBottlesException() const;
    void setNoSingleUsePlasticWaterBottlesException(const QString &no_single_use_plastic_water_bottles_exception);
    bool is_no_single_use_plastic_water_bottles_exception_Set() const;
    bool is_no_single_use_plastic_water_bottles_exception_Valid() const;

    bool isNoStyrofoamFoodContainers() const;
    void setNoStyrofoamFoodContainers(const bool &no_styrofoam_food_containers);
    bool is_no_styrofoam_food_containers_Set() const;
    bool is_no_styrofoam_food_containers_Valid() const;

    QString getNoStyrofoamFoodContainersException() const;
    void setNoStyrofoamFoodContainersException(const QString &no_styrofoam_food_containers_exception);
    bool is_no_styrofoam_food_containers_exception_Set() const;
    bool is_no_styrofoam_food_containers_exception_Valid() const;

    bool isRecyclingProgram() const;
    void setRecyclingProgram(const bool &recycling_program);
    bool is_recycling_program_Set() const;
    bool is_recycling_program_Valid() const;

    QString getRecyclingProgramException() const;
    void setRecyclingProgramException(const QString &recycling_program_exception);
    bool is_recycling_program_exception_Set() const;
    bool is_recycling_program_exception_Valid() const;

    bool isRefillableToiletryContainers() const;
    void setRefillableToiletryContainers(const bool &refillable_toiletry_containers);
    bool is_refillable_toiletry_containers_Set() const;
    bool is_refillable_toiletry_containers_Valid() const;

    QString getRefillableToiletryContainersException() const;
    void setRefillableToiletryContainersException(const QString &refillable_toiletry_containers_exception);
    bool is_refillable_toiletry_containers_exception_Set() const;
    bool is_refillable_toiletry_containers_exception_Valid() const;

    bool isSafelyDisposesBatteries() const;
    void setSafelyDisposesBatteries(const bool &safely_disposes_batteries);
    bool is_safely_disposes_batteries_Set() const;
    bool is_safely_disposes_batteries_Valid() const;

    QString getSafelyDisposesBatteriesException() const;
    void setSafelyDisposesBatteriesException(const QString &safely_disposes_batteries_exception);
    bool is_safely_disposes_batteries_exception_Set() const;
    bool is_safely_disposes_batteries_exception_Valid() const;

    bool isSafelyDisposesElectronics() const;
    void setSafelyDisposesElectronics(const bool &safely_disposes_electronics);
    bool is_safely_disposes_electronics_Set() const;
    bool is_safely_disposes_electronics_Valid() const;

    QString getSafelyDisposesElectronicsException() const;
    void setSafelyDisposesElectronicsException(const QString &safely_disposes_electronics_exception);
    bool is_safely_disposes_electronics_exception_Set() const;
    bool is_safely_disposes_electronics_exception_Valid() const;

    bool isSafelyDisposesLightbulbs() const;
    void setSafelyDisposesLightbulbs(const bool &safely_disposes_lightbulbs);
    bool is_safely_disposes_lightbulbs_Set() const;
    bool is_safely_disposes_lightbulbs_Valid() const;

    QString getSafelyDisposesLightbulbsException() const;
    void setSafelyDisposesLightbulbsException(const QString &safely_disposes_lightbulbs_exception);
    bool is_safely_disposes_lightbulbs_exception_Set() const;
    bool is_safely_disposes_lightbulbs_exception_Valid() const;

    bool isSafelyHandlesHazardousSubstances() const;
    void setSafelyHandlesHazardousSubstances(const bool &safely_handles_hazardous_substances);
    bool is_safely_handles_hazardous_substances_Set() const;
    bool is_safely_handles_hazardous_substances_Valid() const;

    QString getSafelyHandlesHazardousSubstancesException() const;
    void setSafelyHandlesHazardousSubstancesException(const QString &safely_handles_hazardous_substances_exception);
    bool is_safely_handles_hazardous_substances_exception_Set() const;
    bool is_safely_handles_hazardous_substances_exception_Valid() const;

    bool isSoapDonationProgram() const;
    void setSoapDonationProgram(const bool &soap_donation_program);
    bool is_soap_donation_program_Set() const;
    bool is_soap_donation_program_Valid() const;

    QString getSoapDonationProgramException() const;
    void setSoapDonationProgramException(const QString &soap_donation_program_exception);
    bool is_soap_donation_program_exception_Set() const;
    bool is_soap_donation_program_exception_Valid() const;

    bool isToiletryDonationProgram() const;
    void setToiletryDonationProgram(const bool &toiletry_donation_program);
    bool is_toiletry_donation_program_Set() const;
    bool is_toiletry_donation_program_Valid() const;

    QString getToiletryDonationProgramException() const;
    void setToiletryDonationProgramException(const QString &toiletry_donation_program_exception);
    bool is_toiletry_donation_program_exception_Set() const;
    bool is_toiletry_donation_program_exception_Valid() const;

    bool isWaterBottleFillingStations() const;
    void setWaterBottleFillingStations(const bool &water_bottle_filling_stations);
    bool is_water_bottle_filling_stations_Set() const;
    bool is_water_bottle_filling_stations_Valid() const;

    QString getWaterBottleFillingStationsException() const;
    void setWaterBottleFillingStationsException(const QString &water_bottle_filling_stations_exception);
    bool is_water_bottle_filling_stations_exception_Set() const;
    bool is_water_bottle_filling_stations_exception_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_compostable_food_containers_and_cutlery;
    bool m_compostable_food_containers_and_cutlery_isSet;
    bool m_compostable_food_containers_and_cutlery_isValid;

    QString m_compostable_food_containers_and_cutlery_exception;
    bool m_compostable_food_containers_and_cutlery_exception_isSet;
    bool m_compostable_food_containers_and_cutlery_exception_isValid;

    bool m_composts_excess_food;
    bool m_composts_excess_food_isSet;
    bool m_composts_excess_food_isValid;

    QString m_composts_excess_food_exception;
    bool m_composts_excess_food_exception_isSet;
    bool m_composts_excess_food_exception_isValid;

    bool m_donates_excess_food;
    bool m_donates_excess_food_isSet;
    bool m_donates_excess_food_isValid;

    QString m_donates_excess_food_exception;
    bool m_donates_excess_food_exception_isSet;
    bool m_donates_excess_food_exception_isValid;

    bool m_food_waste_reduction_program;
    bool m_food_waste_reduction_program_isSet;
    bool m_food_waste_reduction_program_isValid;

    QString m_food_waste_reduction_program_exception;
    bool m_food_waste_reduction_program_exception_isSet;
    bool m_food_waste_reduction_program_exception_isValid;

    bool m_no_single_use_plastic_straws;
    bool m_no_single_use_plastic_straws_isSet;
    bool m_no_single_use_plastic_straws_isValid;

    QString m_no_single_use_plastic_straws_exception;
    bool m_no_single_use_plastic_straws_exception_isSet;
    bool m_no_single_use_plastic_straws_exception_isValid;

    bool m_no_single_use_plastic_water_bottles;
    bool m_no_single_use_plastic_water_bottles_isSet;
    bool m_no_single_use_plastic_water_bottles_isValid;

    QString m_no_single_use_plastic_water_bottles_exception;
    bool m_no_single_use_plastic_water_bottles_exception_isSet;
    bool m_no_single_use_plastic_water_bottles_exception_isValid;

    bool m_no_styrofoam_food_containers;
    bool m_no_styrofoam_food_containers_isSet;
    bool m_no_styrofoam_food_containers_isValid;

    QString m_no_styrofoam_food_containers_exception;
    bool m_no_styrofoam_food_containers_exception_isSet;
    bool m_no_styrofoam_food_containers_exception_isValid;

    bool m_recycling_program;
    bool m_recycling_program_isSet;
    bool m_recycling_program_isValid;

    QString m_recycling_program_exception;
    bool m_recycling_program_exception_isSet;
    bool m_recycling_program_exception_isValid;

    bool m_refillable_toiletry_containers;
    bool m_refillable_toiletry_containers_isSet;
    bool m_refillable_toiletry_containers_isValid;

    QString m_refillable_toiletry_containers_exception;
    bool m_refillable_toiletry_containers_exception_isSet;
    bool m_refillable_toiletry_containers_exception_isValid;

    bool m_safely_disposes_batteries;
    bool m_safely_disposes_batteries_isSet;
    bool m_safely_disposes_batteries_isValid;

    QString m_safely_disposes_batteries_exception;
    bool m_safely_disposes_batteries_exception_isSet;
    bool m_safely_disposes_batteries_exception_isValid;

    bool m_safely_disposes_electronics;
    bool m_safely_disposes_electronics_isSet;
    bool m_safely_disposes_electronics_isValid;

    QString m_safely_disposes_electronics_exception;
    bool m_safely_disposes_electronics_exception_isSet;
    bool m_safely_disposes_electronics_exception_isValid;

    bool m_safely_disposes_lightbulbs;
    bool m_safely_disposes_lightbulbs_isSet;
    bool m_safely_disposes_lightbulbs_isValid;

    QString m_safely_disposes_lightbulbs_exception;
    bool m_safely_disposes_lightbulbs_exception_isSet;
    bool m_safely_disposes_lightbulbs_exception_isValid;

    bool m_safely_handles_hazardous_substances;
    bool m_safely_handles_hazardous_substances_isSet;
    bool m_safely_handles_hazardous_substances_isValid;

    QString m_safely_handles_hazardous_substances_exception;
    bool m_safely_handles_hazardous_substances_exception_isSet;
    bool m_safely_handles_hazardous_substances_exception_isValid;

    bool m_soap_donation_program;
    bool m_soap_donation_program_isSet;
    bool m_soap_donation_program_isValid;

    QString m_soap_donation_program_exception;
    bool m_soap_donation_program_exception_isSet;
    bool m_soap_donation_program_exception_isValid;

    bool m_toiletry_donation_program;
    bool m_toiletry_donation_program_isSet;
    bool m_toiletry_donation_program_isValid;

    QString m_toiletry_donation_program_exception;
    bool m_toiletry_donation_program_exception_isSet;
    bool m_toiletry_donation_program_exception_isValid;

    bool m_water_bottle_filling_stations;
    bool m_water_bottle_filling_stations_isSet;
    bool m_water_bottle_filling_stations_isValid;

    QString m_water_bottle_filling_stations_exception;
    bool m_water_bottle_filling_stations_exception_isSet;
    bool m_water_bottle_filling_stations_exception_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWasteReduction)

#endif // OAIWasteReduction_H
