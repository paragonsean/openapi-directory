/**
 * My Business Lodging API
 * The My Business Lodging API enables managing lodging business information on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEnergyEfficiency.h
 *
 * Energy efficiency practices implemented at the hotel.
 */

#ifndef OAIEnergyEfficiency_H
#define OAIEnergyEfficiency_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEnergyEfficiency : public OAIObject {
public:
    OAIEnergyEfficiency();
    OAIEnergyEfficiency(QString json);
    ~OAIEnergyEfficiency() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCarbonFreeEnergySources() const;
    void setCarbonFreeEnergySources(const bool &carbon_free_energy_sources);
    bool is_carbon_free_energy_sources_Set() const;
    bool is_carbon_free_energy_sources_Valid() const;

    QString getCarbonFreeEnergySourcesException() const;
    void setCarbonFreeEnergySourcesException(const QString &carbon_free_energy_sources_exception);
    bool is_carbon_free_energy_sources_exception_Set() const;
    bool is_carbon_free_energy_sources_exception_Valid() const;

    bool isEnergyConservationProgram() const;
    void setEnergyConservationProgram(const bool &energy_conservation_program);
    bool is_energy_conservation_program_Set() const;
    bool is_energy_conservation_program_Valid() const;

    QString getEnergyConservationProgramException() const;
    void setEnergyConservationProgramException(const QString &energy_conservation_program_exception);
    bool is_energy_conservation_program_exception_Set() const;
    bool is_energy_conservation_program_exception_Valid() const;

    bool isEnergyEfficientHeatingAndCoolingSystems() const;
    void setEnergyEfficientHeatingAndCoolingSystems(const bool &energy_efficient_heating_and_cooling_systems);
    bool is_energy_efficient_heating_and_cooling_systems_Set() const;
    bool is_energy_efficient_heating_and_cooling_systems_Valid() const;

    QString getEnergyEfficientHeatingAndCoolingSystemsException() const;
    void setEnergyEfficientHeatingAndCoolingSystemsException(const QString &energy_efficient_heating_and_cooling_systems_exception);
    bool is_energy_efficient_heating_and_cooling_systems_exception_Set() const;
    bool is_energy_efficient_heating_and_cooling_systems_exception_Valid() const;

    bool isEnergyEfficientLighting() const;
    void setEnergyEfficientLighting(const bool &energy_efficient_lighting);
    bool is_energy_efficient_lighting_Set() const;
    bool is_energy_efficient_lighting_Valid() const;

    QString getEnergyEfficientLightingException() const;
    void setEnergyEfficientLightingException(const QString &energy_efficient_lighting_exception);
    bool is_energy_efficient_lighting_exception_Set() const;
    bool is_energy_efficient_lighting_exception_Valid() const;

    bool isEnergySavingThermostats() const;
    void setEnergySavingThermostats(const bool &energy_saving_thermostats);
    bool is_energy_saving_thermostats_Set() const;
    bool is_energy_saving_thermostats_Valid() const;

    QString getEnergySavingThermostatsException() const;
    void setEnergySavingThermostatsException(const QString &energy_saving_thermostats_exception);
    bool is_energy_saving_thermostats_exception_Set() const;
    bool is_energy_saving_thermostats_exception_Valid() const;

    bool isGreenBuildingDesign() const;
    void setGreenBuildingDesign(const bool &green_building_design);
    bool is_green_building_design_Set() const;
    bool is_green_building_design_Valid() const;

    QString getGreenBuildingDesignException() const;
    void setGreenBuildingDesignException(const QString &green_building_design_exception);
    bool is_green_building_design_exception_Set() const;
    bool is_green_building_design_exception_Valid() const;

    bool isIndependentOrganizationAuditsEnergyUse() const;
    void setIndependentOrganizationAuditsEnergyUse(const bool &independent_organization_audits_energy_use);
    bool is_independent_organization_audits_energy_use_Set() const;
    bool is_independent_organization_audits_energy_use_Valid() const;

    QString getIndependentOrganizationAuditsEnergyUseException() const;
    void setIndependentOrganizationAuditsEnergyUseException(const QString &independent_organization_audits_energy_use_exception);
    bool is_independent_organization_audits_energy_use_exception_Set() const;
    bool is_independent_organization_audits_energy_use_exception_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_carbon_free_energy_sources;
    bool m_carbon_free_energy_sources_isSet;
    bool m_carbon_free_energy_sources_isValid;

    QString m_carbon_free_energy_sources_exception;
    bool m_carbon_free_energy_sources_exception_isSet;
    bool m_carbon_free_energy_sources_exception_isValid;

    bool m_energy_conservation_program;
    bool m_energy_conservation_program_isSet;
    bool m_energy_conservation_program_isValid;

    QString m_energy_conservation_program_exception;
    bool m_energy_conservation_program_exception_isSet;
    bool m_energy_conservation_program_exception_isValid;

    bool m_energy_efficient_heating_and_cooling_systems;
    bool m_energy_efficient_heating_and_cooling_systems_isSet;
    bool m_energy_efficient_heating_and_cooling_systems_isValid;

    QString m_energy_efficient_heating_and_cooling_systems_exception;
    bool m_energy_efficient_heating_and_cooling_systems_exception_isSet;
    bool m_energy_efficient_heating_and_cooling_systems_exception_isValid;

    bool m_energy_efficient_lighting;
    bool m_energy_efficient_lighting_isSet;
    bool m_energy_efficient_lighting_isValid;

    QString m_energy_efficient_lighting_exception;
    bool m_energy_efficient_lighting_exception_isSet;
    bool m_energy_efficient_lighting_exception_isValid;

    bool m_energy_saving_thermostats;
    bool m_energy_saving_thermostats_isSet;
    bool m_energy_saving_thermostats_isValid;

    QString m_energy_saving_thermostats_exception;
    bool m_energy_saving_thermostats_exception_isSet;
    bool m_energy_saving_thermostats_exception_isValid;

    bool m_green_building_design;
    bool m_green_building_design_isSet;
    bool m_green_building_design_isValid;

    QString m_green_building_design_exception;
    bool m_green_building_design_exception_isSet;
    bool m_green_building_design_exception_isValid;

    bool m_independent_organization_audits_energy_use;
    bool m_independent_organization_audits_energy_use_isSet;
    bool m_independent_organization_audits_energy_use_isValid;

    QString m_independent_organization_audits_energy_use_exception;
    bool m_independent_organization_audits_energy_use_exception_isSet;
    bool m_independent_organization_audits_energy_use_exception_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEnergyEfficiency)

#endif // OAIEnergyEfficiency_H
