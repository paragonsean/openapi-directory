/**
 * My Business Lodging API
 * The My Business Lodging API enables managing lodging business information on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransportation.h
 *
 * Vehicles or vehicular services facilitated or owned by the property.
 */

#ifndef OAITransportation_H
#define OAITransportation_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITransportation : public OAIObject {
public:
    OAITransportation();
    OAITransportation(QString json);
    ~OAITransportation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAirportShuttle() const;
    void setAirportShuttle(const bool &airport_shuttle);
    bool is_airport_shuttle_Set() const;
    bool is_airport_shuttle_Valid() const;

    QString getAirportShuttleException() const;
    void setAirportShuttleException(const QString &airport_shuttle_exception);
    bool is_airport_shuttle_exception_Set() const;
    bool is_airport_shuttle_exception_Valid() const;

    bool isCarRentalOnProperty() const;
    void setCarRentalOnProperty(const bool &car_rental_on_property);
    bool is_car_rental_on_property_Set() const;
    bool is_car_rental_on_property_Valid() const;

    QString getCarRentalOnPropertyException() const;
    void setCarRentalOnPropertyException(const QString &car_rental_on_property_exception);
    bool is_car_rental_on_property_exception_Set() const;
    bool is_car_rental_on_property_exception_Valid() const;

    bool isFreeAirportShuttle() const;
    void setFreeAirportShuttle(const bool &free_airport_shuttle);
    bool is_free_airport_shuttle_Set() const;
    bool is_free_airport_shuttle_Valid() const;

    QString getFreeAirportShuttleException() const;
    void setFreeAirportShuttleException(const QString &free_airport_shuttle_exception);
    bool is_free_airport_shuttle_exception_Set() const;
    bool is_free_airport_shuttle_exception_Valid() const;

    bool isFreePrivateCarService() const;
    void setFreePrivateCarService(const bool &free_private_car_service);
    bool is_free_private_car_service_Set() const;
    bool is_free_private_car_service_Valid() const;

    QString getFreePrivateCarServiceException() const;
    void setFreePrivateCarServiceException(const QString &free_private_car_service_exception);
    bool is_free_private_car_service_exception_Set() const;
    bool is_free_private_car_service_exception_Valid() const;

    bool isLocalShuttle() const;
    void setLocalShuttle(const bool &local_shuttle);
    bool is_local_shuttle_Set() const;
    bool is_local_shuttle_Valid() const;

    QString getLocalShuttleException() const;
    void setLocalShuttleException(const QString &local_shuttle_exception);
    bool is_local_shuttle_exception_Set() const;
    bool is_local_shuttle_exception_Valid() const;

    bool isPrivateCarService() const;
    void setPrivateCarService(const bool &private_car_service);
    bool is_private_car_service_Set() const;
    bool is_private_car_service_Valid() const;

    QString getPrivateCarServiceException() const;
    void setPrivateCarServiceException(const QString &private_car_service_exception);
    bool is_private_car_service_exception_Set() const;
    bool is_private_car_service_exception_Valid() const;

    bool isTransfer() const;
    void setTransfer(const bool &transfer);
    bool is_transfer_Set() const;
    bool is_transfer_Valid() const;

    QString getTransferException() const;
    void setTransferException(const QString &transfer_exception);
    bool is_transfer_exception_Set() const;
    bool is_transfer_exception_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_airport_shuttle;
    bool m_airport_shuttle_isSet;
    bool m_airport_shuttle_isValid;

    QString m_airport_shuttle_exception;
    bool m_airport_shuttle_exception_isSet;
    bool m_airport_shuttle_exception_isValid;

    bool m_car_rental_on_property;
    bool m_car_rental_on_property_isSet;
    bool m_car_rental_on_property_isValid;

    QString m_car_rental_on_property_exception;
    bool m_car_rental_on_property_exception_isSet;
    bool m_car_rental_on_property_exception_isValid;

    bool m_free_airport_shuttle;
    bool m_free_airport_shuttle_isSet;
    bool m_free_airport_shuttle_isValid;

    QString m_free_airport_shuttle_exception;
    bool m_free_airport_shuttle_exception_isSet;
    bool m_free_airport_shuttle_exception_isValid;

    bool m_free_private_car_service;
    bool m_free_private_car_service_isSet;
    bool m_free_private_car_service_isValid;

    QString m_free_private_car_service_exception;
    bool m_free_private_car_service_exception_isSet;
    bool m_free_private_car_service_exception_isValid;

    bool m_local_shuttle;
    bool m_local_shuttle_isSet;
    bool m_local_shuttle_isValid;

    QString m_local_shuttle_exception;
    bool m_local_shuttle_exception_isSet;
    bool m_local_shuttle_exception_isValid;

    bool m_private_car_service;
    bool m_private_car_service_isSet;
    bool m_private_car_service_isValid;

    QString m_private_car_service_exception;
    bool m_private_car_service_exception_isSet;
    bool m_private_car_service_exception_isValid;

    bool m_transfer;
    bool m_transfer_isSet;
    bool m_transfer_isValid;

    QString m_transfer_exception;
    bool m_transfer_exception_isSet;
    bool m_transfer_exception_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransportation)

#endif // OAITransportation_H
