openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: ""
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: HomeGraph API
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - converter:
      url: https://github.com/mermade/oas-kit
      version: 7.0.4
    format: google
    url: https://homegraph.googleapis.com/$discovery/rest?version=v1
    version: v1
  x-providerName: googleapis.com
  x-serviceName: homegraph
externalDocs:
  url: https://developers.home.google.com/cloud-to-cloud/get-started
servers:
- url: https://homegraph.googleapis.com/
tags:
- name: agentUsers
- name: devices
paths:
  /v1/devices:query:
    post:
      description: Gets the current states in Home Graph for the given set of the
        third-party user's devices. The third-party user's identity is passed in via
        the `agent_user_id` (see QueryRequest). This request must be authorized using
        service account credentials from your Actions console project.
      operationId: homegraph.devices.query
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/homegraph
        Oauth2c:
        - https://www.googleapis.com/auth/homegraph
      tags:
      - devices
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/devices:reportStateAndNotification:
    post:
      description: "Reports device state and optionally sends device notifications.\
        \ Called by your smart home Action when the state of a third-party device\
        \ changes or you need to send a notification about the device. See [Implement\
        \ Report State](https://developers.home.google.com/cloud-to-cloud/integration/report-state)\
        \ for more information. This method updates the device state according to\
        \ its declared [traits](https://developers.home.google.com/cloud-to-cloud/primer/device-types-and-traits).\
        \ Publishing a new state value outside of these traits will result in an `INVALID_ARGUMENT`\
        \ error response. The third-party user's identity is passed in via the `agent_user_id`\
        \ (see ReportStateAndNotificationRequest). This request must be authorized\
        \ using service account credentials from your Actions console project."
      operationId: homegraph.devices.reportStateAndNotification
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportStateAndNotificationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportStateAndNotificationResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/homegraph
        Oauth2c:
        - https://www.googleapis.com/auth/homegraph
      tags:
      - devices
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/devices:requestSync:
    post:
      description: "Requests Google to send an `action.devices.SYNC` [intent](https://developers.home.google.com/cloud-to-cloud/intents/sync)\
        \ to your smart home Action to update device metadata for the given user.\
        \ The third-party user's identity is passed via the `agent_user_id` (see RequestSyncDevicesRequest).\
        \ This request must be authorized using service account credentials from your\
        \ Actions console project."
      operationId: homegraph.devices.requestSync
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSyncDevicesRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestSyncDevicesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/homegraph
        Oauth2c:
        - https://www.googleapis.com/auth/homegraph
      tags:
      - devices
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/devices:sync:
    post:
      description: Gets all the devices associated with the given third-party user.
        The third-party user's identity is passed in via the `agent_user_id` (see
        SyncRequest). This request must be authorized using service account credentials
        from your Actions console project.
      operationId: homegraph.devices.sync
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/homegraph
        Oauth2c:
        - https://www.googleapis.com/auth/homegraph
      tags:
      - devices
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{agentUserId}:
    delete:
      description: "Unlinks the given third-party user from your smart home Action.\
        \ All data related to this user will be deleted. For more details on how users\
        \ link their accounts, see [fulfillment and authentication](https://developers.home.google.com/cloud-to-cloud/primer/fulfillment).\
        \ The third-party user's identity is passed in via the `agent_user_id` (see\
        \ DeleteAgentUserRequest). This request must be authorized using service account\
        \ credentials from your Actions console project."
      operationId: homegraph.agentUsers.delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. Third-party user ID.
        explode: false
        in: path
        name: agentUserId
        required: true
        schema:
          type: string
        style: simple
      - description: Request ID used for debugging.
        explode: true
        in: query
        name: requestId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/homegraph
        Oauth2c:
        - https://www.googleapis.com/auth/homegraph
      tags:
      - agentUsers
      x-accepts:
      - application/json
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    AgentDeviceId:
      description: Third-party device ID for one device.
      example:
        id: id
      properties:
        id:
          description: Third-party device ID.
          type: string
      type: object
    AgentOtherDeviceId:
      description: Alternate third-party device ID.
      example:
        agentId: agentId
        deviceId: deviceId
      properties:
        agentId:
          description: Project ID for your smart home Action.
          type: string
        deviceId:
          description: Unique third-party device ID.
          type: string
      type: object
    Device:
      description: Third-party device definition.
      example:
        notificationSupportedByAgent: true
        traits:
        - traits
        - traits
        otherDeviceIds:
        - agentId: agentId
          deviceId: deviceId
        - agentId: agentId
          deviceId: deviceId
        roomHint: roomHint
        willReportState: true
        name:
          defaultNames:
          - defaultNames
          - defaultNames
          name: name
          nicknames:
          - nicknames
          - nicknames
        attributes:
          key: ""
        customData:
          key: ""
        id: id
        type: type
        deviceInfo:
          swVersion: swVersion
          model: model
          hwVersion: hwVersion
          manufacturer: manufacturer
        structureHint: structureHint
      properties:
        attributes:
          additionalProperties:
            description: Properties of the object.
          description: Attributes for the traits supported by the device.
          type: object
        customData:
          additionalProperties:
            description: Properties of the object.
          description: "Custom device attributes stored in Home Graph and provided\
            \ to your smart home Action in each [QUERY](https://developers.home.google.com/cloud-to-cloud/intents/query)\
            \ and [EXECUTE](https://developers.home.google.com/cloud-to-cloud/intents/execute)\
            \ intent. Data in this object has a few constraints: No sensitive information,\
            \ including but not limited to Personally Identifiable Information."
          type: object
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        id:
          description: Third-party device ID.
          type: string
        name:
          $ref: '#/components/schemas/DeviceNames'
        notificationSupportedByAgent:
          description: "Indicates whether your smart home Action will report notifications\
            \ to Google for this device via ReportStateAndNotification. If your smart\
            \ home Action enables users to control device notifications, you should\
            \ update this field and call RequestSyncDevices."
          type: boolean
        otherDeviceIds:
          description: "Alternate IDs associated with this device. This is used to\
            \ identify cloud synced devices enabled for [local fulfillment](https://developers.home.google.com/local-home/overview)."
          items:
            $ref: '#/components/schemas/AgentOtherDeviceId'
          type: array
        roomHint:
          description: Suggested name for the room where this device is installed.
            Google attempts to use this value during user setup.
          type: string
        structureHint:
          description: Suggested name for the structure where this device is installed.
            Google attempts to use this value during user setup.
          type: string
        traits:
          description: "Traits supported by the device. See [device traits](https://developers.home.google.com/cloud-to-cloud/traits)."
          items:
            type: string
          type: array
        type:
          description: "Hardware type of the device. See [device types](https://developers.home.google.com/cloud-to-cloud/guides)."
          type: string
        willReportState:
          description: Indicates whether your smart home Action will report state
            of this device to Google via ReportStateAndNotification.
          type: boolean
      type: object
    DeviceInfo:
      description: Device information.
      example:
        swVersion: swVersion
        model: model
        hwVersion: hwVersion
        manufacturer: manufacturer
      properties:
        hwVersion:
          description: Device hardware version.
          type: string
        manufacturer:
          description: Device manufacturer.
          type: string
        model:
          description: Device model.
          type: string
        swVersion:
          description: Device software version.
          type: string
      type: object
    DeviceNames:
      description: Identifiers used to describe the device.
      example:
        defaultNames:
        - defaultNames
        - defaultNames
        name: name
        nicknames:
        - nicknames
        - nicknames
      properties:
        defaultNames:
          description: "List of names provided by the manufacturer rather than the\
            \ user, such as serial numbers, SKUs, etc."
          items:
            type: string
          type: array
        name:
          description: "Primary name of the device, generally provided by the user."
          type: string
        nicknames:
          description: Additional names provided by the user for the device.
          items:
            type: string
          type: array
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining\
        \ duplicated empty messages in your APIs. A typical example is to use it as\
        \ the request or the response type of an API method. For instance: service\
        \ Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    QueryRequest:
      description: "Request type for the [`Query`](#google.home.graph.v1.HomeGraphApiService.Query)\
        \ call."
      example:
        agentUserId: agentUserId
        inputs:
        - payload:
            devices:
            - id: id
            - id: id
        - payload:
            devices:
            - id: id
            - id: id
        requestId: requestId
      properties:
        agentUserId:
          description: Required. Third-party user ID.
          type: string
        inputs:
          description: Required. Inputs containing third-party device IDs for which
            to get the device states.
          items:
            $ref: '#/components/schemas/QueryRequestInput'
          type: array
        requestId:
          description: Request ID used for debugging.
          type: string
      type: object
    QueryRequestInput:
      description: Device ID inputs to QueryRequest.
      example:
        payload:
          devices:
          - id: id
          - id: id
      properties:
        payload:
          $ref: '#/components/schemas/QueryRequestPayload'
      type: object
    QueryRequestPayload:
      description: Payload containing device IDs.
      example:
        devices:
        - id: id
        - id: id
      properties:
        devices:
          description: Third-party device IDs for which to get the device states.
          items:
            $ref: '#/components/schemas/AgentDeviceId'
          type: array
      type: object
    QueryResponse:
      description: "Response type for the [`Query`](#google.home.graph.v1.HomeGraphApiService.Query)\
        \ call. This should follow the same format as the Google smart home `action.devices.QUERY`\
        \ [response](https://developers.home.google.com/cloud-to-cloud/intents/query).\
        \ Example: ```json { \"requestId\": \"ff36a3cc-ec34-11e6-b1a0-64510650abcf\"\
        , \"payload\": { \"devices\": { \"123\": { \"on\": true, \"online\": true\
        \ }, \"456\": { \"on\": true, \"online\": true, \"brightness\": 80, \"color\"\
        : { \"name\": \"cerulean\", \"spectrumRGB\": 31655 } } } } } ```"
      example:
        payload:
          devices:
            key:
              key: ""
        requestId: requestId
      properties:
        payload:
          $ref: '#/components/schemas/QueryResponsePayload'
        requestId:
          description: Request ID used for debugging. Copied from the request.
          type: string
      type: object
    QueryResponsePayload:
      description: Payload containing device states information.
      example:
        devices:
          key:
            key: ""
      properties:
        devices:
          additionalProperties:
            additionalProperties:
              description: Properties of the object.
            type: object
          description: States of the devices. Map of third-party device ID to struct
            of device states.
          type: object
      type: object
    ReportStateAndNotificationDevice:
      description: The states and notifications specific to a device.
      example:
        notifications:
          key: ""
        states:
          key: ""
      properties:
        notifications:
          additionalProperties:
            description: Properties of the object.
          description: "Notifications metadata for devices. See the **Device NOTIFICATIONS**\
            \ section of the individual trait [reference guides](https://developers.home.google.com/cloud-to-cloud/traits)."
          type: object
        states:
          additionalProperties:
            description: Properties of the object.
          description: "States of devices to update. See the **Device STATES** section\
            \ of the individual trait [reference guides](https://developers.home.google.com/cloud-to-cloud/traits)."
          type: object
      type: object
    ReportStateAndNotificationRequest:
      description: "Request type for the [`ReportStateAndNotification`](#google.home.graph.v1.HomeGraphApiService.ReportStateAndNotification)\
        \ call. It may include states, notifications, or both. States and notifications\
        \ are defined per `device_id` (for example, \"123\" and \"456\" in the following\
        \ example). Example: ```json { \"requestId\": \"ff36a3cc-ec34-11e6-b1a0-64510650abcf\"\
        , \"agentUserId\": \"1234\", \"payload\": { \"devices\": { \"states\": { \"\
        123\": { \"on\": true }, \"456\": { \"on\": true, \"brightness\": 10 } },\
        \ } } } ```"
      example:
        eventId: eventId
        agentUserId: agentUserId
        followUpToken: followUpToken
        payload:
          devices:
            notifications:
              key: ""
            states:
              key: ""
        requestId: requestId
      properties:
        agentUserId:
          description: Required. Third-party user ID.
          type: string
        eventId:
          description: "Unique identifier per event (for example, a doorbell press)."
          type: string
        followUpToken:
          deprecated: true
          description: Deprecated.
          type: string
        payload:
          $ref: '#/components/schemas/StateAndNotificationPayload'
        requestId:
          description: Request ID used for debugging.
          type: string
      type: object
    ReportStateAndNotificationResponse:
      description: "Response type for the [`ReportStateAndNotification`](#google.home.graph.v1.HomeGraphApiService.ReportStateAndNotification)\
        \ call."
      example:
        requestId: requestId
      properties:
        requestId:
          description: Request ID copied from ReportStateAndNotificationRequest.
          type: string
      type: object
    RequestSyncDevicesRequest:
      description: "Request type for the [`RequestSyncDevices`](#google.home.graph.v1.HomeGraphApiService.RequestSyncDevices)\
        \ call."
      example:
        async: true
        agentUserId: agentUserId
      properties:
        agentUserId:
          description: Required. Third-party user ID.
          type: string
        async:
          description: "Optional. If set, the request will be added to a queue and\
            \ a response will be returned immediately. This enables concurrent requests\
            \ for the given `agent_user_id`, but the caller will not receive any error\
            \ responses."
          type: boolean
      type: object
    RequestSyncDevicesResponse:
      description: "Response type for the [`RequestSyncDevices`](#google.home.graph.v1.HomeGraphApiService.RequestSyncDevices)\
        \ call. Intentionally empty upon success. An HTTP response code is returned\
        \ with more details upon failure."
      properties: {}
      type: object
    StateAndNotificationPayload:
      description: Payload containing the state and notification information for devices.
      example:
        devices:
          notifications:
            key: ""
          states:
            key: ""
      properties:
        devices:
          $ref: '#/components/schemas/ReportStateAndNotificationDevice'
      type: object
    SyncRequest:
      description: "Request type for the [`Sync`](#google.home.graph.v1.HomeGraphApiService.Sync)\
        \ call."
      example:
        agentUserId: agentUserId
        requestId: requestId
      properties:
        agentUserId:
          description: Required. Third-party user ID.
          type: string
        requestId:
          description: Request ID used for debugging.
          type: string
      type: object
    SyncResponse:
      description: "Response type for the [`Sync`](#google.home.graph.v1.HomeGraphApiService.Sync)\
        \ call. This should follow the same format as the Google smart home `action.devices.SYNC`\
        \ [response](https://developers.home.google.com/cloud-to-cloud/intents/sync).\
        \ Example: ```json { \"requestId\": \"ff36a3cc-ec34-11e6-b1a0-64510650abcf\"\
        , \"payload\": { \"agentUserId\": \"1836.15267389\", \"devices\": [{ \"id\"\
        : \"123\", \"type\": \"action.devices.types.OUTLET\", \"traits\": [ \"action.devices.traits.OnOff\"\
        \ ], \"name\": { \"defaultNames\": [\"My Outlet 1234\"], \"name\": \"Night\
        \ light\", \"nicknames\": [\"wall plug\"] }, \"willReportState\": false, \"\
        deviceInfo\": { \"manufacturer\": \"lights-out-inc\", \"model\": \"hs1234\"\
        , \"hwVersion\": \"3.2\", \"swVersion\": \"11.4\" }, \"customData\": { \"\
        fooValue\": 74, \"barValue\": true, \"bazValue\": \"foo\" } }] } } ```"
      example:
        payload:
          agentUserId: agentUserId
          devices:
          - notificationSupportedByAgent: true
            traits:
            - traits
            - traits
            otherDeviceIds:
            - agentId: agentId
              deviceId: deviceId
            - agentId: agentId
              deviceId: deviceId
            roomHint: roomHint
            willReportState: true
            name:
              defaultNames:
              - defaultNames
              - defaultNames
              name: name
              nicknames:
              - nicknames
              - nicknames
            attributes:
              key: ""
            customData:
              key: ""
            id: id
            type: type
            deviceInfo:
              swVersion: swVersion
              model: model
              hwVersion: hwVersion
              manufacturer: manufacturer
            structureHint: structureHint
          - notificationSupportedByAgent: true
            traits:
            - traits
            - traits
            otherDeviceIds:
            - agentId: agentId
              deviceId: deviceId
            - agentId: agentId
              deviceId: deviceId
            roomHint: roomHint
            willReportState: true
            name:
              defaultNames:
              - defaultNames
              - defaultNames
              name: name
              nicknames:
              - nicknames
              - nicknames
            attributes:
              key: ""
            customData:
              key: ""
            id: id
            type: type
            deviceInfo:
              swVersion: swVersion
              model: model
              hwVersion: hwVersion
              manufacturer: manufacturer
            structureHint: structureHint
        requestId: requestId
      properties:
        payload:
          $ref: '#/components/schemas/SyncResponsePayload'
        requestId:
          description: Request ID used for debugging. Copied from the request.
          type: string
      type: object
    SyncResponsePayload:
      description: Payload containing device information.
      example:
        agentUserId: agentUserId
        devices:
        - notificationSupportedByAgent: true
          traits:
          - traits
          - traits
          otherDeviceIds:
          - agentId: agentId
            deviceId: deviceId
          - agentId: agentId
            deviceId: deviceId
          roomHint: roomHint
          willReportState: true
          name:
            defaultNames:
            - defaultNames
            - defaultNames
            name: name
            nicknames:
            - nicknames
            - nicknames
          attributes:
            key: ""
          customData:
            key: ""
          id: id
          type: type
          deviceInfo:
            swVersion: swVersion
            model: model
            hwVersion: hwVersion
            manufacturer: manufacturer
          structureHint: structureHint
        - notificationSupportedByAgent: true
          traits:
          - traits
          - traits
          otherDeviceIds:
          - agentId: agentId
            deviceId: deviceId
          - agentId: agentId
            deviceId: deviceId
          roomHint: roomHint
          willReportState: true
          name:
            defaultNames:
            - defaultNames
            - defaultNames
            name: name
            nicknames:
            - nicknames
            - nicknames
          attributes:
            key: ""
          customData:
            key: ""
          id: id
          type: type
          deviceInfo:
            swVersion: swVersion
            model: model
            hwVersion: hwVersion
            manufacturer: manufacturer
          structureHint: structureHint
      properties:
        agentUserId:
          description: Third-party user ID
          type: string
        devices:
          description: Devices associated with the third-party user.
          items:
            $ref: '#/components/schemas/Device'
          type: array
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/homegraph: "Private Service: https://www.googleapis.com/auth/homegraph"
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/homegraph: "Private Service: https://www.googleapis.com/auth/homegraph"
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2

