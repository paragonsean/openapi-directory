# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.device import Device
from openapi_server import util


class SyncResponsePayload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent_user_id: str=None, devices: List[Device]=None):
        """SyncResponsePayload - a model defined in OpenAPI

        :param agent_user_id: The agent_user_id of this SyncResponsePayload.
        :param devices: The devices of this SyncResponsePayload.
        """
        self.openapi_types = {
            'agent_user_id': str,
            'devices': List[Device]
        }

        self.attribute_map = {
            'agent_user_id': 'agentUserId',
            'devices': 'devices'
        }

        self._agent_user_id = agent_user_id
        self._devices = devices

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SyncResponsePayload':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SyncResponsePayload of this SyncResponsePayload.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent_user_id(self):
        """Gets the agent_user_id of this SyncResponsePayload.

        Third-party user ID

        :return: The agent_user_id of this SyncResponsePayload.
        :rtype: str
        """
        return self._agent_user_id

    @agent_user_id.setter
    def agent_user_id(self, agent_user_id):
        """Sets the agent_user_id of this SyncResponsePayload.

        Third-party user ID

        :param agent_user_id: The agent_user_id of this SyncResponsePayload.
        :type agent_user_id: str
        """

        self._agent_user_id = agent_user_id

    @property
    def devices(self):
        """Gets the devices of this SyncResponsePayload.

        Devices associated with the third-party user.

        :return: The devices of this SyncResponsePayload.
        :rtype: List[Device]
        """
        return self._devices

    @devices.setter
    def devices(self, devices):
        """Sets the devices of this SyncResponsePayload.

        Devices associated with the third-party user.

        :param devices: The devices of this SyncResponsePayload.
        :type devices: List[Device]
        """

        self._devices = devices
