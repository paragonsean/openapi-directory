# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.query_request_input import QueryRequestInput
from openapi_server import util


class QueryRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent_user_id: str=None, inputs: List[QueryRequestInput]=None, request_id: str=None):
        """QueryRequest - a model defined in OpenAPI

        :param agent_user_id: The agent_user_id of this QueryRequest.
        :param inputs: The inputs of this QueryRequest.
        :param request_id: The request_id of this QueryRequest.
        """
        self.openapi_types = {
            'agent_user_id': str,
            'inputs': List[QueryRequestInput],
            'request_id': str
        }

        self.attribute_map = {
            'agent_user_id': 'agentUserId',
            'inputs': 'inputs',
            'request_id': 'requestId'
        }

        self._agent_user_id = agent_user_id
        self._inputs = inputs
        self._request_id = request_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueryRequest of this QueryRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent_user_id(self):
        """Gets the agent_user_id of this QueryRequest.

        Required. Third-party user ID.

        :return: The agent_user_id of this QueryRequest.
        :rtype: str
        """
        return self._agent_user_id

    @agent_user_id.setter
    def agent_user_id(self, agent_user_id):
        """Sets the agent_user_id of this QueryRequest.

        Required. Third-party user ID.

        :param agent_user_id: The agent_user_id of this QueryRequest.
        :type agent_user_id: str
        """

        self._agent_user_id = agent_user_id

    @property
    def inputs(self):
        """Gets the inputs of this QueryRequest.

        Required. Inputs containing third-party device IDs for which to get the device states.

        :return: The inputs of this QueryRequest.
        :rtype: List[QueryRequestInput]
        """
        return self._inputs

    @inputs.setter
    def inputs(self, inputs):
        """Sets the inputs of this QueryRequest.

        Required. Inputs containing third-party device IDs for which to get the device states.

        :param inputs: The inputs of this QueryRequest.
        :type inputs: List[QueryRequestInput]
        """

        self._inputs = inputs

    @property
    def request_id(self):
        """Gets the request_id of this QueryRequest.

        Request ID used for debugging.

        :return: The request_id of this QueryRequest.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this QueryRequest.

        Request ID used for debugging.

        :param request_id: The request_id of this QueryRequest.
        :type request_id: str
        """

        self._request_id = request_id
