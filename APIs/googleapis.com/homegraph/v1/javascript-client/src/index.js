/**
 * HomeGraph API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AgentDeviceId from './model/AgentDeviceId';
import AgentOtherDeviceId from './model/AgentOtherDeviceId';
import Device from './model/Device';
import DeviceInfo from './model/DeviceInfo';
import DeviceNames from './model/DeviceNames';
import QueryRequest from './model/QueryRequest';
import QueryRequestInput from './model/QueryRequestInput';
import QueryRequestPayload from './model/QueryRequestPayload';
import QueryResponse from './model/QueryResponse';
import QueryResponsePayload from './model/QueryResponsePayload';
import ReportStateAndNotificationDevice from './model/ReportStateAndNotificationDevice';
import ReportStateAndNotificationRequest from './model/ReportStateAndNotificationRequest';
import ReportStateAndNotificationResponse from './model/ReportStateAndNotificationResponse';
import RequestSyncDevicesRequest from './model/RequestSyncDevicesRequest';
import StateAndNotificationPayload from './model/StateAndNotificationPayload';
import SyncRequest from './model/SyncRequest';
import SyncResponse from './model/SyncResponse';
import SyncResponsePayload from './model/SyncResponsePayload';
import AgentUsersApi from './api/AgentUsersApi';
import DevicesApi from './api/DevicesApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var HomeGraphApi = require('index'); // See note below*.
* var xxxSvc = new HomeGraphApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new HomeGraphApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new HomeGraphApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new HomeGraphApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AgentDeviceId model constructor.
     * @property {module:model/AgentDeviceId}
     */
    AgentDeviceId,

    /**
     * The AgentOtherDeviceId model constructor.
     * @property {module:model/AgentOtherDeviceId}
     */
    AgentOtherDeviceId,

    /**
     * The Device model constructor.
     * @property {module:model/Device}
     */
    Device,

    /**
     * The DeviceInfo model constructor.
     * @property {module:model/DeviceInfo}
     */
    DeviceInfo,

    /**
     * The DeviceNames model constructor.
     * @property {module:model/DeviceNames}
     */
    DeviceNames,

    /**
     * The QueryRequest model constructor.
     * @property {module:model/QueryRequest}
     */
    QueryRequest,

    /**
     * The QueryRequestInput model constructor.
     * @property {module:model/QueryRequestInput}
     */
    QueryRequestInput,

    /**
     * The QueryRequestPayload model constructor.
     * @property {module:model/QueryRequestPayload}
     */
    QueryRequestPayload,

    /**
     * The QueryResponse model constructor.
     * @property {module:model/QueryResponse}
     */
    QueryResponse,

    /**
     * The QueryResponsePayload model constructor.
     * @property {module:model/QueryResponsePayload}
     */
    QueryResponsePayload,

    /**
     * The ReportStateAndNotificationDevice model constructor.
     * @property {module:model/ReportStateAndNotificationDevice}
     */
    ReportStateAndNotificationDevice,

    /**
     * The ReportStateAndNotificationRequest model constructor.
     * @property {module:model/ReportStateAndNotificationRequest}
     */
    ReportStateAndNotificationRequest,

    /**
     * The ReportStateAndNotificationResponse model constructor.
     * @property {module:model/ReportStateAndNotificationResponse}
     */
    ReportStateAndNotificationResponse,

    /**
     * The RequestSyncDevicesRequest model constructor.
     * @property {module:model/RequestSyncDevicesRequest}
     */
    RequestSyncDevicesRequest,

    /**
     * The StateAndNotificationPayload model constructor.
     * @property {module:model/StateAndNotificationPayload}
     */
    StateAndNotificationPayload,

    /**
     * The SyncRequest model constructor.
     * @property {module:model/SyncRequest}
     */
    SyncRequest,

    /**
     * The SyncResponse model constructor.
     * @property {module:model/SyncResponse}
     */
    SyncResponse,

    /**
     * The SyncResponsePayload model constructor.
     * @property {module:model/SyncResponsePayload}
     */
    SyncResponsePayload,

    /**
    * The AgentUsersApi service constructor.
    * @property {module:api/AgentUsersApi}
    */
    AgentUsersApi,

    /**
    * The DevicesApi service constructor.
    * @property {module:api/DevicesApi}
    */
    DevicesApi
};
