/**
 * HomeGraph API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QueryResponsePayload from './QueryResponsePayload';

/**
 * The QueryResponse model module.
 * @module model/QueryResponse
 * @version v1
 */
class QueryResponse {
    /**
     * Constructs a new <code>QueryResponse</code>.
     * Response type for the [&#x60;Query&#x60;](#google.home.graph.v1.HomeGraphApiService.Query) call. This should follow the same format as the Google smart home &#x60;action.devices.QUERY&#x60; [response](https://developers.home.google.com/cloud-to-cloud/intents/query). Example: &#x60;&#x60;&#x60;json { \&quot;requestId\&quot;: \&quot;ff36a3cc-ec34-11e6-b1a0-64510650abcf\&quot;, \&quot;payload\&quot;: { \&quot;devices\&quot;: { \&quot;123\&quot;: { \&quot;on\&quot;: true, \&quot;online\&quot;: true }, \&quot;456\&quot;: { \&quot;on\&quot;: true, \&quot;online\&quot;: true, \&quot;brightness\&quot;: 80, \&quot;color\&quot;: { \&quot;name\&quot;: \&quot;cerulean\&quot;, \&quot;spectrumRGB\&quot;: 31655 } } } } } &#x60;&#x60;&#x60;
     * @alias module:model/QueryResponse
     */
    constructor() { 
        
        QueryResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QueryResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryResponse} obj Optional instance to populate.
     * @return {module:model/QueryResponse} The populated <code>QueryResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryResponse();

            if (data.hasOwnProperty('payload')) {
                obj['payload'] = QueryResponsePayload.constructFromObject(data['payload']);
            }
            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueryResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueryResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `payload`
        if (data['payload']) { // data not null
          QueryResponsePayload.validateJSON(data['payload']);
        }
        // ensure the json data is a string
        if (data['requestId'] && !(typeof data['requestId'] === 'string' || data['requestId'] instanceof String)) {
            throw new Error("Expected the field `requestId` to be a primitive type in the JSON string but got " + data['requestId']);
        }

        return true;
    }


}



/**
 * @member {module:model/QueryResponsePayload} payload
 */
QueryResponse.prototype['payload'] = undefined;

/**
 * Request ID used for debugging. Copied from the request.
 * @member {String} requestId
 */
QueryResponse.prototype['requestId'] = undefined;






export default QueryResponse;

