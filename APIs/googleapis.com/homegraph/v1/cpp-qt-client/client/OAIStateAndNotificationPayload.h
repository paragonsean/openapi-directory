/**
 * HomeGraph API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStateAndNotificationPayload.h
 *
 * Payload containing the state and notification information for devices.
 */

#ifndef OAIStateAndNotificationPayload_H
#define OAIStateAndNotificationPayload_H

#include <QJsonObject>

#include "OAIReportStateAndNotificationDevice.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReportStateAndNotificationDevice;

class OAIStateAndNotificationPayload : public OAIObject {
public:
    OAIStateAndNotificationPayload();
    OAIStateAndNotificationPayload(QString json);
    ~OAIStateAndNotificationPayload() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIReportStateAndNotificationDevice getDevices() const;
    void setDevices(const OAIReportStateAndNotificationDevice &devices);
    bool is_devices_Set() const;
    bool is_devices_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIReportStateAndNotificationDevice m_devices;
    bool m_devices_isSet;
    bool m_devices_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStateAndNotificationPayload)

#endif // OAIStateAndNotificationPayload_H
