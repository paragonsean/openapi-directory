/**
 * HomeGraph API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReportStateAndNotificationDevice.h
 *
 * The states and notifications specific to a device.
 */

#ifndef OAIReportStateAndNotificationDevice_H
#define OAIReportStateAndNotificationDevice_H

#include <QJsonObject>

#include <QJsonValue>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIReportStateAndNotificationDevice : public OAIObject {
public:
    OAIReportStateAndNotificationDevice();
    OAIReportStateAndNotificationDevice(QString json);
    ~OAIReportStateAndNotificationDevice() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QJsonValue> getNotifications() const;
    void setNotifications(const QMap<QString, QJsonValue> &notifications);
    bool is_notifications_Set() const;
    bool is_notifications_Valid() const;

    QMap<QString, QJsonValue> getStates() const;
    void setStates(const QMap<QString, QJsonValue> &states);
    bool is_states_Set() const;
    bool is_states_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QJsonValue> m_notifications;
    bool m_notifications_isSet;
    bool m_notifications_isValid;

    QMap<QString, QJsonValue> m_states;
    bool m_states_isSet;
    bool m_states_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReportStateAndNotificationDevice)

#endif // OAIReportStateAndNotificationDevice_H
