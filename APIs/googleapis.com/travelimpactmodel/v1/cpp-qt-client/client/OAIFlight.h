/**
 * Travel Impact Model API
 * Travel Impact Model API lets you query travel carbon emission estimates.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFlight.h
 *
 * All details related to a single request item for a direct flight emission estimates.
 */

#ifndef OAIFlight_H
#define OAIFlight_H

#include <QJsonObject>

#include "OAIDate.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDate;

class OAIFlight : public OAIObject {
public:
    OAIFlight();
    OAIFlight(QString json);
    ~OAIFlight() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDate getDepartureDate() const;
    void setDepartureDate(const OAIDate &departure_date);
    bool is_departure_date_Set() const;
    bool is_departure_date_Valid() const;

    QString getDestination() const;
    void setDestination(const QString &destination);
    bool is_destination_Set() const;
    bool is_destination_Valid() const;

    qint32 getFlightNumber() const;
    void setFlightNumber(const qint32 &flight_number);
    bool is_flight_number_Set() const;
    bool is_flight_number_Valid() const;

    QString getOperatingCarrierCode() const;
    void setOperatingCarrierCode(const QString &operating_carrier_code);
    bool is_operating_carrier_code_Set() const;
    bool is_operating_carrier_code_Valid() const;

    QString getOrigin() const;
    void setOrigin(const QString &origin);
    bool is_origin_Set() const;
    bool is_origin_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDate m_departure_date;
    bool m_departure_date_isSet;
    bool m_departure_date_isValid;

    QString m_destination;
    bool m_destination_isSet;
    bool m_destination_isValid;

    qint32 m_flight_number;
    bool m_flight_number_isSet;
    bool m_flight_number_isValid;

    QString m_operating_carrier_code;
    bool m_operating_carrier_code_isSet;
    bool m_operating_carrier_code_isValid;

    QString m_origin;
    bool m_origin_isSet;
    bool m_origin_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFlight)

#endif // OAIFlight_H
