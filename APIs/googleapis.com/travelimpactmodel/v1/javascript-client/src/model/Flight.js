/**
 * Travel Impact Model API
 * Travel Impact Model API lets you query travel carbon emission estimates.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelDate from './ModelDate';

/**
 * The Flight model module.
 * @module model/Flight
 * @version v1
 */
class Flight {
    /**
     * Constructs a new <code>Flight</code>.
     * All details related to a single request item for a direct flight emission estimates.
     * @alias module:model/Flight
     */
    constructor() { 
        
        Flight.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Flight</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Flight} obj Optional instance to populate.
     * @return {module:model/Flight} The populated <code>Flight</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Flight();

            if (data.hasOwnProperty('departureDate')) {
                obj['departureDate'] = ModelDate.constructFromObject(data['departureDate']);
            }
            if (data.hasOwnProperty('destination')) {
                obj['destination'] = ApiClient.convertToType(data['destination'], 'String');
            }
            if (data.hasOwnProperty('flightNumber')) {
                obj['flightNumber'] = ApiClient.convertToType(data['flightNumber'], 'Number');
            }
            if (data.hasOwnProperty('operatingCarrierCode')) {
                obj['operatingCarrierCode'] = ApiClient.convertToType(data['operatingCarrierCode'], 'String');
            }
            if (data.hasOwnProperty('origin')) {
                obj['origin'] = ApiClient.convertToType(data['origin'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Flight</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Flight</code>.
     */
    static validateJSON(data) {
        // validate the optional field `departureDate`
        if (data['departureDate']) { // data not null
          ModelDate.validateJSON(data['departureDate']);
        }
        // ensure the json data is a string
        if (data['destination'] && !(typeof data['destination'] === 'string' || data['destination'] instanceof String)) {
            throw new Error("Expected the field `destination` to be a primitive type in the JSON string but got " + data['destination']);
        }
        // ensure the json data is a string
        if (data['operatingCarrierCode'] && !(typeof data['operatingCarrierCode'] === 'string' || data['operatingCarrierCode'] instanceof String)) {
            throw new Error("Expected the field `operatingCarrierCode` to be a primitive type in the JSON string but got " + data['operatingCarrierCode']);
        }
        // ensure the json data is a string
        if (data['origin'] && !(typeof data['origin'] === 'string' || data['origin'] instanceof String)) {
            throw new Error("Expected the field `origin` to be a primitive type in the JSON string but got " + data['origin']);
        }

        return true;
    }


}



/**
 * @member {module:model/ModelDate} departureDate
 */
Flight.prototype['departureDate'] = undefined;

/**
 * Required. IATA airport code for flight destination, e.g. \"JFK\".
 * @member {String} destination
 */
Flight.prototype['destination'] = undefined;

/**
 * Required. Flight number, e.g. 324.
 * @member {Number} flightNumber
 */
Flight.prototype['flightNumber'] = undefined;

/**
 * Required. IATA carrier code, e.g. \"AA\".
 * @member {String} operatingCarrierCode
 */
Flight.prototype['operatingCarrierCode'] = undefined;

/**
 * Required. IATA airport code for flight origin, e.g. \"LHR\".
 * @member {String} origin
 */
Flight.prototype['origin'] = undefined;






export default Flight;

