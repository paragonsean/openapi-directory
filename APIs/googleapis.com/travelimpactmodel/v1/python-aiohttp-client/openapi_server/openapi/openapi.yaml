openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Travel Impact Model API lets you query travel carbon emission estimates.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Travel Impact Model API
  version: v1
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
  - format: google
    url: https://travelimpactmodel.googleapis.com/$discovery/rest?version=v1
    version: v1
  x-providerName: googleapis.com
  x-serviceName: travelimpactmodel
externalDocs:
  url: https://developers.google.com/travel/impact-model
servers:
- url: https://travelimpactmodel.googleapis.com/
tags:
- name: flights
paths:
  /v1/flights:computeFlightEmissions:
    post:
      description: "Stateless method to retrieve emission estimates. Details on how\
        \ emission estimates are computed: https://github.com/google/travel-impact-model\
        \ The response will contain all entries that match the input flight legs,\
        \ in the same order. If there are no estimates available for a certain flight\
        \ leg, the response will return the flight leg object with empty emission\
        \ fields. The request will still be considered successful. Reasons for missing\
        \ emission estimates include: - The flight is unknown to the server. - The\
        \ input flight leg is missing one or more identifiers. - The flight date is\
        \ in the past. - The aircraft type is not supported by the model. - Missing\
        \ seat configuration. The request can contain up to 1000 flight legs. If the\
        \ request has more than 1000 direct flights, if will fail with an INVALID_ARGUMENT\
        \ error."
      operationId: travelimpactmodel_flights_compute_flight_emissions
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputeFlightEmissionsRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputeFlightEmissionsResponse'
          description: Successful response
      tags:
      - flights
      x-openapi-router-controller: openapi_server.controllers.flights_controller
      x-codegen-request-body-name: body
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    ComputeFlightEmissionsRequest:
      description: Input definition for the ComputeFlightEmissions request.
      example:
        flights:
        - operatingCarrierCode: operatingCarrierCode
          origin: origin
          destination: destination
          departureDate:
            month: 2
            year: 7
            day: 5
          flightNumber: 9
        - operatingCarrierCode: operatingCarrierCode
          origin: origin
          destination: destination
          departureDate:
            month: 2
            year: 7
            day: 5
          flightNumber: 9
      properties:
        flights:
          description: Required. Direct flights to return emission estimates for.
          items:
            $ref: '#/components/schemas/Flight'
          title: flights
          type: array
      title: ComputeFlightEmissionsRequest
      type: object
    ComputeFlightEmissionsResponse:
      description: Output definition for the ComputeFlightEmissions response.
      example:
        flightEmissions:
        - flight:
            operatingCarrierCode: operatingCarrierCode
            origin: origin
            destination: destination
            departureDate:
              month: 2
              year: 7
              day: 5
            flightNumber: 9
          emissionsGramsPerPax:
            business: 0
            economy: 6
            premiumEconomy: 5
            first: 1
        - flight:
            operatingCarrierCode: operatingCarrierCode
            origin: origin
            destination: destination
            departureDate:
              month: 2
              year: 7
              day: 5
            flightNumber: 9
          emissionsGramsPerPax:
            business: 0
            economy: 6
            premiumEconomy: 5
            first: 1
        modelVersion:
          patch: 4
          major: 3
          minor: 2
          dated: dated
      properties:
        flightEmissions:
          description: List of flight legs with emission estimates.
          items:
            $ref: '#/components/schemas/FlightWithEmissions'
          title: flightEmissions
          type: array
        modelVersion:
          $ref: '#/components/schemas/ModelVersion'
      title: ComputeFlightEmissionsResponse
      type: object
    Date:
      description: "Represents a whole or partial calendar date, such as a birthday.\
        \ The time of day and time zone are either specified elsewhere or are insignificant.\
        \ The date is relative to the Gregorian Calendar. This can represent one of\
        \ the following: * A full date, with non-zero year, month, and day values.\
        \ * A month and day, with a zero year (for example, an anniversary). * A year\
        \ on its own, with a zero month and a zero day. * A year and month, with a\
        \ zero day (for example, a credit card expiration date). Related types: *\
        \ google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp"
      example:
        month: 2
        year: 7
        day: 5
      properties:
        day:
          description: "Day of a month. Must be from 1 to 31 and valid for the year\
            \ and month, or 0 to specify a year by itself or a year and month where\
            \ the day isn't significant."
          format: int32
          title: day
          type: integer
        month:
          description: "Month of a year. Must be from 1 to 12, or 0 to specify a year\
            \ without a month and day."
          format: int32
          title: month
          type: integer
        year:
          description: "Year of the date. Must be from 1 to 9999, or 0 to specify\
            \ a date without a year."
          format: int32
          title: year
          type: integer
      title: Date
      type: object
    EmissionsGramsPerPax:
      description: Grouped emissions per seating class results.
      example:
        business: 0
        economy: 6
        premiumEconomy: 5
        first: 1
      properties:
        business:
          description: "Emissions for one passenger in business class in grams. This\
            \ field is always computed and populated, regardless of whether the aircraft\
            \ has business class seats or not."
          format: int32
          title: business
          type: integer
        economy:
          description: "Emissions for one passenger in economy class in grams. This\
            \ field is always computed and populated, regardless of whether the aircraft\
            \ has economy class seats or not."
          format: int32
          title: economy
          type: integer
        first:
          description: "Emissions for one passenger in first class in grams. This\
            \ field is always computed and populated, regardless of whether the aircraft\
            \ has first class seats or not."
          format: int32
          title: first
          type: integer
        premiumEconomy:
          description: "Emissions for one passenger in premium economy class in grams.\
            \ This field is always computed and populated, regardless of whether the\
            \ aircraft has premium economy class seats or not."
          format: int32
          title: premiumEconomy
          type: integer
      title: EmissionsGramsPerPax
      type: object
    Flight:
      description: All details related to a single request item for a direct flight
        emission estimates.
      example:
        operatingCarrierCode: operatingCarrierCode
        origin: origin
        destination: destination
        departureDate:
          month: 2
          year: 7
          day: 5
        flightNumber: 9
      properties:
        departureDate:
          $ref: '#/components/schemas/Date'
        destination:
          description: "Required. IATA airport code for flight destination, e.g. \"\
            JFK\"."
          title: destination
          type: string
        flightNumber:
          description: "Required. Flight number, e.g. 324."
          format: int32
          title: flightNumber
          type: integer
        operatingCarrierCode:
          description: "Required. IATA carrier code, e.g. \"AA\"."
          title: operatingCarrierCode
          type: string
        origin:
          description: "Required. IATA airport code for flight origin, e.g. \"LHR\"\
            ."
          title: origin
          type: string
      title: Flight
      type: object
    FlightWithEmissions:
      description: Direct flight with emission estimates.
      example:
        flight:
          operatingCarrierCode: operatingCarrierCode
          origin: origin
          destination: destination
          departureDate:
            month: 2
            year: 7
            day: 5
          flightNumber: 9
        emissionsGramsPerPax:
          business: 0
          economy: 6
          premiumEconomy: 5
          first: 1
      properties:
        emissionsGramsPerPax:
          $ref: '#/components/schemas/EmissionsGramsPerPax'
        flight:
          $ref: '#/components/schemas/Flight'
      title: FlightWithEmissions
      type: object
    ModelVersion:
      description: Travel Impact Model version. For more information about the model
        versioning see https://github.com/google/travel-impact-model/#versioning.
      example:
        patch: 4
        major: 3
        minor: 2
        dated: dated
      properties:
        dated:
          description: "Dated versions: Model datasets are recreated with refreshed\
            \ input data but no change to the algorithms regularly."
          title: dated
          type: string
        major:
          description: "Major versions: Major changes to methodology (e.g. adding\
            \ new data sources to the model that lead to major output changes). Such\
            \ changes will be infrequent and announced well in advance. Might involve\
            \ API version changes, which will respect guidelines in https://cloud.google.com/endpoints/docs/openapi/versioning-an-api#backwards-incompatible"
          format: int32
          title: major
          type: integer
        minor:
          description: "Minor versions: Changes to the model that, while being consistent\
            \ across schema versions, change the model parameters or implementation."
          format: int32
          title: minor
          type: integer
        patch:
          description: "Patch versions: Implementation changes meant to address bugs\
            \ or inaccuracies in the model implementation."
          format: int32
          title: patch
          type: integer
      title: ModelVersion
      type: object
