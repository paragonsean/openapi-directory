# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.flight_with_emissions import FlightWithEmissions
from openapi_server.models.model_version import ModelVersion
from openapi_server import util


class ComputeFlightEmissionsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, flight_emissions: List[FlightWithEmissions]=None, model_version: ModelVersion=None):
        """ComputeFlightEmissionsResponse - a model defined in OpenAPI

        :param flight_emissions: The flight_emissions of this ComputeFlightEmissionsResponse.
        :param model_version: The model_version of this ComputeFlightEmissionsResponse.
        """
        self.openapi_types = {
            'flight_emissions': List[FlightWithEmissions],
            'model_version': ModelVersion
        }

        self.attribute_map = {
            'flight_emissions': 'flightEmissions',
            'model_version': 'modelVersion'
        }

        self._flight_emissions = flight_emissions
        self._model_version = model_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComputeFlightEmissionsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComputeFlightEmissionsResponse of this ComputeFlightEmissionsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def flight_emissions(self):
        """Gets the flight_emissions of this ComputeFlightEmissionsResponse.

        List of flight legs with emission estimates.

        :return: The flight_emissions of this ComputeFlightEmissionsResponse.
        :rtype: List[FlightWithEmissions]
        """
        return self._flight_emissions

    @flight_emissions.setter
    def flight_emissions(self, flight_emissions):
        """Sets the flight_emissions of this ComputeFlightEmissionsResponse.

        List of flight legs with emission estimates.

        :param flight_emissions: The flight_emissions of this ComputeFlightEmissionsResponse.
        :type flight_emissions: List[FlightWithEmissions]
        """

        self._flight_emissions = flight_emissions

    @property
    def model_version(self):
        """Gets the model_version of this ComputeFlightEmissionsResponse.


        :return: The model_version of this ComputeFlightEmissionsResponse.
        :rtype: ModelVersion
        """
        return self._model_version

    @model_version.setter
    def model_version(self, model_version):
        """Sets the model_version of this ComputeFlightEmissionsResponse.


        :param model_version: The model_version of this ComputeFlightEmissionsResponse.
        :type model_version: ModelVersion
        """

        self._model_version = model_version
