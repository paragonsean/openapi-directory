# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.flight import Flight
from openapi_server import util


class ComputeFlightEmissionsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, flights: List[Flight]=None):
        """ComputeFlightEmissionsRequest - a model defined in OpenAPI

        :param flights: The flights of this ComputeFlightEmissionsRequest.
        """
        self.openapi_types = {
            'flights': List[Flight]
        }

        self.attribute_map = {
            'flights': 'flights'
        }

        self._flights = flights

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComputeFlightEmissionsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComputeFlightEmissionsRequest of this ComputeFlightEmissionsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def flights(self):
        """Gets the flights of this ComputeFlightEmissionsRequest.

        Required. Direct flights to return emission estimates for.

        :return: The flights of this ComputeFlightEmissionsRequest.
        :rtype: List[Flight]
        """
        return self._flights

    @flights.setter
    def flights(self, flights):
        """Sets the flights of this ComputeFlightEmissionsRequest.

        Required. Direct flights to return emission estimates for.

        :param flights: The flights of this ComputeFlightEmissionsRequest.
        :type flights: List[Flight]
        """

        self._flights = flights
