/**
 * Google Drive API
 * The Google Drive API allows clients to access resources from Google Drive.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FileContentHintsThumbnail from './FileContentHintsThumbnail';

/**
 * The FileContentHints model module.
 * @module model/FileContentHints
 * @version v3
 */
class FileContentHints {
    /**
     * Constructs a new <code>FileContentHints</code>.
     * Additional information about the content of the file. These fields are never populated in responses.
     * @alias module:model/FileContentHints
     */
    constructor() { 
        
        FileContentHints.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FileContentHints</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FileContentHints} obj Optional instance to populate.
     * @return {module:model/FileContentHints} The populated <code>FileContentHints</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FileContentHints();

            if (data.hasOwnProperty('indexableText')) {
                obj['indexableText'] = ApiClient.convertToType(data['indexableText'], 'String');
            }
            if (data.hasOwnProperty('thumbnail')) {
                obj['thumbnail'] = FileContentHintsThumbnail.constructFromObject(data['thumbnail']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FileContentHints</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FileContentHints</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['indexableText'] && !(typeof data['indexableText'] === 'string' || data['indexableText'] instanceof String)) {
            throw new Error("Expected the field `indexableText` to be a primitive type in the JSON string but got " + data['indexableText']);
        }
        // validate the optional field `thumbnail`
        if (data['thumbnail']) { // data not null
          FileContentHintsThumbnail.validateJSON(data['thumbnail']);
        }

        return true;
    }


}



/**
 * Text to be indexed for the file to improve fullText queries. This is limited to 128KB in length and may contain HTML elements.
 * @member {String} indexableText
 */
FileContentHints.prototype['indexableText'] = undefined;

/**
 * @member {module:model/FileContentHintsThumbnail} thumbnail
 */
FileContentHints.prototype['thumbnail'] = undefined;






export default FileContentHints;

