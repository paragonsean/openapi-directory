/**
 * Google Drive API
 * The Google Drive API allows clients to access resources from Google Drive.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ChangeList from '../model/ChangeList';
import Channel from '../model/Channel';
import StartPageToken from '../model/StartPageToken';

/**
* Changes service.
* @module api/ChangesApi
* @version v3
*/
export default class ChangesApi {

    /**
    * Constructs a new ChangesApi. 
    * @alias module:api/ChangesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the driveChangesGetStartPageToken operation.
     * @callback module:api/ChangesApi~driveChangesGetStartPageTokenCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StartPageToken} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the starting pageToken for listing future changes.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [driveId] The ID of the shared drive for which the starting pageToken for listing future changes from that shared drive will be returned.
     * @param {Boolean} [supportsAllDrives] Whether the requesting application supports both My Drives and shared drives.
     * @param {Boolean} [supportsTeamDrives] Deprecated: Use `supportsAllDrives` instead.
     * @param {String} [teamDriveId] Deprecated: Use `driveId` instead.
     * @param {module:api/ChangesApi~driveChangesGetStartPageTokenCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StartPageToken}
     */
    driveChangesGetStartPageToken(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'driveId': opts['driveId'],
        'supportsAllDrives': opts['supportsAllDrives'],
        'supportsTeamDrives': opts['supportsTeamDrives'],
        'teamDriveId': opts['teamDriveId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = StartPageToken;
      return this.apiClient.callApi(
        '/changes/startPageToken', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the driveChangesList operation.
     * @callback module:api/ChangesApi~driveChangesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ChangeList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the changes for a user or shared drive.
     * @param {String} pageToken The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response or to the response from the getStartPageToken method.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [driveId] The shared drive from which changes will be returned. If specified the change IDs will be reflective of the shared drive; use the combined drive ID and change ID as an identifier.
     * @param {Boolean} [includeCorpusRemovals] Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file.
     * @param {Boolean} [includeItemsFromAllDrives] Whether both My Drive and shared drive items should be included in results.
     * @param {String} [includeLabels] A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.
     * @param {String} [includePermissionsForView] Specifies which additional view's permissions to include in the response. Only 'published' is supported.
     * @param {Boolean} [includeRemoved] Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access.
     * @param {Boolean} [includeTeamDriveItems] Deprecated: Use `includeItemsFromAllDrives` instead.
     * @param {Number} [pageSize] The maximum number of changes to return per page.
     * @param {Boolean} [restrictToMyDrive] Whether to restrict the results to changes inside the My Drive hierarchy. This omits changes to files such as those in the Application Data folder or shared files which have not been added to My Drive.
     * @param {String} [spaces] A comma-separated list of spaces to query within the corpora. Supported values are 'drive' and 'appDataFolder'.
     * @param {Boolean} [supportsAllDrives] Whether the requesting application supports both My Drives and shared drives.
     * @param {Boolean} [supportsTeamDrives] Deprecated: Use `supportsAllDrives` instead.
     * @param {String} [teamDriveId] Deprecated: Use `driveId` instead.
     * @param {module:api/ChangesApi~driveChangesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ChangeList}
     */
    driveChangesList(pageToken, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pageToken' is set
      if (pageToken === undefined || pageToken === null) {
        throw new Error("Missing the required parameter 'pageToken' when calling driveChangesList");
      }

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageToken': pageToken,
        'driveId': opts['driveId'],
        'includeCorpusRemovals': opts['includeCorpusRemovals'],
        'includeItemsFromAllDrives': opts['includeItemsFromAllDrives'],
        'includeLabels': opts['includeLabels'],
        'includePermissionsForView': opts['includePermissionsForView'],
        'includeRemoved': opts['includeRemoved'],
        'includeTeamDriveItems': opts['includeTeamDriveItems'],
        'pageSize': opts['pageSize'],
        'restrictToMyDrive': opts['restrictToMyDrive'],
        'spaces': opts['spaces'],
        'supportsAllDrives': opts['supportsAllDrives'],
        'supportsTeamDrives': opts['supportsTeamDrives'],
        'teamDriveId': opts['teamDriveId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ChangeList;
      return this.apiClient.callApi(
        '/changes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the driveChangesWatch operation.
     * @callback module:api/ChangesApi~driveChangesWatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Channel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Subscribes to changes for a user.
     * @param {String} pageToken The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response or to the response from the getStartPageToken method.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [driveId] The shared drive from which changes will be returned. If specified the change IDs will be reflective of the shared drive; use the combined drive ID and change ID as an identifier.
     * @param {Boolean} [includeCorpusRemovals] Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file.
     * @param {Boolean} [includeItemsFromAllDrives] Whether both My Drive and shared drive items should be included in results.
     * @param {String} [includeLabels] A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.
     * @param {String} [includePermissionsForView] Specifies which additional view's permissions to include in the response. Only 'published' is supported.
     * @param {Boolean} [includeRemoved] Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access.
     * @param {Boolean} [includeTeamDriveItems] Deprecated: Use `includeItemsFromAllDrives` instead.
     * @param {Number} [pageSize] The maximum number of changes to return per page.
     * @param {Boolean} [restrictToMyDrive] Whether to restrict the results to changes inside the My Drive hierarchy. This omits changes to files such as those in the Application Data folder or shared files which have not been added to My Drive.
     * @param {String} [spaces] A comma-separated list of spaces to query within the corpora. Supported values are 'drive' and 'appDataFolder'.
     * @param {Boolean} [supportsAllDrives] Whether the requesting application supports both My Drives and shared drives.
     * @param {Boolean} [supportsTeamDrives] Deprecated: Use `supportsAllDrives` instead.
     * @param {String} [teamDriveId] Deprecated: Use `driveId` instead.
     * @param {module:model/Channel} [channel] 
     * @param {module:api/ChangesApi~driveChangesWatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Channel}
     */
    driveChangesWatch(pageToken, opts, callback) {
      opts = opts || {};
      let postBody = opts['channel'];
      // verify the required parameter 'pageToken' is set
      if (pageToken === undefined || pageToken === null) {
        throw new Error("Missing the required parameter 'pageToken' when calling driveChangesWatch");
      }

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageToken': pageToken,
        'driveId': opts['driveId'],
        'includeCorpusRemovals': opts['includeCorpusRemovals'],
        'includeItemsFromAllDrives': opts['includeItemsFromAllDrives'],
        'includeLabels': opts['includeLabels'],
        'includePermissionsForView': opts['includePermissionsForView'],
        'includeRemoved': opts['includeRemoved'],
        'includeTeamDriveItems': opts['includeTeamDriveItems'],
        'pageSize': opts['pageSize'],
        'restrictToMyDrive': opts['restrictToMyDrive'],
        'spaces': opts['spaces'],
        'supportsAllDrives': opts['supportsAllDrives'],
        'supportsTeamDrives': opts['supportsTeamDrives'],
        'teamDriveId': opts['teamDriveId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Channel;
      return this.apiClient.callApi(
        '/changes/watch', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
