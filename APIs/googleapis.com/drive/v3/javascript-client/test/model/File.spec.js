/**
 * Google Drive API
 * The Google Drive API allows clients to access resources from Google Drive.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleDriveApi);
  }
}(this, function(expect, GoogleDriveApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleDriveApi.File();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('File', function() {
    it('should create an instance of File', function() {
      // uncomment below and update the code to test File
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be.a(GoogleDriveApi.File);
    });

    it('should have the property appProperties (base name: "appProperties")', function() {
      // uncomment below and update the code to test the property appProperties
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property capabilities (base name: "capabilities")', function() {
      // uncomment below and update the code to test the property capabilities
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property contentHints (base name: "contentHints")', function() {
      // uncomment below and update the code to test the property contentHints
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property contentRestrictions (base name: "contentRestrictions")', function() {
      // uncomment below and update the code to test the property contentRestrictions
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property copyRequiresWriterPermission (base name: "copyRequiresWriterPermission")', function() {
      // uncomment below and update the code to test the property copyRequiresWriterPermission
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property createdTime (base name: "createdTime")', function() {
      // uncomment below and update the code to test the property createdTime
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property driveId (base name: "driveId")', function() {
      // uncomment below and update the code to test the property driveId
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property explicitlyTrashed (base name: "explicitlyTrashed")', function() {
      // uncomment below and update the code to test the property explicitlyTrashed
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property exportLinks (base name: "exportLinks")', function() {
      // uncomment below and update the code to test the property exportLinks
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property fileExtension (base name: "fileExtension")', function() {
      // uncomment below and update the code to test the property fileExtension
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property folderColorRgb (base name: "folderColorRgb")', function() {
      // uncomment below and update the code to test the property folderColorRgb
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property fullFileExtension (base name: "fullFileExtension")', function() {
      // uncomment below and update the code to test the property fullFileExtension
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property hasAugmentedPermissions (base name: "hasAugmentedPermissions")', function() {
      // uncomment below and update the code to test the property hasAugmentedPermissions
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property hasThumbnail (base name: "hasThumbnail")', function() {
      // uncomment below and update the code to test the property hasThumbnail
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property headRevisionId (base name: "headRevisionId")', function() {
      // uncomment below and update the code to test the property headRevisionId
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property iconLink (base name: "iconLink")', function() {
      // uncomment below and update the code to test the property iconLink
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property imageMediaMetadata (base name: "imageMediaMetadata")', function() {
      // uncomment below and update the code to test the property imageMediaMetadata
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property isAppAuthorized (base name: "isAppAuthorized")', function() {
      // uncomment below and update the code to test the property isAppAuthorized
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property labelInfo (base name: "labelInfo")', function() {
      // uncomment below and update the code to test the property labelInfo
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property lastModifyingUser (base name: "lastModifyingUser")', function() {
      // uncomment below and update the code to test the property lastModifyingUser
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property linkShareMetadata (base name: "linkShareMetadata")', function() {
      // uncomment below and update the code to test the property linkShareMetadata
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property md5Checksum (base name: "md5Checksum")', function() {
      // uncomment below and update the code to test the property md5Checksum
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property mimeType (base name: "mimeType")', function() {
      // uncomment below and update the code to test the property mimeType
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property modifiedByMe (base name: "modifiedByMe")', function() {
      // uncomment below and update the code to test the property modifiedByMe
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property modifiedByMeTime (base name: "modifiedByMeTime")', function() {
      // uncomment below and update the code to test the property modifiedByMeTime
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property modifiedTime (base name: "modifiedTime")', function() {
      // uncomment below and update the code to test the property modifiedTime
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property originalFilename (base name: "originalFilename")', function() {
      // uncomment below and update the code to test the property originalFilename
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property ownedByMe (base name: "ownedByMe")', function() {
      // uncomment below and update the code to test the property ownedByMe
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property owners (base name: "owners")', function() {
      // uncomment below and update the code to test the property owners
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property parents (base name: "parents")', function() {
      // uncomment below and update the code to test the property parents
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property permissionIds (base name: "permissionIds")', function() {
      // uncomment below and update the code to test the property permissionIds
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property permissions (base name: "permissions")', function() {
      // uncomment below and update the code to test the property permissions
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property properties (base name: "properties")', function() {
      // uncomment below and update the code to test the property properties
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property quotaBytesUsed (base name: "quotaBytesUsed")', function() {
      // uncomment below and update the code to test the property quotaBytesUsed
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property resourceKey (base name: "resourceKey")', function() {
      // uncomment below and update the code to test the property resourceKey
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property sha1Checksum (base name: "sha1Checksum")', function() {
      // uncomment below and update the code to test the property sha1Checksum
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property sha256Checksum (base name: "sha256Checksum")', function() {
      // uncomment below and update the code to test the property sha256Checksum
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property shared (base name: "shared")', function() {
      // uncomment below and update the code to test the property shared
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property sharedWithMeTime (base name: "sharedWithMeTime")', function() {
      // uncomment below and update the code to test the property sharedWithMeTime
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property sharingUser (base name: "sharingUser")', function() {
      // uncomment below and update the code to test the property sharingUser
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property shortcutDetails (base name: "shortcutDetails")', function() {
      // uncomment below and update the code to test the property shortcutDetails
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property size (base name: "size")', function() {
      // uncomment below and update the code to test the property size
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property spaces (base name: "spaces")', function() {
      // uncomment below and update the code to test the property spaces
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property starred (base name: "starred")', function() {
      // uncomment below and update the code to test the property starred
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property teamDriveId (base name: "teamDriveId")', function() {
      // uncomment below and update the code to test the property teamDriveId
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property thumbnailLink (base name: "thumbnailLink")', function() {
      // uncomment below and update the code to test the property thumbnailLink
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property thumbnailVersion (base name: "thumbnailVersion")', function() {
      // uncomment below and update the code to test the property thumbnailVersion
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property trashed (base name: "trashed")', function() {
      // uncomment below and update the code to test the property trashed
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property trashedTime (base name: "trashedTime")', function() {
      // uncomment below and update the code to test the property trashedTime
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property trashingUser (base name: "trashingUser")', function() {
      // uncomment below and update the code to test the property trashingUser
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property videoMediaMetadata (base name: "videoMediaMetadata")', function() {
      // uncomment below and update the code to test the property videoMediaMetadata
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property viewedByMe (base name: "viewedByMe")', function() {
      // uncomment below and update the code to test the property viewedByMe
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property viewedByMeTime (base name: "viewedByMeTime")', function() {
      // uncomment below and update the code to test the property viewedByMeTime
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property viewersCanCopyContent (base name: "viewersCanCopyContent")', function() {
      // uncomment below and update the code to test the property viewersCanCopyContent
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property webContentLink (base name: "webContentLink")', function() {
      // uncomment below and update the code to test the property webContentLink
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property webViewLink (base name: "webViewLink")', function() {
      // uncomment below and update the code to test the property webViewLink
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property writersCanShare (base name: "writersCanShare")', function() {
      // uncomment below and update the code to test the property writersCanShare
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

  });

}));
