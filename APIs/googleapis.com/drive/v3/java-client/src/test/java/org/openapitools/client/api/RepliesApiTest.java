/*
 * Google Drive API
 * The Google Drive API allows clients to access resources from Google Drive.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Reply;
import org.openapitools.client.model.ReplyList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RepliesApi
 */
@Disabled
public class RepliesApiTest {

    private final RepliesApi api = new RepliesApi();

    /**
     * Creates a reply to a comment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void driveRepliesCreateTest() throws ApiException {
        String fileId = null;
        String commentId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Reply reply = null;
        Reply response = api.driveRepliesCreate(fileId, commentId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, reply);
        // TODO: test validations
    }

    /**
     * Deletes a reply.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void driveRepliesDeleteTest() throws ApiException {
        String fileId = null;
        String commentId = null;
        String replyId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        api.driveRepliesDelete(fileId, commentId, replyId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Gets a reply by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void driveRepliesGetTest() throws ApiException {
        String fileId = null;
        String commentId = null;
        String replyId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean includeDeleted = null;
        Reply response = api.driveRepliesGet(fileId, commentId, replyId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, includeDeleted);
        // TODO: test validations
    }

    /**
     * Lists a comment&#39;s replies.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void driveRepliesListTest() throws ApiException {
        String fileId = null;
        String commentId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean includeDeleted = null;
        Integer pageSize = null;
        String pageToken = null;
        ReplyList response = api.driveRepliesList(fileId, commentId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, includeDeleted, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Updates a reply with patch semantics.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void driveRepliesUpdateTest() throws ApiException {
        String fileId = null;
        String commentId = null;
        String replyId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Reply reply = null;
        Reply response = api.driveRepliesUpdate(fileId, commentId, replyId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, reply);
        // TODO: test validations
    }

}
