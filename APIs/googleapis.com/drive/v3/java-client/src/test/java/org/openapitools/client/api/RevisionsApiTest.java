/*
 * Google Drive API
 * The Google Drive API allows clients to access resources from Google Drive.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Revision;
import org.openapitools.client.model.RevisionList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RevisionsApi
 */
@Disabled
public class RevisionsApiTest {

    private final RevisionsApi api = new RevisionsApi();

    /**
     * Permanently deletes a file version. You can only delete revisions for files with binary content in Google Drive, like images or videos. Revisions for other files, like Google Docs or Sheets, and the last remaining file version can&#39;t be deleted.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void driveRevisionsDeleteTest() throws ApiException {
        String fileId = null;
        String revisionId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        api.driveRevisionsDelete(fileId, revisionId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Gets a revision&#39;s metadata or content by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void driveRevisionsGetTest() throws ApiException {
        String fileId = null;
        String revisionId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean acknowledgeAbuse = null;
        Revision response = api.driveRevisionsGet(fileId, revisionId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, acknowledgeAbuse);
        // TODO: test validations
    }

    /**
     * Lists a file&#39;s revisions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void driveRevisionsListTest() throws ApiException {
        String fileId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        RevisionList response = api.driveRevisionsList(fileId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Updates a revision with patch semantics.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void driveRevisionsUpdateTest() throws ApiException {
        String fileId = null;
        String revisionId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Revision revision = null;
        Revision response = api.driveRevisionsUpdate(fileId, revisionId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, revision);
        // TODO: test validations
    }

}
