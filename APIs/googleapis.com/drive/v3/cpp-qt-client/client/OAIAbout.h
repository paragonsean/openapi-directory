/**
 * Google Drive API
 * The Google Drive API allows clients to access resources from Google Drive.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAbout.h
 *
 * Information about the user, the user&#39;s Drive, and system capabilities.
 */

#ifndef OAIAbout_H
#define OAIAbout_H

#include <QJsonObject>

#include "OAIAbout_driveThemes_inner.h"
#include "OAIAbout_storageQuota.h"
#include "OAIAbout_teamDriveThemes_inner.h"
#include "OAIUser.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAbout_driveThemes_inner;
class OAIAbout_storageQuota;
class OAIAbout_teamDriveThemes_inner;
class OAIUser;

class OAIAbout : public OAIObject {
public:
    OAIAbout();
    OAIAbout(QString json);
    ~OAIAbout() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAppInstalled() const;
    void setAppInstalled(const bool &app_installed);
    bool is_app_installed_Set() const;
    bool is_app_installed_Valid() const;

    bool isCanCreateDrives() const;
    void setCanCreateDrives(const bool &can_create_drives);
    bool is_can_create_drives_Set() const;
    bool is_can_create_drives_Valid() const;

    Q_DECL_DEPRECATED bool isCanCreateTeamDrives() const;
    Q_DECL_DEPRECATED void setCanCreateTeamDrives(const bool &can_create_team_drives);
    Q_DECL_DEPRECATED bool is_can_create_team_drives_Set() const;
    Q_DECL_DEPRECATED bool is_can_create_team_drives_Valid() const;

    QList<OAIAbout_driveThemes_inner> getDriveThemes() const;
    void setDriveThemes(const QList<OAIAbout_driveThemes_inner> &drive_themes);
    bool is_drive_themes_Set() const;
    bool is_drive_themes_Valid() const;

    QMap<QString, QList<QString>> getExportFormats() const;
    void setExportFormats(const QMap<QString, QList<QString>> &export_formats);
    bool is_export_formats_Set() const;
    bool is_export_formats_Valid() const;

    QList<QString> getFolderColorPalette() const;
    void setFolderColorPalette(const QList<QString> &folder_color_palette);
    bool is_folder_color_palette_Set() const;
    bool is_folder_color_palette_Valid() const;

    QMap<QString, QList<QString>> getImportFormats() const;
    void setImportFormats(const QMap<QString, QList<QString>> &import_formats);
    bool is_import_formats_Set() const;
    bool is_import_formats_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QMap<QString, QString> getMaxImportSizes() const;
    void setMaxImportSizes(const QMap<QString, QString> &max_import_sizes);
    bool is_max_import_sizes_Set() const;
    bool is_max_import_sizes_Valid() const;

    QString getMaxUploadSize() const;
    void setMaxUploadSize(const QString &max_upload_size);
    bool is_max_upload_size_Set() const;
    bool is_max_upload_size_Valid() const;

    OAIAbout_storageQuota getStorageQuota() const;
    void setStorageQuota(const OAIAbout_storageQuota &storage_quota);
    bool is_storage_quota_Set() const;
    bool is_storage_quota_Valid() const;

    Q_DECL_DEPRECATED QList<OAIAbout_teamDriveThemes_inner> getTeamDriveThemes() const;
    Q_DECL_DEPRECATED void setTeamDriveThemes(const QList<OAIAbout_teamDriveThemes_inner> &team_drive_themes);
    Q_DECL_DEPRECATED bool is_team_drive_themes_Set() const;
    Q_DECL_DEPRECATED bool is_team_drive_themes_Valid() const;

    OAIUser getUser() const;
    void setUser(const OAIUser &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_app_installed;
    bool m_app_installed_isSet;
    bool m_app_installed_isValid;

    bool m_can_create_drives;
    bool m_can_create_drives_isSet;
    bool m_can_create_drives_isValid;

    bool m_can_create_team_drives;
    bool m_can_create_team_drives_isSet;
    bool m_can_create_team_drives_isValid;

    QList<OAIAbout_driveThemes_inner> m_drive_themes;
    bool m_drive_themes_isSet;
    bool m_drive_themes_isValid;

    QMap<QString, QList<QString>> m_export_formats;
    bool m_export_formats_isSet;
    bool m_export_formats_isValid;

    QList<QString> m_folder_color_palette;
    bool m_folder_color_palette_isSet;
    bool m_folder_color_palette_isValid;

    QMap<QString, QList<QString>> m_import_formats;
    bool m_import_formats_isSet;
    bool m_import_formats_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QMap<QString, QString> m_max_import_sizes;
    bool m_max_import_sizes_isSet;
    bool m_max_import_sizes_isValid;

    QString m_max_upload_size;
    bool m_max_upload_size_isSet;
    bool m_max_upload_size_isValid;

    OAIAbout_storageQuota m_storage_quota;
    bool m_storage_quota_isSet;
    bool m_storage_quota_isValid;

    QList<OAIAbout_teamDriveThemes_inner> m_team_drive_themes;
    bool m_team_drive_themes_isSet;
    bool m_team_drive_themes_isValid;

    OAIUser m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAbout)

#endif // OAIAbout_H
