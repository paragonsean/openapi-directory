/**
 * Google Drive API
 * The Google Drive API allows clients to access resources from Google Drive.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFile_imageMediaMetadata.h
 *
 * Output only. Additional metadata about image media, if available.
 */

#ifndef OAIFile_imageMediaMetadata_H
#define OAIFile_imageMediaMetadata_H

#include <QJsonObject>

#include "OAIFile_imageMediaMetadata_location.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFile_imageMediaMetadata_location;

class OAIFile_imageMediaMetadata : public OAIObject {
public:
    OAIFile_imageMediaMetadata();
    OAIFile_imageMediaMetadata(QString json);
    ~OAIFile_imageMediaMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    float getAperture() const;
    void setAperture(const float &aperture);
    bool is_aperture_Set() const;
    bool is_aperture_Valid() const;

    QString getCameraMake() const;
    void setCameraMake(const QString &camera_make);
    bool is_camera_make_Set() const;
    bool is_camera_make_Valid() const;

    QString getCameraModel() const;
    void setCameraModel(const QString &camera_model);
    bool is_camera_model_Set() const;
    bool is_camera_model_Valid() const;

    QString getColorSpace() const;
    void setColorSpace(const QString &color_space);
    bool is_color_space_Set() const;
    bool is_color_space_Valid() const;

    float getExposureBias() const;
    void setExposureBias(const float &exposure_bias);
    bool is_exposure_bias_Set() const;
    bool is_exposure_bias_Valid() const;

    QString getExposureMode() const;
    void setExposureMode(const QString &exposure_mode);
    bool is_exposure_mode_Set() const;
    bool is_exposure_mode_Valid() const;

    float getExposureTime() const;
    void setExposureTime(const float &exposure_time);
    bool is_exposure_time_Set() const;
    bool is_exposure_time_Valid() const;

    bool isFlashUsed() const;
    void setFlashUsed(const bool &flash_used);
    bool is_flash_used_Set() const;
    bool is_flash_used_Valid() const;

    float getFocalLength() const;
    void setFocalLength(const float &focal_length);
    bool is_focal_length_Set() const;
    bool is_focal_length_Valid() const;

    qint32 getHeight() const;
    void setHeight(const qint32 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    qint32 getIsoSpeed() const;
    void setIsoSpeed(const qint32 &iso_speed);
    bool is_iso_speed_Set() const;
    bool is_iso_speed_Valid() const;

    QString getLens() const;
    void setLens(const QString &lens);
    bool is_lens_Set() const;
    bool is_lens_Valid() const;

    OAIFile_imageMediaMetadata_location getLocation() const;
    void setLocation(const OAIFile_imageMediaMetadata_location &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    float getMaxApertureValue() const;
    void setMaxApertureValue(const float &max_aperture_value);
    bool is_max_aperture_value_Set() const;
    bool is_max_aperture_value_Valid() const;

    QString getMeteringMode() const;
    void setMeteringMode(const QString &metering_mode);
    bool is_metering_mode_Set() const;
    bool is_metering_mode_Valid() const;

    qint32 getRotation() const;
    void setRotation(const qint32 &rotation);
    bool is_rotation_Set() const;
    bool is_rotation_Valid() const;

    QString getSensor() const;
    void setSensor(const QString &sensor);
    bool is_sensor_Set() const;
    bool is_sensor_Valid() const;

    qint32 getSubjectDistance() const;
    void setSubjectDistance(const qint32 &subject_distance);
    bool is_subject_distance_Set() const;
    bool is_subject_distance_Valid() const;

    QString getTime() const;
    void setTime(const QString &time);
    bool is_time_Set() const;
    bool is_time_Valid() const;

    QString getWhiteBalance() const;
    void setWhiteBalance(const QString &white_balance);
    bool is_white_balance_Set() const;
    bool is_white_balance_Valid() const;

    qint32 getWidth() const;
    void setWidth(const qint32 &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    float m_aperture;
    bool m_aperture_isSet;
    bool m_aperture_isValid;

    QString m_camera_make;
    bool m_camera_make_isSet;
    bool m_camera_make_isValid;

    QString m_camera_model;
    bool m_camera_model_isSet;
    bool m_camera_model_isValid;

    QString m_color_space;
    bool m_color_space_isSet;
    bool m_color_space_isValid;

    float m_exposure_bias;
    bool m_exposure_bias_isSet;
    bool m_exposure_bias_isValid;

    QString m_exposure_mode;
    bool m_exposure_mode_isSet;
    bool m_exposure_mode_isValid;

    float m_exposure_time;
    bool m_exposure_time_isSet;
    bool m_exposure_time_isValid;

    bool m_flash_used;
    bool m_flash_used_isSet;
    bool m_flash_used_isValid;

    float m_focal_length;
    bool m_focal_length_isSet;
    bool m_focal_length_isValid;

    qint32 m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    qint32 m_iso_speed;
    bool m_iso_speed_isSet;
    bool m_iso_speed_isValid;

    QString m_lens;
    bool m_lens_isSet;
    bool m_lens_isValid;

    OAIFile_imageMediaMetadata_location m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    float m_max_aperture_value;
    bool m_max_aperture_value_isSet;
    bool m_max_aperture_value_isValid;

    QString m_metering_mode;
    bool m_metering_mode_isSet;
    bool m_metering_mode_isValid;

    qint32 m_rotation;
    bool m_rotation_isSet;
    bool m_rotation_isValid;

    QString m_sensor;
    bool m_sensor_isSet;
    bool m_sensor_isValid;

    qint32 m_subject_distance;
    bool m_subject_distance_isSet;
    bool m_subject_distance_isValid;

    QString m_time;
    bool m_time_isSet;
    bool m_time_isValid;

    QString m_white_balance;
    bool m_white_balance_isSet;
    bool m_white_balance_isValid;

    qint32 m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFile_imageMediaMetadata)

#endif // OAIFile_imageMediaMetadata_H
