/**
 * Google Drive API
 * The Google Drive API allows clients to access resources from Google Drive.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUser.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUser::OAIUser(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUser::OAIUser() {
    this->initializeModel();
}

OAIUser::~OAIUser() {}

void OAIUser::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_email_address_isSet = false;
    m_email_address_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_me_isSet = false;
    m_me_isValid = false;

    m_permission_id_isSet = false;
    m_permission_id_isValid = false;

    m_photo_link_isSet = false;
    m_photo_link_isValid = false;
}

void OAIUser::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUser::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_email_address_isValid = ::OpenAPI::fromJsonValue(m_email_address, json[QString("emailAddress")]);
    m_email_address_isSet = !json[QString("emailAddress")].isNull() && m_email_address_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_me_isValid = ::OpenAPI::fromJsonValue(m_me, json[QString("me")]);
    m_me_isSet = !json[QString("me")].isNull() && m_me_isValid;

    m_permission_id_isValid = ::OpenAPI::fromJsonValue(m_permission_id, json[QString("permissionId")]);
    m_permission_id_isSet = !json[QString("permissionId")].isNull() && m_permission_id_isValid;

    m_photo_link_isValid = ::OpenAPI::fromJsonValue(m_photo_link, json[QString("photoLink")]);
    m_photo_link_isSet = !json[QString("photoLink")].isNull() && m_photo_link_isValid;
}

QString OAIUser::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUser::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_email_address_isSet) {
        obj.insert(QString("emailAddress"), ::OpenAPI::toJsonValue(m_email_address));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_me_isSet) {
        obj.insert(QString("me"), ::OpenAPI::toJsonValue(m_me));
    }
    if (m_permission_id_isSet) {
        obj.insert(QString("permissionId"), ::OpenAPI::toJsonValue(m_permission_id));
    }
    if (m_photo_link_isSet) {
        obj.insert(QString("photoLink"), ::OpenAPI::toJsonValue(m_photo_link));
    }
    return obj;
}

QString OAIUser::getDisplayName() const {
    return m_display_name;
}
void OAIUser::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIUser::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIUser::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIUser::getEmailAddress() const {
    return m_email_address;
}
void OAIUser::setEmailAddress(const QString &email_address) {
    m_email_address = email_address;
    m_email_address_isSet = true;
}

bool OAIUser::is_email_address_Set() const{
    return m_email_address_isSet;
}

bool OAIUser::is_email_address_Valid() const{
    return m_email_address_isValid;
}

QString OAIUser::getKind() const {
    return m_kind;
}
void OAIUser::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIUser::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIUser::is_kind_Valid() const{
    return m_kind_isValid;
}

bool OAIUser::isMe() const {
    return m_me;
}
void OAIUser::setMe(const bool &me) {
    m_me = me;
    m_me_isSet = true;
}

bool OAIUser::is_me_Set() const{
    return m_me_isSet;
}

bool OAIUser::is_me_Valid() const{
    return m_me_isValid;
}

QString OAIUser::getPermissionId() const {
    return m_permission_id;
}
void OAIUser::setPermissionId(const QString &permission_id) {
    m_permission_id = permission_id;
    m_permission_id_isSet = true;
}

bool OAIUser::is_permission_id_Set() const{
    return m_permission_id_isSet;
}

bool OAIUser::is_permission_id_Valid() const{
    return m_permission_id_isValid;
}

QString OAIUser::getPhotoLink() const {
    return m_photo_link;
}
void OAIUser::setPhotoLink(const QString &photo_link) {
    m_photo_link = photo_link;
    m_photo_link_isSet = true;
}

bool OAIUser::is_photo_link_Set() const{
    return m_photo_link_isSet;
}

bool OAIUser::is_photo_link_Valid() const{
    return m_photo_link_isValid;
}

bool OAIUser::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_me_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_permission_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_photo_link_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUser::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
