/**
 * Google Drive API
 * The Google Drive API allows clients to access resources from Google Drive.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILabelModification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILabelModification::OAILabelModification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILabelModification::OAILabelModification() {
    this->initializeModel();
}

OAILabelModification::~OAILabelModification() {}

void OAILabelModification::initializeModel() {

    m_field_modifications_isSet = false;
    m_field_modifications_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_label_id_isSet = false;
    m_label_id_isValid = false;

    m_remove_label_isSet = false;
    m_remove_label_isValid = false;
}

void OAILabelModification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILabelModification::fromJsonObject(QJsonObject json) {

    m_field_modifications_isValid = ::OpenAPI::fromJsonValue(m_field_modifications, json[QString("fieldModifications")]);
    m_field_modifications_isSet = !json[QString("fieldModifications")].isNull() && m_field_modifications_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_label_id_isValid = ::OpenAPI::fromJsonValue(m_label_id, json[QString("labelId")]);
    m_label_id_isSet = !json[QString("labelId")].isNull() && m_label_id_isValid;

    m_remove_label_isValid = ::OpenAPI::fromJsonValue(m_remove_label, json[QString("removeLabel")]);
    m_remove_label_isSet = !json[QString("removeLabel")].isNull() && m_remove_label_isValid;
}

QString OAILabelModification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILabelModification::asJsonObject() const {
    QJsonObject obj;
    if (m_field_modifications.size() > 0) {
        obj.insert(QString("fieldModifications"), ::OpenAPI::toJsonValue(m_field_modifications));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_label_id_isSet) {
        obj.insert(QString("labelId"), ::OpenAPI::toJsonValue(m_label_id));
    }
    if (m_remove_label_isSet) {
        obj.insert(QString("removeLabel"), ::OpenAPI::toJsonValue(m_remove_label));
    }
    return obj;
}

QList<OAILabelFieldModification> OAILabelModification::getFieldModifications() const {
    return m_field_modifications;
}
void OAILabelModification::setFieldModifications(const QList<OAILabelFieldModification> &field_modifications) {
    m_field_modifications = field_modifications;
    m_field_modifications_isSet = true;
}

bool OAILabelModification::is_field_modifications_Set() const{
    return m_field_modifications_isSet;
}

bool OAILabelModification::is_field_modifications_Valid() const{
    return m_field_modifications_isValid;
}

QString OAILabelModification::getKind() const {
    return m_kind;
}
void OAILabelModification::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAILabelModification::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAILabelModification::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAILabelModification::getLabelId() const {
    return m_label_id;
}
void OAILabelModification::setLabelId(const QString &label_id) {
    m_label_id = label_id;
    m_label_id_isSet = true;
}

bool OAILabelModification::is_label_id_Set() const{
    return m_label_id_isSet;
}

bool OAILabelModification::is_label_id_Valid() const{
    return m_label_id_isValid;
}

bool OAILabelModification::isRemoveLabel() const {
    return m_remove_label;
}
void OAILabelModification::setRemoveLabel(const bool &remove_label) {
    m_remove_label = remove_label;
    m_remove_label_isSet = true;
}

bool OAILabelModification::is_remove_label_Set() const{
    return m_remove_label_isSet;
}

bool OAILabelModification::is_remove_label_Valid() const{
    return m_remove_label_isValid;
}

bool OAILabelModification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field_modifications.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_remove_label_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILabelModification::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
