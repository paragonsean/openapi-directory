/**
 * Google Drive API
 * The Google Drive API allows clients to access resources from Google Drive.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPermission.h
 *
 * A permission for a file. A permission grants a user, group, domain, or the world access to a file or a folder hierarchy. Some resource methods (such as &#x60;permissions.update&#x60;) require a &#x60;permissionId&#x60;. Use the &#x60;permissions.list&#x60; method to retrieve the ID for a file, folder, or shared drive.
 */

#ifndef OAIPermission_H
#define OAIPermission_H

#include <QJsonObject>

#include "OAIPermission_permissionDetails_inner.h"
#include "OAIPermission_teamDrivePermissionDetails_inner.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPermission_permissionDetails_inner;
class OAIPermission_teamDrivePermissionDetails_inner;

class OAIPermission : public OAIObject {
public:
    OAIPermission();
    OAIPermission(QString json);
    ~OAIPermission() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowFileDiscovery() const;
    void setAllowFileDiscovery(const bool &allow_file_discovery);
    bool is_allow_file_discovery_Set() const;
    bool is_allow_file_discovery_Valid() const;

    bool isDeleted() const;
    void setDeleted(const bool &deleted);
    bool is_deleted_Set() const;
    bool is_deleted_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    QString getEmailAddress() const;
    void setEmailAddress(const QString &email_address);
    bool is_email_address_Set() const;
    bool is_email_address_Valid() const;

    QDateTime getExpirationTime() const;
    void setExpirationTime(const QDateTime &expiration_time);
    bool is_expiration_time_Set() const;
    bool is_expiration_time_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    bool isPendingOwner() const;
    void setPendingOwner(const bool &pending_owner);
    bool is_pending_owner_Set() const;
    bool is_pending_owner_Valid() const;

    QList<OAIPermission_permissionDetails_inner> getPermissionDetails() const;
    void setPermissionDetails(const QList<OAIPermission_permissionDetails_inner> &permission_details);
    bool is_permission_details_Set() const;
    bool is_permission_details_Valid() const;

    QString getPhotoLink() const;
    void setPhotoLink(const QString &photo_link);
    bool is_photo_link_Set() const;
    bool is_photo_link_Valid() const;

    QString getRole() const;
    void setRole(const QString &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    Q_DECL_DEPRECATED QList<OAIPermission_teamDrivePermissionDetails_inner> getTeamDrivePermissionDetails() const;
    Q_DECL_DEPRECATED void setTeamDrivePermissionDetails(const QList<OAIPermission_teamDrivePermissionDetails_inner> &team_drive_permission_details);
    Q_DECL_DEPRECATED bool is_team_drive_permission_details_Set() const;
    Q_DECL_DEPRECATED bool is_team_drive_permission_details_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getView() const;
    void setView(const QString &view);
    bool is_view_Set() const;
    bool is_view_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_file_discovery;
    bool m_allow_file_discovery_isSet;
    bool m_allow_file_discovery_isValid;

    bool m_deleted;
    bool m_deleted_isSet;
    bool m_deleted_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    QString m_email_address;
    bool m_email_address_isSet;
    bool m_email_address_isValid;

    QDateTime m_expiration_time;
    bool m_expiration_time_isSet;
    bool m_expiration_time_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    bool m_pending_owner;
    bool m_pending_owner_isSet;
    bool m_pending_owner_isValid;

    QList<OAIPermission_permissionDetails_inner> m_permission_details;
    bool m_permission_details_isSet;
    bool m_permission_details_isValid;

    QString m_photo_link;
    bool m_photo_link_isSet;
    bool m_photo_link_isValid;

    QString m_role;
    bool m_role_isSet;
    bool m_role_isValid;

    QList<OAIPermission_teamDrivePermissionDetails_inner> m_team_drive_permission_details;
    bool m_team_drive_permission_details_isSet;
    bool m_team_drive_permission_details_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_view;
    bool m_view_isSet;
    bool m_view_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPermission)

#endif // OAIPermission_H
