/**
 * Google Drive API
 * The Google Drive API allows clients to access resources from Google Drive.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUser.h
 *
 * Information about a Drive user.
 */

#ifndef OAIUser_H
#define OAIUser_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUser : public OAIObject {
public:
    OAIUser();
    OAIUser(QString json);
    ~OAIUser() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getEmailAddress() const;
    void setEmailAddress(const QString &email_address);
    bool is_email_address_Set() const;
    bool is_email_address_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    bool isMe() const;
    void setMe(const bool &me);
    bool is_me_Set() const;
    bool is_me_Valid() const;

    QString getPermissionId() const;
    void setPermissionId(const QString &permission_id);
    bool is_permission_id_Set() const;
    bool is_permission_id_Valid() const;

    QString getPhotoLink() const;
    void setPhotoLink(const QString &photo_link);
    bool is_photo_link_Set() const;
    bool is_photo_link_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_email_address;
    bool m_email_address_isSet;
    bool m_email_address_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    bool m_me;
    bool m_me_isSet;
    bool m_me_isValid;

    QString m_permission_id;
    bool m_permission_id_isSet;
    bool m_permission_id_isValid;

    QString m_photo_link;
    bool m_photo_link_isSet;
    bool m_photo_link_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUser)

#endif // OAIUser_H
