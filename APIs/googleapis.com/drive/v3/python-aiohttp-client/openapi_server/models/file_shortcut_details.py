# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FileShortcutDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, target_id: str=None, target_mime_type: str=None, target_resource_key: str=None):
        """FileShortcutDetails - a model defined in OpenAPI

        :param target_id: The target_id of this FileShortcutDetails.
        :param target_mime_type: The target_mime_type of this FileShortcutDetails.
        :param target_resource_key: The target_resource_key of this FileShortcutDetails.
        """
        self.openapi_types = {
            'target_id': str,
            'target_mime_type': str,
            'target_resource_key': str
        }

        self.attribute_map = {
            'target_id': 'targetId',
            'target_mime_type': 'targetMimeType',
            'target_resource_key': 'targetResourceKey'
        }

        self._target_id = target_id
        self._target_mime_type = target_mime_type
        self._target_resource_key = target_resource_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileShortcutDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The File_shortcutDetails of this FileShortcutDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def target_id(self):
        """Gets the target_id of this FileShortcutDetails.

        The ID of the file that this shortcut points to.

        :return: The target_id of this FileShortcutDetails.
        :rtype: str
        """
        return self._target_id

    @target_id.setter
    def target_id(self, target_id):
        """Sets the target_id of this FileShortcutDetails.

        The ID of the file that this shortcut points to.

        :param target_id: The target_id of this FileShortcutDetails.
        :type target_id: str
        """

        self._target_id = target_id

    @property
    def target_mime_type(self):
        """Gets the target_mime_type of this FileShortcutDetails.

        Output only. The MIME type of the file that this shortcut points to. The value of this field is a snapshot of the target's MIME type, captured when the shortcut is created.

        :return: The target_mime_type of this FileShortcutDetails.
        :rtype: str
        """
        return self._target_mime_type

    @target_mime_type.setter
    def target_mime_type(self, target_mime_type):
        """Sets the target_mime_type of this FileShortcutDetails.

        Output only. The MIME type of the file that this shortcut points to. The value of this field is a snapshot of the target's MIME type, captured when the shortcut is created.

        :param target_mime_type: The target_mime_type of this FileShortcutDetails.
        :type target_mime_type: str
        """

        self._target_mime_type = target_mime_type

    @property
    def target_resource_key(self):
        """Gets the target_resource_key of this FileShortcutDetails.

        Output only. The ResourceKey for the target file.

        :return: The target_resource_key of this FileShortcutDetails.
        :rtype: str
        """
        return self._target_resource_key

    @target_resource_key.setter
    def target_resource_key(self, target_resource_key):
        """Sets the target_resource_key of this FileShortcutDetails.

        Output only. The ResourceKey for the target file.

        :param target_resource_key: The target_resource_key of this FileShortcutDetails.
        :type target_resource_key: str
        """

        self._target_resource_key = target_resource_key
