# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.team_drive import TeamDrive
from openapi_server import util


class TeamDriveList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: str='drive#teamDriveList', next_page_token: str=None, team_drives: List[TeamDrive]=None):
        """TeamDriveList - a model defined in OpenAPI

        :param kind: The kind of this TeamDriveList.
        :param next_page_token: The next_page_token of this TeamDriveList.
        :param team_drives: The team_drives of this TeamDriveList.
        """
        self.openapi_types = {
            'kind': str,
            'next_page_token': str,
            'team_drives': List[TeamDrive]
        }

        self.attribute_map = {
            'kind': 'kind',
            'next_page_token': 'nextPageToken',
            'team_drives': 'teamDrives'
        }

        self._kind = kind
        self._next_page_token = next_page_token
        self._team_drives = team_drives

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TeamDriveList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TeamDriveList of this TeamDriveList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this TeamDriveList.

        Identifies what kind of resource this is. Value: the fixed string `\"drive#teamDriveList\"`.

        :return: The kind of this TeamDriveList.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this TeamDriveList.

        Identifies what kind of resource this is. Value: the fixed string `\"drive#teamDriveList\"`.

        :param kind: The kind of this TeamDriveList.
        :type kind: str
        """

        self._kind = kind

    @property
    def next_page_token(self):
        """Gets the next_page_token of this TeamDriveList.

        The page token for the next page of Team Drives. This will be absent if the end of the Team Drives list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results. The page token is typically valid for several hours. However, if new items are added or removed, your expected results might differ.

        :return: The next_page_token of this TeamDriveList.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this TeamDriveList.

        The page token for the next page of Team Drives. This will be absent if the end of the Team Drives list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results. The page token is typically valid for several hours. However, if new items are added or removed, your expected results might differ.

        :param next_page_token: The next_page_token of this TeamDriveList.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def team_drives(self):
        """Gets the team_drives of this TeamDriveList.

        The list of Team Drives. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.

        :return: The team_drives of this TeamDriveList.
        :rtype: List[TeamDrive]
        """
        return self._team_drives

    @team_drives.setter
    def team_drives(self, team_drives):
        """Sets the team_drives of this TeamDriveList.

        The list of Team Drives. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.

        :param team_drives: The team_drives of this TeamDriveList.
        :type team_drives: List[TeamDrive]
        """

        self._team_drives = team_drives
