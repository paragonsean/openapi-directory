# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.revision import Revision
from openapi_server import util


class RevisionList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: str='drive#revisionList', next_page_token: str=None, revisions: List[Revision]=None):
        """RevisionList - a model defined in OpenAPI

        :param kind: The kind of this RevisionList.
        :param next_page_token: The next_page_token of this RevisionList.
        :param revisions: The revisions of this RevisionList.
        """
        self.openapi_types = {
            'kind': str,
            'next_page_token': str,
            'revisions': List[Revision]
        }

        self.attribute_map = {
            'kind': 'kind',
            'next_page_token': 'nextPageToken',
            'revisions': 'revisions'
        }

        self._kind = kind
        self._next_page_token = next_page_token
        self._revisions = revisions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RevisionList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RevisionList of this RevisionList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this RevisionList.

        Identifies what kind of resource this is. Value: the fixed string `\"drive#revisionList\"`.

        :return: The kind of this RevisionList.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this RevisionList.

        Identifies what kind of resource this is. Value: the fixed string `\"drive#revisionList\"`.

        :param kind: The kind of this RevisionList.
        :type kind: str
        """

        self._kind = kind

    @property
    def next_page_token(self):
        """Gets the next_page_token of this RevisionList.

        The page token for the next page of revisions. This will be absent if the end of the revisions list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results. The page token is typically valid for several hours. However, if new items are added or removed, your expected results might differ.

        :return: The next_page_token of this RevisionList.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this RevisionList.

        The page token for the next page of revisions. This will be absent if the end of the revisions list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results. The page token is typically valid for several hours. However, if new items are added or removed, your expected results might differ.

        :param next_page_token: The next_page_token of this RevisionList.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def revisions(self):
        """Gets the revisions of this RevisionList.

        The list of revisions. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.

        :return: The revisions of this RevisionList.
        :rtype: List[Revision]
        """
        return self._revisions

    @revisions.setter
    def revisions(self, revisions):
        """Sets the revisions of this RevisionList.

        The list of revisions. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.

        :param revisions: The revisions of this RevisionList.
        :type revisions: List[Revision]
        """

        self._revisions = revisions
