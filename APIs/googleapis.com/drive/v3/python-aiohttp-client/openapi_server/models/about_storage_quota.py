# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AboutStorageQuota(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, limit: str=None, usage: str=None, usage_in_drive: str=None, usage_in_drive_trash: str=None):
        """AboutStorageQuota - a model defined in OpenAPI

        :param limit: The limit of this AboutStorageQuota.
        :param usage: The usage of this AboutStorageQuota.
        :param usage_in_drive: The usage_in_drive of this AboutStorageQuota.
        :param usage_in_drive_trash: The usage_in_drive_trash of this AboutStorageQuota.
        """
        self.openapi_types = {
            'limit': str,
            'usage': str,
            'usage_in_drive': str,
            'usage_in_drive_trash': str
        }

        self.attribute_map = {
            'limit': 'limit',
            'usage': 'usage',
            'usage_in_drive': 'usageInDrive',
            'usage_in_drive_trash': 'usageInDriveTrash'
        }

        self._limit = limit
        self._usage = usage
        self._usage_in_drive = usage_in_drive
        self._usage_in_drive_trash = usage_in_drive_trash

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AboutStorageQuota':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The About_storageQuota of this AboutStorageQuota.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def limit(self):
        """Gets the limit of this AboutStorageQuota.

        The usage limit, if applicable. This will not be present if the user has unlimited storage.

        :return: The limit of this AboutStorageQuota.
        :rtype: str
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this AboutStorageQuota.

        The usage limit, if applicable. This will not be present if the user has unlimited storage.

        :param limit: The limit of this AboutStorageQuota.
        :type limit: str
        """

        self._limit = limit

    @property
    def usage(self):
        """Gets the usage of this AboutStorageQuota.

        The total usage across all services.

        :return: The usage of this AboutStorageQuota.
        :rtype: str
        """
        return self._usage

    @usage.setter
    def usage(self, usage):
        """Sets the usage of this AboutStorageQuota.

        The total usage across all services.

        :param usage: The usage of this AboutStorageQuota.
        :type usage: str
        """

        self._usage = usage

    @property
    def usage_in_drive(self):
        """Gets the usage_in_drive of this AboutStorageQuota.

        The usage by all files in Google Drive.

        :return: The usage_in_drive of this AboutStorageQuota.
        :rtype: str
        """
        return self._usage_in_drive

    @usage_in_drive.setter
    def usage_in_drive(self, usage_in_drive):
        """Sets the usage_in_drive of this AboutStorageQuota.

        The usage by all files in Google Drive.

        :param usage_in_drive: The usage_in_drive of this AboutStorageQuota.
        :type usage_in_drive: str
        """

        self._usage_in_drive = usage_in_drive

    @property
    def usage_in_drive_trash(self):
        """Gets the usage_in_drive_trash of this AboutStorageQuota.

        The usage by trashed files in Google Drive.

        :return: The usage_in_drive_trash of this AboutStorageQuota.
        :rtype: str
        """
        return self._usage_in_drive_trash

    @usage_in_drive_trash.setter
    def usage_in_drive_trash(self, usage_in_drive_trash):
        """Sets the usage_in_drive_trash of this AboutStorageQuota.

        The usage by trashed files in Google Drive.

        :param usage_in_drive_trash: The usage_in_drive_trash of this AboutStorageQuota.
        :type usage_in_drive_trash: str
        """

        self._usage_in_drive_trash = usage_in_drive_trash
