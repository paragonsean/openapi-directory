# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AppIcons(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category: str=None, icon_url: str=None, size: int=None):
        """AppIcons - a model defined in OpenAPI

        :param category: The category of this AppIcons.
        :param icon_url: The icon_url of this AppIcons.
        :param size: The size of this AppIcons.
        """
        self.openapi_types = {
            'category': str,
            'icon_url': str,
            'size': int
        }

        self.attribute_map = {
            'category': 'category',
            'icon_url': 'iconUrl',
            'size': 'size'
        }

        self._category = category
        self._icon_url = icon_url
        self._size = size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppIcons':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppIcons of this AppIcons.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category(self):
        """Gets the category of this AppIcons.

        Category of the icon. Allowed values are: * `application` - The icon for the application. * `document` - The icon for a file associated with the app. * `documentShared` - The icon for a shared file associated with the app.

        :return: The category of this AppIcons.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this AppIcons.

        Category of the icon. Allowed values are: * `application` - The icon for the application. * `document` - The icon for a file associated with the app. * `documentShared` - The icon for a shared file associated with the app.

        :param category: The category of this AppIcons.
        :type category: str
        """

        self._category = category

    @property
    def icon_url(self):
        """Gets the icon_url of this AppIcons.

        URL for the icon.

        :return: The icon_url of this AppIcons.
        :rtype: str
        """
        return self._icon_url

    @icon_url.setter
    def icon_url(self, icon_url):
        """Sets the icon_url of this AppIcons.

        URL for the icon.

        :param icon_url: The icon_url of this AppIcons.
        :type icon_url: str
        """

        self._icon_url = icon_url

    @property
    def size(self):
        """Gets the size of this AppIcons.

        Size of the icon. Represented as the maximum of the width and height.

        :return: The size of this AppIcons.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this AppIcons.

        Size of the icon. Represented as the maximum of the width and height.

        :param size: The size of this AppIcons.
        :type size: int
        """

        self._size = size
