# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.label_field import LabelField
from openapi_server import util


class Label(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fields: Dict[str, LabelField]=None, id: str=None, kind: str=None, revision_id: str=None):
        """Label - a model defined in OpenAPI

        :param fields: The fields of this Label.
        :param id: The id of this Label.
        :param kind: The kind of this Label.
        :param revision_id: The revision_id of this Label.
        """
        self.openapi_types = {
            'fields': Dict[str, LabelField],
            'id': str,
            'kind': str,
            'revision_id': str
        }

        self.attribute_map = {
            'fields': 'fields',
            'id': 'id',
            'kind': 'kind',
            'revision_id': 'revisionId'
        }

        self._fields = fields
        self._id = id
        self._kind = kind
        self._revision_id = revision_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Label':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Label of this Label.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fields(self):
        """Gets the fields of this Label.

        A map of the fields on the label, keyed by the field's ID.

        :return: The fields of this Label.
        :rtype: Dict[str, LabelField]
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this Label.

        A map of the fields on the label, keyed by the field's ID.

        :param fields: The fields of this Label.
        :type fields: Dict[str, LabelField]
        """

        self._fields = fields

    @property
    def id(self):
        """Gets the id of this Label.

        The ID of the label.

        :return: The id of this Label.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Label.

        The ID of the label.

        :param id: The id of this Label.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this Label.

        This is always drive#label

        :return: The kind of this Label.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Label.

        This is always drive#label

        :param kind: The kind of this Label.
        :type kind: str
        """

        self._kind = kind

    @property
    def revision_id(self):
        """Gets the revision_id of this Label.

        The revision ID of the label.

        :return: The revision_id of this Label.
        :rtype: str
        """
        return self._revision_id

    @revision_id.setter
    def revision_id(self, revision_id):
        """Sets the revision_id of this Label.

        The revision ID of the label.

        :param revision_id: The revision_id of this Label.
        :type revision_id: str
        """

        self._revision_id = revision_id
