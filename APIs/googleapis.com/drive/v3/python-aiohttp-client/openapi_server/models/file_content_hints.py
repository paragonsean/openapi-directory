# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.file_content_hints_thumbnail import FileContentHintsThumbnail
from openapi_server import util


class FileContentHints(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, indexable_text: str=None, thumbnail: FileContentHintsThumbnail=None):
        """FileContentHints - a model defined in OpenAPI

        :param indexable_text: The indexable_text of this FileContentHints.
        :param thumbnail: The thumbnail of this FileContentHints.
        """
        self.openapi_types = {
            'indexable_text': str,
            'thumbnail': FileContentHintsThumbnail
        }

        self.attribute_map = {
            'indexable_text': 'indexableText',
            'thumbnail': 'thumbnail'
        }

        self._indexable_text = indexable_text
        self._thumbnail = thumbnail

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileContentHints':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The File_contentHints of this FileContentHints.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def indexable_text(self):
        """Gets the indexable_text of this FileContentHints.

        Text to be indexed for the file to improve fullText queries. This is limited to 128KB in length and may contain HTML elements.

        :return: The indexable_text of this FileContentHints.
        :rtype: str
        """
        return self._indexable_text

    @indexable_text.setter
    def indexable_text(self, indexable_text):
        """Sets the indexable_text of this FileContentHints.

        Text to be indexed for the file to improve fullText queries. This is limited to 128KB in length and may contain HTML elements.

        :param indexable_text: The indexable_text of this FileContentHints.
        :type indexable_text: str
        """

        self._indexable_text = indexable_text

    @property
    def thumbnail(self):
        """Gets the thumbnail of this FileContentHints.


        :return: The thumbnail of this FileContentHints.
        :rtype: FileContentHintsThumbnail
        """
        return self._thumbnail

    @thumbnail.setter
    def thumbnail(self, thumbnail):
        """Sets the thumbnail of this FileContentHints.


        :param thumbnail: The thumbnail of this FileContentHints.
        :type thumbnail: FileContentHintsThumbnail
        """

        self._thumbnail = thumbnail
