# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DriveBackgroundImageFile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, width: float=None, x_coordinate: float=None, y_coordinate: float=None):
        """DriveBackgroundImageFile - a model defined in OpenAPI

        :param id: The id of this DriveBackgroundImageFile.
        :param width: The width of this DriveBackgroundImageFile.
        :param x_coordinate: The x_coordinate of this DriveBackgroundImageFile.
        :param y_coordinate: The y_coordinate of this DriveBackgroundImageFile.
        """
        self.openapi_types = {
            'id': str,
            'width': float,
            'x_coordinate': float,
            'y_coordinate': float
        }

        self.attribute_map = {
            'id': 'id',
            'width': 'width',
            'x_coordinate': 'xCoordinate',
            'y_coordinate': 'yCoordinate'
        }

        self._id = id
        self._width = width
        self._x_coordinate = x_coordinate
        self._y_coordinate = y_coordinate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DriveBackgroundImageFile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Drive_backgroundImageFile of this DriveBackgroundImageFile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this DriveBackgroundImageFile.

        The ID of an image file in Google Drive to use for the background image.

        :return: The id of this DriveBackgroundImageFile.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DriveBackgroundImageFile.

        The ID of an image file in Google Drive to use for the background image.

        :param id: The id of this DriveBackgroundImageFile.
        :type id: str
        """

        self._id = id

    @property
    def width(self):
        """Gets the width of this DriveBackgroundImageFile.

        The width of the cropped image in the closed range of 0 to 1. This value represents the width of the cropped image divided by the width of the entire image. The height is computed by applying a width to height aspect ratio of 80 to 9. The resulting image must be at least 1280 pixels wide and 144 pixels high.

        :return: The width of this DriveBackgroundImageFile.
        :rtype: float
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this DriveBackgroundImageFile.

        The width of the cropped image in the closed range of 0 to 1. This value represents the width of the cropped image divided by the width of the entire image. The height is computed by applying a width to height aspect ratio of 80 to 9. The resulting image must be at least 1280 pixels wide and 144 pixels high.

        :param width: The width of this DriveBackgroundImageFile.
        :type width: float
        """

        self._width = width

    @property
    def x_coordinate(self):
        """Gets the x_coordinate of this DriveBackgroundImageFile.

        The X coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the horizontal distance from the left side of the entire image to the left side of the cropping area divided by the width of the entire image.

        :return: The x_coordinate of this DriveBackgroundImageFile.
        :rtype: float
        """
        return self._x_coordinate

    @x_coordinate.setter
    def x_coordinate(self, x_coordinate):
        """Sets the x_coordinate of this DriveBackgroundImageFile.

        The X coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the horizontal distance from the left side of the entire image to the left side of the cropping area divided by the width of the entire image.

        :param x_coordinate: The x_coordinate of this DriveBackgroundImageFile.
        :type x_coordinate: float
        """

        self._x_coordinate = x_coordinate

    @property
    def y_coordinate(self):
        """Gets the y_coordinate of this DriveBackgroundImageFile.

        The Y coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the vertical distance from the top side of the entire image to the top side of the cropping area divided by the height of the entire image.

        :return: The y_coordinate of this DriveBackgroundImageFile.
        :rtype: float
        """
        return self._y_coordinate

    @y_coordinate.setter
    def y_coordinate(self, y_coordinate):
        """Sets the y_coordinate of this DriveBackgroundImageFile.

        The Y coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the vertical distance from the top side of the entire image to the top side of the cropping area divided by the height of the entire image.

        :param y_coordinate: The y_coordinate of this DriveBackgroundImageFile.
        :type y_coordinate: float
        """

        self._y_coordinate = y_coordinate
