# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FileCapabilities(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, can_accept_ownership: bool=None, can_add_children: bool=None, can_add_folder_from_another_drive: bool=None, can_add_my_drive_parent: bool=None, can_change_copy_requires_writer_permission: bool=None, can_change_restricted_download: bool=None, can_change_security_update_enabled: bool=None, can_comment: bool=None, can_copy: bool=None, can_delete: bool=None, can_delete_children: bool=None, can_download: bool=None, can_edit: bool=None, can_list_children: bool=None, can_modify_content: bool=None, can_modify_content_restriction: bool=None, can_modify_editor_content_restriction: bool=None, can_modify_labels: bool=None, can_modify_owner_content_restriction: bool=None, can_move_children_out_of_drive: bool=None, can_move_children_out_of_team_drive: bool=None, can_move_children_within_drive: bool=None, can_move_children_within_team_drive: bool=None, can_move_item_into_team_drive: bool=None, can_move_item_out_of_drive: bool=None, can_move_item_out_of_team_drive: bool=None, can_move_item_within_drive: bool=None, can_move_item_within_team_drive: bool=None, can_move_team_drive_item: bool=None, can_read_drive: bool=None, can_read_labels: bool=None, can_read_revisions: bool=None, can_read_team_drive: bool=None, can_remove_children: bool=None, can_remove_content_restriction: bool=None, can_remove_my_drive_parent: bool=None, can_rename: bool=None, can_share: bool=None, can_trash: bool=None, can_trash_children: bool=None, can_untrash: bool=None):
        """FileCapabilities - a model defined in OpenAPI

        :param can_accept_ownership: The can_accept_ownership of this FileCapabilities.
        :param can_add_children: The can_add_children of this FileCapabilities.
        :param can_add_folder_from_another_drive: The can_add_folder_from_another_drive of this FileCapabilities.
        :param can_add_my_drive_parent: The can_add_my_drive_parent of this FileCapabilities.
        :param can_change_copy_requires_writer_permission: The can_change_copy_requires_writer_permission of this FileCapabilities.
        :param can_change_restricted_download: The can_change_restricted_download of this FileCapabilities.
        :param can_change_security_update_enabled: The can_change_security_update_enabled of this FileCapabilities.
        :param can_comment: The can_comment of this FileCapabilities.
        :param can_copy: The can_copy of this FileCapabilities.
        :param can_delete: The can_delete of this FileCapabilities.
        :param can_delete_children: The can_delete_children of this FileCapabilities.
        :param can_download: The can_download of this FileCapabilities.
        :param can_edit: The can_edit of this FileCapabilities.
        :param can_list_children: The can_list_children of this FileCapabilities.
        :param can_modify_content: The can_modify_content of this FileCapabilities.
        :param can_modify_content_restriction: The can_modify_content_restriction of this FileCapabilities.
        :param can_modify_editor_content_restriction: The can_modify_editor_content_restriction of this FileCapabilities.
        :param can_modify_labels: The can_modify_labels of this FileCapabilities.
        :param can_modify_owner_content_restriction: The can_modify_owner_content_restriction of this FileCapabilities.
        :param can_move_children_out_of_drive: The can_move_children_out_of_drive of this FileCapabilities.
        :param can_move_children_out_of_team_drive: The can_move_children_out_of_team_drive of this FileCapabilities.
        :param can_move_children_within_drive: The can_move_children_within_drive of this FileCapabilities.
        :param can_move_children_within_team_drive: The can_move_children_within_team_drive of this FileCapabilities.
        :param can_move_item_into_team_drive: The can_move_item_into_team_drive of this FileCapabilities.
        :param can_move_item_out_of_drive: The can_move_item_out_of_drive of this FileCapabilities.
        :param can_move_item_out_of_team_drive: The can_move_item_out_of_team_drive of this FileCapabilities.
        :param can_move_item_within_drive: The can_move_item_within_drive of this FileCapabilities.
        :param can_move_item_within_team_drive: The can_move_item_within_team_drive of this FileCapabilities.
        :param can_move_team_drive_item: The can_move_team_drive_item of this FileCapabilities.
        :param can_read_drive: The can_read_drive of this FileCapabilities.
        :param can_read_labels: The can_read_labels of this FileCapabilities.
        :param can_read_revisions: The can_read_revisions of this FileCapabilities.
        :param can_read_team_drive: The can_read_team_drive of this FileCapabilities.
        :param can_remove_children: The can_remove_children of this FileCapabilities.
        :param can_remove_content_restriction: The can_remove_content_restriction of this FileCapabilities.
        :param can_remove_my_drive_parent: The can_remove_my_drive_parent of this FileCapabilities.
        :param can_rename: The can_rename of this FileCapabilities.
        :param can_share: The can_share of this FileCapabilities.
        :param can_trash: The can_trash of this FileCapabilities.
        :param can_trash_children: The can_trash_children of this FileCapabilities.
        :param can_untrash: The can_untrash of this FileCapabilities.
        """
        self.openapi_types = {
            'can_accept_ownership': bool,
            'can_add_children': bool,
            'can_add_folder_from_another_drive': bool,
            'can_add_my_drive_parent': bool,
            'can_change_copy_requires_writer_permission': bool,
            'can_change_restricted_download': bool,
            'can_change_security_update_enabled': bool,
            'can_comment': bool,
            'can_copy': bool,
            'can_delete': bool,
            'can_delete_children': bool,
            'can_download': bool,
            'can_edit': bool,
            'can_list_children': bool,
            'can_modify_content': bool,
            'can_modify_content_restriction': bool,
            'can_modify_editor_content_restriction': bool,
            'can_modify_labels': bool,
            'can_modify_owner_content_restriction': bool,
            'can_move_children_out_of_drive': bool,
            'can_move_children_out_of_team_drive': bool,
            'can_move_children_within_drive': bool,
            'can_move_children_within_team_drive': bool,
            'can_move_item_into_team_drive': bool,
            'can_move_item_out_of_drive': bool,
            'can_move_item_out_of_team_drive': bool,
            'can_move_item_within_drive': bool,
            'can_move_item_within_team_drive': bool,
            'can_move_team_drive_item': bool,
            'can_read_drive': bool,
            'can_read_labels': bool,
            'can_read_revisions': bool,
            'can_read_team_drive': bool,
            'can_remove_children': bool,
            'can_remove_content_restriction': bool,
            'can_remove_my_drive_parent': bool,
            'can_rename': bool,
            'can_share': bool,
            'can_trash': bool,
            'can_trash_children': bool,
            'can_untrash': bool
        }

        self.attribute_map = {
            'can_accept_ownership': 'canAcceptOwnership',
            'can_add_children': 'canAddChildren',
            'can_add_folder_from_another_drive': 'canAddFolderFromAnotherDrive',
            'can_add_my_drive_parent': 'canAddMyDriveParent',
            'can_change_copy_requires_writer_permission': 'canChangeCopyRequiresWriterPermission',
            'can_change_restricted_download': 'canChangeRestrictedDownload',
            'can_change_security_update_enabled': 'canChangeSecurityUpdateEnabled',
            'can_comment': 'canComment',
            'can_copy': 'canCopy',
            'can_delete': 'canDelete',
            'can_delete_children': 'canDeleteChildren',
            'can_download': 'canDownload',
            'can_edit': 'canEdit',
            'can_list_children': 'canListChildren',
            'can_modify_content': 'canModifyContent',
            'can_modify_content_restriction': 'canModifyContentRestriction',
            'can_modify_editor_content_restriction': 'canModifyEditorContentRestriction',
            'can_modify_labels': 'canModifyLabels',
            'can_modify_owner_content_restriction': 'canModifyOwnerContentRestriction',
            'can_move_children_out_of_drive': 'canMoveChildrenOutOfDrive',
            'can_move_children_out_of_team_drive': 'canMoveChildrenOutOfTeamDrive',
            'can_move_children_within_drive': 'canMoveChildrenWithinDrive',
            'can_move_children_within_team_drive': 'canMoveChildrenWithinTeamDrive',
            'can_move_item_into_team_drive': 'canMoveItemIntoTeamDrive',
            'can_move_item_out_of_drive': 'canMoveItemOutOfDrive',
            'can_move_item_out_of_team_drive': 'canMoveItemOutOfTeamDrive',
            'can_move_item_within_drive': 'canMoveItemWithinDrive',
            'can_move_item_within_team_drive': 'canMoveItemWithinTeamDrive',
            'can_move_team_drive_item': 'canMoveTeamDriveItem',
            'can_read_drive': 'canReadDrive',
            'can_read_labels': 'canReadLabels',
            'can_read_revisions': 'canReadRevisions',
            'can_read_team_drive': 'canReadTeamDrive',
            'can_remove_children': 'canRemoveChildren',
            'can_remove_content_restriction': 'canRemoveContentRestriction',
            'can_remove_my_drive_parent': 'canRemoveMyDriveParent',
            'can_rename': 'canRename',
            'can_share': 'canShare',
            'can_trash': 'canTrash',
            'can_trash_children': 'canTrashChildren',
            'can_untrash': 'canUntrash'
        }

        self._can_accept_ownership = can_accept_ownership
        self._can_add_children = can_add_children
        self._can_add_folder_from_another_drive = can_add_folder_from_another_drive
        self._can_add_my_drive_parent = can_add_my_drive_parent
        self._can_change_copy_requires_writer_permission = can_change_copy_requires_writer_permission
        self._can_change_restricted_download = can_change_restricted_download
        self._can_change_security_update_enabled = can_change_security_update_enabled
        self._can_comment = can_comment
        self._can_copy = can_copy
        self._can_delete = can_delete
        self._can_delete_children = can_delete_children
        self._can_download = can_download
        self._can_edit = can_edit
        self._can_list_children = can_list_children
        self._can_modify_content = can_modify_content
        self._can_modify_content_restriction = can_modify_content_restriction
        self._can_modify_editor_content_restriction = can_modify_editor_content_restriction
        self._can_modify_labels = can_modify_labels
        self._can_modify_owner_content_restriction = can_modify_owner_content_restriction
        self._can_move_children_out_of_drive = can_move_children_out_of_drive
        self._can_move_children_out_of_team_drive = can_move_children_out_of_team_drive
        self._can_move_children_within_drive = can_move_children_within_drive
        self._can_move_children_within_team_drive = can_move_children_within_team_drive
        self._can_move_item_into_team_drive = can_move_item_into_team_drive
        self._can_move_item_out_of_drive = can_move_item_out_of_drive
        self._can_move_item_out_of_team_drive = can_move_item_out_of_team_drive
        self._can_move_item_within_drive = can_move_item_within_drive
        self._can_move_item_within_team_drive = can_move_item_within_team_drive
        self._can_move_team_drive_item = can_move_team_drive_item
        self._can_read_drive = can_read_drive
        self._can_read_labels = can_read_labels
        self._can_read_revisions = can_read_revisions
        self._can_read_team_drive = can_read_team_drive
        self._can_remove_children = can_remove_children
        self._can_remove_content_restriction = can_remove_content_restriction
        self._can_remove_my_drive_parent = can_remove_my_drive_parent
        self._can_rename = can_rename
        self._can_share = can_share
        self._can_trash = can_trash
        self._can_trash_children = can_trash_children
        self._can_untrash = can_untrash

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileCapabilities':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The File_capabilities of this FileCapabilities.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def can_accept_ownership(self):
        """Gets the can_accept_ownership of this FileCapabilities.

        Output only. Whether the current user is the pending owner of the file. Not populated for shared drive files.

        :return: The can_accept_ownership of this FileCapabilities.
        :rtype: bool
        """
        return self._can_accept_ownership

    @can_accept_ownership.setter
    def can_accept_ownership(self, can_accept_ownership):
        """Sets the can_accept_ownership of this FileCapabilities.

        Output only. Whether the current user is the pending owner of the file. Not populated for shared drive files.

        :param can_accept_ownership: The can_accept_ownership of this FileCapabilities.
        :type can_accept_ownership: bool
        """

        self._can_accept_ownership = can_accept_ownership

    @property
    def can_add_children(self):
        """Gets the can_add_children of this FileCapabilities.

        Output only. Whether the current user can add children to this folder. This is always false when the item is not a folder.

        :return: The can_add_children of this FileCapabilities.
        :rtype: bool
        """
        return self._can_add_children

    @can_add_children.setter
    def can_add_children(self, can_add_children):
        """Sets the can_add_children of this FileCapabilities.

        Output only. Whether the current user can add children to this folder. This is always false when the item is not a folder.

        :param can_add_children: The can_add_children of this FileCapabilities.
        :type can_add_children: bool
        """

        self._can_add_children = can_add_children

    @property
    def can_add_folder_from_another_drive(self):
        """Gets the can_add_folder_from_another_drive of this FileCapabilities.

        Output only. Whether the current user can add a folder from another drive (different shared drive or My Drive) to this folder. This is false when the item is not a folder. Only populated for items in shared drives.

        :return: The can_add_folder_from_another_drive of this FileCapabilities.
        :rtype: bool
        """
        return self._can_add_folder_from_another_drive

    @can_add_folder_from_another_drive.setter
    def can_add_folder_from_another_drive(self, can_add_folder_from_another_drive):
        """Sets the can_add_folder_from_another_drive of this FileCapabilities.

        Output only. Whether the current user can add a folder from another drive (different shared drive or My Drive) to this folder. This is false when the item is not a folder. Only populated for items in shared drives.

        :param can_add_folder_from_another_drive: The can_add_folder_from_another_drive of this FileCapabilities.
        :type can_add_folder_from_another_drive: bool
        """

        self._can_add_folder_from_another_drive = can_add_folder_from_another_drive

    @property
    def can_add_my_drive_parent(self):
        """Gets the can_add_my_drive_parent of this FileCapabilities.

        Output only. Whether the current user can add a parent for the item without removing an existing parent in the same request. Not populated for shared drive files.

        :return: The can_add_my_drive_parent of this FileCapabilities.
        :rtype: bool
        """
        return self._can_add_my_drive_parent

    @can_add_my_drive_parent.setter
    def can_add_my_drive_parent(self, can_add_my_drive_parent):
        """Sets the can_add_my_drive_parent of this FileCapabilities.

        Output only. Whether the current user can add a parent for the item without removing an existing parent in the same request. Not populated for shared drive files.

        :param can_add_my_drive_parent: The can_add_my_drive_parent of this FileCapabilities.
        :type can_add_my_drive_parent: bool
        """

        self._can_add_my_drive_parent = can_add_my_drive_parent

    @property
    def can_change_copy_requires_writer_permission(self):
        """Gets the can_change_copy_requires_writer_permission of this FileCapabilities.

        Output only. Whether the current user can change the `copyRequiresWriterPermission` restriction of this file.

        :return: The can_change_copy_requires_writer_permission of this FileCapabilities.
        :rtype: bool
        """
        return self._can_change_copy_requires_writer_permission

    @can_change_copy_requires_writer_permission.setter
    def can_change_copy_requires_writer_permission(self, can_change_copy_requires_writer_permission):
        """Sets the can_change_copy_requires_writer_permission of this FileCapabilities.

        Output only. Whether the current user can change the `copyRequiresWriterPermission` restriction of this file.

        :param can_change_copy_requires_writer_permission: The can_change_copy_requires_writer_permission of this FileCapabilities.
        :type can_change_copy_requires_writer_permission: bool
        """

        self._can_change_copy_requires_writer_permission = can_change_copy_requires_writer_permission

    @property
    def can_change_restricted_download(self):
        """Gets the can_change_restricted_download of this FileCapabilities.

        Output only. Deprecated.

        :return: The can_change_restricted_download of this FileCapabilities.
        :rtype: bool
        """
        return self._can_change_restricted_download

    @can_change_restricted_download.setter
    def can_change_restricted_download(self, can_change_restricted_download):
        """Sets the can_change_restricted_download of this FileCapabilities.

        Output only. Deprecated.

        :param can_change_restricted_download: The can_change_restricted_download of this FileCapabilities.
        :type can_change_restricted_download: bool
        """

        self._can_change_restricted_download = can_change_restricted_download

    @property
    def can_change_security_update_enabled(self):
        """Gets the can_change_security_update_enabled of this FileCapabilities.

        Output only. Whether the current user can change the securityUpdateEnabled field on link share metadata.

        :return: The can_change_security_update_enabled of this FileCapabilities.
        :rtype: bool
        """
        return self._can_change_security_update_enabled

    @can_change_security_update_enabled.setter
    def can_change_security_update_enabled(self, can_change_security_update_enabled):
        """Sets the can_change_security_update_enabled of this FileCapabilities.

        Output only. Whether the current user can change the securityUpdateEnabled field on link share metadata.

        :param can_change_security_update_enabled: The can_change_security_update_enabled of this FileCapabilities.
        :type can_change_security_update_enabled: bool
        """

        self._can_change_security_update_enabled = can_change_security_update_enabled

    @property
    def can_comment(self):
        """Gets the can_comment of this FileCapabilities.

        Output only. Whether the current user can comment on this file.

        :return: The can_comment of this FileCapabilities.
        :rtype: bool
        """
        return self._can_comment

    @can_comment.setter
    def can_comment(self, can_comment):
        """Sets the can_comment of this FileCapabilities.

        Output only. Whether the current user can comment on this file.

        :param can_comment: The can_comment of this FileCapabilities.
        :type can_comment: bool
        """

        self._can_comment = can_comment

    @property
    def can_copy(self):
        """Gets the can_copy of this FileCapabilities.

        Output only. Whether the current user can copy this file. For an item in a shared drive, whether the current user can copy non-folder descendants of this item, or this item itself if it is not a folder.

        :return: The can_copy of this FileCapabilities.
        :rtype: bool
        """
        return self._can_copy

    @can_copy.setter
    def can_copy(self, can_copy):
        """Sets the can_copy of this FileCapabilities.

        Output only. Whether the current user can copy this file. For an item in a shared drive, whether the current user can copy non-folder descendants of this item, or this item itself if it is not a folder.

        :param can_copy: The can_copy of this FileCapabilities.
        :type can_copy: bool
        """

        self._can_copy = can_copy

    @property
    def can_delete(self):
        """Gets the can_delete of this FileCapabilities.

        Output only. Whether the current user can delete this file.

        :return: The can_delete of this FileCapabilities.
        :rtype: bool
        """
        return self._can_delete

    @can_delete.setter
    def can_delete(self, can_delete):
        """Sets the can_delete of this FileCapabilities.

        Output only. Whether the current user can delete this file.

        :param can_delete: The can_delete of this FileCapabilities.
        :type can_delete: bool
        """

        self._can_delete = can_delete

    @property
    def can_delete_children(self):
        """Gets the can_delete_children of this FileCapabilities.

        Output only. Whether the current user can delete children of this folder. This is false when the item is not a folder. Only populated for items in shared drives.

        :return: The can_delete_children of this FileCapabilities.
        :rtype: bool
        """
        return self._can_delete_children

    @can_delete_children.setter
    def can_delete_children(self, can_delete_children):
        """Sets the can_delete_children of this FileCapabilities.

        Output only. Whether the current user can delete children of this folder. This is false when the item is not a folder. Only populated for items in shared drives.

        :param can_delete_children: The can_delete_children of this FileCapabilities.
        :type can_delete_children: bool
        """

        self._can_delete_children = can_delete_children

    @property
    def can_download(self):
        """Gets the can_download of this FileCapabilities.

        Output only. Whether the current user can download this file.

        :return: The can_download of this FileCapabilities.
        :rtype: bool
        """
        return self._can_download

    @can_download.setter
    def can_download(self, can_download):
        """Sets the can_download of this FileCapabilities.

        Output only. Whether the current user can download this file.

        :param can_download: The can_download of this FileCapabilities.
        :type can_download: bool
        """

        self._can_download = can_download

    @property
    def can_edit(self):
        """Gets the can_edit of this FileCapabilities.

        Output only. Whether the current user can edit this file. Other factors may limit the type of changes a user can make to a file. For example, see `canChangeCopyRequiresWriterPermission` or `canModifyContent`.

        :return: The can_edit of this FileCapabilities.
        :rtype: bool
        """
        return self._can_edit

    @can_edit.setter
    def can_edit(self, can_edit):
        """Sets the can_edit of this FileCapabilities.

        Output only. Whether the current user can edit this file. Other factors may limit the type of changes a user can make to a file. For example, see `canChangeCopyRequiresWriterPermission` or `canModifyContent`.

        :param can_edit: The can_edit of this FileCapabilities.
        :type can_edit: bool
        """

        self._can_edit = can_edit

    @property
    def can_list_children(self):
        """Gets the can_list_children of this FileCapabilities.

        Output only. Whether the current user can list the children of this folder. This is always false when the item is not a folder.

        :return: The can_list_children of this FileCapabilities.
        :rtype: bool
        """
        return self._can_list_children

    @can_list_children.setter
    def can_list_children(self, can_list_children):
        """Sets the can_list_children of this FileCapabilities.

        Output only. Whether the current user can list the children of this folder. This is always false when the item is not a folder.

        :param can_list_children: The can_list_children of this FileCapabilities.
        :type can_list_children: bool
        """

        self._can_list_children = can_list_children

    @property
    def can_modify_content(self):
        """Gets the can_modify_content of this FileCapabilities.

        Output only. Whether the current user can modify the content of this file.

        :return: The can_modify_content of this FileCapabilities.
        :rtype: bool
        """
        return self._can_modify_content

    @can_modify_content.setter
    def can_modify_content(self, can_modify_content):
        """Sets the can_modify_content of this FileCapabilities.

        Output only. Whether the current user can modify the content of this file.

        :param can_modify_content: The can_modify_content of this FileCapabilities.
        :type can_modify_content: bool
        """

        self._can_modify_content = can_modify_content

    @property
    def can_modify_content_restriction(self):
        """Gets the can_modify_content_restriction of this FileCapabilities.

        Deprecated: Output only. Use one of `canModifyEditorContentRestriction`, `canModifyOwnerContentRestriction` or `canRemoveContentRestriction`.

        :return: The can_modify_content_restriction of this FileCapabilities.
        :rtype: bool
        """
        return self._can_modify_content_restriction

    @can_modify_content_restriction.setter
    def can_modify_content_restriction(self, can_modify_content_restriction):
        """Sets the can_modify_content_restriction of this FileCapabilities.

        Deprecated: Output only. Use one of `canModifyEditorContentRestriction`, `canModifyOwnerContentRestriction` or `canRemoveContentRestriction`.

        :param can_modify_content_restriction: The can_modify_content_restriction of this FileCapabilities.
        :type can_modify_content_restriction: bool
        """

        self._can_modify_content_restriction = can_modify_content_restriction

    @property
    def can_modify_editor_content_restriction(self):
        """Gets the can_modify_editor_content_restriction of this FileCapabilities.

        Output only. Whether the current user can add or modify content restrictions on the file which are editor restricted.

        :return: The can_modify_editor_content_restriction of this FileCapabilities.
        :rtype: bool
        """
        return self._can_modify_editor_content_restriction

    @can_modify_editor_content_restriction.setter
    def can_modify_editor_content_restriction(self, can_modify_editor_content_restriction):
        """Sets the can_modify_editor_content_restriction of this FileCapabilities.

        Output only. Whether the current user can add or modify content restrictions on the file which are editor restricted.

        :param can_modify_editor_content_restriction: The can_modify_editor_content_restriction of this FileCapabilities.
        :type can_modify_editor_content_restriction: bool
        """

        self._can_modify_editor_content_restriction = can_modify_editor_content_restriction

    @property
    def can_modify_labels(self):
        """Gets the can_modify_labels of this FileCapabilities.

        Output only. Whether the current user can modify the labels on the file.

        :return: The can_modify_labels of this FileCapabilities.
        :rtype: bool
        """
        return self._can_modify_labels

    @can_modify_labels.setter
    def can_modify_labels(self, can_modify_labels):
        """Sets the can_modify_labels of this FileCapabilities.

        Output only. Whether the current user can modify the labels on the file.

        :param can_modify_labels: The can_modify_labels of this FileCapabilities.
        :type can_modify_labels: bool
        """

        self._can_modify_labels = can_modify_labels

    @property
    def can_modify_owner_content_restriction(self):
        """Gets the can_modify_owner_content_restriction of this FileCapabilities.

        Output only. Whether the current user can add or modify content restrictions which are owner restricted.

        :return: The can_modify_owner_content_restriction of this FileCapabilities.
        :rtype: bool
        """
        return self._can_modify_owner_content_restriction

    @can_modify_owner_content_restriction.setter
    def can_modify_owner_content_restriction(self, can_modify_owner_content_restriction):
        """Sets the can_modify_owner_content_restriction of this FileCapabilities.

        Output only. Whether the current user can add or modify content restrictions which are owner restricted.

        :param can_modify_owner_content_restriction: The can_modify_owner_content_restriction of this FileCapabilities.
        :type can_modify_owner_content_restriction: bool
        """

        self._can_modify_owner_content_restriction = can_modify_owner_content_restriction

    @property
    def can_move_children_out_of_drive(self):
        """Gets the can_move_children_out_of_drive of this FileCapabilities.

        Output only. Whether the current user can move children of this folder outside of the shared drive. This is false when the item is not a folder. Only populated for items in shared drives.

        :return: The can_move_children_out_of_drive of this FileCapabilities.
        :rtype: bool
        """
        return self._can_move_children_out_of_drive

    @can_move_children_out_of_drive.setter
    def can_move_children_out_of_drive(self, can_move_children_out_of_drive):
        """Sets the can_move_children_out_of_drive of this FileCapabilities.

        Output only. Whether the current user can move children of this folder outside of the shared drive. This is false when the item is not a folder. Only populated for items in shared drives.

        :param can_move_children_out_of_drive: The can_move_children_out_of_drive of this FileCapabilities.
        :type can_move_children_out_of_drive: bool
        """

        self._can_move_children_out_of_drive = can_move_children_out_of_drive

    @property
    def can_move_children_out_of_team_drive(self):
        """Gets the can_move_children_out_of_team_drive of this FileCapabilities.

        Output only. Deprecated: Use `canMoveChildrenOutOfDrive` instead.

        :return: The can_move_children_out_of_team_drive of this FileCapabilities.
        :rtype: bool
        """
        return self._can_move_children_out_of_team_drive

    @can_move_children_out_of_team_drive.setter
    def can_move_children_out_of_team_drive(self, can_move_children_out_of_team_drive):
        """Sets the can_move_children_out_of_team_drive of this FileCapabilities.

        Output only. Deprecated: Use `canMoveChildrenOutOfDrive` instead.

        :param can_move_children_out_of_team_drive: The can_move_children_out_of_team_drive of this FileCapabilities.
        :type can_move_children_out_of_team_drive: bool
        """

        self._can_move_children_out_of_team_drive = can_move_children_out_of_team_drive

    @property
    def can_move_children_within_drive(self):
        """Gets the can_move_children_within_drive of this FileCapabilities.

        Output only. Whether the current user can move children of this folder within this drive. This is false when the item is not a folder. Note that a request to move the child may still fail depending on the current user's access to the child and to the destination folder.

        :return: The can_move_children_within_drive of this FileCapabilities.
        :rtype: bool
        """
        return self._can_move_children_within_drive

    @can_move_children_within_drive.setter
    def can_move_children_within_drive(self, can_move_children_within_drive):
        """Sets the can_move_children_within_drive of this FileCapabilities.

        Output only. Whether the current user can move children of this folder within this drive. This is false when the item is not a folder. Note that a request to move the child may still fail depending on the current user's access to the child and to the destination folder.

        :param can_move_children_within_drive: The can_move_children_within_drive of this FileCapabilities.
        :type can_move_children_within_drive: bool
        """

        self._can_move_children_within_drive = can_move_children_within_drive

    @property
    def can_move_children_within_team_drive(self):
        """Gets the can_move_children_within_team_drive of this FileCapabilities.

        Output only. Deprecated: Use `canMoveChildrenWithinDrive` instead.

        :return: The can_move_children_within_team_drive of this FileCapabilities.
        :rtype: bool
        """
        return self._can_move_children_within_team_drive

    @can_move_children_within_team_drive.setter
    def can_move_children_within_team_drive(self, can_move_children_within_team_drive):
        """Sets the can_move_children_within_team_drive of this FileCapabilities.

        Output only. Deprecated: Use `canMoveChildrenWithinDrive` instead.

        :param can_move_children_within_team_drive: The can_move_children_within_team_drive of this FileCapabilities.
        :type can_move_children_within_team_drive: bool
        """

        self._can_move_children_within_team_drive = can_move_children_within_team_drive

    @property
    def can_move_item_into_team_drive(self):
        """Gets the can_move_item_into_team_drive of this FileCapabilities.

        Output only. Deprecated: Use `canMoveItemOutOfDrive` instead.

        :return: The can_move_item_into_team_drive of this FileCapabilities.
        :rtype: bool
        """
        return self._can_move_item_into_team_drive

    @can_move_item_into_team_drive.setter
    def can_move_item_into_team_drive(self, can_move_item_into_team_drive):
        """Sets the can_move_item_into_team_drive of this FileCapabilities.

        Output only. Deprecated: Use `canMoveItemOutOfDrive` instead.

        :param can_move_item_into_team_drive: The can_move_item_into_team_drive of this FileCapabilities.
        :type can_move_item_into_team_drive: bool
        """

        self._can_move_item_into_team_drive = can_move_item_into_team_drive

    @property
    def can_move_item_out_of_drive(self):
        """Gets the can_move_item_out_of_drive of this FileCapabilities.

        Output only. Whether the current user can move this item outside of this drive by changing its parent. Note that a request to change the parent of the item may still fail depending on the new parent that is being added.

        :return: The can_move_item_out_of_drive of this FileCapabilities.
        :rtype: bool
        """
        return self._can_move_item_out_of_drive

    @can_move_item_out_of_drive.setter
    def can_move_item_out_of_drive(self, can_move_item_out_of_drive):
        """Sets the can_move_item_out_of_drive of this FileCapabilities.

        Output only. Whether the current user can move this item outside of this drive by changing its parent. Note that a request to change the parent of the item may still fail depending on the new parent that is being added.

        :param can_move_item_out_of_drive: The can_move_item_out_of_drive of this FileCapabilities.
        :type can_move_item_out_of_drive: bool
        """

        self._can_move_item_out_of_drive = can_move_item_out_of_drive

    @property
    def can_move_item_out_of_team_drive(self):
        """Gets the can_move_item_out_of_team_drive of this FileCapabilities.

        Output only. Deprecated: Use `canMoveItemOutOfDrive` instead.

        :return: The can_move_item_out_of_team_drive of this FileCapabilities.
        :rtype: bool
        """
        return self._can_move_item_out_of_team_drive

    @can_move_item_out_of_team_drive.setter
    def can_move_item_out_of_team_drive(self, can_move_item_out_of_team_drive):
        """Sets the can_move_item_out_of_team_drive of this FileCapabilities.

        Output only. Deprecated: Use `canMoveItemOutOfDrive` instead.

        :param can_move_item_out_of_team_drive: The can_move_item_out_of_team_drive of this FileCapabilities.
        :type can_move_item_out_of_team_drive: bool
        """

        self._can_move_item_out_of_team_drive = can_move_item_out_of_team_drive

    @property
    def can_move_item_within_drive(self):
        """Gets the can_move_item_within_drive of this FileCapabilities.

        Output only. Whether the current user can move this item within this drive. Note that a request to change the parent of the item may still fail depending on the new parent that is being added and the parent that is being removed.

        :return: The can_move_item_within_drive of this FileCapabilities.
        :rtype: bool
        """
        return self._can_move_item_within_drive

    @can_move_item_within_drive.setter
    def can_move_item_within_drive(self, can_move_item_within_drive):
        """Sets the can_move_item_within_drive of this FileCapabilities.

        Output only. Whether the current user can move this item within this drive. Note that a request to change the parent of the item may still fail depending on the new parent that is being added and the parent that is being removed.

        :param can_move_item_within_drive: The can_move_item_within_drive of this FileCapabilities.
        :type can_move_item_within_drive: bool
        """

        self._can_move_item_within_drive = can_move_item_within_drive

    @property
    def can_move_item_within_team_drive(self):
        """Gets the can_move_item_within_team_drive of this FileCapabilities.

        Output only. Deprecated: Use `canMoveItemWithinDrive` instead.

        :return: The can_move_item_within_team_drive of this FileCapabilities.
        :rtype: bool
        """
        return self._can_move_item_within_team_drive

    @can_move_item_within_team_drive.setter
    def can_move_item_within_team_drive(self, can_move_item_within_team_drive):
        """Sets the can_move_item_within_team_drive of this FileCapabilities.

        Output only. Deprecated: Use `canMoveItemWithinDrive` instead.

        :param can_move_item_within_team_drive: The can_move_item_within_team_drive of this FileCapabilities.
        :type can_move_item_within_team_drive: bool
        """

        self._can_move_item_within_team_drive = can_move_item_within_team_drive

    @property
    def can_move_team_drive_item(self):
        """Gets the can_move_team_drive_item of this FileCapabilities.

        Output only. Deprecated: Use `canMoveItemWithinDrive` or `canMoveItemOutOfDrive` instead.

        :return: The can_move_team_drive_item of this FileCapabilities.
        :rtype: bool
        """
        return self._can_move_team_drive_item

    @can_move_team_drive_item.setter
    def can_move_team_drive_item(self, can_move_team_drive_item):
        """Sets the can_move_team_drive_item of this FileCapabilities.

        Output only. Deprecated: Use `canMoveItemWithinDrive` or `canMoveItemOutOfDrive` instead.

        :param can_move_team_drive_item: The can_move_team_drive_item of this FileCapabilities.
        :type can_move_team_drive_item: bool
        """

        self._can_move_team_drive_item = can_move_team_drive_item

    @property
    def can_read_drive(self):
        """Gets the can_read_drive of this FileCapabilities.

        Output only. Whether the current user can read the shared drive to which this file belongs. Only populated for items in shared drives.

        :return: The can_read_drive of this FileCapabilities.
        :rtype: bool
        """
        return self._can_read_drive

    @can_read_drive.setter
    def can_read_drive(self, can_read_drive):
        """Sets the can_read_drive of this FileCapabilities.

        Output only. Whether the current user can read the shared drive to which this file belongs. Only populated for items in shared drives.

        :param can_read_drive: The can_read_drive of this FileCapabilities.
        :type can_read_drive: bool
        """

        self._can_read_drive = can_read_drive

    @property
    def can_read_labels(self):
        """Gets the can_read_labels of this FileCapabilities.

        Output only. Whether the current user can read the labels on the file.

        :return: The can_read_labels of this FileCapabilities.
        :rtype: bool
        """
        return self._can_read_labels

    @can_read_labels.setter
    def can_read_labels(self, can_read_labels):
        """Sets the can_read_labels of this FileCapabilities.

        Output only. Whether the current user can read the labels on the file.

        :param can_read_labels: The can_read_labels of this FileCapabilities.
        :type can_read_labels: bool
        """

        self._can_read_labels = can_read_labels

    @property
    def can_read_revisions(self):
        """Gets the can_read_revisions of this FileCapabilities.

        Output only. Whether the current user can read the revisions resource of this file. For a shared drive item, whether revisions of non-folder descendants of this item, or this item itself if it is not a folder, can be read.

        :return: The can_read_revisions of this FileCapabilities.
        :rtype: bool
        """
        return self._can_read_revisions

    @can_read_revisions.setter
    def can_read_revisions(self, can_read_revisions):
        """Sets the can_read_revisions of this FileCapabilities.

        Output only. Whether the current user can read the revisions resource of this file. For a shared drive item, whether revisions of non-folder descendants of this item, or this item itself if it is not a folder, can be read.

        :param can_read_revisions: The can_read_revisions of this FileCapabilities.
        :type can_read_revisions: bool
        """

        self._can_read_revisions = can_read_revisions

    @property
    def can_read_team_drive(self):
        """Gets the can_read_team_drive of this FileCapabilities.

        Output only. Deprecated: Use `canReadDrive` instead.

        :return: The can_read_team_drive of this FileCapabilities.
        :rtype: bool
        """
        return self._can_read_team_drive

    @can_read_team_drive.setter
    def can_read_team_drive(self, can_read_team_drive):
        """Sets the can_read_team_drive of this FileCapabilities.

        Output only. Deprecated: Use `canReadDrive` instead.

        :param can_read_team_drive: The can_read_team_drive of this FileCapabilities.
        :type can_read_team_drive: bool
        """

        self._can_read_team_drive = can_read_team_drive

    @property
    def can_remove_children(self):
        """Gets the can_remove_children of this FileCapabilities.

        Output only. Whether the current user can remove children from this folder. This is always false when the item is not a folder. For a folder in a shared drive, use `canDeleteChildren` or `canTrashChildren` instead.

        :return: The can_remove_children of this FileCapabilities.
        :rtype: bool
        """
        return self._can_remove_children

    @can_remove_children.setter
    def can_remove_children(self, can_remove_children):
        """Sets the can_remove_children of this FileCapabilities.

        Output only. Whether the current user can remove children from this folder. This is always false when the item is not a folder. For a folder in a shared drive, use `canDeleteChildren` or `canTrashChildren` instead.

        :param can_remove_children: The can_remove_children of this FileCapabilities.
        :type can_remove_children: bool
        """

        self._can_remove_children = can_remove_children

    @property
    def can_remove_content_restriction(self):
        """Gets the can_remove_content_restriction of this FileCapabilities.

        Output only. Whether there is a content restriction on the file that can be removed by the current user.

        :return: The can_remove_content_restriction of this FileCapabilities.
        :rtype: bool
        """
        return self._can_remove_content_restriction

    @can_remove_content_restriction.setter
    def can_remove_content_restriction(self, can_remove_content_restriction):
        """Sets the can_remove_content_restriction of this FileCapabilities.

        Output only. Whether there is a content restriction on the file that can be removed by the current user.

        :param can_remove_content_restriction: The can_remove_content_restriction of this FileCapabilities.
        :type can_remove_content_restriction: bool
        """

        self._can_remove_content_restriction = can_remove_content_restriction

    @property
    def can_remove_my_drive_parent(self):
        """Gets the can_remove_my_drive_parent of this FileCapabilities.

        Output only. Whether the current user can remove a parent from the item without adding another parent in the same request. Not populated for shared drive files.

        :return: The can_remove_my_drive_parent of this FileCapabilities.
        :rtype: bool
        """
        return self._can_remove_my_drive_parent

    @can_remove_my_drive_parent.setter
    def can_remove_my_drive_parent(self, can_remove_my_drive_parent):
        """Sets the can_remove_my_drive_parent of this FileCapabilities.

        Output only. Whether the current user can remove a parent from the item without adding another parent in the same request. Not populated for shared drive files.

        :param can_remove_my_drive_parent: The can_remove_my_drive_parent of this FileCapabilities.
        :type can_remove_my_drive_parent: bool
        """

        self._can_remove_my_drive_parent = can_remove_my_drive_parent

    @property
    def can_rename(self):
        """Gets the can_rename of this FileCapabilities.

        Output only. Whether the current user can rename this file.

        :return: The can_rename of this FileCapabilities.
        :rtype: bool
        """
        return self._can_rename

    @can_rename.setter
    def can_rename(self, can_rename):
        """Sets the can_rename of this FileCapabilities.

        Output only. Whether the current user can rename this file.

        :param can_rename: The can_rename of this FileCapabilities.
        :type can_rename: bool
        """

        self._can_rename = can_rename

    @property
    def can_share(self):
        """Gets the can_share of this FileCapabilities.

        Output only. Whether the current user can modify the sharing settings for this file.

        :return: The can_share of this FileCapabilities.
        :rtype: bool
        """
        return self._can_share

    @can_share.setter
    def can_share(self, can_share):
        """Sets the can_share of this FileCapabilities.

        Output only. Whether the current user can modify the sharing settings for this file.

        :param can_share: The can_share of this FileCapabilities.
        :type can_share: bool
        """

        self._can_share = can_share

    @property
    def can_trash(self):
        """Gets the can_trash of this FileCapabilities.

        Output only. Whether the current user can move this file to trash.

        :return: The can_trash of this FileCapabilities.
        :rtype: bool
        """
        return self._can_trash

    @can_trash.setter
    def can_trash(self, can_trash):
        """Sets the can_trash of this FileCapabilities.

        Output only. Whether the current user can move this file to trash.

        :param can_trash: The can_trash of this FileCapabilities.
        :type can_trash: bool
        """

        self._can_trash = can_trash

    @property
    def can_trash_children(self):
        """Gets the can_trash_children of this FileCapabilities.

        Output only. Whether the current user can trash children of this folder. This is false when the item is not a folder. Only populated for items in shared drives.

        :return: The can_trash_children of this FileCapabilities.
        :rtype: bool
        """
        return self._can_trash_children

    @can_trash_children.setter
    def can_trash_children(self, can_trash_children):
        """Sets the can_trash_children of this FileCapabilities.

        Output only. Whether the current user can trash children of this folder. This is false when the item is not a folder. Only populated for items in shared drives.

        :param can_trash_children: The can_trash_children of this FileCapabilities.
        :type can_trash_children: bool
        """

        self._can_trash_children = can_trash_children

    @property
    def can_untrash(self):
        """Gets the can_untrash of this FileCapabilities.

        Output only. Whether the current user can restore this file from trash.

        :return: The can_untrash of this FileCapabilities.
        :rtype: bool
        """
        return self._can_untrash

    @can_untrash.setter
    def can_untrash(self, can_untrash):
        """Sets the can_untrash of this FileCapabilities.

        Output only. Whether the current user can restore this file from trash.

        :param can_untrash: The can_untrash of this FileCapabilities.
        :type can_untrash: bool
        """

        self._can_untrash = can_untrash
