# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LabelFieldModification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, field_id: str=None, kind: str='drive#labelFieldModification', set_date_values: List[date]=None, set_integer_values: List[str]=None, set_selection_values: List[str]=None, set_text_values: List[str]=None, set_user_values: List[str]=None, unset_values: bool=None):
        """LabelFieldModification - a model defined in OpenAPI

        :param field_id: The field_id of this LabelFieldModification.
        :param kind: The kind of this LabelFieldModification.
        :param set_date_values: The set_date_values of this LabelFieldModification.
        :param set_integer_values: The set_integer_values of this LabelFieldModification.
        :param set_selection_values: The set_selection_values of this LabelFieldModification.
        :param set_text_values: The set_text_values of this LabelFieldModification.
        :param set_user_values: The set_user_values of this LabelFieldModification.
        :param unset_values: The unset_values of this LabelFieldModification.
        """
        self.openapi_types = {
            'field_id': str,
            'kind': str,
            'set_date_values': List[date],
            'set_integer_values': List[str],
            'set_selection_values': List[str],
            'set_text_values': List[str],
            'set_user_values': List[str],
            'unset_values': bool
        }

        self.attribute_map = {
            'field_id': 'fieldId',
            'kind': 'kind',
            'set_date_values': 'setDateValues',
            'set_integer_values': 'setIntegerValues',
            'set_selection_values': 'setSelectionValues',
            'set_text_values': 'setTextValues',
            'set_user_values': 'setUserValues',
            'unset_values': 'unsetValues'
        }

        self._field_id = field_id
        self._kind = kind
        self._set_date_values = set_date_values
        self._set_integer_values = set_integer_values
        self._set_selection_values = set_selection_values
        self._set_text_values = set_text_values
        self._set_user_values = set_user_values
        self._unset_values = unset_values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LabelFieldModification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LabelFieldModification of this LabelFieldModification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def field_id(self):
        """Gets the field_id of this LabelFieldModification.

        The ID of the field to be modified.

        :return: The field_id of this LabelFieldModification.
        :rtype: str
        """
        return self._field_id

    @field_id.setter
    def field_id(self, field_id):
        """Sets the field_id of this LabelFieldModification.

        The ID of the field to be modified.

        :param field_id: The field_id of this LabelFieldModification.
        :type field_id: str
        """

        self._field_id = field_id

    @property
    def kind(self):
        """Gets the kind of this LabelFieldModification.

        This is always `drive#labelFieldModification`.

        :return: The kind of this LabelFieldModification.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this LabelFieldModification.

        This is always `drive#labelFieldModification`.

        :param kind: The kind of this LabelFieldModification.
        :type kind: str
        """

        self._kind = kind

    @property
    def set_date_values(self):
        """Gets the set_date_values of this LabelFieldModification.

        Replaces the value of a dateString Field with these new values. The string must be in the RFC 3339 full-date format: YYYY-MM-DD.

        :return: The set_date_values of this LabelFieldModification.
        :rtype: List[date]
        """
        return self._set_date_values

    @set_date_values.setter
    def set_date_values(self, set_date_values):
        """Sets the set_date_values of this LabelFieldModification.

        Replaces the value of a dateString Field with these new values. The string must be in the RFC 3339 full-date format: YYYY-MM-DD.

        :param set_date_values: The set_date_values of this LabelFieldModification.
        :type set_date_values: List[date]
        """

        self._set_date_values = set_date_values

    @property
    def set_integer_values(self):
        """Gets the set_integer_values of this LabelFieldModification.

        Replaces the value of an `integer` field with these new values.

        :return: The set_integer_values of this LabelFieldModification.
        :rtype: List[str]
        """
        return self._set_integer_values

    @set_integer_values.setter
    def set_integer_values(self, set_integer_values):
        """Sets the set_integer_values of this LabelFieldModification.

        Replaces the value of an `integer` field with these new values.

        :param set_integer_values: The set_integer_values of this LabelFieldModification.
        :type set_integer_values: List[str]
        """

        self._set_integer_values = set_integer_values

    @property
    def set_selection_values(self):
        """Gets the set_selection_values of this LabelFieldModification.

        Replaces a `selection` field with these new values.

        :return: The set_selection_values of this LabelFieldModification.
        :rtype: List[str]
        """
        return self._set_selection_values

    @set_selection_values.setter
    def set_selection_values(self, set_selection_values):
        """Sets the set_selection_values of this LabelFieldModification.

        Replaces a `selection` field with these new values.

        :param set_selection_values: The set_selection_values of this LabelFieldModification.
        :type set_selection_values: List[str]
        """

        self._set_selection_values = set_selection_values

    @property
    def set_text_values(self):
        """Gets the set_text_values of this LabelFieldModification.

        Sets the value of a `text` field.

        :return: The set_text_values of this LabelFieldModification.
        :rtype: List[str]
        """
        return self._set_text_values

    @set_text_values.setter
    def set_text_values(self, set_text_values):
        """Sets the set_text_values of this LabelFieldModification.

        Sets the value of a `text` field.

        :param set_text_values: The set_text_values of this LabelFieldModification.
        :type set_text_values: List[str]
        """

        self._set_text_values = set_text_values

    @property
    def set_user_values(self):
        """Gets the set_user_values of this LabelFieldModification.

        Replaces a `user` field with these new values. The values must be valid email addresses.

        :return: The set_user_values of this LabelFieldModification.
        :rtype: List[str]
        """
        return self._set_user_values

    @set_user_values.setter
    def set_user_values(self, set_user_values):
        """Sets the set_user_values of this LabelFieldModification.

        Replaces a `user` field with these new values. The values must be valid email addresses.

        :param set_user_values: The set_user_values of this LabelFieldModification.
        :type set_user_values: List[str]
        """

        self._set_user_values = set_user_values

    @property
    def unset_values(self):
        """Gets the unset_values of this LabelFieldModification.

        Unsets the values for this field.

        :return: The unset_values of this LabelFieldModification.
        :rtype: bool
        """
        return self._unset_values

    @unset_values.setter
    def unset_values(self, unset_values):
        """Sets the unset_values of this LabelFieldModification.

        Unsets the values for this field.

        :param unset_values: The unset_values of this LabelFieldModification.
        :type unset_values: bool
        """

        self._unset_values = unset_values
