# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChildReference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, child_link: str=None, id: str=None, kind: str='drive#childReference', self_link: str=None):
        """ChildReference - a model defined in OpenAPI

        :param child_link: The child_link of this ChildReference.
        :param id: The id of this ChildReference.
        :param kind: The kind of this ChildReference.
        :param self_link: The self_link of this ChildReference.
        """
        self.openapi_types = {
            'child_link': str,
            'id': str,
            'kind': str,
            'self_link': str
        }

        self.attribute_map = {
            'child_link': 'childLink',
            'id': 'id',
            'kind': 'kind',
            'self_link': 'selfLink'
        }

        self._child_link = child_link
        self._id = id
        self._kind = kind
        self._self_link = self_link

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChildReference':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChildReference of this ChildReference.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def child_link(self):
        """Gets the child_link of this ChildReference.

        Output only. A link to the child.

        :return: The child_link of this ChildReference.
        :rtype: str
        """
        return self._child_link

    @child_link.setter
    def child_link(self, child_link):
        """Sets the child_link of this ChildReference.

        Output only. A link to the child.

        :param child_link: The child_link of this ChildReference.
        :type child_link: str
        """

        self._child_link = child_link

    @property
    def id(self):
        """Gets the id of this ChildReference.

        The ID of the child.

        :return: The id of this ChildReference.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ChildReference.

        The ID of the child.

        :param id: The id of this ChildReference.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this ChildReference.

        Output only. This is always `drive#childReference`.

        :return: The kind of this ChildReference.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ChildReference.

        Output only. This is always `drive#childReference`.

        :param kind: The kind of this ChildReference.
        :type kind: str
        """

        self._kind = kind

    @property
    def self_link(self):
        """Gets the self_link of this ChildReference.

        Output only. A link back to this reference.

        :return: The self_link of this ChildReference.
        :rtype: str
        """
        return self._self_link

    @self_link.setter
    def self_link(self, self_link):
        """Sets the self_link of this ChildReference.

        Output only. A link back to this reference.

        :param self_link: The self_link of this ChildReference.
        :type self_link: str
        """

        self._self_link = self_link
