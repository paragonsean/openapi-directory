# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DriveCapabilities(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, can_add_children: bool=None, can_change_copy_requires_writer_permission_restriction: bool=None, can_change_domain_users_only_restriction: bool=None, can_change_drive_background: bool=None, can_change_drive_members_only_restriction: bool=None, can_change_sharing_folders_requires_organizer_permission_restriction: bool=None, can_comment: bool=None, can_copy: bool=None, can_delete_children: bool=None, can_delete_drive: bool=None, can_download: bool=None, can_edit: bool=None, can_list_children: bool=None, can_manage_members: bool=None, can_read_revisions: bool=None, can_rename: bool=None, can_rename_drive: bool=None, can_reset_drive_restrictions: bool=None, can_share: bool=None, can_trash_children: bool=None):
        """DriveCapabilities - a model defined in OpenAPI

        :param can_add_children: The can_add_children of this DriveCapabilities.
        :param can_change_copy_requires_writer_permission_restriction: The can_change_copy_requires_writer_permission_restriction of this DriveCapabilities.
        :param can_change_domain_users_only_restriction: The can_change_domain_users_only_restriction of this DriveCapabilities.
        :param can_change_drive_background: The can_change_drive_background of this DriveCapabilities.
        :param can_change_drive_members_only_restriction: The can_change_drive_members_only_restriction of this DriveCapabilities.
        :param can_change_sharing_folders_requires_organizer_permission_restriction: The can_change_sharing_folders_requires_organizer_permission_restriction of this DriveCapabilities.
        :param can_comment: The can_comment of this DriveCapabilities.
        :param can_copy: The can_copy of this DriveCapabilities.
        :param can_delete_children: The can_delete_children of this DriveCapabilities.
        :param can_delete_drive: The can_delete_drive of this DriveCapabilities.
        :param can_download: The can_download of this DriveCapabilities.
        :param can_edit: The can_edit of this DriveCapabilities.
        :param can_list_children: The can_list_children of this DriveCapabilities.
        :param can_manage_members: The can_manage_members of this DriveCapabilities.
        :param can_read_revisions: The can_read_revisions of this DriveCapabilities.
        :param can_rename: The can_rename of this DriveCapabilities.
        :param can_rename_drive: The can_rename_drive of this DriveCapabilities.
        :param can_reset_drive_restrictions: The can_reset_drive_restrictions of this DriveCapabilities.
        :param can_share: The can_share of this DriveCapabilities.
        :param can_trash_children: The can_trash_children of this DriveCapabilities.
        """
        self.openapi_types = {
            'can_add_children': bool,
            'can_change_copy_requires_writer_permission_restriction': bool,
            'can_change_domain_users_only_restriction': bool,
            'can_change_drive_background': bool,
            'can_change_drive_members_only_restriction': bool,
            'can_change_sharing_folders_requires_organizer_permission_restriction': bool,
            'can_comment': bool,
            'can_copy': bool,
            'can_delete_children': bool,
            'can_delete_drive': bool,
            'can_download': bool,
            'can_edit': bool,
            'can_list_children': bool,
            'can_manage_members': bool,
            'can_read_revisions': bool,
            'can_rename': bool,
            'can_rename_drive': bool,
            'can_reset_drive_restrictions': bool,
            'can_share': bool,
            'can_trash_children': bool
        }

        self.attribute_map = {
            'can_add_children': 'canAddChildren',
            'can_change_copy_requires_writer_permission_restriction': 'canChangeCopyRequiresWriterPermissionRestriction',
            'can_change_domain_users_only_restriction': 'canChangeDomainUsersOnlyRestriction',
            'can_change_drive_background': 'canChangeDriveBackground',
            'can_change_drive_members_only_restriction': 'canChangeDriveMembersOnlyRestriction',
            'can_change_sharing_folders_requires_organizer_permission_restriction': 'canChangeSharingFoldersRequiresOrganizerPermissionRestriction',
            'can_comment': 'canComment',
            'can_copy': 'canCopy',
            'can_delete_children': 'canDeleteChildren',
            'can_delete_drive': 'canDeleteDrive',
            'can_download': 'canDownload',
            'can_edit': 'canEdit',
            'can_list_children': 'canListChildren',
            'can_manage_members': 'canManageMembers',
            'can_read_revisions': 'canReadRevisions',
            'can_rename': 'canRename',
            'can_rename_drive': 'canRenameDrive',
            'can_reset_drive_restrictions': 'canResetDriveRestrictions',
            'can_share': 'canShare',
            'can_trash_children': 'canTrashChildren'
        }

        self._can_add_children = can_add_children
        self._can_change_copy_requires_writer_permission_restriction = can_change_copy_requires_writer_permission_restriction
        self._can_change_domain_users_only_restriction = can_change_domain_users_only_restriction
        self._can_change_drive_background = can_change_drive_background
        self._can_change_drive_members_only_restriction = can_change_drive_members_only_restriction
        self._can_change_sharing_folders_requires_organizer_permission_restriction = can_change_sharing_folders_requires_organizer_permission_restriction
        self._can_comment = can_comment
        self._can_copy = can_copy
        self._can_delete_children = can_delete_children
        self._can_delete_drive = can_delete_drive
        self._can_download = can_download
        self._can_edit = can_edit
        self._can_list_children = can_list_children
        self._can_manage_members = can_manage_members
        self._can_read_revisions = can_read_revisions
        self._can_rename = can_rename
        self._can_rename_drive = can_rename_drive
        self._can_reset_drive_restrictions = can_reset_drive_restrictions
        self._can_share = can_share
        self._can_trash_children = can_trash_children

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DriveCapabilities':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Drive_capabilities of this DriveCapabilities.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def can_add_children(self):
        """Gets the can_add_children of this DriveCapabilities.

        Output only. Whether the current user can add children to folders in this shared drive.

        :return: The can_add_children of this DriveCapabilities.
        :rtype: bool
        """
        return self._can_add_children

    @can_add_children.setter
    def can_add_children(self, can_add_children):
        """Sets the can_add_children of this DriveCapabilities.

        Output only. Whether the current user can add children to folders in this shared drive.

        :param can_add_children: The can_add_children of this DriveCapabilities.
        :type can_add_children: bool
        """

        self._can_add_children = can_add_children

    @property
    def can_change_copy_requires_writer_permission_restriction(self):
        """Gets the can_change_copy_requires_writer_permission_restriction of this DriveCapabilities.

        Output only. Whether the current user can change the `copyRequiresWriterPermission` restriction of this shared drive.

        :return: The can_change_copy_requires_writer_permission_restriction of this DriveCapabilities.
        :rtype: bool
        """
        return self._can_change_copy_requires_writer_permission_restriction

    @can_change_copy_requires_writer_permission_restriction.setter
    def can_change_copy_requires_writer_permission_restriction(self, can_change_copy_requires_writer_permission_restriction):
        """Sets the can_change_copy_requires_writer_permission_restriction of this DriveCapabilities.

        Output only. Whether the current user can change the `copyRequiresWriterPermission` restriction of this shared drive.

        :param can_change_copy_requires_writer_permission_restriction: The can_change_copy_requires_writer_permission_restriction of this DriveCapabilities.
        :type can_change_copy_requires_writer_permission_restriction: bool
        """

        self._can_change_copy_requires_writer_permission_restriction = can_change_copy_requires_writer_permission_restriction

    @property
    def can_change_domain_users_only_restriction(self):
        """Gets the can_change_domain_users_only_restriction of this DriveCapabilities.

        Output only. Whether the current user can change the `domainUsersOnly` restriction of this shared drive.

        :return: The can_change_domain_users_only_restriction of this DriveCapabilities.
        :rtype: bool
        """
        return self._can_change_domain_users_only_restriction

    @can_change_domain_users_only_restriction.setter
    def can_change_domain_users_only_restriction(self, can_change_domain_users_only_restriction):
        """Sets the can_change_domain_users_only_restriction of this DriveCapabilities.

        Output only. Whether the current user can change the `domainUsersOnly` restriction of this shared drive.

        :param can_change_domain_users_only_restriction: The can_change_domain_users_only_restriction of this DriveCapabilities.
        :type can_change_domain_users_only_restriction: bool
        """

        self._can_change_domain_users_only_restriction = can_change_domain_users_only_restriction

    @property
    def can_change_drive_background(self):
        """Gets the can_change_drive_background of this DriveCapabilities.

        Output only. Whether the current user can change the background of this shared drive.

        :return: The can_change_drive_background of this DriveCapabilities.
        :rtype: bool
        """
        return self._can_change_drive_background

    @can_change_drive_background.setter
    def can_change_drive_background(self, can_change_drive_background):
        """Sets the can_change_drive_background of this DriveCapabilities.

        Output only. Whether the current user can change the background of this shared drive.

        :param can_change_drive_background: The can_change_drive_background of this DriveCapabilities.
        :type can_change_drive_background: bool
        """

        self._can_change_drive_background = can_change_drive_background

    @property
    def can_change_drive_members_only_restriction(self):
        """Gets the can_change_drive_members_only_restriction of this DriveCapabilities.

        Output only. Whether the current user can change the `driveMembersOnly` restriction of this shared drive.

        :return: The can_change_drive_members_only_restriction of this DriveCapabilities.
        :rtype: bool
        """
        return self._can_change_drive_members_only_restriction

    @can_change_drive_members_only_restriction.setter
    def can_change_drive_members_only_restriction(self, can_change_drive_members_only_restriction):
        """Sets the can_change_drive_members_only_restriction of this DriveCapabilities.

        Output only. Whether the current user can change the `driveMembersOnly` restriction of this shared drive.

        :param can_change_drive_members_only_restriction: The can_change_drive_members_only_restriction of this DriveCapabilities.
        :type can_change_drive_members_only_restriction: bool
        """

        self._can_change_drive_members_only_restriction = can_change_drive_members_only_restriction

    @property
    def can_change_sharing_folders_requires_organizer_permission_restriction(self):
        """Gets the can_change_sharing_folders_requires_organizer_permission_restriction of this DriveCapabilities.

        Output only. Whether the current user can change the `sharingFoldersRequiresOrganizerPermission` restriction of this shared drive.

        :return: The can_change_sharing_folders_requires_organizer_permission_restriction of this DriveCapabilities.
        :rtype: bool
        """
        return self._can_change_sharing_folders_requires_organizer_permission_restriction

    @can_change_sharing_folders_requires_organizer_permission_restriction.setter
    def can_change_sharing_folders_requires_organizer_permission_restriction(self, can_change_sharing_folders_requires_organizer_permission_restriction):
        """Sets the can_change_sharing_folders_requires_organizer_permission_restriction of this DriveCapabilities.

        Output only. Whether the current user can change the `sharingFoldersRequiresOrganizerPermission` restriction of this shared drive.

        :param can_change_sharing_folders_requires_organizer_permission_restriction: The can_change_sharing_folders_requires_organizer_permission_restriction of this DriveCapabilities.
        :type can_change_sharing_folders_requires_organizer_permission_restriction: bool
        """

        self._can_change_sharing_folders_requires_organizer_permission_restriction = can_change_sharing_folders_requires_organizer_permission_restriction

    @property
    def can_comment(self):
        """Gets the can_comment of this DriveCapabilities.

        Output only. Whether the current user can comment on files in this shared drive.

        :return: The can_comment of this DriveCapabilities.
        :rtype: bool
        """
        return self._can_comment

    @can_comment.setter
    def can_comment(self, can_comment):
        """Sets the can_comment of this DriveCapabilities.

        Output only. Whether the current user can comment on files in this shared drive.

        :param can_comment: The can_comment of this DriveCapabilities.
        :type can_comment: bool
        """

        self._can_comment = can_comment

    @property
    def can_copy(self):
        """Gets the can_copy of this DriveCapabilities.

        Output only. Whether the current user can copy files in this shared drive.

        :return: The can_copy of this DriveCapabilities.
        :rtype: bool
        """
        return self._can_copy

    @can_copy.setter
    def can_copy(self, can_copy):
        """Sets the can_copy of this DriveCapabilities.

        Output only. Whether the current user can copy files in this shared drive.

        :param can_copy: The can_copy of this DriveCapabilities.
        :type can_copy: bool
        """

        self._can_copy = can_copy

    @property
    def can_delete_children(self):
        """Gets the can_delete_children of this DriveCapabilities.

        Output only. Whether the current user can delete children from folders in this shared drive.

        :return: The can_delete_children of this DriveCapabilities.
        :rtype: bool
        """
        return self._can_delete_children

    @can_delete_children.setter
    def can_delete_children(self, can_delete_children):
        """Sets the can_delete_children of this DriveCapabilities.

        Output only. Whether the current user can delete children from folders in this shared drive.

        :param can_delete_children: The can_delete_children of this DriveCapabilities.
        :type can_delete_children: bool
        """

        self._can_delete_children = can_delete_children

    @property
    def can_delete_drive(self):
        """Gets the can_delete_drive of this DriveCapabilities.

        Output only. Whether the current user can delete this shared drive. Attempting to delete the shared drive may still fail if there are untrashed items inside the shared drive.

        :return: The can_delete_drive of this DriveCapabilities.
        :rtype: bool
        """
        return self._can_delete_drive

    @can_delete_drive.setter
    def can_delete_drive(self, can_delete_drive):
        """Sets the can_delete_drive of this DriveCapabilities.

        Output only. Whether the current user can delete this shared drive. Attempting to delete the shared drive may still fail if there are untrashed items inside the shared drive.

        :param can_delete_drive: The can_delete_drive of this DriveCapabilities.
        :type can_delete_drive: bool
        """

        self._can_delete_drive = can_delete_drive

    @property
    def can_download(self):
        """Gets the can_download of this DriveCapabilities.

        Output only. Whether the current user can download files in this shared drive.

        :return: The can_download of this DriveCapabilities.
        :rtype: bool
        """
        return self._can_download

    @can_download.setter
    def can_download(self, can_download):
        """Sets the can_download of this DriveCapabilities.

        Output only. Whether the current user can download files in this shared drive.

        :param can_download: The can_download of this DriveCapabilities.
        :type can_download: bool
        """

        self._can_download = can_download

    @property
    def can_edit(self):
        """Gets the can_edit of this DriveCapabilities.

        Output only. Whether the current user can edit files in this shared drive

        :return: The can_edit of this DriveCapabilities.
        :rtype: bool
        """
        return self._can_edit

    @can_edit.setter
    def can_edit(self, can_edit):
        """Sets the can_edit of this DriveCapabilities.

        Output only. Whether the current user can edit files in this shared drive

        :param can_edit: The can_edit of this DriveCapabilities.
        :type can_edit: bool
        """

        self._can_edit = can_edit

    @property
    def can_list_children(self):
        """Gets the can_list_children of this DriveCapabilities.

        Output only. Whether the current user can list the children of folders in this shared drive.

        :return: The can_list_children of this DriveCapabilities.
        :rtype: bool
        """
        return self._can_list_children

    @can_list_children.setter
    def can_list_children(self, can_list_children):
        """Sets the can_list_children of this DriveCapabilities.

        Output only. Whether the current user can list the children of folders in this shared drive.

        :param can_list_children: The can_list_children of this DriveCapabilities.
        :type can_list_children: bool
        """

        self._can_list_children = can_list_children

    @property
    def can_manage_members(self):
        """Gets the can_manage_members of this DriveCapabilities.

        Output only. Whether the current user can add members to this shared drive or remove them or change their role.

        :return: The can_manage_members of this DriveCapabilities.
        :rtype: bool
        """
        return self._can_manage_members

    @can_manage_members.setter
    def can_manage_members(self, can_manage_members):
        """Sets the can_manage_members of this DriveCapabilities.

        Output only. Whether the current user can add members to this shared drive or remove them or change their role.

        :param can_manage_members: The can_manage_members of this DriveCapabilities.
        :type can_manage_members: bool
        """

        self._can_manage_members = can_manage_members

    @property
    def can_read_revisions(self):
        """Gets the can_read_revisions of this DriveCapabilities.

        Output only. Whether the current user can read the revisions resource of files in this shared drive.

        :return: The can_read_revisions of this DriveCapabilities.
        :rtype: bool
        """
        return self._can_read_revisions

    @can_read_revisions.setter
    def can_read_revisions(self, can_read_revisions):
        """Sets the can_read_revisions of this DriveCapabilities.

        Output only. Whether the current user can read the revisions resource of files in this shared drive.

        :param can_read_revisions: The can_read_revisions of this DriveCapabilities.
        :type can_read_revisions: bool
        """

        self._can_read_revisions = can_read_revisions

    @property
    def can_rename(self):
        """Gets the can_rename of this DriveCapabilities.

        Output only. Whether the current user can rename files or folders in this shared drive.

        :return: The can_rename of this DriveCapabilities.
        :rtype: bool
        """
        return self._can_rename

    @can_rename.setter
    def can_rename(self, can_rename):
        """Sets the can_rename of this DriveCapabilities.

        Output only. Whether the current user can rename files or folders in this shared drive.

        :param can_rename: The can_rename of this DriveCapabilities.
        :type can_rename: bool
        """

        self._can_rename = can_rename

    @property
    def can_rename_drive(self):
        """Gets the can_rename_drive of this DriveCapabilities.

        Output only. Whether the current user can rename this shared drive.

        :return: The can_rename_drive of this DriveCapabilities.
        :rtype: bool
        """
        return self._can_rename_drive

    @can_rename_drive.setter
    def can_rename_drive(self, can_rename_drive):
        """Sets the can_rename_drive of this DriveCapabilities.

        Output only. Whether the current user can rename this shared drive.

        :param can_rename_drive: The can_rename_drive of this DriveCapabilities.
        :type can_rename_drive: bool
        """

        self._can_rename_drive = can_rename_drive

    @property
    def can_reset_drive_restrictions(self):
        """Gets the can_reset_drive_restrictions of this DriveCapabilities.

        Output only. Whether the current user can reset the shared drive restrictions to defaults.

        :return: The can_reset_drive_restrictions of this DriveCapabilities.
        :rtype: bool
        """
        return self._can_reset_drive_restrictions

    @can_reset_drive_restrictions.setter
    def can_reset_drive_restrictions(self, can_reset_drive_restrictions):
        """Sets the can_reset_drive_restrictions of this DriveCapabilities.

        Output only. Whether the current user can reset the shared drive restrictions to defaults.

        :param can_reset_drive_restrictions: The can_reset_drive_restrictions of this DriveCapabilities.
        :type can_reset_drive_restrictions: bool
        """

        self._can_reset_drive_restrictions = can_reset_drive_restrictions

    @property
    def can_share(self):
        """Gets the can_share of this DriveCapabilities.

        Output only. Whether the current user can share files or folders in this shared drive.

        :return: The can_share of this DriveCapabilities.
        :rtype: bool
        """
        return self._can_share

    @can_share.setter
    def can_share(self, can_share):
        """Sets the can_share of this DriveCapabilities.

        Output only. Whether the current user can share files or folders in this shared drive.

        :param can_share: The can_share of this DriveCapabilities.
        :type can_share: bool
        """

        self._can_share = can_share

    @property
    def can_trash_children(self):
        """Gets the can_trash_children of this DriveCapabilities.

        Output only. Whether the current user can trash children from folders in this shared drive.

        :return: The can_trash_children of this DriveCapabilities.
        :rtype: bool
        """
        return self._can_trash_children

    @can_trash_children.setter
    def can_trash_children(self, can_trash_children):
        """Sets the can_trash_children of this DriveCapabilities.

        Output only. Whether the current user can trash children from folders in this shared drive.

        :param can_trash_children: The can_trash_children of this DriveCapabilities.
        :type can_trash_children: bool
        """

        self._can_trash_children = can_trash_children
