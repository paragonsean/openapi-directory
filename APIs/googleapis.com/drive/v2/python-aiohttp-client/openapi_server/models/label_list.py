# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.label import Label
from openapi_server import util


class LabelList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, items: List[Label]=None, kind: str='drive#labelList', next_page_token: str=None):
        """LabelList - a model defined in OpenAPI

        :param items: The items of this LabelList.
        :param kind: The kind of this LabelList.
        :param next_page_token: The next_page_token of this LabelList.
        """
        self.openapi_types = {
            'items': List[Label],
            'kind': str,
            'next_page_token': str
        }

        self.attribute_map = {
            'items': 'items',
            'kind': 'kind',
            'next_page_token': 'nextPageToken'
        }

        self._items = items
        self._kind = kind
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LabelList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LabelList of this LabelList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def items(self):
        """Gets the items of this LabelList.

        The list of labels.

        :return: The items of this LabelList.
        :rtype: List[Label]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this LabelList.

        The list of labels.

        :param items: The items of this LabelList.
        :type items: List[Label]
        """

        self._items = items

    @property
    def kind(self):
        """Gets the kind of this LabelList.

        This is always `drive#labelList`

        :return: The kind of this LabelList.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this LabelList.

        This is always `drive#labelList`

        :param kind: The kind of this LabelList.
        :type kind: str
        """

        self._kind = kind

    @property
    def next_page_token(self):
        """Gets the next_page_token of this LabelList.

        The page token for the next page of labels. This field will be absent if the end of the list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.

        :return: The next_page_token of this LabelList.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this LabelList.

        The page token for the next page of labels. This field will be absent if the end of the list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.

        :param next_page_token: The next_page_token of this LabelList.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
