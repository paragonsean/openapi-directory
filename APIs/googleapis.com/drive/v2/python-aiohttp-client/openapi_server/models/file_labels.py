# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FileLabels(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hidden: bool=None, modified: bool=None, restricted: bool=None, starred: bool=None, trashed: bool=None, viewed: bool=None):
        """FileLabels - a model defined in OpenAPI

        :param hidden: The hidden of this FileLabels.
        :param modified: The modified of this FileLabels.
        :param restricted: The restricted of this FileLabels.
        :param starred: The starred of this FileLabels.
        :param trashed: The trashed of this FileLabels.
        :param viewed: The viewed of this FileLabels.
        """
        self.openapi_types = {
            'hidden': bool,
            'modified': bool,
            'restricted': bool,
            'starred': bool,
            'trashed': bool,
            'viewed': bool
        }

        self.attribute_map = {
            'hidden': 'hidden',
            'modified': 'modified',
            'restricted': 'restricted',
            'starred': 'starred',
            'trashed': 'trashed',
            'viewed': 'viewed'
        }

        self._hidden = hidden
        self._modified = modified
        self._restricted = restricted
        self._starred = starred
        self._trashed = trashed
        self._viewed = viewed

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileLabels':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The File_labels of this FileLabels.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hidden(self):
        """Gets the hidden of this FileLabels.

        Output only. Deprecated.

        :return: The hidden of this FileLabels.
        :rtype: bool
        """
        return self._hidden

    @hidden.setter
    def hidden(self, hidden):
        """Sets the hidden of this FileLabels.

        Output only. Deprecated.

        :param hidden: The hidden of this FileLabels.
        :type hidden: bool
        """

        self._hidden = hidden

    @property
    def modified(self):
        """Gets the modified of this FileLabels.

        Output only. Whether the file has been modified by this user.

        :return: The modified of this FileLabels.
        :rtype: bool
        """
        return self._modified

    @modified.setter
    def modified(self, modified):
        """Sets the modified of this FileLabels.

        Output only. Whether the file has been modified by this user.

        :param modified: The modified of this FileLabels.
        :type modified: bool
        """

        self._modified = modified

    @property
    def restricted(self):
        """Gets the restricted of this FileLabels.

        Output only. Deprecated: Use `copyRequiresWriterPermission` instead.

        :return: The restricted of this FileLabels.
        :rtype: bool
        """
        return self._restricted

    @restricted.setter
    def restricted(self, restricted):
        """Sets the restricted of this FileLabels.

        Output only. Deprecated: Use `copyRequiresWriterPermission` instead.

        :param restricted: The restricted of this FileLabels.
        :type restricted: bool
        """

        self._restricted = restricted

    @property
    def starred(self):
        """Gets the starred of this FileLabels.

        Whether this file is starred by the user.

        :return: The starred of this FileLabels.
        :rtype: bool
        """
        return self._starred

    @starred.setter
    def starred(self, starred):
        """Sets the starred of this FileLabels.

        Whether this file is starred by the user.

        :param starred: The starred of this FileLabels.
        :type starred: bool
        """

        self._starred = starred

    @property
    def trashed(self):
        """Gets the trashed of this FileLabels.

        Whether this file has been trashed. This label applies to all users accessing the file; however, only owners are allowed to see and untrash files.

        :return: The trashed of this FileLabels.
        :rtype: bool
        """
        return self._trashed

    @trashed.setter
    def trashed(self, trashed):
        """Sets the trashed of this FileLabels.

        Whether this file has been trashed. This label applies to all users accessing the file; however, only owners are allowed to see and untrash files.

        :param trashed: The trashed of this FileLabels.
        :type trashed: bool
        """

        self._trashed = trashed

    @property
    def viewed(self):
        """Gets the viewed of this FileLabels.

        Whether this file has been viewed by this user.

        :return: The viewed of this FileLabels.
        :rtype: bool
        """
        return self._viewed

    @viewed.setter
    def viewed(self, viewed):
        """Sets the viewed of this FileLabels.

        Whether this file has been viewed by this user.

        :param viewed: The viewed of this FileLabels.
        :type viewed: bool
        """

        self._viewed = viewed
