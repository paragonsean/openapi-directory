# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.parent_reference import ParentReference
from openapi_server import util


class ParentList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, etag: str=None, items: List[ParentReference]=None, kind: str='drive#parentList', self_link: str=None):
        """ParentList - a model defined in OpenAPI

        :param etag: The etag of this ParentList.
        :param items: The items of this ParentList.
        :param kind: The kind of this ParentList.
        :param self_link: The self_link of this ParentList.
        """
        self.openapi_types = {
            'etag': str,
            'items': List[ParentReference],
            'kind': str,
            'self_link': str
        }

        self.attribute_map = {
            'etag': 'etag',
            'items': 'items',
            'kind': 'kind',
            'self_link': 'selfLink'
        }

        self._etag = etag
        self._items = items
        self._kind = kind
        self._self_link = self_link

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ParentList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ParentList of this ParentList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def etag(self):
        """Gets the etag of this ParentList.

        The ETag of the list.

        :return: The etag of this ParentList.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this ParentList.

        The ETag of the list.

        :param etag: The etag of this ParentList.
        :type etag: str
        """

        self._etag = etag

    @property
    def items(self):
        """Gets the items of this ParentList.

        The list of parents.

        :return: The items of this ParentList.
        :rtype: List[ParentReference]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this ParentList.

        The list of parents.

        :param items: The items of this ParentList.
        :type items: List[ParentReference]
        """

        self._items = items

    @property
    def kind(self):
        """Gets the kind of this ParentList.

        This is always `drive#parentList`.

        :return: The kind of this ParentList.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ParentList.

        This is always `drive#parentList`.

        :param kind: The kind of this ParentList.
        :type kind: str
        """

        self._kind = kind

    @property
    def self_link(self):
        """Gets the self_link of this ParentList.

        A link back to this list.

        :return: The self_link of this ParentList.
        :rtype: str
        """
        return self._self_link

    @self_link.setter
    def self_link(self, self_link):
        """Sets the self_link of this ParentList.

        A link back to this list.

        :param self_link: The self_link of this ParentList.
        :type self_link: str
        """

        self._self_link = self_link
