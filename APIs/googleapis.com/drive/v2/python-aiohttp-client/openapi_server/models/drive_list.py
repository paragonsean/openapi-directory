# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.drive import Drive
from openapi_server import util


class DriveList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, items: List[Drive]=None, kind: str='drive#driveList', next_page_token: str=None):
        """DriveList - a model defined in OpenAPI

        :param items: The items of this DriveList.
        :param kind: The kind of this DriveList.
        :param next_page_token: The next_page_token of this DriveList.
        """
        self.openapi_types = {
            'items': List[Drive],
            'kind': str,
            'next_page_token': str
        }

        self.attribute_map = {
            'items': 'items',
            'kind': 'kind',
            'next_page_token': 'nextPageToken'
        }

        self._items = items
        self._kind = kind
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DriveList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DriveList of this DriveList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def items(self):
        """Gets the items of this DriveList.

        The list of shared drives. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.

        :return: The items of this DriveList.
        :rtype: List[Drive]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this DriveList.

        The list of shared drives. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.

        :param items: The items of this DriveList.
        :type items: List[Drive]
        """

        self._items = items

    @property
    def kind(self):
        """Gets the kind of this DriveList.

        This is always `drive#driveList`

        :return: The kind of this DriveList.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this DriveList.

        This is always `drive#driveList`

        :param kind: The kind of this DriveList.
        :type kind: str
        """

        self._kind = kind

    @property
    def next_page_token(self):
        """Gets the next_page_token of this DriveList.

        The page token for the next page of shared drives. This will be absent if the end of the list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.

        :return: The next_page_token of this DriveList.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this DriveList.

        The page token for the next page of shared drives. This will be absent if the end of the list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.

        :param next_page_token: The next_page_token of this DriveList.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
