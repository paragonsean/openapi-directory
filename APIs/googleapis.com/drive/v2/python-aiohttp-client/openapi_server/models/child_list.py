# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.child_reference import ChildReference
from openapi_server import util


class ChildList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, etag: str=None, items: List[ChildReference]=None, kind: str='drive#childList', next_link: str=None, next_page_token: str=None, self_link: str=None):
        """ChildList - a model defined in OpenAPI

        :param etag: The etag of this ChildList.
        :param items: The items of this ChildList.
        :param kind: The kind of this ChildList.
        :param next_link: The next_link of this ChildList.
        :param next_page_token: The next_page_token of this ChildList.
        :param self_link: The self_link of this ChildList.
        """
        self.openapi_types = {
            'etag': str,
            'items': List[ChildReference],
            'kind': str,
            'next_link': str,
            'next_page_token': str,
            'self_link': str
        }

        self.attribute_map = {
            'etag': 'etag',
            'items': 'items',
            'kind': 'kind',
            'next_link': 'nextLink',
            'next_page_token': 'nextPageToken',
            'self_link': 'selfLink'
        }

        self._etag = etag
        self._items = items
        self._kind = kind
        self._next_link = next_link
        self._next_page_token = next_page_token
        self._self_link = self_link

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChildList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChildList of this ChildList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def etag(self):
        """Gets the etag of this ChildList.

        The ETag of the list.

        :return: The etag of this ChildList.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this ChildList.

        The ETag of the list.

        :param etag: The etag of this ChildList.
        :type etag: str
        """

        self._etag = etag

    @property
    def items(self):
        """Gets the items of this ChildList.

        The list of children. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.

        :return: The items of this ChildList.
        :rtype: List[ChildReference]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this ChildList.

        The list of children. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.

        :param items: The items of this ChildList.
        :type items: List[ChildReference]
        """

        self._items = items

    @property
    def kind(self):
        """Gets the kind of this ChildList.

        This is always `drive#childList`.

        :return: The kind of this ChildList.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ChildList.

        This is always `drive#childList`.

        :param kind: The kind of this ChildList.
        :type kind: str
        """

        self._kind = kind

    @property
    def next_link(self):
        """Gets the next_link of this ChildList.

        A link to the next page of children.

        :return: The next_link of this ChildList.
        :rtype: str
        """
        return self._next_link

    @next_link.setter
    def next_link(self, next_link):
        """Sets the next_link of this ChildList.

        A link to the next page of children.

        :param next_link: The next_link of this ChildList.
        :type next_link: str
        """

        self._next_link = next_link

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ChildList.

        The page token for the next page of children. This will be absent if the end of the children list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.

        :return: The next_page_token of this ChildList.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ChildList.

        The page token for the next page of children. This will be absent if the end of the children list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.

        :param next_page_token: The next_page_token of this ChildList.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def self_link(self):
        """Gets the self_link of this ChildList.

        A link back to this list.

        :return: The self_link of this ChildList.
        :rtype: str
        """
        return self._self_link

    @self_link.setter
    def self_link(self, self_link):
        """Sets the self_link of this ChildList.

        A link back to this list.

        :param self_link: The self_link of this ChildList.
        :type self_link: str
        """

        self._self_link = self_link
