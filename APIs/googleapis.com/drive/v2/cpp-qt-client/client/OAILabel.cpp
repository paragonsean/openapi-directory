/**
 * Google Drive API
 * The Google Drive API allows clients to access resources from Google Drive.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILabel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILabel::OAILabel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILabel::OAILabel() {
    this->initializeModel();
}

OAILabel::~OAILabel() {}

void OAILabel::initializeModel() {

    m_fields_isSet = false;
    m_fields_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_revision_id_isSet = false;
    m_revision_id_isValid = false;
}

void OAILabel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILabel::fromJsonObject(QJsonObject json) {

    m_fields_isValid = ::OpenAPI::fromJsonValue(m_fields, json[QString("fields")]);
    m_fields_isSet = !json[QString("fields")].isNull() && m_fields_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_revision_id_isValid = ::OpenAPI::fromJsonValue(m_revision_id, json[QString("revisionId")]);
    m_revision_id_isSet = !json[QString("revisionId")].isNull() && m_revision_id_isValid;
}

QString OAILabel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILabel::asJsonObject() const {
    QJsonObject obj;
    if (m_fields.size() > 0) {
        obj.insert(QString("fields"), ::OpenAPI::toJsonValue(m_fields));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_revision_id_isSet) {
        obj.insert(QString("revisionId"), ::OpenAPI::toJsonValue(m_revision_id));
    }
    return obj;
}

QMap<QString, OAILabelField> OAILabel::getFields() const {
    return m_fields;
}
void OAILabel::setFields(const QMap<QString, OAILabelField> &fields) {
    m_fields = fields;
    m_fields_isSet = true;
}

bool OAILabel::is_fields_Set() const{
    return m_fields_isSet;
}

bool OAILabel::is_fields_Valid() const{
    return m_fields_isValid;
}

QString OAILabel::getId() const {
    return m_id;
}
void OAILabel::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAILabel::is_id_Set() const{
    return m_id_isSet;
}

bool OAILabel::is_id_Valid() const{
    return m_id_isValid;
}

QString OAILabel::getKind() const {
    return m_kind;
}
void OAILabel::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAILabel::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAILabel::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAILabel::getRevisionId() const {
    return m_revision_id;
}
void OAILabel::setRevisionId(const QString &revision_id) {
    m_revision_id = revision_id;
    m_revision_id_isSet = true;
}

bool OAILabel::is_revision_id_Set() const{
    return m_revision_id_isSet;
}

bool OAILabel::is_revision_id_Valid() const{
    return m_revision_id_isValid;
}

bool OAILabel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_revision_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILabel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
