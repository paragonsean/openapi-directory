/**
 * Google Drive API
 * The Google Drive API allows clients to access resources from Google Drive.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContentRestriction.h
 *
 * A restriction for accessing the content of the file.
 */

#ifndef OAIContentRestriction_H
#define OAIContentRestriction_H

#include <QJsonObject>

#include "OAIUser.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUser;

class OAIContentRestriction : public OAIObject {
public:
    OAIContentRestriction();
    OAIContentRestriction(QString json);
    ~OAIContentRestriction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isOwnerRestricted() const;
    void setOwnerRestricted(const bool &owner_restricted);
    bool is_owner_restricted_Set() const;
    bool is_owner_restricted_Valid() const;

    bool isReadOnly() const;
    void setReadOnly(const bool &read_only);
    bool is_read_only_Set() const;
    bool is_read_only_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    OAIUser getRestrictingUser() const;
    void setRestrictingUser(const OAIUser &restricting_user);
    bool is_restricting_user_Set() const;
    bool is_restricting_user_Valid() const;

    QDateTime getRestrictionDate() const;
    void setRestrictionDate(const QDateTime &restriction_date);
    bool is_restriction_date_Set() const;
    bool is_restriction_date_Valid() const;

    bool isSystemRestricted() const;
    void setSystemRestricted(const bool &system_restricted);
    bool is_system_restricted_Set() const;
    bool is_system_restricted_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_owner_restricted;
    bool m_owner_restricted_isSet;
    bool m_owner_restricted_isValid;

    bool m_read_only;
    bool m_read_only_isSet;
    bool m_read_only_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    OAIUser m_restricting_user;
    bool m_restricting_user_isSet;
    bool m_restricting_user_isValid;

    QDateTime m_restriction_date;
    bool m_restriction_date_isSet;
    bool m_restriction_date_isValid;

    bool m_system_restricted;
    bool m_system_restricted_isSet;
    bool m_system_restricted_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContentRestriction)

#endif // OAIContentRestriction_H
