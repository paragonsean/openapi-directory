/**
 * Google Drive API
 * The Google Drive API allows clients to access resources from Google Drive.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPermission.h
 *
 * A permission for a file. A permission grants a user, group, domain, or the world access to a file or a folder hierarchy. Some resource methods (such as &#x60;permissions.update&#x60;) require a &#x60;permissionId&#x60;. Use the &#x60;permissions.list&#x60; method to retrieve the ID for a file, folder, or shared drive.
 */

#ifndef OAIPermission_H
#define OAIPermission_H

#include <QJsonObject>

#include "OAIPermission_permissionDetails_inner.h"
#include "OAIPermission_teamDrivePermissionDetails_inner.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPermission_permissionDetails_inner;
class OAIPermission_teamDrivePermissionDetails_inner;

class OAIPermission : public OAIObject {
public:
    OAIPermission();
    OAIPermission(QString json);
    ~OAIPermission() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAdditionalRoles() const;
    void setAdditionalRoles(const QList<QString> &additional_roles);
    bool is_additional_roles_Set() const;
    bool is_additional_roles_Valid() const;

    Q_DECL_DEPRECATED QString getAuthKey() const;
    Q_DECL_DEPRECATED void setAuthKey(const QString &auth_key);
    Q_DECL_DEPRECATED bool is_auth_key_Set() const;
    Q_DECL_DEPRECATED bool is_auth_key_Valid() const;

    bool isDeleted() const;
    void setDeleted(const bool &deleted);
    bool is_deleted_Set() const;
    bool is_deleted_Valid() const;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    QString getEmailAddress() const;
    void setEmailAddress(const QString &email_address);
    bool is_email_address_Set() const;
    bool is_email_address_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QDateTime getExpirationDate() const;
    void setExpirationDate(const QDateTime &expiration_date);
    bool is_expiration_date_Set() const;
    bool is_expiration_date_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isPendingOwner() const;
    void setPendingOwner(const bool &pending_owner);
    bool is_pending_owner_Set() const;
    bool is_pending_owner_Valid() const;

    QList<OAIPermission_permissionDetails_inner> getPermissionDetails() const;
    void setPermissionDetails(const QList<OAIPermission_permissionDetails_inner> &permission_details);
    bool is_permission_details_Set() const;
    bool is_permission_details_Valid() const;

    QString getPhotoLink() const;
    void setPhotoLink(const QString &photo_link);
    bool is_photo_link_Set() const;
    bool is_photo_link_Valid() const;

    QString getRole() const;
    void setRole(const QString &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    QString getSelfLink() const;
    void setSelfLink(const QString &self_link);
    bool is_self_link_Set() const;
    bool is_self_link_Valid() const;

    Q_DECL_DEPRECATED QList<OAIPermission_teamDrivePermissionDetails_inner> getTeamDrivePermissionDetails() const;
    Q_DECL_DEPRECATED void setTeamDrivePermissionDetails(const QList<OAIPermission_teamDrivePermissionDetails_inner> &team_drive_permission_details);
    Q_DECL_DEPRECATED bool is_team_drive_permission_details_Set() const;
    Q_DECL_DEPRECATED bool is_team_drive_permission_details_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getValue() const;
    void setValue(const QString &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    QString getView() const;
    void setView(const QString &view);
    bool is_view_Set() const;
    bool is_view_Valid() const;

    bool isWithLink() const;
    void setWithLink(const bool &with_link);
    bool is_with_link_Set() const;
    bool is_with_link_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_additional_roles;
    bool m_additional_roles_isSet;
    bool m_additional_roles_isValid;

    QString m_auth_key;
    bool m_auth_key_isSet;
    bool m_auth_key_isValid;

    bool m_deleted;
    bool m_deleted_isSet;
    bool m_deleted_isValid;

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    QString m_email_address;
    bool m_email_address_isSet;
    bool m_email_address_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QDateTime m_expiration_date;
    bool m_expiration_date_isSet;
    bool m_expiration_date_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_pending_owner;
    bool m_pending_owner_isSet;
    bool m_pending_owner_isValid;

    QList<OAIPermission_permissionDetails_inner> m_permission_details;
    bool m_permission_details_isSet;
    bool m_permission_details_isValid;

    QString m_photo_link;
    bool m_photo_link_isSet;
    bool m_photo_link_isValid;

    QString m_role;
    bool m_role_isSet;
    bool m_role_isValid;

    QString m_self_link;
    bool m_self_link_isSet;
    bool m_self_link_isValid;

    QList<OAIPermission_teamDrivePermissionDetails_inner> m_team_drive_permission_details;
    bool m_team_drive_permission_details_isSet;
    bool m_team_drive_permission_details_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_value;
    bool m_value_isSet;
    bool m_value_isValid;

    QString m_view;
    bool m_view_isSet;
    bool m_view_isValid;

    bool m_with_link;
    bool m_with_link_isSet;
    bool m_with_link_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPermission)

#endif // OAIPermission_H
