/**
 * Google Drive API
 * The Google Drive API allows clients to access resources from Google Drive.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleDriveApi);
  }
}(this, function(expect, GoogleDriveApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleDriveApi.FileImageMediaMetadata();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FileImageMediaMetadata', function() {
    it('should create an instance of FileImageMediaMetadata', function() {
      // uncomment below and update the code to test FileImageMediaMetadata
      //var instance = new GoogleDriveApi.FileImageMediaMetadata();
      //expect(instance).to.be.a(GoogleDriveApi.FileImageMediaMetadata);
    });

    it('should have the property aperture (base name: "aperture")', function() {
      // uncomment below and update the code to test the property aperture
      //var instance = new GoogleDriveApi.FileImageMediaMetadata();
      //expect(instance).to.be();
    });

    it('should have the property cameraMake (base name: "cameraMake")', function() {
      // uncomment below and update the code to test the property cameraMake
      //var instance = new GoogleDriveApi.FileImageMediaMetadata();
      //expect(instance).to.be();
    });

    it('should have the property cameraModel (base name: "cameraModel")', function() {
      // uncomment below and update the code to test the property cameraModel
      //var instance = new GoogleDriveApi.FileImageMediaMetadata();
      //expect(instance).to.be();
    });

    it('should have the property colorSpace (base name: "colorSpace")', function() {
      // uncomment below and update the code to test the property colorSpace
      //var instance = new GoogleDriveApi.FileImageMediaMetadata();
      //expect(instance).to.be();
    });

    it('should have the property date (base name: "date")', function() {
      // uncomment below and update the code to test the property date
      //var instance = new GoogleDriveApi.FileImageMediaMetadata();
      //expect(instance).to.be();
    });

    it('should have the property exposureBias (base name: "exposureBias")', function() {
      // uncomment below and update the code to test the property exposureBias
      //var instance = new GoogleDriveApi.FileImageMediaMetadata();
      //expect(instance).to.be();
    });

    it('should have the property exposureMode (base name: "exposureMode")', function() {
      // uncomment below and update the code to test the property exposureMode
      //var instance = new GoogleDriveApi.FileImageMediaMetadata();
      //expect(instance).to.be();
    });

    it('should have the property exposureTime (base name: "exposureTime")', function() {
      // uncomment below and update the code to test the property exposureTime
      //var instance = new GoogleDriveApi.FileImageMediaMetadata();
      //expect(instance).to.be();
    });

    it('should have the property flashUsed (base name: "flashUsed")', function() {
      // uncomment below and update the code to test the property flashUsed
      //var instance = new GoogleDriveApi.FileImageMediaMetadata();
      //expect(instance).to.be();
    });

    it('should have the property focalLength (base name: "focalLength")', function() {
      // uncomment below and update the code to test the property focalLength
      //var instance = new GoogleDriveApi.FileImageMediaMetadata();
      //expect(instance).to.be();
    });

    it('should have the property height (base name: "height")', function() {
      // uncomment below and update the code to test the property height
      //var instance = new GoogleDriveApi.FileImageMediaMetadata();
      //expect(instance).to.be();
    });

    it('should have the property isoSpeed (base name: "isoSpeed")', function() {
      // uncomment below and update the code to test the property isoSpeed
      //var instance = new GoogleDriveApi.FileImageMediaMetadata();
      //expect(instance).to.be();
    });

    it('should have the property lens (base name: "lens")', function() {
      // uncomment below and update the code to test the property lens
      //var instance = new GoogleDriveApi.FileImageMediaMetadata();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new GoogleDriveApi.FileImageMediaMetadata();
      //expect(instance).to.be();
    });

    it('should have the property maxApertureValue (base name: "maxApertureValue")', function() {
      // uncomment below and update the code to test the property maxApertureValue
      //var instance = new GoogleDriveApi.FileImageMediaMetadata();
      //expect(instance).to.be();
    });

    it('should have the property meteringMode (base name: "meteringMode")', function() {
      // uncomment below and update the code to test the property meteringMode
      //var instance = new GoogleDriveApi.FileImageMediaMetadata();
      //expect(instance).to.be();
    });

    it('should have the property rotation (base name: "rotation")', function() {
      // uncomment below and update the code to test the property rotation
      //var instance = new GoogleDriveApi.FileImageMediaMetadata();
      //expect(instance).to.be();
    });

    it('should have the property sensor (base name: "sensor")', function() {
      // uncomment below and update the code to test the property sensor
      //var instance = new GoogleDriveApi.FileImageMediaMetadata();
      //expect(instance).to.be();
    });

    it('should have the property subjectDistance (base name: "subjectDistance")', function() {
      // uncomment below and update the code to test the property subjectDistance
      //var instance = new GoogleDriveApi.FileImageMediaMetadata();
      //expect(instance).to.be();
    });

    it('should have the property whiteBalance (base name: "whiteBalance")', function() {
      // uncomment below and update the code to test the property whiteBalance
      //var instance = new GoogleDriveApi.FileImageMediaMetadata();
      //expect(instance).to.be();
    });

    it('should have the property width (base name: "width")', function() {
      // uncomment below and update the code to test the property width
      //var instance = new GoogleDriveApi.FileImageMediaMetadata();
      //expect(instance).to.be();
    });

  });

}));
