/**
 * Google Drive API
 * The Google Drive API allows clients to access resources from Google Drive.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleDriveApi);
  }
}(this, function(expect, GoogleDriveApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleDriveApi.File();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('File', function() {
    it('should create an instance of File', function() {
      // uncomment below and update the code to test File
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be.a(GoogleDriveApi.File);
    });

    it('should have the property alternateLink (base name: "alternateLink")', function() {
      // uncomment below and update the code to test the property alternateLink
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property appDataContents (base name: "appDataContents")', function() {
      // uncomment below and update the code to test the property appDataContents
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property canComment (base name: "canComment")', function() {
      // uncomment below and update the code to test the property canComment
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property canReadRevisions (base name: "canReadRevisions")', function() {
      // uncomment below and update the code to test the property canReadRevisions
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property capabilities (base name: "capabilities")', function() {
      // uncomment below and update the code to test the property capabilities
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property contentRestrictions (base name: "contentRestrictions")', function() {
      // uncomment below and update the code to test the property contentRestrictions
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property copyRequiresWriterPermission (base name: "copyRequiresWriterPermission")', function() {
      // uncomment below and update the code to test the property copyRequiresWriterPermission
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property copyable (base name: "copyable")', function() {
      // uncomment below and update the code to test the property copyable
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property createdDate (base name: "createdDate")', function() {
      // uncomment below and update the code to test the property createdDate
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property defaultOpenWithLink (base name: "defaultOpenWithLink")', function() {
      // uncomment below and update the code to test the property defaultOpenWithLink
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property downloadUrl (base name: "downloadUrl")', function() {
      // uncomment below and update the code to test the property downloadUrl
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property driveId (base name: "driveId")', function() {
      // uncomment below and update the code to test the property driveId
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property editable (base name: "editable")', function() {
      // uncomment below and update the code to test the property editable
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property embedLink (base name: "embedLink")', function() {
      // uncomment below and update the code to test the property embedLink
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property etag (base name: "etag")', function() {
      // uncomment below and update the code to test the property etag
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property explicitlyTrashed (base name: "explicitlyTrashed")', function() {
      // uncomment below and update the code to test the property explicitlyTrashed
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property exportLinks (base name: "exportLinks")', function() {
      // uncomment below and update the code to test the property exportLinks
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property fileExtension (base name: "fileExtension")', function() {
      // uncomment below and update the code to test the property fileExtension
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property fileSize (base name: "fileSize")', function() {
      // uncomment below and update the code to test the property fileSize
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property folderColorRgb (base name: "folderColorRgb")', function() {
      // uncomment below and update the code to test the property folderColorRgb
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property fullFileExtension (base name: "fullFileExtension")', function() {
      // uncomment below and update the code to test the property fullFileExtension
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property hasAugmentedPermissions (base name: "hasAugmentedPermissions")', function() {
      // uncomment below and update the code to test the property hasAugmentedPermissions
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property hasThumbnail (base name: "hasThumbnail")', function() {
      // uncomment below and update the code to test the property hasThumbnail
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property headRevisionId (base name: "headRevisionId")', function() {
      // uncomment below and update the code to test the property headRevisionId
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property iconLink (base name: "iconLink")', function() {
      // uncomment below and update the code to test the property iconLink
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property imageMediaMetadata (base name: "imageMediaMetadata")', function() {
      // uncomment below and update the code to test the property imageMediaMetadata
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property indexableText (base name: "indexableText")', function() {
      // uncomment below and update the code to test the property indexableText
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property isAppAuthorized (base name: "isAppAuthorized")', function() {
      // uncomment below and update the code to test the property isAppAuthorized
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property labelInfo (base name: "labelInfo")', function() {
      // uncomment below and update the code to test the property labelInfo
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property lastModifyingUser (base name: "lastModifyingUser")', function() {
      // uncomment below and update the code to test the property lastModifyingUser
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property lastModifyingUserName (base name: "lastModifyingUserName")', function() {
      // uncomment below and update the code to test the property lastModifyingUserName
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property lastViewedByMeDate (base name: "lastViewedByMeDate")', function() {
      // uncomment below and update the code to test the property lastViewedByMeDate
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property linkShareMetadata (base name: "linkShareMetadata")', function() {
      // uncomment below and update the code to test the property linkShareMetadata
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property markedViewedByMeDate (base name: "markedViewedByMeDate")', function() {
      // uncomment below and update the code to test the property markedViewedByMeDate
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property md5Checksum (base name: "md5Checksum")', function() {
      // uncomment below and update the code to test the property md5Checksum
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property mimeType (base name: "mimeType")', function() {
      // uncomment below and update the code to test the property mimeType
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property modifiedByMeDate (base name: "modifiedByMeDate")', function() {
      // uncomment below and update the code to test the property modifiedByMeDate
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property modifiedDate (base name: "modifiedDate")', function() {
      // uncomment below and update the code to test the property modifiedDate
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property openWithLinks (base name: "openWithLinks")', function() {
      // uncomment below and update the code to test the property openWithLinks
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property originalFilename (base name: "originalFilename")', function() {
      // uncomment below and update the code to test the property originalFilename
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property ownedByMe (base name: "ownedByMe")', function() {
      // uncomment below and update the code to test the property ownedByMe
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property ownerNames (base name: "ownerNames")', function() {
      // uncomment below and update the code to test the property ownerNames
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property owners (base name: "owners")', function() {
      // uncomment below and update the code to test the property owners
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property parents (base name: "parents")', function() {
      // uncomment below and update the code to test the property parents
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property permissionIds (base name: "permissionIds")', function() {
      // uncomment below and update the code to test the property permissionIds
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property permissions (base name: "permissions")', function() {
      // uncomment below and update the code to test the property permissions
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property properties (base name: "properties")', function() {
      // uncomment below and update the code to test the property properties
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property quotaBytesUsed (base name: "quotaBytesUsed")', function() {
      // uncomment below and update the code to test the property quotaBytesUsed
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property resourceKey (base name: "resourceKey")', function() {
      // uncomment below and update the code to test the property resourceKey
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property selfLink (base name: "selfLink")', function() {
      // uncomment below and update the code to test the property selfLink
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property sha1Checksum (base name: "sha1Checksum")', function() {
      // uncomment below and update the code to test the property sha1Checksum
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property sha256Checksum (base name: "sha256Checksum")', function() {
      // uncomment below and update the code to test the property sha256Checksum
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property shareable (base name: "shareable")', function() {
      // uncomment below and update the code to test the property shareable
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property shared (base name: "shared")', function() {
      // uncomment below and update the code to test the property shared
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property sharedWithMeDate (base name: "sharedWithMeDate")', function() {
      // uncomment below and update the code to test the property sharedWithMeDate
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property sharingUser (base name: "sharingUser")', function() {
      // uncomment below and update the code to test the property sharingUser
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property shortcutDetails (base name: "shortcutDetails")', function() {
      // uncomment below and update the code to test the property shortcutDetails
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property spaces (base name: "spaces")', function() {
      // uncomment below and update the code to test the property spaces
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property teamDriveId (base name: "teamDriveId")', function() {
      // uncomment below and update the code to test the property teamDriveId
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property thumbnail (base name: "thumbnail")', function() {
      // uncomment below and update the code to test the property thumbnail
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property thumbnailLink (base name: "thumbnailLink")', function() {
      // uncomment below and update the code to test the property thumbnailLink
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property thumbnailVersion (base name: "thumbnailVersion")', function() {
      // uncomment below and update the code to test the property thumbnailVersion
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property trashedDate (base name: "trashedDate")', function() {
      // uncomment below and update the code to test the property trashedDate
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property trashingUser (base name: "trashingUser")', function() {
      // uncomment below and update the code to test the property trashingUser
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property userPermission (base name: "userPermission")', function() {
      // uncomment below and update the code to test the property userPermission
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property videoMediaMetadata (base name: "videoMediaMetadata")', function() {
      // uncomment below and update the code to test the property videoMediaMetadata
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property webContentLink (base name: "webContentLink")', function() {
      // uncomment below and update the code to test the property webContentLink
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property webViewLink (base name: "webViewLink")', function() {
      // uncomment below and update the code to test the property webViewLink
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

    it('should have the property writersCanShare (base name: "writersCanShare")', function() {
      // uncomment below and update the code to test the property writersCanShare
      //var instance = new GoogleDriveApi.File();
      //expect(instance).to.be();
    });

  });

}));
