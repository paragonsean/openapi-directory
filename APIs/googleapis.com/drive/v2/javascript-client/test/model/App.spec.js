/**
 * Google Drive API
 * The Google Drive API allows clients to access resources from Google Drive.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleDriveApi);
  }
}(this, function(expect, GoogleDriveApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleDriveApi.App();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('App', function() {
    it('should create an instance of App', function() {
      // uncomment below and update the code to test App
      //var instance = new GoogleDriveApi.App();
      //expect(instance).to.be.a(GoogleDriveApi.App);
    });

    it('should have the property authorized (base name: "authorized")', function() {
      // uncomment below and update the code to test the property authorized
      //var instance = new GoogleDriveApi.App();
      //expect(instance).to.be();
    });

    it('should have the property createInFolderTemplate (base name: "createInFolderTemplate")', function() {
      // uncomment below and update the code to test the property createInFolderTemplate
      //var instance = new GoogleDriveApi.App();
      //expect(instance).to.be();
    });

    it('should have the property createUrl (base name: "createUrl")', function() {
      // uncomment below and update the code to test the property createUrl
      //var instance = new GoogleDriveApi.App();
      //expect(instance).to.be();
    });

    it('should have the property hasDriveWideScope (base name: "hasDriveWideScope")', function() {
      // uncomment below and update the code to test the property hasDriveWideScope
      //var instance = new GoogleDriveApi.App();
      //expect(instance).to.be();
    });

    it('should have the property icons (base name: "icons")', function() {
      // uncomment below and update the code to test the property icons
      //var instance = new GoogleDriveApi.App();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new GoogleDriveApi.App();
      //expect(instance).to.be();
    });

    it('should have the property installed (base name: "installed")', function() {
      // uncomment below and update the code to test the property installed
      //var instance = new GoogleDriveApi.App();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new GoogleDriveApi.App();
      //expect(instance).to.be();
    });

    it('should have the property longDescription (base name: "longDescription")', function() {
      // uncomment below and update the code to test the property longDescription
      //var instance = new GoogleDriveApi.App();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new GoogleDriveApi.App();
      //expect(instance).to.be();
    });

    it('should have the property objectType (base name: "objectType")', function() {
      // uncomment below and update the code to test the property objectType
      //var instance = new GoogleDriveApi.App();
      //expect(instance).to.be();
    });

    it('should have the property openUrlTemplate (base name: "openUrlTemplate")', function() {
      // uncomment below and update the code to test the property openUrlTemplate
      //var instance = new GoogleDriveApi.App();
      //expect(instance).to.be();
    });

    it('should have the property primaryFileExtensions (base name: "primaryFileExtensions")', function() {
      // uncomment below and update the code to test the property primaryFileExtensions
      //var instance = new GoogleDriveApi.App();
      //expect(instance).to.be();
    });

    it('should have the property primaryMimeTypes (base name: "primaryMimeTypes")', function() {
      // uncomment below and update the code to test the property primaryMimeTypes
      //var instance = new GoogleDriveApi.App();
      //expect(instance).to.be();
    });

    it('should have the property productId (base name: "productId")', function() {
      // uncomment below and update the code to test the property productId
      //var instance = new GoogleDriveApi.App();
      //expect(instance).to.be();
    });

    it('should have the property productUrl (base name: "productUrl")', function() {
      // uncomment below and update the code to test the property productUrl
      //var instance = new GoogleDriveApi.App();
      //expect(instance).to.be();
    });

    it('should have the property secondaryFileExtensions (base name: "secondaryFileExtensions")', function() {
      // uncomment below and update the code to test the property secondaryFileExtensions
      //var instance = new GoogleDriveApi.App();
      //expect(instance).to.be();
    });

    it('should have the property secondaryMimeTypes (base name: "secondaryMimeTypes")', function() {
      // uncomment below and update the code to test the property secondaryMimeTypes
      //var instance = new GoogleDriveApi.App();
      //expect(instance).to.be();
    });

    it('should have the property shortDescription (base name: "shortDescription")', function() {
      // uncomment below and update the code to test the property shortDescription
      //var instance = new GoogleDriveApi.App();
      //expect(instance).to.be();
    });

    it('should have the property supportsCreate (base name: "supportsCreate")', function() {
      // uncomment below and update the code to test the property supportsCreate
      //var instance = new GoogleDriveApi.App();
      //expect(instance).to.be();
    });

    it('should have the property supportsImport (base name: "supportsImport")', function() {
      // uncomment below and update the code to test the property supportsImport
      //var instance = new GoogleDriveApi.App();
      //expect(instance).to.be();
    });

    it('should have the property supportsMultiOpen (base name: "supportsMultiOpen")', function() {
      // uncomment below and update the code to test the property supportsMultiOpen
      //var instance = new GoogleDriveApi.App();
      //expect(instance).to.be();
    });

    it('should have the property supportsOfflineCreate (base name: "supportsOfflineCreate")', function() {
      // uncomment below and update the code to test the property supportsOfflineCreate
      //var instance = new GoogleDriveApi.App();
      //expect(instance).to.be();
    });

    it('should have the property useByDefault (base name: "useByDefault")', function() {
      // uncomment below and update the code to test the property useByDefault
      //var instance = new GoogleDriveApi.App();
      //expect(instance).to.be();
    });

  });

}));
