/**
 * Google Drive API
 * The Google Drive API allows clients to access resources from Google Drive.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleDriveApi);
  }
}(this, function(expect, GoogleDriveApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleDriveApi.About();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('About', function() {
    it('should create an instance of About', function() {
      // uncomment below and update the code to test About
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be.a(GoogleDriveApi.About);
    });

    it('should have the property additionalRoleInfo (base name: "additionalRoleInfo")', function() {
      // uncomment below and update the code to test the property additionalRoleInfo
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property canCreateDrives (base name: "canCreateDrives")', function() {
      // uncomment below and update the code to test the property canCreateDrives
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property canCreateTeamDrives (base name: "canCreateTeamDrives")', function() {
      // uncomment below and update the code to test the property canCreateTeamDrives
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property domainSharingPolicy (base name: "domainSharingPolicy")', function() {
      // uncomment below and update the code to test the property domainSharingPolicy
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property driveThemes (base name: "driveThemes")', function() {
      // uncomment below and update the code to test the property driveThemes
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property etag (base name: "etag")', function() {
      // uncomment below and update the code to test the property etag
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property exportFormats (base name: "exportFormats")', function() {
      // uncomment below and update the code to test the property exportFormats
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property features (base name: "features")', function() {
      // uncomment below and update the code to test the property features
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property folderColorPalette (base name: "folderColorPalette")', function() {
      // uncomment below and update the code to test the property folderColorPalette
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property importFormats (base name: "importFormats")', function() {
      // uncomment below and update the code to test the property importFormats
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property isCurrentAppInstalled (base name: "isCurrentAppInstalled")', function() {
      // uncomment below and update the code to test the property isCurrentAppInstalled
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property languageCode (base name: "languageCode")', function() {
      // uncomment below and update the code to test the property languageCode
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property largestChangeId (base name: "largestChangeId")', function() {
      // uncomment below and update the code to test the property largestChangeId
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property maxUploadSizes (base name: "maxUploadSizes")', function() {
      // uncomment below and update the code to test the property maxUploadSizes
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property permissionId (base name: "permissionId")', function() {
      // uncomment below and update the code to test the property permissionId
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property quotaBytesByService (base name: "quotaBytesByService")', function() {
      // uncomment below and update the code to test the property quotaBytesByService
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property quotaBytesTotal (base name: "quotaBytesTotal")', function() {
      // uncomment below and update the code to test the property quotaBytesTotal
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property quotaBytesUsed (base name: "quotaBytesUsed")', function() {
      // uncomment below and update the code to test the property quotaBytesUsed
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property quotaBytesUsedAggregate (base name: "quotaBytesUsedAggregate")', function() {
      // uncomment below and update the code to test the property quotaBytesUsedAggregate
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property quotaBytesUsedInTrash (base name: "quotaBytesUsedInTrash")', function() {
      // uncomment below and update the code to test the property quotaBytesUsedInTrash
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property quotaType (base name: "quotaType")', function() {
      // uncomment below and update the code to test the property quotaType
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property remainingChangeIds (base name: "remainingChangeIds")', function() {
      // uncomment below and update the code to test the property remainingChangeIds
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property rootFolderId (base name: "rootFolderId")', function() {
      // uncomment below and update the code to test the property rootFolderId
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property selfLink (base name: "selfLink")', function() {
      // uncomment below and update the code to test the property selfLink
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property teamDriveThemes (base name: "teamDriveThemes")', function() {
      // uncomment below and update the code to test the property teamDriveThemes
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

    it('should have the property user (base name: "user")', function() {
      // uncomment below and update the code to test the property user
      //var instance = new GoogleDriveApi.About();
      //expect(instance).to.be();
    });

  });

}));
