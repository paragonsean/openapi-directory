/**
 * Google Drive API
 * The Google Drive API allows clients to access resources from Google Drive.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FileShortcutDetails model module.
 * @module model/FileShortcutDetails
 * @version v2
 */
class FileShortcutDetails {
    /**
     * Constructs a new <code>FileShortcutDetails</code>.
     * Shortcut file details. Only populated for shortcut files, which have the mimeType field set to &#x60;application/vnd.google-apps.shortcut&#x60;.
     * @alias module:model/FileShortcutDetails
     */
    constructor() { 
        
        FileShortcutDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FileShortcutDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FileShortcutDetails} obj Optional instance to populate.
     * @return {module:model/FileShortcutDetails} The populated <code>FileShortcutDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FileShortcutDetails();

            if (data.hasOwnProperty('targetId')) {
                obj['targetId'] = ApiClient.convertToType(data['targetId'], 'String');
            }
            if (data.hasOwnProperty('targetMimeType')) {
                obj['targetMimeType'] = ApiClient.convertToType(data['targetMimeType'], 'String');
            }
            if (data.hasOwnProperty('targetResourceKey')) {
                obj['targetResourceKey'] = ApiClient.convertToType(data['targetResourceKey'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FileShortcutDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FileShortcutDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['targetId'] && !(typeof data['targetId'] === 'string' || data['targetId'] instanceof String)) {
            throw new Error("Expected the field `targetId` to be a primitive type in the JSON string but got " + data['targetId']);
        }
        // ensure the json data is a string
        if (data['targetMimeType'] && !(typeof data['targetMimeType'] === 'string' || data['targetMimeType'] instanceof String)) {
            throw new Error("Expected the field `targetMimeType` to be a primitive type in the JSON string but got " + data['targetMimeType']);
        }
        // ensure the json data is a string
        if (data['targetResourceKey'] && !(typeof data['targetResourceKey'] === 'string' || data['targetResourceKey'] instanceof String)) {
            throw new Error("Expected the field `targetResourceKey` to be a primitive type in the JSON string but got " + data['targetResourceKey']);
        }

        return true;
    }


}



/**
 * The ID of the file that this shortcut points to.
 * @member {String} targetId
 */
FileShortcutDetails.prototype['targetId'] = undefined;

/**
 * Output only. The MIME type of the file that this shortcut points to. The value of this field is a snapshot of the target's MIME type, captured when the shortcut is created.
 * @member {String} targetMimeType
 */
FileShortcutDetails.prototype['targetMimeType'] = undefined;

/**
 * Output only. The ResourceKey for the target file.
 * @member {String} targetResourceKey
 */
FileShortcutDetails.prototype['targetResourceKey'] = undefined;






export default FileShortcutDetails;

