/**
 * Google Drive API
 * The Google Drive API allows clients to access resources from Google Drive.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DriveRestrictions model module.
 * @module model/DriveRestrictions
 * @version v2
 */
class DriveRestrictions {
    /**
     * Constructs a new <code>DriveRestrictions</code>.
     * A set of restrictions that apply to this shared drive or items inside this shared drive.
     * @alias module:model/DriveRestrictions
     */
    constructor() { 
        
        DriveRestrictions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DriveRestrictions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DriveRestrictions} obj Optional instance to populate.
     * @return {module:model/DriveRestrictions} The populated <code>DriveRestrictions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DriveRestrictions();

            if (data.hasOwnProperty('adminManagedRestrictions')) {
                obj['adminManagedRestrictions'] = ApiClient.convertToType(data['adminManagedRestrictions'], 'Boolean');
            }
            if (data.hasOwnProperty('copyRequiresWriterPermission')) {
                obj['copyRequiresWriterPermission'] = ApiClient.convertToType(data['copyRequiresWriterPermission'], 'Boolean');
            }
            if (data.hasOwnProperty('domainUsersOnly')) {
                obj['domainUsersOnly'] = ApiClient.convertToType(data['domainUsersOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('driveMembersOnly')) {
                obj['driveMembersOnly'] = ApiClient.convertToType(data['driveMembersOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('sharingFoldersRequiresOrganizerPermission')) {
                obj['sharingFoldersRequiresOrganizerPermission'] = ApiClient.convertToType(data['sharingFoldersRequiresOrganizerPermission'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DriveRestrictions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DriveRestrictions</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Whether administrative privileges on this shared drive are required to modify restrictions.
 * @member {Boolean} adminManagedRestrictions
 */
DriveRestrictions.prototype['adminManagedRestrictions'] = undefined;

/**
 * Whether the options to copy, print, or download files inside this shared drive, should be disabled for readers and commenters. When this restriction is set to `true`, it will override the similarly named field to `true` for any file inside this shared drive.
 * @member {Boolean} copyRequiresWriterPermission
 */
DriveRestrictions.prototype['copyRequiresWriterPermission'] = undefined;

/**
 * Whether access to this shared drive and items inside this shared drive is restricted to users of the domain to which this shared drive belongs. This restriction may be overridden by other sharing policies controlled outside of this shared drive.
 * @member {Boolean} domainUsersOnly
 */
DriveRestrictions.prototype['domainUsersOnly'] = undefined;

/**
 * Whether access to items inside this shared drive is restricted to its members.
 * @member {Boolean} driveMembersOnly
 */
DriveRestrictions.prototype['driveMembersOnly'] = undefined;

/**
 * If true, only users with the organizer role can share folders. If false, users with either the organizer role or the file organizer role can share folders.
 * @member {Boolean} sharingFoldersRequiresOrganizerPermission
 */
DriveRestrictions.prototype['sharingFoldersRequiresOrganizerPermission'] = undefined;






export default DriveRestrictions;

