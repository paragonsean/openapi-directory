/**
 * Google Drive API
 * The Google Drive API allows clients to access resources from Google Drive.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FileThumbnail model module.
 * @module model/FileThumbnail
 * @version v2
 */
class FileThumbnail {
    /**
     * Constructs a new <code>FileThumbnail</code>.
     * A thumbnail for the file. This will only be used if a standard thumbnail cannot be generated.
     * @alias module:model/FileThumbnail
     */
    constructor() { 
        
        FileThumbnail.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FileThumbnail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FileThumbnail} obj Optional instance to populate.
     * @return {module:model/FileThumbnail} The populated <code>FileThumbnail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FileThumbnail();

            if (data.hasOwnProperty('image')) {
                obj['image'] = ApiClient.convertToType(data['image'], 'Blob');
            }
            if (data.hasOwnProperty('mimeType')) {
                obj['mimeType'] = ApiClient.convertToType(data['mimeType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FileThumbnail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FileThumbnail</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['mimeType'] && !(typeof data['mimeType'] === 'string' || data['mimeType'] instanceof String)) {
            throw new Error("Expected the field `mimeType` to be a primitive type in the JSON string but got " + data['mimeType']);
        }

        return true;
    }


}



/**
 * The URL-safe Base64 encoded bytes of the thumbnail image. It should conform to RFC 4648 section 5.
 * @member {Blob} image
 */
FileThumbnail.prototype['image'] = undefined;

/**
 * The MIME type of the thumbnail.
 * @member {String} mimeType
 */
FileThumbnail.prototype['mimeType'] = undefined;






export default FileThumbnail;

