/**
 * Google Drive API
 * The Google Drive API allows clients to access resources from Google Drive.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FileImageMediaMetadataLocation model module.
 * @module model/FileImageMediaMetadataLocation
 * @version v2
 */
class FileImageMediaMetadataLocation {
    /**
     * Constructs a new <code>FileImageMediaMetadataLocation</code>.
     * Output only. Geographic location information stored in the image.
     * @alias module:model/FileImageMediaMetadataLocation
     */
    constructor() { 
        
        FileImageMediaMetadataLocation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FileImageMediaMetadataLocation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FileImageMediaMetadataLocation} obj Optional instance to populate.
     * @return {module:model/FileImageMediaMetadataLocation} The populated <code>FileImageMediaMetadataLocation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FileImageMediaMetadataLocation();

            if (data.hasOwnProperty('altitude')) {
                obj['altitude'] = ApiClient.convertToType(data['altitude'], 'Number');
            }
            if (data.hasOwnProperty('latitude')) {
                obj['latitude'] = ApiClient.convertToType(data['latitude'], 'Number');
            }
            if (data.hasOwnProperty('longitude')) {
                obj['longitude'] = ApiClient.convertToType(data['longitude'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FileImageMediaMetadataLocation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FileImageMediaMetadataLocation</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Output only. The altitude stored in the image.
 * @member {Number} altitude
 */
FileImageMediaMetadataLocation.prototype['altitude'] = undefined;

/**
 * Output only. The latitude stored in the image.
 * @member {Number} latitude
 */
FileImageMediaMetadataLocation.prototype['latitude'] = undefined;

/**
 * Output only. The longitude stored in the image.
 * @member {Number} longitude
 */
FileImageMediaMetadataLocation.prototype['longitude'] = undefined;






export default FileImageMediaMetadataLocation;

