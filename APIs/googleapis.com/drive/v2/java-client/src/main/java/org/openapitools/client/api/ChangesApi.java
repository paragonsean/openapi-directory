/*
 * Google Drive API
 * The Google Drive API allows clients to access resources from Google Drive.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.Change;
import org.openapitools.client.model.ChangeList;
import org.openapitools.client.model.Channel;
import org.openapitools.client.model.StartPageToken;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ChangesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ChangesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ChangesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for driveChangesGet
     * @param changeId The ID of the change. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param driveId The shared drive from which the change will be returned. (optional)
     * @param supportsAllDrives Whether the requesting application supports both My Drives and shared drives. (optional)
     * @param supportsTeamDrives Deprecated: Use &#x60;supportsAllDrives&#x60; instead. (optional)
     * @param teamDriveId Deprecated: Use &#x60;driveId&#x60; instead. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call driveChangesGetCall(String changeId, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String driveId, Boolean supportsAllDrives, Boolean supportsTeamDrives, String teamDriveId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/changes/{changeId}"
            .replace("{" + "changeId" + "}", localVarApiClient.escapeString(changeId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (driveId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("driveId", driveId));
        }

        if (supportsAllDrives != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("supportsAllDrives", supportsAllDrives));
        }

        if (supportsTeamDrives != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("supportsTeamDrives", supportsTeamDrives));
        }

        if (teamDriveId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("teamDriveId", teamDriveId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call driveChangesGetValidateBeforeCall(String changeId, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String driveId, Boolean supportsAllDrives, Boolean supportsTeamDrives, String teamDriveId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'changeId' is set
        if (changeId == null) {
            throw new ApiException("Missing the required parameter 'changeId' when calling driveChangesGet(Async)");
        }

        return driveChangesGetCall(changeId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, driveId, supportsAllDrives, supportsTeamDrives, teamDriveId, _callback);

    }

    /**
     * 
     * Deprecated: Use &#x60;changes.getStartPageToken&#x60; and &#x60;changes.list&#x60; to retrieve recent changes.
     * @param changeId The ID of the change. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param driveId The shared drive from which the change will be returned. (optional)
     * @param supportsAllDrives Whether the requesting application supports both My Drives and shared drives. (optional)
     * @param supportsTeamDrives Deprecated: Use &#x60;supportsAllDrives&#x60; instead. (optional)
     * @param teamDriveId Deprecated: Use &#x60;driveId&#x60; instead. (optional)
     * @return Change
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public Change driveChangesGet(String changeId, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String driveId, Boolean supportsAllDrives, Boolean supportsTeamDrives, String teamDriveId) throws ApiException {
        ApiResponse<Change> localVarResp = driveChangesGetWithHttpInfo(changeId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, driveId, supportsAllDrives, supportsTeamDrives, teamDriveId);
        return localVarResp.getData();
    }

    /**
     * 
     * Deprecated: Use &#x60;changes.getStartPageToken&#x60; and &#x60;changes.list&#x60; to retrieve recent changes.
     * @param changeId The ID of the change. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param driveId The shared drive from which the change will be returned. (optional)
     * @param supportsAllDrives Whether the requesting application supports both My Drives and shared drives. (optional)
     * @param supportsTeamDrives Deprecated: Use &#x60;supportsAllDrives&#x60; instead. (optional)
     * @param teamDriveId Deprecated: Use &#x60;driveId&#x60; instead. (optional)
     * @return ApiResponse&lt;Change&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Change> driveChangesGetWithHttpInfo(String changeId, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String driveId, Boolean supportsAllDrives, Boolean supportsTeamDrives, String teamDriveId) throws ApiException {
        okhttp3.Call localVarCall = driveChangesGetValidateBeforeCall(changeId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, driveId, supportsAllDrives, supportsTeamDrives, teamDriveId, null);
        Type localVarReturnType = new TypeToken<Change>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Deprecated: Use &#x60;changes.getStartPageToken&#x60; and &#x60;changes.list&#x60; to retrieve recent changes.
     * @param changeId The ID of the change. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param driveId The shared drive from which the change will be returned. (optional)
     * @param supportsAllDrives Whether the requesting application supports both My Drives and shared drives. (optional)
     * @param supportsTeamDrives Deprecated: Use &#x60;supportsAllDrives&#x60; instead. (optional)
     * @param teamDriveId Deprecated: Use &#x60;driveId&#x60; instead. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call driveChangesGetAsync(String changeId, String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String driveId, Boolean supportsAllDrives, Boolean supportsTeamDrives, String teamDriveId, final ApiCallback<Change> _callback) throws ApiException {

        okhttp3.Call localVarCall = driveChangesGetValidateBeforeCall(changeId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, driveId, supportsAllDrives, supportsTeamDrives, teamDriveId, _callback);
        Type localVarReturnType = new TypeToken<Change>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for driveChangesGetStartPageToken
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param driveId The ID of the shared drive for which the starting pageToken for listing future changes from that shared drive will be returned. (optional)
     * @param supportsAllDrives Whether the requesting application supports both My Drives and shared drives. (optional)
     * @param supportsTeamDrives Deprecated: Use &#x60;supportsAllDrives&#x60; instead. (optional)
     * @param teamDriveId Deprecated: Use &#x60;driveId&#x60; instead. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call driveChangesGetStartPageTokenCall(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String driveId, Boolean supportsAllDrives, Boolean supportsTeamDrives, String teamDriveId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/changes/startPageToken";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (driveId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("driveId", driveId));
        }

        if (supportsAllDrives != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("supportsAllDrives", supportsAllDrives));
        }

        if (supportsTeamDrives != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("supportsTeamDrives", supportsTeamDrives));
        }

        if (teamDriveId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("teamDriveId", teamDriveId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call driveChangesGetStartPageTokenValidateBeforeCall(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String driveId, Boolean supportsAllDrives, Boolean supportsTeamDrives, String teamDriveId, final ApiCallback _callback) throws ApiException {
        return driveChangesGetStartPageTokenCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, driveId, supportsAllDrives, supportsTeamDrives, teamDriveId, _callback);

    }

    /**
     * 
     * Gets the starting pageToken for listing future changes.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param driveId The ID of the shared drive for which the starting pageToken for listing future changes from that shared drive will be returned. (optional)
     * @param supportsAllDrives Whether the requesting application supports both My Drives and shared drives. (optional)
     * @param supportsTeamDrives Deprecated: Use &#x60;supportsAllDrives&#x60; instead. (optional)
     * @param teamDriveId Deprecated: Use &#x60;driveId&#x60; instead. (optional)
     * @return StartPageToken
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public StartPageToken driveChangesGetStartPageToken(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String driveId, Boolean supportsAllDrives, Boolean supportsTeamDrives, String teamDriveId) throws ApiException {
        ApiResponse<StartPageToken> localVarResp = driveChangesGetStartPageTokenWithHttpInfo($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, driveId, supportsAllDrives, supportsTeamDrives, teamDriveId);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the starting pageToken for listing future changes.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param driveId The ID of the shared drive for which the starting pageToken for listing future changes from that shared drive will be returned. (optional)
     * @param supportsAllDrives Whether the requesting application supports both My Drives and shared drives. (optional)
     * @param supportsTeamDrives Deprecated: Use &#x60;supportsAllDrives&#x60; instead. (optional)
     * @param teamDriveId Deprecated: Use &#x60;driveId&#x60; instead. (optional)
     * @return ApiResponse&lt;StartPageToken&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<StartPageToken> driveChangesGetStartPageTokenWithHttpInfo(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String driveId, Boolean supportsAllDrives, Boolean supportsTeamDrives, String teamDriveId) throws ApiException {
        okhttp3.Call localVarCall = driveChangesGetStartPageTokenValidateBeforeCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, driveId, supportsAllDrives, supportsTeamDrives, teamDriveId, null);
        Type localVarReturnType = new TypeToken<StartPageToken>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the starting pageToken for listing future changes.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param driveId The ID of the shared drive for which the starting pageToken for listing future changes from that shared drive will be returned. (optional)
     * @param supportsAllDrives Whether the requesting application supports both My Drives and shared drives. (optional)
     * @param supportsTeamDrives Deprecated: Use &#x60;supportsAllDrives&#x60; instead. (optional)
     * @param teamDriveId Deprecated: Use &#x60;driveId&#x60; instead. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call driveChangesGetStartPageTokenAsync(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String driveId, Boolean supportsAllDrives, Boolean supportsTeamDrives, String teamDriveId, final ApiCallback<StartPageToken> _callback) throws ApiException {

        okhttp3.Call localVarCall = driveChangesGetStartPageTokenValidateBeforeCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, driveId, supportsAllDrives, supportsTeamDrives, teamDriveId, _callback);
        Type localVarReturnType = new TypeToken<StartPageToken>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for driveChangesList
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param driveId The shared drive from which changes will be returned. If specified the change IDs will be reflective of the shared drive; use the combined drive ID and change ID as an identifier. (optional)
     * @param includeCorpusRemovals Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file. (optional)
     * @param includeDeleted Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access. (optional)
     * @param includeItemsFromAllDrives Whether both My Drive and shared drive items should be included in results. (optional)
     * @param includeLabels A comma-separated list of IDs of labels to include in the &#x60;labelInfo&#x60; part of the response. (optional)
     * @param includePermissionsForView Specifies which additional view&#39;s permissions to include in the response. Only &#x60;published&#x60; is supported. (optional)
     * @param includeSubscribed Whether to include changes outside the My Drive hierarchy in the result. When set to false, changes to files such as those in the Application Data folder or shared files which have not been added to My Drive will be omitted from the result. (optional)
     * @param includeTeamDriveItems Deprecated: Use &#x60;includeItemsFromAllDrives&#x60; instead. (optional)
     * @param maxResults Maximum number of changes to return. (optional)
     * @param pageToken The token for continuing a previous list request on the next page. This should be set to the value of &#x60;nextPageToken&#x60; from the previous response or to the response from the getStartPageToken method. (optional)
     * @param spaces A comma-separated list of spaces to query. Supported values are &#x60;drive&#x60;, &#x60;appDataFolder&#x60; and &#x60;photos&#x60;. (optional)
     * @param startChangeId Deprecated: Use &#x60;pageToken&#x60; instead. (optional)
     * @param supportsAllDrives Whether the requesting application supports both My Drives and shared drives. (optional)
     * @param supportsTeamDrives Deprecated: Use &#x60;supportsAllDrives&#x60; instead. (optional)
     * @param teamDriveId Deprecated: Use &#x60;driveId&#x60; instead. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call driveChangesListCall(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String driveId, Boolean includeCorpusRemovals, Boolean includeDeleted, Boolean includeItemsFromAllDrives, String includeLabels, String includePermissionsForView, Boolean includeSubscribed, Boolean includeTeamDriveItems, Integer maxResults, String pageToken, String spaces, String startChangeId, Boolean supportsAllDrives, Boolean supportsTeamDrives, String teamDriveId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/changes";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (driveId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("driveId", driveId));
        }

        if (includeCorpusRemovals != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeCorpusRemovals", includeCorpusRemovals));
        }

        if (includeDeleted != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeDeleted", includeDeleted));
        }

        if (includeItemsFromAllDrives != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeItemsFromAllDrives", includeItemsFromAllDrives));
        }

        if (includeLabels != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeLabels", includeLabels));
        }

        if (includePermissionsForView != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includePermissionsForView", includePermissionsForView));
        }

        if (includeSubscribed != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeSubscribed", includeSubscribed));
        }

        if (includeTeamDriveItems != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeTeamDriveItems", includeTeamDriveItems));
        }

        if (maxResults != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxResults", maxResults));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageToken", pageToken));
        }

        if (spaces != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("spaces", spaces));
        }

        if (startChangeId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("startChangeId", startChangeId));
        }

        if (supportsAllDrives != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("supportsAllDrives", supportsAllDrives));
        }

        if (supportsTeamDrives != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("supportsTeamDrives", supportsTeamDrives));
        }

        if (teamDriveId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("teamDriveId", teamDriveId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call driveChangesListValidateBeforeCall(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String driveId, Boolean includeCorpusRemovals, Boolean includeDeleted, Boolean includeItemsFromAllDrives, String includeLabels, String includePermissionsForView, Boolean includeSubscribed, Boolean includeTeamDriveItems, Integer maxResults, String pageToken, String spaces, String startChangeId, Boolean supportsAllDrives, Boolean supportsTeamDrives, String teamDriveId, final ApiCallback _callback) throws ApiException {
        return driveChangesListCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, driveId, includeCorpusRemovals, includeDeleted, includeItemsFromAllDrives, includeLabels, includePermissionsForView, includeSubscribed, includeTeamDriveItems, maxResults, pageToken, spaces, startChangeId, supportsAllDrives, supportsTeamDrives, teamDriveId, _callback);

    }

    /**
     * 
     * Lists the changes for a user or shared drive.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param driveId The shared drive from which changes will be returned. If specified the change IDs will be reflective of the shared drive; use the combined drive ID and change ID as an identifier. (optional)
     * @param includeCorpusRemovals Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file. (optional)
     * @param includeDeleted Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access. (optional)
     * @param includeItemsFromAllDrives Whether both My Drive and shared drive items should be included in results. (optional)
     * @param includeLabels A comma-separated list of IDs of labels to include in the &#x60;labelInfo&#x60; part of the response. (optional)
     * @param includePermissionsForView Specifies which additional view&#39;s permissions to include in the response. Only &#x60;published&#x60; is supported. (optional)
     * @param includeSubscribed Whether to include changes outside the My Drive hierarchy in the result. When set to false, changes to files such as those in the Application Data folder or shared files which have not been added to My Drive will be omitted from the result. (optional)
     * @param includeTeamDriveItems Deprecated: Use &#x60;includeItemsFromAllDrives&#x60; instead. (optional)
     * @param maxResults Maximum number of changes to return. (optional)
     * @param pageToken The token for continuing a previous list request on the next page. This should be set to the value of &#x60;nextPageToken&#x60; from the previous response or to the response from the getStartPageToken method. (optional)
     * @param spaces A comma-separated list of spaces to query. Supported values are &#x60;drive&#x60;, &#x60;appDataFolder&#x60; and &#x60;photos&#x60;. (optional)
     * @param startChangeId Deprecated: Use &#x60;pageToken&#x60; instead. (optional)
     * @param supportsAllDrives Whether the requesting application supports both My Drives and shared drives. (optional)
     * @param supportsTeamDrives Deprecated: Use &#x60;supportsAllDrives&#x60; instead. (optional)
     * @param teamDriveId Deprecated: Use &#x60;driveId&#x60; instead. (optional)
     * @return ChangeList
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ChangeList driveChangesList(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String driveId, Boolean includeCorpusRemovals, Boolean includeDeleted, Boolean includeItemsFromAllDrives, String includeLabels, String includePermissionsForView, Boolean includeSubscribed, Boolean includeTeamDriveItems, Integer maxResults, String pageToken, String spaces, String startChangeId, Boolean supportsAllDrives, Boolean supportsTeamDrives, String teamDriveId) throws ApiException {
        ApiResponse<ChangeList> localVarResp = driveChangesListWithHttpInfo($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, driveId, includeCorpusRemovals, includeDeleted, includeItemsFromAllDrives, includeLabels, includePermissionsForView, includeSubscribed, includeTeamDriveItems, maxResults, pageToken, spaces, startChangeId, supportsAllDrives, supportsTeamDrives, teamDriveId);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists the changes for a user or shared drive.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param driveId The shared drive from which changes will be returned. If specified the change IDs will be reflective of the shared drive; use the combined drive ID and change ID as an identifier. (optional)
     * @param includeCorpusRemovals Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file. (optional)
     * @param includeDeleted Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access. (optional)
     * @param includeItemsFromAllDrives Whether both My Drive and shared drive items should be included in results. (optional)
     * @param includeLabels A comma-separated list of IDs of labels to include in the &#x60;labelInfo&#x60; part of the response. (optional)
     * @param includePermissionsForView Specifies which additional view&#39;s permissions to include in the response. Only &#x60;published&#x60; is supported. (optional)
     * @param includeSubscribed Whether to include changes outside the My Drive hierarchy in the result. When set to false, changes to files such as those in the Application Data folder or shared files which have not been added to My Drive will be omitted from the result. (optional)
     * @param includeTeamDriveItems Deprecated: Use &#x60;includeItemsFromAllDrives&#x60; instead. (optional)
     * @param maxResults Maximum number of changes to return. (optional)
     * @param pageToken The token for continuing a previous list request on the next page. This should be set to the value of &#x60;nextPageToken&#x60; from the previous response or to the response from the getStartPageToken method. (optional)
     * @param spaces A comma-separated list of spaces to query. Supported values are &#x60;drive&#x60;, &#x60;appDataFolder&#x60; and &#x60;photos&#x60;. (optional)
     * @param startChangeId Deprecated: Use &#x60;pageToken&#x60; instead. (optional)
     * @param supportsAllDrives Whether the requesting application supports both My Drives and shared drives. (optional)
     * @param supportsTeamDrives Deprecated: Use &#x60;supportsAllDrives&#x60; instead. (optional)
     * @param teamDriveId Deprecated: Use &#x60;driveId&#x60; instead. (optional)
     * @return ApiResponse&lt;ChangeList&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ChangeList> driveChangesListWithHttpInfo(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String driveId, Boolean includeCorpusRemovals, Boolean includeDeleted, Boolean includeItemsFromAllDrives, String includeLabels, String includePermissionsForView, Boolean includeSubscribed, Boolean includeTeamDriveItems, Integer maxResults, String pageToken, String spaces, String startChangeId, Boolean supportsAllDrives, Boolean supportsTeamDrives, String teamDriveId) throws ApiException {
        okhttp3.Call localVarCall = driveChangesListValidateBeforeCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, driveId, includeCorpusRemovals, includeDeleted, includeItemsFromAllDrives, includeLabels, includePermissionsForView, includeSubscribed, includeTeamDriveItems, maxResults, pageToken, spaces, startChangeId, supportsAllDrives, supportsTeamDrives, teamDriveId, null);
        Type localVarReturnType = new TypeToken<ChangeList>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists the changes for a user or shared drive.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param driveId The shared drive from which changes will be returned. If specified the change IDs will be reflective of the shared drive; use the combined drive ID and change ID as an identifier. (optional)
     * @param includeCorpusRemovals Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file. (optional)
     * @param includeDeleted Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access. (optional)
     * @param includeItemsFromAllDrives Whether both My Drive and shared drive items should be included in results. (optional)
     * @param includeLabels A comma-separated list of IDs of labels to include in the &#x60;labelInfo&#x60; part of the response. (optional)
     * @param includePermissionsForView Specifies which additional view&#39;s permissions to include in the response. Only &#x60;published&#x60; is supported. (optional)
     * @param includeSubscribed Whether to include changes outside the My Drive hierarchy in the result. When set to false, changes to files such as those in the Application Data folder or shared files which have not been added to My Drive will be omitted from the result. (optional)
     * @param includeTeamDriveItems Deprecated: Use &#x60;includeItemsFromAllDrives&#x60; instead. (optional)
     * @param maxResults Maximum number of changes to return. (optional)
     * @param pageToken The token for continuing a previous list request on the next page. This should be set to the value of &#x60;nextPageToken&#x60; from the previous response or to the response from the getStartPageToken method. (optional)
     * @param spaces A comma-separated list of spaces to query. Supported values are &#x60;drive&#x60;, &#x60;appDataFolder&#x60; and &#x60;photos&#x60;. (optional)
     * @param startChangeId Deprecated: Use &#x60;pageToken&#x60; instead. (optional)
     * @param supportsAllDrives Whether the requesting application supports both My Drives and shared drives. (optional)
     * @param supportsTeamDrives Deprecated: Use &#x60;supportsAllDrives&#x60; instead. (optional)
     * @param teamDriveId Deprecated: Use &#x60;driveId&#x60; instead. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call driveChangesListAsync(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String driveId, Boolean includeCorpusRemovals, Boolean includeDeleted, Boolean includeItemsFromAllDrives, String includeLabels, String includePermissionsForView, Boolean includeSubscribed, Boolean includeTeamDriveItems, Integer maxResults, String pageToken, String spaces, String startChangeId, Boolean supportsAllDrives, Boolean supportsTeamDrives, String teamDriveId, final ApiCallback<ChangeList> _callback) throws ApiException {

        okhttp3.Call localVarCall = driveChangesListValidateBeforeCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, driveId, includeCorpusRemovals, includeDeleted, includeItemsFromAllDrives, includeLabels, includePermissionsForView, includeSubscribed, includeTeamDriveItems, maxResults, pageToken, spaces, startChangeId, supportsAllDrives, supportsTeamDrives, teamDriveId, _callback);
        Type localVarReturnType = new TypeToken<ChangeList>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for driveChangesWatch
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param driveId The shared drive from which changes will be returned. If specified the change IDs will be reflective of the shared drive; use the combined drive ID and change ID as an identifier. (optional)
     * @param includeCorpusRemovals Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file. (optional)
     * @param includeDeleted Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access. (optional)
     * @param includeItemsFromAllDrives Whether both My Drive and shared drive items should be included in results. (optional)
     * @param includeLabels A comma-separated list of IDs of labels to include in the &#x60;labelInfo&#x60; part of the response. (optional)
     * @param includePermissionsForView Specifies which additional view&#39;s permissions to include in the response. Only &#x60;published&#x60; is supported. (optional)
     * @param includeSubscribed Whether to include changes outside the My Drive hierarchy in the result. When set to false, changes to files such as those in the Application Data folder or shared files which have not been added to My Drive will be omitted from the result. (optional)
     * @param includeTeamDriveItems Deprecated: Use &#x60;includeItemsFromAllDrives&#x60; instead. (optional)
     * @param maxResults Maximum number of changes to return. (optional)
     * @param pageToken The token for continuing a previous list request on the next page. This should be set to the value of &#x60;nextPageToken&#x60; from the previous response or to the response from the getStartPageToken method. (optional)
     * @param spaces A comma-separated list of spaces to query. Supported values are &#x60;drive&#x60;, &#x60;appDataFolder&#x60; and &#x60;photos&#x60;. (optional)
     * @param startChangeId Deprecated: Use &#x60;pageToken&#x60; instead. (optional)
     * @param supportsAllDrives Whether the requesting application supports both My Drives and shared drives. (optional)
     * @param supportsTeamDrives Deprecated: Use &#x60;supportsAllDrives&#x60; instead. (optional)
     * @param teamDriveId Deprecated: Use &#x60;driveId&#x60; instead. (optional)
     * @param channel  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call driveChangesWatchCall(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String driveId, Boolean includeCorpusRemovals, Boolean includeDeleted, Boolean includeItemsFromAllDrives, String includeLabels, String includePermissionsForView, Boolean includeSubscribed, Boolean includeTeamDriveItems, Integer maxResults, String pageToken, String spaces, String startChangeId, Boolean supportsAllDrives, Boolean supportsTeamDrives, String teamDriveId, Channel channel, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = channel;

        // create path and map variables
        String localVarPath = "/changes/watch";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (driveId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("driveId", driveId));
        }

        if (includeCorpusRemovals != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeCorpusRemovals", includeCorpusRemovals));
        }

        if (includeDeleted != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeDeleted", includeDeleted));
        }

        if (includeItemsFromAllDrives != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeItemsFromAllDrives", includeItemsFromAllDrives));
        }

        if (includeLabels != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeLabels", includeLabels));
        }

        if (includePermissionsForView != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includePermissionsForView", includePermissionsForView));
        }

        if (includeSubscribed != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeSubscribed", includeSubscribed));
        }

        if (includeTeamDriveItems != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeTeamDriveItems", includeTeamDriveItems));
        }

        if (maxResults != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxResults", maxResults));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageToken", pageToken));
        }

        if (spaces != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("spaces", spaces));
        }

        if (startChangeId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("startChangeId", startChangeId));
        }

        if (supportsAllDrives != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("supportsAllDrives", supportsAllDrives));
        }

        if (supportsTeamDrives != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("supportsTeamDrives", supportsTeamDrives));
        }

        if (teamDriveId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("teamDriveId", teamDriveId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call driveChangesWatchValidateBeforeCall(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String driveId, Boolean includeCorpusRemovals, Boolean includeDeleted, Boolean includeItemsFromAllDrives, String includeLabels, String includePermissionsForView, Boolean includeSubscribed, Boolean includeTeamDriveItems, Integer maxResults, String pageToken, String spaces, String startChangeId, Boolean supportsAllDrives, Boolean supportsTeamDrives, String teamDriveId, Channel channel, final ApiCallback _callback) throws ApiException {
        return driveChangesWatchCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, driveId, includeCorpusRemovals, includeDeleted, includeItemsFromAllDrives, includeLabels, includePermissionsForView, includeSubscribed, includeTeamDriveItems, maxResults, pageToken, spaces, startChangeId, supportsAllDrives, supportsTeamDrives, teamDriveId, channel, _callback);

    }

    /**
     * 
     * Subscribe to changes for a user.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param driveId The shared drive from which changes will be returned. If specified the change IDs will be reflective of the shared drive; use the combined drive ID and change ID as an identifier. (optional)
     * @param includeCorpusRemovals Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file. (optional)
     * @param includeDeleted Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access. (optional)
     * @param includeItemsFromAllDrives Whether both My Drive and shared drive items should be included in results. (optional)
     * @param includeLabels A comma-separated list of IDs of labels to include in the &#x60;labelInfo&#x60; part of the response. (optional)
     * @param includePermissionsForView Specifies which additional view&#39;s permissions to include in the response. Only &#x60;published&#x60; is supported. (optional)
     * @param includeSubscribed Whether to include changes outside the My Drive hierarchy in the result. When set to false, changes to files such as those in the Application Data folder or shared files which have not been added to My Drive will be omitted from the result. (optional)
     * @param includeTeamDriveItems Deprecated: Use &#x60;includeItemsFromAllDrives&#x60; instead. (optional)
     * @param maxResults Maximum number of changes to return. (optional)
     * @param pageToken The token for continuing a previous list request on the next page. This should be set to the value of &#x60;nextPageToken&#x60; from the previous response or to the response from the getStartPageToken method. (optional)
     * @param spaces A comma-separated list of spaces to query. Supported values are &#x60;drive&#x60;, &#x60;appDataFolder&#x60; and &#x60;photos&#x60;. (optional)
     * @param startChangeId Deprecated: Use &#x60;pageToken&#x60; instead. (optional)
     * @param supportsAllDrives Whether the requesting application supports both My Drives and shared drives. (optional)
     * @param supportsTeamDrives Deprecated: Use &#x60;supportsAllDrives&#x60; instead. (optional)
     * @param teamDriveId Deprecated: Use &#x60;driveId&#x60; instead. (optional)
     * @param channel  (optional)
     * @return Channel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public Channel driveChangesWatch(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String driveId, Boolean includeCorpusRemovals, Boolean includeDeleted, Boolean includeItemsFromAllDrives, String includeLabels, String includePermissionsForView, Boolean includeSubscribed, Boolean includeTeamDriveItems, Integer maxResults, String pageToken, String spaces, String startChangeId, Boolean supportsAllDrives, Boolean supportsTeamDrives, String teamDriveId, Channel channel) throws ApiException {
        ApiResponse<Channel> localVarResp = driveChangesWatchWithHttpInfo($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, driveId, includeCorpusRemovals, includeDeleted, includeItemsFromAllDrives, includeLabels, includePermissionsForView, includeSubscribed, includeTeamDriveItems, maxResults, pageToken, spaces, startChangeId, supportsAllDrives, supportsTeamDrives, teamDriveId, channel);
        return localVarResp.getData();
    }

    /**
     * 
     * Subscribe to changes for a user.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param driveId The shared drive from which changes will be returned. If specified the change IDs will be reflective of the shared drive; use the combined drive ID and change ID as an identifier. (optional)
     * @param includeCorpusRemovals Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file. (optional)
     * @param includeDeleted Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access. (optional)
     * @param includeItemsFromAllDrives Whether both My Drive and shared drive items should be included in results. (optional)
     * @param includeLabels A comma-separated list of IDs of labels to include in the &#x60;labelInfo&#x60; part of the response. (optional)
     * @param includePermissionsForView Specifies which additional view&#39;s permissions to include in the response. Only &#x60;published&#x60; is supported. (optional)
     * @param includeSubscribed Whether to include changes outside the My Drive hierarchy in the result. When set to false, changes to files such as those in the Application Data folder or shared files which have not been added to My Drive will be omitted from the result. (optional)
     * @param includeTeamDriveItems Deprecated: Use &#x60;includeItemsFromAllDrives&#x60; instead. (optional)
     * @param maxResults Maximum number of changes to return. (optional)
     * @param pageToken The token for continuing a previous list request on the next page. This should be set to the value of &#x60;nextPageToken&#x60; from the previous response or to the response from the getStartPageToken method. (optional)
     * @param spaces A comma-separated list of spaces to query. Supported values are &#x60;drive&#x60;, &#x60;appDataFolder&#x60; and &#x60;photos&#x60;. (optional)
     * @param startChangeId Deprecated: Use &#x60;pageToken&#x60; instead. (optional)
     * @param supportsAllDrives Whether the requesting application supports both My Drives and shared drives. (optional)
     * @param supportsTeamDrives Deprecated: Use &#x60;supportsAllDrives&#x60; instead. (optional)
     * @param teamDriveId Deprecated: Use &#x60;driveId&#x60; instead. (optional)
     * @param channel  (optional)
     * @return ApiResponse&lt;Channel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Channel> driveChangesWatchWithHttpInfo(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String driveId, Boolean includeCorpusRemovals, Boolean includeDeleted, Boolean includeItemsFromAllDrives, String includeLabels, String includePermissionsForView, Boolean includeSubscribed, Boolean includeTeamDriveItems, Integer maxResults, String pageToken, String spaces, String startChangeId, Boolean supportsAllDrives, Boolean supportsTeamDrives, String teamDriveId, Channel channel) throws ApiException {
        okhttp3.Call localVarCall = driveChangesWatchValidateBeforeCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, driveId, includeCorpusRemovals, includeDeleted, includeItemsFromAllDrives, includeLabels, includePermissionsForView, includeSubscribed, includeTeamDriveItems, maxResults, pageToken, spaces, startChangeId, supportsAllDrives, supportsTeamDrives, teamDriveId, channel, null);
        Type localVarReturnType = new TypeToken<Channel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Subscribe to changes for a user.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param driveId The shared drive from which changes will be returned. If specified the change IDs will be reflective of the shared drive; use the combined drive ID and change ID as an identifier. (optional)
     * @param includeCorpusRemovals Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file. (optional)
     * @param includeDeleted Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access. (optional)
     * @param includeItemsFromAllDrives Whether both My Drive and shared drive items should be included in results. (optional)
     * @param includeLabels A comma-separated list of IDs of labels to include in the &#x60;labelInfo&#x60; part of the response. (optional)
     * @param includePermissionsForView Specifies which additional view&#39;s permissions to include in the response. Only &#x60;published&#x60; is supported. (optional)
     * @param includeSubscribed Whether to include changes outside the My Drive hierarchy in the result. When set to false, changes to files such as those in the Application Data folder or shared files which have not been added to My Drive will be omitted from the result. (optional)
     * @param includeTeamDriveItems Deprecated: Use &#x60;includeItemsFromAllDrives&#x60; instead. (optional)
     * @param maxResults Maximum number of changes to return. (optional)
     * @param pageToken The token for continuing a previous list request on the next page. This should be set to the value of &#x60;nextPageToken&#x60; from the previous response or to the response from the getStartPageToken method. (optional)
     * @param spaces A comma-separated list of spaces to query. Supported values are &#x60;drive&#x60;, &#x60;appDataFolder&#x60; and &#x60;photos&#x60;. (optional)
     * @param startChangeId Deprecated: Use &#x60;pageToken&#x60; instead. (optional)
     * @param supportsAllDrives Whether the requesting application supports both My Drives and shared drives. (optional)
     * @param supportsTeamDrives Deprecated: Use &#x60;supportsAllDrives&#x60; instead. (optional)
     * @param teamDriveId Deprecated: Use &#x60;driveId&#x60; instead. (optional)
     * @param channel  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call driveChangesWatchAsync(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String driveId, Boolean includeCorpusRemovals, Boolean includeDeleted, Boolean includeItemsFromAllDrives, String includeLabels, String includePermissionsForView, Boolean includeSubscribed, Boolean includeTeamDriveItems, Integer maxResults, String pageToken, String spaces, String startChangeId, Boolean supportsAllDrives, Boolean supportsTeamDrives, String teamDriveId, Channel channel, final ApiCallback<Channel> _callback) throws ApiException {

        okhttp3.Call localVarCall = driveChangesWatchValidateBeforeCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, driveId, includeCorpusRemovals, includeDeleted, includeItemsFromAllDrives, includeLabels, includePermissionsForView, includeSubscribed, includeTeamDriveItems, maxResults, pageToken, spaces, startChangeId, supportsAllDrives, supportsTeamDrives, teamDriveId, channel, _callback);
        Type localVarReturnType = new TypeToken<Channel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
