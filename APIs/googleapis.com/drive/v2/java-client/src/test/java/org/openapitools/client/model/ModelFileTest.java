/*
 * Google Drive API
 * The Google Drive API allows clients to access resources from Google Drive.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.ContentRestriction;
import org.openapitools.client.model.FileCapabilities;
import org.openapitools.client.model.FileImageMediaMetadata;
import org.openapitools.client.model.FileIndexableText;
import org.openapitools.client.model.FileLabelInfo;
import org.openapitools.client.model.FileLabels;
import org.openapitools.client.model.FileLinkShareMetadata;
import org.openapitools.client.model.FileShortcutDetails;
import org.openapitools.client.model.FileThumbnail;
import org.openapitools.client.model.FileVideoMediaMetadata;
import org.openapitools.client.model.ParentReference;
import org.openapitools.client.model.Permission;
import org.openapitools.client.model.Property;
import org.openapitools.client.model.User;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ModelFile
 */
public class ModelFileTest {
    private final ModelFile model = new ModelFile();

    /**
     * Model tests for ModelFile
     */
    @Test
    public void testModelFile() {
        // TODO: test ModelFile
    }

    /**
     * Test the property 'alternateLink'
     */
    @Test
    public void alternateLinkTest() {
        // TODO: test alternateLink
    }

    /**
     * Test the property 'appDataContents'
     */
    @Test
    public void appDataContentsTest() {
        // TODO: test appDataContents
    }

    /**
     * Test the property 'canComment'
     */
    @Test
    public void canCommentTest() {
        // TODO: test canComment
    }

    /**
     * Test the property 'canReadRevisions'
     */
    @Test
    public void canReadRevisionsTest() {
        // TODO: test canReadRevisions
    }

    /**
     * Test the property 'capabilities'
     */
    @Test
    public void capabilitiesTest() {
        // TODO: test capabilities
    }

    /**
     * Test the property 'contentRestrictions'
     */
    @Test
    public void contentRestrictionsTest() {
        // TODO: test contentRestrictions
    }

    /**
     * Test the property 'copyRequiresWriterPermission'
     */
    @Test
    public void copyRequiresWriterPermissionTest() {
        // TODO: test copyRequiresWriterPermission
    }

    /**
     * Test the property 'copyable'
     */
    @Test
    public void copyableTest() {
        // TODO: test copyable
    }

    /**
     * Test the property 'createdDate'
     */
    @Test
    public void createdDateTest() {
        // TODO: test createdDate
    }

    /**
     * Test the property 'defaultOpenWithLink'
     */
    @Test
    public void defaultOpenWithLinkTest() {
        // TODO: test defaultOpenWithLink
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'downloadUrl'
     */
    @Test
    public void downloadUrlTest() {
        // TODO: test downloadUrl
    }

    /**
     * Test the property 'driveId'
     */
    @Test
    public void driveIdTest() {
        // TODO: test driveId
    }

    /**
     * Test the property 'editable'
     */
    @Test
    public void editableTest() {
        // TODO: test editable
    }

    /**
     * Test the property 'embedLink'
     */
    @Test
    public void embedLinkTest() {
        // TODO: test embedLink
    }

    /**
     * Test the property 'etag'
     */
    @Test
    public void etagTest() {
        // TODO: test etag
    }

    /**
     * Test the property 'explicitlyTrashed'
     */
    @Test
    public void explicitlyTrashedTest() {
        // TODO: test explicitlyTrashed
    }

    /**
     * Test the property 'exportLinks'
     */
    @Test
    public void exportLinksTest() {
        // TODO: test exportLinks
    }

    /**
     * Test the property 'fileExtension'
     */
    @Test
    public void fileExtensionTest() {
        // TODO: test fileExtension
    }

    /**
     * Test the property 'fileSize'
     */
    @Test
    public void fileSizeTest() {
        // TODO: test fileSize
    }

    /**
     * Test the property 'folderColorRgb'
     */
    @Test
    public void folderColorRgbTest() {
        // TODO: test folderColorRgb
    }

    /**
     * Test the property 'fullFileExtension'
     */
    @Test
    public void fullFileExtensionTest() {
        // TODO: test fullFileExtension
    }

    /**
     * Test the property 'hasAugmentedPermissions'
     */
    @Test
    public void hasAugmentedPermissionsTest() {
        // TODO: test hasAugmentedPermissions
    }

    /**
     * Test the property 'hasThumbnail'
     */
    @Test
    public void hasThumbnailTest() {
        // TODO: test hasThumbnail
    }

    /**
     * Test the property 'headRevisionId'
     */
    @Test
    public void headRevisionIdTest() {
        // TODO: test headRevisionId
    }

    /**
     * Test the property 'iconLink'
     */
    @Test
    public void iconLinkTest() {
        // TODO: test iconLink
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'imageMediaMetadata'
     */
    @Test
    public void imageMediaMetadataTest() {
        // TODO: test imageMediaMetadata
    }

    /**
     * Test the property 'indexableText'
     */
    @Test
    public void indexableTextTest() {
        // TODO: test indexableText
    }

    /**
     * Test the property 'isAppAuthorized'
     */
    @Test
    public void isAppAuthorizedTest() {
        // TODO: test isAppAuthorized
    }

    /**
     * Test the property 'kind'
     */
    @Test
    public void kindTest() {
        // TODO: test kind
    }

    /**
     * Test the property 'labelInfo'
     */
    @Test
    public void labelInfoTest() {
        // TODO: test labelInfo
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'lastModifyingUser'
     */
    @Test
    public void lastModifyingUserTest() {
        // TODO: test lastModifyingUser
    }

    /**
     * Test the property 'lastModifyingUserName'
     */
    @Test
    public void lastModifyingUserNameTest() {
        // TODO: test lastModifyingUserName
    }

    /**
     * Test the property 'lastViewedByMeDate'
     */
    @Test
    public void lastViewedByMeDateTest() {
        // TODO: test lastViewedByMeDate
    }

    /**
     * Test the property 'linkShareMetadata'
     */
    @Test
    public void linkShareMetadataTest() {
        // TODO: test linkShareMetadata
    }

    /**
     * Test the property 'markedViewedByMeDate'
     */
    @Test
    public void markedViewedByMeDateTest() {
        // TODO: test markedViewedByMeDate
    }

    /**
     * Test the property 'md5Checksum'
     */
    @Test
    public void md5ChecksumTest() {
        // TODO: test md5Checksum
    }

    /**
     * Test the property 'mimeType'
     */
    @Test
    public void mimeTypeTest() {
        // TODO: test mimeType
    }

    /**
     * Test the property 'modifiedByMeDate'
     */
    @Test
    public void modifiedByMeDateTest() {
        // TODO: test modifiedByMeDate
    }

    /**
     * Test the property 'modifiedDate'
     */
    @Test
    public void modifiedDateTest() {
        // TODO: test modifiedDate
    }

    /**
     * Test the property 'openWithLinks'
     */
    @Test
    public void openWithLinksTest() {
        // TODO: test openWithLinks
    }

    /**
     * Test the property 'originalFilename'
     */
    @Test
    public void originalFilenameTest() {
        // TODO: test originalFilename
    }

    /**
     * Test the property 'ownedByMe'
     */
    @Test
    public void ownedByMeTest() {
        // TODO: test ownedByMe
    }

    /**
     * Test the property 'ownerNames'
     */
    @Test
    public void ownerNamesTest() {
        // TODO: test ownerNames
    }

    /**
     * Test the property 'owners'
     */
    @Test
    public void ownersTest() {
        // TODO: test owners
    }

    /**
     * Test the property 'parents'
     */
    @Test
    public void parentsTest() {
        // TODO: test parents
    }

    /**
     * Test the property 'permissionIds'
     */
    @Test
    public void permissionIdsTest() {
        // TODO: test permissionIds
    }

    /**
     * Test the property 'permissions'
     */
    @Test
    public void permissionsTest() {
        // TODO: test permissions
    }

    /**
     * Test the property 'properties'
     */
    @Test
    public void propertiesTest() {
        // TODO: test properties
    }

    /**
     * Test the property 'quotaBytesUsed'
     */
    @Test
    public void quotaBytesUsedTest() {
        // TODO: test quotaBytesUsed
    }

    /**
     * Test the property 'resourceKey'
     */
    @Test
    public void resourceKeyTest() {
        // TODO: test resourceKey
    }

    /**
     * Test the property 'selfLink'
     */
    @Test
    public void selfLinkTest() {
        // TODO: test selfLink
    }

    /**
     * Test the property 'sha1Checksum'
     */
    @Test
    public void sha1ChecksumTest() {
        // TODO: test sha1Checksum
    }

    /**
     * Test the property 'sha256Checksum'
     */
    @Test
    public void sha256ChecksumTest() {
        // TODO: test sha256Checksum
    }

    /**
     * Test the property 'shareable'
     */
    @Test
    public void shareableTest() {
        // TODO: test shareable
    }

    /**
     * Test the property 'shared'
     */
    @Test
    public void sharedTest() {
        // TODO: test shared
    }

    /**
     * Test the property 'sharedWithMeDate'
     */
    @Test
    public void sharedWithMeDateTest() {
        // TODO: test sharedWithMeDate
    }

    /**
     * Test the property 'sharingUser'
     */
    @Test
    public void sharingUserTest() {
        // TODO: test sharingUser
    }

    /**
     * Test the property 'shortcutDetails'
     */
    @Test
    public void shortcutDetailsTest() {
        // TODO: test shortcutDetails
    }

    /**
     * Test the property 'spaces'
     */
    @Test
    public void spacesTest() {
        // TODO: test spaces
    }

    /**
     * Test the property 'teamDriveId'
     */
    @Test
    public void teamDriveIdTest() {
        // TODO: test teamDriveId
    }

    /**
     * Test the property 'thumbnail'
     */
    @Test
    public void thumbnailTest() {
        // TODO: test thumbnail
    }

    /**
     * Test the property 'thumbnailLink'
     */
    @Test
    public void thumbnailLinkTest() {
        // TODO: test thumbnailLink
    }

    /**
     * Test the property 'thumbnailVersion'
     */
    @Test
    public void thumbnailVersionTest() {
        // TODO: test thumbnailVersion
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'trashedDate'
     */
    @Test
    public void trashedDateTest() {
        // TODO: test trashedDate
    }

    /**
     * Test the property 'trashingUser'
     */
    @Test
    public void trashingUserTest() {
        // TODO: test trashingUser
    }

    /**
     * Test the property 'userPermission'
     */
    @Test
    public void userPermissionTest() {
        // TODO: test userPermission
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'videoMediaMetadata'
     */
    @Test
    public void videoMediaMetadataTest() {
        // TODO: test videoMediaMetadata
    }

    /**
     * Test the property 'webContentLink'
     */
    @Test
    public void webContentLinkTest() {
        // TODO: test webContentLink
    }

    /**
     * Test the property 'webViewLink'
     */
    @Test
    public void webViewLinkTest() {
        // TODO: test webViewLink
    }

    /**
     * Test the property 'writersCanShare'
     */
    @Test
    public void writersCanShareTest() {
        // TODO: test writersCanShare
    }

}
