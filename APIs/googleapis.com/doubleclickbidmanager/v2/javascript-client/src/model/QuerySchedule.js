/**
 * DoubleClick Bid Manager API
 * DoubleClick Bid Manager API allows users to manage and create campaigns and reports.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelDate from './ModelDate';

/**
 * The QuerySchedule model module.
 * @module model/QuerySchedule
 * @version v2
 */
class QuerySchedule {
    /**
     * Constructs a new <code>QuerySchedule</code>.
     * Information on when and how frequently to run a query.
     * @alias module:model/QuerySchedule
     */
    constructor() { 
        
        QuerySchedule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QuerySchedule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QuerySchedule} obj Optional instance to populate.
     * @return {module:model/QuerySchedule} The populated <code>QuerySchedule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuerySchedule();

            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ModelDate.constructFromObject(data['endDate']);
            }
            if (data.hasOwnProperty('frequency')) {
                obj['frequency'] = ApiClient.convertToType(data['frequency'], 'String');
            }
            if (data.hasOwnProperty('nextRunTimezoneCode')) {
                obj['nextRunTimezoneCode'] = ApiClient.convertToType(data['nextRunTimezoneCode'], 'String');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ModelDate.constructFromObject(data['startDate']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QuerySchedule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QuerySchedule</code>.
     */
    static validateJSON(data) {
        // validate the optional field `endDate`
        if (data['endDate']) { // data not null
          ModelDate.validateJSON(data['endDate']);
        }
        // ensure the json data is a string
        if (data['frequency'] && !(typeof data['frequency'] === 'string' || data['frequency'] instanceof String)) {
            throw new Error("Expected the field `frequency` to be a primitive type in the JSON string but got " + data['frequency']);
        }
        // ensure the json data is a string
        if (data['nextRunTimezoneCode'] && !(typeof data['nextRunTimezoneCode'] === 'string' || data['nextRunTimezoneCode'] instanceof String)) {
            throw new Error("Expected the field `nextRunTimezoneCode` to be a primitive type in the JSON string but got " + data['nextRunTimezoneCode']);
        }
        // validate the optional field `startDate`
        if (data['startDate']) { // data not null
          ModelDate.validateJSON(data['startDate']);
        }

        return true;
    }


}



/**
 * @member {module:model/ModelDate} endDate
 */
QuerySchedule.prototype['endDate'] = undefined;

/**
 * How often the query is run.
 * @member {module:model/QuerySchedule.FrequencyEnum} frequency
 */
QuerySchedule.prototype['frequency'] = undefined;

/**
 * Canonical timezone code for report generation time. Defaults to `America/New_York`.
 * @member {String} nextRunTimezoneCode
 */
QuerySchedule.prototype['nextRunTimezoneCode'] = undefined;

/**
 * @member {module:model/ModelDate} startDate
 */
QuerySchedule.prototype['startDate'] = undefined;





/**
 * Allowed values for the <code>frequency</code> property.
 * @enum {String}
 * @readonly
 */
QuerySchedule['FrequencyEnum'] = {

    /**
     * value: "FREQUENCY_UNSPECIFIED"
     * @const
     */
    "FREQUENCY_UNSPECIFIED": "FREQUENCY_UNSPECIFIED",

    /**
     * value: "ONE_TIME"
     * @const
     */
    "ONE_TIME": "ONE_TIME",

    /**
     * value: "DAILY"
     * @const
     */
    "DAILY": "DAILY",

    /**
     * value: "WEEKLY"
     * @const
     */
    "WEEKLY": "WEEKLY",

    /**
     * value: "SEMI_MONTHLY"
     * @const
     */
    "SEMI_MONTHLY": "SEMI_MONTHLY",

    /**
     * value: "MONTHLY"
     * @const
     */
    "MONTHLY": "MONTHLY",

    /**
     * value: "QUARTERLY"
     * @const
     */
    "QUARTERLY": "QUARTERLY",

    /**
     * value: "YEARLY"
     * @const
     */
    "YEARLY": "YEARLY"
};



export default QuerySchedule;

