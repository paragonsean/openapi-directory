/**
 * DoubleClick Bid Manager API
 * DoubleClick Bid Manager API allows users to manage and create campaigns and reports.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DataRange from './DataRange';

/**
 * The QueryMetadata model module.
 * @module model/QueryMetadata
 * @version v2
 */
class QueryMetadata {
    /**
     * Constructs a new <code>QueryMetadata</code>.
     * Query metadata.
     * @alias module:model/QueryMetadata
     */
    constructor() { 
        
        QueryMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QueryMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryMetadata} obj Optional instance to populate.
     * @return {module:model/QueryMetadata} The populated <code>QueryMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryMetadata();

            if (data.hasOwnProperty('dataRange')) {
                obj['dataRange'] = DataRange.constructFromObject(data['dataRange']);
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], 'String');
            }
            if (data.hasOwnProperty('sendNotification')) {
                obj['sendNotification'] = ApiClient.convertToType(data['sendNotification'], 'Boolean');
            }
            if (data.hasOwnProperty('shareEmailAddress')) {
                obj['shareEmailAddress'] = ApiClient.convertToType(data['shareEmailAddress'], ['String']);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueryMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueryMetadata</code>.
     */
    static validateJSON(data) {
        // validate the optional field `dataRange`
        if (data['dataRange']) { // data not null
          DataRange.validateJSON(data['dataRange']);
        }
        // ensure the json data is a string
        if (data['format'] && !(typeof data['format'] === 'string' || data['format'] instanceof String)) {
            throw new Error("Expected the field `format` to be a primitive type in the JSON string but got " + data['format']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['shareEmailAddress'])) {
            throw new Error("Expected the field `shareEmailAddress` to be an array in the JSON data but got " + data['shareEmailAddress']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * @member {module:model/DataRange} dataRange
 */
QueryMetadata.prototype['dataRange'] = undefined;

/**
 * Format of the generated report.
 * @member {module:model/QueryMetadata.FormatEnum} format
 */
QueryMetadata.prototype['format'] = undefined;

/**
 * Whether to send an email notification when a report is ready. Defaults to false.
 * @member {Boolean} sendNotification
 */
QueryMetadata.prototype['sendNotification'] = undefined;

/**
 * List of email addresses which are sent email notifications when the report is finished. Separate from send_notification.
 * @member {Array.<String>} shareEmailAddress
 */
QueryMetadata.prototype['shareEmailAddress'] = undefined;

/**
 * Query title. It is used to name the reports generated from this query.
 * @member {String} title
 */
QueryMetadata.prototype['title'] = undefined;





/**
 * Allowed values for the <code>format</code> property.
 * @enum {String}
 * @readonly
 */
QueryMetadata['FormatEnum'] = {

    /**
     * value: "FORMAT_UNSPECIFIED"
     * @const
     */
    "FORMAT_UNSPECIFIED": "FORMAT_UNSPECIFIED",

    /**
     * value: "CSV"
     * @const
     */
    "CSV": "CSV",

    /**
     * value: "XLSX"
     * @const
     */
    "XLSX": "XLSX"
};



export default QueryMetadata;

