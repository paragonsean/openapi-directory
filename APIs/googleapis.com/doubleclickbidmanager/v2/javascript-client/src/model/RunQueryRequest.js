/**
 * DoubleClick Bid Manager API
 * DoubleClick Bid Manager API allows users to manage and create campaigns and reports.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DataRange from './DataRange';

/**
 * The RunQueryRequest model module.
 * @module model/RunQueryRequest
 * @version v2
 */
class RunQueryRequest {
    /**
     * Constructs a new <code>RunQueryRequest</code>.
     * Request to run a stored query to generate a report.
     * @alias module:model/RunQueryRequest
     */
    constructor() { 
        
        RunQueryRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RunQueryRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RunQueryRequest} obj Optional instance to populate.
     * @return {module:model/RunQueryRequest} The populated <code>RunQueryRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RunQueryRequest();

            if (data.hasOwnProperty('dataRange')) {
                obj['dataRange'] = DataRange.constructFromObject(data['dataRange']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RunQueryRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RunQueryRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `dataRange`
        if (data['dataRange']) { // data not null
          DataRange.validateJSON(data['dataRange']);
        }

        return true;
    }


}



/**
 * @member {module:model/DataRange} dataRange
 */
RunQueryRequest.prototype['dataRange'] = undefined;






export default RunQueryRequest;

