# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.parameters import Parameters
from openapi_server.models.report_key import ReportKey
from openapi_server.models.report_metadata import ReportMetadata
from openapi_server import util


class Report(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key: ReportKey=None, metadata: ReportMetadata=None, params: Parameters=None):
        """Report - a model defined in OpenAPI

        :param key: The key of this Report.
        :param metadata: The metadata of this Report.
        :param params: The params of this Report.
        """
        self.openapi_types = {
            'key': ReportKey,
            'metadata': ReportMetadata,
            'params': Parameters
        }

        self.attribute_map = {
            'key': 'key',
            'metadata': 'metadata',
            'params': 'params'
        }

        self._key = key
        self._metadata = metadata
        self._params = params

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Report':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Report of this Report.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key(self):
        """Gets the key of this Report.


        :return: The key of this Report.
        :rtype: ReportKey
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this Report.


        :param key: The key of this Report.
        :type key: ReportKey
        """

        self._key = key

    @property
    def metadata(self):
        """Gets the metadata of this Report.


        :return: The metadata of this Report.
        :rtype: ReportMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this Report.


        :param metadata: The metadata of this Report.
        :type metadata: ReportMetadata
        """

        self._metadata = metadata

    @property
    def params(self):
        """Gets the params of this Report.


        :return: The params of this Report.
        :rtype: Parameters
        """
        return self._params

    @params.setter
    def params(self, params):
        """Sets the params of this Report.


        :param params: The params of this Report.
        :type params: Parameters
        """

        self._params = params
