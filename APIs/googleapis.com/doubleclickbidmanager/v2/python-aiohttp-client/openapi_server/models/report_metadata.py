# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_date import ModelDate
from openapi_server.models.report_status import ReportStatus
from openapi_server import util


class ReportMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, google_cloud_storage_path: str=None, report_data_end_date: ModelDate=None, report_data_start_date: ModelDate=None, status: ReportStatus=None):
        """ReportMetadata - a model defined in OpenAPI

        :param google_cloud_storage_path: The google_cloud_storage_path of this ReportMetadata.
        :param report_data_end_date: The report_data_end_date of this ReportMetadata.
        :param report_data_start_date: The report_data_start_date of this ReportMetadata.
        :param status: The status of this ReportMetadata.
        """
        self.openapi_types = {
            'google_cloud_storage_path': str,
            'report_data_end_date': ModelDate,
            'report_data_start_date': ModelDate,
            'status': ReportStatus
        }

        self.attribute_map = {
            'google_cloud_storage_path': 'googleCloudStoragePath',
            'report_data_end_date': 'reportDataEndDate',
            'report_data_start_date': 'reportDataStartDate',
            'status': 'status'
        }

        self._google_cloud_storage_path = google_cloud_storage_path
        self._report_data_end_date = report_data_end_date
        self._report_data_start_date = report_data_start_date
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportMetadata of this ReportMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def google_cloud_storage_path(self):
        """Gets the google_cloud_storage_path of this ReportMetadata.

        Output only. The path to the location in Google Cloud Storage where the report is stored.

        :return: The google_cloud_storage_path of this ReportMetadata.
        :rtype: str
        """
        return self._google_cloud_storage_path

    @google_cloud_storage_path.setter
    def google_cloud_storage_path(self, google_cloud_storage_path):
        """Sets the google_cloud_storage_path of this ReportMetadata.

        Output only. The path to the location in Google Cloud Storage where the report is stored.

        :param google_cloud_storage_path: The google_cloud_storage_path of this ReportMetadata.
        :type google_cloud_storage_path: str
        """

        self._google_cloud_storage_path = google_cloud_storage_path

    @property
    def report_data_end_date(self):
        """Gets the report_data_end_date of this ReportMetadata.


        :return: The report_data_end_date of this ReportMetadata.
        :rtype: ModelDate
        """
        return self._report_data_end_date

    @report_data_end_date.setter
    def report_data_end_date(self, report_data_end_date):
        """Sets the report_data_end_date of this ReportMetadata.


        :param report_data_end_date: The report_data_end_date of this ReportMetadata.
        :type report_data_end_date: ModelDate
        """

        self._report_data_end_date = report_data_end_date

    @property
    def report_data_start_date(self):
        """Gets the report_data_start_date of this ReportMetadata.


        :return: The report_data_start_date of this ReportMetadata.
        :rtype: ModelDate
        """
        return self._report_data_start_date

    @report_data_start_date.setter
    def report_data_start_date(self, report_data_start_date):
        """Sets the report_data_start_date of this ReportMetadata.


        :param report_data_start_date: The report_data_start_date of this ReportMetadata.
        :type report_data_start_date: ModelDate
        """

        self._report_data_start_date = report_data_start_date

    @property
    def status(self):
        """Gets the status of this ReportMetadata.


        :return: The status of this ReportMetadata.
        :rtype: ReportStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ReportMetadata.


        :param status: The status of this ReportMetadata.
        :type status: ReportStatus
        """

        self._status = status
