# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.path_query_options import PathQueryOptions
from openapi_server import util


class Options(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, include_only_targeted_user_lists: bool=None, path_query_options: PathQueryOptions=None):
        """Options - a model defined in OpenAPI

        :param include_only_targeted_user_lists: The include_only_targeted_user_lists of this Options.
        :param path_query_options: The path_query_options of this Options.
        """
        self.openapi_types = {
            'include_only_targeted_user_lists': bool,
            'path_query_options': PathQueryOptions
        }

        self.attribute_map = {
            'include_only_targeted_user_lists': 'includeOnlyTargetedUserLists',
            'path_query_options': 'pathQueryOptions'
        }

        self._include_only_targeted_user_lists = include_only_targeted_user_lists
        self._path_query_options = path_query_options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Options':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Options of this Options.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def include_only_targeted_user_lists(self):
        """Gets the include_only_targeted_user_lists of this Options.

        Set to true and filter your report by `FILTER_INSERTION_ORDER` or `FILTER_LINE_ITEM` to include data for audience lists specifically targeted by those items.

        :return: The include_only_targeted_user_lists of this Options.
        :rtype: bool
        """
        return self._include_only_targeted_user_lists

    @include_only_targeted_user_lists.setter
    def include_only_targeted_user_lists(self, include_only_targeted_user_lists):
        """Sets the include_only_targeted_user_lists of this Options.

        Set to true and filter your report by `FILTER_INSERTION_ORDER` or `FILTER_LINE_ITEM` to include data for audience lists specifically targeted by those items.

        :param include_only_targeted_user_lists: The include_only_targeted_user_lists of this Options.
        :type include_only_targeted_user_lists: bool
        """

        self._include_only_targeted_user_lists = include_only_targeted_user_lists

    @property
    def path_query_options(self):
        """Gets the path_query_options of this Options.


        :return: The path_query_options of this Options.
        :rtype: PathQueryOptions
        """
        return self._path_query_options

    @path_query_options.setter
    def path_query_options(self, path_query_options):
        """Sets the path_query_options of this Options.


        :param path_query_options: The path_query_options of this Options.
        :type path_query_options: PathQueryOptions
        """

        self._path_query_options = path_query_options
