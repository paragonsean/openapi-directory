# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.query import Query
from openapi_server import util


class ListQueriesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: str=None, next_page_token: str=None, queries: List[Query]=None):
        """ListQueriesResponse - a model defined in OpenAPI

        :param kind: The kind of this ListQueriesResponse.
        :param next_page_token: The next_page_token of this ListQueriesResponse.
        :param queries: The queries of this ListQueriesResponse.
        """
        self.openapi_types = {
            'kind': str,
            'next_page_token': str,
            'queries': List[Query]
        }

        self.attribute_map = {
            'kind': 'kind',
            'next_page_token': 'nextPageToken',
            'queries': 'queries'
        }

        self._kind = kind
        self._next_page_token = next_page_token
        self._queries = queries

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListQueriesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListQueriesResponse of this ListQueriesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this ListQueriesResponse.

        Identifies what kind of resource this is. Value: the fixed string \"doubleclickbidmanager#listQueriesResponse\".

        :return: The kind of this ListQueriesResponse.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ListQueriesResponse.

        Identifies what kind of resource this is. Value: the fixed string \"doubleclickbidmanager#listQueriesResponse\".

        :param kind: The kind of this ListQueriesResponse.
        :type kind: str
        """

        self._kind = kind

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListQueriesResponse.

        Next page's pagination token if one exists.

        :return: The next_page_token of this ListQueriesResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListQueriesResponse.

        Next page's pagination token if one exists.

        :param next_page_token: The next_page_token of this ListQueriesResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def queries(self):
        """Gets the queries of this ListQueriesResponse.

        Retrieved queries.

        :return: The queries of this ListQueriesResponse.
        :rtype: List[Query]
        """
        return self._queries

    @queries.setter
    def queries(self, queries):
        """Sets the queries of this ListQueriesResponse.

        Retrieved queries.

        :param queries: The queries of this ListQueriesResponse.
        :type queries: List[Query]
        """

        self._queries = queries
