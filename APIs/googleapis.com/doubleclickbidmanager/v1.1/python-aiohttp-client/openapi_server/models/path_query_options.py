# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.channel_grouping import ChannelGrouping
from openapi_server.models.path_filter import PathFilter
from openapi_server import util


class PathQueryOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel_grouping: ChannelGrouping=None, path_filters: List[PathFilter]=None):
        """PathQueryOptions - a model defined in OpenAPI

        :param channel_grouping: The channel_grouping of this PathQueryOptions.
        :param path_filters: The path_filters of this PathQueryOptions.
        """
        self.openapi_types = {
            'channel_grouping': ChannelGrouping,
            'path_filters': List[PathFilter]
        }

        self.attribute_map = {
            'channel_grouping': 'channelGrouping',
            'path_filters': 'pathFilters'
        }

        self._channel_grouping = channel_grouping
        self._path_filters = path_filters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PathQueryOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PathQueryOptions of this PathQueryOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel_grouping(self):
        """Gets the channel_grouping of this PathQueryOptions.


        :return: The channel_grouping of this PathQueryOptions.
        :rtype: ChannelGrouping
        """
        return self._channel_grouping

    @channel_grouping.setter
    def channel_grouping(self, channel_grouping):
        """Sets the channel_grouping of this PathQueryOptions.


        :param channel_grouping: The channel_grouping of this PathQueryOptions.
        :type channel_grouping: ChannelGrouping
        """

        self._channel_grouping = channel_grouping

    @property
    def path_filters(self):
        """Gets the path_filters of this PathQueryOptions.

        Path Filters. There is a limit of 100 path filters that can be set per report.

        :return: The path_filters of this PathQueryOptions.
        :rtype: List[PathFilter]
        """
        return self._path_filters

    @path_filters.setter
    def path_filters(self, path_filters):
        """Sets the path_filters of this PathQueryOptions.

        Path Filters. There is a limit of 100 path filters that can be set per report.

        :param path_filters: The path_filters of this PathQueryOptions.
        :type path_filters: List[PathFilter]
        """

        self._path_filters = path_filters
