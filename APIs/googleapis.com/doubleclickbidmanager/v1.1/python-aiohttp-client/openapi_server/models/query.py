# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.parameters import Parameters
from openapi_server.models.query_metadata import QueryMetadata
from openapi_server.models.query_schedule import QuerySchedule
from openapi_server import util


class Query(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: str=None, metadata: QueryMetadata=None, params: Parameters=None, query_id: str=None, report_data_end_time_ms: str=None, report_data_start_time_ms: str=None, schedule: QuerySchedule=None, timezone_code: str=None):
        """Query - a model defined in OpenAPI

        :param kind: The kind of this Query.
        :param metadata: The metadata of this Query.
        :param params: The params of this Query.
        :param query_id: The query_id of this Query.
        :param report_data_end_time_ms: The report_data_end_time_ms of this Query.
        :param report_data_start_time_ms: The report_data_start_time_ms of this Query.
        :param schedule: The schedule of this Query.
        :param timezone_code: The timezone_code of this Query.
        """
        self.openapi_types = {
            'kind': str,
            'metadata': QueryMetadata,
            'params': Parameters,
            'query_id': str,
            'report_data_end_time_ms': str,
            'report_data_start_time_ms': str,
            'schedule': QuerySchedule,
            'timezone_code': str
        }

        self.attribute_map = {
            'kind': 'kind',
            'metadata': 'metadata',
            'params': 'params',
            'query_id': 'queryId',
            'report_data_end_time_ms': 'reportDataEndTimeMs',
            'report_data_start_time_ms': 'reportDataStartTimeMs',
            'schedule': 'schedule',
            'timezone_code': 'timezoneCode'
        }

        self._kind = kind
        self._metadata = metadata
        self._params = params
        self._query_id = query_id
        self._report_data_end_time_ms = report_data_end_time_ms
        self._report_data_start_time_ms = report_data_start_time_ms
        self._schedule = schedule
        self._timezone_code = timezone_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Query':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Query of this Query.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this Query.

        Identifies what kind of resource this is. Value: the fixed string \"doubleclickbidmanager#query\".

        :return: The kind of this Query.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Query.

        Identifies what kind of resource this is. Value: the fixed string \"doubleclickbidmanager#query\".

        :param kind: The kind of this Query.
        :type kind: str
        """

        self._kind = kind

    @property
    def metadata(self):
        """Gets the metadata of this Query.


        :return: The metadata of this Query.
        :rtype: QueryMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this Query.


        :param metadata: The metadata of this Query.
        :type metadata: QueryMetadata
        """

        self._metadata = metadata

    @property
    def params(self):
        """Gets the params of this Query.


        :return: The params of this Query.
        :rtype: Parameters
        """
        return self._params

    @params.setter
    def params(self, params):
        """Sets the params of this Query.


        :param params: The params of this Query.
        :type params: Parameters
        """

        self._params = params

    @property
    def query_id(self):
        """Gets the query_id of this Query.

        Query ID.

        :return: The query_id of this Query.
        :rtype: str
        """
        return self._query_id

    @query_id.setter
    def query_id(self, query_id):
        """Sets the query_id of this Query.

        Query ID.

        :param query_id: The query_id of this Query.
        :type query_id: str
        """

        self._query_id = query_id

    @property
    def report_data_end_time_ms(self):
        """Gets the report_data_end_time_ms of this Query.

        The ending time for the data that is shown in the report. Note, reportDataEndTimeMs is required if metadata.dataRange is CUSTOM_DATES and ignored otherwise.

        :return: The report_data_end_time_ms of this Query.
        :rtype: str
        """
        return self._report_data_end_time_ms

    @report_data_end_time_ms.setter
    def report_data_end_time_ms(self, report_data_end_time_ms):
        """Sets the report_data_end_time_ms of this Query.

        The ending time for the data that is shown in the report. Note, reportDataEndTimeMs is required if metadata.dataRange is CUSTOM_DATES and ignored otherwise.

        :param report_data_end_time_ms: The report_data_end_time_ms of this Query.
        :type report_data_end_time_ms: str
        """

        self._report_data_end_time_ms = report_data_end_time_ms

    @property
    def report_data_start_time_ms(self):
        """Gets the report_data_start_time_ms of this Query.

        The starting time for the data that is shown in the report. Note, reportDataStartTimeMs is required if metadata.dataRange is CUSTOM_DATES and ignored otherwise.

        :return: The report_data_start_time_ms of this Query.
        :rtype: str
        """
        return self._report_data_start_time_ms

    @report_data_start_time_ms.setter
    def report_data_start_time_ms(self, report_data_start_time_ms):
        """Sets the report_data_start_time_ms of this Query.

        The starting time for the data that is shown in the report. Note, reportDataStartTimeMs is required if metadata.dataRange is CUSTOM_DATES and ignored otherwise.

        :param report_data_start_time_ms: The report_data_start_time_ms of this Query.
        :type report_data_start_time_ms: str
        """

        self._report_data_start_time_ms = report_data_start_time_ms

    @property
    def schedule(self):
        """Gets the schedule of this Query.


        :return: The schedule of this Query.
        :rtype: QuerySchedule
        """
        return self._schedule

    @schedule.setter
    def schedule(self, schedule):
        """Sets the schedule of this Query.


        :param schedule: The schedule of this Query.
        :type schedule: QuerySchedule
        """

        self._schedule = schedule

    @property
    def timezone_code(self):
        """Gets the timezone_code of this Query.

        Canonical timezone code for report data time. Defaults to America/New_York.

        :return: The timezone_code of this Query.
        :rtype: str
        """
        return self._timezone_code

    @timezone_code.setter
    def timezone_code(self, timezone_code):
        """Sets the timezone_code of this Query.

        Canonical timezone code for report data time. Defaults to America/New_York.

        :param timezone_code: The timezone_code of this Query.
        :type timezone_code: str
        """

        self._timezone_code = timezone_code
