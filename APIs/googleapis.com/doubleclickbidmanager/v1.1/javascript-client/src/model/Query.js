/**
 * DoubleClick Bid Manager API
 * DoubleClick Bid Manager API allows users to manage and create campaigns and reports.
 *
 * The version of the OpenAPI document: v1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Parameters from './Parameters';
import QueryMetadata from './QueryMetadata';
import QuerySchedule from './QuerySchedule';

/**
 * The Query model module.
 * @module model/Query
 * @version v1.1
 */
class Query {
    /**
     * Constructs a new <code>Query</code>.
     * Represents a query.
     * @alias module:model/Query
     */
    constructor() { 
        
        Query.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Query</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Query} obj Optional instance to populate.
     * @return {module:model/Query} The populated <code>Query</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Query();

            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = QueryMetadata.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('params')) {
                obj['params'] = Parameters.constructFromObject(data['params']);
            }
            if (data.hasOwnProperty('queryId')) {
                obj['queryId'] = ApiClient.convertToType(data['queryId'], 'String');
            }
            if (data.hasOwnProperty('reportDataEndTimeMs')) {
                obj['reportDataEndTimeMs'] = ApiClient.convertToType(data['reportDataEndTimeMs'], 'String');
            }
            if (data.hasOwnProperty('reportDataStartTimeMs')) {
                obj['reportDataStartTimeMs'] = ApiClient.convertToType(data['reportDataStartTimeMs'], 'String');
            }
            if (data.hasOwnProperty('schedule')) {
                obj['schedule'] = QuerySchedule.constructFromObject(data['schedule']);
            }
            if (data.hasOwnProperty('timezoneCode')) {
                obj['timezoneCode'] = ApiClient.convertToType(data['timezoneCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Query</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Query</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          QueryMetadata.validateJSON(data['metadata']);
        }
        // validate the optional field `params`
        if (data['params']) { // data not null
          Parameters.validateJSON(data['params']);
        }
        // ensure the json data is a string
        if (data['queryId'] && !(typeof data['queryId'] === 'string' || data['queryId'] instanceof String)) {
            throw new Error("Expected the field `queryId` to be a primitive type in the JSON string but got " + data['queryId']);
        }
        // ensure the json data is a string
        if (data['reportDataEndTimeMs'] && !(typeof data['reportDataEndTimeMs'] === 'string' || data['reportDataEndTimeMs'] instanceof String)) {
            throw new Error("Expected the field `reportDataEndTimeMs` to be a primitive type in the JSON string but got " + data['reportDataEndTimeMs']);
        }
        // ensure the json data is a string
        if (data['reportDataStartTimeMs'] && !(typeof data['reportDataStartTimeMs'] === 'string' || data['reportDataStartTimeMs'] instanceof String)) {
            throw new Error("Expected the field `reportDataStartTimeMs` to be a primitive type in the JSON string but got " + data['reportDataStartTimeMs']);
        }
        // validate the optional field `schedule`
        if (data['schedule']) { // data not null
          QuerySchedule.validateJSON(data['schedule']);
        }
        // ensure the json data is a string
        if (data['timezoneCode'] && !(typeof data['timezoneCode'] === 'string' || data['timezoneCode'] instanceof String)) {
            throw new Error("Expected the field `timezoneCode` to be a primitive type in the JSON string but got " + data['timezoneCode']);
        }

        return true;
    }


}



/**
 * Identifies what kind of resource this is. Value: the fixed string \"doubleclickbidmanager#query\".
 * @member {String} kind
 */
Query.prototype['kind'] = undefined;

/**
 * @member {module:model/QueryMetadata} metadata
 */
Query.prototype['metadata'] = undefined;

/**
 * @member {module:model/Parameters} params
 */
Query.prototype['params'] = undefined;

/**
 * Query ID.
 * @member {String} queryId
 */
Query.prototype['queryId'] = undefined;

/**
 * The ending time for the data that is shown in the report. Note, reportDataEndTimeMs is required if metadata.dataRange is CUSTOM_DATES and ignored otherwise.
 * @member {String} reportDataEndTimeMs
 */
Query.prototype['reportDataEndTimeMs'] = undefined;

/**
 * The starting time for the data that is shown in the report. Note, reportDataStartTimeMs is required if metadata.dataRange is CUSTOM_DATES and ignored otherwise.
 * @member {String} reportDataStartTimeMs
 */
Query.prototype['reportDataStartTimeMs'] = undefined;

/**
 * @member {module:model/QuerySchedule} schedule
 */
Query.prototype['schedule'] = undefined;

/**
 * Canonical timezone code for report data time. Defaults to America/New_York.
 * @member {String} timezoneCode
 */
Query.prototype['timezoneCode'] = undefined;






export default Query;

