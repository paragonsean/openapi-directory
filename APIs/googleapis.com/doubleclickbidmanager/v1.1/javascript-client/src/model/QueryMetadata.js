/**
 * DoubleClick Bid Manager API
 * DoubleClick Bid Manager API allows users to manage and create campaigns and reports.
 *
 * The version of the OpenAPI document: v1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QueryMetadata model module.
 * @module model/QueryMetadata
 * @version v1.1
 */
class QueryMetadata {
    /**
     * Constructs a new <code>QueryMetadata</code>.
     * Query metadata.
     * @alias module:model/QueryMetadata
     */
    constructor() { 
        
        QueryMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QueryMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryMetadata} obj Optional instance to populate.
     * @return {module:model/QueryMetadata} The populated <code>QueryMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryMetadata();

            if (data.hasOwnProperty('dataRange')) {
                obj['dataRange'] = ApiClient.convertToType(data['dataRange'], 'String');
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], 'String');
            }
            if (data.hasOwnProperty('googleCloudStoragePathForLatestReport')) {
                obj['googleCloudStoragePathForLatestReport'] = ApiClient.convertToType(data['googleCloudStoragePathForLatestReport'], 'String');
            }
            if (data.hasOwnProperty('googleDrivePathForLatestReport')) {
                obj['googleDrivePathForLatestReport'] = ApiClient.convertToType(data['googleDrivePathForLatestReport'], 'String');
            }
            if (data.hasOwnProperty('latestReportRunTimeMs')) {
                obj['latestReportRunTimeMs'] = ApiClient.convertToType(data['latestReportRunTimeMs'], 'String');
            }
            if (data.hasOwnProperty('locale')) {
                obj['locale'] = ApiClient.convertToType(data['locale'], 'String');
            }
            if (data.hasOwnProperty('reportCount')) {
                obj['reportCount'] = ApiClient.convertToType(data['reportCount'], 'Number');
            }
            if (data.hasOwnProperty('running')) {
                obj['running'] = ApiClient.convertToType(data['running'], 'Boolean');
            }
            if (data.hasOwnProperty('sendNotification')) {
                obj['sendNotification'] = ApiClient.convertToType(data['sendNotification'], 'Boolean');
            }
            if (data.hasOwnProperty('shareEmailAddress')) {
                obj['shareEmailAddress'] = ApiClient.convertToType(data['shareEmailAddress'], ['String']);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueryMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueryMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dataRange'] && !(typeof data['dataRange'] === 'string' || data['dataRange'] instanceof String)) {
            throw new Error("Expected the field `dataRange` to be a primitive type in the JSON string but got " + data['dataRange']);
        }
        // ensure the json data is a string
        if (data['format'] && !(typeof data['format'] === 'string' || data['format'] instanceof String)) {
            throw new Error("Expected the field `format` to be a primitive type in the JSON string but got " + data['format']);
        }
        // ensure the json data is a string
        if (data['googleCloudStoragePathForLatestReport'] && !(typeof data['googleCloudStoragePathForLatestReport'] === 'string' || data['googleCloudStoragePathForLatestReport'] instanceof String)) {
            throw new Error("Expected the field `googleCloudStoragePathForLatestReport` to be a primitive type in the JSON string but got " + data['googleCloudStoragePathForLatestReport']);
        }
        // ensure the json data is a string
        if (data['googleDrivePathForLatestReport'] && !(typeof data['googleDrivePathForLatestReport'] === 'string' || data['googleDrivePathForLatestReport'] instanceof String)) {
            throw new Error("Expected the field `googleDrivePathForLatestReport` to be a primitive type in the JSON string but got " + data['googleDrivePathForLatestReport']);
        }
        // ensure the json data is a string
        if (data['latestReportRunTimeMs'] && !(typeof data['latestReportRunTimeMs'] === 'string' || data['latestReportRunTimeMs'] instanceof String)) {
            throw new Error("Expected the field `latestReportRunTimeMs` to be a primitive type in the JSON string but got " + data['latestReportRunTimeMs']);
        }
        // ensure the json data is a string
        if (data['locale'] && !(typeof data['locale'] === 'string' || data['locale'] instanceof String)) {
            throw new Error("Expected the field `locale` to be a primitive type in the JSON string but got " + data['locale']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['shareEmailAddress'])) {
            throw new Error("Expected the field `shareEmailAddress` to be an array in the JSON data but got " + data['shareEmailAddress']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * Range of report data.
 * @member {module:model/QueryMetadata.DataRangeEnum} dataRange
 */
QueryMetadata.prototype['dataRange'] = undefined;

/**
 * Format of the generated report.
 * @member {module:model/QueryMetadata.FormatEnum} format
 */
QueryMetadata.prototype['format'] = undefined;

/**
 * The path to the location in Google Cloud Storage where the latest report is stored.
 * @member {String} googleCloudStoragePathForLatestReport
 */
QueryMetadata.prototype['googleCloudStoragePathForLatestReport'] = undefined;

/**
 * The path in Google Drive for the latest report.
 * @member {String} googleDrivePathForLatestReport
 */
QueryMetadata.prototype['googleDrivePathForLatestReport'] = undefined;

/**
 * The time when the latest report started to run.
 * @member {String} latestReportRunTimeMs
 */
QueryMetadata.prototype['latestReportRunTimeMs'] = undefined;

/**
 * Locale of the generated reports. Valid values are cs CZECH de GERMAN en ENGLISH es SPANISH fr FRENCH it ITALIAN ja JAPANESE ko KOREAN pl POLISH pt-BR BRAZILIAN_PORTUGUESE ru RUSSIAN tr TURKISH uk UKRAINIAN zh-CN CHINA_CHINESE zh-TW TAIWAN_CHINESE An locale string not in the list above will generate reports in English.
 * @member {String} locale
 */
QueryMetadata.prototype['locale'] = undefined;

/**
 * Number of reports that have been generated for the query.
 * @member {Number} reportCount
 */
QueryMetadata.prototype['reportCount'] = undefined;

/**
 * Whether the latest report is currently running.
 * @member {Boolean} running
 */
QueryMetadata.prototype['running'] = undefined;

/**
 * Whether to send an email notification when a report is ready. Default to false.
 * @member {Boolean} sendNotification
 */
QueryMetadata.prototype['sendNotification'] = undefined;

/**
 * List of email addresses which are sent email notifications when the report is finished. Separate from sendNotification.
 * @member {Array.<String>} shareEmailAddress
 */
QueryMetadata.prototype['shareEmailAddress'] = undefined;

/**
 * Query title. It is used to name the reports generated from this query.
 * @member {String} title
 */
QueryMetadata.prototype['title'] = undefined;





/**
 * Allowed values for the <code>dataRange</code> property.
 * @enum {String}
 * @readonly
 */
QueryMetadata['DataRangeEnum'] = {

    /**
     * value: "CUSTOM_DATES"
     * @const
     */
    "CUSTOM_DATES": "CUSTOM_DATES",

    /**
     * value: "CURRENT_DAY"
     * @const
     */
    "CURRENT_DAY": "CURRENT_DAY",

    /**
     * value: "PREVIOUS_DAY"
     * @const
     */
    "PREVIOUS_DAY": "PREVIOUS_DAY",

    /**
     * value: "WEEK_TO_DATE"
     * @const
     */
    "WEEK_TO_DATE": "WEEK_TO_DATE",

    /**
     * value: "MONTH_TO_DATE"
     * @const
     */
    "MONTH_TO_DATE": "MONTH_TO_DATE",

    /**
     * value: "QUARTER_TO_DATE"
     * @const
     */
    "QUARTER_TO_DATE": "QUARTER_TO_DATE",

    /**
     * value: "YEAR_TO_DATE"
     * @const
     */
    "YEAR_TO_DATE": "YEAR_TO_DATE",

    /**
     * value: "PREVIOUS_WEEK"
     * @const
     */
    "PREVIOUS_WEEK": "PREVIOUS_WEEK",

    /**
     * value: "PREVIOUS_HALF_MONTH"
     * @const
     */
    "PREVIOUS_HALF_MONTH": "PREVIOUS_HALF_MONTH",

    /**
     * value: "PREVIOUS_MONTH"
     * @const
     */
    "PREVIOUS_MONTH": "PREVIOUS_MONTH",

    /**
     * value: "PREVIOUS_QUARTER"
     * @const
     */
    "PREVIOUS_QUARTER": "PREVIOUS_QUARTER",

    /**
     * value: "PREVIOUS_YEAR"
     * @const
     */
    "PREVIOUS_YEAR": "PREVIOUS_YEAR",

    /**
     * value: "LAST_7_DAYS"
     * @const
     */
    "LAST_7_DAYS": "LAST_7_DAYS",

    /**
     * value: "LAST_30_DAYS"
     * @const
     */
    "LAST_30_DAYS": "LAST_30_DAYS",

    /**
     * value: "LAST_90_DAYS"
     * @const
     */
    "LAST_90_DAYS": "LAST_90_DAYS",

    /**
     * value: "LAST_365_DAYS"
     * @const
     */
    "LAST_365_DAYS": "LAST_365_DAYS",

    /**
     * value: "ALL_TIME"
     * @const
     */
    "ALL_TIME": "ALL_TIME",

    /**
     * value: "LAST_14_DAYS"
     * @const
     */
    "LAST_14_DAYS": "LAST_14_DAYS",

    /**
     * value: "TYPE_NOT_SUPPORTED"
     * @const
     */
    "TYPE_NOT_SUPPORTED": "TYPE_NOT_SUPPORTED",

    /**
     * value: "LAST_60_DAYS"
     * @const
     */
    "LAST_60_DAYS": "LAST_60_DAYS"
};


/**
 * Allowed values for the <code>format</code> property.
 * @enum {String}
 * @readonly
 */
QueryMetadata['FormatEnum'] = {

    /**
     * value: "CSV"
     * @const
     */
    "CSV": "CSV",

    /**
     * value: "EXCEL_CSV"
     * @const
     */
    "EXCEL_CSV": "EXCEL_CSV",

    /**
     * value: "XLSX"
     * @const
     */
    "XLSX": "XLSX"
};



export default QueryMetadata;

