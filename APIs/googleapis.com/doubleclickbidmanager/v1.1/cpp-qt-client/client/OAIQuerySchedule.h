/**
 * DoubleClick Bid Manager API
 * DoubleClick Bid Manager API allows users to manage and create campaigns and reports.
 *
 * The version of the OpenAPI document: v1.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQuerySchedule.h
 *
 * Information on how frequently and when to run a query.
 */

#ifndef OAIQuerySchedule_H
#define OAIQuerySchedule_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIQuerySchedule : public OAIObject {
public:
    OAIQuerySchedule();
    OAIQuerySchedule(QString json);
    ~OAIQuerySchedule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEndTimeMs() const;
    void setEndTimeMs(const QString &end_time_ms);
    bool is_end_time_ms_Set() const;
    bool is_end_time_ms_Valid() const;

    QString getFrequency() const;
    void setFrequency(const QString &frequency);
    bool is_frequency_Set() const;
    bool is_frequency_Valid() const;

    qint32 getNextRunMinuteOfDay() const;
    void setNextRunMinuteOfDay(const qint32 &next_run_minute_of_day);
    bool is_next_run_minute_of_day_Set() const;
    bool is_next_run_minute_of_day_Valid() const;

    QString getNextRunTimezoneCode() const;
    void setNextRunTimezoneCode(const QString &next_run_timezone_code);
    bool is_next_run_timezone_code_Set() const;
    bool is_next_run_timezone_code_Valid() const;

    QString getStartTimeMs() const;
    void setStartTimeMs(const QString &start_time_ms);
    bool is_start_time_ms_Set() const;
    bool is_start_time_ms_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_end_time_ms;
    bool m_end_time_ms_isSet;
    bool m_end_time_ms_isValid;

    QString m_frequency;
    bool m_frequency_isSet;
    bool m_frequency_isValid;

    qint32 m_next_run_minute_of_day;
    bool m_next_run_minute_of_day_isSet;
    bool m_next_run_minute_of_day_isValid;

    QString m_next_run_timezone_code;
    bool m_next_run_timezone_code_isSet;
    bool m_next_run_timezone_code_isValid;

    QString m_start_time_ms;
    bool m_start_time_ms_isSet;
    bool m_start_time_ms_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQuerySchedule)

#endif // OAIQuerySchedule_H
