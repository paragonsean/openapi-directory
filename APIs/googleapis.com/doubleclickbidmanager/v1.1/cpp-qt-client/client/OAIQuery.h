/**
 * DoubleClick Bid Manager API
 * DoubleClick Bid Manager API allows users to manage and create campaigns and reports.
 *
 * The version of the OpenAPI document: v1.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQuery.h
 *
 * Represents a query.
 */

#ifndef OAIQuery_H
#define OAIQuery_H

#include <QJsonObject>

#include "OAIParameters.h"
#include "OAIQueryMetadata.h"
#include "OAIQuerySchedule.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIQueryMetadata;
class OAIParameters;
class OAIQuerySchedule;

class OAIQuery : public OAIObject {
public:
    OAIQuery();
    OAIQuery(QString json);
    ~OAIQuery() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    OAIQueryMetadata getMetadata() const;
    void setMetadata(const OAIQueryMetadata &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    OAIParameters getParams() const;
    void setParams(const OAIParameters &params);
    bool is_params_Set() const;
    bool is_params_Valid() const;

    QString getQueryId() const;
    void setQueryId(const QString &query_id);
    bool is_query_id_Set() const;
    bool is_query_id_Valid() const;

    QString getReportDataEndTimeMs() const;
    void setReportDataEndTimeMs(const QString &report_data_end_time_ms);
    bool is_report_data_end_time_ms_Set() const;
    bool is_report_data_end_time_ms_Valid() const;

    QString getReportDataStartTimeMs() const;
    void setReportDataStartTimeMs(const QString &report_data_start_time_ms);
    bool is_report_data_start_time_ms_Set() const;
    bool is_report_data_start_time_ms_Valid() const;

    OAIQuerySchedule getSchedule() const;
    void setSchedule(const OAIQuerySchedule &schedule);
    bool is_schedule_Set() const;
    bool is_schedule_Valid() const;

    QString getTimezoneCode() const;
    void setTimezoneCode(const QString &timezone_code);
    bool is_timezone_code_Set() const;
    bool is_timezone_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    OAIQueryMetadata m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    OAIParameters m_params;
    bool m_params_isSet;
    bool m_params_isValid;

    QString m_query_id;
    bool m_query_id_isSet;
    bool m_query_id_isValid;

    QString m_report_data_end_time_ms;
    bool m_report_data_end_time_ms_isSet;
    bool m_report_data_end_time_ms_isValid;

    QString m_report_data_start_time_ms;
    bool m_report_data_start_time_ms_isSet;
    bool m_report_data_start_time_ms_isValid;

    OAIQuerySchedule m_schedule;
    bool m_schedule_isSet;
    bool m_schedule_isValid;

    QString m_timezone_code;
    bool m_timezone_code_isSet;
    bool m_timezone_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQuery)

#endif // OAIQuery_H
