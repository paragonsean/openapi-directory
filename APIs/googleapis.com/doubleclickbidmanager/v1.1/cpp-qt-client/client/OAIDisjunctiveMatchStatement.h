/**
 * DoubleClick Bid Manager API
 * DoubleClick Bid Manager API allows users to manage and create campaigns and reports.
 *
 * The version of the OpenAPI document: v1.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDisjunctiveMatchStatement.h
 *
 * DisjunctiveMatchStatement that OR&#39;s all contained filters.
 */

#ifndef OAIDisjunctiveMatchStatement_H
#define OAIDisjunctiveMatchStatement_H

#include <QJsonObject>

#include "OAIEventFilter.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEventFilter;

class OAIDisjunctiveMatchStatement : public OAIObject {
public:
    OAIDisjunctiveMatchStatement();
    OAIDisjunctiveMatchStatement(QString json);
    ~OAIDisjunctiveMatchStatement() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIEventFilter> getEventFilters() const;
    void setEventFilters(const QList<OAIEventFilter> &event_filters);
    bool is_event_filters_Set() const;
    bool is_event_filters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIEventFilter> m_event_filters;
    bool m_event_filters_isSet;
    bool m_event_filters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDisjunctiveMatchStatement)

#endif // OAIDisjunctiveMatchStatement_H
