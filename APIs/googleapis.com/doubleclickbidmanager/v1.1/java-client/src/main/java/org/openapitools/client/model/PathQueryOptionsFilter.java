/*
 * DoubleClick Bid Manager API
 * DoubleClick Bid Manager API allows users to manage and create campaigns and reports.
 *
 * The version of the OpenAPI document: v1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Dimension Filter on path events.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:49:04.321334-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PathQueryOptionsFilter {
  /**
   * Dimension the filter is applied to.
   */
  @JsonAdapter(FilterEnum.Adapter.class)
  public enum FilterEnum {
    UNKNOWN("FILTER_UNKNOWN"),
    
    DATE("FILTER_DATE"),
    
    DAY_OF_WEEK("FILTER_DAY_OF_WEEK"),
    
    WEEK("FILTER_WEEK"),
    
    MONTH("FILTER_MONTH"),
    
    YEAR("FILTER_YEAR"),
    
    TIME_OF_DAY("FILTER_TIME_OF_DAY"),
    
    CONVERSION_DELAY("FILTER_CONVERSION_DELAY"),
    
    CREATIVE_ID("FILTER_CREATIVE_ID"),
    
    CREATIVE_SIZE("FILTER_CREATIVE_SIZE"),
    
    CREATIVE_TYPE("FILTER_CREATIVE_TYPE"),
    
    EXCHANGE_ID("FILTER_EXCHANGE_ID"),
    
    AD_POSITION("FILTER_AD_POSITION"),
    
    PUBLIC_INVENTORY("FILTER_PUBLIC_INVENTORY"),
    
    INVENTORY_SOURCE("FILTER_INVENTORY_SOURCE"),
    
    CITY("FILTER_CITY"),
    
    REGION("FILTER_REGION"),
    
    DMA("FILTER_DMA"),
    
    COUNTRY("FILTER_COUNTRY"),
    
    SITE_ID("FILTER_SITE_ID"),
    
    CHANNEL_ID("FILTER_CHANNEL_ID"),
    
    PARTNER("FILTER_PARTNER"),
    
    ADVERTISER("FILTER_ADVERTISER"),
    
    INSERTION_ORDER("FILTER_INSERTION_ORDER"),
    
    LINE_ITEM("FILTER_LINE_ITEM"),
    
    PARTNER_CURRENCY("FILTER_PARTNER_CURRENCY"),
    
    ADVERTISER_CURRENCY("FILTER_ADVERTISER_CURRENCY"),
    
    ADVERTISER_TIMEZONE("FILTER_ADVERTISER_TIMEZONE"),
    
    LINE_ITEM_TYPE("FILTER_LINE_ITEM_TYPE"),
    
    USER_LIST("FILTER_USER_LIST"),
    
    USER_LIST_FIRST_PARTY("FILTER_USER_LIST_FIRST_PARTY"),
    
    USER_LIST_THIRD_PARTY("FILTER_USER_LIST_THIRD_PARTY"),
    
    TARGETED_USER_LIST("FILTER_TARGETED_USER_LIST"),
    
    DATA_PROVIDER("FILTER_DATA_PROVIDER"),
    
    ORDER_ID("FILTER_ORDER_ID"),
    
    VIDEO_PLAYER_SIZE("FILTER_VIDEO_PLAYER_SIZE"),
    
    VIDEO_DURATION_SECONDS("FILTER_VIDEO_DURATION_SECONDS"),
    
    KEYWORD("FILTER_KEYWORD"),
    
    PAGE_CATEGORY("FILTER_PAGE_CATEGORY"),
    
    CAMPAIGN_DAILY_FREQUENCY("FILTER_CAMPAIGN_DAILY_FREQUENCY"),
    
    LINE_ITEM_DAILY_FREQUENCY("FILTER_LINE_ITEM_DAILY_FREQUENCY"),
    
    LINE_ITEM_LIFETIME_FREQUENCY("FILTER_LINE_ITEM_LIFETIME_FREQUENCY"),
    
    OS("FILTER_OS"),
    
    BROWSER("FILTER_BROWSER"),
    
    CARRIER("FILTER_CARRIER"),
    
    SITE_LANGUAGE("FILTER_SITE_LANGUAGE"),
    
    INVENTORY_FORMAT("FILTER_INVENTORY_FORMAT"),
    
    ZIP_CODE("FILTER_ZIP_CODE"),
    
    VIDEO_RATING_TIER("FILTER_VIDEO_RATING_TIER"),
    
    VIDEO_FORMAT_SUPPORT("FILTER_VIDEO_FORMAT_SUPPORT"),
    
    VIDEO_SKIPPABLE_SUPPORT("FILTER_VIDEO_SKIPPABLE_SUPPORT"),
    
    VIDEO_CREATIVE_DURATION("FILTER_VIDEO_CREATIVE_DURATION"),
    
    PAGE_LAYOUT("FILTER_PAGE_LAYOUT"),
    
    VIDEO_AD_POSITION_IN_STREAM("FILTER_VIDEO_AD_POSITION_IN_STREAM"),
    
    AGE("FILTER_AGE"),
    
    GENDER("FILTER_GENDER"),
    
    QUARTER("FILTER_QUARTER"),
    
    TRUEVIEW_CONVERSION_TYPE("FILTER_TRUEVIEW_CONVERSION_TYPE"),
    
    MOBILE_GEO("FILTER_MOBILE_GEO"),
    
    MRAID_SUPPORT("FILTER_MRAID_SUPPORT"),
    
    ACTIVE_VIEW_EXPECTED_VIEWABILITY("FILTER_ACTIVE_VIEW_EXPECTED_VIEWABILITY"),
    
    VIDEO_CREATIVE_DURATION_SKIPPABLE("FILTER_VIDEO_CREATIVE_DURATION_SKIPPABLE"),
    
    NIELSEN_COUNTRY_CODE("FILTER_NIELSEN_COUNTRY_CODE"),
    
    NIELSEN_DEVICE_ID("FILTER_NIELSEN_DEVICE_ID"),
    
    NIELSEN_GENDER("FILTER_NIELSEN_GENDER"),
    
    NIELSEN_AGE("FILTER_NIELSEN_AGE"),
    
    INVENTORY_SOURCE_TYPE("FILTER_INVENTORY_SOURCE_TYPE"),
    
    CREATIVE_WIDTH("FILTER_CREATIVE_WIDTH"),
    
    CREATIVE_HEIGHT("FILTER_CREATIVE_HEIGHT"),
    
    DFP_ORDER_ID("FILTER_DFP_ORDER_ID"),
    
    TRUEVIEW_AGE("FILTER_TRUEVIEW_AGE"),
    
    TRUEVIEW_GENDER("FILTER_TRUEVIEW_GENDER"),
    
    TRUEVIEW_PARENTAL_STATUS("FILTER_TRUEVIEW_PARENTAL_STATUS"),
    
    TRUEVIEW_REMARKETING_LIST("FILTER_TRUEVIEW_REMARKETING_LIST"),
    
    TRUEVIEW_INTEREST("FILTER_TRUEVIEW_INTEREST"),
    
    TRUEVIEW_AD_GROUP_ID("FILTER_TRUEVIEW_AD_GROUP_ID"),
    
    TRUEVIEW_AD_GROUP_AD_ID("FILTER_TRUEVIEW_AD_GROUP_AD_ID"),
    
    TRUEVIEW_IAR_LANGUAGE("FILTER_TRUEVIEW_IAR_LANGUAGE"),
    
    TRUEVIEW_IAR_GENDER("FILTER_TRUEVIEW_IAR_GENDER"),
    
    TRUEVIEW_IAR_AGE("FILTER_TRUEVIEW_IAR_AGE"),
    
    TRUEVIEW_IAR_CATEGORY("FILTER_TRUEVIEW_IAR_CATEGORY"),
    
    TRUEVIEW_IAR_COUNTRY("FILTER_TRUEVIEW_IAR_COUNTRY"),
    
    TRUEVIEW_IAR_CITY("FILTER_TRUEVIEW_IAR_CITY"),
    
    TRUEVIEW_IAR_REGION("FILTER_TRUEVIEW_IAR_REGION"),
    
    TRUEVIEW_IAR_ZIPCODE("FILTER_TRUEVIEW_IAR_ZIPCODE"),
    
    TRUEVIEW_IAR_REMARKETING_LIST("FILTER_TRUEVIEW_IAR_REMARKETING_LIST"),
    
    TRUEVIEW_IAR_INTEREST("FILTER_TRUEVIEW_IAR_INTEREST"),
    
    TRUEVIEW_IAR_PARENTAL_STATUS("FILTER_TRUEVIEW_IAR_PARENTAL_STATUS"),
    
    TRUEVIEW_IAR_TIME_OF_DAY("FILTER_TRUEVIEW_IAR_TIME_OF_DAY"),
    
    TRUEVIEW_CUSTOM_AFFINITY("FILTER_TRUEVIEW_CUSTOM_AFFINITY"),
    
    TRUEVIEW_CATEGORY("FILTER_TRUEVIEW_CATEGORY"),
    
    TRUEVIEW_KEYWORD("FILTER_TRUEVIEW_KEYWORD"),
    
    TRUEVIEW_PLACEMENT("FILTER_TRUEVIEW_PLACEMENT"),
    
    TRUEVIEW_URL("FILTER_TRUEVIEW_URL"),
    
    TRUEVIEW_COUNTRY("FILTER_TRUEVIEW_COUNTRY"),
    
    TRUEVIEW_REGION("FILTER_TRUEVIEW_REGION"),
    
    TRUEVIEW_CITY("FILTER_TRUEVIEW_CITY"),
    
    TRUEVIEW_DMA("FILTER_TRUEVIEW_DMA"),
    
    TRUEVIEW_ZIPCODE("FILTER_TRUEVIEW_ZIPCODE"),
    
    NOT_SUPPORTED("FILTER_NOT_SUPPORTED"),
    
    MEDIA_PLAN("FILTER_MEDIA_PLAN"),
    
    TRUEVIEW_IAR_YOUTUBE_CHANNEL("FILTER_TRUEVIEW_IAR_YOUTUBE_CHANNEL"),
    
    TRUEVIEW_IAR_YOUTUBE_VIDEO("FILTER_TRUEVIEW_IAR_YOUTUBE_VIDEO"),
    
    SKIPPABLE_SUPPORT("FILTER_SKIPPABLE_SUPPORT"),
    
    COMPANION_CREATIVE_ID("FILTER_COMPANION_CREATIVE_ID"),
    
    BUDGET_SEGMENT_DESCRIPTION("FILTER_BUDGET_SEGMENT_DESCRIPTION"),
    
    FLOODLIGHT_ACTIVITY_ID("FILTER_FLOODLIGHT_ACTIVITY_ID"),
    
    DEVICE_MODEL("FILTER_DEVICE_MODEL"),
    
    DEVICE_MAKE("FILTER_DEVICE_MAKE"),
    
    DEVICE_TYPE("FILTER_DEVICE_TYPE"),
    
    CREATIVE_ATTRIBUTE("FILTER_CREATIVE_ATTRIBUTE"),
    
    INVENTORY_COMMITMENT_TYPE("FILTER_INVENTORY_COMMITMENT_TYPE"),
    
    INVENTORY_RATE_TYPE("FILTER_INVENTORY_RATE_TYPE"),
    
    INVENTORY_DELIVERY_METHOD("FILTER_INVENTORY_DELIVERY_METHOD"),
    
    INVENTORY_SOURCE_EXTERNAL_ID("FILTER_INVENTORY_SOURCE_EXTERNAL_ID"),
    
    AUTHORIZED_SELLER_STATE("FILTER_AUTHORIZED_SELLER_STATE"),
    
    VIDEO_DURATION_SECONDS_RANGE("FILTER_VIDEO_DURATION_SECONDS_RANGE"),
    
    PARTNER_NAME("FILTER_PARTNER_NAME"),
    
    PARTNER_STATUS("FILTER_PARTNER_STATUS"),
    
    ADVERTISER_NAME("FILTER_ADVERTISER_NAME"),
    
    ADVERTISER_INTEGRATION_CODE("FILTER_ADVERTISER_INTEGRATION_CODE"),
    
    ADVERTISER_INTEGRATION_STATUS("FILTER_ADVERTISER_INTEGRATION_STATUS"),
    
    CARRIER_NAME("FILTER_CARRIER_NAME"),
    
    CHANNEL_NAME("FILTER_CHANNEL_NAME"),
    
    CITY_NAME("FILTER_CITY_NAME"),
    
    COMPANION_CREATIVE_NAME("FILTER_COMPANION_CREATIVE_NAME"),
    
    USER_LIST_FIRST_PARTY_NAME("FILTER_USER_LIST_FIRST_PARTY_NAME"),
    
    USER_LIST_THIRD_PARTY_NAME("FILTER_USER_LIST_THIRD_PARTY_NAME"),
    
    NIELSEN_RESTATEMENT_DATE("FILTER_NIELSEN_RESTATEMENT_DATE"),
    
    NIELSEN_DATE_RANGE("FILTER_NIELSEN_DATE_RANGE"),
    
    INSERTION_ORDER_NAME("FILTER_INSERTION_ORDER_NAME"),
    
    REGION_NAME("FILTER_REGION_NAME"),
    
    DMA_NAME("FILTER_DMA_NAME"),
    
    TRUEVIEW_IAR_REGION_NAME("FILTER_TRUEVIEW_IAR_REGION_NAME"),
    
    TRUEVIEW_DMA_NAME("FILTER_TRUEVIEW_DMA_NAME"),
    
    TRUEVIEW_REGION_NAME("FILTER_TRUEVIEW_REGION_NAME"),
    
    ACTIVE_VIEW_CUSTOM_METRIC_ID("FILTER_ACTIVE_VIEW_CUSTOM_METRIC_ID"),
    
    ACTIVE_VIEW_CUSTOM_METRIC_NAME("FILTER_ACTIVE_VIEW_CUSTOM_METRIC_NAME"),
    
    AD_TYPE("FILTER_AD_TYPE"),
    
    ALGORITHM("FILTER_ALGORITHM"),
    
    ALGORITHM_ID("FILTER_ALGORITHM_ID"),
    
    AMP_PAGE_REQUEST("FILTER_AMP_PAGE_REQUEST"),
    
    ANONYMOUS_INVENTORY_MODELING("FILTER_ANONYMOUS_INVENTORY_MODELING"),
    
    APP_URL("FILTER_APP_URL"),
    
    APP_URL_EXCLUDED("FILTER_APP_URL_EXCLUDED"),
    
    ATTRIBUTED_USERLIST("FILTER_ATTRIBUTED_USERLIST"),
    
    ATTRIBUTED_USERLIST_COST("FILTER_ATTRIBUTED_USERLIST_COST"),
    
    ATTRIBUTED_USERLIST_TYPE("FILTER_ATTRIBUTED_USERLIST_TYPE"),
    
    ATTRIBUTION_MODEL("FILTER_ATTRIBUTION_MODEL"),
    
    AUDIENCE_LIST("FILTER_AUDIENCE_LIST"),
    
    AUDIENCE_LIST_COST("FILTER_AUDIENCE_LIST_COST"),
    
    AUDIENCE_LIST_TYPE("FILTER_AUDIENCE_LIST_TYPE"),
    
    AUDIENCE_NAME("FILTER_AUDIENCE_NAME"),
    
    AUDIENCE_TYPE("FILTER_AUDIENCE_TYPE"),
    
    BILLABLE_OUTCOME("FILTER_BILLABLE_OUTCOME"),
    
    BRAND_LIFT_TYPE("FILTER_BRAND_LIFT_TYPE"),
    
    CHANNEL_TYPE("FILTER_CHANNEL_TYPE"),
    
    CM_PLACEMENT_ID("FILTER_CM_PLACEMENT_ID"),
    
    CONVERSION_SOURCE("FILTER_CONVERSION_SOURCE"),
    
    CONVERSION_SOURCE_ID("FILTER_CONVERSION_SOURCE_ID"),
    
    COUNTRY_ID("FILTER_COUNTRY_ID"),
    
    CREATIVE("FILTER_CREATIVE"),
    
    CREATIVE_ASSET("FILTER_CREATIVE_ASSET"),
    
    CREATIVE_INTEGRATION_CODE("FILTER_CREATIVE_INTEGRATION_CODE"),
    
    CREATIVE_RENDERED_IN_AMP("FILTER_CREATIVE_RENDERED_IN_AMP"),
    
    CREATIVE_SOURCE("FILTER_CREATIVE_SOURCE"),
    
    CREATIVE_STATUS("FILTER_CREATIVE_STATUS"),
    
    DATA_PROVIDER_NAME("FILTER_DATA_PROVIDER_NAME"),
    
    DETAILED_DEMOGRAPHICS("FILTER_DETAILED_DEMOGRAPHICS"),
    
    DETAILED_DEMOGRAPHICS_ID("FILTER_DETAILED_DEMOGRAPHICS_ID"),
    
    DEVICE("FILTER_DEVICE"),
    
    GAM_INSERTION_ORDER("FILTER_GAM_INSERTION_ORDER"),
    
    GAM_LINE_ITEM("FILTER_GAM_LINE_ITEM"),
    
    GAM_LINE_ITEM_ID("FILTER_GAM_LINE_ITEM_ID"),
    
    DIGITAL_CONTENT_LABEL("FILTER_DIGITAL_CONTENT_LABEL"),
    
    DOMAIN("FILTER_DOMAIN"),
    
    ELIGIBLE_COOKIES_ON_FIRST_PARTY_AUDIENCE_LIST("FILTER_ELIGIBLE_COOKIES_ON_FIRST_PARTY_AUDIENCE_LIST"),
    
    ELIGIBLE_COOKIES_ON_THIRD_PARTY_AUDIENCE_LIST_AND_INTEREST("FILTER_ELIGIBLE_COOKIES_ON_THIRD_PARTY_AUDIENCE_LIST_AND_INTEREST"),
    
    EXCHANGE("FILTER_EXCHANGE"),
    
    EXCHANGE_CODE("FILTER_EXCHANGE_CODE"),
    
    EXTENSION("FILTER_EXTENSION"),
    
    EXTENSION_STATUS("FILTER_EXTENSION_STATUS"),
    
    EXTENSION_TYPE("FILTER_EXTENSION_TYPE"),
    
    FIRST_PARTY_AUDIENCE_LIST_COST("FILTER_FIRST_PARTY_AUDIENCE_LIST_COST"),
    
    FIRST_PARTY_AUDIENCE_LIST_TYPE("FILTER_FIRST_PARTY_AUDIENCE_LIST_TYPE"),
    
    FLOODLIGHT_ACTIVITY("FILTER_FLOODLIGHT_ACTIVITY"),
    
    FORMAT("FILTER_FORMAT"),
    
    GMAIL_AGE("FILTER_GMAIL_AGE"),
    
    GMAIL_CITY("FILTER_GMAIL_CITY"),
    
    GMAIL_COUNTRY("FILTER_GMAIL_COUNTRY"),
    
    GMAIL_COUNTRY_NAME("FILTER_GMAIL_COUNTRY_NAME"),
    
    GMAIL_DEVICE_TYPE("FILTER_GMAIL_DEVICE_TYPE"),
    
    GMAIL_DEVICE_TYPE_NAME("FILTER_GMAIL_DEVICE_TYPE_NAME"),
    
    GMAIL_GENDER("FILTER_GMAIL_GENDER"),
    
    GMAIL_REGION("FILTER_GMAIL_REGION"),
    
    GMAIL_REMARKETING_LIST("FILTER_GMAIL_REMARKETING_LIST"),
    
    HOUSEHOLD_INCOME("FILTER_HOUSEHOLD_INCOME"),
    
    IMPRESSION_COUNTING_METHOD("FILTER_IMPRESSION_COUNTING_METHOD"),
    
    YOUTUBE_PROGRAMMATIC_GUARANTEED_INSERTION_ORDER("FILTER_YOUTUBE_PROGRAMMATIC_GUARANTEED_INSERTION_ORDER"),
    
    INSERTION_ORDER_INTEGRATION_CODE("FILTER_INSERTION_ORDER_INTEGRATION_CODE"),
    
    INSERTION_ORDER_STATUS("FILTER_INSERTION_ORDER_STATUS"),
    
    INTEREST("FILTER_INTEREST"),
    
    INVENTORY_SOURCE_GROUP("FILTER_INVENTORY_SOURCE_GROUP"),
    
    INVENTORY_SOURCE_GROUP_ID("FILTER_INVENTORY_SOURCE_GROUP_ID"),
    
    INVENTORY_SOURCE_ID("FILTER_INVENTORY_SOURCE_ID"),
    
    INVENTORY_SOURCE_NAME("FILTER_INVENTORY_SOURCE_NAME"),
    
    LIFE_EVENT("FILTER_LIFE_EVENT"),
    
    LIFE_EVENTS("FILTER_LIFE_EVENTS"),
    
    LINE_ITEM_INTEGRATION_CODE("FILTER_LINE_ITEM_INTEGRATION_CODE"),
    
    LINE_ITEM_NAME("FILTER_LINE_ITEM_NAME"),
    
    LINE_ITEM_STATUS("FILTER_LINE_ITEM_STATUS"),
    
    MATCH_RATIO("FILTER_MATCH_RATIO"),
    
    MEASUREMENT_SOURCE("FILTER_MEASUREMENT_SOURCE"),
    
    MEDIA_PLAN_NAME("FILTER_MEDIA_PLAN_NAME"),
    
    PARENTAL_STATUS("FILTER_PARENTAL_STATUS"),
    
    PLACEMENT_ALL_YOUTUBE_CHANNELS("FILTER_PLACEMENT_ALL_YOUTUBE_CHANNELS"),
    
    PLATFORM("FILTER_PLATFORM"),
    
    PLAYBACK_METHOD("FILTER_PLAYBACK_METHOD"),
    
    POSITION_IN_CONTENT("FILTER_POSITION_IN_CONTENT"),
    
    PUBLISHER_PROPERTY("FILTER_PUBLISHER_PROPERTY"),
    
    PUBLISHER_PROPERTY_ID("FILTER_PUBLISHER_PROPERTY_ID"),
    
    PUBLISHER_PROPERTY_SECTION("FILTER_PUBLISHER_PROPERTY_SECTION"),
    
    PUBLISHER_PROPERTY_SECTION_ID("FILTER_PUBLISHER_PROPERTY_SECTION_ID"),
    
    REFUND_REASON("FILTER_REFUND_REASON"),
    
    REMARKETING_LIST("FILTER_REMARKETING_LIST"),
    
    REWARDED("FILTER_REWARDED"),
    
    SENSITIVE_CATEGORY("FILTER_SENSITIVE_CATEGORY"),
    
    SERVED_PIXEL_DENSITY("FILTER_SERVED_PIXEL_DENSITY"),
    
    TARGETED_DATA_PROVIDERS("FILTER_TARGETED_DATA_PROVIDERS"),
    
    THIRD_PARTY_AUDIENCE_LIST_COST("FILTER_THIRD_PARTY_AUDIENCE_LIST_COST"),
    
    THIRD_PARTY_AUDIENCE_LIST_TYPE("FILTER_THIRD_PARTY_AUDIENCE_LIST_TYPE"),
    
    TRUEVIEW_AD("FILTER_TRUEVIEW_AD"),
    
    TRUEVIEW_AD_GROUP("FILTER_TRUEVIEW_AD_GROUP"),
    
    TRUEVIEW_DETAILED_DEMOGRAPHICS("FILTER_TRUEVIEW_DETAILED_DEMOGRAPHICS"),
    
    TRUEVIEW_DETAILED_DEMOGRAPHICS_ID("FILTER_TRUEVIEW_DETAILED_DEMOGRAPHICS_ID"),
    
    TRUEVIEW_HOUSEHOLD_INCOME("FILTER_TRUEVIEW_HOUSEHOLD_INCOME"),
    
    TRUEVIEW_IAR_COUNTRY_NAME("FILTER_TRUEVIEW_IAR_COUNTRY_NAME"),
    
    TRUEVIEW_REMARKETING_LIST_NAME("FILTER_TRUEVIEW_REMARKETING_LIST_NAME"),
    
    VARIANT_ID("FILTER_VARIANT_ID"),
    
    VARIANT_NAME("FILTER_VARIANT_NAME"),
    
    VARIANT_VERSION("FILTER_VARIANT_VERSION"),
    
    VERIFICATION_VIDEO_PLAYER_SIZE("FILTER_VERIFICATION_VIDEO_PLAYER_SIZE"),
    
    VERIFICATION_VIDEO_POSITION("FILTER_VERIFICATION_VIDEO_POSITION"),
    
    VIDEO_COMPANION_CREATIVE_SIZE("FILTER_VIDEO_COMPANION_CREATIVE_SIZE"),
    
    VIDEO_CONTINUOUS_PLAY("FILTER_VIDEO_CONTINUOUS_PLAY"),
    
    VIDEO_DURATION("FILTER_VIDEO_DURATION"),
    
    YOUTUBE_ADAPTED_AUDIENCE_LIST("FILTER_YOUTUBE_ADAPTED_AUDIENCE_LIST"),
    
    YOUTUBE_AD_VIDEO("FILTER_YOUTUBE_AD_VIDEO"),
    
    YOUTUBE_AD_VIDEO_ID("FILTER_YOUTUBE_AD_VIDEO_ID"),
    
    YOUTUBE_CHANNEL("FILTER_YOUTUBE_CHANNEL"),
    
    YOUTUBE_PROGRAMMATIC_GUARANTEED_ADVERTISER("FILTER_YOUTUBE_PROGRAMMATIC_GUARANTEED_ADVERTISER"),
    
    YOUTUBE_PROGRAMMATIC_GUARANTEED_PARTNER("FILTER_YOUTUBE_PROGRAMMATIC_GUARANTEED_PARTNER"),
    
    YOUTUBE_VIDEO("FILTER_YOUTUBE_VIDEO"),
    
    ZIP_POSTAL_CODE("FILTER_ZIP_POSTAL_CODE"),
    
    PLACEMENT_NAME_ALL_YOUTUBE_CHANNELS("FILTER_PLACEMENT_NAME_ALL_YOUTUBE_CHANNELS"),
    
    TRUEVIEW_PLACEMENT_ID("FILTER_TRUEVIEW_PLACEMENT_ID"),
    
    PATH_PATTERN_ID("FILTER_PATH_PATTERN_ID"),
    
    PATH_EVENT_INDEX("FILTER_PATH_EVENT_INDEX"),
    
    EVENT_TYPE("FILTER_EVENT_TYPE"),
    
    CHANNEL_GROUPING("FILTER_CHANNEL_GROUPING"),
    
    OM_SDK_AVAILABLE("FILTER_OM_SDK_AVAILABLE"),
    
    DATA_SOURCE("FILTER_DATA_SOURCE"),
    
    CM360_PLACEMENT_ID("FILTER_CM360_PLACEMENT_ID"),
    
    TRUEVIEW_CLICK_TYPE_NAME("FILTER_TRUEVIEW_CLICK_TYPE_NAME"),
    
    TRUEVIEW_AD_TYPE_NAME("FILTER_TRUEVIEW_AD_TYPE_NAME"),
    
    VIDEO_CONTENT_DURATION("FILTER_VIDEO_CONTENT_DURATION"),
    
    MATCHED_GENRE_TARGET("FILTER_MATCHED_GENRE_TARGET"),
    
    VIDEO_CONTENT_LIVE_STREAM("FILTER_VIDEO_CONTENT_LIVE_STREAM"),
    
    BUDGET_SEGMENT_TYPE("FILTER_BUDGET_SEGMENT_TYPE"),
    
    BUDGET_SEGMENT_BUDGET("FILTER_BUDGET_SEGMENT_BUDGET"),
    
    BUDGET_SEGMENT_START_DATE("FILTER_BUDGET_SEGMENT_START_DATE"),
    
    BUDGET_SEGMENT_END_DATE("FILTER_BUDGET_SEGMENT_END_DATE"),
    
    BUDGET_SEGMENT_PACING_PERCENTAGE("FILTER_BUDGET_SEGMENT_PACING_PERCENTAGE"),
    
    LINE_ITEM_BUDGET("FILTER_LINE_ITEM_BUDGET"),
    
    LINE_ITEM_START_DATE("FILTER_LINE_ITEM_START_DATE"),
    
    LINE_ITEM_END_DATE("FILTER_LINE_ITEM_END_DATE"),
    
    INSERTION_ORDER_GOAL_TYPE("FILTER_INSERTION_ORDER_GOAL_TYPE"),
    
    LINE_ITEM_PACING_PERCENTAGE("FILTER_LINE_ITEM_PACING_PERCENTAGE"),
    
    INSERTION_ORDER_GOAL_VALUE("FILTER_INSERTION_ORDER_GOAL_VALUE"),
    
    OMID_CAPABLE("FILTER_OMID_CAPABLE"),
    
    VENDOR_MEASUREMENT_MODE("FILTER_VENDOR_MEASUREMENT_MODE"),
    
    IMPRESSION_LOSS_REJECTION_REASON("FILTER_IMPRESSION_LOSS_REJECTION_REASON"),
    
    VERIFICATION_VIDEO_PLAYER_SIZE_START("FILTER_VERIFICATION_VIDEO_PLAYER_SIZE_START"),
    
    VERIFICATION_VIDEO_PLAYER_SIZE_FIRST_QUARTILE("FILTER_VERIFICATION_VIDEO_PLAYER_SIZE_FIRST_QUARTILE"),
    
    VERIFICATION_VIDEO_PLAYER_SIZE_MID_POINT("FILTER_VERIFICATION_VIDEO_PLAYER_SIZE_MID_POINT"),
    
    VERIFICATION_VIDEO_PLAYER_SIZE_THIRD_QUARTILE("FILTER_VERIFICATION_VIDEO_PLAYER_SIZE_THIRD_QUARTILE"),
    
    VERIFICATION_VIDEO_PLAYER_SIZE_COMPLETE("FILTER_VERIFICATION_VIDEO_PLAYER_SIZE_COMPLETE"),
    
    VERIFICATION_VIDEO_RESIZED("FILTER_VERIFICATION_VIDEO_RESIZED"),
    
    VERIFICATION_AUDIBILITY_START("FILTER_VERIFICATION_AUDIBILITY_START"),
    
    VERIFICATION_AUDIBILITY_COMPLETE("FILTER_VERIFICATION_AUDIBILITY_COMPLETE"),
    
    MEDIA_TYPE("FILTER_MEDIA_TYPE"),
    
    AUDIO_FEED_TYPE_NAME("FILTER_AUDIO_FEED_TYPE_NAME"),
    
    TRUEVIEW_TARGETING_EXPANSION("FILTER_TRUEVIEW_TARGETING_EXPANSION"),
    
    PUBLISHER_TRAFFIC_SOURCE("FILTER_PUBLISHER_TRAFFIC_SOURCE");

    private String value;

    FilterEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FilterEnum fromValue(String value) {
      for (FilterEnum b : FilterEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FilterEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FilterEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FilterEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FilterEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      FilterEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_FILTER = "filter";
  @SerializedName(SERIALIZED_NAME_FILTER)
  private FilterEnum filter;

  /**
   * Indicates how the filter should be matched to the value.
   */
  @JsonAdapter(MatchEnum.Adapter.class)
  public enum MatchEnum {
    UNKNOWN("UNKNOWN"),
    
    EXACT("EXACT"),
    
    PARTIAL("PARTIAL"),
    
    BEGINS_WITH("BEGINS_WITH"),
    
    WILDCARD_EXPRESSION("WILDCARD_EXPRESSION");

    private String value;

    MatchEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MatchEnum fromValue(String value) {
      for (MatchEnum b : MatchEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<MatchEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MatchEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MatchEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return MatchEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      MatchEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_MATCH = "match";
  @SerializedName(SERIALIZED_NAME_MATCH)
  private MatchEnum match;

  public static final String SERIALIZED_NAME_VALUES = "values";
  @SerializedName(SERIALIZED_NAME_VALUES)
  private List<String> values = new ArrayList<>();

  public PathQueryOptionsFilter() {
  }

  public PathQueryOptionsFilter filter(FilterEnum filter) {
    this.filter = filter;
    return this;
  }

  /**
   * Dimension the filter is applied to.
   * @return filter
   */
  @javax.annotation.Nullable
  public FilterEnum getFilter() {
    return filter;
  }

  public void setFilter(FilterEnum filter) {
    this.filter = filter;
  }


  public PathQueryOptionsFilter match(MatchEnum match) {
    this.match = match;
    return this;
  }

  /**
   * Indicates how the filter should be matched to the value.
   * @return match
   */
  @javax.annotation.Nullable
  public MatchEnum getMatch() {
    return match;
  }

  public void setMatch(MatchEnum match) {
    this.match = match;
  }


  public PathQueryOptionsFilter values(List<String> values) {
    this.values = values;
    return this;
  }

  public PathQueryOptionsFilter addValuesItem(String valuesItem) {
    if (this.values == null) {
      this.values = new ArrayList<>();
    }
    this.values.add(valuesItem);
    return this;
  }

  /**
   * Value to filter on.
   * @return values
   */
  @javax.annotation.Nullable
  public List<String> getValues() {
    return values;
  }

  public void setValues(List<String> values) {
    this.values = values;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PathQueryOptionsFilter pathQueryOptionsFilter = (PathQueryOptionsFilter) o;
    return Objects.equals(this.filter, pathQueryOptionsFilter.filter) &&
        Objects.equals(this.match, pathQueryOptionsFilter.match) &&
        Objects.equals(this.values, pathQueryOptionsFilter.values);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filter, match, values);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PathQueryOptionsFilter {\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    match: ").append(toIndentedString(match)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("filter");
    openapiFields.add("match");
    openapiFields.add("values");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PathQueryOptionsFilter
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PathQueryOptionsFilter.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PathQueryOptionsFilter is not found in the empty JSON string", PathQueryOptionsFilter.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PathQueryOptionsFilter.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PathQueryOptionsFilter` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("filter") != null && !jsonObj.get("filter").isJsonNull()) && !jsonObj.get("filter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filter").toString()));
      }
      // validate the optional field `filter`
      if (jsonObj.get("filter") != null && !jsonObj.get("filter").isJsonNull()) {
        FilterEnum.validateJsonElement(jsonObj.get("filter"));
      }
      if ((jsonObj.get("match") != null && !jsonObj.get("match").isJsonNull()) && !jsonObj.get("match").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `match` to be a primitive type in the JSON string but got `%s`", jsonObj.get("match").toString()));
      }
      // validate the optional field `match`
      if (jsonObj.get("match") != null && !jsonObj.get("match").isJsonNull()) {
        MatchEnum.validateJsonElement(jsonObj.get("match"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("values") != null && !jsonObj.get("values").isJsonNull() && !jsonObj.get("values").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `values` to be an array in the JSON string but got `%s`", jsonObj.get("values").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PathQueryOptionsFilter.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PathQueryOptionsFilter' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PathQueryOptionsFilter> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PathQueryOptionsFilter.class));

       return (TypeAdapter<T>) new TypeAdapter<PathQueryOptionsFilter>() {
           @Override
           public void write(JsonWriter out, PathQueryOptionsFilter value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PathQueryOptionsFilter read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PathQueryOptionsFilter given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PathQueryOptionsFilter
   * @throws IOException if the JSON string is invalid with respect to PathQueryOptionsFilter
   */
  public static PathQueryOptionsFilter fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PathQueryOptionsFilter.class);
  }

  /**
   * Convert an instance of PathQueryOptionsFilter to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

