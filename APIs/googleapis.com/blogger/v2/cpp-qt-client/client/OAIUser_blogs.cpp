/**
 * Blogger API
 * The Blogger API provides access to posts, comments and pages of a Blogger blog.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUser_blogs.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUser_blogs::OAIUser_blogs(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUser_blogs::OAIUser_blogs() {
    this->initializeModel();
}

OAIUser_blogs::~OAIUser_blogs() {}

void OAIUser_blogs::initializeModel() {

    m_self_link_isSet = false;
    m_self_link_isValid = false;
}

void OAIUser_blogs::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUser_blogs::fromJsonObject(QJsonObject json) {

    m_self_link_isValid = ::OpenAPI::fromJsonValue(m_self_link, json[QString("selfLink")]);
    m_self_link_isSet = !json[QString("selfLink")].isNull() && m_self_link_isValid;
}

QString OAIUser_blogs::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUser_blogs::asJsonObject() const {
    QJsonObject obj;
    if (m_self_link_isSet) {
        obj.insert(QString("selfLink"), ::OpenAPI::toJsonValue(m_self_link));
    }
    return obj;
}

QString OAIUser_blogs::getSelfLink() const {
    return m_self_link;
}
void OAIUser_blogs::setSelfLink(const QString &self_link) {
    m_self_link = self_link;
    m_self_link_isSet = true;
}

bool OAIUser_blogs::is_self_link_Set() const{
    return m_self_link_isSet;
}

bool OAIUser_blogs::is_self_link_Valid() const{
    return m_self_link_isValid;
}

bool OAIUser_blogs::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_self_link_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUser_blogs::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
