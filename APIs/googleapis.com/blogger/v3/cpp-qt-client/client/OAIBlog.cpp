/**
 * Blogger API
 * The Blogger API provides access to posts, comments and pages of a Blogger blog.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBlog.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBlog::OAIBlog(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBlog::OAIBlog() {
    this->initializeModel();
}

OAIBlog::~OAIBlog() {}

void OAIBlog::initializeModel() {

    m_custom_meta_data_isSet = false;
    m_custom_meta_data_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_locale_isSet = false;
    m_locale_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_pages_isSet = false;
    m_pages_isValid = false;

    m_posts_isSet = false;
    m_posts_isValid = false;

    m_published_isSet = false;
    m_published_isValid = false;

    m_self_link_isSet = false;
    m_self_link_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_updated_isSet = false;
    m_updated_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIBlog::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBlog::fromJsonObject(QJsonObject json) {

    m_custom_meta_data_isValid = ::OpenAPI::fromJsonValue(m_custom_meta_data, json[QString("customMetaData")]);
    m_custom_meta_data_isSet = !json[QString("customMetaData")].isNull() && m_custom_meta_data_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_locale_isValid = ::OpenAPI::fromJsonValue(m_locale, json[QString("locale")]);
    m_locale_isSet = !json[QString("locale")].isNull() && m_locale_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_pages_isValid = ::OpenAPI::fromJsonValue(m_pages, json[QString("pages")]);
    m_pages_isSet = !json[QString("pages")].isNull() && m_pages_isValid;

    m_posts_isValid = ::OpenAPI::fromJsonValue(m_posts, json[QString("posts")]);
    m_posts_isSet = !json[QString("posts")].isNull() && m_posts_isValid;

    m_published_isValid = ::OpenAPI::fromJsonValue(m_published, json[QString("published")]);
    m_published_isSet = !json[QString("published")].isNull() && m_published_isValid;

    m_self_link_isValid = ::OpenAPI::fromJsonValue(m_self_link, json[QString("selfLink")]);
    m_self_link_isSet = !json[QString("selfLink")].isNull() && m_self_link_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_updated_isValid = ::OpenAPI::fromJsonValue(m_updated, json[QString("updated")]);
    m_updated_isSet = !json[QString("updated")].isNull() && m_updated_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIBlog::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBlog::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_meta_data_isSet) {
        obj.insert(QString("customMetaData"), ::OpenAPI::toJsonValue(m_custom_meta_data));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_locale.isSet()) {
        obj.insert(QString("locale"), ::OpenAPI::toJsonValue(m_locale));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_pages.isSet()) {
        obj.insert(QString("pages"), ::OpenAPI::toJsonValue(m_pages));
    }
    if (m_posts.isSet()) {
        obj.insert(QString("posts"), ::OpenAPI::toJsonValue(m_posts));
    }
    if (m_published_isSet) {
        obj.insert(QString("published"), ::OpenAPI::toJsonValue(m_published));
    }
    if (m_self_link_isSet) {
        obj.insert(QString("selfLink"), ::OpenAPI::toJsonValue(m_self_link));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_updated_isSet) {
        obj.insert(QString("updated"), ::OpenAPI::toJsonValue(m_updated));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIBlog::getCustomMetaData() const {
    return m_custom_meta_data;
}
void OAIBlog::setCustomMetaData(const QString &custom_meta_data) {
    m_custom_meta_data = custom_meta_data;
    m_custom_meta_data_isSet = true;
}

bool OAIBlog::is_custom_meta_data_Set() const{
    return m_custom_meta_data_isSet;
}

bool OAIBlog::is_custom_meta_data_Valid() const{
    return m_custom_meta_data_isValid;
}

QString OAIBlog::getDescription() const {
    return m_description;
}
void OAIBlog::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIBlog::is_description_Set() const{
    return m_description_isSet;
}

bool OAIBlog::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIBlog::getId() const {
    return m_id;
}
void OAIBlog::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIBlog::is_id_Set() const{
    return m_id_isSet;
}

bool OAIBlog::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIBlog::getKind() const {
    return m_kind;
}
void OAIBlog::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIBlog::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIBlog::is_kind_Valid() const{
    return m_kind_isValid;
}

OAIBlog_locale OAIBlog::getLocale() const {
    return m_locale;
}
void OAIBlog::setLocale(const OAIBlog_locale &locale) {
    m_locale = locale;
    m_locale_isSet = true;
}

bool OAIBlog::is_locale_Set() const{
    return m_locale_isSet;
}

bool OAIBlog::is_locale_Valid() const{
    return m_locale_isValid;
}

QString OAIBlog::getName() const {
    return m_name;
}
void OAIBlog::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIBlog::is_name_Set() const{
    return m_name_isSet;
}

bool OAIBlog::is_name_Valid() const{
    return m_name_isValid;
}

OAIBlog_pages OAIBlog::getPages() const {
    return m_pages;
}
void OAIBlog::setPages(const OAIBlog_pages &pages) {
    m_pages = pages;
    m_pages_isSet = true;
}

bool OAIBlog::is_pages_Set() const{
    return m_pages_isSet;
}

bool OAIBlog::is_pages_Valid() const{
    return m_pages_isValid;
}

OAIBlog_posts OAIBlog::getPosts() const {
    return m_posts;
}
void OAIBlog::setPosts(const OAIBlog_posts &posts) {
    m_posts = posts;
    m_posts_isSet = true;
}

bool OAIBlog::is_posts_Set() const{
    return m_posts_isSet;
}

bool OAIBlog::is_posts_Valid() const{
    return m_posts_isValid;
}

QString OAIBlog::getPublished() const {
    return m_published;
}
void OAIBlog::setPublished(const QString &published) {
    m_published = published;
    m_published_isSet = true;
}

bool OAIBlog::is_published_Set() const{
    return m_published_isSet;
}

bool OAIBlog::is_published_Valid() const{
    return m_published_isValid;
}

QString OAIBlog::getSelfLink() const {
    return m_self_link;
}
void OAIBlog::setSelfLink(const QString &self_link) {
    m_self_link = self_link;
    m_self_link_isSet = true;
}

bool OAIBlog::is_self_link_Set() const{
    return m_self_link_isSet;
}

bool OAIBlog::is_self_link_Valid() const{
    return m_self_link_isValid;
}

QString OAIBlog::getStatus() const {
    return m_status;
}
void OAIBlog::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIBlog::is_status_Set() const{
    return m_status_isSet;
}

bool OAIBlog::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIBlog::getUpdated() const {
    return m_updated;
}
void OAIBlog::setUpdated(const QString &updated) {
    m_updated = updated;
    m_updated_isSet = true;
}

bool OAIBlog::is_updated_Set() const{
    return m_updated_isSet;
}

bool OAIBlog::is_updated_Valid() const{
    return m_updated_isValid;
}

QString OAIBlog::getUrl() const {
    return m_url;
}
void OAIBlog::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIBlog::is_url_Set() const{
    return m_url_isSet;
}

bool OAIBlog::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIBlog::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_meta_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_locale.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pages.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_posts.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_published_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_self_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBlog::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
