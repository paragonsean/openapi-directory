/**
 * Blogger API
 * The Blogger API provides access to posts, comments and pages of a Blogger blog.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PageviewsCountsInner model module.
 * @module model/PageviewsCountsInner
 * @version v3
 */
class PageviewsCountsInner {
    /**
     * Constructs a new <code>PageviewsCountsInner</code>.
     * @alias module:model/PageviewsCountsInner
     */
    constructor() { 
        
        PageviewsCountsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PageviewsCountsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PageviewsCountsInner} obj Optional instance to populate.
     * @return {module:model/PageviewsCountsInner} The populated <code>PageviewsCountsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PageviewsCountsInner();

            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'String');
            }
            if (data.hasOwnProperty('timeRange')) {
                obj['timeRange'] = ApiClient.convertToType(data['timeRange'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PageviewsCountsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PageviewsCountsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['count'] && !(typeof data['count'] === 'string' || data['count'] instanceof String)) {
            throw new Error("Expected the field `count` to be a primitive type in the JSON string but got " + data['count']);
        }
        // ensure the json data is a string
        if (data['timeRange'] && !(typeof data['timeRange'] === 'string' || data['timeRange'] instanceof String)) {
            throw new Error("Expected the field `timeRange` to be a primitive type in the JSON string but got " + data['timeRange']);
        }

        return true;
    }


}



/**
 * Count of page views for the given time range.
 * @member {String} count
 */
PageviewsCountsInner.prototype['count'] = undefined;

/**
 * Time range the given count applies to.
 * @member {module:model/PageviewsCountsInner.TimeRangeEnum} timeRange
 */
PageviewsCountsInner.prototype['timeRange'] = undefined;





/**
 * Allowed values for the <code>timeRange</code> property.
 * @enum {String}
 * @readonly
 */
PageviewsCountsInner['TimeRangeEnum'] = {

    /**
     * value: "ALL_TIME"
     * @const
     */
    "ALL_TIME": "ALL_TIME",

    /**
     * value: "THIRTY_DAYS"
     * @const
     */
    "THIRTY_DAYS": "THIRTY_DAYS",

    /**
     * value: "SEVEN_DAYS"
     * @const
     */
    "SEVEN_DAYS": "SEVEN_DAYS"
};



export default PageviewsCountsInner;

