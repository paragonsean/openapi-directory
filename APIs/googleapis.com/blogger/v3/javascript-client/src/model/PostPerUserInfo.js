/**
 * Blogger API
 * The Blogger API provides access to posts, comments and pages of a Blogger blog.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PostPerUserInfo model module.
 * @module model/PostPerUserInfo
 * @version v3
 */
class PostPerUserInfo {
    /**
     * Constructs a new <code>PostPerUserInfo</code>.
     * @alias module:model/PostPerUserInfo
     */
    constructor() { 
        
        PostPerUserInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PostPerUserInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostPerUserInfo} obj Optional instance to populate.
     * @return {module:model/PostPerUserInfo} The populated <code>PostPerUserInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostPerUserInfo();

            if (data.hasOwnProperty('blogId')) {
                obj['blogId'] = ApiClient.convertToType(data['blogId'], 'String');
            }
            if (data.hasOwnProperty('hasEditAccess')) {
                obj['hasEditAccess'] = ApiClient.convertToType(data['hasEditAccess'], 'Boolean');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('postId')) {
                obj['postId'] = ApiClient.convertToType(data['postId'], 'String');
            }
            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostPerUserInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostPerUserInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['blogId'] && !(typeof data['blogId'] === 'string' || data['blogId'] instanceof String)) {
            throw new Error("Expected the field `blogId` to be a primitive type in the JSON string but got " + data['blogId']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['postId'] && !(typeof data['postId'] === 'string' || data['postId'] instanceof String)) {
            throw new Error("Expected the field `postId` to be a primitive type in the JSON string but got " + data['postId']);
        }
        // ensure the json data is a string
        if (data['userId'] && !(typeof data['userId'] === 'string' || data['userId'] instanceof String)) {
            throw new Error("Expected the field `userId` to be a primitive type in the JSON string but got " + data['userId']);
        }

        return true;
    }


}



/**
 * ID of the Blog that the post resource belongs to.
 * @member {String} blogId
 */
PostPerUserInfo.prototype['blogId'] = undefined;

/**
 * True if the user has Author level access to the post.
 * @member {Boolean} hasEditAccess
 */
PostPerUserInfo.prototype['hasEditAccess'] = undefined;

/**
 * The kind of this entity. Always blogger#postPerUserInfo.
 * @member {String} kind
 */
PostPerUserInfo.prototype['kind'] = undefined;

/**
 * ID of the Post resource.
 * @member {String} postId
 */
PostPerUserInfo.prototype['postId'] = undefined;

/**
 * ID of the User.
 * @member {String} userId
 */
PostPerUserInfo.prototype['userId'] = undefined;






export default PostPerUserInfo;

