# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.blog import Blog
from openapi_server.models.blog_per_user_info import BlogPerUserInfo
from openapi_server import util


class BlogUserInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blog: Blog=None, blog_user_info: BlogPerUserInfo=None, kind: str=None):
        """BlogUserInfo - a model defined in OpenAPI

        :param blog: The blog of this BlogUserInfo.
        :param blog_user_info: The blog_user_info of this BlogUserInfo.
        :param kind: The kind of this BlogUserInfo.
        """
        self.openapi_types = {
            'blog': Blog,
            'blog_user_info': BlogPerUserInfo,
            'kind': str
        }

        self.attribute_map = {
            'blog': 'blog',
            'blog_user_info': 'blog_user_info',
            'kind': 'kind'
        }

        self._blog = blog
        self._blog_user_info = blog_user_info
        self._kind = kind

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BlogUserInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BlogUserInfo of this BlogUserInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blog(self):
        """Gets the blog of this BlogUserInfo.


        :return: The blog of this BlogUserInfo.
        :rtype: Blog
        """
        return self._blog

    @blog.setter
    def blog(self, blog):
        """Sets the blog of this BlogUserInfo.


        :param blog: The blog of this BlogUserInfo.
        :type blog: Blog
        """

        self._blog = blog

    @property
    def blog_user_info(self):
        """Gets the blog_user_info of this BlogUserInfo.


        :return: The blog_user_info of this BlogUserInfo.
        :rtype: BlogPerUserInfo
        """
        return self._blog_user_info

    @blog_user_info.setter
    def blog_user_info(self, blog_user_info):
        """Sets the blog_user_info of this BlogUserInfo.


        :param blog_user_info: The blog_user_info of this BlogUserInfo.
        :type blog_user_info: BlogPerUserInfo
        """

        self._blog_user_info = blog_user_info

    @property
    def kind(self):
        """Gets the kind of this BlogUserInfo.

        The kind of this entity. Always blogger#blogUserInfo.

        :return: The kind of this BlogUserInfo.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this BlogUserInfo.

        The kind of this entity. Always blogger#blogUserInfo.

        :param kind: The kind of this BlogUserInfo.
        :type kind: str
        """

        self._kind = kind
