# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.blog import Blog
from openapi_server.models.blog_user_info import BlogUserInfo
from openapi_server import util


class BlogList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blog_user_infos: List[BlogUserInfo]=None, items: List[Blog]=None, kind: str=None):
        """BlogList - a model defined in OpenAPI

        :param blog_user_infos: The blog_user_infos of this BlogList.
        :param items: The items of this BlogList.
        :param kind: The kind of this BlogList.
        """
        self.openapi_types = {
            'blog_user_infos': List[BlogUserInfo],
            'items': List[Blog],
            'kind': str
        }

        self.attribute_map = {
            'blog_user_infos': 'blogUserInfos',
            'items': 'items',
            'kind': 'kind'
        }

        self._blog_user_infos = blog_user_infos
        self._items = items
        self._kind = kind

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BlogList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BlogList of this BlogList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blog_user_infos(self):
        """Gets the blog_user_infos of this BlogList.

        Admin level list of blog per-user information.

        :return: The blog_user_infos of this BlogList.
        :rtype: List[BlogUserInfo]
        """
        return self._blog_user_infos

    @blog_user_infos.setter
    def blog_user_infos(self, blog_user_infos):
        """Sets the blog_user_infos of this BlogList.

        Admin level list of blog per-user information.

        :param blog_user_infos: The blog_user_infos of this BlogList.
        :type blog_user_infos: List[BlogUserInfo]
        """

        self._blog_user_infos = blog_user_infos

    @property
    def items(self):
        """Gets the items of this BlogList.

        The list of Blogs this user has Authorship or Admin rights over.

        :return: The items of this BlogList.
        :rtype: List[Blog]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this BlogList.

        The list of Blogs this user has Authorship or Admin rights over.

        :param items: The items of this BlogList.
        :type items: List[Blog]
        """

        self._items = items

    @property
    def kind(self):
        """Gets the kind of this BlogList.

        The kind of this entity. Always blogger#blogList.

        :return: The kind of this BlogList.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this BlogList.

        The kind of this entity. Always blogger#blogList.

        :param kind: The kind of this BlogList.
        :type kind: str
        """

        self._kind = kind
