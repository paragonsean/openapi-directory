# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PostPerUserInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blog_id: str=None, has_edit_access: bool=None, kind: str=None, post_id: str=None, user_id: str=None):
        """PostPerUserInfo - a model defined in OpenAPI

        :param blog_id: The blog_id of this PostPerUserInfo.
        :param has_edit_access: The has_edit_access of this PostPerUserInfo.
        :param kind: The kind of this PostPerUserInfo.
        :param post_id: The post_id of this PostPerUserInfo.
        :param user_id: The user_id of this PostPerUserInfo.
        """
        self.openapi_types = {
            'blog_id': str,
            'has_edit_access': bool,
            'kind': str,
            'post_id': str,
            'user_id': str
        }

        self.attribute_map = {
            'blog_id': 'blogId',
            'has_edit_access': 'hasEditAccess',
            'kind': 'kind',
            'post_id': 'postId',
            'user_id': 'userId'
        }

        self._blog_id = blog_id
        self._has_edit_access = has_edit_access
        self._kind = kind
        self._post_id = post_id
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostPerUserInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PostPerUserInfo of this PostPerUserInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blog_id(self):
        """Gets the blog_id of this PostPerUserInfo.

        ID of the Blog that the post resource belongs to.

        :return: The blog_id of this PostPerUserInfo.
        :rtype: str
        """
        return self._blog_id

    @blog_id.setter
    def blog_id(self, blog_id):
        """Sets the blog_id of this PostPerUserInfo.

        ID of the Blog that the post resource belongs to.

        :param blog_id: The blog_id of this PostPerUserInfo.
        :type blog_id: str
        """

        self._blog_id = blog_id

    @property
    def has_edit_access(self):
        """Gets the has_edit_access of this PostPerUserInfo.

        True if the user has Author level access to the post.

        :return: The has_edit_access of this PostPerUserInfo.
        :rtype: bool
        """
        return self._has_edit_access

    @has_edit_access.setter
    def has_edit_access(self, has_edit_access):
        """Sets the has_edit_access of this PostPerUserInfo.

        True if the user has Author level access to the post.

        :param has_edit_access: The has_edit_access of this PostPerUserInfo.
        :type has_edit_access: bool
        """

        self._has_edit_access = has_edit_access

    @property
    def kind(self):
        """Gets the kind of this PostPerUserInfo.

        The kind of this entity. Always blogger#postPerUserInfo.

        :return: The kind of this PostPerUserInfo.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this PostPerUserInfo.

        The kind of this entity. Always blogger#postPerUserInfo.

        :param kind: The kind of this PostPerUserInfo.
        :type kind: str
        """

        self._kind = kind

    @property
    def post_id(self):
        """Gets the post_id of this PostPerUserInfo.

        ID of the Post resource.

        :return: The post_id of this PostPerUserInfo.
        :rtype: str
        """
        return self._post_id

    @post_id.setter
    def post_id(self, post_id):
        """Sets the post_id of this PostPerUserInfo.

        ID of the Post resource.

        :param post_id: The post_id of this PostPerUserInfo.
        :type post_id: str
        """

        self._post_id = post_id

    @property
    def user_id(self):
        """Gets the user_id of this PostPerUserInfo.

        ID of the User.

        :return: The user_id of this PostPerUserInfo.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this PostPerUserInfo.

        ID of the User.

        :param user_id: The user_id of this PostPerUserInfo.
        :type user_id: str
        """

        self._user_id = user_id
