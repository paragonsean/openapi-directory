openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: "The Blogger API provides access to posts, comments and pages of a\
    \ Blogger blog."
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Blogger API
  version: v3
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - format: google
    url: https://blogger.googleapis.com/$discovery/rest?version=v3
    version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: blogger
externalDocs:
  url: https://developers.google.com/blogger/docs/3.0/getting_started
servers:
- url: https://blogger.googleapis.com/
tags:
- name: blogs
- name: blogUserInfos
- name: comments
- name: pages
- name: pageViews
- name: posts
- name: postUserInfos
- name: users
paths:
  /v3/blogs/byurl:
    get:
      description: Gets a blog by url.
      operationId: blogger_blogs_get_by_url
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: url
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - VIEW_TYPE_UNSPECIFIED
          - READER
          - AUTHOR
          - ADMIN
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      - Oauth2:
        - https://www.googleapis.com/auth/blogger.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/blogger.readonly
      tags:
      - blogs
      x-openapi-router-controller: openapi_server.controllers.blogs_controller
  /v3/blogs/{blogId}:
    get:
      description: Gets a blog by id.
      operationId: blogger_blogs_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: maxPosts
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - VIEW_TYPE_UNSPECIFIED
          - READER
          - AUTHOR
          - ADMIN
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      - Oauth2:
        - https://www.googleapis.com/auth/blogger.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/blogger.readonly
      tags:
      - blogs
      x-openapi-router-controller: openapi_server.controllers.blogs_controller
  /v3/blogs/{blogId}/comments:
    get:
      description: Lists comments by blog.
      operationId: blogger_comments_list_by_blog
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: endDate
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: fetchBodies
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: startDate
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: status
        required: false
        schema:
          items:
            enum:
            - LIVE
            - EMPTIED
            - PENDING
            - SPAM
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentList'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      - Oauth2:
        - https://www.googleapis.com/auth/blogger.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/blogger.readonly
      tags:
      - comments
      x-openapi-router-controller: openapi_server.controllers.comments_controller
  /v3/blogs/{blogId}/pages:
    get:
      description: Lists pages.
      operationId: blogger_pages_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: fetchBodies
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: status
        required: false
        schema:
          items:
            enum:
            - LIVE
            - DRAFT
            - SOFT_TRASHED
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - VIEW_TYPE_UNSPECIFIED
          - READER
          - AUTHOR
          - ADMIN
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageList'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      - Oauth2:
        - https://www.googleapis.com/auth/blogger.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/blogger.readonly
      tags:
      - pages
      x-openapi-router-controller: openapi_server.controllers.pages_controller
    post:
      description: Inserts a page.
      operationId: blogger_pages_insert
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: isDraft
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Page'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      tags:
      - pages
      x-openapi-router-controller: openapi_server.controllers.pages_controller
      x-codegen-request-body-name: body
  /v3/blogs/{blogId}/pages/{pageId}:
    delete:
      description: Deletes a page by blog id and page id.
      operationId: blogger_pages_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pageId
        required: true
        schema:
          type: string
        style: simple
      - description: Move to Trash if possible
        explode: true
        in: query
        name: useTrash
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      tags:
      - pages
      x-openapi-router-controller: openapi_server.controllers.pages_controller
    get:
      description: Gets a page by blog id and page id.
      operationId: blogger_pages_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pageId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - VIEW_TYPE_UNSPECIFIED
          - READER
          - AUTHOR
          - ADMIN
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      - Oauth2:
        - https://www.googleapis.com/auth/blogger.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/blogger.readonly
      tags:
      - pages
      x-openapi-router-controller: openapi_server.controllers.pages_controller
    patch:
      description: Patches a page.
      operationId: blogger_pages_patch
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pageId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: publish
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: revert
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Page'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      tags:
      - pages
      x-openapi-router-controller: openapi_server.controllers.pages_controller
      x-codegen-request-body-name: body
    put:
      description: Updates a page by blog id and page id.
      operationId: blogger_pages_update
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pageId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: publish
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: revert
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Page'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      tags:
      - pages
      x-openapi-router-controller: openapi_server.controllers.pages_controller
      x-codegen-request-body-name: body
  /v3/blogs/{blogId}/pages/{pageId}/publish:
    post:
      description: Publishes a page.
      operationId: blogger_pages_publish
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      tags:
      - pages
      x-openapi-router-controller: openapi_server.controllers.pages_controller
  /v3/blogs/{blogId}/pages/{pageId}/revert:
    post:
      description: Reverts a published or scheduled page to draft state.
      operationId: blogger_pages_revert
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      tags:
      - pages
      x-openapi-router-controller: openapi_server.controllers.pages_controller
  /v3/blogs/{blogId}/pageviews:
    get:
      description: Gets page views by blog id.
      operationId: blogger_page_views_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: range
        required: false
        schema:
          items:
            enum:
            - all
            - 30DAYS
            - 7DAYS
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pageviews'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      tags:
      - pageViews
      x-openapi-router-controller: openapi_server.controllers.page_views_controller
  /v3/blogs/{blogId}/posts:
    get:
      description: Lists posts.
      operationId: blogger_posts_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: endDate
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: fetchBodies
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: fetchImages
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: labels
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: orderBy
        required: false
        schema:
          enum:
          - ORDER_BY_UNSPECIFIED
          - PUBLISHED
          - UPDATED
          type: string
        style: form
      - explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: Sort direction applied to post list.
        explode: true
        in: query
        name: sortOption
        required: false
        schema:
          enum:
          - SORT_OPTION_UNSPECIFIED
          - DESCENDING
          - ASCENDING
          type: string
        style: form
      - explode: true
        in: query
        name: startDate
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: status
        required: false
        schema:
          items:
            enum:
            - LIVE
            - DRAFT
            - SCHEDULED
            - SOFT_TRASHED
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - VIEW_TYPE_UNSPECIFIED
          - READER
          - AUTHOR
          - ADMIN
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostList'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      - Oauth2:
        - https://www.googleapis.com/auth/blogger.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/blogger.readonly
      tags:
      - posts
      x-openapi-router-controller: openapi_server.controllers.posts_controller
    post:
      description: Inserts a post.
      operationId: blogger_posts_insert
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: fetchBody
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: fetchImages
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: isDraft
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      tags:
      - posts
      x-openapi-router-controller: openapi_server.controllers.posts_controller
      x-codegen-request-body-name: body
  /v3/blogs/{blogId}/posts/bypath:
    get:
      description: Gets a post by path.
      operationId: blogger_posts_get_by_path
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: maxComments
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - VIEW_TYPE_UNSPECIFIED
          - READER
          - AUTHOR
          - ADMIN
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      - Oauth2:
        - https://www.googleapis.com/auth/blogger.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/blogger.readonly
      tags:
      - posts
      x-openapi-router-controller: openapi_server.controllers.posts_controller
  /v3/blogs/{blogId}/posts/search:
    get:
      description: Searches for posts matching given query terms in the specified
        blog.
      operationId: blogger_posts_search
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: q
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: fetchBodies
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: orderBy
        required: false
        schema:
          enum:
          - ORDER_BY_UNSPECIFIED
          - PUBLISHED
          - UPDATED
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostList'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      - Oauth2:
        - https://www.googleapis.com/auth/blogger.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/blogger.readonly
      tags:
      - posts
      x-openapi-router-controller: openapi_server.controllers.posts_controller
  /v3/blogs/{blogId}/posts/{postId}:
    delete:
      description: Deletes a post by blog id and post id.
      operationId: blogger_posts_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: postId
        required: true
        schema:
          type: string
        style: simple
      - description: Move to Trash if possible
        explode: true
        in: query
        name: useTrash
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      tags:
      - posts
      x-openapi-router-controller: openapi_server.controllers.posts_controller
    get:
      description: Gets a post by blog id and post id
      operationId: blogger_posts_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: postId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: fetchBody
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: fetchImages
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: maxComments
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - VIEW_TYPE_UNSPECIFIED
          - READER
          - AUTHOR
          - ADMIN
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      - Oauth2:
        - https://www.googleapis.com/auth/blogger.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/blogger.readonly
      tags:
      - posts
      x-openapi-router-controller: openapi_server.controllers.posts_controller
    patch:
      description: Patches a post.
      operationId: blogger_posts_patch
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: postId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: fetchBody
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: fetchImages
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: maxComments
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: publish
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: revert
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      tags:
      - posts
      x-openapi-router-controller: openapi_server.controllers.posts_controller
      x-codegen-request-body-name: body
    put:
      description: Updates a post by blog id and post id.
      operationId: blogger_posts_update
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: postId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: fetchBody
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: fetchImages
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: maxComments
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: publish
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: revert
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      tags:
      - posts
      x-openapi-router-controller: openapi_server.controllers.posts_controller
      x-codegen-request-body-name: body
  /v3/blogs/{blogId}/posts/{postId}/comments:
    get:
      description: Lists comments.
      operationId: blogger_comments_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: postId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: endDate
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: fetchBodies
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: startDate
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - LIVE
          - EMPTIED
          - PENDING
          - SPAM
          type: string
        style: form
      - explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - VIEW_TYPE_UNSPECIFIED
          - READER
          - AUTHOR
          - ADMIN
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentList'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      - Oauth2:
        - https://www.googleapis.com/auth/blogger.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/blogger.readonly
      tags:
      - comments
      x-openapi-router-controller: openapi_server.controllers.comments_controller
  /v3/blogs/{blogId}/posts/{postId}/comments/{commentId}:
    delete:
      description: "Deletes a comment by blog id, post id and comment id."
      operationId: blogger_comments_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: postId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: commentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      tags:
      - comments
      x-openapi-router-controller: openapi_server.controllers.comments_controller
    get:
      description: Gets a comment by id.
      operationId: blogger_comments_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: postId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: commentId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - VIEW_TYPE_UNSPECIFIED
          - READER
          - AUTHOR
          - ADMIN
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      - Oauth2:
        - https://www.googleapis.com/auth/blogger.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/blogger.readonly
      tags:
      - comments
      x-openapi-router-controller: openapi_server.controllers.comments_controller
  /v3/blogs/{blogId}/posts/{postId}/comments/{commentId}/approve:
    post:
      description: "Marks a comment as not spam by blog id, post id and comment id."
      operationId: blogger_comments_approve
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: postId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: commentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      tags:
      - comments
      x-openapi-router-controller: openapi_server.controllers.comments_controller
  /v3/blogs/{blogId}/posts/{postId}/comments/{commentId}/removecontent:
    post:
      description: "Removes the content of a comment by blog id, post id and comment\
        \ id."
      operationId: blogger_comments_remove_content
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: postId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: commentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      tags:
      - comments
      x-openapi-router-controller: openapi_server.controllers.comments_controller
  /v3/blogs/{blogId}/posts/{postId}/comments/{commentId}/spam:
    post:
      description: "Marks a comment as spam by blog id, post id and comment id."
      operationId: blogger_comments_mark_as_spam
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: postId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: commentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      tags:
      - comments
      x-openapi-router-controller: openapi_server.controllers.comments_controller
  /v3/blogs/{blogId}/posts/{postId}/publish:
    post:
      description: Publishes a post.
      operationId: blogger_posts_publish
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: postId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: publishDate
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      tags:
      - posts
      x-openapi-router-controller: openapi_server.controllers.posts_controller
  /v3/blogs/{blogId}/posts/{postId}/revert:
    post:
      description: Reverts a published or scheduled post to draft state.
      operationId: blogger_posts_revert
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: postId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      tags:
      - posts
      x-openapi-router-controller: openapi_server.controllers.posts_controller
  /v3/users/{userId}:
    get:
      description: Gets one user by user_id.
      operationId: blogger_users_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      - Oauth2:
        - https://www.googleapis.com/auth/blogger.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/blogger.readonly
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /v3/users/{userId}/blogs:
    get:
      description: Lists blogs by user.
      operationId: blogger_blogs_list_by_user
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: fetchUserInfo
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: role
        required: false
        schema:
          items:
            enum:
            - VIEW_TYPE_UNSPECIFIED
            - READER
            - AUTHOR
            - ADMIN
            type: string
          type: array
        style: form
      - description: Default value of status is LIVE.
        explode: true
        in: query
        name: status
        required: false
        schema:
          items:
            enum:
            - LIVE
            - DELETED
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - VIEW_TYPE_UNSPECIFIED
          - READER
          - AUTHOR
          - ADMIN
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogList'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      - Oauth2:
        - https://www.googleapis.com/auth/blogger.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/blogger.readonly
      tags:
      - blogs
      x-openapi-router-controller: openapi_server.controllers.blogs_controller
  /v3/users/{userId}/blogs/{blogId}:
    get:
      description: Gets one blog and user info pair by blog id and user id.
      operationId: blogger_blog_user_infos_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: maxPosts
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogUserInfo'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      - Oauth2:
        - https://www.googleapis.com/auth/blogger.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/blogger.readonly
      tags:
      - blogUserInfos
      x-openapi-router-controller: openapi_server.controllers.blog_user_infos_controller
  /v3/users/{userId}/blogs/{blogId}/posts:
    get:
      description: Lists post and user info pairs.
      operationId: blogger_post_user_infos_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: endDate
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: fetchBodies
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: labels
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: orderBy
        required: false
        schema:
          enum:
          - ORDER_BY_UNSPECIFIED
          - PUBLISHED
          - UPDATED
          type: string
        style: form
      - explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: startDate
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: status
        required: false
        schema:
          items:
            enum:
            - LIVE
            - DRAFT
            - SCHEDULED
            - SOFT_TRASHED
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - VIEW_TYPE_UNSPECIFIED
          - READER
          - AUTHOR
          - ADMIN
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostUserInfosList'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      - Oauth2:
        - https://www.googleapis.com/auth/blogger.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/blogger.readonly
      tags:
      - postUserInfos
      x-openapi-router-controller: openapi_server.controllers.post_user_infos_controller
  /v3/users/{userId}/blogs/{blogId}/posts/{postId}:
    get:
      description: "Gets one post and user info pair, by post_id and user_id."
      operationId: blogger_post_user_infos_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: blogId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: postId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: maxComments
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostUserInfo'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/blogger
        Oauth2c:
        - https://www.googleapis.com/auth/blogger
      - Oauth2:
        - https://www.googleapis.com/auth/blogger.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/blogger.readonly
      tags:
      - postUserInfos
      x-openapi-router-controller: openapi_server.controllers.post_user_infos_controller
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    Blog:
      example:
        kind: kind
        customMetaData: customMetaData
        description: description
        published: published
        locale:
          country: country
          variant: variant
          language: language
        posts:
          totalItems: 5
          items:
          - images:
            - url: url
            - url: url
            author:
              image:
                url: url
              displayName: displayName
              id: id
              url: url
            kind: kind
            customMetaData: customMetaData
            published: published
            blog:
              id: id
            title: title
            content: content
            url: url
            labels:
            - labels
            - labels
            selfLink: selfLink
            replies:
              totalItems: totalItems
              items:
              - post:
                  id: id
                author:
                  image:
                    url: url
                  displayName: displayName
                  id: id
                  url: url
                kind: kind
                inReplyTo:
                  id: id
                id: id
                published: published
                blog:
                  id: id
                updated: updated
                content: content
                selfLink: selfLink
                status: LIVE
              - post:
                  id: id
                author:
                  image:
                    url: url
                  displayName: displayName
                  id: id
                  url: url
                kind: kind
                inReplyTo:
                  id: id
                id: id
                published: published
                blog:
                  id: id
                updated: updated
                content: content
                selfLink: selfLink
                status: LIVE
              selfLink: selfLink
            readerComments: ALLOW
            etag: etag
            location:
              lng: 1.4658129805029452
              name: name
              lat: 6.027456183070403
              span: span
            id: id
            titleLink: titleLink
            updated: updated
            status: LIVE
            trashed: trashed
          - images:
            - url: url
            - url: url
            author:
              image:
                url: url
              displayName: displayName
              id: id
              url: url
            kind: kind
            customMetaData: customMetaData
            published: published
            blog:
              id: id
            title: title
            content: content
            url: url
            labels:
            - labels
            - labels
            selfLink: selfLink
            replies:
              totalItems: totalItems
              items:
              - post:
                  id: id
                author:
                  image:
                    url: url
                  displayName: displayName
                  id: id
                  url: url
                kind: kind
                inReplyTo:
                  id: id
                id: id
                published: published
                blog:
                  id: id
                updated: updated
                content: content
                selfLink: selfLink
                status: LIVE
              - post:
                  id: id
                author:
                  image:
                    url: url
                  displayName: displayName
                  id: id
                  url: url
                kind: kind
                inReplyTo:
                  id: id
                id: id
                published: published
                blog:
                  id: id
                updated: updated
                content: content
                selfLink: selfLink
                status: LIVE
              selfLink: selfLink
            readerComments: ALLOW
            etag: etag
            location:
              lng: 1.4658129805029452
              name: name
              lat: 6.027456183070403
              span: span
            id: id
            titleLink: titleLink
            updated: updated
            status: LIVE
            trashed: trashed
          selfLink: selfLink
        url: url
        selfLink: selfLink
        pages:
          totalItems: 0
          selfLink: selfLink
        name: name
        id: id
        updated: updated
        status: LIVE
      properties:
        customMetaData:
          description: The JSON custom meta-data for the Blog.
          title: customMetaData
          type: string
        description:
          description: The description of this blog. This is displayed underneath
            the title.
          title: description
          type: string
        id:
          description: The identifier for this resource.
          title: id
          type: string
        kind:
          description: The kind of this entry. Always blogger#blog.
          title: kind
          type: string
        locale:
          $ref: '#/components/schemas/Blog_locale'
        name:
          description: The name of this blog. This is displayed as the title.
          title: name
          type: string
        pages:
          $ref: '#/components/schemas/Blog_pages'
        posts:
          $ref: '#/components/schemas/Blog_posts'
        published:
          description: RFC 3339 date-time when this blog was published.
          title: published
          type: string
        selfLink:
          description: The API REST URL to fetch this resource from.
          title: selfLink
          type: string
        status:
          description: The status of the blog.
          enum:
          - LIVE
          - DELETED
          title: status
          type: string
        updated:
          description: RFC 3339 date-time when this blog was last updated.
          title: updated
          type: string
        url:
          description: The URL where this blog is published.
          title: url
          type: string
      title: Blog
      type: object
    BlogList:
      example:
        kind: kind
        items:
        - kind: kind
          customMetaData: customMetaData
          description: description
          published: published
          locale:
            country: country
            variant: variant
            language: language
          posts:
            totalItems: 5
            items:
            - images:
              - url: url
              - url: url
              author:
                image:
                  url: url
                displayName: displayName
                id: id
                url: url
              kind: kind
              customMetaData: customMetaData
              published: published
              blog:
                id: id
              title: title
              content: content
              url: url
              labels:
              - labels
              - labels
              selfLink: selfLink
              replies:
                totalItems: totalItems
                items:
                - post:
                    id: id
                  author:
                    image:
                      url: url
                    displayName: displayName
                    id: id
                    url: url
                  kind: kind
                  inReplyTo:
                    id: id
                  id: id
                  published: published
                  blog:
                    id: id
                  updated: updated
                  content: content
                  selfLink: selfLink
                  status: LIVE
                - post:
                    id: id
                  author:
                    image:
                      url: url
                    displayName: displayName
                    id: id
                    url: url
                  kind: kind
                  inReplyTo:
                    id: id
                  id: id
                  published: published
                  blog:
                    id: id
                  updated: updated
                  content: content
                  selfLink: selfLink
                  status: LIVE
                selfLink: selfLink
              readerComments: ALLOW
              etag: etag
              location:
                lng: 1.4658129805029452
                name: name
                lat: 6.027456183070403
                span: span
              id: id
              titleLink: titleLink
              updated: updated
              status: LIVE
              trashed: trashed
            - images:
              - url: url
              - url: url
              author:
                image:
                  url: url
                displayName: displayName
                id: id
                url: url
              kind: kind
              customMetaData: customMetaData
              published: published
              blog:
                id: id
              title: title
              content: content
              url: url
              labels:
              - labels
              - labels
              selfLink: selfLink
              replies:
                totalItems: totalItems
                items:
                - post:
                    id: id
                  author:
                    image:
                      url: url
                    displayName: displayName
                    id: id
                    url: url
                  kind: kind
                  inReplyTo:
                    id: id
                  id: id
                  published: published
                  blog:
                    id: id
                  updated: updated
                  content: content
                  selfLink: selfLink
                  status: LIVE
                - post:
                    id: id
                  author:
                    image:
                      url: url
                    displayName: displayName
                    id: id
                    url: url
                  kind: kind
                  inReplyTo:
                    id: id
                  id: id
                  published: published
                  blog:
                    id: id
                  updated: updated
                  content: content
                  selfLink: selfLink
                  status: LIVE
                selfLink: selfLink
              readerComments: ALLOW
              etag: etag
              location:
                lng: 1.4658129805029452
                name: name
                lat: 6.027456183070403
                span: span
              id: id
              titleLink: titleLink
              updated: updated
              status: LIVE
              trashed: trashed
            selfLink: selfLink
          url: url
          selfLink: selfLink
          pages:
            totalItems: 0
            selfLink: selfLink
          name: name
          id: id
          updated: updated
          status: LIVE
        - kind: kind
          customMetaData: customMetaData
          description: description
          published: published
          locale:
            country: country
            variant: variant
            language: language
          posts:
            totalItems: 5
            items:
            - images:
              - url: url
              - url: url
              author:
                image:
                  url: url
                displayName: displayName
                id: id
                url: url
              kind: kind
              customMetaData: customMetaData
              published: published
              blog:
                id: id
              title: title
              content: content
              url: url
              labels:
              - labels
              - labels
              selfLink: selfLink
              replies:
                totalItems: totalItems
                items:
                - post:
                    id: id
                  author:
                    image:
                      url: url
                    displayName: displayName
                    id: id
                    url: url
                  kind: kind
                  inReplyTo:
                    id: id
                  id: id
                  published: published
                  blog:
                    id: id
                  updated: updated
                  content: content
                  selfLink: selfLink
                  status: LIVE
                - post:
                    id: id
                  author:
                    image:
                      url: url
                    displayName: displayName
                    id: id
                    url: url
                  kind: kind
                  inReplyTo:
                    id: id
                  id: id
                  published: published
                  blog:
                    id: id
                  updated: updated
                  content: content
                  selfLink: selfLink
                  status: LIVE
                selfLink: selfLink
              readerComments: ALLOW
              etag: etag
              location:
                lng: 1.4658129805029452
                name: name
                lat: 6.027456183070403
                span: span
              id: id
              titleLink: titleLink
              updated: updated
              status: LIVE
              trashed: trashed
            - images:
              - url: url
              - url: url
              author:
                image:
                  url: url
                displayName: displayName
                id: id
                url: url
              kind: kind
              customMetaData: customMetaData
              published: published
              blog:
                id: id
              title: title
              content: content
              url: url
              labels:
              - labels
              - labels
              selfLink: selfLink
              replies:
                totalItems: totalItems
                items:
                - post:
                    id: id
                  author:
                    image:
                      url: url
                    displayName: displayName
                    id: id
                    url: url
                  kind: kind
                  inReplyTo:
                    id: id
                  id: id
                  published: published
                  blog:
                    id: id
                  updated: updated
                  content: content
                  selfLink: selfLink
                  status: LIVE
                - post:
                    id: id
                  author:
                    image:
                      url: url
                    displayName: displayName
                    id: id
                    url: url
                  kind: kind
                  inReplyTo:
                    id: id
                  id: id
                  published: published
                  blog:
                    id: id
                  updated: updated
                  content: content
                  selfLink: selfLink
                  status: LIVE
                selfLink: selfLink
              readerComments: ALLOW
              etag: etag
              location:
                lng: 1.4658129805029452
                name: name
                lat: 6.027456183070403
                span: span
              id: id
              titleLink: titleLink
              updated: updated
              status: LIVE
              trashed: trashed
            selfLink: selfLink
          url: url
          selfLink: selfLink
          pages:
            totalItems: 0
            selfLink: selfLink
          name: name
          id: id
          updated: updated
          status: LIVE
        blogUserInfos:
        - blog_user_info:
            role: VIEW_TYPE_UNSPECIFIED
            kind: kind
            blogId: blogId
            photosAlbumKey: photosAlbumKey
            userId: userId
            hasAdminAccess: true
          kind: kind
          blog:
            kind: kind
            customMetaData: customMetaData
            description: description
            published: published
            locale:
              country: country
              variant: variant
              language: language
            posts:
              totalItems: 5
              items:
              - images:
                - url: url
                - url: url
                author:
                  image:
                    url: url
                  displayName: displayName
                  id: id
                  url: url
                kind: kind
                customMetaData: customMetaData
                published: published
                blog:
                  id: id
                title: title
                content: content
                url: url
                labels:
                - labels
                - labels
                selfLink: selfLink
                replies:
                  totalItems: totalItems
                  items:
                  - post:
                      id: id
                    author:
                      image:
                        url: url
                      displayName: displayName
                      id: id
                      url: url
                    kind: kind
                    inReplyTo:
                      id: id
                    id: id
                    published: published
                    blog:
                      id: id
                    updated: updated
                    content: content
                    selfLink: selfLink
                    status: LIVE
                  - post:
                      id: id
                    author:
                      image:
                        url: url
                      displayName: displayName
                      id: id
                      url: url
                    kind: kind
                    inReplyTo:
                      id: id
                    id: id
                    published: published
                    blog:
                      id: id
                    updated: updated
                    content: content
                    selfLink: selfLink
                    status: LIVE
                  selfLink: selfLink
                readerComments: ALLOW
                etag: etag
                location:
                  lng: 1.4658129805029452
                  name: name
                  lat: 6.027456183070403
                  span: span
                id: id
                titleLink: titleLink
                updated: updated
                status: LIVE
                trashed: trashed
              - images:
                - url: url
                - url: url
                author:
                  image:
                    url: url
                  displayName: displayName
                  id: id
                  url: url
                kind: kind
                customMetaData: customMetaData
                published: published
                blog:
                  id: id
                title: title
                content: content
                url: url
                labels:
                - labels
                - labels
                selfLink: selfLink
                replies:
                  totalItems: totalItems
                  items:
                  - post:
                      id: id
                    author:
                      image:
                        url: url
                      displayName: displayName
                      id: id
                      url: url
                    kind: kind
                    inReplyTo:
                      id: id
                    id: id
                    published: published
                    blog:
                      id: id
                    updated: updated
                    content: content
                    selfLink: selfLink
                    status: LIVE
                  - post:
                      id: id
                    author:
                      image:
                        url: url
                      displayName: displayName
                      id: id
                      url: url
                    kind: kind
                    inReplyTo:
                      id: id
                    id: id
                    published: published
                    blog:
                      id: id
                    updated: updated
                    content: content
                    selfLink: selfLink
                    status: LIVE
                  selfLink: selfLink
                readerComments: ALLOW
                etag: etag
                location:
                  lng: 1.4658129805029452
                  name: name
                  lat: 6.027456183070403
                  span: span
                id: id
                titleLink: titleLink
                updated: updated
                status: LIVE
                trashed: trashed
              selfLink: selfLink
            url: url
            selfLink: selfLink
            pages:
              totalItems: 0
              selfLink: selfLink
            name: name
            id: id
            updated: updated
            status: LIVE
        - blog_user_info:
            role: VIEW_TYPE_UNSPECIFIED
            kind: kind
            blogId: blogId
            photosAlbumKey: photosAlbumKey
            userId: userId
            hasAdminAccess: true
          kind: kind
          blog:
            kind: kind
            customMetaData: customMetaData
            description: description
            published: published
            locale:
              country: country
              variant: variant
              language: language
            posts:
              totalItems: 5
              items:
              - images:
                - url: url
                - url: url
                author:
                  image:
                    url: url
                  displayName: displayName
                  id: id
                  url: url
                kind: kind
                customMetaData: customMetaData
                published: published
                blog:
                  id: id
                title: title
                content: content
                url: url
                labels:
                - labels
                - labels
                selfLink: selfLink
                replies:
                  totalItems: totalItems
                  items:
                  - post:
                      id: id
                    author:
                      image:
                        url: url
                      displayName: displayName
                      id: id
                      url: url
                    kind: kind
                    inReplyTo:
                      id: id
                    id: id
                    published: published
                    blog:
                      id: id
                    updated: updated
                    content: content
                    selfLink: selfLink
                    status: LIVE
                  - post:
                      id: id
                    author:
                      image:
                        url: url
                      displayName: displayName
                      id: id
                      url: url
                    kind: kind
                    inReplyTo:
                      id: id
                    id: id
                    published: published
                    blog:
                      id: id
                    updated: updated
                    content: content
                    selfLink: selfLink
                    status: LIVE
                  selfLink: selfLink
                readerComments: ALLOW
                etag: etag
                location:
                  lng: 1.4658129805029452
                  name: name
                  lat: 6.027456183070403
                  span: span
                id: id
                titleLink: titleLink
                updated: updated
                status: LIVE
                trashed: trashed
              - images:
                - url: url
                - url: url
                author:
                  image:
                    url: url
                  displayName: displayName
                  id: id
                  url: url
                kind: kind
                customMetaData: customMetaData
                published: published
                blog:
                  id: id
                title: title
                content: content
                url: url
                labels:
                - labels
                - labels
                selfLink: selfLink
                replies:
                  totalItems: totalItems
                  items:
                  - post:
                      id: id
                    author:
                      image:
                        url: url
                      displayName: displayName
                      id: id
                      url: url
                    kind: kind
                    inReplyTo:
                      id: id
                    id: id
                    published: published
                    blog:
                      id: id
                    updated: updated
                    content: content
                    selfLink: selfLink
                    status: LIVE
                  - post:
                      id: id
                    author:
                      image:
                        url: url
                      displayName: displayName
                      id: id
                      url: url
                    kind: kind
                    inReplyTo:
                      id: id
                    id: id
                    published: published
                    blog:
                      id: id
                    updated: updated
                    content: content
                    selfLink: selfLink
                    status: LIVE
                  selfLink: selfLink
                readerComments: ALLOW
                etag: etag
                location:
                  lng: 1.4658129805029452
                  name: name
                  lat: 6.027456183070403
                  span: span
                id: id
                titleLink: titleLink
                updated: updated
                status: LIVE
                trashed: trashed
              selfLink: selfLink
            url: url
            selfLink: selfLink
            pages:
              totalItems: 0
              selfLink: selfLink
            name: name
            id: id
            updated: updated
            status: LIVE
      properties:
        blogUserInfos:
          description: Admin level list of blog per-user information.
          items:
            $ref: '#/components/schemas/BlogUserInfo'
          title: blogUserInfos
          type: array
        items:
          description: The list of Blogs this user has Authorship or Admin rights
            over.
          items:
            $ref: '#/components/schemas/Blog'
          title: items
          type: array
        kind:
          description: The kind of this entity. Always blogger#blogList.
          title: kind
          type: string
      title: BlogList
      type: object
    BlogPerUserInfo:
      example:
        role: VIEW_TYPE_UNSPECIFIED
        kind: kind
        blogId: blogId
        photosAlbumKey: photosAlbumKey
        userId: userId
        hasAdminAccess: true
      properties:
        blogId:
          description: ID of the Blog resource.
          title: blogId
          type: string
        hasAdminAccess:
          description: True if the user has Admin level access to the blog.
          title: hasAdminAccess
          type: boolean
        kind:
          description: The kind of this entity. Always blogger#blogPerUserInfo.
          title: kind
          type: string
        photosAlbumKey:
          description: The Photo Album Key for the user when adding photos to the
            blog.
          title: photosAlbumKey
          type: string
        role:
          description: "Access permissions that the user has for the blog (ADMIN,\
            \ AUTHOR, or READER)."
          enum:
          - VIEW_TYPE_UNSPECIFIED
          - READER
          - AUTHOR
          - ADMIN
          title: role
          type: string
        userId:
          description: ID of the User.
          title: userId
          type: string
      title: BlogPerUserInfo
      type: object
    BlogUserInfo:
      example:
        blog_user_info:
          role: VIEW_TYPE_UNSPECIFIED
          kind: kind
          blogId: blogId
          photosAlbumKey: photosAlbumKey
          userId: userId
          hasAdminAccess: true
        kind: kind
        blog:
          kind: kind
          customMetaData: customMetaData
          description: description
          published: published
          locale:
            country: country
            variant: variant
            language: language
          posts:
            totalItems: 5
            items:
            - images:
              - url: url
              - url: url
              author:
                image:
                  url: url
                displayName: displayName
                id: id
                url: url
              kind: kind
              customMetaData: customMetaData
              published: published
              blog:
                id: id
              title: title
              content: content
              url: url
              labels:
              - labels
              - labels
              selfLink: selfLink
              replies:
                totalItems: totalItems
                items:
                - post:
                    id: id
                  author:
                    image:
                      url: url
                    displayName: displayName
                    id: id
                    url: url
                  kind: kind
                  inReplyTo:
                    id: id
                  id: id
                  published: published
                  blog:
                    id: id
                  updated: updated
                  content: content
                  selfLink: selfLink
                  status: LIVE
                - post:
                    id: id
                  author:
                    image:
                      url: url
                    displayName: displayName
                    id: id
                    url: url
                  kind: kind
                  inReplyTo:
                    id: id
                  id: id
                  published: published
                  blog:
                    id: id
                  updated: updated
                  content: content
                  selfLink: selfLink
                  status: LIVE
                selfLink: selfLink
              readerComments: ALLOW
              etag: etag
              location:
                lng: 1.4658129805029452
                name: name
                lat: 6.027456183070403
                span: span
              id: id
              titleLink: titleLink
              updated: updated
              status: LIVE
              trashed: trashed
            - images:
              - url: url
              - url: url
              author:
                image:
                  url: url
                displayName: displayName
                id: id
                url: url
              kind: kind
              customMetaData: customMetaData
              published: published
              blog:
                id: id
              title: title
              content: content
              url: url
              labels:
              - labels
              - labels
              selfLink: selfLink
              replies:
                totalItems: totalItems
                items:
                - post:
                    id: id
                  author:
                    image:
                      url: url
                    displayName: displayName
                    id: id
                    url: url
                  kind: kind
                  inReplyTo:
                    id: id
                  id: id
                  published: published
                  blog:
                    id: id
                  updated: updated
                  content: content
                  selfLink: selfLink
                  status: LIVE
                - post:
                    id: id
                  author:
                    image:
                      url: url
                    displayName: displayName
                    id: id
                    url: url
                  kind: kind
                  inReplyTo:
                    id: id
                  id: id
                  published: published
                  blog:
                    id: id
                  updated: updated
                  content: content
                  selfLink: selfLink
                  status: LIVE
                selfLink: selfLink
              readerComments: ALLOW
              etag: etag
              location:
                lng: 1.4658129805029452
                name: name
                lat: 6.027456183070403
                span: span
              id: id
              titleLink: titleLink
              updated: updated
              status: LIVE
              trashed: trashed
            selfLink: selfLink
          url: url
          selfLink: selfLink
          pages:
            totalItems: 0
            selfLink: selfLink
          name: name
          id: id
          updated: updated
          status: LIVE
      properties:
        blog:
          $ref: '#/components/schemas/Blog'
        blog_user_info:
          $ref: '#/components/schemas/BlogPerUserInfo'
        kind:
          description: The kind of this entity. Always blogger#blogUserInfo.
          title: kind
          type: string
      title: BlogUserInfo
      type: object
    Comment:
      example:
        post:
          id: id
        author:
          image:
            url: url
          displayName: displayName
          id: id
          url: url
        kind: kind
        inReplyTo:
          id: id
        id: id
        published: published
        blog:
          id: id
        updated: updated
        content: content
        selfLink: selfLink
        status: LIVE
      properties:
        author:
          $ref: '#/components/schemas/Comment_author'
        blog:
          $ref: '#/components/schemas/Comment_blog'
        content:
          description: The actual content of the comment. May include HTML markup.
          title: content
          type: string
        id:
          description: The identifier for this resource.
          title: id
          type: string
        inReplyTo:
          $ref: '#/components/schemas/Comment_inReplyTo'
        kind:
          description: The kind of this entry. Always blogger#comment.
          title: kind
          type: string
        post:
          $ref: '#/components/schemas/Comment_post'
        published:
          description: RFC 3339 date-time when this comment was published.
          title: published
          type: string
        selfLink:
          description: The API REST URL to fetch this resource from.
          title: selfLink
          type: string
        status:
          description: The status of the comment (only populated for admin users).
          enum:
          - LIVE
          - EMPTIED
          - PENDING
          - SPAM
          title: status
          type: string
        updated:
          description: RFC 3339 date-time when this comment was last updated.
          title: updated
          type: string
      title: Comment
      type: object
    CommentList:
      example:
        prevPageToken: prevPageToken
        kind: kind
        nextPageToken: nextPageToken
        etag: etag
        items:
        - post:
            id: id
          author:
            image:
              url: url
            displayName: displayName
            id: id
            url: url
          kind: kind
          inReplyTo:
            id: id
          id: id
          published: published
          blog:
            id: id
          updated: updated
          content: content
          selfLink: selfLink
          status: LIVE
        - post:
            id: id
          author:
            image:
              url: url
            displayName: displayName
            id: id
            url: url
          kind: kind
          inReplyTo:
            id: id
          id: id
          published: published
          blog:
            id: id
          updated: updated
          content: content
          selfLink: selfLink
          status: LIVE
      properties:
        etag:
          description: Etag of the response.
          title: etag
          type: string
        items:
          description: The List of Comments for a Post.
          items:
            $ref: '#/components/schemas/Comment'
          title: items
          type: array
        kind:
          description: The kind of this entry. Always blogger#commentList.
          title: kind
          type: string
        nextPageToken:
          description: "Pagination token to fetch the next page, if one exists."
          title: nextPageToken
          type: string
        prevPageToken:
          description: "Pagination token to fetch the previous page, if one exists."
          title: prevPageToken
          type: string
      title: CommentList
      type: object
    Page:
      example:
        author:
          image:
            url: url
          displayName: displayName
          id: id
          url: url
        kind: kind
        published: published
        blog:
          id: id
        title: title
        content: content
        url: url
        selfLink: selfLink
        etag: etag
        id: id
        updated: updated
        status: LIVE
        trashed: trashed
      properties:
        author:
          $ref: '#/components/schemas/Page_author'
        blog:
          $ref: '#/components/schemas/Page_blog'
        content:
          description: "The body content of this Page, in HTML."
          title: content
          type: string
        etag:
          description: Etag of the resource.
          title: etag
          type: string
        id:
          description: The identifier for this resource.
          title: id
          type: string
        kind:
          description: The kind of this entity. Always blogger#page.
          title: kind
          type: string
        published:
          description: RFC 3339 date-time when this Page was published.
          title: published
          type: string
        selfLink:
          description: The API REST URL to fetch this resource from.
          title: selfLink
          type: string
        status:
          description: The status of the page for admin resources (either LIVE or
            DRAFT).
          enum:
          - LIVE
          - DRAFT
          - SOFT_TRASHED
          title: status
          type: string
        title:
          description: The title of this entity. This is the name displayed in the
            Admin user interface.
          title: title
          type: string
        trashed:
          description: RFC 3339 date-time when this Page was trashed.
          title: trashed
          type: string
        updated:
          description: RFC 3339 date-time when this Page was last updated.
          title: updated
          type: string
        url:
          description: The URL that this Page is displayed at.
          title: url
          type: string
      title: Page
      type: object
    PageList:
      example:
        kind: kind
        nextPageToken: nextPageToken
        etag: etag
        items:
        - author:
            image:
              url: url
            displayName: displayName
            id: id
            url: url
          kind: kind
          published: published
          blog:
            id: id
          title: title
          content: content
          url: url
          selfLink: selfLink
          etag: etag
          id: id
          updated: updated
          status: LIVE
          trashed: trashed
        - author:
            image:
              url: url
            displayName: displayName
            id: id
            url: url
          kind: kind
          published: published
          blog:
            id: id
          title: title
          content: content
          url: url
          selfLink: selfLink
          etag: etag
          id: id
          updated: updated
          status: LIVE
          trashed: trashed
      properties:
        etag:
          description: Etag of the response.
          title: etag
          type: string
        items:
          description: The list of Pages for a Blog.
          items:
            $ref: '#/components/schemas/Page'
          title: items
          type: array
        kind:
          description: The kind of this entity. Always blogger#pageList.
          title: kind
          type: string
        nextPageToken:
          description: "Pagination token to fetch the next page, if one exists."
          title: nextPageToken
          type: string
      title: PageList
      type: object
    Pageviews:
      example:
        counts:
        - count: count
          timeRange: ALL_TIME
        - count: count
          timeRange: ALL_TIME
        kind: kind
        blogId: blogId
      properties:
        blogId:
          description: Blog Id.
          title: blogId
          type: string
        counts:
          description: The container of posts in this blog.
          items:
            $ref: '#/components/schemas/Pageviews_counts_inner'
          title: counts
          type: array
        kind:
          description: The kind of this entry. Always blogger#page_views.
          title: kind
          type: string
      title: Pageviews
      type: object
    Post:
      example:
        images:
        - url: url
        - url: url
        author:
          image:
            url: url
          displayName: displayName
          id: id
          url: url
        kind: kind
        customMetaData: customMetaData
        published: published
        blog:
          id: id
        title: title
        content: content
        url: url
        labels:
        - labels
        - labels
        selfLink: selfLink
        replies:
          totalItems: totalItems
          items:
          - post:
              id: id
            author:
              image:
                url: url
              displayName: displayName
              id: id
              url: url
            kind: kind
            inReplyTo:
              id: id
            id: id
            published: published
            blog:
              id: id
            updated: updated
            content: content
            selfLink: selfLink
            status: LIVE
          - post:
              id: id
            author:
              image:
                url: url
              displayName: displayName
              id: id
              url: url
            kind: kind
            inReplyTo:
              id: id
            id: id
            published: published
            blog:
              id: id
            updated: updated
            content: content
            selfLink: selfLink
            status: LIVE
          selfLink: selfLink
        readerComments: ALLOW
        etag: etag
        location:
          lng: 1.4658129805029452
          name: name
          lat: 6.027456183070403
          span: span
        id: id
        titleLink: titleLink
        updated: updated
        status: LIVE
        trashed: trashed
      properties:
        author:
          $ref: '#/components/schemas/Post_author'
        blog:
          $ref: '#/components/schemas/Post_blog'
        content:
          description: The content of the Post. May contain HTML markup.
          title: content
          type: string
        customMetaData:
          description: The JSON meta-data for the Post.
          title: customMetaData
          type: string
        etag:
          description: Etag of the resource.
          title: etag
          type: string
        id:
          description: The identifier of this Post.
          title: id
          type: string
        images:
          description: Display image for the Post.
          items:
            $ref: '#/components/schemas/Post_images_inner'
          title: images
          type: array
        kind:
          description: The kind of this entity. Always blogger#post.
          title: kind
          type: string
        labels:
          description: The list of labels this Post was tagged with.
          items:
            type: string
          title: labels
          type: array
        location:
          $ref: '#/components/schemas/Post_location'
        published:
          description: RFC 3339 date-time when this Post was published.
          title: published
          type: string
        readerComments:
          description: Comment control and display setting for readers of this post.
          enum:
          - ALLOW
          - DONT_ALLOW_SHOW_EXISTING
          - DONT_ALLOW_HIDE_EXISTING
          title: readerComments
          type: string
        replies:
          $ref: '#/components/schemas/Post_replies'
        selfLink:
          description: The API REST URL to fetch this resource from.
          title: selfLink
          type: string
        status:
          description: Status of the post. Only set for admin-level requests.
          enum:
          - LIVE
          - DRAFT
          - SCHEDULED
          - SOFT_TRASHED
          title: status
          type: string
        title:
          description: The title of the Post.
          title: title
          type: string
        titleLink:
          description: "The title link URL, similar to atom's related link."
          title: titleLink
          type: string
        trashed:
          description: RFC 3339 date-time when this Post was last trashed.
          title: trashed
          type: string
        updated:
          description: RFC 3339 date-time when this Post was last updated.
          title: updated
          type: string
        url:
          description: The URL where this Post is displayed.
          title: url
          type: string
      title: Post
      type: object
    PostList:
      example:
        prevPageToken: prevPageToken
        kind: kind
        nextPageToken: nextPageToken
        etag: etag
        items:
        - images:
          - url: url
          - url: url
          author:
            image:
              url: url
            displayName: displayName
            id: id
            url: url
          kind: kind
          customMetaData: customMetaData
          published: published
          blog:
            id: id
          title: title
          content: content
          url: url
          labels:
          - labels
          - labels
          selfLink: selfLink
          replies:
            totalItems: totalItems
            items:
            - post:
                id: id
              author:
                image:
                  url: url
                displayName: displayName
                id: id
                url: url
              kind: kind
              inReplyTo:
                id: id
              id: id
              published: published
              blog:
                id: id
              updated: updated
              content: content
              selfLink: selfLink
              status: LIVE
            - post:
                id: id
              author:
                image:
                  url: url
                displayName: displayName
                id: id
                url: url
              kind: kind
              inReplyTo:
                id: id
              id: id
              published: published
              blog:
                id: id
              updated: updated
              content: content
              selfLink: selfLink
              status: LIVE
            selfLink: selfLink
          readerComments: ALLOW
          etag: etag
          location:
            lng: 1.4658129805029452
            name: name
            lat: 6.027456183070403
            span: span
          id: id
          titleLink: titleLink
          updated: updated
          status: LIVE
          trashed: trashed
        - images:
          - url: url
          - url: url
          author:
            image:
              url: url
            displayName: displayName
            id: id
            url: url
          kind: kind
          customMetaData: customMetaData
          published: published
          blog:
            id: id
          title: title
          content: content
          url: url
          labels:
          - labels
          - labels
          selfLink: selfLink
          replies:
            totalItems: totalItems
            items:
            - post:
                id: id
              author:
                image:
                  url: url
                displayName: displayName
                id: id
                url: url
              kind: kind
              inReplyTo:
                id: id
              id: id
              published: published
              blog:
                id: id
              updated: updated
              content: content
              selfLink: selfLink
              status: LIVE
            - post:
                id: id
              author:
                image:
                  url: url
                displayName: displayName
                id: id
                url: url
              kind: kind
              inReplyTo:
                id: id
              id: id
              published: published
              blog:
                id: id
              updated: updated
              content: content
              selfLink: selfLink
              status: LIVE
            selfLink: selfLink
          readerComments: ALLOW
          etag: etag
          location:
            lng: 1.4658129805029452
            name: name
            lat: 6.027456183070403
            span: span
          id: id
          titleLink: titleLink
          updated: updated
          status: LIVE
          trashed: trashed
      properties:
        etag:
          description: Etag of the response.
          title: etag
          type: string
        items:
          description: The list of Posts for this Blog.
          items:
            $ref: '#/components/schemas/Post'
          title: items
          type: array
        kind:
          description: The kind of this entity. Always blogger#postList.
          title: kind
          type: string
        nextPageToken:
          description: "Pagination token to fetch the next page, if one exists."
          title: nextPageToken
          type: string
        prevPageToken:
          description: "Pagination token to fetch the previous page, if one exists."
          title: prevPageToken
          type: string
      title: PostList
      type: object
    PostPerUserInfo:
      example:
        hasEditAccess: true
        kind: kind
        postId: postId
        blogId: blogId
        userId: userId
      properties:
        blogId:
          description: ID of the Blog that the post resource belongs to.
          title: blogId
          type: string
        hasEditAccess:
          description: True if the user has Author level access to the post.
          title: hasEditAccess
          type: boolean
        kind:
          description: The kind of this entity. Always blogger#postPerUserInfo.
          title: kind
          type: string
        postId:
          description: ID of the Post resource.
          title: postId
          type: string
        userId:
          description: ID of the User.
          title: userId
          type: string
      title: PostPerUserInfo
      type: object
    PostUserInfo:
      example:
        post:
          images:
          - url: url
          - url: url
          author:
            image:
              url: url
            displayName: displayName
            id: id
            url: url
          kind: kind
          customMetaData: customMetaData
          published: published
          blog:
            id: id
          title: title
          content: content
          url: url
          labels:
          - labels
          - labels
          selfLink: selfLink
          replies:
            totalItems: totalItems
            items:
            - post:
                id: id
              author:
                image:
                  url: url
                displayName: displayName
                id: id
                url: url
              kind: kind
              inReplyTo:
                id: id
              id: id
              published: published
              blog:
                id: id
              updated: updated
              content: content
              selfLink: selfLink
              status: LIVE
            - post:
                id: id
              author:
                image:
                  url: url
                displayName: displayName
                id: id
                url: url
              kind: kind
              inReplyTo:
                id: id
              id: id
              published: published
              blog:
                id: id
              updated: updated
              content: content
              selfLink: selfLink
              status: LIVE
            selfLink: selfLink
          readerComments: ALLOW
          etag: etag
          location:
            lng: 1.4658129805029452
            name: name
            lat: 6.027456183070403
            span: span
          id: id
          titleLink: titleLink
          updated: updated
          status: LIVE
          trashed: trashed
        kind: kind
        post_user_info:
          hasEditAccess: true
          kind: kind
          postId: postId
          blogId: blogId
          userId: userId
      properties:
        kind:
          description: The kind of this entity. Always blogger#postUserInfo.
          title: kind
          type: string
        post:
          $ref: '#/components/schemas/Post'
        post_user_info:
          $ref: '#/components/schemas/PostPerUserInfo'
      title: PostUserInfo
      type: object
    PostUserInfosList:
      example:
        kind: kind
        nextPageToken: nextPageToken
        items:
        - post:
            images:
            - url: url
            - url: url
            author:
              image:
                url: url
              displayName: displayName
              id: id
              url: url
            kind: kind
            customMetaData: customMetaData
            published: published
            blog:
              id: id
            title: title
            content: content
            url: url
            labels:
            - labels
            - labels
            selfLink: selfLink
            replies:
              totalItems: totalItems
              items:
              - post:
                  id: id
                author:
                  image:
                    url: url
                  displayName: displayName
                  id: id
                  url: url
                kind: kind
                inReplyTo:
                  id: id
                id: id
                published: published
                blog:
                  id: id
                updated: updated
                content: content
                selfLink: selfLink
                status: LIVE
              - post:
                  id: id
                author:
                  image:
                    url: url
                  displayName: displayName
                  id: id
                  url: url
                kind: kind
                inReplyTo:
                  id: id
                id: id
                published: published
                blog:
                  id: id
                updated: updated
                content: content
                selfLink: selfLink
                status: LIVE
              selfLink: selfLink
            readerComments: ALLOW
            etag: etag
            location:
              lng: 1.4658129805029452
              name: name
              lat: 6.027456183070403
              span: span
            id: id
            titleLink: titleLink
            updated: updated
            status: LIVE
            trashed: trashed
          kind: kind
          post_user_info:
            hasEditAccess: true
            kind: kind
            postId: postId
            blogId: blogId
            userId: userId
        - post:
            images:
            - url: url
            - url: url
            author:
              image:
                url: url
              displayName: displayName
              id: id
              url: url
            kind: kind
            customMetaData: customMetaData
            published: published
            blog:
              id: id
            title: title
            content: content
            url: url
            labels:
            - labels
            - labels
            selfLink: selfLink
            replies:
              totalItems: totalItems
              items:
              - post:
                  id: id
                author:
                  image:
                    url: url
                  displayName: displayName
                  id: id
                  url: url
                kind: kind
                inReplyTo:
                  id: id
                id: id
                published: published
                blog:
                  id: id
                updated: updated
                content: content
                selfLink: selfLink
                status: LIVE
              - post:
                  id: id
                author:
                  image:
                    url: url
                  displayName: displayName
                  id: id
                  url: url
                kind: kind
                inReplyTo:
                  id: id
                id: id
                published: published
                blog:
                  id: id
                updated: updated
                content: content
                selfLink: selfLink
                status: LIVE
              selfLink: selfLink
            readerComments: ALLOW
            etag: etag
            location:
              lng: 1.4658129805029452
              name: name
              lat: 6.027456183070403
              span: span
            id: id
            titleLink: titleLink
            updated: updated
            status: LIVE
            trashed: trashed
          kind: kind
          post_user_info:
            hasEditAccess: true
            kind: kind
            postId: postId
            blogId: blogId
            userId: userId
      properties:
        items:
          description: "The list of Posts with User information for the post, for\
            \ this Blog."
          items:
            $ref: '#/components/schemas/PostUserInfo'
          title: items
          type: array
        kind:
          description: The kind of this entity. Always blogger#postList.
          title: kind
          type: string
        nextPageToken:
          description: "Pagination token to fetch the next page, if one exists."
          title: nextPageToken
          type: string
      title: PostUserInfosList
      type: object
    User:
      example:
        blogs:
          selfLink: selfLink
        created: created
        displayName: displayName
        kind: kind
        about: about
        id: id
        locale:
          country: country
          variant: variant
          language: language
        url: url
        selfLink: selfLink
      properties:
        about:
          description: Profile summary information.
          title: about
          type: string
        blogs:
          $ref: '#/components/schemas/User_blogs'
        created:
          description: "The timestamp of when this profile was created, in seconds\
            \ since epoch."
          title: created
          type: string
        displayName:
          description: The display name.
          title: displayName
          type: string
        id:
          description: The identifier for this User.
          title: id
          type: string
        kind:
          description: The kind of this entity. Always blogger#user.
          title: kind
          type: string
        locale:
          $ref: '#/components/schemas/User_locale'
        selfLink:
          description: The API REST URL to fetch this resource from.
          title: selfLink
          type: string
        url:
          description: The user's profile page.
          title: url
          type: string
      title: User
      type: object
    Blog_locale:
      description: The locale this Blog is set to.
      example:
        country: country
        variant: variant
        language: language
      properties:
        country:
          description: The country this blog's locale is set to.
          title: country
          type: string
        language:
          description: The language this blog is authored in.
          title: language
          type: string
        variant:
          description: The language variant this blog is authored in.
          title: variant
          type: string
      title: Blog_locale
      type: object
    Blog_pages:
      description: The container of pages in this blog.
      example:
        totalItems: 0
        selfLink: selfLink
      properties:
        selfLink:
          description: The URL of the container for pages in this blog.
          title: selfLink
          type: string
        totalItems:
          description: The count of pages in this blog.
          format: int32
          title: totalItems
          type: integer
      title: Blog_pages
      type: object
    Blog_posts:
      description: The container of posts in this blog.
      example:
        totalItems: 5
        items:
        - images:
          - url: url
          - url: url
          author:
            image:
              url: url
            displayName: displayName
            id: id
            url: url
          kind: kind
          customMetaData: customMetaData
          published: published
          blog:
            id: id
          title: title
          content: content
          url: url
          labels:
          - labels
          - labels
          selfLink: selfLink
          replies:
            totalItems: totalItems
            items:
            - post:
                id: id
              author:
                image:
                  url: url
                displayName: displayName
                id: id
                url: url
              kind: kind
              inReplyTo:
                id: id
              id: id
              published: published
              blog:
                id: id
              updated: updated
              content: content
              selfLink: selfLink
              status: LIVE
            - post:
                id: id
              author:
                image:
                  url: url
                displayName: displayName
                id: id
                url: url
              kind: kind
              inReplyTo:
                id: id
              id: id
              published: published
              blog:
                id: id
              updated: updated
              content: content
              selfLink: selfLink
              status: LIVE
            selfLink: selfLink
          readerComments: ALLOW
          etag: etag
          location:
            lng: 1.4658129805029452
            name: name
            lat: 6.027456183070403
            span: span
          id: id
          titleLink: titleLink
          updated: updated
          status: LIVE
          trashed: trashed
        - images:
          - url: url
          - url: url
          author:
            image:
              url: url
            displayName: displayName
            id: id
            url: url
          kind: kind
          customMetaData: customMetaData
          published: published
          blog:
            id: id
          title: title
          content: content
          url: url
          labels:
          - labels
          - labels
          selfLink: selfLink
          replies:
            totalItems: totalItems
            items:
            - post:
                id: id
              author:
                image:
                  url: url
                displayName: displayName
                id: id
                url: url
              kind: kind
              inReplyTo:
                id: id
              id: id
              published: published
              blog:
                id: id
              updated: updated
              content: content
              selfLink: selfLink
              status: LIVE
            - post:
                id: id
              author:
                image:
                  url: url
                displayName: displayName
                id: id
                url: url
              kind: kind
              inReplyTo:
                id: id
              id: id
              published: published
              blog:
                id: id
              updated: updated
              content: content
              selfLink: selfLink
              status: LIVE
            selfLink: selfLink
          readerComments: ALLOW
          etag: etag
          location:
            lng: 1.4658129805029452
            name: name
            lat: 6.027456183070403
            span: span
          id: id
          titleLink: titleLink
          updated: updated
          status: LIVE
          trashed: trashed
        selfLink: selfLink
      properties:
        items:
          description: The List of Posts for this Blog.
          items:
            $ref: '#/components/schemas/Post'
          title: items
          type: array
        selfLink:
          description: The URL of the container for posts in this blog.
          title: selfLink
          type: string
        totalItems:
          description: The count of posts in this blog.
          format: int32
          title: totalItems
          type: integer
      title: Blog_posts
      type: object
    Comment_author_image:
      description: The creator's avatar.
      example:
        url: url
      properties:
        url:
          description: The creator's avatar URL.
          title: url
          type: string
      title: Comment_author_image
      type: object
    Comment_author:
      description: The author of this Comment.
      example:
        image:
          url: url
        displayName: displayName
        id: id
        url: url
      properties:
        displayName:
          description: The display name.
          title: displayName
          type: string
        id:
          description: The identifier of the creator.
          title: id
          type: string
        image:
          $ref: '#/components/schemas/Comment_author_image'
        url:
          description: The URL of the creator's Profile page.
          title: url
          type: string
      title: Comment_author
      type: object
    Comment_blog:
      description: Data about the blog containing this comment.
      example:
        id: id
      properties:
        id:
          description: The identifier of the blog containing this comment.
          title: id
          type: string
      title: Comment_blog
      type: object
    Comment_inReplyTo:
      description: Data about the comment this is in reply to.
      example:
        id: id
      properties:
        id:
          description: The identified of the parent of this comment.
          title: id
          type: string
      title: Comment_inReplyTo
      type: object
    Comment_post:
      description: Data about the post containing this comment.
      example:
        id: id
      properties:
        id:
          description: The identifier of the post containing this comment.
          title: id
          type: string
      title: Comment_post
      type: object
    Page_author:
      description: The author of this Page.
      example:
        image:
          url: url
        displayName: displayName
        id: id
        url: url
      properties:
        displayName:
          description: The display name.
          title: displayName
          type: string
        id:
          description: The identifier of the creator.
          title: id
          type: string
        image:
          $ref: '#/components/schemas/Comment_author_image'
        url:
          description: The URL of the creator's Profile page.
          title: url
          type: string
      title: Page_author
      type: object
    Page_blog:
      description: Data about the blog containing this Page.
      example:
        id: id
      properties:
        id:
          description: The identifier of the blog containing this page.
          title: id
          type: string
      title: Page_blog
      type: object
    Pageviews_counts_inner:
      example:
        count: count
        timeRange: ALL_TIME
      properties:
        count:
          description: Count of page views for the given time range.
          format: int64
          title: count
          type: string
        timeRange:
          description: Time range the given count applies to.
          enum:
          - ALL_TIME
          - THIRTY_DAYS
          - SEVEN_DAYS
          title: timeRange
          type: string
      title: Pageviews_counts_inner
      type: object
    Post_author:
      description: The author of this Post.
      example:
        image:
          url: url
        displayName: displayName
        id: id
        url: url
      properties:
        displayName:
          description: The display name.
          title: displayName
          type: string
        id:
          description: The identifier of the creator.
          title: id
          type: string
        image:
          $ref: '#/components/schemas/Comment_author_image'
        url:
          description: The URL of the creator's Profile page.
          title: url
          type: string
      title: Post_author
      type: object
    Post_blog:
      description: Data about the blog containing this Post.
      example:
        id: id
      properties:
        id:
          description: The identifier of the Blog that contains this Post.
          title: id
          type: string
      title: Post_blog
      type: object
    Post_images_inner:
      example:
        url: url
      properties:
        url:
          title: url
          type: string
      title: Post_images_inner
      type: object
    Post_location:
      description: The location for geotagged posts.
      example:
        lng: 1.4658129805029452
        name: name
        lat: 6.027456183070403
        span: span
      properties:
        lat:
          description: Location's latitude.
          format: double
          title: lat
          type: number
        lng:
          description: Location's longitude.
          format: double
          title: lng
          type: number
        name:
          description: Location name.
          title: name
          type: string
        span:
          description: Location's viewport span. Can be used when rendering a map
            preview.
          title: span
          type: string
      title: Post_location
      type: object
    Post_replies:
      description: The container of comments on this Post.
      example:
        totalItems: totalItems
        items:
        - post:
            id: id
          author:
            image:
              url: url
            displayName: displayName
            id: id
            url: url
          kind: kind
          inReplyTo:
            id: id
          id: id
          published: published
          blog:
            id: id
          updated: updated
          content: content
          selfLink: selfLink
          status: LIVE
        - post:
            id: id
          author:
            image:
              url: url
            displayName: displayName
            id: id
            url: url
          kind: kind
          inReplyTo:
            id: id
          id: id
          published: published
          blog:
            id: id
          updated: updated
          content: content
          selfLink: selfLink
          status: LIVE
        selfLink: selfLink
      properties:
        items:
          description: The List of Comments for this Post.
          items:
            $ref: '#/components/schemas/Comment'
          title: items
          type: array
        selfLink:
          description: The URL of the comments on this post.
          title: selfLink
          type: string
        totalItems:
          description: The count of comments on this post.
          format: int64
          title: totalItems
          type: string
      title: Post_replies
      type: object
    User_blogs:
      description: The container of blogs for this user.
      example:
        selfLink: selfLink
      properties:
        selfLink:
          description: The URL of the Blogs for this user.
          title: selfLink
          type: string
      title: User_blogs
      type: object
    User_locale:
      description: This user's locale
      example:
        country: country
        variant: variant
        language: language
      properties:
        country:
          description: The country this blog's locale is set to.
          title: country
          type: string
        language:
          description: The language this blog is authored in.
          title: language
          type: string
        variant:
          description: The language variant this blog is authored in.
          title: variant
          type: string
      title: User_locale
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/blogger: Manage your Blogger account
            https://www.googleapis.com/auth/blogger.readonly: View your Blogger account
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/blogger: Manage your Blogger account
            https://www.googleapis.com/auth/blogger.readonly: View your Blogger account
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2c
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2c
