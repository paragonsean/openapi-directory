# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, target_replica_count: int=None, target_shard_count: int=None):
        """UpdateInfo - a model defined in OpenAPI

        :param target_replica_count: The target_replica_count of this UpdateInfo.
        :param target_shard_count: The target_shard_count of this UpdateInfo.
        """
        self.openapi_types = {
            'target_replica_count': int,
            'target_shard_count': int
        }

        self.attribute_map = {
            'target_replica_count': 'targetReplicaCount',
            'target_shard_count': 'targetShardCount'
        }

        self._target_replica_count = target_replica_count
        self._target_shard_count = target_shard_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateInfo of this UpdateInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def target_replica_count(self):
        """Gets the target_replica_count of this UpdateInfo.

        Target number of replica nodes per shard.

        :return: The target_replica_count of this UpdateInfo.
        :rtype: int
        """
        return self._target_replica_count

    @target_replica_count.setter
    def target_replica_count(self, target_replica_count):
        """Sets the target_replica_count of this UpdateInfo.

        Target number of replica nodes per shard.

        :param target_replica_count: The target_replica_count of this UpdateInfo.
        :type target_replica_count: int
        """

        self._target_replica_count = target_replica_count

    @property
    def target_shard_count(self):
        """Gets the target_shard_count of this UpdateInfo.

        Target number of shards for redis cluster

        :return: The target_shard_count of this UpdateInfo.
        :rtype: int
        """
        return self._target_shard_count

    @target_shard_count.setter
    def target_shard_count(self, target_shard_count):
        """Sets the target_shard_count of this UpdateInfo.

        Target number of shards for redis cluster

        :param target_shard_count: The target_shard_count of this UpdateInfo.
        :type target_shard_count: int
        """

        self._target_shard_count = target_shard_count
