# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.managed_certificate_authority import ManagedCertificateAuthority
from openapi_server import util


class CertificateAuthority(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, managed_server_ca: ManagedCertificateAuthority=None, name: str=None):
        """CertificateAuthority - a model defined in OpenAPI

        :param managed_server_ca: The managed_server_ca of this CertificateAuthority.
        :param name: The name of this CertificateAuthority.
        """
        self.openapi_types = {
            'managed_server_ca': ManagedCertificateAuthority,
            'name': str
        }

        self.attribute_map = {
            'managed_server_ca': 'managedServerCa',
            'name': 'name'
        }

        self._managed_server_ca = managed_server_ca
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CertificateAuthority':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CertificateAuthority of this CertificateAuthority.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def managed_server_ca(self):
        """Gets the managed_server_ca of this CertificateAuthority.


        :return: The managed_server_ca of this CertificateAuthority.
        :rtype: ManagedCertificateAuthority
        """
        return self._managed_server_ca

    @managed_server_ca.setter
    def managed_server_ca(self, managed_server_ca):
        """Sets the managed_server_ca of this CertificateAuthority.


        :param managed_server_ca: The managed_server_ca of this CertificateAuthority.
        :type managed_server_ca: ManagedCertificateAuthority
        """

        self._managed_server_ca = managed_server_ca

    @property
    def name(self):
        """Gets the name of this CertificateAuthority.

        Identifier. Unique name of the resource in this scope including project, location and cluster using the form: `projects/{project}/locations/{location}/clusters/{cluster}/certificateAuthority`

        :return: The name of this CertificateAuthority.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CertificateAuthority.

        Identifier. Unique name of the resource in this scope including project, location and cluster using the form: `projects/{project}/locations/{location}/clusters/{cluster}/certificateAuthority`

        :param name: The name of this CertificateAuthority.
        :type name: str
        """

        self._name = name
