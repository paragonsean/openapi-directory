# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.psc_config import PscConfig
from openapi_server import util


class DiscoveryEndpoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, port: int=None, psc_config: PscConfig=None):
        """DiscoveryEndpoint - a model defined in OpenAPI

        :param address: The address of this DiscoveryEndpoint.
        :param port: The port of this DiscoveryEndpoint.
        :param psc_config: The psc_config of this DiscoveryEndpoint.
        """
        self.openapi_types = {
            'address': str,
            'port': int,
            'psc_config': PscConfig
        }

        self.attribute_map = {
            'address': 'address',
            'port': 'port',
            'psc_config': 'pscConfig'
        }

        self._address = address
        self._port = port
        self._psc_config = psc_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DiscoveryEndpoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DiscoveryEndpoint of this DiscoveryEndpoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this DiscoveryEndpoint.

        Output only. Address of the exposed Redis endpoint used by clients to connect to the service. The address could be either IP or hostname.

        :return: The address of this DiscoveryEndpoint.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this DiscoveryEndpoint.

        Output only. Address of the exposed Redis endpoint used by clients to connect to the service. The address could be either IP or hostname.

        :param address: The address of this DiscoveryEndpoint.
        :type address: str
        """

        self._address = address

    @property
    def port(self):
        """Gets the port of this DiscoveryEndpoint.

        Output only. The port number of the exposed Redis endpoint.

        :return: The port of this DiscoveryEndpoint.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this DiscoveryEndpoint.

        Output only. The port number of the exposed Redis endpoint.

        :param port: The port of this DiscoveryEndpoint.
        :type port: int
        """

        self._port = port

    @property
    def psc_config(self):
        """Gets the psc_config of this DiscoveryEndpoint.


        :return: The psc_config of this DiscoveryEndpoint.
        :rtype: PscConfig
        """
        return self._psc_config

    @psc_config.setter
    def psc_config(self, psc_config):
        """Sets the psc_config of this DiscoveryEndpoint.


        :param psc_config: The psc_config of this DiscoveryEndpoint.
        :type psc_config: PscConfig
        """

        self._psc_config = psc_config
