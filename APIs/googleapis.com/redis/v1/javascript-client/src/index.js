/**
 * Google Cloud Memorystore for Redis API
 * Creates and manages Redis instances on the Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AvailabilityConfiguration from './model/AvailabilityConfiguration';
import BackupConfiguration from './model/BackupConfiguration';
import BackupRun from './model/BackupRun';
import CertChain from './model/CertChain';
import CertificateAuthority from './model/CertificateAuthority';
import Cluster from './model/Cluster';
import Compliance from './model/Compliance';
import CustomMetadataData from './model/CustomMetadataData';
import DatabaseMetadata from './model/DatabaseMetadata';
import DatabaseResourceFeed from './model/DatabaseResourceFeed';
import DatabaseResourceHealthSignalData from './model/DatabaseResourceHealthSignalData';
import DatabaseResourceId from './model/DatabaseResourceId';
import DatabaseResourceMetadata from './model/DatabaseResourceMetadata';
import DatabaseResourceRecommendationSignalData from './model/DatabaseResourceRecommendationSignalData';
import DiscoveryEndpoint from './model/DiscoveryEndpoint';
import Entitlement from './model/Entitlement';
import ExportInstanceRequest from './model/ExportInstanceRequest';
import FailoverInstanceRequest from './model/FailoverInstanceRequest';
import GcsDestination from './model/GcsDestination';
import GcsSource from './model/GcsSource';
import GoogleCloudRedisV1LocationMetadata from './model/GoogleCloudRedisV1LocationMetadata';
import GoogleCloudRedisV1OperationMetadata from './model/GoogleCloudRedisV1OperationMetadata';
import ImportInstanceRequest from './model/ImportInstanceRequest';
import InputConfig from './model/InputConfig';
import Instance from './model/Instance';
import InstanceAuthString from './model/InstanceAuthString';
import ListClustersResponse from './model/ListClustersResponse';
import ListInstancesResponse from './model/ListInstancesResponse';
import ListLocationsResponse from './model/ListLocationsResponse';
import ListOperationsResponse from './model/ListOperationsResponse';
import Location from './model/Location';
import MaintenancePolicy from './model/MaintenancePolicy';
import MaintenanceSchedule from './model/MaintenanceSchedule';
import ManagedCertificateAuthority from './model/ManagedCertificateAuthority';
import NodeInfo from './model/NodeInfo';
import Operation from './model/Operation';
import OperationError from './model/OperationError';
import OperationMetadata from './model/OperationMetadata';
import OutputConfig from './model/OutputConfig';
import PersistenceConfig from './model/PersistenceConfig';
import Product from './model/Product';
import PscConfig from './model/PscConfig';
import PscConnection from './model/PscConnection';
import ReconciliationOperationMetadata from './model/ReconciliationOperationMetadata';
import RescheduleMaintenanceRequest from './model/RescheduleMaintenanceRequest';
import RetentionSettings from './model/RetentionSettings';
import StateInfo from './model/StateInfo';
import Status from './model/Status';
import TimeOfDay from './model/TimeOfDay';
import TlsCertificate from './model/TlsCertificate';
import UpdateInfo from './model/UpdateInfo';
import UpgradeInstanceRequest from './model/UpgradeInstanceRequest';
import WeeklyMaintenanceWindow from './model/WeeklyMaintenanceWindow';
import ProjectsApi from './api/ProjectsApi';


/**
* Creates and manages Redis instances on the Google Cloud Platform..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var GoogleCloudMemorystoreForRedisApi = require('index'); // See note below*.
* var xxxSvc = new GoogleCloudMemorystoreForRedisApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new GoogleCloudMemorystoreForRedisApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new GoogleCloudMemorystoreForRedisApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new GoogleCloudMemorystoreForRedisApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AvailabilityConfiguration model constructor.
     * @property {module:model/AvailabilityConfiguration}
     */
    AvailabilityConfiguration,

    /**
     * The BackupConfiguration model constructor.
     * @property {module:model/BackupConfiguration}
     */
    BackupConfiguration,

    /**
     * The BackupRun model constructor.
     * @property {module:model/BackupRun}
     */
    BackupRun,

    /**
     * The CertChain model constructor.
     * @property {module:model/CertChain}
     */
    CertChain,

    /**
     * The CertificateAuthority model constructor.
     * @property {module:model/CertificateAuthority}
     */
    CertificateAuthority,

    /**
     * The Cluster model constructor.
     * @property {module:model/Cluster}
     */
    Cluster,

    /**
     * The Compliance model constructor.
     * @property {module:model/Compliance}
     */
    Compliance,

    /**
     * The CustomMetadataData model constructor.
     * @property {module:model/CustomMetadataData}
     */
    CustomMetadataData,

    /**
     * The DatabaseMetadata model constructor.
     * @property {module:model/DatabaseMetadata}
     */
    DatabaseMetadata,

    /**
     * The DatabaseResourceFeed model constructor.
     * @property {module:model/DatabaseResourceFeed}
     */
    DatabaseResourceFeed,

    /**
     * The DatabaseResourceHealthSignalData model constructor.
     * @property {module:model/DatabaseResourceHealthSignalData}
     */
    DatabaseResourceHealthSignalData,

    /**
     * The DatabaseResourceId model constructor.
     * @property {module:model/DatabaseResourceId}
     */
    DatabaseResourceId,

    /**
     * The DatabaseResourceMetadata model constructor.
     * @property {module:model/DatabaseResourceMetadata}
     */
    DatabaseResourceMetadata,

    /**
     * The DatabaseResourceRecommendationSignalData model constructor.
     * @property {module:model/DatabaseResourceRecommendationSignalData}
     */
    DatabaseResourceRecommendationSignalData,

    /**
     * The DiscoveryEndpoint model constructor.
     * @property {module:model/DiscoveryEndpoint}
     */
    DiscoveryEndpoint,

    /**
     * The Entitlement model constructor.
     * @property {module:model/Entitlement}
     */
    Entitlement,

    /**
     * The ExportInstanceRequest model constructor.
     * @property {module:model/ExportInstanceRequest}
     */
    ExportInstanceRequest,

    /**
     * The FailoverInstanceRequest model constructor.
     * @property {module:model/FailoverInstanceRequest}
     */
    FailoverInstanceRequest,

    /**
     * The GcsDestination model constructor.
     * @property {module:model/GcsDestination}
     */
    GcsDestination,

    /**
     * The GcsSource model constructor.
     * @property {module:model/GcsSource}
     */
    GcsSource,

    /**
     * The GoogleCloudRedisV1LocationMetadata model constructor.
     * @property {module:model/GoogleCloudRedisV1LocationMetadata}
     */
    GoogleCloudRedisV1LocationMetadata,

    /**
     * The GoogleCloudRedisV1OperationMetadata model constructor.
     * @property {module:model/GoogleCloudRedisV1OperationMetadata}
     */
    GoogleCloudRedisV1OperationMetadata,

    /**
     * The ImportInstanceRequest model constructor.
     * @property {module:model/ImportInstanceRequest}
     */
    ImportInstanceRequest,

    /**
     * The InputConfig model constructor.
     * @property {module:model/InputConfig}
     */
    InputConfig,

    /**
     * The Instance model constructor.
     * @property {module:model/Instance}
     */
    Instance,

    /**
     * The InstanceAuthString model constructor.
     * @property {module:model/InstanceAuthString}
     */
    InstanceAuthString,

    /**
     * The ListClustersResponse model constructor.
     * @property {module:model/ListClustersResponse}
     */
    ListClustersResponse,

    /**
     * The ListInstancesResponse model constructor.
     * @property {module:model/ListInstancesResponse}
     */
    ListInstancesResponse,

    /**
     * The ListLocationsResponse model constructor.
     * @property {module:model/ListLocationsResponse}
     */
    ListLocationsResponse,

    /**
     * The ListOperationsResponse model constructor.
     * @property {module:model/ListOperationsResponse}
     */
    ListOperationsResponse,

    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location,

    /**
     * The MaintenancePolicy model constructor.
     * @property {module:model/MaintenancePolicy}
     */
    MaintenancePolicy,

    /**
     * The MaintenanceSchedule model constructor.
     * @property {module:model/MaintenanceSchedule}
     */
    MaintenanceSchedule,

    /**
     * The ManagedCertificateAuthority model constructor.
     * @property {module:model/ManagedCertificateAuthority}
     */
    ManagedCertificateAuthority,

    /**
     * The NodeInfo model constructor.
     * @property {module:model/NodeInfo}
     */
    NodeInfo,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationError model constructor.
     * @property {module:model/OperationError}
     */
    OperationError,

    /**
     * The OperationMetadata model constructor.
     * @property {module:model/OperationMetadata}
     */
    OperationMetadata,

    /**
     * The OutputConfig model constructor.
     * @property {module:model/OutputConfig}
     */
    OutputConfig,

    /**
     * The PersistenceConfig model constructor.
     * @property {module:model/PersistenceConfig}
     */
    PersistenceConfig,

    /**
     * The Product model constructor.
     * @property {module:model/Product}
     */
    Product,

    /**
     * The PscConfig model constructor.
     * @property {module:model/PscConfig}
     */
    PscConfig,

    /**
     * The PscConnection model constructor.
     * @property {module:model/PscConnection}
     */
    PscConnection,

    /**
     * The ReconciliationOperationMetadata model constructor.
     * @property {module:model/ReconciliationOperationMetadata}
     */
    ReconciliationOperationMetadata,

    /**
     * The RescheduleMaintenanceRequest model constructor.
     * @property {module:model/RescheduleMaintenanceRequest}
     */
    RescheduleMaintenanceRequest,

    /**
     * The RetentionSettings model constructor.
     * @property {module:model/RetentionSettings}
     */
    RetentionSettings,

    /**
     * The StateInfo model constructor.
     * @property {module:model/StateInfo}
     */
    StateInfo,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The TimeOfDay model constructor.
     * @property {module:model/TimeOfDay}
     */
    TimeOfDay,

    /**
     * The TlsCertificate model constructor.
     * @property {module:model/TlsCertificate}
     */
    TlsCertificate,

    /**
     * The UpdateInfo model constructor.
     * @property {module:model/UpdateInfo}
     */
    UpdateInfo,

    /**
     * The UpgradeInstanceRequest model constructor.
     * @property {module:model/UpgradeInstanceRequest}
     */
    UpgradeInstanceRequest,

    /**
     * The WeeklyMaintenanceWindow model constructor.
     * @property {module:model/WeeklyMaintenanceWindow}
     */
    WeeklyMaintenanceWindow,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi
};
