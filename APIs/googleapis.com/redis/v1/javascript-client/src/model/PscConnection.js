/**
 * Google Cloud Memorystore for Redis API
 * Creates and manages Redis instances on the Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PscConnection model module.
 * @module model/PscConnection
 * @version v1
 */
class PscConnection {
    /**
     * Constructs a new <code>PscConnection</code>.
     * Details of consumer resources in a PSC connection.
     * @alias module:model/PscConnection
     */
    constructor() { 
        
        PscConnection.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PscConnection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PscConnection} obj Optional instance to populate.
     * @return {module:model/PscConnection} The populated <code>PscConnection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PscConnection();

            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('forwardingRule')) {
                obj['forwardingRule'] = ApiClient.convertToType(data['forwardingRule'], 'String');
            }
            if (data.hasOwnProperty('network')) {
                obj['network'] = ApiClient.convertToType(data['network'], 'String');
            }
            if (data.hasOwnProperty('projectId')) {
                obj['projectId'] = ApiClient.convertToType(data['projectId'], 'String');
            }
            if (data.hasOwnProperty('pscConnectionId')) {
                obj['pscConnectionId'] = ApiClient.convertToType(data['pscConnectionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PscConnection</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PscConnection</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['address'] && !(typeof data['address'] === 'string' || data['address'] instanceof String)) {
            throw new Error("Expected the field `address` to be a primitive type in the JSON string but got " + data['address']);
        }
        // ensure the json data is a string
        if (data['forwardingRule'] && !(typeof data['forwardingRule'] === 'string' || data['forwardingRule'] instanceof String)) {
            throw new Error("Expected the field `forwardingRule` to be a primitive type in the JSON string but got " + data['forwardingRule']);
        }
        // ensure the json data is a string
        if (data['network'] && !(typeof data['network'] === 'string' || data['network'] instanceof String)) {
            throw new Error("Expected the field `network` to be a primitive type in the JSON string but got " + data['network']);
        }
        // ensure the json data is a string
        if (data['projectId'] && !(typeof data['projectId'] === 'string' || data['projectId'] instanceof String)) {
            throw new Error("Expected the field `projectId` to be a primitive type in the JSON string but got " + data['projectId']);
        }
        // ensure the json data is a string
        if (data['pscConnectionId'] && !(typeof data['pscConnectionId'] === 'string' || data['pscConnectionId'] instanceof String)) {
            throw new Error("Expected the field `pscConnectionId` to be a primitive type in the JSON string but got " + data['pscConnectionId']);
        }

        return true;
    }


}



/**
 * Output only. The IP allocated on the consumer network for the PSC forwarding rule.
 * @member {String} address
 */
PscConnection.prototype['address'] = undefined;

/**
 * Output only. The URI of the consumer side forwarding rule. Example: projects/{projectNumOrId}/regions/us-east1/forwardingRules/{resourceId}.
 * @member {String} forwardingRule
 */
PscConnection.prototype['forwardingRule'] = undefined;

/**
 * The consumer network where the IP address resides, in the form of projects/{project_id}/global/networks/{network_id}.
 * @member {String} network
 */
PscConnection.prototype['network'] = undefined;

/**
 * Output only. The consumer project_id where the forwarding rule is created from.
 * @member {String} projectId
 */
PscConnection.prototype['projectId'] = undefined;

/**
 * Output only. The PSC connection id of the forwarding rule connected to the service attachment.
 * @member {String} pscConnectionId
 */
PscConnection.prototype['pscConnectionId'] = undefined;






export default PscConnection;

