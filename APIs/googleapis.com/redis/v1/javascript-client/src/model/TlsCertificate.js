/**
 * Google Cloud Memorystore for Redis API
 * Creates and manages Redis instances on the Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TlsCertificate model module.
 * @module model/TlsCertificate
 * @version v1
 */
class TlsCertificate {
    /**
     * Constructs a new <code>TlsCertificate</code>.
     * TlsCertificate Resource
     * @alias module:model/TlsCertificate
     */
    constructor() { 
        
        TlsCertificate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TlsCertificate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TlsCertificate} obj Optional instance to populate.
     * @return {module:model/TlsCertificate} The populated <code>TlsCertificate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TlsCertificate();

            if (data.hasOwnProperty('cert')) {
                obj['cert'] = ApiClient.convertToType(data['cert'], 'String');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('expireTime')) {
                obj['expireTime'] = ApiClient.convertToType(data['expireTime'], 'String');
            }
            if (data.hasOwnProperty('serialNumber')) {
                obj['serialNumber'] = ApiClient.convertToType(data['serialNumber'], 'String');
            }
            if (data.hasOwnProperty('sha1Fingerprint')) {
                obj['sha1Fingerprint'] = ApiClient.convertToType(data['sha1Fingerprint'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TlsCertificate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TlsCertificate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cert'] && !(typeof data['cert'] === 'string' || data['cert'] instanceof String)) {
            throw new Error("Expected the field `cert` to be a primitive type in the JSON string but got " + data['cert']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['expireTime'] && !(typeof data['expireTime'] === 'string' || data['expireTime'] instanceof String)) {
            throw new Error("Expected the field `expireTime` to be a primitive type in the JSON string but got " + data['expireTime']);
        }
        // ensure the json data is a string
        if (data['serialNumber'] && !(typeof data['serialNumber'] === 'string' || data['serialNumber'] instanceof String)) {
            throw new Error("Expected the field `serialNumber` to be a primitive type in the JSON string but got " + data['serialNumber']);
        }
        // ensure the json data is a string
        if (data['sha1Fingerprint'] && !(typeof data['sha1Fingerprint'] === 'string' || data['sha1Fingerprint'] instanceof String)) {
            throw new Error("Expected the field `sha1Fingerprint` to be a primitive type in the JSON string but got " + data['sha1Fingerprint']);
        }

        return true;
    }


}



/**
 * PEM representation.
 * @member {String} cert
 */
TlsCertificate.prototype['cert'] = undefined;

/**
 * Output only. The time when the certificate was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2020-05-18T00:00:00.094Z`.
 * @member {String} createTime
 */
TlsCertificate.prototype['createTime'] = undefined;

/**
 * Output only. The time when the certificate expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2020-05-18T00:00:00.094Z`.
 * @member {String} expireTime
 */
TlsCertificate.prototype['expireTime'] = undefined;

/**
 * Serial number, as extracted from the certificate.
 * @member {String} serialNumber
 */
TlsCertificate.prototype['serialNumber'] = undefined;

/**
 * Sha1 Fingerprint of the certificate.
 * @member {String} sha1Fingerprint
 */
TlsCertificate.prototype['sha1Fingerprint'] = undefined;






export default TlsCertificate;

