/**
 * Google Cloud Memorystore for Redis API
 * Creates and manages Redis instances on the Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AvailabilityConfiguration model module.
 * @module model/AvailabilityConfiguration
 * @version v1
 */
class AvailabilityConfiguration {
    /**
     * Constructs a new <code>AvailabilityConfiguration</code>.
     * Configuration for availability of database instance
     * @alias module:model/AvailabilityConfiguration
     */
    constructor() { 
        
        AvailabilityConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AvailabilityConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AvailabilityConfiguration} obj Optional instance to populate.
     * @return {module:model/AvailabilityConfiguration} The populated <code>AvailabilityConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AvailabilityConfiguration();

            if (data.hasOwnProperty('availabilityType')) {
                obj['availabilityType'] = ApiClient.convertToType(data['availabilityType'], 'String');
            }
            if (data.hasOwnProperty('externalReplicaConfigured')) {
                obj['externalReplicaConfigured'] = ApiClient.convertToType(data['externalReplicaConfigured'], 'Boolean');
            }
            if (data.hasOwnProperty('promotableReplicaConfigured')) {
                obj['promotableReplicaConfigured'] = ApiClient.convertToType(data['promotableReplicaConfigured'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AvailabilityConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AvailabilityConfiguration</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['availabilityType'] && !(typeof data['availabilityType'] === 'string' || data['availabilityType'] instanceof String)) {
            throw new Error("Expected the field `availabilityType` to be a primitive type in the JSON string but got " + data['availabilityType']);
        }

        return true;
    }


}



/**
 * Availability type. Potential values: * `ZONAL`: The instance serves data from only one zone. Outages in that zone affect data accessibility. * `REGIONAL`: The instance can serve data from more than one zone in a region (it is highly available).
 * @member {module:model/AvailabilityConfiguration.AvailabilityTypeEnum} availabilityType
 */
AvailabilityConfiguration.prototype['availabilityType'] = undefined;

/**
 * @member {Boolean} externalReplicaConfigured
 */
AvailabilityConfiguration.prototype['externalReplicaConfigured'] = undefined;

/**
 * @member {Boolean} promotableReplicaConfigured
 */
AvailabilityConfiguration.prototype['promotableReplicaConfigured'] = undefined;





/**
 * Allowed values for the <code>availabilityType</code> property.
 * @enum {String}
 * @readonly
 */
AvailabilityConfiguration['AvailabilityTypeEnum'] = {

    /**
     * value: "AVAILABILITY_TYPE_UNSPECIFIED"
     * @const
     */
    "AVAILABILITY_TYPE_UNSPECIFIED": "AVAILABILITY_TYPE_UNSPECIFIED",

    /**
     * value: "ZONAL"
     * @const
     */
    "ZONAL": "ZONAL",

    /**
     * value: "REGIONAL"
     * @const
     */
    "REGIONAL": "REGIONAL",

    /**
     * value: "MULTI_REGIONAL"
     * @const
     */
    "MULTI_REGIONAL": "MULTI_REGIONAL",

    /**
     * value: "AVAILABILITY_TYPE_OTHER"
     * @const
     */
    "AVAILABILITY_TYPE_OTHER": "AVAILABILITY_TYPE_OTHER"
};



export default AvailabilityConfiguration;

