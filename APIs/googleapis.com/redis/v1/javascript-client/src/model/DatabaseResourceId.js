/**
 * Google Cloud Memorystore for Redis API
 * Creates and manages Redis instances on the Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DatabaseResourceId model module.
 * @module model/DatabaseResourceId
 * @version v1
 */
class DatabaseResourceId {
    /**
     * Constructs a new <code>DatabaseResourceId</code>.
     * DatabaseResourceId will serve as primary key for any resource ingestion event.
     * @alias module:model/DatabaseResourceId
     */
    constructor() { 
        
        DatabaseResourceId.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DatabaseResourceId</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DatabaseResourceId} obj Optional instance to populate.
     * @return {module:model/DatabaseResourceId} The populated <code>DatabaseResourceId</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DatabaseResourceId();

            if (data.hasOwnProperty('provider')) {
                obj['provider'] = ApiClient.convertToType(data['provider'], 'String');
            }
            if (data.hasOwnProperty('providerDescription')) {
                obj['providerDescription'] = ApiClient.convertToType(data['providerDescription'], 'String');
            }
            if (data.hasOwnProperty('resourceType')) {
                obj['resourceType'] = ApiClient.convertToType(data['resourceType'], 'String');
            }
            if (data.hasOwnProperty('uniqueId')) {
                obj['uniqueId'] = ApiClient.convertToType(data['uniqueId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DatabaseResourceId</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DatabaseResourceId</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['provider'] && !(typeof data['provider'] === 'string' || data['provider'] instanceof String)) {
            throw new Error("Expected the field `provider` to be a primitive type in the JSON string but got " + data['provider']);
        }
        // ensure the json data is a string
        if (data['providerDescription'] && !(typeof data['providerDescription'] === 'string' || data['providerDescription'] instanceof String)) {
            throw new Error("Expected the field `providerDescription` to be a primitive type in the JSON string but got " + data['providerDescription']);
        }
        // ensure the json data is a string
        if (data['resourceType'] && !(typeof data['resourceType'] === 'string' || data['resourceType'] instanceof String)) {
            throw new Error("Expected the field `resourceType` to be a primitive type in the JSON string but got " + data['resourceType']);
        }
        // ensure the json data is a string
        if (data['uniqueId'] && !(typeof data['uniqueId'] === 'string' || data['uniqueId'] instanceof String)) {
            throw new Error("Expected the field `uniqueId` to be a primitive type in the JSON string but got " + data['uniqueId']);
        }

        return true;
    }


}



/**
 * Required. Cloud provider name. Ex: GCP/AWS/Azure/OnPrem/SelfManaged
 * @member {module:model/DatabaseResourceId.ProviderEnum} provider
 */
DatabaseResourceId.prototype['provider'] = undefined;

/**
 * Optional. Needs to be used only when the provider is PROVIDER_OTHER.
 * @member {String} providerDescription
 */
DatabaseResourceId.prototype['providerDescription'] = undefined;

/**
 * Required. The type of resource this ID is identifying. Ex redis.googleapis.com/Instance, redis.googleapis.com/Cluster, alloydb.googleapis.com/Cluster, alloydb.googleapis.com/Instance, spanner.googleapis.com/Instance REQUIRED Please refer go/condor-common-datamodel
 * @member {String} resourceType
 */
DatabaseResourceId.prototype['resourceType'] = undefined;

/**
 * Required. A service-local token that distinguishes this resource from other resources within the same service.
 * @member {String} uniqueId
 */
DatabaseResourceId.prototype['uniqueId'] = undefined;





/**
 * Allowed values for the <code>provider</code> property.
 * @enum {String}
 * @readonly
 */
DatabaseResourceId['ProviderEnum'] = {

    /**
     * value: "PROVIDER_UNSPECIFIED"
     * @const
     */
    "PROVIDER_UNSPECIFIED": "PROVIDER_UNSPECIFIED",

    /**
     * value: "GCP"
     * @const
     */
    "GCP": "GCP",

    /**
     * value: "AWS"
     * @const
     */
    "AWS": "AWS",

    /**
     * value: "AZURE"
     * @const
     */
    "AZURE": "AZURE",

    /**
     * value: "ONPREM"
     * @const
     */
    "ONPREM": "ONPREM",

    /**
     * value: "SELFMANAGED"
     * @const
     */
    "SELFMANAGED": "SELFMANAGED",

    /**
     * value: "PROVIDER_OTHER"
     * @const
     */
    "PROVIDER_OTHER": "PROVIDER_OTHER"
};



export default DatabaseResourceId;

