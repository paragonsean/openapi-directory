/**
 * Google Cloud Memorystore for Redis API
 * Creates and manages Redis instances on the Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DatabaseResourceHealthSignalData from './DatabaseResourceHealthSignalData';
import DatabaseResourceId from './DatabaseResourceId';
import DatabaseResourceMetadata from './DatabaseResourceMetadata';
import DatabaseResourceRecommendationSignalData from './DatabaseResourceRecommendationSignalData';

/**
 * The DatabaseResourceFeed model module.
 * @module model/DatabaseResourceFeed
 * @version v1
 */
class DatabaseResourceFeed {
    /**
     * Constructs a new <code>DatabaseResourceFeed</code>.
     * DatabaseResourceFeed is the top level proto to be used to ingest different database resource level events into Condor platform.
     * @alias module:model/DatabaseResourceFeed
     */
    constructor() { 
        
        DatabaseResourceFeed.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DatabaseResourceFeed</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DatabaseResourceFeed} obj Optional instance to populate.
     * @return {module:model/DatabaseResourceFeed} The populated <code>DatabaseResourceFeed</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DatabaseResourceFeed();

            if (data.hasOwnProperty('feedTimestamp')) {
                obj['feedTimestamp'] = ApiClient.convertToType(data['feedTimestamp'], 'String');
            }
            if (data.hasOwnProperty('feedType')) {
                obj['feedType'] = ApiClient.convertToType(data['feedType'], 'String');
            }
            if (data.hasOwnProperty('recommendationSignalData')) {
                obj['recommendationSignalData'] = DatabaseResourceRecommendationSignalData.constructFromObject(data['recommendationSignalData']);
            }
            if (data.hasOwnProperty('resourceHealthSignalData')) {
                obj['resourceHealthSignalData'] = DatabaseResourceHealthSignalData.constructFromObject(data['resourceHealthSignalData']);
            }
            if (data.hasOwnProperty('resourceId')) {
                obj['resourceId'] = DatabaseResourceId.constructFromObject(data['resourceId']);
            }
            if (data.hasOwnProperty('resourceMetadata')) {
                obj['resourceMetadata'] = DatabaseResourceMetadata.constructFromObject(data['resourceMetadata']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DatabaseResourceFeed</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DatabaseResourceFeed</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['feedTimestamp'] && !(typeof data['feedTimestamp'] === 'string' || data['feedTimestamp'] instanceof String)) {
            throw new Error("Expected the field `feedTimestamp` to be a primitive type in the JSON string but got " + data['feedTimestamp']);
        }
        // ensure the json data is a string
        if (data['feedType'] && !(typeof data['feedType'] === 'string' || data['feedType'] instanceof String)) {
            throw new Error("Expected the field `feedType` to be a primitive type in the JSON string but got " + data['feedType']);
        }
        // validate the optional field `recommendationSignalData`
        if (data['recommendationSignalData']) { // data not null
          DatabaseResourceRecommendationSignalData.validateJSON(data['recommendationSignalData']);
        }
        // validate the optional field `resourceHealthSignalData`
        if (data['resourceHealthSignalData']) { // data not null
          DatabaseResourceHealthSignalData.validateJSON(data['resourceHealthSignalData']);
        }
        // validate the optional field `resourceId`
        if (data['resourceId']) { // data not null
          DatabaseResourceId.validateJSON(data['resourceId']);
        }
        // validate the optional field `resourceMetadata`
        if (data['resourceMetadata']) { // data not null
          DatabaseResourceMetadata.validateJSON(data['resourceMetadata']);
        }

        return true;
    }


}



/**
 * Required. Timestamp when feed is generated.
 * @member {String} feedTimestamp
 */
DatabaseResourceFeed.prototype['feedTimestamp'] = undefined;

/**
 * Required. Type feed to be ingested into condor
 * @member {module:model/DatabaseResourceFeed.FeedTypeEnum} feedType
 */
DatabaseResourceFeed.prototype['feedType'] = undefined;

/**
 * @member {module:model/DatabaseResourceRecommendationSignalData} recommendationSignalData
 */
DatabaseResourceFeed.prototype['recommendationSignalData'] = undefined;

/**
 * @member {module:model/DatabaseResourceHealthSignalData} resourceHealthSignalData
 */
DatabaseResourceFeed.prototype['resourceHealthSignalData'] = undefined;

/**
 * @member {module:model/DatabaseResourceId} resourceId
 */
DatabaseResourceFeed.prototype['resourceId'] = undefined;

/**
 * @member {module:model/DatabaseResourceMetadata} resourceMetadata
 */
DatabaseResourceFeed.prototype['resourceMetadata'] = undefined;





/**
 * Allowed values for the <code>feedType</code> property.
 * @enum {String}
 * @readonly
 */
DatabaseResourceFeed['FeedTypeEnum'] = {

    /**
     * value: "FEEDTYPE_UNSPECIFIED"
     * @const
     */
    "FEEDTYPE_UNSPECIFIED": "FEEDTYPE_UNSPECIFIED",

    /**
     * value: "RESOURCE_METADATA"
     * @const
     */
    "RESOURCE_METADATA": "RESOURCE_METADATA",

    /**
     * value: "OBSERVABILITY_DATA"
     * @const
     */
    "OBSERVABILITY_DATA": "OBSERVABILITY_DATA",

    /**
     * value: "SECURITY_FINDING_DATA"
     * @const
     */
    "SECURITY_FINDING_DATA": "SECURITY_FINDING_DATA",

    /**
     * value: "RECOMMENDATION_SIGNAL_DATA"
     * @const
     */
    "RECOMMENDATION_SIGNAL_DATA": "RECOMMENDATION_SIGNAL_DATA"
};



export default DatabaseResourceFeed;

