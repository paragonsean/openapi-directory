/**
 * Google Cloud Memorystore for Redis API
 * Creates and manages Redis instances on the Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleCloudMemorystoreForRedisApi);
  }
}(this, function(expect, GoogleCloudMemorystoreForRedisApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleCloudMemorystoreForRedisApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('redisProjectsLocationsClustersCreate', function() {
      it('should call redisProjectsLocationsClustersCreate successfully', function(done) {
        //uncomment below and update the code to test redisProjectsLocationsClustersCreate
        //instance.redisProjectsLocationsClustersCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('redisProjectsLocationsClustersList', function() {
      it('should call redisProjectsLocationsClustersList successfully', function(done) {
        //uncomment below and update the code to test redisProjectsLocationsClustersList
        //instance.redisProjectsLocationsClustersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('redisProjectsLocationsInstancesCreate', function() {
      it('should call redisProjectsLocationsInstancesCreate successfully', function(done) {
        //uncomment below and update the code to test redisProjectsLocationsInstancesCreate
        //instance.redisProjectsLocationsInstancesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('redisProjectsLocationsInstancesExport', function() {
      it('should call redisProjectsLocationsInstancesExport successfully', function(done) {
        //uncomment below and update the code to test redisProjectsLocationsInstancesExport
        //instance.redisProjectsLocationsInstancesExport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('redisProjectsLocationsInstancesFailover', function() {
      it('should call redisProjectsLocationsInstancesFailover successfully', function(done) {
        //uncomment below and update the code to test redisProjectsLocationsInstancesFailover
        //instance.redisProjectsLocationsInstancesFailover(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('redisProjectsLocationsInstancesGetAuthString', function() {
      it('should call redisProjectsLocationsInstancesGetAuthString successfully', function(done) {
        //uncomment below and update the code to test redisProjectsLocationsInstancesGetAuthString
        //instance.redisProjectsLocationsInstancesGetAuthString(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('redisProjectsLocationsInstancesImport', function() {
      it('should call redisProjectsLocationsInstancesImport successfully', function(done) {
        //uncomment below and update the code to test redisProjectsLocationsInstancesImport
        //instance.redisProjectsLocationsInstancesImport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('redisProjectsLocationsInstancesList', function() {
      it('should call redisProjectsLocationsInstancesList successfully', function(done) {
        //uncomment below and update the code to test redisProjectsLocationsInstancesList
        //instance.redisProjectsLocationsInstancesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('redisProjectsLocationsInstancesPatch', function() {
      it('should call redisProjectsLocationsInstancesPatch successfully', function(done) {
        //uncomment below and update the code to test redisProjectsLocationsInstancesPatch
        //instance.redisProjectsLocationsInstancesPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('redisProjectsLocationsInstancesRescheduleMaintenance', function() {
      it('should call redisProjectsLocationsInstancesRescheduleMaintenance successfully', function(done) {
        //uncomment below and update the code to test redisProjectsLocationsInstancesRescheduleMaintenance
        //instance.redisProjectsLocationsInstancesRescheduleMaintenance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('redisProjectsLocationsInstancesUpgrade', function() {
      it('should call redisProjectsLocationsInstancesUpgrade successfully', function(done) {
        //uncomment below and update the code to test redisProjectsLocationsInstancesUpgrade
        //instance.redisProjectsLocationsInstancesUpgrade(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('redisProjectsLocationsList', function() {
      it('should call redisProjectsLocationsList successfully', function(done) {
        //uncomment below and update the code to test redisProjectsLocationsList
        //instance.redisProjectsLocationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('redisProjectsLocationsOperationsCancel', function() {
      it('should call redisProjectsLocationsOperationsCancel successfully', function(done) {
        //uncomment below and update the code to test redisProjectsLocationsOperationsCancel
        //instance.redisProjectsLocationsOperationsCancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('redisProjectsLocationsOperationsDelete', function() {
      it('should call redisProjectsLocationsOperationsDelete successfully', function(done) {
        //uncomment below and update the code to test redisProjectsLocationsOperationsDelete
        //instance.redisProjectsLocationsOperationsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('redisProjectsLocationsOperationsGet', function() {
      it('should call redisProjectsLocationsOperationsGet successfully', function(done) {
        //uncomment below and update the code to test redisProjectsLocationsOperationsGet
        //instance.redisProjectsLocationsOperationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('redisProjectsLocationsOperationsList', function() {
      it('should call redisProjectsLocationsOperationsList successfully', function(done) {
        //uncomment below and update the code to test redisProjectsLocationsOperationsList
        //instance.redisProjectsLocationsOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
