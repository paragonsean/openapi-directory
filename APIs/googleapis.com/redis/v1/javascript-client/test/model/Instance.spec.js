/**
 * Google Cloud Memorystore for Redis API
 * Creates and manages Redis instances on the Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleCloudMemorystoreForRedisApi);
  }
}(this, function(expect, GoogleCloudMemorystoreForRedisApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleCloudMemorystoreForRedisApi.Instance();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Instance', function() {
    it('should create an instance of Instance', function() {
      // uncomment below and update the code to test Instance
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be.a(GoogleCloudMemorystoreForRedisApi.Instance);
    });

    it('should have the property alternativeLocationId (base name: "alternativeLocationId")', function() {
      // uncomment below and update the code to test the property alternativeLocationId
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property authEnabled (base name: "authEnabled")', function() {
      // uncomment below and update the code to test the property authEnabled
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property authorizedNetwork (base name: "authorizedNetwork")', function() {
      // uncomment below and update the code to test the property authorizedNetwork
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property availableMaintenanceVersions (base name: "availableMaintenanceVersions")', function() {
      // uncomment below and update the code to test the property availableMaintenanceVersions
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property connectMode (base name: "connectMode")', function() {
      // uncomment below and update the code to test the property connectMode
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property createTime (base name: "createTime")', function() {
      // uncomment below and update the code to test the property createTime
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property currentLocationId (base name: "currentLocationId")', function() {
      // uncomment below and update the code to test the property currentLocationId
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property customerManagedKey (base name: "customerManagedKey")', function() {
      // uncomment below and update the code to test the property customerManagedKey
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property host (base name: "host")', function() {
      // uncomment below and update the code to test the property host
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property locationId (base name: "locationId")', function() {
      // uncomment below and update the code to test the property locationId
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property maintenancePolicy (base name: "maintenancePolicy")', function() {
      // uncomment below and update the code to test the property maintenancePolicy
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property maintenanceSchedule (base name: "maintenanceSchedule")', function() {
      // uncomment below and update the code to test the property maintenanceSchedule
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property maintenanceVersion (base name: "maintenanceVersion")', function() {
      // uncomment below and update the code to test the property maintenanceVersion
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property memorySizeGb (base name: "memorySizeGb")', function() {
      // uncomment below and update the code to test the property memorySizeGb
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property nodes (base name: "nodes")', function() {
      // uncomment below and update the code to test the property nodes
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property persistenceConfig (base name: "persistenceConfig")', function() {
      // uncomment below and update the code to test the property persistenceConfig
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property persistenceIamIdentity (base name: "persistenceIamIdentity")', function() {
      // uncomment below and update the code to test the property persistenceIamIdentity
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property port (base name: "port")', function() {
      // uncomment below and update the code to test the property port
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property readEndpoint (base name: "readEndpoint")', function() {
      // uncomment below and update the code to test the property readEndpoint
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property readEndpointPort (base name: "readEndpointPort")', function() {
      // uncomment below and update the code to test the property readEndpointPort
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property readReplicasMode (base name: "readReplicasMode")', function() {
      // uncomment below and update the code to test the property readReplicasMode
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property redisConfigs (base name: "redisConfigs")', function() {
      // uncomment below and update the code to test the property redisConfigs
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property redisVersion (base name: "redisVersion")', function() {
      // uncomment below and update the code to test the property redisVersion
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property replicaCount (base name: "replicaCount")', function() {
      // uncomment below and update the code to test the property replicaCount
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property reservedIpRange (base name: "reservedIpRange")', function() {
      // uncomment below and update the code to test the property reservedIpRange
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property satisfiesPzi (base name: "satisfiesPzi")', function() {
      // uncomment below and update the code to test the property satisfiesPzi
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property satisfiesPzs (base name: "satisfiesPzs")', function() {
      // uncomment below and update the code to test the property satisfiesPzs
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property secondaryIpRange (base name: "secondaryIpRange")', function() {
      // uncomment below and update the code to test the property secondaryIpRange
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property serverCaCerts (base name: "serverCaCerts")', function() {
      // uncomment below and update the code to test the property serverCaCerts
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property statusMessage (base name: "statusMessage")', function() {
      // uncomment below and update the code to test the property statusMessage
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property suspensionReasons (base name: "suspensionReasons")', function() {
      // uncomment below and update the code to test the property suspensionReasons
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property tier (base name: "tier")', function() {
      // uncomment below and update the code to test the property tier
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property transitEncryptionMode (base name: "transitEncryptionMode")', function() {
      // uncomment below and update the code to test the property transitEncryptionMode
      //var instance = new GoogleCloudMemorystoreForRedisApi.Instance();
      //expect(instance).to.be();
    });

  });

}));
