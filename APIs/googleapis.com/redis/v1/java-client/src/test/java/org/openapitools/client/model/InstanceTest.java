/*
 * Google Cloud Memorystore for Redis API
 * Creates and manages Redis instances on the Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.MaintenancePolicy;
import org.openapitools.client.model.MaintenanceSchedule;
import org.openapitools.client.model.NodeInfo;
import org.openapitools.client.model.PersistenceConfig;
import org.openapitools.client.model.TlsCertificate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Instance
 */
public class InstanceTest {
    private final Instance model = new Instance();

    /**
     * Model tests for Instance
     */
    @Test
    public void testInstance() {
        // TODO: test Instance
    }

    /**
     * Test the property 'alternativeLocationId'
     */
    @Test
    public void alternativeLocationIdTest() {
        // TODO: test alternativeLocationId
    }

    /**
     * Test the property 'authEnabled'
     */
    @Test
    public void authEnabledTest() {
        // TODO: test authEnabled
    }

    /**
     * Test the property 'authorizedNetwork'
     */
    @Test
    public void authorizedNetworkTest() {
        // TODO: test authorizedNetwork
    }

    /**
     * Test the property 'availableMaintenanceVersions'
     */
    @Test
    public void availableMaintenanceVersionsTest() {
        // TODO: test availableMaintenanceVersions
    }

    /**
     * Test the property 'connectMode'
     */
    @Test
    public void connectModeTest() {
        // TODO: test connectMode
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'currentLocationId'
     */
    @Test
    public void currentLocationIdTest() {
        // TODO: test currentLocationId
    }

    /**
     * Test the property 'customerManagedKey'
     */
    @Test
    public void customerManagedKeyTest() {
        // TODO: test customerManagedKey
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'host'
     */
    @Test
    public void hostTest() {
        // TODO: test host
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'locationId'
     */
    @Test
    public void locationIdTest() {
        // TODO: test locationId
    }

    /**
     * Test the property 'maintenancePolicy'
     */
    @Test
    public void maintenancePolicyTest() {
        // TODO: test maintenancePolicy
    }

    /**
     * Test the property 'maintenanceSchedule'
     */
    @Test
    public void maintenanceScheduleTest() {
        // TODO: test maintenanceSchedule
    }

    /**
     * Test the property 'maintenanceVersion'
     */
    @Test
    public void maintenanceVersionTest() {
        // TODO: test maintenanceVersion
    }

    /**
     * Test the property 'memorySizeGb'
     */
    @Test
    public void memorySizeGbTest() {
        // TODO: test memorySizeGb
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nodes'
     */
    @Test
    public void nodesTest() {
        // TODO: test nodes
    }

    /**
     * Test the property 'persistenceConfig'
     */
    @Test
    public void persistenceConfigTest() {
        // TODO: test persistenceConfig
    }

    /**
     * Test the property 'persistenceIamIdentity'
     */
    @Test
    public void persistenceIamIdentityTest() {
        // TODO: test persistenceIamIdentity
    }

    /**
     * Test the property 'port'
     */
    @Test
    public void portTest() {
        // TODO: test port
    }

    /**
     * Test the property 'readEndpoint'
     */
    @Test
    public void readEndpointTest() {
        // TODO: test readEndpoint
    }

    /**
     * Test the property 'readEndpointPort'
     */
    @Test
    public void readEndpointPortTest() {
        // TODO: test readEndpointPort
    }

    /**
     * Test the property 'readReplicasMode'
     */
    @Test
    public void readReplicasModeTest() {
        // TODO: test readReplicasMode
    }

    /**
     * Test the property 'redisConfigs'
     */
    @Test
    public void redisConfigsTest() {
        // TODO: test redisConfigs
    }

    /**
     * Test the property 'redisVersion'
     */
    @Test
    public void redisVersionTest() {
        // TODO: test redisVersion
    }

    /**
     * Test the property 'replicaCount'
     */
    @Test
    public void replicaCountTest() {
        // TODO: test replicaCount
    }

    /**
     * Test the property 'reservedIpRange'
     */
    @Test
    public void reservedIpRangeTest() {
        // TODO: test reservedIpRange
    }

    /**
     * Test the property 'satisfiesPzi'
     */
    @Test
    public void satisfiesPziTest() {
        // TODO: test satisfiesPzi
    }

    /**
     * Test the property 'satisfiesPzs'
     */
    @Test
    public void satisfiesPzsTest() {
        // TODO: test satisfiesPzs
    }

    /**
     * Test the property 'secondaryIpRange'
     */
    @Test
    public void secondaryIpRangeTest() {
        // TODO: test secondaryIpRange
    }

    /**
     * Test the property 'serverCaCerts'
     */
    @Test
    public void serverCaCertsTest() {
        // TODO: test serverCaCerts
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'statusMessage'
     */
    @Test
    public void statusMessageTest() {
        // TODO: test statusMessage
    }

    /**
     * Test the property 'suspensionReasons'
     */
    @Test
    public void suspensionReasonsTest() {
        // TODO: test suspensionReasons
    }

    /**
     * Test the property 'tier'
     */
    @Test
    public void tierTest() {
        // TODO: test tier
    }

    /**
     * Test the property 'transitEncryptionMode'
     */
    @Test
    public void transitEncryptionModeTest() {
        // TODO: test transitEncryptionMode
    }

}
