/**
 * Google Cloud Memorystore for Redis API
 * Creates and manages Redis instances on the Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEntitlement.h
 *
 * Proto representing the access that a user has to a specific feature/service. NextId: 3.
 */

#ifndef OAIEntitlement_H
#define OAIEntitlement_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEntitlement : public OAIObject {
public:
    OAIEntitlement();
    OAIEntitlement(QString json);
    ~OAIEntitlement() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEntitlementState() const;
    void setEntitlementState(const QString &entitlement_state);
    bool is_entitlement_state_Set() const;
    bool is_entitlement_state_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_entitlement_state;
    bool m_entitlement_state_isSet;
    bool m_entitlement_state_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEntitlement)

#endif // OAIEntitlement_H
