/**
 * Google Cloud Memorystore for Redis API
 * Creates and manages Redis instances on the Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFailoverInstanceRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFailoverInstanceRequest::OAIFailoverInstanceRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFailoverInstanceRequest::OAIFailoverInstanceRequest() {
    this->initializeModel();
}

OAIFailoverInstanceRequest::~OAIFailoverInstanceRequest() {}

void OAIFailoverInstanceRequest::initializeModel() {

    m_data_protection_mode_isSet = false;
    m_data_protection_mode_isValid = false;
}

void OAIFailoverInstanceRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFailoverInstanceRequest::fromJsonObject(QJsonObject json) {

    m_data_protection_mode_isValid = ::OpenAPI::fromJsonValue(m_data_protection_mode, json[QString("dataProtectionMode")]);
    m_data_protection_mode_isSet = !json[QString("dataProtectionMode")].isNull() && m_data_protection_mode_isValid;
}

QString OAIFailoverInstanceRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFailoverInstanceRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_data_protection_mode_isSet) {
        obj.insert(QString("dataProtectionMode"), ::OpenAPI::toJsonValue(m_data_protection_mode));
    }
    return obj;
}

QString OAIFailoverInstanceRequest::getDataProtectionMode() const {
    return m_data_protection_mode;
}
void OAIFailoverInstanceRequest::setDataProtectionMode(const QString &data_protection_mode) {
    m_data_protection_mode = data_protection_mode;
    m_data_protection_mode_isSet = true;
}

bool OAIFailoverInstanceRequest::is_data_protection_mode_Set() const{
    return m_data_protection_mode_isSet;
}

bool OAIFailoverInstanceRequest::is_data_protection_mode_Valid() const{
    return m_data_protection_mode_isValid;
}

bool OAIFailoverInstanceRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_protection_mode_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFailoverInstanceRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
