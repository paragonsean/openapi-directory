# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cert_chain import CertChain
from openapi_server import util


class ManagedCertificateAuthority(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ca_certs: List[CertChain]=None):
        """ManagedCertificateAuthority - a model defined in OpenAPI

        :param ca_certs: The ca_certs of this ManagedCertificateAuthority.
        """
        self.openapi_types = {
            'ca_certs': List[CertChain]
        }

        self.attribute_map = {
            'ca_certs': 'caCerts'
        }

        self._ca_certs = ca_certs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManagedCertificateAuthority':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManagedCertificateAuthority of this ManagedCertificateAuthority.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ca_certs(self):
        """Gets the ca_certs of this ManagedCertificateAuthority.

        The PEM encoded CA certificate chains for redis managed server authentication

        :return: The ca_certs of this ManagedCertificateAuthority.
        :rtype: List[CertChain]
        """
        return self._ca_certs

    @ca_certs.setter
    def ca_certs(self, ca_certs):
        """Sets the ca_certs of this ManagedCertificateAuthority.

        The PEM encoded CA certificate chains for redis managed server authentication

        :param ca_certs: The ca_certs of this ManagedCertificateAuthority.
        :type ca_certs: List[CertChain]
        """

        self._ca_certs = ca_certs
