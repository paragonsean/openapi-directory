/**
 * Google Cloud Memorystore for Redis API
 * Creates and manages Redis instances on the Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InputConfig from './InputConfig';

/**
 * The ImportInstanceRequest model module.
 * @module model/ImportInstanceRequest
 * @version v1beta1
 */
class ImportInstanceRequest {
    /**
     * Constructs a new <code>ImportInstanceRequest</code>.
     * Request for Import.
     * @alias module:model/ImportInstanceRequest
     */
    constructor() { 
        
        ImportInstanceRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImportInstanceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImportInstanceRequest} obj Optional instance to populate.
     * @return {module:model/ImportInstanceRequest} The populated <code>ImportInstanceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImportInstanceRequest();

            if (data.hasOwnProperty('inputConfig')) {
                obj['inputConfig'] = InputConfig.constructFromObject(data['inputConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImportInstanceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImportInstanceRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `inputConfig`
        if (data['inputConfig']) { // data not null
          InputConfig.validateJSON(data['inputConfig']);
        }

        return true;
    }


}



/**
 * @member {module:model/InputConfig} inputConfig
 */
ImportInstanceRequest.prototype['inputConfig'] = undefined;






export default ImportInstanceRequest;

