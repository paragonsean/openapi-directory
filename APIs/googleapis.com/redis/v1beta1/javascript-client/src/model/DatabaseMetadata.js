/**
 * Google Cloud Memorystore for Redis API
 * Creates and manages Redis instances on the Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BackupConfiguration from './BackupConfiguration';
import BackupRun from './BackupRun';
import DatabaseResourceId from './DatabaseResourceId';
import Product from './Product';

/**
 * The DatabaseMetadata model module.
 * @module model/DatabaseMetadata
 * @version v1beta1
 */
class DatabaseMetadata {
    /**
     * Constructs a new <code>DatabaseMetadata</code>.
     * Metadata for individual databases created in an instance. i.e. spanner instance can have multiple databases with unique configuration settings.
     * @alias module:model/DatabaseMetadata
     */
    constructor() { 
        
        DatabaseMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DatabaseMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DatabaseMetadata} obj Optional instance to populate.
     * @return {module:model/DatabaseMetadata} The populated <code>DatabaseMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DatabaseMetadata();

            if (data.hasOwnProperty('backupConfiguration')) {
                obj['backupConfiguration'] = BackupConfiguration.constructFromObject(data['backupConfiguration']);
            }
            if (data.hasOwnProperty('backupRun')) {
                obj['backupRun'] = BackupRun.constructFromObject(data['backupRun']);
            }
            if (data.hasOwnProperty('product')) {
                obj['product'] = Product.constructFromObject(data['product']);
            }
            if (data.hasOwnProperty('resourceId')) {
                obj['resourceId'] = DatabaseResourceId.constructFromObject(data['resourceId']);
            }
            if (data.hasOwnProperty('resourceName')) {
                obj['resourceName'] = ApiClient.convertToType(data['resourceName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DatabaseMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DatabaseMetadata</code>.
     */
    static validateJSON(data) {
        // validate the optional field `backupConfiguration`
        if (data['backupConfiguration']) { // data not null
          BackupConfiguration.validateJSON(data['backupConfiguration']);
        }
        // validate the optional field `backupRun`
        if (data['backupRun']) { // data not null
          BackupRun.validateJSON(data['backupRun']);
        }
        // validate the optional field `product`
        if (data['product']) { // data not null
          Product.validateJSON(data['product']);
        }
        // validate the optional field `resourceId`
        if (data['resourceId']) { // data not null
          DatabaseResourceId.validateJSON(data['resourceId']);
        }
        // ensure the json data is a string
        if (data['resourceName'] && !(typeof data['resourceName'] === 'string' || data['resourceName'] instanceof String)) {
            throw new Error("Expected the field `resourceName` to be a primitive type in the JSON string but got " + data['resourceName']);
        }

        return true;
    }


}



/**
 * @member {module:model/BackupConfiguration} backupConfiguration
 */
DatabaseMetadata.prototype['backupConfiguration'] = undefined;

/**
 * @member {module:model/BackupRun} backupRun
 */
DatabaseMetadata.prototype['backupRun'] = undefined;

/**
 * @member {module:model/Product} product
 */
DatabaseMetadata.prototype['product'] = undefined;

/**
 * @member {module:model/DatabaseResourceId} resourceId
 */
DatabaseMetadata.prototype['resourceId'] = undefined;

/**
 * Required. Database name. Resource name to follow CAIS resource_name format as noted here go/condor-common-datamodel
 * @member {String} resourceName
 */
DatabaseMetadata.prototype['resourceName'] = undefined;






export default DatabaseMetadata;

