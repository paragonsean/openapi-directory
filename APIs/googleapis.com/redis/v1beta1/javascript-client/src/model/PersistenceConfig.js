/**
 * Google Cloud Memorystore for Redis API
 * Creates and manages Redis instances on the Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PersistenceConfig model module.
 * @module model/PersistenceConfig
 * @version v1beta1
 */
class PersistenceConfig {
    /**
     * Constructs a new <code>PersistenceConfig</code>.
     * Configuration of the persistence functionality.
     * @alias module:model/PersistenceConfig
     */
    constructor() { 
        
        PersistenceConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PersistenceConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PersistenceConfig} obj Optional instance to populate.
     * @return {module:model/PersistenceConfig} The populated <code>PersistenceConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PersistenceConfig();

            if (data.hasOwnProperty('persistenceMode')) {
                obj['persistenceMode'] = ApiClient.convertToType(data['persistenceMode'], 'String');
            }
            if (data.hasOwnProperty('rdbNextSnapshotTime')) {
                obj['rdbNextSnapshotTime'] = ApiClient.convertToType(data['rdbNextSnapshotTime'], 'String');
            }
            if (data.hasOwnProperty('rdbSnapshotPeriod')) {
                obj['rdbSnapshotPeriod'] = ApiClient.convertToType(data['rdbSnapshotPeriod'], 'String');
            }
            if (data.hasOwnProperty('rdbSnapshotStartTime')) {
                obj['rdbSnapshotStartTime'] = ApiClient.convertToType(data['rdbSnapshotStartTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PersistenceConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PersistenceConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['persistenceMode'] && !(typeof data['persistenceMode'] === 'string' || data['persistenceMode'] instanceof String)) {
            throw new Error("Expected the field `persistenceMode` to be a primitive type in the JSON string but got " + data['persistenceMode']);
        }
        // ensure the json data is a string
        if (data['rdbNextSnapshotTime'] && !(typeof data['rdbNextSnapshotTime'] === 'string' || data['rdbNextSnapshotTime'] instanceof String)) {
            throw new Error("Expected the field `rdbNextSnapshotTime` to be a primitive type in the JSON string but got " + data['rdbNextSnapshotTime']);
        }
        // ensure the json data is a string
        if (data['rdbSnapshotPeriod'] && !(typeof data['rdbSnapshotPeriod'] === 'string' || data['rdbSnapshotPeriod'] instanceof String)) {
            throw new Error("Expected the field `rdbSnapshotPeriod` to be a primitive type in the JSON string but got " + data['rdbSnapshotPeriod']);
        }
        // ensure the json data is a string
        if (data['rdbSnapshotStartTime'] && !(typeof data['rdbSnapshotStartTime'] === 'string' || data['rdbSnapshotStartTime'] instanceof String)) {
            throw new Error("Expected the field `rdbSnapshotStartTime` to be a primitive type in the JSON string but got " + data['rdbSnapshotStartTime']);
        }

        return true;
    }


}



/**
 * Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
 * @member {module:model/PersistenceConfig.PersistenceModeEnum} persistenceMode
 */
PersistenceConfig.prototype['persistenceMode'] = undefined;

/**
 * Output only. The next time that a snapshot attempt is scheduled to occur.
 * @member {String} rdbNextSnapshotTime
 */
PersistenceConfig.prototype['rdbNextSnapshotTime'] = undefined;

/**
 * Optional. Period between RDB snapshots. Snapshots will be attempted every period starting from the provided snapshot start time. For example, a start time of 01/01/2033 06:45 and SIX_HOURS snapshot period will do nothing until 01/01/2033, and then trigger snapshots every day at 06:45, 12:45, 18:45, and 00:45 the next day, and so on. If not provided, TWENTY_FOUR_HOURS will be used as default.
 * @member {module:model/PersistenceConfig.RdbSnapshotPeriodEnum} rdbSnapshotPeriod
 */
PersistenceConfig.prototype['rdbSnapshotPeriod'] = undefined;

/**
 * Optional. Date and time that the first snapshot was/will be attempted, and to which future snapshots will be aligned. If not provided, the current time will be used.
 * @member {String} rdbSnapshotStartTime
 */
PersistenceConfig.prototype['rdbSnapshotStartTime'] = undefined;





/**
 * Allowed values for the <code>persistenceMode</code> property.
 * @enum {String}
 * @readonly
 */
PersistenceConfig['PersistenceModeEnum'] = {

    /**
     * value: "PERSISTENCE_MODE_UNSPECIFIED"
     * @const
     */
    "PERSISTENCE_MODE_UNSPECIFIED": "PERSISTENCE_MODE_UNSPECIFIED",

    /**
     * value: "DISABLED"
     * @const
     */
    "DISABLED": "DISABLED",

    /**
     * value: "RDB"
     * @const
     */
    "RDB": "RDB"
};


/**
 * Allowed values for the <code>rdbSnapshotPeriod</code> property.
 * @enum {String}
 * @readonly
 */
PersistenceConfig['RdbSnapshotPeriodEnum'] = {

    /**
     * value: "SNAPSHOT_PERIOD_UNSPECIFIED"
     * @const
     */
    "SNAPSHOT_PERIOD_UNSPECIFIED": "SNAPSHOT_PERIOD_UNSPECIFIED",

    /**
     * value: "ONE_HOUR"
     * @const
     */
    "ONE_HOUR": "ONE_HOUR",

    /**
     * value: "SIX_HOURS"
     * @const
     */
    "SIX_HOURS": "SIX_HOURS",

    /**
     * value: "TWELVE_HOURS"
     * @const
     */
    "TWELVE_HOURS": "TWELVE_HOURS",

    /**
     * value: "TWENTY_FOUR_HOURS"
     * @const
     */
    "TWENTY_FOUR_HOURS": "TWENTY_FOUR_HOURS"
};



export default PersistenceConfig;

