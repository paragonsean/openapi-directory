/**
 * Google Cloud Memorystore for Redis API
 * Creates and manages Redis instances on the Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Compliance from './Compliance';

/**
 * The DatabaseResourceHealthSignalData model module.
 * @module model/DatabaseResourceHealthSignalData
 * @version v1beta1
 */
class DatabaseResourceHealthSignalData {
    /**
     * Constructs a new <code>DatabaseResourceHealthSignalData</code>.
     * Common model for database resource health signal data.
     * @alias module:model/DatabaseResourceHealthSignalData
     */
    constructor() { 
        
        DatabaseResourceHealthSignalData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DatabaseResourceHealthSignalData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DatabaseResourceHealthSignalData} obj Optional instance to populate.
     * @return {module:model/DatabaseResourceHealthSignalData} The populated <code>DatabaseResourceHealthSignalData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DatabaseResourceHealthSignalData();

            if (data.hasOwnProperty('additionalMetadata')) {
                obj['additionalMetadata'] = ApiClient.convertToType(data['additionalMetadata'], {'String': Object});
            }
            if (data.hasOwnProperty('compliance')) {
                obj['compliance'] = ApiClient.convertToType(data['compliance'], [Compliance]);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('eventTime')) {
                obj['eventTime'] = ApiClient.convertToType(data['eventTime'], 'String');
            }
            if (data.hasOwnProperty('externalUri')) {
                obj['externalUri'] = ApiClient.convertToType(data['externalUri'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('provider')) {
                obj['provider'] = ApiClient.convertToType(data['provider'], 'String');
            }
            if (data.hasOwnProperty('resourceContainer')) {
                obj['resourceContainer'] = ApiClient.convertToType(data['resourceContainer'], 'String');
            }
            if (data.hasOwnProperty('resourceName')) {
                obj['resourceName'] = ApiClient.convertToType(data['resourceName'], 'String');
            }
            if (data.hasOwnProperty('signalClass')) {
                obj['signalClass'] = ApiClient.convertToType(data['signalClass'], 'String');
            }
            if (data.hasOwnProperty('signalId')) {
                obj['signalId'] = ApiClient.convertToType(data['signalId'], 'String');
            }
            if (data.hasOwnProperty('signalType')) {
                obj['signalType'] = ApiClient.convertToType(data['signalType'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DatabaseResourceHealthSignalData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DatabaseResourceHealthSignalData</code>.
     */
    static validateJSON(data) {
        if (data['compliance']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['compliance'])) {
                throw new Error("Expected the field `compliance` to be an array in the JSON data but got " + data['compliance']);
            }
            // validate the optional field `compliance` (array)
            for (const item of data['compliance']) {
                Compliance.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['eventTime'] && !(typeof data['eventTime'] === 'string' || data['eventTime'] instanceof String)) {
            throw new Error("Expected the field `eventTime` to be a primitive type in the JSON string but got " + data['eventTime']);
        }
        // ensure the json data is a string
        if (data['externalUri'] && !(typeof data['externalUri'] === 'string' || data['externalUri'] instanceof String)) {
            throw new Error("Expected the field `externalUri` to be a primitive type in the JSON string but got " + data['externalUri']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['provider'] && !(typeof data['provider'] === 'string' || data['provider'] instanceof String)) {
            throw new Error("Expected the field `provider` to be a primitive type in the JSON string but got " + data['provider']);
        }
        // ensure the json data is a string
        if (data['resourceContainer'] && !(typeof data['resourceContainer'] === 'string' || data['resourceContainer'] instanceof String)) {
            throw new Error("Expected the field `resourceContainer` to be a primitive type in the JSON string but got " + data['resourceContainer']);
        }
        // ensure the json data is a string
        if (data['resourceName'] && !(typeof data['resourceName'] === 'string' || data['resourceName'] instanceof String)) {
            throw new Error("Expected the field `resourceName` to be a primitive type in the JSON string but got " + data['resourceName']);
        }
        // ensure the json data is a string
        if (data['signalClass'] && !(typeof data['signalClass'] === 'string' || data['signalClass'] instanceof String)) {
            throw new Error("Expected the field `signalClass` to be a primitive type in the JSON string but got " + data['signalClass']);
        }
        // ensure the json data is a string
        if (data['signalId'] && !(typeof data['signalId'] === 'string' || data['signalId'] instanceof String)) {
            throw new Error("Expected the field `signalId` to be a primitive type in the JSON string but got " + data['signalId']);
        }
        // ensure the json data is a string
        if (data['signalType'] && !(typeof data['signalType'] === 'string' || data['signalType'] instanceof String)) {
            throw new Error("Expected the field `signalType` to be a primitive type in the JSON string but got " + data['signalType']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * Any other additional metadata
 * @member {Object.<String, Object>} additionalMetadata
 */
DatabaseResourceHealthSignalData.prototype['additionalMetadata'] = undefined;

/**
 * Industry standards associated with this signal; if this signal is an issue, that could be a violation of the associated industry standard(s). For example, AUTO_BACKUP_DISABLED signal is associated with CIS GCP 1.1, CIS GCP 1.2, CIS GCP 1.3, NIST 800-53 and ISO-27001 compliance standards. If a database resource does not have automated backup enable, it will violate these following industry standards.
 * @member {Array.<module:model/Compliance>} compliance
 */
DatabaseResourceHealthSignalData.prototype['compliance'] = undefined;

/**
 * Description associated with signal
 * @member {String} description
 */
DatabaseResourceHealthSignalData.prototype['description'] = undefined;

/**
 * Required. The last time at which the event described by this signal took place
 * @member {String} eventTime
 */
DatabaseResourceHealthSignalData.prototype['eventTime'] = undefined;

/**
 * The external-uri of the signal, using which more information about this signal can be obtained. In GCP, this will take user to SCC page to get more details about signals.
 * @member {String} externalUri
 */
DatabaseResourceHealthSignalData.prototype['externalUri'] = undefined;

/**
 * Required. The name of the signal, ex: PUBLIC_SQL_INSTANCE, SQL_LOG_ERROR_VERBOSITY etc.
 * @member {String} name
 */
DatabaseResourceHealthSignalData.prototype['name'] = undefined;

/**
 * Cloud provider name. Ex: GCP/AWS/Azure/OnPrem/SelfManaged
 * @member {module:model/DatabaseResourceHealthSignalData.ProviderEnum} provider
 */
DatabaseResourceHealthSignalData.prototype['provider'] = undefined;

/**
 * Closest parent container of this resource. In GCP, 'container' refers to a Cloud Resource Manager project. It must be resource name of a Cloud Resource Manager project with the format of \"provider//\", such as \"projects/123\". For GCP provided resources, number should be project number.
 * @member {String} resourceContainer
 */
DatabaseResourceHealthSignalData.prototype['resourceContainer'] = undefined;

/**
 * Required. Database resource name associated with the signal. Resource name to follow CAIS resource_name format as noted here go/condor-common-datamodel
 * @member {String} resourceName
 */
DatabaseResourceHealthSignalData.prototype['resourceName'] = undefined;

/**
 * Required. The class of the signal, such as if it's a THREAT or VULNERABILITY.
 * @member {module:model/DatabaseResourceHealthSignalData.SignalClassEnum} signalClass
 */
DatabaseResourceHealthSignalData.prototype['signalClass'] = undefined;

/**
 * Required. Unique identifier for the signal. This is an unique id which would be mainatined by partner to identify a signal.
 * @member {String} signalId
 */
DatabaseResourceHealthSignalData.prototype['signalId'] = undefined;

/**
 * Required. Type of signal, for example, `AVAILABLE_IN_MULTIPLE_ZONES`, `LOGGING_MOST_ERRORS`, etc.
 * @member {module:model/DatabaseResourceHealthSignalData.SignalTypeEnum} signalType
 */
DatabaseResourceHealthSignalData.prototype['signalType'] = undefined;

/**
 * @member {module:model/DatabaseResourceHealthSignalData.StateEnum} state
 */
DatabaseResourceHealthSignalData.prototype['state'] = undefined;





/**
 * Allowed values for the <code>provider</code> property.
 * @enum {String}
 * @readonly
 */
DatabaseResourceHealthSignalData['ProviderEnum'] = {

    /**
     * value: "PROVIDER_UNSPECIFIED"
     * @const
     */
    "PROVIDER_UNSPECIFIED": "PROVIDER_UNSPECIFIED",

    /**
     * value: "GCP"
     * @const
     */
    "GCP": "GCP",

    /**
     * value: "AWS"
     * @const
     */
    "AWS": "AWS",

    /**
     * value: "AZURE"
     * @const
     */
    "AZURE": "AZURE",

    /**
     * value: "ONPREM"
     * @const
     */
    "ONPREM": "ONPREM",

    /**
     * value: "SELFMANAGED"
     * @const
     */
    "SELFMANAGED": "SELFMANAGED",

    /**
     * value: "PROVIDER_OTHER"
     * @const
     */
    "PROVIDER_OTHER": "PROVIDER_OTHER"
};


/**
 * Allowed values for the <code>signalClass</code> property.
 * @enum {String}
 * @readonly
 */
DatabaseResourceHealthSignalData['SignalClassEnum'] = {

    /**
     * value: "CLASS_UNSPECIFIED"
     * @const
     */
    "CLASS_UNSPECIFIED": "CLASS_UNSPECIFIED",

    /**
     * value: "THREAT"
     * @const
     */
    "THREAT": "THREAT",

    /**
     * value: "VULNERABILITY"
     * @const
     */
    "VULNERABILITY": "VULNERABILITY",

    /**
     * value: "MISCONFIGURATION"
     * @const
     */
    "MISCONFIGURATION": "MISCONFIGURATION",

    /**
     * value: "OBSERVATION"
     * @const
     */
    "OBSERVATION": "OBSERVATION",

    /**
     * value: "ERROR"
     * @const
     */
    "ERROR": "ERROR"
};


/**
 * Allowed values for the <code>signalType</code> property.
 * @enum {String}
 * @readonly
 */
DatabaseResourceHealthSignalData['SignalTypeEnum'] = {

    /**
     * value: "SIGNAL_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "SIGNAL_TYPE_UNSPECIFIED",

    /**
     * value: "SIGNAL_TYPE_NOT_PROTECTED_BY_AUTOMATIC_FAILOVER"
     * @const
     */
    "NOT_PROTECTED_BY_AUTOMATIC_FAILOVER": "SIGNAL_TYPE_NOT_PROTECTED_BY_AUTOMATIC_FAILOVER",

    /**
     * value: "SIGNAL_TYPE_GROUP_NOT_REPLICATING_ACROSS_REGIONS"
     * @const
     */
    "GROUP_NOT_REPLICATING_ACROSS_REGIONS": "SIGNAL_TYPE_GROUP_NOT_REPLICATING_ACROSS_REGIONS",

    /**
     * value: "SIGNAL_TYPE_NOT_AVAILABLE_IN_MULTIPLE_ZONES"
     * @const
     */
    "NOT_AVAILABLE_IN_MULTIPLE_ZONES": "SIGNAL_TYPE_NOT_AVAILABLE_IN_MULTIPLE_ZONES",

    /**
     * value: "SIGNAL_TYPE_NOT_AVAILABLE_IN_MULTIPLE_REGIONS"
     * @const
     */
    "NOT_AVAILABLE_IN_MULTIPLE_REGIONS": "SIGNAL_TYPE_NOT_AVAILABLE_IN_MULTIPLE_REGIONS",

    /**
     * value: "SIGNAL_TYPE_NO_PROMOTABLE_REPLICA"
     * @const
     */
    "NO_PROMOTABLE_REPLICA": "SIGNAL_TYPE_NO_PROMOTABLE_REPLICA",

    /**
     * value: "SIGNAL_TYPE_NO_AUTOMATED_BACKUP_POLICY"
     * @const
     */
    "NO_AUTOMATED_BACKUP_POLICY": "SIGNAL_TYPE_NO_AUTOMATED_BACKUP_POLICY",

    /**
     * value: "SIGNAL_TYPE_SHORT_BACKUP_RETENTION"
     * @const
     */
    "SHORT_BACKUP_RETENTION": "SIGNAL_TYPE_SHORT_BACKUP_RETENTION",

    /**
     * value: "SIGNAL_TYPE_LAST_BACKUP_FAILED"
     * @const
     */
    "LAST_BACKUP_FAILED": "SIGNAL_TYPE_LAST_BACKUP_FAILED",

    /**
     * value: "SIGNAL_TYPE_LAST_BACKUP_OLD"
     * @const
     */
    "LAST_BACKUP_OLD": "SIGNAL_TYPE_LAST_BACKUP_OLD",

    /**
     * value: "SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_2_0"
     * @const
     */
    "VIOLATES_CIS_GCP_FOUNDATION_2_0": "SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_2_0",

    /**
     * value: "SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_3"
     * @const
     */
    "VIOLATES_CIS_GCP_FOUNDATION_1_3": "SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_3",

    /**
     * value: "SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_2"
     * @const
     */
    "VIOLATES_CIS_GCP_FOUNDATION_1_2": "SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_2",

    /**
     * value: "SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_1"
     * @const
     */
    "VIOLATES_CIS_GCP_FOUNDATION_1_1": "SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_1",

    /**
     * value: "SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_0"
     * @const
     */
    "VIOLATES_CIS_GCP_FOUNDATION_1_0": "SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_0",

    /**
     * value: "SIGNAL_TYPE_VIOLATES_NIST_800_53"
     * @const
     */
    "VIOLATES_NIST_800_53": "SIGNAL_TYPE_VIOLATES_NIST_800_53",

    /**
     * value: "SIGNAL_TYPE_VIOLATES_ISO_27001"
     * @const
     */
    "VIOLATES_ISO_27001": "SIGNAL_TYPE_VIOLATES_ISO_27001",

    /**
     * value: "SIGNAL_TYPE_VIOLATES_PCI_DSS_V3_2_1"
     * @const
     */
    "VIOLATES_PCI_DSS_V3_2_1": "SIGNAL_TYPE_VIOLATES_PCI_DSS_V3_2_1",

    /**
     * value: "SIGNAL_TYPE_LOGS_NOT_OPTIMIZED_FOR_TROUBLESHOOTING"
     * @const
     */
    "LOGS_NOT_OPTIMIZED_FOR_TROUBLESHOOTING": "SIGNAL_TYPE_LOGS_NOT_OPTIMIZED_FOR_TROUBLESHOOTING",

    /**
     * value: "SIGNAL_TYPE_QUERY_DURATIONS_NOT_LOGGED"
     * @const
     */
    "QUERY_DURATIONS_NOT_LOGGED": "SIGNAL_TYPE_QUERY_DURATIONS_NOT_LOGGED",

    /**
     * value: "SIGNAL_TYPE_VERBOSE_ERROR_LOGGING"
     * @const
     */
    "VERBOSE_ERROR_LOGGING": "SIGNAL_TYPE_VERBOSE_ERROR_LOGGING",

    /**
     * value: "SIGNAL_TYPE_QUERY_LOCK_WAITS_NOT_LOGGED"
     * @const
     */
    "QUERY_LOCK_WAITS_NOT_LOGGED": "SIGNAL_TYPE_QUERY_LOCK_WAITS_NOT_LOGGED",

    /**
     * value: "SIGNAL_TYPE_LOGGING_MOST_ERRORS"
     * @const
     */
    "LOGGING_MOST_ERRORS": "SIGNAL_TYPE_LOGGING_MOST_ERRORS",

    /**
     * value: "SIGNAL_TYPE_LOGGING_ONLY_CRITICAL_ERRORS"
     * @const
     */
    "LOGGING_ONLY_CRITICAL_ERRORS": "SIGNAL_TYPE_LOGGING_ONLY_CRITICAL_ERRORS",

    /**
     * value: "SIGNAL_TYPE_MINIMAL_ERROR_LOGGING"
     * @const
     */
    "MINIMAL_ERROR_LOGGING": "SIGNAL_TYPE_MINIMAL_ERROR_LOGGING",

    /**
     * value: "SIGNAL_TYPE_QUERY_STATISTICS_LOGGED"
     * @const
     */
    "QUERY_STATISTICS_LOGGED": "SIGNAL_TYPE_QUERY_STATISTICS_LOGGED",

    /**
     * value: "SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_CLIENT_HOSTNAME"
     * @const
     */
    "EXCESSIVE_LOGGING_OF_CLIENT_HOSTNAME": "SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_CLIENT_HOSTNAME",

    /**
     * value: "SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_PARSER_STATISTICS"
     * @const
     */
    "EXCESSIVE_LOGGING_OF_PARSER_STATISTICS": "SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_PARSER_STATISTICS",

    /**
     * value: "SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_PLANNER_STATISTICS"
     * @const
     */
    "EXCESSIVE_LOGGING_OF_PLANNER_STATISTICS": "SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_PLANNER_STATISTICS",

    /**
     * value: "SIGNAL_TYPE_NOT_LOGGING_ONLY_DDL_STATEMENTS"
     * @const
     */
    "NOT_LOGGING_ONLY_DDL_STATEMENTS": "SIGNAL_TYPE_NOT_LOGGING_ONLY_DDL_STATEMENTS",

    /**
     * value: "SIGNAL_TYPE_LOGGING_QUERY_STATISTICS"
     * @const
     */
    "LOGGING_QUERY_STATISTICS": "SIGNAL_TYPE_LOGGING_QUERY_STATISTICS",

    /**
     * value: "SIGNAL_TYPE_NOT_LOGGING_TEMPORARY_FILES"
     * @const
     */
    "NOT_LOGGING_TEMPORARY_FILES": "SIGNAL_TYPE_NOT_LOGGING_TEMPORARY_FILES",

    /**
     * value: "SIGNAL_TYPE_CONNECTION_MAX_NOT_CONFIGURED"
     * @const
     */
    "CONNECTION_MAX_NOT_CONFIGURED": "SIGNAL_TYPE_CONNECTION_MAX_NOT_CONFIGURED",

    /**
     * value: "SIGNAL_TYPE_USER_OPTIONS_CONFIGURED"
     * @const
     */
    "USER_OPTIONS_CONFIGURED": "SIGNAL_TYPE_USER_OPTIONS_CONFIGURED",

    /**
     * value: "SIGNAL_TYPE_EXPOSED_TO_PUBLIC_ACCESS"
     * @const
     */
    "EXPOSED_TO_PUBLIC_ACCESS": "SIGNAL_TYPE_EXPOSED_TO_PUBLIC_ACCESS",

    /**
     * value: "SIGNAL_TYPE_UNENCRYPTED_CONNECTIONS"
     * @const
     */
    "UNENCRYPTED_CONNECTIONS": "SIGNAL_TYPE_UNENCRYPTED_CONNECTIONS",

    /**
     * value: "SIGNAL_TYPE_NO_ROOT_PASSWORD"
     * @const
     */
    "NO_ROOT_PASSWORD": "SIGNAL_TYPE_NO_ROOT_PASSWORD",

    /**
     * value: "SIGNAL_TYPE_WEAK_ROOT_PASSWORD"
     * @const
     */
    "WEAK_ROOT_PASSWORD": "SIGNAL_TYPE_WEAK_ROOT_PASSWORD",

    /**
     * value: "SIGNAL_TYPE_ENCRYPTION_KEY_NOT_CUSTOMER_MANAGED"
     * @const
     */
    "ENCRYPTION_KEY_NOT_CUSTOMER_MANAGED": "SIGNAL_TYPE_ENCRYPTION_KEY_NOT_CUSTOMER_MANAGED",

    /**
     * value: "SIGNAL_TYPE_SERVER_AUTHENTICATION_NOT_REQUIRED"
     * @const
     */
    "SERVER_AUTHENTICATION_NOT_REQUIRED": "SIGNAL_TYPE_SERVER_AUTHENTICATION_NOT_REQUIRED",

    /**
     * value: "SIGNAL_TYPE_EXPOSED_BY_OWNERSHIP_CHAINING"
     * @const
     */
    "EXPOSED_BY_OWNERSHIP_CHAINING": "SIGNAL_TYPE_EXPOSED_BY_OWNERSHIP_CHAINING",

    /**
     * value: "SIGNAL_TYPE_EXPOSED_TO_EXTERNAL_SCRIPTS"
     * @const
     */
    "EXPOSED_TO_EXTERNAL_SCRIPTS": "SIGNAL_TYPE_EXPOSED_TO_EXTERNAL_SCRIPTS",

    /**
     * value: "SIGNAL_TYPE_EXPOSED_TO_LOCAL_DATA_LOADS"
     * @const
     */
    "EXPOSED_TO_LOCAL_DATA_LOADS": "SIGNAL_TYPE_EXPOSED_TO_LOCAL_DATA_LOADS",

    /**
     * value: "SIGNAL_TYPE_CONNECTION_ATTEMPTS_NOT_LOGGED"
     * @const
     */
    "CONNECTION_ATTEMPTS_NOT_LOGGED": "SIGNAL_TYPE_CONNECTION_ATTEMPTS_NOT_LOGGED",

    /**
     * value: "SIGNAL_TYPE_DISCONNECTIONS_NOT_LOGGED"
     * @const
     */
    "DISCONNECTIONS_NOT_LOGGED": "SIGNAL_TYPE_DISCONNECTIONS_NOT_LOGGED",

    /**
     * value: "SIGNAL_TYPE_LOGGING_EXCESSIVE_STATEMENT_INFO"
     * @const
     */
    "LOGGING_EXCESSIVE_STATEMENT_INFO": "SIGNAL_TYPE_LOGGING_EXCESSIVE_STATEMENT_INFO",

    /**
     * value: "SIGNAL_TYPE_EXPOSED_TO_REMOTE_ACCESS"
     * @const
     */
    "EXPOSED_TO_REMOTE_ACCESS": "SIGNAL_TYPE_EXPOSED_TO_REMOTE_ACCESS",

    /**
     * value: "SIGNAL_TYPE_DATABASE_NAMES_EXPOSED"
     * @const
     */
    "DATABASE_NAMES_EXPOSED": "SIGNAL_TYPE_DATABASE_NAMES_EXPOSED",

    /**
     * value: "SIGNAL_TYPE_SENSITIVE_TRACE_INFO_NOT_MASKED"
     * @const
     */
    "SENSITIVE_TRACE_INFO_NOT_MASKED": "SIGNAL_TYPE_SENSITIVE_TRACE_INFO_NOT_MASKED",

    /**
     * value: "SIGNAL_TYPE_PUBLIC_IP_ENABLED"
     * @const
     */
    "PUBLIC_IP_ENABLED": "SIGNAL_TYPE_PUBLIC_IP_ENABLED",

    /**
     * value: "SIGNAL_TYPE_IDLE"
     * @const
     */
    "IDLE": "SIGNAL_TYPE_IDLE",

    /**
     * value: "SIGNAL_TYPE_OVERPROVISIONED"
     * @const
     */
    "OVERPROVISIONED": "SIGNAL_TYPE_OVERPROVISIONED",

    /**
     * value: "SIGNAL_TYPE_HIGH_NUMBER_OF_OPEN_TABLES"
     * @const
     */
    "HIGH_NUMBER_OF_OPEN_TABLES": "SIGNAL_TYPE_HIGH_NUMBER_OF_OPEN_TABLES",

    /**
     * value: "SIGNAL_TYPE_HIGH_NUMBER_OF_TABLES"
     * @const
     */
    "HIGH_NUMBER_OF_TABLES": "SIGNAL_TYPE_HIGH_NUMBER_OF_TABLES",

    /**
     * value: "SIGNAL_TYPE_HIGH_TRANSACTION_ID_UTILIZATION"
     * @const
     */
    "HIGH_TRANSACTION_ID_UTILIZATION": "SIGNAL_TYPE_HIGH_TRANSACTION_ID_UTILIZATION",

    /**
     * value: "SIGNAL_TYPE_UNDERPROVISIONED"
     * @const
     */
    "UNDERPROVISIONED": "SIGNAL_TYPE_UNDERPROVISIONED",

    /**
     * value: "SIGNAL_TYPE_OUT_OF_DISK"
     * @const
     */
    "OUT_OF_DISK": "SIGNAL_TYPE_OUT_OF_DISK",

    /**
     * value: "SIGNAL_TYPE_SERVER_CERTIFICATE_NEAR_EXPIRY"
     * @const
     */
    "SERVER_CERTIFICATE_NEAR_EXPIRY": "SIGNAL_TYPE_SERVER_CERTIFICATE_NEAR_EXPIRY",

    /**
     * value: "SIGNAL_TYPE_DATABASE_AUDITING_DISABLED"
     * @const
     */
    "DATABASE_AUDITING_DISABLED": "SIGNAL_TYPE_DATABASE_AUDITING_DISABLED",

    /**
     * value: "SIGNAL_TYPE_RESTRICT_AUTHORIZED_NETWORKS"
     * @const
     */
    "RESTRICT_AUTHORIZED_NETWORKS": "SIGNAL_TYPE_RESTRICT_AUTHORIZED_NETWORKS",

    /**
     * value: "SIGNAL_TYPE_VIOLATE_POLICY_RESTRICT_PUBLIC_IP"
     * @const
     */
    "VIOLATE_POLICY_RESTRICT_PUBLIC_IP": "SIGNAL_TYPE_VIOLATE_POLICY_RESTRICT_PUBLIC_IP"
};


/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
DatabaseResourceHealthSignalData['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "RESOLVED"
     * @const
     */
    "RESOLVED": "RESOLVED",

    /**
     * value: "MUTED"
     * @const
     */
    "MUTED": "MUTED"
};



export default DatabaseResourceHealthSignalData;

