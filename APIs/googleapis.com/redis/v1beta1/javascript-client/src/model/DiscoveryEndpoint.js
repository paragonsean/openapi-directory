/**
 * Google Cloud Memorystore for Redis API
 * Creates and manages Redis instances on the Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PscConfig from './PscConfig';

/**
 * The DiscoveryEndpoint model module.
 * @module model/DiscoveryEndpoint
 * @version v1beta1
 */
class DiscoveryEndpoint {
    /**
     * Constructs a new <code>DiscoveryEndpoint</code>.
     * Endpoints on each network, for Redis clients to connect to the cluster.
     * @alias module:model/DiscoveryEndpoint
     */
    constructor() { 
        
        DiscoveryEndpoint.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DiscoveryEndpoint</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DiscoveryEndpoint} obj Optional instance to populate.
     * @return {module:model/DiscoveryEndpoint} The populated <code>DiscoveryEndpoint</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DiscoveryEndpoint();

            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('port')) {
                obj['port'] = ApiClient.convertToType(data['port'], 'Number');
            }
            if (data.hasOwnProperty('pscConfig')) {
                obj['pscConfig'] = PscConfig.constructFromObject(data['pscConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DiscoveryEndpoint</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DiscoveryEndpoint</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['address'] && !(typeof data['address'] === 'string' || data['address'] instanceof String)) {
            throw new Error("Expected the field `address` to be a primitive type in the JSON string but got " + data['address']);
        }
        // validate the optional field `pscConfig`
        if (data['pscConfig']) { // data not null
          PscConfig.validateJSON(data['pscConfig']);
        }

        return true;
    }


}



/**
 * Output only. Address of the exposed Redis endpoint used by clients to connect to the service. The address could be either IP or hostname.
 * @member {String} address
 */
DiscoveryEndpoint.prototype['address'] = undefined;

/**
 * Output only. The port number of the exposed Redis endpoint.
 * @member {Number} port
 */
DiscoveryEndpoint.prototype['port'] = undefined;

/**
 * @member {module:model/PscConfig} pscConfig
 */
DiscoveryEndpoint.prototype['pscConfig'] = undefined;






export default DiscoveryEndpoint;

