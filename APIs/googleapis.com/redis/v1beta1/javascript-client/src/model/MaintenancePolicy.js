/**
 * Google Cloud Memorystore for Redis API
 * Creates and manages Redis instances on the Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WeeklyMaintenanceWindow from './WeeklyMaintenanceWindow';

/**
 * The MaintenancePolicy model module.
 * @module model/MaintenancePolicy
 * @version v1beta1
 */
class MaintenancePolicy {
    /**
     * Constructs a new <code>MaintenancePolicy</code>.
     * Maintenance policy for an instance.
     * @alias module:model/MaintenancePolicy
     */
    constructor() { 
        
        MaintenancePolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MaintenancePolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MaintenancePolicy} obj Optional instance to populate.
     * @return {module:model/MaintenancePolicy} The populated <code>MaintenancePolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MaintenancePolicy();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
            if (data.hasOwnProperty('weeklyMaintenanceWindow')) {
                obj['weeklyMaintenanceWindow'] = ApiClient.convertToType(data['weeklyMaintenanceWindow'], [WeeklyMaintenanceWindow]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MaintenancePolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MaintenancePolicy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }
        if (data['weeklyMaintenanceWindow']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['weeklyMaintenanceWindow'])) {
                throw new Error("Expected the field `weeklyMaintenanceWindow` to be an array in the JSON data but got " + data['weeklyMaintenanceWindow']);
            }
            // validate the optional field `weeklyMaintenanceWindow` (array)
            for (const item of data['weeklyMaintenanceWindow']) {
                WeeklyMaintenanceWindow.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Output only. The time when the policy was created.
 * @member {String} createTime
 */
MaintenancePolicy.prototype['createTime'] = undefined;

/**
 * Optional. Description of what this policy is for. Create/Update methods return INVALID_ARGUMENT if the length is greater than 512.
 * @member {String} description
 */
MaintenancePolicy.prototype['description'] = undefined;

/**
 * Output only. The time when the policy was last updated.
 * @member {String} updateTime
 */
MaintenancePolicy.prototype['updateTime'] = undefined;

/**
 * Optional. Maintenance window that is applied to resources covered by this policy. Minimum 1. For the current version, the maximum number of weekly_window is expected to be one.
 * @member {Array.<module:model/WeeklyMaintenanceWindow>} weeklyMaintenanceWindow
 */
MaintenancePolicy.prototype['weeklyMaintenanceWindow'] = undefined;






export default MaintenancePolicy;

