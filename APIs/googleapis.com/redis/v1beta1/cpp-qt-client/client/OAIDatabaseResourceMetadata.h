/**
 * Google Cloud Memorystore for Redis API
 * Creates and manages Redis instances on the Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDatabaseResourceMetadata.h
 *
 * Common model for database resource instance metadata.
 */

#ifndef OAIDatabaseResourceMetadata_H
#define OAIDatabaseResourceMetadata_H

#include <QJsonObject>

#include "OAIAvailabilityConfiguration.h"
#include "OAIBackupConfiguration.h"
#include "OAIBackupRun.h"
#include "OAICustomMetadataData.h"
#include "OAIDatabaseResourceId.h"
#include "OAIEntitlement.h"
#include "OAIProduct.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAvailabilityConfiguration;
class OAIBackupConfiguration;
class OAIBackupRun;
class OAICustomMetadataData;
class OAIEntitlement;
class OAIDatabaseResourceId;
class OAIProduct;

class OAIDatabaseResourceMetadata : public OAIObject {
public:
    OAIDatabaseResourceMetadata();
    OAIDatabaseResourceMetadata(QString json);
    ~OAIDatabaseResourceMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAvailabilityConfiguration getAvailabilityConfiguration() const;
    void setAvailabilityConfiguration(const OAIAvailabilityConfiguration &availability_configuration);
    bool is_availability_configuration_Set() const;
    bool is_availability_configuration_Valid() const;

    OAIBackupConfiguration getBackupConfiguration() const;
    void setBackupConfiguration(const OAIBackupConfiguration &backup_configuration);
    bool is_backup_configuration_Set() const;
    bool is_backup_configuration_Valid() const;

    OAIBackupRun getBackupRun() const;
    void setBackupRun(const OAIBackupRun &backup_run);
    bool is_backup_run_Set() const;
    bool is_backup_run_Valid() const;

    QString getCreationTime() const;
    void setCreationTime(const QString &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getCurrentState() const;
    void setCurrentState(const QString &current_state);
    bool is_current_state_Set() const;
    bool is_current_state_Valid() const;

    OAICustomMetadataData getCustomMetadata() const;
    void setCustomMetadata(const OAICustomMetadataData &custom_metadata);
    bool is_custom_metadata_Set() const;
    bool is_custom_metadata_Valid() const;

    QList<OAIEntitlement> getEntitlements() const;
    void setEntitlements(const QList<OAIEntitlement> &entitlements);
    bool is_entitlements_Set() const;
    bool is_entitlements_Valid() const;

    QString getExpectedState() const;
    void setExpectedState(const QString &expected_state);
    bool is_expected_state_Set() const;
    bool is_expected_state_Valid() const;

    OAIDatabaseResourceId getId() const;
    void setId(const OAIDatabaseResourceId &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInstanceType() const;
    void setInstanceType(const QString &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    OAIDatabaseResourceId getPrimaryResourceId() const;
    void setPrimaryResourceId(const OAIDatabaseResourceId &primary_resource_id);
    bool is_primary_resource_id_Set() const;
    bool is_primary_resource_id_Valid() const;

    OAIProduct getProduct() const;
    void setProduct(const OAIProduct &product);
    bool is_product_Set() const;
    bool is_product_Valid() const;

    QString getResourceContainer() const;
    void setResourceContainer(const QString &resource_container);
    bool is_resource_container_Set() const;
    bool is_resource_container_Valid() const;

    QString getResourceName() const;
    void setResourceName(const QString &resource_name);
    bool is_resource_name_Set() const;
    bool is_resource_name_Valid() const;

    QString getUpdationTime() const;
    void setUpdationTime(const QString &updation_time);
    bool is_updation_time_Set() const;
    bool is_updation_time_Valid() const;

    QMap<QString, QString> getUserLabels() const;
    void setUserLabels(const QMap<QString, QString> &user_labels);
    bool is_user_labels_Set() const;
    bool is_user_labels_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAvailabilityConfiguration m_availability_configuration;
    bool m_availability_configuration_isSet;
    bool m_availability_configuration_isValid;

    OAIBackupConfiguration m_backup_configuration;
    bool m_backup_configuration_isSet;
    bool m_backup_configuration_isValid;

    OAIBackupRun m_backup_run;
    bool m_backup_run_isSet;
    bool m_backup_run_isValid;

    QString m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_current_state;
    bool m_current_state_isSet;
    bool m_current_state_isValid;

    OAICustomMetadataData m_custom_metadata;
    bool m_custom_metadata_isSet;
    bool m_custom_metadata_isValid;

    QList<OAIEntitlement> m_entitlements;
    bool m_entitlements_isSet;
    bool m_entitlements_isValid;

    QString m_expected_state;
    bool m_expected_state_isSet;
    bool m_expected_state_isValid;

    OAIDatabaseResourceId m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    OAIDatabaseResourceId m_primary_resource_id;
    bool m_primary_resource_id_isSet;
    bool m_primary_resource_id_isValid;

    OAIProduct m_product;
    bool m_product_isSet;
    bool m_product_isValid;

    QString m_resource_container;
    bool m_resource_container_isSet;
    bool m_resource_container_isValid;

    QString m_resource_name;
    bool m_resource_name_isSet;
    bool m_resource_name_isValid;

    QString m_updation_time;
    bool m_updation_time_isSet;
    bool m_updation_time_isValid;

    QMap<QString, QString> m_user_labels;
    bool m_user_labels_isSet;
    bool m_user_labels_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDatabaseResourceMetadata)

#endif // OAIDatabaseResourceMetadata_H
