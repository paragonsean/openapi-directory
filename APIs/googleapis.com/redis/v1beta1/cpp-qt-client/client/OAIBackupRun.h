/**
 * Google Cloud Memorystore for Redis API
 * Creates and manages Redis instances on the Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBackupRun.h
 *
 * A backup run.
 */

#ifndef OAIBackupRun_H
#define OAIBackupRun_H

#include <QJsonObject>

#include "OAIOperationError.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOperationError;

class OAIBackupRun : public OAIObject {
public:
    OAIBackupRun();
    OAIBackupRun(QString json);
    ~OAIBackupRun() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEndTime() const;
    void setEndTime(const QString &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    OAIOperationError getError() const;
    void setError(const OAIOperationError &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    OAIOperationError m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBackupRun)

#endif // OAIBackupRun_H
