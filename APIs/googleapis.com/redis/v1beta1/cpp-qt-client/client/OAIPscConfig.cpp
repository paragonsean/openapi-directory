/**
 * Google Cloud Memorystore for Redis API
 * Creates and manages Redis instances on the Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPscConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPscConfig::OAIPscConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPscConfig::OAIPscConfig() {
    this->initializeModel();
}

OAIPscConfig::~OAIPscConfig() {}

void OAIPscConfig::initializeModel() {

    m_network_isSet = false;
    m_network_isValid = false;
}

void OAIPscConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPscConfig::fromJsonObject(QJsonObject json) {

    m_network_isValid = ::OpenAPI::fromJsonValue(m_network, json[QString("network")]);
    m_network_isSet = !json[QString("network")].isNull() && m_network_isValid;
}

QString OAIPscConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPscConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_network_isSet) {
        obj.insert(QString("network"), ::OpenAPI::toJsonValue(m_network));
    }
    return obj;
}

QString OAIPscConfig::getNetwork() const {
    return m_network;
}
void OAIPscConfig::setNetwork(const QString &network) {
    m_network = network;
    m_network_isSet = true;
}

bool OAIPscConfig::is_network_Set() const{
    return m_network_isSet;
}

bool OAIPscConfig::is_network_Valid() const{
    return m_network_isValid;
}

bool OAIPscConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_network_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPscConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
