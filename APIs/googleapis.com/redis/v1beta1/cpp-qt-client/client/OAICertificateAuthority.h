/**
 * Google Cloud Memorystore for Redis API
 * Creates and manages Redis instances on the Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICertificateAuthority.h
 *
 * Redis cluster certificate authority
 */

#ifndef OAICertificateAuthority_H
#define OAICertificateAuthority_H

#include <QJsonObject>

#include "OAIManagedCertificateAuthority.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIManagedCertificateAuthority;

class OAICertificateAuthority : public OAIObject {
public:
    OAICertificateAuthority();
    OAICertificateAuthority(QString json);
    ~OAICertificateAuthority() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIManagedCertificateAuthority getManagedServerCa() const;
    void setManagedServerCa(const OAIManagedCertificateAuthority &managed_server_ca);
    bool is_managed_server_ca_Set() const;
    bool is_managed_server_ca_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIManagedCertificateAuthority m_managed_server_ca;
    bool m_managed_server_ca_isSet;
    bool m_managed_server_ca_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICertificateAuthority)

#endif // OAICertificateAuthority_H
