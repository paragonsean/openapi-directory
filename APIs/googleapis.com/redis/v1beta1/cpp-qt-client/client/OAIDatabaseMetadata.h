/**
 * Google Cloud Memorystore for Redis API
 * Creates and manages Redis instances on the Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDatabaseMetadata.h
 *
 * Metadata for individual databases created in an instance. i.e. spanner instance can have multiple databases with unique configuration settings.
 */

#ifndef OAIDatabaseMetadata_H
#define OAIDatabaseMetadata_H

#include <QJsonObject>

#include "OAIBackupConfiguration.h"
#include "OAIBackupRun.h"
#include "OAIDatabaseResourceId.h"
#include "OAIProduct.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBackupConfiguration;
class OAIBackupRun;
class OAIProduct;
class OAIDatabaseResourceId;

class OAIDatabaseMetadata : public OAIObject {
public:
    OAIDatabaseMetadata();
    OAIDatabaseMetadata(QString json);
    ~OAIDatabaseMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBackupConfiguration getBackupConfiguration() const;
    void setBackupConfiguration(const OAIBackupConfiguration &backup_configuration);
    bool is_backup_configuration_Set() const;
    bool is_backup_configuration_Valid() const;

    OAIBackupRun getBackupRun() const;
    void setBackupRun(const OAIBackupRun &backup_run);
    bool is_backup_run_Set() const;
    bool is_backup_run_Valid() const;

    OAIProduct getProduct() const;
    void setProduct(const OAIProduct &product);
    bool is_product_Set() const;
    bool is_product_Valid() const;

    OAIDatabaseResourceId getResourceId() const;
    void setResourceId(const OAIDatabaseResourceId &resource_id);
    bool is_resource_id_Set() const;
    bool is_resource_id_Valid() const;

    QString getResourceName() const;
    void setResourceName(const QString &resource_name);
    bool is_resource_name_Set() const;
    bool is_resource_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBackupConfiguration m_backup_configuration;
    bool m_backup_configuration_isSet;
    bool m_backup_configuration_isValid;

    OAIBackupRun m_backup_run;
    bool m_backup_run_isSet;
    bool m_backup_run_isValid;

    OAIProduct m_product;
    bool m_product_isSet;
    bool m_product_isValid;

    OAIDatabaseResourceId m_resource_id;
    bool m_resource_id_isSet;
    bool m_resource_id_isValid;

    QString m_resource_name;
    bool m_resource_name_isSet;
    bool m_resource_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDatabaseMetadata)

#endif // OAIDatabaseMetadata_H
