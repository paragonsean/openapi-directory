/*
 * Google Cloud Memorystore for Redis API
 * Creates and manages Redis instances on the Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * This location metadata represents additional configuration options for a given location where a Redis instance may be created. All fields are output only. It is returned as content of the &#x60;google.cloud.location.Location.metadata&#x60; field.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:22.996581-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudRedisV1beta1LocationMetadata {
  public static final String SERIALIZED_NAME_AVAILABLE_ZONES = "availableZones";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_ZONES)
  private Map<String, Object> availableZones = new HashMap<>();

  public GoogleCloudRedisV1beta1LocationMetadata() {
  }

  public GoogleCloudRedisV1beta1LocationMetadata(
     Map<String, Object> availableZones
  ) {
    this();
    this.availableZones = availableZones;
  }

  /**
   * Output only. The set of available zones in the location. The map is keyed by the lowercase ID of each zone, as defined by GCE. These keys can be specified in &#x60;location_id&#x60; or &#x60;alternative_location_id&#x60; fields when creating a Redis instance.
   * @return availableZones
   */
  @javax.annotation.Nullable
  public Map<String, Object> getAvailableZones() {
    return availableZones;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudRedisV1beta1LocationMetadata googleCloudRedisV1beta1LocationMetadata = (GoogleCloudRedisV1beta1LocationMetadata) o;
    return Objects.equals(this.availableZones, googleCloudRedisV1beta1LocationMetadata.availableZones);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availableZones);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudRedisV1beta1LocationMetadata {\n");
    sb.append("    availableZones: ").append(toIndentedString(availableZones)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("availableZones");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudRedisV1beta1LocationMetadata
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudRedisV1beta1LocationMetadata.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudRedisV1beta1LocationMetadata is not found in the empty JSON string", GoogleCloudRedisV1beta1LocationMetadata.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudRedisV1beta1LocationMetadata.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudRedisV1beta1LocationMetadata` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudRedisV1beta1LocationMetadata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudRedisV1beta1LocationMetadata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudRedisV1beta1LocationMetadata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudRedisV1beta1LocationMetadata.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudRedisV1beta1LocationMetadata>() {
           @Override
           public void write(JsonWriter out, GoogleCloudRedisV1beta1LocationMetadata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudRedisV1beta1LocationMetadata read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudRedisV1beta1LocationMetadata given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudRedisV1beta1LocationMetadata
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudRedisV1beta1LocationMetadata
   */
  public static GoogleCloudRedisV1beta1LocationMetadata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudRedisV1beta1LocationMetadata.class);
  }

  /**
   * Convert an instance of GoogleCloudRedisV1beta1LocationMetadata to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

