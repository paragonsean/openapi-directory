/**
 * Firebase Rules API
 * Creates and manages rules that determine when a Firebase Rules-enabled service should permit a request. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Arg model module.
 * @module model/Arg
 * @version v1
 */
class Arg {
    /**
     * Constructs a new <code>Arg</code>.
     * Arg matchers for the mock function.
     * @alias module:model/Arg
     */
    constructor() { 
        
        Arg.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Arg</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Arg} obj Optional instance to populate.
     * @return {module:model/Arg} The populated <code>Arg</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Arg();

            if (data.hasOwnProperty('anyValue')) {
                obj['anyValue'] = ApiClient.convertToType(data['anyValue'], Object);
            }
            if (data.hasOwnProperty('exactValue')) {
                obj['exactValue'] = ApiClient.convertToType(data['exactValue'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Arg</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Arg</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 * @member {Object} anyValue
 */
Arg.prototype['anyValue'] = undefined;

/**
 * Argument exactly matches value provided.
 * @member {Object} exactValue
 */
Arg.prototype['exactValue'] = undefined;






export default Arg;

