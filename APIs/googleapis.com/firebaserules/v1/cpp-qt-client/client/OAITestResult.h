/**
 * Firebase Rules API
 * Creates and manages rules that determine when a Firebase Rules-enabled service should permit a request. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITestResult.h
 *
 * Test result message containing the state of the test as well as a description and source position for test failures.
 */

#ifndef OAITestResult_H
#define OAITestResult_H

#include <QJsonObject>

#include "OAIExpressionReport.h"
#include "OAIFunctionCall.h"
#include "OAISourcePosition.h"
#include "OAIVisitedExpression.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISourcePosition;
class OAIExpressionReport;
class OAIFunctionCall;
class OAIVisitedExpression;

class OAITestResult : public OAIObject {
public:
    OAITestResult();
    OAITestResult(QString json);
    ~OAITestResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getDebugMessages() const;
    void setDebugMessages(const QList<QString> &debug_messages);
    bool is_debug_messages_Set() const;
    bool is_debug_messages_Valid() const;

    OAISourcePosition getErrorPosition() const;
    void setErrorPosition(const OAISourcePosition &error_position);
    bool is_error_position_Set() const;
    bool is_error_position_Valid() const;

    QList<OAIExpressionReport> getExpressionReports() const;
    void setExpressionReports(const QList<OAIExpressionReport> &expression_reports);
    bool is_expression_reports_Set() const;
    bool is_expression_reports_Valid() const;

    QList<OAIFunctionCall> getFunctionCalls() const;
    void setFunctionCalls(const QList<OAIFunctionCall> &function_calls);
    bool is_function_calls_Set() const;
    bool is_function_calls_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QList<OAIVisitedExpression> getVisitedExpressions() const;
    void setVisitedExpressions(const QList<OAIVisitedExpression> &visited_expressions);
    bool is_visited_expressions_Set() const;
    bool is_visited_expressions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_debug_messages;
    bool m_debug_messages_isSet;
    bool m_debug_messages_isValid;

    OAISourcePosition m_error_position;
    bool m_error_position_isSet;
    bool m_error_position_isValid;

    QList<OAIExpressionReport> m_expression_reports;
    bool m_expression_reports_isSet;
    bool m_expression_reports_isValid;

    QList<OAIFunctionCall> m_function_calls;
    bool m_function_calls_isSet;
    bool m_function_calls_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QList<OAIVisitedExpression> m_visited_expressions;
    bool m_visited_expressions_isSet;
    bool m_visited_expressions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITestResult)

#endif // OAITestResult_H
