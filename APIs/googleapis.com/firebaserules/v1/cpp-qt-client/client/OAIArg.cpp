/**
 * Firebase Rules API
 * Creates and manages rules that determine when a Firebase Rules-enabled service should permit a request. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIArg.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIArg::OAIArg(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIArg::OAIArg() {
    this->initializeModel();
}

OAIArg::~OAIArg() {}

void OAIArg::initializeModel() {

    m_any_value_isSet = false;
    m_any_value_isValid = false;

    m_exact_value_isSet = false;
    m_exact_value_isValid = false;
}

void OAIArg::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIArg::fromJsonObject(QJsonObject json) {

    m_any_value_isValid = ::OpenAPI::fromJsonValue(m_any_value, json[QString("anyValue")]);
    m_any_value_isSet = !json[QString("anyValue")].isNull() && m_any_value_isValid;

    m_exact_value_isValid = ::OpenAPI::fromJsonValue(m_exact_value, json[QString("exactValue")]);
    m_exact_value_isSet = !json[QString("exactValue")].isNull() && m_exact_value_isValid;
}

QString OAIArg::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIArg::asJsonObject() const {
    QJsonObject obj;
    if (m_any_value_isSet) {
        obj.insert(QString("anyValue"), ::OpenAPI::toJsonValue(m_any_value));
    }
    if (m_exact_value_isSet) {
        obj.insert(QString("exactValue"), ::OpenAPI::toJsonValue(m_exact_value));
    }
    return obj;
}

OAIObject OAIArg::getAnyValue() const {
    return m_any_value;
}
void OAIArg::setAnyValue(const OAIObject &any_value) {
    m_any_value = any_value;
    m_any_value_isSet = true;
}

bool OAIArg::is_any_value_Set() const{
    return m_any_value_isSet;
}

bool OAIArg::is_any_value_Valid() const{
    return m_any_value_isValid;
}

QJsonValue OAIArg::getExactValue() const {
    return m_exact_value;
}
void OAIArg::setExactValue(const QJsonValue &exact_value) {
    m_exact_value = exact_value;
    m_exact_value_isSet = true;
}

bool OAIArg::is_exact_value_Set() const{
    return m_exact_value_isSet;
}

bool OAIArg::is_exact_value_Valid() const{
    return m_exact_value_isValid;
}

bool OAIArg::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_any_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exact_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIArg::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
