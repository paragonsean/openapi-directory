/**
 * Firebase Rules API
 * Creates and manages rules that determine when a Firebase Rules-enabled service should permit a request. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFunctionMock.h
 *
 * Mock function definition. Mocks must refer to a function declared by the target service. The type of the function args and result will be inferred at test time. If either the arg or result values are not compatible with function type declaration, the request will be considered invalid. More than one &#x60;FunctionMock&#x60; may be provided for a given function name so long as the &#x60;Arg&#x60; matchers are distinct. There may be only one function for a given overload where all &#x60;Arg&#x60; values are &#x60;Arg.any_value&#x60;.
 */

#ifndef OAIFunctionMock_H
#define OAIFunctionMock_H

#include <QJsonObject>

#include "OAIArg.h"
#include "OAIResult.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIArg;
class OAIResult;

class OAIFunctionMock : public OAIObject {
public:
    OAIFunctionMock();
    OAIFunctionMock(QString json);
    ~OAIFunctionMock() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIArg> getArgs() const;
    void setArgs(const QList<OAIArg> &args);
    bool is_args_Set() const;
    bool is_args_Valid() const;

    QString getFunction() const;
    void setFunction(const QString &function);
    bool is_function_Set() const;
    bool is_function_Valid() const;

    OAIResult getResult() const;
    void setResult(const OAIResult &result);
    bool is_result_Set() const;
    bool is_result_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIArg> m_args;
    bool m_args_isSet;
    bool m_args_isValid;

    QString m_function;
    bool m_function_isSet;
    bool m_function_isValid;

    OAIResult m_result;
    bool m_result_isSet;
    bool m_result_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFunctionMock)

#endif // OAIFunctionMock_H
