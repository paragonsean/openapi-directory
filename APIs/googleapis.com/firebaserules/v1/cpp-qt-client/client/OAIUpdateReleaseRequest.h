/**
 * Firebase Rules API
 * Creates and manages rules that determine when a Firebase Rules-enabled service should permit a request. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateReleaseRequest.h
 *
 * The request for FirebaseRulesService.UpdateRelease.
 */

#ifndef OAIUpdateReleaseRequest_H
#define OAIUpdateReleaseRequest_H

#include <QJsonObject>

#include "OAIRelease.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRelease;

class OAIUpdateReleaseRequest : public OAIObject {
public:
    OAIUpdateReleaseRequest();
    OAIUpdateReleaseRequest(QString json);
    ~OAIUpdateReleaseRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRelease getRelease() const;
    void setRelease(const OAIRelease &release);
    bool is_release_Set() const;
    bool is_release_Valid() const;

    QString getUpdateMask() const;
    void setUpdateMask(const QString &update_mask);
    bool is_update_mask_Set() const;
    bool is_update_mask_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRelease m_release;
    bool m_release_isSet;
    bool m_release_isValid;

    QString m_update_mask;
    bool m_update_mask_isSet;
    bool m_update_mask_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateReleaseRequest)

#endif // OAIUpdateReleaseRequest_H
