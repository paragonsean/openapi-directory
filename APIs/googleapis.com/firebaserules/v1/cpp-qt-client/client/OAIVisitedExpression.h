/**
 * Firebase Rules API
 * Creates and manages rules that determine when a Firebase Rules-enabled service should permit a request. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVisitedExpression.h
 *
 * Store the position and access outcome for an expression visited in rules.
 */

#ifndef OAIVisitedExpression_H
#define OAIVisitedExpression_H

#include <QJsonObject>

#include "OAISourcePosition.h"
#include <QJsonValue>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISourcePosition;

class OAIVisitedExpression : public OAIObject {
public:
    OAIVisitedExpression();
    OAIVisitedExpression(QString json);
    ~OAIVisitedExpression() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISourcePosition getSourcePosition() const;
    void setSourcePosition(const OAISourcePosition &source_position);
    bool is_source_position_Set() const;
    bool is_source_position_Valid() const;

    QJsonValue getValue() const;
    void setValue(const QJsonValue &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISourcePosition m_source_position;
    bool m_source_position_isSet;
    bool m_source_position_isValid;

    QJsonValue m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVisitedExpression)

#endif // OAIVisitedExpression_H
