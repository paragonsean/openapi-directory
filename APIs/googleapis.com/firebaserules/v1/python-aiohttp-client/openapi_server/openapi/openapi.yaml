openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: 'Creates and manages rules that determine when a Firebase Rules-enabled
    service should permit a request. '
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Firebase Rules API
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - converter:
      url: https://github.com/mermade/oas-kit
      version: 7.0.4
    format: google
    url: https://firebaserules.googleapis.com/$discovery/rest?version=v1
    version: v1
  x-providerName: googleapis.com
  x-serviceName: firebaserules
externalDocs:
  url: https://firebase.google.com/docs/storage/security
servers:
- url: https://firebaserules.googleapis.com/
tags:
- name: projects
paths:
  /v1/{name}:
    delete:
      description: Delete a `Ruleset` by resource name. If the `Ruleset` is referenced
        by a `Release` the operation will fail.
      operationId: firebaserules_projects_rulesets_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. Resource name for the ruleset to delete. Format: `projects/{project_id}/rulesets/{ruleset_id}`"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: Get a `Ruleset` by name including the full `Source` contents.
      operationId: firebaserules_projects_rulesets_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. Resource name for the ruleset to get. Format: `projects/{project_id}/rulesets/{ruleset_id}`"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ruleset'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      - Oauth2:
        - https://www.googleapis.com/auth/firebase.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/firebase.readonly
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    patch:
      description: Update a `Release` via PATCH. Only updates to `ruleset_name` will
        be honored. `Release` rename is not supported. To create a `Release` use the
        CreateRelease method.
      operationId: firebaserules_projects_releases_patch
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. Resource name for the project which owns this `Release`.\
          \ Format: `projects/{project_id}`"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReleaseRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1/{name}/releases:
    get:
      description: "List the `Release` values for a project. This list may optionally\
        \ be filtered by `Release` name, `Ruleset` name, `TestSuite` name, or any\
        \ combination thereof."
      operationId: firebaserules_projects_releases_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. Resource name for the project. Format: `projects/{project_id}`"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "`Release` filter. The list method supports filters with restrictions\
          \ on the `Release.name`, and `Release.ruleset_name`. Example 1: A filter\
          \ of 'name=prod*' might return `Release`s with names within 'projects/foo'\
          \ prefixed with 'prod': Name -> Ruleset Name: * projects/foo/releases/prod\
          \ -> projects/foo/rulesets/uuid1234 * projects/foo/releases/prod/v1 -> projects/foo/rulesets/uuid1234\
          \ * projects/foo/releases/prod/v2 -> projects/foo/rulesets/uuid8888 Example\
          \ 2: A filter of `name=prod* ruleset_name=uuid1234` would return only `Release`\
          \ instances for 'projects/foo' with names prefixed with 'prod' referring\
          \ to the same `Ruleset` name of 'uuid1234': Name -> Ruleset Name: * projects/foo/releases/prod\
          \ -> projects/foo/rulesets/1234 * projects/foo/releases/prod/v1 -> projects/foo/rulesets/1234\
          \ In the examples, the filter parameters refer to the search filters are\
          \ relative to the project. Fully qualified prefixed may also be used."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: "Page size to load. Maximum of 100. Defaults to 10. Note: `page_size`\
          \ is just a hint and the service may choose to load fewer than `page_size`\
          \ results due to the size of the output. To traverse all of the releases,\
          \ the caller should iterate until the `page_token` on the response is empty."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: Next page token for the next batch of `Release` instances.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReleasesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      - Oauth2:
        - https://www.googleapis.com/auth/firebase.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/firebase.readonly
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: "Create a `Release`. Release names should reflect the developer's\
        \ deployment practices. For example, the release name may include the environment\
        \ name, application name, application version, or any other name meaningful\
        \ to the developer. Once a `Release` refers to a `Ruleset`, the rules can\
        \ be enforced by Firebase Rules-enabled services. More than one `Release`\
        \ may be 'live' concurrently. Consider the following three `Release` names\
        \ for `projects/foo` and the `Ruleset` to which they refer. Release Name ->\
        \ Ruleset Name * projects/foo/releases/prod -> projects/foo/rulesets/uuid123\
        \ * projects/foo/releases/prod/beta -> projects/foo/rulesets/uuid123 * projects/foo/releases/prod/v23\
        \ -> projects/foo/rulesets/uuid456 The relationships reflect a `Ruleset` rollout\
        \ in progress. The `prod` and `prod/beta` releases refer to the same `Ruleset`.\
        \ However, `prod/v23` refers to a new `Ruleset`. The `Ruleset` reference for\
        \ a `Release` may be updated using the UpdateRelease method."
      operationId: firebaserules_projects_releases_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. Resource name for the project which owns this `Release`.\
          \ Format: `projects/{project_id}`"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Release'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1/{name}/rulesets:
    get:
      description: List `Ruleset` metadata only and optionally filter the results
        by `Ruleset` name. The full `Source` contents of a `Ruleset` may be retrieved
        with GetRuleset.
      operationId: firebaserules_projects_rulesets_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. Resource name for the project. Format: `projects/{project_id}`"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "`Ruleset` filter. The list method supports filters with restrictions\
          \ on `Ruleset.name`. Filters on `Ruleset.create_time` should use the `date`\
          \ function which parses strings that conform to the RFC 3339 date/time specifications.\
          \ Example: `create_time > date(\"2017-01-01T00:00:00Z\") AND name=UUID-*`"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: "Page size to load. Maximum of 100. Defaults to 10. Note: `page_size`\
          \ is just a hint and the service may choose to load less than `page_size`\
          \ due to the size of the output. To traverse all of the releases, caller\
          \ should iterate until the `page_token` is empty."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: Next page token for loading the next batch of `Ruleset` instances.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRulesetsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      - Oauth2:
        - https://www.googleapis.com/auth/firebase.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/firebase.readonly
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: "Create a `Ruleset` from `Source`. The `Ruleset` is given a unique\
        \ generated name which is returned to the caller. `Source` containing syntactic\
        \ or semantics errors will result in an error response indicating the first\
        \ error encountered. For a detailed view of `Source` issues, use TestRuleset."
      operationId: firebaserules_projects_rulesets_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. Resource name for Project which owns this `Ruleset`.\
          \ Format: `projects/{project_id}`"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ruleset'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ruleset'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1/{name}:getExecutable:
    get:
      description: Get the `Release` executable to use when enforcing rules.
      operationId: firebaserules_projects_releases_get_executable
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. Resource name of the `Release`. Format: `projects/{project_id}/releases/{release_id}`"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: The requested runtime executable version. Defaults to FIREBASE_RULES_EXECUTABLE_V1.
        explode: true
        in: query
        name: executableVersion
        required: false
        schema:
          enum:
          - RELEASE_EXECUTABLE_VERSION_UNSPECIFIED
          - FIREBASE_RULES_EXECUTABLE_V1
          - FIREBASE_RULES_EXECUTABLE_V2
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReleaseExecutableResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      - Oauth2:
        - https://www.googleapis.com/auth/firebase.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/firebase.readonly
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v1/{name}:test:
    post:
      description: "Test `Source` for syntactic and semantic correctness. Issues present,\
        \ if any, will be returned to the caller with a description, severity, and\
        \ source location. The test method may be executed with `Source` or a `Ruleset`\
        \ name. Passing `Source` is useful for unit testing new rules. Passing a `Ruleset`\
        \ name is useful for regression testing an existing rule. The following is\
        \ an example of `Source` that permits users to upload images to a bucket bearing\
        \ their user id and matching the correct metadata: _*Example*_ // Users are\
        \ allowed to subscribe and unsubscribe to the blog. service firebase.storage\
        \ { match /users/{userId}/images/{imageName} { allow write: if userId == request.auth.uid\
        \ && (imageName.matches('*.png$') || imageName.matches('*.jpg$')) && resource.mimeType.matches('^image/')\
        \ } }"
      operationId: firebaserules_projects_test
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. Tests may either provide `source` or a `Ruleset` resource\
          \ name. For tests against `source`, the resource name must refer to the\
          \ project: Format: `projects/{project_id}` For tests against a `Ruleset`,\
          \ this must be the `Ruleset` resource name: Format: `projects/{project_id}/rulesets/{ruleset_id}`"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestRulesetRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestRulesetResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      - Oauth2:
        - https://www.googleapis.com/auth/firebase.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/firebase.readonly
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    Arg:
      description: Arg matchers for the mock function.
      example:
        anyValue: "{}"
        exactValue: ""
      properties:
        anyValue:
          description: "A generic empty message that you can re-use to avoid defining\
            \ duplicated empty messages in your APIs. A typical example is to use\
            \ it as the request or the response type of an API method. For instance:\
            \ service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\
            \ }"
          properties: {}
          title: anyValue
          type: object
        exactValue:
          description: Argument exactly matches value provided.
          title: exactValue
      title: Arg
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining\
        \ duplicated empty messages in your APIs. A typical example is to use it as\
        \ the request or the response type of an API method. For instance: service\
        \ Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      title: anyValue
      type: object
    ExpressionReport:
      description: Describes where in a file an expression is found and what it was
        evaluated to over the course of its use.
      example:
        children:
        - null
        - null
        values:
        - count: 5
          value: ""
        - count: 5
          value: ""
        sourcePosition:
          endOffset: 1
          fileName: fileName
          currentOffset: 6
          line: 5
          column: 0
      properties:
        children:
          description: Subexpressions
          items:
            $ref: '#/components/schemas/ExpressionReport'
          title: children
          type: array
        sourcePosition:
          $ref: '#/components/schemas/SourcePosition'
        values:
          description: Values that this expression evaluated to when encountered.
          items:
            $ref: '#/components/schemas/ValueCount'
          title: values
          type: array
      title: ExpressionReport
      type: object
    File:
      description: '`File` containing source content.'
      example:
        fingerprint: fingerprint
        name: name
        content: content
      properties:
        content:
          description: Required. Textual Content.
          title: content
          type: string
        fingerprint:
          description: Fingerprint (e.g. github sha) associated with the `File`.
          format: byte
          title: fingerprint
          type: string
        name:
          description: Required. File name.
          title: name
          type: string
      title: File
      type: object
    FunctionCall:
      description: Represents a service-defined function call that was invoked during
        test execution.
      example:
        args:
        - ""
        - ""
        function: function
      properties:
        args:
          description: The arguments that were provided to the function.
          items: {}
          title: args
          type: array
        function:
          description: Name of the function invoked.
          title: function
          type: string
      title: FunctionCall
      type: object
    FunctionMock:
      description: "Mock function definition. Mocks must refer to a function declared\
        \ by the target service. The type of the function args and result will be\
        \ inferred at test time. If either the arg or result values are not compatible\
        \ with function type declaration, the request will be considered invalid.\
        \ More than one `FunctionMock` may be provided for a given function name so\
        \ long as the `Arg` matchers are distinct. There may be only one function\
        \ for a given overload where all `Arg` values are `Arg.any_value`."
      example:
        args:
        - anyValue: "{}"
          exactValue: ""
        - anyValue: "{}"
          exactValue: ""
        result:
          value: ""
          undefined: "{}"
        function: function
      properties:
        args:
          description: The list of `Arg` values to match. The order in which the arguments
            are provided is the order in which they must appear in the function invocation.
          items:
            $ref: '#/components/schemas/Arg'
          title: args
          type: array
        function:
          description: The name of the function. The function name must match one
            provided by a service declaration.
          title: function
          type: string
        result:
          $ref: '#/components/schemas/Result'
      title: FunctionMock
      type: object
    GetReleaseExecutableResponse:
      description: The response for FirebaseRulesService.GetReleaseExecutable
      example:
        syncTime: syncTime
        language: LANGUAGE_UNSPECIFIED
        rulesetName: rulesetName
        updateTime: updateTime
        executableVersion: RELEASE_EXECUTABLE_VERSION_UNSPECIFIED
        executable: executable
      properties:
        executable:
          description: Executable view of the `Ruleset` referenced by the `Release`.
          format: byte
          title: executable
          type: string
        executableVersion:
          description: The Rules runtime version of the executable.
          enum:
          - RELEASE_EXECUTABLE_VERSION_UNSPECIFIED
          - FIREBASE_RULES_EXECUTABLE_V1
          - FIREBASE_RULES_EXECUTABLE_V2
          title: executableVersion
          type: string
        language:
          description: '`Language` used to generate the executable bytes.'
          enum:
          - LANGUAGE_UNSPECIFIED
          - FIREBASE_RULES
          - EVENT_FLOW_TRIGGERS
          title: language
          type: string
        rulesetName:
          description: '`Ruleset` name associated with the `Release` executable.'
          title: rulesetName
          type: string
        syncTime:
          description: "Optional, indicates the freshness of the result. The response\
            \ is guaranteed to be the latest within an interval up to the sync_time\
            \ (inclusive)."
          format: google-datetime
          title: syncTime
          type: string
        updateTime:
          description: Timestamp for the most recent `Release.update_time`.
          format: google-datetime
          title: updateTime
          type: string
      title: GetReleaseExecutableResponse
      type: object
    Issue:
      description: "Issues include warnings, errors, and deprecation notices."
      example:
        severity: SEVERITY_UNSPECIFIED
        description: description
        sourcePosition:
          endOffset: 1
          fileName: fileName
          currentOffset: 6
          line: 5
          column: 0
      properties:
        description:
          description: Short error description.
          title: description
          type: string
        severity:
          description: The severity of the issue.
          enum:
          - SEVERITY_UNSPECIFIED
          - DEPRECATION
          - WARNING
          - ERROR
          title: severity
          type: string
        sourcePosition:
          $ref: '#/components/schemas/SourcePosition'
      title: Issue
      type: object
    ListReleasesResponse:
      description: The response for FirebaseRulesService.ListReleases.
      example:
        nextPageToken: nextPageToken
        releases:
        - createTime: createTime
          name: name
          rulesetName: rulesetName
          updateTime: updateTime
        - createTime: createTime
          name: name
          rulesetName: rulesetName
          updateTime: updateTime
      properties:
        nextPageToken:
          description: "The pagination token to retrieve the next page of results.\
            \ If the value is empty, no further results remain."
          title: nextPageToken
          type: string
        releases:
          description: List of `Release` instances.
          items:
            $ref: '#/components/schemas/Release'
          title: releases
          type: array
      title: ListReleasesResponse
      type: object
    ListRulesetsResponse:
      description: The response for FirebaseRulesService.ListRulesets.
      example:
        rulesets:
        - attachmentPoint: attachmentPoint
          metadata:
            services:
            - services
            - services
          createTime: createTime
          name: name
          source:
            files:
            - fingerprint: fingerprint
              name: name
              content: content
            - fingerprint: fingerprint
              name: name
              content: content
        - attachmentPoint: attachmentPoint
          metadata:
            services:
            - services
            - services
          createTime: createTime
          name: name
          source:
            files:
            - fingerprint: fingerprint
              name: name
              content: content
            - fingerprint: fingerprint
              name: name
              content: content
        nextPageToken: nextPageToken
      properties:
        nextPageToken:
          description: "The pagination token to retrieve the next page of results.\
            \ If the value is empty, no further results remain."
          title: nextPageToken
          type: string
        rulesets:
          description: List of `Ruleset` instances.
          items:
            $ref: '#/components/schemas/Ruleset'
          title: rulesets
          type: array
      title: ListRulesetsResponse
      type: object
    Metadata:
      description: Metadata for a Ruleset.
      example:
        services:
        - services
        - services
      properties:
        services:
          description: "Services that this ruleset has declarations for (e.g., \"\
            cloud.firestore\"). There may be 0+ of these."
          items:
            type: string
          title: services
          type: array
      title: Metadata
      type: object
    Release:
      description: "`Release` is a named reference to a `Ruleset`. Once a `Release`\
        \ refers to a `Ruleset`, rules-enabled services will be able to enforce the\
        \ `Ruleset`."
      example:
        createTime: createTime
        name: name
        rulesetName: rulesetName
        updateTime: updateTime
      properties:
        createTime:
          description: Output only. Time the release was created.
          format: google-datetime
          readOnly: true
          title: createTime
          type: string
        name:
          description: "Required. Format: `projects/{project_id}/releases/{release_id}`"
          title: name
          type: string
        rulesetName:
          description: Required. Name of the `Ruleset` referred to by this `Release`.
            The `Ruleset` must exist for the `Release` to be created.
          title: rulesetName
          type: string
        updateTime:
          description: Output only. Time the release was updated.
          format: google-datetime
          readOnly: true
          title: updateTime
          type: string
      title: Release
      type: object
    Result:
      description: Possible result values from the function mock invocation.
      example:
        value: ""
        undefined: "{}"
      properties:
        undefined:
          description: "A generic empty message that you can re-use to avoid defining\
            \ duplicated empty messages in your APIs. A typical example is to use\
            \ it as the request or the response type of an API method. For instance:\
            \ service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\
            \ }"
          properties: {}
          title: anyValue
          type: object
        value:
          description: The result is an actual value. The type of the value must match
            that of the type declared by the service.
          title: value
      title: Result
      type: object
    Ruleset:
      description: '`Ruleset` is an immutable copy of `Source` with a globally unique
        identifier and a creation time.'
      example:
        attachmentPoint: attachmentPoint
        metadata:
          services:
          - services
          - services
        createTime: createTime
        name: name
        source:
          files:
          - fingerprint: fingerprint
            name: name
            content: content
          - fingerprint: fingerprint
            name: name
            content: content
      properties:
        attachmentPoint:
          description: "Immutable. Intended resource to which this Ruleset should\
            \ be released. May be left blank to signify the resource associated with\
            \ the default release. Expected format: firestore.googleapis.com/projects//databases/"
          title: attachmentPoint
          type: string
        createTime:
          description: Output only. Time the `Ruleset` was created.
          format: google-datetime
          readOnly: true
          title: createTime
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        name:
          description: "Output only. Name of the `Ruleset`. The ruleset_id is auto\
            \ generated by the service. Format: `projects/{project_id}/rulesets/{ruleset_id}`"
          readOnly: true
          title: name
          type: string
        source:
          $ref: '#/components/schemas/Source'
      title: Ruleset
      type: object
    Source:
      description: '`Source` is one or more `File` messages comprising a logical set
        of rules.'
      example:
        files:
        - fingerprint: fingerprint
          name: name
          content: content
        - fingerprint: fingerprint
          name: name
          content: content
      properties:
        files:
          description: Required. `File` set constituting the `Source` bundle.
          items:
            $ref: '#/components/schemas/File'
          title: files
          type: array
      title: Source
      type: object
    SourcePosition:
      description: "Position in the `Source` content including its line, column number,\
        \ and an index of the `File` in the `Source` message. Used for debug purposes."
      example:
        endOffset: 1
        fileName: fileName
        currentOffset: 6
        line: 5
        column: 0
      properties:
        column:
          description: First column on the source line associated with the source
            fragment.
          format: int32
          title: column
          type: integer
        currentOffset:
          description: Start position relative to the beginning of the file.
          format: int32
          title: currentOffset
          type: integer
        endOffset:
          description: End position relative to the beginning of the file.
          format: int32
          title: endOffset
          type: integer
        fileName:
          description: Name of the `File`.
          title: fileName
          type: string
        line:
          description: Line number of the source fragment. 1-based.
          format: int32
          title: line
          type: integer
      title: SourcePosition
      type: object
    TestCase:
      description: "`TestCase` messages provide the request context and an expectation\
        \ as to whether the given context will be allowed or denied. Test cases may\
        \ specify the `request`, `resource`, and `function_mocks` to mock a function\
        \ call to a service-provided function. The `request` object represents context\
        \ present at request-time. The `resource` is the value of the target resource\
        \ as it appears in persistent storage before the request is executed."
      example:
        request: ""
        resource: ""
        pathEncoding: ENCODING_UNSPECIFIED
        functionMocks:
        - args:
          - anyValue: "{}"
            exactValue: ""
          - anyValue: "{}"
            exactValue: ""
          result:
            value: ""
            undefined: "{}"
          function: function
        - args:
          - anyValue: "{}"
            exactValue: ""
          - anyValue: "{}"
            exactValue: ""
          result:
            value: ""
            undefined: "{}"
          function: function
        expectation: EXPECTATION_UNSPECIFIED
        expressionReportLevel: LEVEL_UNSPECIFIED
      properties:
        expectation:
          description: Test expectation.
          enum:
          - EXPECTATION_UNSPECIFIED
          - ALLOW
          - DENY
          title: expectation
          type: string
        expressionReportLevel:
          description: Specifies what should be included in the response.
          enum:
          - LEVEL_UNSPECIFIED
          - NONE
          - FULL
          - VISITED
          title: expressionReportLevel
          type: string
        functionMocks:
          description: "Optional function mocks for service-defined functions. If\
            \ not set, any service defined function is expected to return an error,\
            \ which may or may not influence the test outcome."
          items:
            $ref: '#/components/schemas/FunctionMock'
          title: functionMocks
          type: array
        pathEncoding:
          description: Specifies whether paths (such as request.path) are encoded
            and how.
          enum:
          - ENCODING_UNSPECIFIED
          - URL_ENCODED
          - PLAIN
          title: pathEncoding
          type: string
        request:
          description: "Request context. The exact format of the request context is\
            \ service-dependent. See the appropriate service documentation for information\
            \ about the supported fields and types on the request. Minimally, all\
            \ services support the following fields and types: Request field | Type\
            \ ---------------|----------------- auth.uid | `string` auth.token | `map`\
            \ headers | `map` method | `string` params | `map` path | `string` time\
            \ | `google.protobuf.Timestamp` If the request value is not well-formed\
            \ for the service, the request will be rejected as an invalid argument."
          title: request
        resource:
          description: Optional resource value as it appears in persistent storage
            before the request is fulfilled. The resource type depends on the `request.path`
            value.
          title: resource
      title: TestCase
      type: object
    TestResult:
      description: Test result message containing the state of the test as well as
        a description and source position for test failures.
      example:
        errorPosition:
          endOffset: 1
          fileName: fileName
          currentOffset: 6
          line: 5
          column: 0
        expressionReports:
        - children:
          - null
          - null
          values:
          - count: 5
            value: ""
          - count: 5
            value: ""
          sourcePosition:
            endOffset: 1
            fileName: fileName
            currentOffset: 6
            line: 5
            column: 0
        - children:
          - null
          - null
          values:
          - count: 5
            value: ""
          - count: 5
            value: ""
          sourcePosition:
            endOffset: 1
            fileName: fileName
            currentOffset: 6
            line: 5
            column: 0
        visitedExpressions:
        - sourcePosition:
            endOffset: 1
            fileName: fileName
            currentOffset: 6
            line: 5
            column: 0
          value: ""
        - sourcePosition:
            endOffset: 1
            fileName: fileName
            currentOffset: 6
            line: 5
            column: 0
          value: ""
        debugMessages:
        - debugMessages
        - debugMessages
        functionCalls:
        - args:
          - ""
          - ""
          function: function
        - args:
          - ""
          - ""
          function: function
        state: STATE_UNSPECIFIED
      properties:
        debugMessages:
          description: "Debug messages related to test execution issues encountered\
            \ during evaluation. Debug messages may be related to too many or too\
            \ few invocations of function mocks or to runtime errors that occur during\
            \ evaluation. For example: ```Unable to read variable [name: \"resource\"\
            ]```"
          items:
            type: string
          title: debugMessages
          type: array
        errorPosition:
          $ref: '#/components/schemas/SourcePosition'
        expressionReports:
          description: The mapping from expression in the ruleset AST to the values
            they were evaluated to. Partially-nested to mirror AST structure. Note
            that this field is actually tracking expressions and not permission statements
            in contrast to the "visited_expressions" field above. Literal expressions
            are omitted.
          items:
            $ref: '#/components/schemas/ExpressionReport'
          title: expressionReports
          type: array
        functionCalls:
          description: "The set of function calls made to service-defined methods.\
            \ Function calls are included in the order in which they are encountered\
            \ during evaluation, are provided for both mocked and unmocked functions,\
            \ and included on the response regardless of the test `state`."
          items:
            $ref: '#/components/schemas/FunctionCall'
          title: functionCalls
          type: array
        state:
          description: State of the test.
          enum:
          - STATE_UNSPECIFIED
          - SUCCESS
          - FAILURE
          title: state
          type: string
        visitedExpressions:
          description: "The set of visited permission expressions for a given test.\
            \ This returns the positions and evaluation results of all visited permission\
            \ expressions which were relevant to the test case, e.g. ``` match /path\
            \ { allow read if: } ``` For a detailed report of the intermediate evaluation\
            \ states, see the `expression_reports` field"
          items:
            $ref: '#/components/schemas/VisitedExpression'
          title: visitedExpressions
          type: array
      title: TestResult
      type: object
    TestRulesetRequest:
      description: The request for FirebaseRulesService.TestRuleset.
      example:
        testSuite:
          testCases:
          - request: ""
            resource: ""
            pathEncoding: ENCODING_UNSPECIFIED
            functionMocks:
            - args:
              - anyValue: "{}"
                exactValue: ""
              - anyValue: "{}"
                exactValue: ""
              result:
                value: ""
                undefined: "{}"
              function: function
            - args:
              - anyValue: "{}"
                exactValue: ""
              - anyValue: "{}"
                exactValue: ""
              result:
                value: ""
                undefined: "{}"
              function: function
            expectation: EXPECTATION_UNSPECIFIED
            expressionReportLevel: LEVEL_UNSPECIFIED
          - request: ""
            resource: ""
            pathEncoding: ENCODING_UNSPECIFIED
            functionMocks:
            - args:
              - anyValue: "{}"
                exactValue: ""
              - anyValue: "{}"
                exactValue: ""
              result:
                value: ""
                undefined: "{}"
              function: function
            - args:
              - anyValue: "{}"
                exactValue: ""
              - anyValue: "{}"
                exactValue: ""
              result:
                value: ""
                undefined: "{}"
              function: function
            expectation: EXPECTATION_UNSPECIFIED
            expressionReportLevel: LEVEL_UNSPECIFIED
        source:
          files:
          - fingerprint: fingerprint
            name: name
            content: content
          - fingerprint: fingerprint
            name: name
            content: content
      properties:
        source:
          $ref: '#/components/schemas/Source'
        testSuite:
          $ref: '#/components/schemas/TestSuite'
      title: TestRulesetRequest
      type: object
    TestRulesetResponse:
      description: The response for FirebaseRulesService.TestRuleset.
      example:
        testResults:
        - errorPosition:
            endOffset: 1
            fileName: fileName
            currentOffset: 6
            line: 5
            column: 0
          expressionReports:
          - children:
            - null
            - null
            values:
            - count: 5
              value: ""
            - count: 5
              value: ""
            sourcePosition:
              endOffset: 1
              fileName: fileName
              currentOffset: 6
              line: 5
              column: 0
          - children:
            - null
            - null
            values:
            - count: 5
              value: ""
            - count: 5
              value: ""
            sourcePosition:
              endOffset: 1
              fileName: fileName
              currentOffset: 6
              line: 5
              column: 0
          visitedExpressions:
          - sourcePosition:
              endOffset: 1
              fileName: fileName
              currentOffset: 6
              line: 5
              column: 0
            value: ""
          - sourcePosition:
              endOffset: 1
              fileName: fileName
              currentOffset: 6
              line: 5
              column: 0
            value: ""
          debugMessages:
          - debugMessages
          - debugMessages
          functionCalls:
          - args:
            - ""
            - ""
            function: function
          - args:
            - ""
            - ""
            function: function
          state: STATE_UNSPECIFIED
        - errorPosition:
            endOffset: 1
            fileName: fileName
            currentOffset: 6
            line: 5
            column: 0
          expressionReports:
          - children:
            - null
            - null
            values:
            - count: 5
              value: ""
            - count: 5
              value: ""
            sourcePosition:
              endOffset: 1
              fileName: fileName
              currentOffset: 6
              line: 5
              column: 0
          - children:
            - null
            - null
            values:
            - count: 5
              value: ""
            - count: 5
              value: ""
            sourcePosition:
              endOffset: 1
              fileName: fileName
              currentOffset: 6
              line: 5
              column: 0
          visitedExpressions:
          - sourcePosition:
              endOffset: 1
              fileName: fileName
              currentOffset: 6
              line: 5
              column: 0
            value: ""
          - sourcePosition:
              endOffset: 1
              fileName: fileName
              currentOffset: 6
              line: 5
              column: 0
            value: ""
          debugMessages:
          - debugMessages
          - debugMessages
          functionCalls:
          - args:
            - ""
            - ""
            function: function
          - args:
            - ""
            - ""
            function: function
          state: STATE_UNSPECIFIED
        issues:
        - severity: SEVERITY_UNSPECIFIED
          description: description
          sourcePosition:
            endOffset: 1
            fileName: fileName
            currentOffset: 6
            line: 5
            column: 0
        - severity: SEVERITY_UNSPECIFIED
          description: description
          sourcePosition:
            endOffset: 1
            fileName: fileName
            currentOffset: 6
            line: 5
            column: 0
      properties:
        issues:
          description: Syntactic and semantic `Source` issues of varying severity.
            Issues of `ERROR` severity will prevent tests from executing.
          items:
            $ref: '#/components/schemas/Issue'
          title: issues
          type: array
        testResults:
          description: The set of test results given the test cases in the `TestSuite`.
            The results will appear in the same order as the test cases appear in
            the `TestSuite`.
          items:
            $ref: '#/components/schemas/TestResult'
          title: testResults
          type: array
      title: TestRulesetResponse
      type: object
    TestSuite:
      description: '`TestSuite` is a collection of `TestCase` instances that validate
        the logical correctness of a `Ruleset`. The `TestSuite` may be referenced
        in-line within a `TestRuleset` invocation or as part of a `Release` object
        as a pre-release check.'
      example:
        testCases:
        - request: ""
          resource: ""
          pathEncoding: ENCODING_UNSPECIFIED
          functionMocks:
          - args:
            - anyValue: "{}"
              exactValue: ""
            - anyValue: "{}"
              exactValue: ""
            result:
              value: ""
              undefined: "{}"
            function: function
          - args:
            - anyValue: "{}"
              exactValue: ""
            - anyValue: "{}"
              exactValue: ""
            result:
              value: ""
              undefined: "{}"
            function: function
          expectation: EXPECTATION_UNSPECIFIED
          expressionReportLevel: LEVEL_UNSPECIFIED
        - request: ""
          resource: ""
          pathEncoding: ENCODING_UNSPECIFIED
          functionMocks:
          - args:
            - anyValue: "{}"
              exactValue: ""
            - anyValue: "{}"
              exactValue: ""
            result:
              value: ""
              undefined: "{}"
            function: function
          - args:
            - anyValue: "{}"
              exactValue: ""
            - anyValue: "{}"
              exactValue: ""
            result:
              value: ""
              undefined: "{}"
            function: function
          expectation: EXPECTATION_UNSPECIFIED
          expressionReportLevel: LEVEL_UNSPECIFIED
      properties:
        testCases:
          description: Collection of test cases associated with the `TestSuite`.
          items:
            $ref: '#/components/schemas/TestCase'
          title: testCases
          type: array
      title: TestSuite
      type: object
    UpdateReleaseRequest:
      description: The request for FirebaseRulesService.UpdateRelease.
      example:
        release:
          createTime: createTime
          name: name
          rulesetName: rulesetName
          updateTime: updateTime
        updateMask: updateMask
      properties:
        release:
          $ref: '#/components/schemas/Release'
        updateMask:
          description: Specifies which fields to update.
          format: google-fieldmask
          title: updateMask
          type: string
      title: UpdateReleaseRequest
      type: object
    ValueCount:
      description: Tuple for how many times an Expression was evaluated to a particular
        ExpressionValue.
      example:
        count: 5
        value: ""
      properties:
        count:
          description: The amount of times that expression returned.
          format: int32
          title: count
          type: integer
        value:
          description: The return value of the expression
          title: value
      title: ValueCount
      type: object
    VisitedExpression:
      description: Store the position and access outcome for an expression visited
        in rules.
      example:
        sourcePosition:
          endOffset: 1
          fileName: fileName
          currentOffset: 6
          line: 5
          column: 0
        value: ""
      properties:
        sourcePosition:
          $ref: '#/components/schemas/SourcePosition'
        value:
          description: "The evaluated value for the visited expression, e.g. true/false"
          title: value
      title: VisitedExpression
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
            https://www.googleapis.com/auth/firebase: View and administer all your
              Firebase data and settings
            https://www.googleapis.com/auth/firebase.readonly: View all your Firebase
              data and settings
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
            https://www.googleapis.com/auth/firebase: View and administer all your
              Firebase data and settings
            https://www.googleapis.com/auth/firebase.readonly: View all your Firebase
              data and settings
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2c
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2c
