# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Metadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, services: List[str]=None):
        """Metadata - a model defined in OpenAPI

        :param services: The services of this Metadata.
        """
        self.openapi_types = {
            'services': List[str]
        }

        self.attribute_map = {
            'services': 'services'
        }

        self._services = services

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Metadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Metadata of this Metadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def services(self):
        """Gets the services of this Metadata.

        Services that this ruleset has declarations for (e.g., \"cloud.firestore\"). There may be 0+ of these.

        :return: The services of this Metadata.
        :rtype: List[str]
        """
        return self._services

    @services.setter
    def services(self, services):
        """Sets the services of this Metadata.

        Services that this ruleset has declarations for (e.g., \"cloud.firestore\"). There may be 0+ of these.

        :param services: The services of this Metadata.
        :type services: List[str]
        """

        self._services = services
