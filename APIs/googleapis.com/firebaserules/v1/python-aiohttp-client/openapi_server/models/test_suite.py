# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.test_case import TestCase
from openapi_server import util


class TestSuite(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, test_cases: List[TestCase]=None):
        """TestSuite - a model defined in OpenAPI

        :param test_cases: The test_cases of this TestSuite.
        """
        self.openapi_types = {
            'test_cases': List[TestCase]
        }

        self.attribute_map = {
            'test_cases': 'testCases'
        }

        self._test_cases = test_cases

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestSuite':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TestSuite of this TestSuite.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def test_cases(self):
        """Gets the test_cases of this TestSuite.

        Collection of test cases associated with the `TestSuite`.

        :return: The test_cases of this TestSuite.
        :rtype: List[TestCase]
        """
        return self._test_cases

    @test_cases.setter
    def test_cases(self, test_cases):
        """Sets the test_cases of this TestSuite.

        Collection of test cases associated with the `TestSuite`.

        :param test_cases: The test_cases of this TestSuite.
        :type test_cases: List[TestCase]
        """

        self._test_cases = test_cases
