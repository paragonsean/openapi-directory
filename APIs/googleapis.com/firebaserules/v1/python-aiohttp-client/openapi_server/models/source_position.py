# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SourcePosition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, column: int=None, current_offset: int=None, end_offset: int=None, file_name: str=None, line: int=None):
        """SourcePosition - a model defined in OpenAPI

        :param column: The column of this SourcePosition.
        :param current_offset: The current_offset of this SourcePosition.
        :param end_offset: The end_offset of this SourcePosition.
        :param file_name: The file_name of this SourcePosition.
        :param line: The line of this SourcePosition.
        """
        self.openapi_types = {
            'column': int,
            'current_offset': int,
            'end_offset': int,
            'file_name': str,
            'line': int
        }

        self.attribute_map = {
            'column': 'column',
            'current_offset': 'currentOffset',
            'end_offset': 'endOffset',
            'file_name': 'fileName',
            'line': 'line'
        }

        self._column = column
        self._current_offset = current_offset
        self._end_offset = end_offset
        self._file_name = file_name
        self._line = line

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourcePosition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SourcePosition of this SourcePosition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def column(self):
        """Gets the column of this SourcePosition.

        First column on the source line associated with the source fragment.

        :return: The column of this SourcePosition.
        :rtype: int
        """
        return self._column

    @column.setter
    def column(self, column):
        """Sets the column of this SourcePosition.

        First column on the source line associated with the source fragment.

        :param column: The column of this SourcePosition.
        :type column: int
        """

        self._column = column

    @property
    def current_offset(self):
        """Gets the current_offset of this SourcePosition.

        Start position relative to the beginning of the file.

        :return: The current_offset of this SourcePosition.
        :rtype: int
        """
        return self._current_offset

    @current_offset.setter
    def current_offset(self, current_offset):
        """Sets the current_offset of this SourcePosition.

        Start position relative to the beginning of the file.

        :param current_offset: The current_offset of this SourcePosition.
        :type current_offset: int
        """

        self._current_offset = current_offset

    @property
    def end_offset(self):
        """Gets the end_offset of this SourcePosition.

        End position relative to the beginning of the file.

        :return: The end_offset of this SourcePosition.
        :rtype: int
        """
        return self._end_offset

    @end_offset.setter
    def end_offset(self, end_offset):
        """Sets the end_offset of this SourcePosition.

        End position relative to the beginning of the file.

        :param end_offset: The end_offset of this SourcePosition.
        :type end_offset: int
        """

        self._end_offset = end_offset

    @property
    def file_name(self):
        """Gets the file_name of this SourcePosition.

        Name of the `File`.

        :return: The file_name of this SourcePosition.
        :rtype: str
        """
        return self._file_name

    @file_name.setter
    def file_name(self, file_name):
        """Sets the file_name of this SourcePosition.

        Name of the `File`.

        :param file_name: The file_name of this SourcePosition.
        :type file_name: str
        """

        self._file_name = file_name

    @property
    def line(self):
        """Gets the line of this SourcePosition.

        Line number of the source fragment. 1-based.

        :return: The line of this SourcePosition.
        :rtype: int
        """
        return self._line

    @line.setter
    def line(self, line):
        """Sets the line of this SourcePosition.

        Line number of the source fragment. 1-based.

        :param line: The line of this SourcePosition.
        :type line: int
        """

        self._line = line
