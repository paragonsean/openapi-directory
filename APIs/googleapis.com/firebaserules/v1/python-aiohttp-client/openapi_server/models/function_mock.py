# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.arg import Arg
from openapi_server.models.result import Result
from openapi_server import util


class FunctionMock(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, args: List[Arg]=None, function: str=None, result: Result=None):
        """FunctionMock - a model defined in OpenAPI

        :param args: The args of this FunctionMock.
        :param function: The function of this FunctionMock.
        :param result: The result of this FunctionMock.
        """
        self.openapi_types = {
            'args': List[Arg],
            'function': str,
            'result': Result
        }

        self.attribute_map = {
            'args': 'args',
            'function': 'function',
            'result': 'result'
        }

        self._args = args
        self._function = function
        self._result = result

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FunctionMock':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FunctionMock of this FunctionMock.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def args(self):
        """Gets the args of this FunctionMock.

        The list of `Arg` values to match. The order in which the arguments are provided is the order in which they must appear in the function invocation.

        :return: The args of this FunctionMock.
        :rtype: List[Arg]
        """
        return self._args

    @args.setter
    def args(self, args):
        """Sets the args of this FunctionMock.

        The list of `Arg` values to match. The order in which the arguments are provided is the order in which they must appear in the function invocation.

        :param args: The args of this FunctionMock.
        :type args: List[Arg]
        """

        self._args = args

    @property
    def function(self):
        """Gets the function of this FunctionMock.

        The name of the function. The function name must match one provided by a service declaration.

        :return: The function of this FunctionMock.
        :rtype: str
        """
        return self._function

    @function.setter
    def function(self, function):
        """Sets the function of this FunctionMock.

        The name of the function. The function name must match one provided by a service declaration.

        :param function: The function of this FunctionMock.
        :type function: str
        """

        self._function = function

    @property
    def result(self):
        """Gets the result of this FunctionMock.


        :return: The result of this FunctionMock.
        :rtype: Result
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this FunctionMock.


        :param result: The result of this FunctionMock.
        :type result: Result
        """

        self._result = result
