/**
 * SAS Portal API (Testing)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISasPortalFrequencyRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISasPortalFrequencyRange::OAISasPortalFrequencyRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISasPortalFrequencyRange::OAISasPortalFrequencyRange() {
    this->initializeModel();
}

OAISasPortalFrequencyRange::~OAISasPortalFrequencyRange() {}

void OAISasPortalFrequencyRange::initializeModel() {

    m_high_frequency_mhz_isSet = false;
    m_high_frequency_mhz_isValid = false;

    m_low_frequency_mhz_isSet = false;
    m_low_frequency_mhz_isValid = false;
}

void OAISasPortalFrequencyRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISasPortalFrequencyRange::fromJsonObject(QJsonObject json) {

    m_high_frequency_mhz_isValid = ::OpenAPI::fromJsonValue(m_high_frequency_mhz, json[QString("highFrequencyMhz")]);
    m_high_frequency_mhz_isSet = !json[QString("highFrequencyMhz")].isNull() && m_high_frequency_mhz_isValid;

    m_low_frequency_mhz_isValid = ::OpenAPI::fromJsonValue(m_low_frequency_mhz, json[QString("lowFrequencyMhz")]);
    m_low_frequency_mhz_isSet = !json[QString("lowFrequencyMhz")].isNull() && m_low_frequency_mhz_isValid;
}

QString OAISasPortalFrequencyRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISasPortalFrequencyRange::asJsonObject() const {
    QJsonObject obj;
    if (m_high_frequency_mhz_isSet) {
        obj.insert(QString("highFrequencyMhz"), ::OpenAPI::toJsonValue(m_high_frequency_mhz));
    }
    if (m_low_frequency_mhz_isSet) {
        obj.insert(QString("lowFrequencyMhz"), ::OpenAPI::toJsonValue(m_low_frequency_mhz));
    }
    return obj;
}

double OAISasPortalFrequencyRange::getHighFrequencyMhz() const {
    return m_high_frequency_mhz;
}
void OAISasPortalFrequencyRange::setHighFrequencyMhz(const double &high_frequency_mhz) {
    m_high_frequency_mhz = high_frequency_mhz;
    m_high_frequency_mhz_isSet = true;
}

bool OAISasPortalFrequencyRange::is_high_frequency_mhz_Set() const{
    return m_high_frequency_mhz_isSet;
}

bool OAISasPortalFrequencyRange::is_high_frequency_mhz_Valid() const{
    return m_high_frequency_mhz_isValid;
}

double OAISasPortalFrequencyRange::getLowFrequencyMhz() const {
    return m_low_frequency_mhz;
}
void OAISasPortalFrequencyRange::setLowFrequencyMhz(const double &low_frequency_mhz) {
    m_low_frequency_mhz = low_frequency_mhz;
    m_low_frequency_mhz_isSet = true;
}

bool OAISasPortalFrequencyRange::is_low_frequency_mhz_Set() const{
    return m_low_frequency_mhz_isSet;
}

bool OAISasPortalFrequencyRange::is_low_frequency_mhz_Valid() const{
    return m_low_frequency_mhz_isValid;
}

bool OAISasPortalFrequencyRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_high_frequency_mhz_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_low_frequency_mhz_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISasPortalFrequencyRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
