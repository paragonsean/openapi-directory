/**
 * SAS Portal API (Testing)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISasPortalPolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISasPortalPolicy::OAISasPortalPolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISasPortalPolicy::OAISasPortalPolicy() {
    this->initializeModel();
}

OAISasPortalPolicy::~OAISasPortalPolicy() {}

void OAISasPortalPolicy::initializeModel() {

    m_assignments_isSet = false;
    m_assignments_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;
}

void OAISasPortalPolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISasPortalPolicy::fromJsonObject(QJsonObject json) {

    m_assignments_isValid = ::OpenAPI::fromJsonValue(m_assignments, json[QString("assignments")]);
    m_assignments_isSet = !json[QString("assignments")].isNull() && m_assignments_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;
}

QString OAISasPortalPolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISasPortalPolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_assignments.size() > 0) {
        obj.insert(QString("assignments"), ::OpenAPI::toJsonValue(m_assignments));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    return obj;
}

QList<OAISasPortalAssignment> OAISasPortalPolicy::getAssignments() const {
    return m_assignments;
}
void OAISasPortalPolicy::setAssignments(const QList<OAISasPortalAssignment> &assignments) {
    m_assignments = assignments;
    m_assignments_isSet = true;
}

bool OAISasPortalPolicy::is_assignments_Set() const{
    return m_assignments_isSet;
}

bool OAISasPortalPolicy::is_assignments_Valid() const{
    return m_assignments_isValid;
}

QByteArray OAISasPortalPolicy::getEtag() const {
    return m_etag;
}
void OAISasPortalPolicy::setEtag(const QByteArray &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAISasPortalPolicy::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAISasPortalPolicy::is_etag_Valid() const{
    return m_etag_isValid;
}

bool OAISasPortalPolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assignments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISasPortalPolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
