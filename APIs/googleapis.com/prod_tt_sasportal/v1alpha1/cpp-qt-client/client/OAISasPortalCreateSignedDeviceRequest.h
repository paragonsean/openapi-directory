/**
 * SAS Portal API (Testing)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISasPortalCreateSignedDeviceRequest.h
 *
 * Request for CreateSignedDevice.
 */

#ifndef OAISasPortalCreateSignedDeviceRequest_H
#define OAISasPortalCreateSignedDeviceRequest_H

#include <QJsonObject>

#include <QByteArray>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISasPortalCreateSignedDeviceRequest : public OAIObject {
public:
    OAISasPortalCreateSignedDeviceRequest();
    OAISasPortalCreateSignedDeviceRequest(QString json);
    ~OAISasPortalCreateSignedDeviceRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QByteArray getEncodedDevice() const;
    void setEncodedDevice(const QByteArray &encoded_device);
    bool is_encoded_device_Set() const;
    bool is_encoded_device_Valid() const;

    QString getInstallerId() const;
    void setInstallerId(const QString &installer_id);
    bool is_installer_id_Set() const;
    bool is_installer_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QByteArray m_encoded_device;
    bool m_encoded_device_isSet;
    bool m_encoded_device_isValid;

    QString m_installer_id;
    bool m_installer_id_isSet;
    bool m_installer_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISasPortalCreateSignedDeviceRequest)

#endif // OAISasPortalCreateSignedDeviceRequest_H
