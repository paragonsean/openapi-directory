/**
 * SAS Portal API (Testing)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISasPortalGcpProjectDeployment.h
 *
 * Deployment associated with the GCP project. Includes whether SAS analytics has been enabled or not.
 */

#ifndef OAISasPortalGcpProjectDeployment_H
#define OAISasPortalGcpProjectDeployment_H

#include <QJsonObject>

#include "OAISasPortalDeployment.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISasPortalDeployment;

class OAISasPortalGcpProjectDeployment : public OAIObject {
public:
    OAISasPortalGcpProjectDeployment();
    OAISasPortalGcpProjectDeployment(QString json);
    ~OAISasPortalGcpProjectDeployment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISasPortalDeployment getDeployment() const;
    void setDeployment(const OAISasPortalDeployment &deployment);
    bool is_deployment_Set() const;
    bool is_deployment_Valid() const;

    bool isHasEnabledAnalytics() const;
    void setHasEnabledAnalytics(const bool &has_enabled_analytics);
    bool is_has_enabled_analytics_Set() const;
    bool is_has_enabled_analytics_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISasPortalDeployment m_deployment;
    bool m_deployment_isSet;
    bool m_deployment_isValid;

    bool m_has_enabled_analytics;
    bool m_has_enabled_analytics_isSet;
    bool m_has_enabled_analytics_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISasPortalGcpProjectDeployment)

#endif // OAISasPortalGcpProjectDeployment_H
