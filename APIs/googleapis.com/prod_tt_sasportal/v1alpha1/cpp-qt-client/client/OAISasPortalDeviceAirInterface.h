/**
 * SAS Portal API (Testing)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISasPortalDeviceAirInterface.h
 *
 * Information about the device&#39;s air interface.
 */

#ifndef OAISasPortalDeviceAirInterface_H
#define OAISasPortalDeviceAirInterface_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISasPortalDeviceAirInterface : public OAIObject {
public:
    OAISasPortalDeviceAirInterface();
    OAISasPortalDeviceAirInterface(QString json);
    ~OAISasPortalDeviceAirInterface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRadioTechnology() const;
    void setRadioTechnology(const QString &radio_technology);
    bool is_radio_technology_Set() const;
    bool is_radio_technology_Valid() const;

    QString getSupportedSpec() const;
    void setSupportedSpec(const QString &supported_spec);
    bool is_supported_spec_Set() const;
    bool is_supported_spec_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_radio_technology;
    bool m_radio_technology_isSet;
    bool m_radio_technology_isValid;

    QString m_supported_spec;
    bool m_supported_spec_isSet;
    bool m_supported_spec_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISasPortalDeviceAirInterface)

#endif // OAISasPortalDeviceAirInterface_H
