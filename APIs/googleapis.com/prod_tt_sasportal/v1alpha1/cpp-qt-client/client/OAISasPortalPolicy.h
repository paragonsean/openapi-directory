/**
 * SAS Portal API (Testing)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISasPortalPolicy.h
 *
 * Defines an access control policy to the resources.
 */

#ifndef OAISasPortalPolicy_H
#define OAISasPortalPolicy_H

#include <QJsonObject>

#include "OAISasPortalAssignment.h"
#include <QByteArray>
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISasPortalAssignment;

class OAISasPortalPolicy : public OAIObject {
public:
    OAISasPortalPolicy();
    OAISasPortalPolicy(QString json);
    ~OAISasPortalPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAISasPortalAssignment> getAssignments() const;
    void setAssignments(const QList<OAISasPortalAssignment> &assignments);
    bool is_assignments_Set() const;
    bool is_assignments_Valid() const;

    QByteArray getEtag() const;
    void setEtag(const QByteArray &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAISasPortalAssignment> m_assignments;
    bool m_assignments_isSet;
    bool m_assignments_isValid;

    QByteArray m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISasPortalPolicy)

#endif // OAISasPortalPolicy_H
