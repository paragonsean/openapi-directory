/**
 * SAS Portal API (Testing)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SasPortalNrqzValidation from './SasPortalNrqzValidation';

/**
 * The SasPortalDeviceMetadata model module.
 * @module model/SasPortalDeviceMetadata
 * @version v1alpha1
 */
class SasPortalDeviceMetadata {
    /**
     * Constructs a new <code>SasPortalDeviceMetadata</code>.
     * Device data overridable by both SAS Portal and registration requests.
     * @alias module:model/SasPortalDeviceMetadata
     */
    constructor() { 
        
        SasPortalDeviceMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SasPortalDeviceMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SasPortalDeviceMetadata} obj Optional instance to populate.
     * @return {module:model/SasPortalDeviceMetadata} The populated <code>SasPortalDeviceMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SasPortalDeviceMetadata();

            if (data.hasOwnProperty('antennaModel')) {
                obj['antennaModel'] = ApiClient.convertToType(data['antennaModel'], 'String');
            }
            if (data.hasOwnProperty('commonChannelGroup')) {
                obj['commonChannelGroup'] = ApiClient.convertToType(data['commonChannelGroup'], 'String');
            }
            if (data.hasOwnProperty('interferenceCoordinationGroup')) {
                obj['interferenceCoordinationGroup'] = ApiClient.convertToType(data['interferenceCoordinationGroup'], 'String');
            }
            if (data.hasOwnProperty('nrqzValidated')) {
                obj['nrqzValidated'] = ApiClient.convertToType(data['nrqzValidated'], 'Boolean');
            }
            if (data.hasOwnProperty('nrqzValidation')) {
                obj['nrqzValidation'] = SasPortalNrqzValidation.constructFromObject(data['nrqzValidation']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SasPortalDeviceMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SasPortalDeviceMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['antennaModel'] && !(typeof data['antennaModel'] === 'string' || data['antennaModel'] instanceof String)) {
            throw new Error("Expected the field `antennaModel` to be a primitive type in the JSON string but got " + data['antennaModel']);
        }
        // ensure the json data is a string
        if (data['commonChannelGroup'] && !(typeof data['commonChannelGroup'] === 'string' || data['commonChannelGroup'] instanceof String)) {
            throw new Error("Expected the field `commonChannelGroup` to be a primitive type in the JSON string but got " + data['commonChannelGroup']);
        }
        // ensure the json data is a string
        if (data['interferenceCoordinationGroup'] && !(typeof data['interferenceCoordinationGroup'] === 'string' || data['interferenceCoordinationGroup'] instanceof String)) {
            throw new Error("Expected the field `interferenceCoordinationGroup` to be a primitive type in the JSON string but got " + data['interferenceCoordinationGroup']);
        }
        // validate the optional field `nrqzValidation`
        if (data['nrqzValidation']) { // data not null
          SasPortalNrqzValidation.validateJSON(data['nrqzValidation']);
        }

        return true;
    }


}



/**
 * If populated, the Antenna Model Pattern to use. Format is: `RecordCreatorId:PatternId`
 * @member {String} antennaModel
 */
SasPortalDeviceMetadata.prototype['antennaModel'] = undefined;

/**
 * Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see [CBRSA-TS-2001 V3.0.0](https://ongoalliance.org/wp-content/uploads/2020/02/CBRSA-TS-2001-V3.0.0_Approved-for-publication.pdf).
 * @member {String} commonChannelGroup
 */
SasPortalDeviceMetadata.prototype['commonChannelGroup'] = undefined;

/**
 * Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see [CBRSA-TS-2001 V3.0.0](https://ongoalliance.org/wp-content/uploads/2020/02/CBRSA-TS-2001-V3.0.0_Approved-for-publication.pdf).
 * @member {String} interferenceCoordinationGroup
 */
SasPortalDeviceMetadata.prototype['interferenceCoordinationGroup'] = undefined;

/**
 * Output only. Set to `true` if a CPI has validated that they have coordinated with the National Quiet Zone office.
 * @member {Boolean} nrqzValidated
 */
SasPortalDeviceMetadata.prototype['nrqzValidated'] = undefined;

/**
 * @member {module:model/SasPortalNrqzValidation} nrqzValidation
 */
SasPortalDeviceMetadata.prototype['nrqzValidation'] = undefined;






export default SasPortalDeviceMetadata;

