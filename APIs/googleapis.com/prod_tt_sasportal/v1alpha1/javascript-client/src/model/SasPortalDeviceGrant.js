/**
 * SAS Portal API (Testing)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SasPortalDpaMoveList from './SasPortalDpaMoveList';
import SasPortalFrequencyRange from './SasPortalFrequencyRange';

/**
 * The SasPortalDeviceGrant model module.
 * @module model/SasPortalDeviceGrant
 * @version v1alpha1
 */
class SasPortalDeviceGrant {
    /**
     * Constructs a new <code>SasPortalDeviceGrant</code>.
     * Device grant. It is an authorization provided by the Spectrum Access System to a device to transmit using specified operating parameters after a successful heartbeat by the device.
     * @alias module:model/SasPortalDeviceGrant
     */
    constructor() { 
        
        SasPortalDeviceGrant.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SasPortalDeviceGrant</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SasPortalDeviceGrant} obj Optional instance to populate.
     * @return {module:model/SasPortalDeviceGrant} The populated <code>SasPortalDeviceGrant</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SasPortalDeviceGrant();

            if (data.hasOwnProperty('channelType')) {
                obj['channelType'] = ApiClient.convertToType(data['channelType'], 'String');
            }
            if (data.hasOwnProperty('expireTime')) {
                obj['expireTime'] = ApiClient.convertToType(data['expireTime'], 'String');
            }
            if (data.hasOwnProperty('frequencyRange')) {
                obj['frequencyRange'] = SasPortalFrequencyRange.constructFromObject(data['frequencyRange']);
            }
            if (data.hasOwnProperty('grantId')) {
                obj['grantId'] = ApiClient.convertToType(data['grantId'], 'String');
            }
            if (data.hasOwnProperty('lastHeartbeatTransmitExpireTime')) {
                obj['lastHeartbeatTransmitExpireTime'] = ApiClient.convertToType(data['lastHeartbeatTransmitExpireTime'], 'String');
            }
            if (data.hasOwnProperty('maxEirp')) {
                obj['maxEirp'] = ApiClient.convertToType(data['maxEirp'], 'Number');
            }
            if (data.hasOwnProperty('moveList')) {
                obj['moveList'] = ApiClient.convertToType(data['moveList'], [SasPortalDpaMoveList]);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('suspensionReason')) {
                obj['suspensionReason'] = ApiClient.convertToType(data['suspensionReason'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SasPortalDeviceGrant</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SasPortalDeviceGrant</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['channelType'] && !(typeof data['channelType'] === 'string' || data['channelType'] instanceof String)) {
            throw new Error("Expected the field `channelType` to be a primitive type in the JSON string but got " + data['channelType']);
        }
        // ensure the json data is a string
        if (data['expireTime'] && !(typeof data['expireTime'] === 'string' || data['expireTime'] instanceof String)) {
            throw new Error("Expected the field `expireTime` to be a primitive type in the JSON string but got " + data['expireTime']);
        }
        // validate the optional field `frequencyRange`
        if (data['frequencyRange']) { // data not null
          SasPortalFrequencyRange.validateJSON(data['frequencyRange']);
        }
        // ensure the json data is a string
        if (data['grantId'] && !(typeof data['grantId'] === 'string' || data['grantId'] instanceof String)) {
            throw new Error("Expected the field `grantId` to be a primitive type in the JSON string but got " + data['grantId']);
        }
        // ensure the json data is a string
        if (data['lastHeartbeatTransmitExpireTime'] && !(typeof data['lastHeartbeatTransmitExpireTime'] === 'string' || data['lastHeartbeatTransmitExpireTime'] instanceof String)) {
            throw new Error("Expected the field `lastHeartbeatTransmitExpireTime` to be a primitive type in the JSON string but got " + data['lastHeartbeatTransmitExpireTime']);
        }
        if (data['moveList']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['moveList'])) {
                throw new Error("Expected the field `moveList` to be an array in the JSON data but got " + data['moveList']);
            }
            // validate the optional field `moveList` (array)
            for (const item of data['moveList']) {
                SasPortalDpaMoveList.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['suspensionReason'])) {
            throw new Error("Expected the field `suspensionReason` to be an array in the JSON data but got " + data['suspensionReason']);
        }

        return true;
    }


}



/**
 * Type of channel used.
 * @member {module:model/SasPortalDeviceGrant.ChannelTypeEnum} channelType
 */
SasPortalDeviceGrant.prototype['channelType'] = undefined;

/**
 * The expiration time of the grant.
 * @member {String} expireTime
 */
SasPortalDeviceGrant.prototype['expireTime'] = undefined;

/**
 * @member {module:model/SasPortalFrequencyRange} frequencyRange
 */
SasPortalDeviceGrant.prototype['frequencyRange'] = undefined;

/**
 * Grant Id.
 * @member {String} grantId
 */
SasPortalDeviceGrant.prototype['grantId'] = undefined;

/**
 * The transmit expiration time of the last heartbeat.
 * @member {String} lastHeartbeatTransmitExpireTime
 */
SasPortalDeviceGrant.prototype['lastHeartbeatTransmitExpireTime'] = undefined;

/**
 * Maximum Equivalent Isotropically Radiated Power (EIRP) permitted by the grant. The maximum EIRP is in units of dBm/MHz. The value of `maxEirp` represents the average (RMS) EIRP that would be measured by the procedure defined in FCC part 96.41(e)(3).
 * @member {Number} maxEirp
 */
SasPortalDeviceGrant.prototype['maxEirp'] = undefined;

/**
 * The DPA move lists on which this grant appears.
 * @member {Array.<module:model/SasPortalDpaMoveList>} moveList
 */
SasPortalDeviceGrant.prototype['moveList'] = undefined;

/**
 * State of the grant.
 * @member {module:model/SasPortalDeviceGrant.StateEnum} state
 */
SasPortalDeviceGrant.prototype['state'] = undefined;

/**
 * If the grant is suspended, the reason(s) for suspension.
 * @member {Array.<String>} suspensionReason
 */
SasPortalDeviceGrant.prototype['suspensionReason'] = undefined;





/**
 * Allowed values for the <code>channelType</code> property.
 * @enum {String}
 * @readonly
 */
SasPortalDeviceGrant['ChannelTypeEnum'] = {

    /**
     * value: "CHANNEL_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "CHANNEL_TYPE_UNSPECIFIED",

    /**
     * value: "CHANNEL_TYPE_GAA"
     * @const
     */
    "GAA": "CHANNEL_TYPE_GAA",

    /**
     * value: "CHANNEL_TYPE_PAL"
     * @const
     */
    "PAL": "CHANNEL_TYPE_PAL"
};


/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
SasPortalDeviceGrant['StateEnum'] = {

    /**
     * value: "GRANT_STATE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "GRANT_STATE_UNSPECIFIED",

    /**
     * value: "GRANT_STATE_GRANTED"
     * @const
     */
    "GRANTED": "GRANT_STATE_GRANTED",

    /**
     * value: "GRANT_STATE_TERMINATED"
     * @const
     */
    "TERMINATED": "GRANT_STATE_TERMINATED",

    /**
     * value: "GRANT_STATE_SUSPENDED"
     * @const
     */
    "SUSPENDED": "GRANT_STATE_SUSPENDED",

    /**
     * value: "GRANT_STATE_AUTHORIZED"
     * @const
     */
    "AUTHORIZED": "GRANT_STATE_AUTHORIZED",

    /**
     * value: "GRANT_STATE_EXPIRED"
     * @const
     */
    "EXPIRED": "GRANT_STATE_EXPIRED"
};



export default SasPortalDeviceGrant;

