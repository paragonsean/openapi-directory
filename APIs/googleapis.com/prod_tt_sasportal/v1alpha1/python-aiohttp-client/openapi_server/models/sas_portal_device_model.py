# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SasPortalDeviceModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, firmware_version: str=None, hardware_version: str=None, name: str=None, software_version: str=None, vendor: str=None):
        """SasPortalDeviceModel - a model defined in OpenAPI

        :param firmware_version: The firmware_version of this SasPortalDeviceModel.
        :param hardware_version: The hardware_version of this SasPortalDeviceModel.
        :param name: The name of this SasPortalDeviceModel.
        :param software_version: The software_version of this SasPortalDeviceModel.
        :param vendor: The vendor of this SasPortalDeviceModel.
        """
        self.openapi_types = {
            'firmware_version': str,
            'hardware_version': str,
            'name': str,
            'software_version': str,
            'vendor': str
        }

        self.attribute_map = {
            'firmware_version': 'firmwareVersion',
            'hardware_version': 'hardwareVersion',
            'name': 'name',
            'software_version': 'softwareVersion',
            'vendor': 'vendor'
        }

        self._firmware_version = firmware_version
        self._hardware_version = hardware_version
        self._name = name
        self._software_version = software_version
        self._vendor = vendor

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SasPortalDeviceModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SasPortalDeviceModel of this SasPortalDeviceModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def firmware_version(self):
        """Gets the firmware_version of this SasPortalDeviceModel.

        The firmware version of the device.

        :return: The firmware_version of this SasPortalDeviceModel.
        :rtype: str
        """
        return self._firmware_version

    @firmware_version.setter
    def firmware_version(self, firmware_version):
        """Sets the firmware_version of this SasPortalDeviceModel.

        The firmware version of the device.

        :param firmware_version: The firmware_version of this SasPortalDeviceModel.
        :type firmware_version: str
        """

        self._firmware_version = firmware_version

    @property
    def hardware_version(self):
        """Gets the hardware_version of this SasPortalDeviceModel.

        The hardware version of the device.

        :return: The hardware_version of this SasPortalDeviceModel.
        :rtype: str
        """
        return self._hardware_version

    @hardware_version.setter
    def hardware_version(self, hardware_version):
        """Sets the hardware_version of this SasPortalDeviceModel.

        The hardware version of the device.

        :param hardware_version: The hardware_version of this SasPortalDeviceModel.
        :type hardware_version: str
        """

        self._hardware_version = hardware_version

    @property
    def name(self):
        """Gets the name of this SasPortalDeviceModel.

        The name of the device model.

        :return: The name of this SasPortalDeviceModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SasPortalDeviceModel.

        The name of the device model.

        :param name: The name of this SasPortalDeviceModel.
        :type name: str
        """

        self._name = name

    @property
    def software_version(self):
        """Gets the software_version of this SasPortalDeviceModel.

        The software version of the device.

        :return: The software_version of this SasPortalDeviceModel.
        :rtype: str
        """
        return self._software_version

    @software_version.setter
    def software_version(self, software_version):
        """Sets the software_version of this SasPortalDeviceModel.

        The software version of the device.

        :param software_version: The software_version of this SasPortalDeviceModel.
        :type software_version: str
        """

        self._software_version = software_version

    @property
    def vendor(self):
        """Gets the vendor of this SasPortalDeviceModel.

        The name of the device vendor.

        :return: The vendor of this SasPortalDeviceModel.
        :rtype: str
        """
        return self._vendor

    @vendor.setter
    def vendor(self, vendor):
        """Sets the vendor of this SasPortalDeviceModel.

        The name of the device vendor.

        :param vendor: The vendor of this SasPortalDeviceModel.
        :type vendor: str
        """

        self._vendor = vendor
