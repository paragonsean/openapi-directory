# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SasPortalDeployment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, frns: List[str]=None, name: str=None, sas_user_ids: List[str]=None):
        """SasPortalDeployment - a model defined in OpenAPI

        :param display_name: The display_name of this SasPortalDeployment.
        :param frns: The frns of this SasPortalDeployment.
        :param name: The name of this SasPortalDeployment.
        :param sas_user_ids: The sas_user_ids of this SasPortalDeployment.
        """
        self.openapi_types = {
            'display_name': str,
            'frns': List[str],
            'name': str,
            'sas_user_ids': List[str]
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'frns': 'frns',
            'name': 'name',
            'sas_user_ids': 'sasUserIds'
        }

        self._display_name = display_name
        self._frns = frns
        self._name = name
        self._sas_user_ids = sas_user_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SasPortalDeployment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SasPortalDeployment of this SasPortalDeployment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this SasPortalDeployment.

        The deployment's display name.

        :return: The display_name of this SasPortalDeployment.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this SasPortalDeployment.

        The deployment's display name.

        :param display_name: The display_name of this SasPortalDeployment.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def frns(self):
        """Gets the frns of this SasPortalDeployment.

        Output only. The FCC Registration Numbers (FRNs) copied from its direct parent.

        :return: The frns of this SasPortalDeployment.
        :rtype: List[str]
        """
        return self._frns

    @frns.setter
    def frns(self, frns):
        """Sets the frns of this SasPortalDeployment.

        Output only. The FCC Registration Numbers (FRNs) copied from its direct parent.

        :param frns: The frns of this SasPortalDeployment.
        :type frns: List[str]
        """

        self._frns = frns

    @property
    def name(self):
        """Gets the name of this SasPortalDeployment.

        Output only. Resource name.

        :return: The name of this SasPortalDeployment.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SasPortalDeployment.

        Output only. Resource name.

        :param name: The name of this SasPortalDeployment.
        :type name: str
        """

        self._name = name

    @property
    def sas_user_ids(self):
        """Gets the sas_user_ids of this SasPortalDeployment.

        User ID used by the devices belonging to this deployment. Each deployment should be associated with one unique user ID.

        :return: The sas_user_ids of this SasPortalDeployment.
        :rtype: List[str]
        """
        return self._sas_user_ids

    @sas_user_ids.setter
    def sas_user_ids(self, sas_user_ids):
        """Sets the sas_user_ids of this SasPortalDeployment.

        User ID used by the devices belonging to this deployment. Each deployment should be associated with one unique user ID.

        :param sas_user_ids: The sas_user_ids of this SasPortalDeployment.
        :type sas_user_ids: List[str]
        """

        self._sas_user_ids = sas_user_ids
