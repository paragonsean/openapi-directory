# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SasPortalNode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, name: str=None, sas_user_ids: List[str]=None):
        """SasPortalNode - a model defined in OpenAPI

        :param display_name: The display_name of this SasPortalNode.
        :param name: The name of this SasPortalNode.
        :param sas_user_ids: The sas_user_ids of this SasPortalNode.
        """
        self.openapi_types = {
            'display_name': str,
            'name': str,
            'sas_user_ids': List[str]
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'name': 'name',
            'sas_user_ids': 'sasUserIds'
        }

        self._display_name = display_name
        self._name = name
        self._sas_user_ids = sas_user_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SasPortalNode':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SasPortalNode of this SasPortalNode.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this SasPortalNode.

        The node's display name.

        :return: The display_name of this SasPortalNode.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this SasPortalNode.

        The node's display name.

        :param display_name: The display_name of this SasPortalNode.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def name(self):
        """Gets the name of this SasPortalNode.

        Output only. Resource name.

        :return: The name of this SasPortalNode.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SasPortalNode.

        Output only. Resource name.

        :param name: The name of this SasPortalNode.
        :type name: str
        """

        self._name = name

    @property
    def sas_user_ids(self):
        """Gets the sas_user_ids of this SasPortalNode.

        User ids used by the devices belonging to this node.

        :return: The sas_user_ids of this SasPortalNode.
        :rtype: List[str]
        """
        return self._sas_user_ids

    @sas_user_ids.setter
    def sas_user_ids(self, sas_user_ids):
        """Sets the sas_user_ids of this SasPortalNode.

        User ids used by the devices belonging to this node.

        :param sas_user_ids: The sas_user_ids of this SasPortalNode.
        :type sas_user_ids: List[str]
        """

        self._sas_user_ids = sas_user_ids
