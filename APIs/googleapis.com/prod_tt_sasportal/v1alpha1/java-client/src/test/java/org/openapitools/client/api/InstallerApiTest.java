/*
 * SAS Portal API (Testing)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.SasPortalGenerateSecretResponse;
import org.openapitools.client.model.SasPortalValidateInstallerRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InstallerApi
 */
@Disabled
public class InstallerApiTest {

    private final InstallerApi api = new InstallerApi();

    /**
     * Generates a secret to be used with the ValidateInstaller.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void prodTtSasportalInstallerGenerateSecretTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        SasPortalGenerateSecretResponse response = api.prodTtSasportalInstallerGenerateSecret($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

    /**
     * Validates the identity of a Certified Professional Installer (CPI).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void prodTtSasportalInstallerValidateTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        SasPortalValidateInstallerRequest sasPortalValidateInstallerRequest = null;
        Object response = api.prodTtSasportalInstallerValidate($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, sasPortalValidateInstallerRequest);
        // TODO: test validations
    }

}
