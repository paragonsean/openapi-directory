/*
 * SAS Portal API (Testing)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.SasPortalListCustomersResponse;
import org.openapitools.client.model.SasPortalListGcpProjectDeploymentsResponse;
import org.openapitools.client.model.SasPortalListLegacyOrganizationsResponse;
import org.openapitools.client.model.SasPortalMigrateOrganizationRequest;
import org.openapitools.client.model.SasPortalOperation;
import org.openapitools.client.model.SasPortalProvisionDeploymentRequest;
import org.openapitools.client.model.SasPortalProvisionDeploymentResponse;
import org.openapitools.client.model.SasPortalSetupSasAnalyticsRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomersApi
 */
@Disabled
public class CustomersApiTest {

    private final CustomersApi api = new CustomersApi();

    /**
     * Returns a list of requested customers.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void prodTtSasportalCustomersListTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        SasPortalListCustomersResponse response = api.prodTtSasportalCustomersList($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Returns a list of SAS deployments associated with current GCP project. Includes whether SAS analytics has been enabled or not.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void prodTtSasportalCustomersListGcpProjectDeploymentsTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        SasPortalListGcpProjectDeploymentsResponse response = api.prodTtSasportalCustomersListGcpProjectDeployments($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Returns a list of legacy organizations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void prodTtSasportalCustomersListLegacyOrganizationsTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        SasPortalListLegacyOrganizationsResponse response = api.prodTtSasportalCustomersListLegacyOrganizations($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Migrates a SAS organization to the cloud. This will create GCP projects for each deployment and associate them. The SAS Organization is linked to the gcp project that called the command. go/sas-legacy-customer-migration
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void prodTtSasportalCustomersMigrateOrganizationTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        SasPortalMigrateOrganizationRequest sasPortalMigrateOrganizationRequest = null;
        SasPortalOperation response = api.prodTtSasportalCustomersMigrateOrganization($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, sasPortalMigrateOrganizationRequest);
        // TODO: test validations
    }

    /**
     * Creates a new SAS deployment through the GCP workflow. Creates a SAS organization if an organization match is not found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void prodTtSasportalCustomersProvisionDeploymentTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        SasPortalProvisionDeploymentRequest sasPortalProvisionDeploymentRequest = null;
        SasPortalProvisionDeploymentResponse response = api.prodTtSasportalCustomersProvisionDeployment($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, sasPortalProvisionDeploymentRequest);
        // TODO: test validations
    }

    /**
     * Setups the a GCP Project to receive SAS Analytics messages via GCP Pub/Sub with a subscription to BigQuery. All the Pub/Sub topics and BigQuery tables are created automatically as part of this service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void prodTtSasportalCustomersSetupSasAnalyticsTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        SasPortalSetupSasAnalyticsRequest sasPortalSetupSasAnalyticsRequest = null;
        SasPortalOperation response = api.prodTtSasportalCustomersSetupSasAnalytics($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, sasPortalSetupSasAnalyticsRequest);
        // TODO: test validations
    }

}
