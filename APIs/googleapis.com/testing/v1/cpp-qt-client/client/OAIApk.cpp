/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApk.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApk::OAIApk(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApk::OAIApk() {
    this->initializeModel();
}

OAIApk::~OAIApk() {}

void OAIApk::initializeModel() {

    m_location_isSet = false;
    m_location_isValid = false;

    m_package_name_isSet = false;
    m_package_name_isValid = false;
}

void OAIApk::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApk::fromJsonObject(QJsonObject json) {

    m_location_isValid = ::OpenAPI::fromJsonValue(m_location, json[QString("location")]);
    m_location_isSet = !json[QString("location")].isNull() && m_location_isValid;

    m_package_name_isValid = ::OpenAPI::fromJsonValue(m_package_name, json[QString("packageName")]);
    m_package_name_isSet = !json[QString("packageName")].isNull() && m_package_name_isValid;
}

QString OAIApk::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApk::asJsonObject() const {
    QJsonObject obj;
    if (m_location.isSet()) {
        obj.insert(QString("location"), ::OpenAPI::toJsonValue(m_location));
    }
    if (m_package_name_isSet) {
        obj.insert(QString("packageName"), ::OpenAPI::toJsonValue(m_package_name));
    }
    return obj;
}

OAIFileReference OAIApk::getLocation() const {
    return m_location;
}
void OAIApk::setLocation(const OAIFileReference &location) {
    m_location = location;
    m_location_isSet = true;
}

bool OAIApk::is_location_Set() const{
    return m_location_isSet;
}

bool OAIApk::is_location_Valid() const{
    return m_location_isValid;
}

QString OAIApk::getPackageName() const {
    return m_package_name;
}
void OAIApk::setPackageName(const QString &package_name) {
    m_package_name = package_name;
    m_package_name_isSet = true;
}

bool OAIApk::is_package_name_Set() const{
    return m_package_name_isSet;
}

bool OAIApk::is_package_name_Valid() const{
    return m_package_name_isValid;
}

bool OAIApk::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_location.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_package_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApk::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
