/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITestSetup.h
 *
 * A description of how to set up the Android device prior to running the test.
 */

#ifndef OAITestSetup_H
#define OAITestSetup_H

#include <QJsonObject>

#include "OAIAccount.h"
#include "OAIApk.h"
#include "OAIDeviceFile.h"
#include "OAIEnvironmentVariable.h"
#include "OAISystraceSetup.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccount;
class OAIApk;
class OAIEnvironmentVariable;
class OAIDeviceFile;
class OAISystraceSetup;

class OAITestSetup : public OAIObject {
public:
    OAITestSetup();
    OAITestSetup(QString json);
    ~OAITestSetup() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAccount getAccount() const;
    void setAccount(const OAIAccount &account);
    bool is_account_Set() const;
    bool is_account_Valid() const;

    QList<OAIApk> getAdditionalApks() const;
    void setAdditionalApks(const QList<OAIApk> &additional_apks);
    bool is_additional_apks_Set() const;
    bool is_additional_apks_Valid() const;

    QList<QString> getDirectoriesToPull() const;
    void setDirectoriesToPull(const QList<QString> &directories_to_pull);
    bool is_directories_to_pull_Set() const;
    bool is_directories_to_pull_Valid() const;

    bool isDontAutograntPermissions() const;
    void setDontAutograntPermissions(const bool &dont_autogrant_permissions);
    bool is_dont_autogrant_permissions_Set() const;
    bool is_dont_autogrant_permissions_Valid() const;

    QList<OAIEnvironmentVariable> getEnvironmentVariables() const;
    void setEnvironmentVariables(const QList<OAIEnvironmentVariable> &environment_variables);
    bool is_environment_variables_Set() const;
    bool is_environment_variables_Valid() const;

    QList<OAIDeviceFile> getFilesToPush() const;
    void setFilesToPush(const QList<OAIDeviceFile> &files_to_push);
    bool is_files_to_push_Set() const;
    bool is_files_to_push_Valid() const;

    QList<OAIApk> getInitialSetupApks() const;
    void setInitialSetupApks(const QList<OAIApk> &initial_setup_apks);
    bool is_initial_setup_apks_Set() const;
    bool is_initial_setup_apks_Valid() const;

    QString getNetworkProfile() const;
    void setNetworkProfile(const QString &network_profile);
    bool is_network_profile_Set() const;
    bool is_network_profile_Valid() const;

    OAISystraceSetup getSystrace() const;
    void setSystrace(const OAISystraceSetup &systrace);
    bool is_systrace_Set() const;
    bool is_systrace_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAccount m_account;
    bool m_account_isSet;
    bool m_account_isValid;

    QList<OAIApk> m_additional_apks;
    bool m_additional_apks_isSet;
    bool m_additional_apks_isValid;

    QList<QString> m_directories_to_pull;
    bool m_directories_to_pull_isSet;
    bool m_directories_to_pull_isValid;

    bool m_dont_autogrant_permissions;
    bool m_dont_autogrant_permissions_isSet;
    bool m_dont_autogrant_permissions_isValid;

    QList<OAIEnvironmentVariable> m_environment_variables;
    bool m_environment_variables_isSet;
    bool m_environment_variables_isValid;

    QList<OAIDeviceFile> m_files_to_push;
    bool m_files_to_push_isSet;
    bool m_files_to_push_isValid;

    QList<OAIApk> m_initial_setup_apks;
    bool m_initial_setup_apks_isSet;
    bool m_initial_setup_apks_isValid;

    QString m_network_profile;
    bool m_network_profile_isSet;
    bool m_network_profile_isValid;

    OAISystraceSetup m_systrace;
    bool m_systrace_isSet;
    bool m_systrace_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITestSetup)

#endif // OAITestSetup_H
