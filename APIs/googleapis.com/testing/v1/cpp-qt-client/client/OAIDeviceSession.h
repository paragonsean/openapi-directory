/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeviceSession.h
 *
 * Protobuf message describing the device message, used from several RPCs.
 */

#ifndef OAIDeviceSession_H
#define OAIDeviceSession_H

#include <QJsonObject>

#include "OAIAndroidDevice.h"
#include "OAISessionStateEvent.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAndroidDevice;
class OAISessionStateEvent;

class OAIDeviceSession : public OAIObject {
public:
    OAIDeviceSession();
    OAIDeviceSession(QString json);
    ~OAIDeviceSession() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActiveStartTime() const;
    void setActiveStartTime(const QString &active_start_time);
    bool is_active_start_time_Set() const;
    bool is_active_start_time_Valid() const;

    OAIAndroidDevice getAndroidDevice() const;
    void setAndroidDevice(const OAIAndroidDevice &android_device);
    bool is_android_device_Set() const;
    bool is_android_device_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getExpireTime() const;
    void setExpireTime(const QString &expire_time);
    bool is_expire_time_Set() const;
    bool is_expire_time_Valid() const;

    QString getInactivityTimeout() const;
    void setInactivityTimeout(const QString &inactivity_timeout);
    bool is_inactivity_timeout_Set() const;
    bool is_inactivity_timeout_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QList<OAISessionStateEvent> getStateHistories() const;
    void setStateHistories(const QList<OAISessionStateEvent> &state_histories);
    bool is_state_histories_Set() const;
    bool is_state_histories_Valid() const;

    QString getTtl() const;
    void setTtl(const QString &ttl);
    bool is_ttl_Set() const;
    bool is_ttl_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_active_start_time;
    bool m_active_start_time_isSet;
    bool m_active_start_time_isValid;

    OAIAndroidDevice m_android_device;
    bool m_android_device_isSet;
    bool m_android_device_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_expire_time;
    bool m_expire_time_isSet;
    bool m_expire_time_isValid;

    QString m_inactivity_timeout;
    bool m_inactivity_timeout_isSet;
    bool m_inactivity_timeout_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QList<OAISessionStateEvent> m_state_histories;
    bool m_state_histories_isSet;
    bool m_state_histories_isValid;

    QString m_ttl;
    bool m_ttl_isSet;
    bool m_ttl_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeviceSession)

#endif // OAIDeviceSession_H
