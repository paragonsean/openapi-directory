/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFileReference.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFileReference::OAIFileReference(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFileReference::OAIFileReference() {
    this->initializeModel();
}

OAIFileReference::~OAIFileReference() {}

void OAIFileReference::initializeModel() {

    m_gcs_path_isSet = false;
    m_gcs_path_isValid = false;
}

void OAIFileReference::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFileReference::fromJsonObject(QJsonObject json) {

    m_gcs_path_isValid = ::OpenAPI::fromJsonValue(m_gcs_path, json[QString("gcsPath")]);
    m_gcs_path_isSet = !json[QString("gcsPath")].isNull() && m_gcs_path_isValid;
}

QString OAIFileReference::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFileReference::asJsonObject() const {
    QJsonObject obj;
    if (m_gcs_path_isSet) {
        obj.insert(QString("gcsPath"), ::OpenAPI::toJsonValue(m_gcs_path));
    }
    return obj;
}

QString OAIFileReference::getGcsPath() const {
    return m_gcs_path;
}
void OAIFileReference::setGcsPath(const QString &gcs_path) {
    m_gcs_path = gcs_path;
    m_gcs_path_isSet = true;
}

bool OAIFileReference::is_gcs_path_Set() const{
    return m_gcs_path_isSet;
}

bool OAIFileReference::is_gcs_path_Valid() const{
    return m_gcs_path_isValid;
}

bool OAIFileReference::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_gcs_path_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFileReference::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
