/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIosDeviceList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIosDeviceList::OAIIosDeviceList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIosDeviceList::OAIIosDeviceList() {
    this->initializeModel();
}

OAIIosDeviceList::~OAIIosDeviceList() {}

void OAIIosDeviceList::initializeModel() {

    m_ios_devices_isSet = false;
    m_ios_devices_isValid = false;
}

void OAIIosDeviceList::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIosDeviceList::fromJsonObject(QJsonObject json) {

    m_ios_devices_isValid = ::OpenAPI::fromJsonValue(m_ios_devices, json[QString("iosDevices")]);
    m_ios_devices_isSet = !json[QString("iosDevices")].isNull() && m_ios_devices_isValid;
}

QString OAIIosDeviceList::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIosDeviceList::asJsonObject() const {
    QJsonObject obj;
    if (m_ios_devices.size() > 0) {
        obj.insert(QString("iosDevices"), ::OpenAPI::toJsonValue(m_ios_devices));
    }
    return obj;
}

QList<OAIIosDevice> OAIIosDeviceList::getIosDevices() const {
    return m_ios_devices;
}
void OAIIosDeviceList::setIosDevices(const QList<OAIIosDevice> &ios_devices) {
    m_ios_devices = ios_devices;
    m_ios_devices_isSet = true;
}

bool OAIIosDeviceList::is_ios_devices_Set() const{
    return m_ios_devices_isSet;
}

bool OAIIosDeviceList::is_ios_devices_Valid() const{
    return m_ios_devices_isValid;
}

bool OAIIosDeviceList::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ios_devices.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIosDeviceList::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
