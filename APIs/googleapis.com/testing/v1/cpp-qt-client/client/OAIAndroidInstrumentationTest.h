/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAndroidInstrumentationTest.h
 *
 * A test of an Android application that can control an Android component independently of its normal lifecycle. Android instrumentation tests run an application APK and test APK inside the same process on a virtual or physical AndroidDevice. They also specify a test runner class, such as com.google.GoogleTestRunner, which can vary on the specific instrumentation framework chosen. See for more information on types of Android tests.
 */

#ifndef OAIAndroidInstrumentationTest_H
#define OAIAndroidInstrumentationTest_H

#include <QJsonObject>

#include "OAIAppBundle.h"
#include "OAIFileReference.h"
#include "OAIShardingOption.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFileReference;
class OAIAppBundle;
class OAIShardingOption;

class OAIAndroidInstrumentationTest : public OAIObject {
public:
    OAIAndroidInstrumentationTest();
    OAIAndroidInstrumentationTest(QString json);
    ~OAIAndroidInstrumentationTest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFileReference getAppApk() const;
    void setAppApk(const OAIFileReference &app_apk);
    bool is_app_apk_Set() const;
    bool is_app_apk_Valid() const;

    OAIAppBundle getAppBundle() const;
    void setAppBundle(const OAIAppBundle &app_bundle);
    bool is_app_bundle_Set() const;
    bool is_app_bundle_Valid() const;

    QString getAppPackageId() const;
    void setAppPackageId(const QString &app_package_id);
    bool is_app_package_id_Set() const;
    bool is_app_package_id_Valid() const;

    QString getOrchestratorOption() const;
    void setOrchestratorOption(const QString &orchestrator_option);
    bool is_orchestrator_option_Set() const;
    bool is_orchestrator_option_Valid() const;

    OAIShardingOption getShardingOption() const;
    void setShardingOption(const OAIShardingOption &sharding_option);
    bool is_sharding_option_Set() const;
    bool is_sharding_option_Valid() const;

    OAIFileReference getTestApk() const;
    void setTestApk(const OAIFileReference &test_apk);
    bool is_test_apk_Set() const;
    bool is_test_apk_Valid() const;

    QString getTestPackageId() const;
    void setTestPackageId(const QString &test_package_id);
    bool is_test_package_id_Set() const;
    bool is_test_package_id_Valid() const;

    QString getTestRunnerClass() const;
    void setTestRunnerClass(const QString &test_runner_class);
    bool is_test_runner_class_Set() const;
    bool is_test_runner_class_Valid() const;

    QList<QString> getTestTargets() const;
    void setTestTargets(const QList<QString> &test_targets);
    bool is_test_targets_Set() const;
    bool is_test_targets_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFileReference m_app_apk;
    bool m_app_apk_isSet;
    bool m_app_apk_isValid;

    OAIAppBundle m_app_bundle;
    bool m_app_bundle_isSet;
    bool m_app_bundle_isValid;

    QString m_app_package_id;
    bool m_app_package_id_isSet;
    bool m_app_package_id_isValid;

    QString m_orchestrator_option;
    bool m_orchestrator_option_isSet;
    bool m_orchestrator_option_isValid;

    OAIShardingOption m_sharding_option;
    bool m_sharding_option_isSet;
    bool m_sharding_option_isValid;

    OAIFileReference m_test_apk;
    bool m_test_apk_isSet;
    bool m_test_apk_isValid;

    QString m_test_package_id;
    bool m_test_package_id_isSet;
    bool m_test_package_id_isValid;

    QString m_test_runner_class;
    bool m_test_runner_class_isSet;
    bool m_test_runner_class_isValid;

    QList<QString> m_test_targets;
    bool m_test_targets_isSet;
    bool m_test_targets_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAndroidInstrumentationTest)

#endif // OAIAndroidInstrumentationTest_H
