/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeviceFile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeviceFile::OAIDeviceFile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeviceFile::OAIDeviceFile() {
    this->initializeModel();
}

OAIDeviceFile::~OAIDeviceFile() {}

void OAIDeviceFile::initializeModel() {

    m_obb_file_isSet = false;
    m_obb_file_isValid = false;

    m_regular_file_isSet = false;
    m_regular_file_isValid = false;
}

void OAIDeviceFile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeviceFile::fromJsonObject(QJsonObject json) {

    m_obb_file_isValid = ::OpenAPI::fromJsonValue(m_obb_file, json[QString("obbFile")]);
    m_obb_file_isSet = !json[QString("obbFile")].isNull() && m_obb_file_isValid;

    m_regular_file_isValid = ::OpenAPI::fromJsonValue(m_regular_file, json[QString("regularFile")]);
    m_regular_file_isSet = !json[QString("regularFile")].isNull() && m_regular_file_isValid;
}

QString OAIDeviceFile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeviceFile::asJsonObject() const {
    QJsonObject obj;
    if (m_obb_file.isSet()) {
        obj.insert(QString("obbFile"), ::OpenAPI::toJsonValue(m_obb_file));
    }
    if (m_regular_file.isSet()) {
        obj.insert(QString("regularFile"), ::OpenAPI::toJsonValue(m_regular_file));
    }
    return obj;
}

OAIObbFile OAIDeviceFile::getObbFile() const {
    return m_obb_file;
}
void OAIDeviceFile::setObbFile(const OAIObbFile &obb_file) {
    m_obb_file = obb_file;
    m_obb_file_isSet = true;
}

bool OAIDeviceFile::is_obb_file_Set() const{
    return m_obb_file_isSet;
}

bool OAIDeviceFile::is_obb_file_Valid() const{
    return m_obb_file_isValid;
}

OAIRegularFile OAIDeviceFile::getRegularFile() const {
    return m_regular_file;
}
void OAIDeviceFile::setRegularFile(const OAIRegularFile &regular_file) {
    m_regular_file = regular_file;
    m_regular_file_isSet = true;
}

bool OAIDeviceFile::is_regular_file_Set() const{
    return m_regular_file_isSet;
}

bool OAIDeviceFile::is_regular_file_Valid() const{
    return m_regular_file_isValid;
}

bool OAIDeviceFile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_obb_file.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_regular_file.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeviceFile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
