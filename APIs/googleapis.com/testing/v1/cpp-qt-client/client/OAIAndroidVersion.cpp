/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAndroidVersion.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAndroidVersion::OAIAndroidVersion(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAndroidVersion::OAIAndroidVersion() {
    this->initializeModel();
}

OAIAndroidVersion::~OAIAndroidVersion() {}

void OAIAndroidVersion::initializeModel() {

    m_api_level_isSet = false;
    m_api_level_isValid = false;

    m_code_name_isSet = false;
    m_code_name_isValid = false;

    m_distribution_isSet = false;
    m_distribution_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_release_date_isSet = false;
    m_release_date_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_version_string_isSet = false;
    m_version_string_isValid = false;
}

void OAIAndroidVersion::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAndroidVersion::fromJsonObject(QJsonObject json) {

    m_api_level_isValid = ::OpenAPI::fromJsonValue(m_api_level, json[QString("apiLevel")]);
    m_api_level_isSet = !json[QString("apiLevel")].isNull() && m_api_level_isValid;

    m_code_name_isValid = ::OpenAPI::fromJsonValue(m_code_name, json[QString("codeName")]);
    m_code_name_isSet = !json[QString("codeName")].isNull() && m_code_name_isValid;

    m_distribution_isValid = ::OpenAPI::fromJsonValue(m_distribution, json[QString("distribution")]);
    m_distribution_isSet = !json[QString("distribution")].isNull() && m_distribution_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_release_date_isValid = ::OpenAPI::fromJsonValue(m_release_date, json[QString("releaseDate")]);
    m_release_date_isSet = !json[QString("releaseDate")].isNull() && m_release_date_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;

    m_version_string_isValid = ::OpenAPI::fromJsonValue(m_version_string, json[QString("versionString")]);
    m_version_string_isSet = !json[QString("versionString")].isNull() && m_version_string_isValid;
}

QString OAIAndroidVersion::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAndroidVersion::asJsonObject() const {
    QJsonObject obj;
    if (m_api_level_isSet) {
        obj.insert(QString("apiLevel"), ::OpenAPI::toJsonValue(m_api_level));
    }
    if (m_code_name_isSet) {
        obj.insert(QString("codeName"), ::OpenAPI::toJsonValue(m_code_name));
    }
    if (m_distribution.isSet()) {
        obj.insert(QString("distribution"), ::OpenAPI::toJsonValue(m_distribution));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_release_date.isSet()) {
        obj.insert(QString("releaseDate"), ::OpenAPI::toJsonValue(m_release_date));
    }
    if (m_tags.size() > 0) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_version_string_isSet) {
        obj.insert(QString("versionString"), ::OpenAPI::toJsonValue(m_version_string));
    }
    return obj;
}

qint32 OAIAndroidVersion::getApiLevel() const {
    return m_api_level;
}
void OAIAndroidVersion::setApiLevel(const qint32 &api_level) {
    m_api_level = api_level;
    m_api_level_isSet = true;
}

bool OAIAndroidVersion::is_api_level_Set() const{
    return m_api_level_isSet;
}

bool OAIAndroidVersion::is_api_level_Valid() const{
    return m_api_level_isValid;
}

QString OAIAndroidVersion::getCodeName() const {
    return m_code_name;
}
void OAIAndroidVersion::setCodeName(const QString &code_name) {
    m_code_name = code_name;
    m_code_name_isSet = true;
}

bool OAIAndroidVersion::is_code_name_Set() const{
    return m_code_name_isSet;
}

bool OAIAndroidVersion::is_code_name_Valid() const{
    return m_code_name_isValid;
}

OAIDistribution OAIAndroidVersion::getDistribution() const {
    return m_distribution;
}
void OAIAndroidVersion::setDistribution(const OAIDistribution &distribution) {
    m_distribution = distribution;
    m_distribution_isSet = true;
}

bool OAIAndroidVersion::is_distribution_Set() const{
    return m_distribution_isSet;
}

bool OAIAndroidVersion::is_distribution_Valid() const{
    return m_distribution_isValid;
}

QString OAIAndroidVersion::getId() const {
    return m_id;
}
void OAIAndroidVersion::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIAndroidVersion::is_id_Set() const{
    return m_id_isSet;
}

bool OAIAndroidVersion::is_id_Valid() const{
    return m_id_isValid;
}

OAIDate OAIAndroidVersion::getReleaseDate() const {
    return m_release_date;
}
void OAIAndroidVersion::setReleaseDate(const OAIDate &release_date) {
    m_release_date = release_date;
    m_release_date_isSet = true;
}

bool OAIAndroidVersion::is_release_date_Set() const{
    return m_release_date_isSet;
}

bool OAIAndroidVersion::is_release_date_Valid() const{
    return m_release_date_isValid;
}

QList<QString> OAIAndroidVersion::getTags() const {
    return m_tags;
}
void OAIAndroidVersion::setTags(const QList<QString> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIAndroidVersion::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIAndroidVersion::is_tags_Valid() const{
    return m_tags_isValid;
}

QString OAIAndroidVersion::getVersionString() const {
    return m_version_string;
}
void OAIAndroidVersion::setVersionString(const QString &version_string) {
    m_version_string = version_string;
    m_version_string_isSet = true;
}

bool OAIAndroidVersion::is_version_string_Set() const{
    return m_version_string_isSet;
}

bool OAIAndroidVersion::is_version_string_Valid() const{
    return m_version_string_isValid;
}

bool OAIAndroidVersion::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_api_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_code_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_distribution.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_release_date.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_string_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAndroidVersion::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
