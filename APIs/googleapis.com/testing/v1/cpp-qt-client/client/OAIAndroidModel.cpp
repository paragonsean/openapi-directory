/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAndroidModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAndroidModel::OAIAndroidModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAndroidModel::OAIAndroidModel() {
    this->initializeModel();
}

OAIAndroidModel::~OAIAndroidModel() {}

void OAIAndroidModel::initializeModel() {

    m_brand_isSet = false;
    m_brand_isValid = false;

    m_codename_isSet = false;
    m_codename_isValid = false;

    m_form_isSet = false;
    m_form_isValid = false;

    m_form_factor_isSet = false;
    m_form_factor_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_low_fps_video_recording_isSet = false;
    m_low_fps_video_recording_isValid = false;

    m_manufacturer_isSet = false;
    m_manufacturer_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_per_version_info_isSet = false;
    m_per_version_info_isValid = false;

    m_screen_density_isSet = false;
    m_screen_density_isValid = false;

    m_screen_x_isSet = false;
    m_screen_x_isValid = false;

    m_screen_y_isSet = false;
    m_screen_y_isValid = false;

    m_supported_abis_isSet = false;
    m_supported_abis_isValid = false;

    m_supported_version_ids_isSet = false;
    m_supported_version_ids_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_thumbnail_url_isSet = false;
    m_thumbnail_url_isValid = false;
}

void OAIAndroidModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAndroidModel::fromJsonObject(QJsonObject json) {

    m_brand_isValid = ::OpenAPI::fromJsonValue(m_brand, json[QString("brand")]);
    m_brand_isSet = !json[QString("brand")].isNull() && m_brand_isValid;

    m_codename_isValid = ::OpenAPI::fromJsonValue(m_codename, json[QString("codename")]);
    m_codename_isSet = !json[QString("codename")].isNull() && m_codename_isValid;

    m_form_isValid = ::OpenAPI::fromJsonValue(m_form, json[QString("form")]);
    m_form_isSet = !json[QString("form")].isNull() && m_form_isValid;

    m_form_factor_isValid = ::OpenAPI::fromJsonValue(m_form_factor, json[QString("formFactor")]);
    m_form_factor_isSet = !json[QString("formFactor")].isNull() && m_form_factor_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_low_fps_video_recording_isValid = ::OpenAPI::fromJsonValue(m_low_fps_video_recording, json[QString("lowFpsVideoRecording")]);
    m_low_fps_video_recording_isSet = !json[QString("lowFpsVideoRecording")].isNull() && m_low_fps_video_recording_isValid;

    m_manufacturer_isValid = ::OpenAPI::fromJsonValue(m_manufacturer, json[QString("manufacturer")]);
    m_manufacturer_isSet = !json[QString("manufacturer")].isNull() && m_manufacturer_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_per_version_info_isValid = ::OpenAPI::fromJsonValue(m_per_version_info, json[QString("perVersionInfo")]);
    m_per_version_info_isSet = !json[QString("perVersionInfo")].isNull() && m_per_version_info_isValid;

    m_screen_density_isValid = ::OpenAPI::fromJsonValue(m_screen_density, json[QString("screenDensity")]);
    m_screen_density_isSet = !json[QString("screenDensity")].isNull() && m_screen_density_isValid;

    m_screen_x_isValid = ::OpenAPI::fromJsonValue(m_screen_x, json[QString("screenX")]);
    m_screen_x_isSet = !json[QString("screenX")].isNull() && m_screen_x_isValid;

    m_screen_y_isValid = ::OpenAPI::fromJsonValue(m_screen_y, json[QString("screenY")]);
    m_screen_y_isSet = !json[QString("screenY")].isNull() && m_screen_y_isValid;

    m_supported_abis_isValid = ::OpenAPI::fromJsonValue(m_supported_abis, json[QString("supportedAbis")]);
    m_supported_abis_isSet = !json[QString("supportedAbis")].isNull() && m_supported_abis_isValid;

    m_supported_version_ids_isValid = ::OpenAPI::fromJsonValue(m_supported_version_ids, json[QString("supportedVersionIds")]);
    m_supported_version_ids_isSet = !json[QString("supportedVersionIds")].isNull() && m_supported_version_ids_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;

    m_thumbnail_url_isValid = ::OpenAPI::fromJsonValue(m_thumbnail_url, json[QString("thumbnailUrl")]);
    m_thumbnail_url_isSet = !json[QString("thumbnailUrl")].isNull() && m_thumbnail_url_isValid;
}

QString OAIAndroidModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAndroidModel::asJsonObject() const {
    QJsonObject obj;
    if (m_brand_isSet) {
        obj.insert(QString("brand"), ::OpenAPI::toJsonValue(m_brand));
    }
    if (m_codename_isSet) {
        obj.insert(QString("codename"), ::OpenAPI::toJsonValue(m_codename));
    }
    if (m_form_isSet) {
        obj.insert(QString("form"), ::OpenAPI::toJsonValue(m_form));
    }
    if (m_form_factor_isSet) {
        obj.insert(QString("formFactor"), ::OpenAPI::toJsonValue(m_form_factor));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_low_fps_video_recording_isSet) {
        obj.insert(QString("lowFpsVideoRecording"), ::OpenAPI::toJsonValue(m_low_fps_video_recording));
    }
    if (m_manufacturer_isSet) {
        obj.insert(QString("manufacturer"), ::OpenAPI::toJsonValue(m_manufacturer));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_per_version_info.size() > 0) {
        obj.insert(QString("perVersionInfo"), ::OpenAPI::toJsonValue(m_per_version_info));
    }
    if (m_screen_density_isSet) {
        obj.insert(QString("screenDensity"), ::OpenAPI::toJsonValue(m_screen_density));
    }
    if (m_screen_x_isSet) {
        obj.insert(QString("screenX"), ::OpenAPI::toJsonValue(m_screen_x));
    }
    if (m_screen_y_isSet) {
        obj.insert(QString("screenY"), ::OpenAPI::toJsonValue(m_screen_y));
    }
    if (m_supported_abis.size() > 0) {
        obj.insert(QString("supportedAbis"), ::OpenAPI::toJsonValue(m_supported_abis));
    }
    if (m_supported_version_ids.size() > 0) {
        obj.insert(QString("supportedVersionIds"), ::OpenAPI::toJsonValue(m_supported_version_ids));
    }
    if (m_tags.size() > 0) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_thumbnail_url_isSet) {
        obj.insert(QString("thumbnailUrl"), ::OpenAPI::toJsonValue(m_thumbnail_url));
    }
    return obj;
}

QString OAIAndroidModel::getBrand() const {
    return m_brand;
}
void OAIAndroidModel::setBrand(const QString &brand) {
    m_brand = brand;
    m_brand_isSet = true;
}

bool OAIAndroidModel::is_brand_Set() const{
    return m_brand_isSet;
}

bool OAIAndroidModel::is_brand_Valid() const{
    return m_brand_isValid;
}

QString OAIAndroidModel::getCodename() const {
    return m_codename;
}
void OAIAndroidModel::setCodename(const QString &codename) {
    m_codename = codename;
    m_codename_isSet = true;
}

bool OAIAndroidModel::is_codename_Set() const{
    return m_codename_isSet;
}

bool OAIAndroidModel::is_codename_Valid() const{
    return m_codename_isValid;
}

QString OAIAndroidModel::getForm() const {
    return m_form;
}
void OAIAndroidModel::setForm(const QString &form) {
    m_form = form;
    m_form_isSet = true;
}

bool OAIAndroidModel::is_form_Set() const{
    return m_form_isSet;
}

bool OAIAndroidModel::is_form_Valid() const{
    return m_form_isValid;
}

QString OAIAndroidModel::getFormFactor() const {
    return m_form_factor;
}
void OAIAndroidModel::setFormFactor(const QString &form_factor) {
    m_form_factor = form_factor;
    m_form_factor_isSet = true;
}

bool OAIAndroidModel::is_form_factor_Set() const{
    return m_form_factor_isSet;
}

bool OAIAndroidModel::is_form_factor_Valid() const{
    return m_form_factor_isValid;
}

QString OAIAndroidModel::getId() const {
    return m_id;
}
void OAIAndroidModel::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIAndroidModel::is_id_Set() const{
    return m_id_isSet;
}

bool OAIAndroidModel::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIAndroidModel::isLowFpsVideoRecording() const {
    return m_low_fps_video_recording;
}
void OAIAndroidModel::setLowFpsVideoRecording(const bool &low_fps_video_recording) {
    m_low_fps_video_recording = low_fps_video_recording;
    m_low_fps_video_recording_isSet = true;
}

bool OAIAndroidModel::is_low_fps_video_recording_Set() const{
    return m_low_fps_video_recording_isSet;
}

bool OAIAndroidModel::is_low_fps_video_recording_Valid() const{
    return m_low_fps_video_recording_isValid;
}

QString OAIAndroidModel::getManufacturer() const {
    return m_manufacturer;
}
void OAIAndroidModel::setManufacturer(const QString &manufacturer) {
    m_manufacturer = manufacturer;
    m_manufacturer_isSet = true;
}

bool OAIAndroidModel::is_manufacturer_Set() const{
    return m_manufacturer_isSet;
}

bool OAIAndroidModel::is_manufacturer_Valid() const{
    return m_manufacturer_isValid;
}

QString OAIAndroidModel::getName() const {
    return m_name;
}
void OAIAndroidModel::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAndroidModel::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAndroidModel::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIPerAndroidVersionInfo> OAIAndroidModel::getPerVersionInfo() const {
    return m_per_version_info;
}
void OAIAndroidModel::setPerVersionInfo(const QList<OAIPerAndroidVersionInfo> &per_version_info) {
    m_per_version_info = per_version_info;
    m_per_version_info_isSet = true;
}

bool OAIAndroidModel::is_per_version_info_Set() const{
    return m_per_version_info_isSet;
}

bool OAIAndroidModel::is_per_version_info_Valid() const{
    return m_per_version_info_isValid;
}

qint32 OAIAndroidModel::getScreenDensity() const {
    return m_screen_density;
}
void OAIAndroidModel::setScreenDensity(const qint32 &screen_density) {
    m_screen_density = screen_density;
    m_screen_density_isSet = true;
}

bool OAIAndroidModel::is_screen_density_Set() const{
    return m_screen_density_isSet;
}

bool OAIAndroidModel::is_screen_density_Valid() const{
    return m_screen_density_isValid;
}

qint32 OAIAndroidModel::getScreenX() const {
    return m_screen_x;
}
void OAIAndroidModel::setScreenX(const qint32 &screen_x) {
    m_screen_x = screen_x;
    m_screen_x_isSet = true;
}

bool OAIAndroidModel::is_screen_x_Set() const{
    return m_screen_x_isSet;
}

bool OAIAndroidModel::is_screen_x_Valid() const{
    return m_screen_x_isValid;
}

qint32 OAIAndroidModel::getScreenY() const {
    return m_screen_y;
}
void OAIAndroidModel::setScreenY(const qint32 &screen_y) {
    m_screen_y = screen_y;
    m_screen_y_isSet = true;
}

bool OAIAndroidModel::is_screen_y_Set() const{
    return m_screen_y_isSet;
}

bool OAIAndroidModel::is_screen_y_Valid() const{
    return m_screen_y_isValid;
}

QList<QString> OAIAndroidModel::getSupportedAbis() const {
    return m_supported_abis;
}
void OAIAndroidModel::setSupportedAbis(const QList<QString> &supported_abis) {
    m_supported_abis = supported_abis;
    m_supported_abis_isSet = true;
}

bool OAIAndroidModel::is_supported_abis_Set() const{
    return m_supported_abis_isSet;
}

bool OAIAndroidModel::is_supported_abis_Valid() const{
    return m_supported_abis_isValid;
}

QList<QString> OAIAndroidModel::getSupportedVersionIds() const {
    return m_supported_version_ids;
}
void OAIAndroidModel::setSupportedVersionIds(const QList<QString> &supported_version_ids) {
    m_supported_version_ids = supported_version_ids;
    m_supported_version_ids_isSet = true;
}

bool OAIAndroidModel::is_supported_version_ids_Set() const{
    return m_supported_version_ids_isSet;
}

bool OAIAndroidModel::is_supported_version_ids_Valid() const{
    return m_supported_version_ids_isValid;
}

QList<QString> OAIAndroidModel::getTags() const {
    return m_tags;
}
void OAIAndroidModel::setTags(const QList<QString> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIAndroidModel::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIAndroidModel::is_tags_Valid() const{
    return m_tags_isValid;
}

QString OAIAndroidModel::getThumbnailUrl() const {
    return m_thumbnail_url;
}
void OAIAndroidModel::setThumbnailUrl(const QString &thumbnail_url) {
    m_thumbnail_url = thumbnail_url;
    m_thumbnail_url_isSet = true;
}

bool OAIAndroidModel::is_thumbnail_url_Set() const{
    return m_thumbnail_url_isSet;
}

bool OAIAndroidModel::is_thumbnail_url_Valid() const{
    return m_thumbnail_url_isValid;
}

bool OAIAndroidModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_brand_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_codename_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_form_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_form_factor_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_low_fps_video_recording_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_manufacturer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_per_version_info.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_screen_density_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_screen_x_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_screen_y_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_supported_abis.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_supported_version_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_thumbnail_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAndroidModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
