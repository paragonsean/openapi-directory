/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISmartSharding.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISmartSharding::OAISmartSharding(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISmartSharding::OAISmartSharding() {
    this->initializeModel();
}

OAISmartSharding::~OAISmartSharding() {}

void OAISmartSharding::initializeModel() {

    m_targeted_shard_duration_isSet = false;
    m_targeted_shard_duration_isValid = false;
}

void OAISmartSharding::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISmartSharding::fromJsonObject(QJsonObject json) {

    m_targeted_shard_duration_isValid = ::OpenAPI::fromJsonValue(m_targeted_shard_duration, json[QString("targetedShardDuration")]);
    m_targeted_shard_duration_isSet = !json[QString("targetedShardDuration")].isNull() && m_targeted_shard_duration_isValid;
}

QString OAISmartSharding::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISmartSharding::asJsonObject() const {
    QJsonObject obj;
    if (m_targeted_shard_duration_isSet) {
        obj.insert(QString("targetedShardDuration"), ::OpenAPI::toJsonValue(m_targeted_shard_duration));
    }
    return obj;
}

QString OAISmartSharding::getTargetedShardDuration() const {
    return m_targeted_shard_duration;
}
void OAISmartSharding::setTargetedShardDuration(const QString &targeted_shard_duration) {
    m_targeted_shard_duration = targeted_shard_duration;
    m_targeted_shard_duration_isSet = true;
}

bool OAISmartSharding::is_targeted_shard_duration_Set() const{
    return m_targeted_shard_duration_isSet;
}

bool OAISmartSharding::is_targeted_shard_duration_Valid() const{
    return m_targeted_shard_duration_isValid;
}

bool OAISmartSharding::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_targeted_shard_duration_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISmartSharding::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
