/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAndroidDeviceCatalog.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAndroidDeviceCatalog::OAIAndroidDeviceCatalog(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAndroidDeviceCatalog::OAIAndroidDeviceCatalog() {
    this->initializeModel();
}

OAIAndroidDeviceCatalog::~OAIAndroidDeviceCatalog() {}

void OAIAndroidDeviceCatalog::initializeModel() {

    m_models_isSet = false;
    m_models_isValid = false;

    m_runtime_configuration_isSet = false;
    m_runtime_configuration_isValid = false;

    m_versions_isSet = false;
    m_versions_isValid = false;
}

void OAIAndroidDeviceCatalog::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAndroidDeviceCatalog::fromJsonObject(QJsonObject json) {

    m_models_isValid = ::OpenAPI::fromJsonValue(m_models, json[QString("models")]);
    m_models_isSet = !json[QString("models")].isNull() && m_models_isValid;

    m_runtime_configuration_isValid = ::OpenAPI::fromJsonValue(m_runtime_configuration, json[QString("runtimeConfiguration")]);
    m_runtime_configuration_isSet = !json[QString("runtimeConfiguration")].isNull() && m_runtime_configuration_isValid;

    m_versions_isValid = ::OpenAPI::fromJsonValue(m_versions, json[QString("versions")]);
    m_versions_isSet = !json[QString("versions")].isNull() && m_versions_isValid;
}

QString OAIAndroidDeviceCatalog::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAndroidDeviceCatalog::asJsonObject() const {
    QJsonObject obj;
    if (m_models.size() > 0) {
        obj.insert(QString("models"), ::OpenAPI::toJsonValue(m_models));
    }
    if (m_runtime_configuration.isSet()) {
        obj.insert(QString("runtimeConfiguration"), ::OpenAPI::toJsonValue(m_runtime_configuration));
    }
    if (m_versions.size() > 0) {
        obj.insert(QString("versions"), ::OpenAPI::toJsonValue(m_versions));
    }
    return obj;
}

QList<OAIAndroidModel> OAIAndroidDeviceCatalog::getModels() const {
    return m_models;
}
void OAIAndroidDeviceCatalog::setModels(const QList<OAIAndroidModel> &models) {
    m_models = models;
    m_models_isSet = true;
}

bool OAIAndroidDeviceCatalog::is_models_Set() const{
    return m_models_isSet;
}

bool OAIAndroidDeviceCatalog::is_models_Valid() const{
    return m_models_isValid;
}

OAIAndroidRuntimeConfiguration OAIAndroidDeviceCatalog::getRuntimeConfiguration() const {
    return m_runtime_configuration;
}
void OAIAndroidDeviceCatalog::setRuntimeConfiguration(const OAIAndroidRuntimeConfiguration &runtime_configuration) {
    m_runtime_configuration = runtime_configuration;
    m_runtime_configuration_isSet = true;
}

bool OAIAndroidDeviceCatalog::is_runtime_configuration_Set() const{
    return m_runtime_configuration_isSet;
}

bool OAIAndroidDeviceCatalog::is_runtime_configuration_Valid() const{
    return m_runtime_configuration_isValid;
}

QList<OAIAndroidVersion> OAIAndroidDeviceCatalog::getVersions() const {
    return m_versions;
}
void OAIAndroidDeviceCatalog::setVersions(const QList<OAIAndroidVersion> &versions) {
    m_versions = versions;
    m_versions_isSet = true;
}

bool OAIAndroidDeviceCatalog::is_versions_Set() const{
    return m_versions_isSet;
}

bool OAIAndroidDeviceCatalog::is_versions_Valid() const{
    return m_versions_isValid;
}

bool OAIAndroidDeviceCatalog::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_models.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_runtime_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_versions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAndroidDeviceCatalog::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
