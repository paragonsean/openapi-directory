/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApkManifest.h
 *
 * An Android app manifest. See http://developer.android.com/guide/topics/manifest/manifest-intro.html
 */

#ifndef OAIApkManifest_H
#define OAIApkManifest_H

#include <QJsonObject>

#include "OAIIntentFilter.h"
#include "OAIMetadata.h"
#include "OAIService.h"
#include "OAIUsesFeature.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIntentFilter;
class OAIMetadata;
class OAIService;
class OAIUsesFeature;

class OAIApkManifest : public OAIObject {
public:
    OAIApkManifest();
    OAIApkManifest(QString json);
    ~OAIApkManifest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationLabel() const;
    void setApplicationLabel(const QString &application_label);
    bool is_application_label_Set() const;
    bool is_application_label_Valid() const;

    QList<OAIIntentFilter> getIntentFilters() const;
    void setIntentFilters(const QList<OAIIntentFilter> &intent_filters);
    bool is_intent_filters_Set() const;
    bool is_intent_filters_Valid() const;

    qint32 getMaxSdkVersion() const;
    void setMaxSdkVersion(const qint32 &max_sdk_version);
    bool is_max_sdk_version_Set() const;
    bool is_max_sdk_version_Valid() const;

    QList<OAIMetadata> getMetadata() const;
    void setMetadata(const QList<OAIMetadata> &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    qint32 getMinSdkVersion() const;
    void setMinSdkVersion(const qint32 &min_sdk_version);
    bool is_min_sdk_version_Set() const;
    bool is_min_sdk_version_Valid() const;

    QString getPackageName() const;
    void setPackageName(const QString &package_name);
    bool is_package_name_Set() const;
    bool is_package_name_Valid() const;

    QList<OAIService> getServices() const;
    void setServices(const QList<OAIService> &services);
    bool is_services_Set() const;
    bool is_services_Valid() const;

    qint32 getTargetSdkVersion() const;
    void setTargetSdkVersion(const qint32 &target_sdk_version);
    bool is_target_sdk_version_Set() const;
    bool is_target_sdk_version_Valid() const;

    QList<OAIUsesFeature> getUsesFeature() const;
    void setUsesFeature(const QList<OAIUsesFeature> &uses_feature);
    bool is_uses_feature_Set() const;
    bool is_uses_feature_Valid() const;

    QList<QString> getUsesPermission() const;
    void setUsesPermission(const QList<QString> &uses_permission);
    bool is_uses_permission_Set() const;
    bool is_uses_permission_Valid() const;

    QString getVersionCode() const;
    void setVersionCode(const QString &version_code);
    bool is_version_code_Set() const;
    bool is_version_code_Valid() const;

    QString getVersionName() const;
    void setVersionName(const QString &version_name);
    bool is_version_name_Set() const;
    bool is_version_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_label;
    bool m_application_label_isSet;
    bool m_application_label_isValid;

    QList<OAIIntentFilter> m_intent_filters;
    bool m_intent_filters_isSet;
    bool m_intent_filters_isValid;

    qint32 m_max_sdk_version;
    bool m_max_sdk_version_isSet;
    bool m_max_sdk_version_isValid;

    QList<OAIMetadata> m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    qint32 m_min_sdk_version;
    bool m_min_sdk_version_isSet;
    bool m_min_sdk_version_isValid;

    QString m_package_name;
    bool m_package_name_isSet;
    bool m_package_name_isValid;

    QList<OAIService> m_services;
    bool m_services_isSet;
    bool m_services_isValid;

    qint32 m_target_sdk_version;
    bool m_target_sdk_version_isSet;
    bool m_target_sdk_version_isValid;

    QList<OAIUsesFeature> m_uses_feature;
    bool m_uses_feature_isSet;
    bool m_uses_feature_isValid;

    QList<QString> m_uses_permission;
    bool m_uses_permission_isSet;
    bool m_uses_permission_isValid;

    QString m_version_code;
    bool m_version_code_isSet;
    bool m_version_code_isValid;

    QString m_version_name;
    bool m_version_name_isSet;
    bool m_version_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApkManifest)

#endif // OAIApkManifest_H
