/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDistribution.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDistribution::OAIDistribution(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDistribution::OAIDistribution() {
    this->initializeModel();
}

OAIDistribution::~OAIDistribution() {}

void OAIDistribution::initializeModel() {

    m_market_share_isSet = false;
    m_market_share_isValid = false;

    m_measurement_time_isSet = false;
    m_measurement_time_isValid = false;
}

void OAIDistribution::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDistribution::fromJsonObject(QJsonObject json) {

    m_market_share_isValid = ::OpenAPI::fromJsonValue(m_market_share, json[QString("marketShare")]);
    m_market_share_isSet = !json[QString("marketShare")].isNull() && m_market_share_isValid;

    m_measurement_time_isValid = ::OpenAPI::fromJsonValue(m_measurement_time, json[QString("measurementTime")]);
    m_measurement_time_isSet = !json[QString("measurementTime")].isNull() && m_measurement_time_isValid;
}

QString OAIDistribution::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDistribution::asJsonObject() const {
    QJsonObject obj;
    if (m_market_share_isSet) {
        obj.insert(QString("marketShare"), ::OpenAPI::toJsonValue(m_market_share));
    }
    if (m_measurement_time_isSet) {
        obj.insert(QString("measurementTime"), ::OpenAPI::toJsonValue(m_measurement_time));
    }
    return obj;
}

double OAIDistribution::getMarketShare() const {
    return m_market_share;
}
void OAIDistribution::setMarketShare(const double &market_share) {
    m_market_share = market_share;
    m_market_share_isSet = true;
}

bool OAIDistribution::is_market_share_Set() const{
    return m_market_share_isSet;
}

bool OAIDistribution::is_market_share_Valid() const{
    return m_market_share_isValid;
}

QString OAIDistribution::getMeasurementTime() const {
    return m_measurement_time;
}
void OAIDistribution::setMeasurementTime(const QString &measurement_time) {
    m_measurement_time = measurement_time;
    m_measurement_time_isSet = true;
}

bool OAIDistribution::is_measurement_time_Set() const{
    return m_measurement_time_isSet;
}

bool OAIDistribution::is_measurement_time_Valid() const{
    return m_measurement_time_isValid;
}

bool OAIDistribution::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_market_share_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_measurement_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDistribution::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
