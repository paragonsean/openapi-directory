/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIosDeviceFile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIosDeviceFile::OAIIosDeviceFile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIosDeviceFile::OAIIosDeviceFile() {
    this->initializeModel();
}

OAIIosDeviceFile::~OAIIosDeviceFile() {}

void OAIIosDeviceFile::initializeModel() {

    m_bundle_id_isSet = false;
    m_bundle_id_isValid = false;

    m_content_isSet = false;
    m_content_isValid = false;

    m_device_path_isSet = false;
    m_device_path_isValid = false;
}

void OAIIosDeviceFile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIosDeviceFile::fromJsonObject(QJsonObject json) {

    m_bundle_id_isValid = ::OpenAPI::fromJsonValue(m_bundle_id, json[QString("bundleId")]);
    m_bundle_id_isSet = !json[QString("bundleId")].isNull() && m_bundle_id_isValid;

    m_content_isValid = ::OpenAPI::fromJsonValue(m_content, json[QString("content")]);
    m_content_isSet = !json[QString("content")].isNull() && m_content_isValid;

    m_device_path_isValid = ::OpenAPI::fromJsonValue(m_device_path, json[QString("devicePath")]);
    m_device_path_isSet = !json[QString("devicePath")].isNull() && m_device_path_isValid;
}

QString OAIIosDeviceFile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIosDeviceFile::asJsonObject() const {
    QJsonObject obj;
    if (m_bundle_id_isSet) {
        obj.insert(QString("bundleId"), ::OpenAPI::toJsonValue(m_bundle_id));
    }
    if (m_content.isSet()) {
        obj.insert(QString("content"), ::OpenAPI::toJsonValue(m_content));
    }
    if (m_device_path_isSet) {
        obj.insert(QString("devicePath"), ::OpenAPI::toJsonValue(m_device_path));
    }
    return obj;
}

QString OAIIosDeviceFile::getBundleId() const {
    return m_bundle_id;
}
void OAIIosDeviceFile::setBundleId(const QString &bundle_id) {
    m_bundle_id = bundle_id;
    m_bundle_id_isSet = true;
}

bool OAIIosDeviceFile::is_bundle_id_Set() const{
    return m_bundle_id_isSet;
}

bool OAIIosDeviceFile::is_bundle_id_Valid() const{
    return m_bundle_id_isValid;
}

OAIFileReference OAIIosDeviceFile::getContent() const {
    return m_content;
}
void OAIIosDeviceFile::setContent(const OAIFileReference &content) {
    m_content = content;
    m_content_isSet = true;
}

bool OAIIosDeviceFile::is_content_Set() const{
    return m_content_isSet;
}

bool OAIIosDeviceFile::is_content_Valid() const{
    return m_content_isValid;
}

QString OAIIosDeviceFile::getDevicePath() const {
    return m_device_path;
}
void OAIIosDeviceFile::setDevicePath(const QString &device_path) {
    m_device_path = device_path;
    m_device_path_isSet = true;
}

bool OAIIosDeviceFile::is_device_path_Set() const{
    return m_device_path_isSet;
}

bool OAIIosDeviceFile::is_device_path_Valid() const{
    return m_device_path_isValid;
}

bool OAIIosDeviceFile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bundle_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_device_path_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIosDeviceFile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
