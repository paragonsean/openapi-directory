/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeviceIpBlock.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeviceIpBlock::OAIDeviceIpBlock(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeviceIpBlock::OAIDeviceIpBlock() {
    this->initializeModel();
}

OAIDeviceIpBlock::~OAIDeviceIpBlock() {}

void OAIDeviceIpBlock::initializeModel() {

    m_added_date_isSet = false;
    m_added_date_isValid = false;

    m_block_isSet = false;
    m_block_isValid = false;

    m_form_isSet = false;
    m_form_isValid = false;
}

void OAIDeviceIpBlock::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeviceIpBlock::fromJsonObject(QJsonObject json) {

    m_added_date_isValid = ::OpenAPI::fromJsonValue(m_added_date, json[QString("addedDate")]);
    m_added_date_isSet = !json[QString("addedDate")].isNull() && m_added_date_isValid;

    m_block_isValid = ::OpenAPI::fromJsonValue(m_block, json[QString("block")]);
    m_block_isSet = !json[QString("block")].isNull() && m_block_isValid;

    m_form_isValid = ::OpenAPI::fromJsonValue(m_form, json[QString("form")]);
    m_form_isSet = !json[QString("form")].isNull() && m_form_isValid;
}

QString OAIDeviceIpBlock::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeviceIpBlock::asJsonObject() const {
    QJsonObject obj;
    if (m_added_date.isSet()) {
        obj.insert(QString("addedDate"), ::OpenAPI::toJsonValue(m_added_date));
    }
    if (m_block_isSet) {
        obj.insert(QString("block"), ::OpenAPI::toJsonValue(m_block));
    }
    if (m_form_isSet) {
        obj.insert(QString("form"), ::OpenAPI::toJsonValue(m_form));
    }
    return obj;
}

OAIDate OAIDeviceIpBlock::getAddedDate() const {
    return m_added_date;
}
void OAIDeviceIpBlock::setAddedDate(const OAIDate &added_date) {
    m_added_date = added_date;
    m_added_date_isSet = true;
}

bool OAIDeviceIpBlock::is_added_date_Set() const{
    return m_added_date_isSet;
}

bool OAIDeviceIpBlock::is_added_date_Valid() const{
    return m_added_date_isValid;
}

QString OAIDeviceIpBlock::getBlock() const {
    return m_block;
}
void OAIDeviceIpBlock::setBlock(const QString &block) {
    m_block = block;
    m_block_isSet = true;
}

bool OAIDeviceIpBlock::is_block_Set() const{
    return m_block_isSet;
}

bool OAIDeviceIpBlock::is_block_Valid() const{
    return m_block_isValid;
}

QString OAIDeviceIpBlock::getForm() const {
    return m_form;
}
void OAIDeviceIpBlock::setForm(const QString &form) {
    m_form = form;
    m_form_isSet = true;
}

bool OAIDeviceIpBlock::is_form_Set() const{
    return m_form_isSet;
}

bool OAIDeviceIpBlock::is_form_Valid() const{
    return m_form_isValid;
}

bool OAIDeviceIpBlock::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_added_date.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_block_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_form_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeviceIpBlock::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
