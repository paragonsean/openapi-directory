/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITestExecution.h
 *
 * A single test executed in a single environment.
 */

#ifndef OAITestExecution_H
#define OAITestExecution_H

#include <QJsonObject>

#include "OAIEnvironment.h"
#include "OAIShard.h"
#include "OAITestDetails.h"
#include "OAITestSpecification.h"
#include "OAIToolResultsStep.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEnvironment;
class OAIShard;
class OAITestDetails;
class OAITestSpecification;
class OAIToolResultsStep;

class OAITestExecution : public OAIObject {
public:
    OAITestExecution();
    OAITestExecution(QString json);
    ~OAITestExecution() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIEnvironment getEnvironment() const;
    void setEnvironment(const OAIEnvironment &environment);
    bool is_environment_Set() const;
    bool is_environment_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getMatrixId() const;
    void setMatrixId(const QString &matrix_id);
    bool is_matrix_id_Set() const;
    bool is_matrix_id_Valid() const;

    QString getProjectId() const;
    void setProjectId(const QString &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    OAIShard getShard() const;
    void setShard(const OAIShard &shard);
    bool is_shard_Set() const;
    bool is_shard_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAITestDetails getTestDetails() const;
    void setTestDetails(const OAITestDetails &test_details);
    bool is_test_details_Set() const;
    bool is_test_details_Valid() const;

    OAITestSpecification getTestSpecification() const;
    void setTestSpecification(const OAITestSpecification &test_specification);
    bool is_test_specification_Set() const;
    bool is_test_specification_Valid() const;

    QString getTimestamp() const;
    void setTimestamp(const QString &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    OAIToolResultsStep getToolResultsStep() const;
    void setToolResultsStep(const OAIToolResultsStep &tool_results_step);
    bool is_tool_results_step_Set() const;
    bool is_tool_results_step_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIEnvironment m_environment;
    bool m_environment_isSet;
    bool m_environment_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_matrix_id;
    bool m_matrix_id_isSet;
    bool m_matrix_id_isValid;

    QString m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    OAIShard m_shard;
    bool m_shard_isSet;
    bool m_shard_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAITestDetails m_test_details;
    bool m_test_details_isSet;
    bool m_test_details_isValid;

    OAITestSpecification m_test_specification;
    bool m_test_specification_isSet;
    bool m_test_specification_isValid;

    QString m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    OAIToolResultsStep m_tool_results_step;
    bool m_tool_results_step_isSet;
    bool m_tool_results_step_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITestExecution)

#endif // OAITestExecution_H
