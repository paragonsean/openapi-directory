/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIosDeviceCatalog.h
 *
 * The currently supported iOS devices.
 */

#ifndef OAIIosDeviceCatalog_H
#define OAIIosDeviceCatalog_H

#include <QJsonObject>

#include "OAIIosModel.h"
#include "OAIIosRuntimeConfiguration.h"
#include "OAIIosVersion.h"
#include "OAIXcodeVersion.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIosModel;
class OAIIosRuntimeConfiguration;
class OAIIosVersion;
class OAIXcodeVersion;

class OAIIosDeviceCatalog : public OAIObject {
public:
    OAIIosDeviceCatalog();
    OAIIosDeviceCatalog(QString json);
    ~OAIIosDeviceCatalog() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIIosModel> getModels() const;
    void setModels(const QList<OAIIosModel> &models);
    bool is_models_Set() const;
    bool is_models_Valid() const;

    OAIIosRuntimeConfiguration getRuntimeConfiguration() const;
    void setRuntimeConfiguration(const OAIIosRuntimeConfiguration &runtime_configuration);
    bool is_runtime_configuration_Set() const;
    bool is_runtime_configuration_Valid() const;

    QList<OAIIosVersion> getVersions() const;
    void setVersions(const QList<OAIIosVersion> &versions);
    bool is_versions_Set() const;
    bool is_versions_Valid() const;

    QList<OAIXcodeVersion> getXcodeVersions() const;
    void setXcodeVersions(const QList<OAIXcodeVersion> &xcode_versions);
    bool is_xcode_versions_Set() const;
    bool is_xcode_versions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIIosModel> m_models;
    bool m_models_isSet;
    bool m_models_isValid;

    OAIIosRuntimeConfiguration m_runtime_configuration;
    bool m_runtime_configuration_isSet;
    bool m_runtime_configuration_isValid;

    QList<OAIIosVersion> m_versions;
    bool m_versions_isSet;
    bool m_versions_isValid;

    QList<OAIXcodeVersion> m_xcode_versions;
    bool m_xcode_versions_isSet;
    bool m_xcode_versions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIosDeviceCatalog)

#endif // OAIIosDeviceCatalog_H
