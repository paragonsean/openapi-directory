/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDirectAccessVersionInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDirectAccessVersionInfo::OAIDirectAccessVersionInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDirectAccessVersionInfo::OAIDirectAccessVersionInfo() {
    this->initializeModel();
}

OAIDirectAccessVersionInfo::~OAIDirectAccessVersionInfo() {}

void OAIDirectAccessVersionInfo::initializeModel() {

    m_direct_access_supported_isSet = false;
    m_direct_access_supported_isValid = false;

    m_minimum_android_studio_version_isSet = false;
    m_minimum_android_studio_version_isValid = false;
}

void OAIDirectAccessVersionInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDirectAccessVersionInfo::fromJsonObject(QJsonObject json) {

    m_direct_access_supported_isValid = ::OpenAPI::fromJsonValue(m_direct_access_supported, json[QString("directAccessSupported")]);
    m_direct_access_supported_isSet = !json[QString("directAccessSupported")].isNull() && m_direct_access_supported_isValid;

    m_minimum_android_studio_version_isValid = ::OpenAPI::fromJsonValue(m_minimum_android_studio_version, json[QString("minimumAndroidStudioVersion")]);
    m_minimum_android_studio_version_isSet = !json[QString("minimumAndroidStudioVersion")].isNull() && m_minimum_android_studio_version_isValid;
}

QString OAIDirectAccessVersionInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDirectAccessVersionInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_direct_access_supported_isSet) {
        obj.insert(QString("directAccessSupported"), ::OpenAPI::toJsonValue(m_direct_access_supported));
    }
    if (m_minimum_android_studio_version_isSet) {
        obj.insert(QString("minimumAndroidStudioVersion"), ::OpenAPI::toJsonValue(m_minimum_android_studio_version));
    }
    return obj;
}

bool OAIDirectAccessVersionInfo::isDirectAccessSupported() const {
    return m_direct_access_supported;
}
void OAIDirectAccessVersionInfo::setDirectAccessSupported(const bool &direct_access_supported) {
    m_direct_access_supported = direct_access_supported;
    m_direct_access_supported_isSet = true;
}

bool OAIDirectAccessVersionInfo::is_direct_access_supported_Set() const{
    return m_direct_access_supported_isSet;
}

bool OAIDirectAccessVersionInfo::is_direct_access_supported_Valid() const{
    return m_direct_access_supported_isValid;
}

QString OAIDirectAccessVersionInfo::getMinimumAndroidStudioVersion() const {
    return m_minimum_android_studio_version;
}
void OAIDirectAccessVersionInfo::setMinimumAndroidStudioVersion(const QString &minimum_android_studio_version) {
    m_minimum_android_studio_version = minimum_android_studio_version;
    m_minimum_android_studio_version_isSet = true;
}

bool OAIDirectAccessVersionInfo::is_minimum_android_studio_version_Set() const{
    return m_minimum_android_studio_version_isSet;
}

bool OAIDirectAccessVersionInfo::is_minimum_android_studio_version_Valid() const{
    return m_minimum_android_studio_version_isValid;
}

bool OAIDirectAccessVersionInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_direct_access_supported_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_minimum_android_studio_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDirectAccessVersionInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
