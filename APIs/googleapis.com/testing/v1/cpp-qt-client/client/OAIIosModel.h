/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIosModel.h
 *
 * A description of an iOS device tests may be run on.
 */

#ifndef OAIIosModel_H
#define OAIIosModel_H

#include <QJsonObject>

#include "OAIPerIosVersionInfo.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPerIosVersionInfo;

class OAIIosModel : public OAIObject {
public:
    OAIIosModel();
    OAIIosModel(QString json);
    ~OAIIosModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getDeviceCapabilities() const;
    void setDeviceCapabilities(const QList<QString> &device_capabilities);
    bool is_device_capabilities_Set() const;
    bool is_device_capabilities_Valid() const;

    QString getFormFactor() const;
    void setFormFactor(const QString &form_factor);
    bool is_form_factor_Set() const;
    bool is_form_factor_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIPerIosVersionInfo> getPerVersionInfo() const;
    void setPerVersionInfo(const QList<OAIPerIosVersionInfo> &per_version_info);
    bool is_per_version_info_Set() const;
    bool is_per_version_info_Valid() const;

    qint32 getScreenDensity() const;
    void setScreenDensity(const qint32 &screen_density);
    bool is_screen_density_Set() const;
    bool is_screen_density_Valid() const;

    qint32 getScreenX() const;
    void setScreenX(const qint32 &screen_x);
    bool is_screen_x_Set() const;
    bool is_screen_x_Valid() const;

    qint32 getScreenY() const;
    void setScreenY(const qint32 &screen_y);
    bool is_screen_y_Set() const;
    bool is_screen_y_Valid() const;

    QList<QString> getSupportedVersionIds() const;
    void setSupportedVersionIds(const QList<QString> &supported_version_ids);
    bool is_supported_version_ids_Set() const;
    bool is_supported_version_ids_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_device_capabilities;
    bool m_device_capabilities_isSet;
    bool m_device_capabilities_isValid;

    QString m_form_factor;
    bool m_form_factor_isSet;
    bool m_form_factor_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIPerIosVersionInfo> m_per_version_info;
    bool m_per_version_info_isSet;
    bool m_per_version_info_isValid;

    qint32 m_screen_density;
    bool m_screen_density_isSet;
    bool m_screen_density_isValid;

    qint32 m_screen_x;
    bool m_screen_x_isSet;
    bool m_screen_x_isValid;

    qint32 m_screen_y;
    bool m_screen_y_isSet;
    bool m_screen_y_isValid;

    QList<QString> m_supported_version_ids;
    bool m_supported_version_ids_isSet;
    bool m_supported_version_ids_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIosModel)

#endif // OAIIosModel_H
