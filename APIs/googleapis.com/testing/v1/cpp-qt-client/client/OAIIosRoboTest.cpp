/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIosRoboTest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIosRoboTest::OAIIosRoboTest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIosRoboTest::OAIIosRoboTest() {
    this->initializeModel();
}

OAIIosRoboTest::~OAIIosRoboTest() {}

void OAIIosRoboTest::initializeModel() {

    m_app_bundle_id_isSet = false;
    m_app_bundle_id_isValid = false;

    m_app_ipa_isSet = false;
    m_app_ipa_isValid = false;

    m_robo_script_isSet = false;
    m_robo_script_isValid = false;
}

void OAIIosRoboTest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIosRoboTest::fromJsonObject(QJsonObject json) {

    m_app_bundle_id_isValid = ::OpenAPI::fromJsonValue(m_app_bundle_id, json[QString("appBundleId")]);
    m_app_bundle_id_isSet = !json[QString("appBundleId")].isNull() && m_app_bundle_id_isValid;

    m_app_ipa_isValid = ::OpenAPI::fromJsonValue(m_app_ipa, json[QString("appIpa")]);
    m_app_ipa_isSet = !json[QString("appIpa")].isNull() && m_app_ipa_isValid;

    m_robo_script_isValid = ::OpenAPI::fromJsonValue(m_robo_script, json[QString("roboScript")]);
    m_robo_script_isSet = !json[QString("roboScript")].isNull() && m_robo_script_isValid;
}

QString OAIIosRoboTest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIosRoboTest::asJsonObject() const {
    QJsonObject obj;
    if (m_app_bundle_id_isSet) {
        obj.insert(QString("appBundleId"), ::OpenAPI::toJsonValue(m_app_bundle_id));
    }
    if (m_app_ipa.isSet()) {
        obj.insert(QString("appIpa"), ::OpenAPI::toJsonValue(m_app_ipa));
    }
    if (m_robo_script.isSet()) {
        obj.insert(QString("roboScript"), ::OpenAPI::toJsonValue(m_robo_script));
    }
    return obj;
}

QString OAIIosRoboTest::getAppBundleId() const {
    return m_app_bundle_id;
}
void OAIIosRoboTest::setAppBundleId(const QString &app_bundle_id) {
    m_app_bundle_id = app_bundle_id;
    m_app_bundle_id_isSet = true;
}

bool OAIIosRoboTest::is_app_bundle_id_Set() const{
    return m_app_bundle_id_isSet;
}

bool OAIIosRoboTest::is_app_bundle_id_Valid() const{
    return m_app_bundle_id_isValid;
}

OAIFileReference OAIIosRoboTest::getAppIpa() const {
    return m_app_ipa;
}
void OAIIosRoboTest::setAppIpa(const OAIFileReference &app_ipa) {
    m_app_ipa = app_ipa;
    m_app_ipa_isSet = true;
}

bool OAIIosRoboTest::is_app_ipa_Set() const{
    return m_app_ipa_isSet;
}

bool OAIIosRoboTest::is_app_ipa_Valid() const{
    return m_app_ipa_isValid;
}

OAIFileReference OAIIosRoboTest::getRoboScript() const {
    return m_robo_script;
}
void OAIIosRoboTest::setRoboScript(const OAIFileReference &robo_script) {
    m_robo_script = robo_script;
    m_robo_script_isSet = true;
}

bool OAIIosRoboTest::is_robo_script_Set() const{
    return m_robo_script_isSet;
}

bool OAIIosRoboTest::is_robo_script_Valid() const{
    return m_robo_script_isValid;
}

bool OAIIosRoboTest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_bundle_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_ipa.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_robo_script.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIosRoboTest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
