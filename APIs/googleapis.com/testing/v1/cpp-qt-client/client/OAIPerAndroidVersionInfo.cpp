/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPerAndroidVersionInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPerAndroidVersionInfo::OAIPerAndroidVersionInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPerAndroidVersionInfo::OAIPerAndroidVersionInfo() {
    this->initializeModel();
}

OAIPerAndroidVersionInfo::~OAIPerAndroidVersionInfo() {}

void OAIPerAndroidVersionInfo::initializeModel() {

    m_device_capacity_isSet = false;
    m_device_capacity_isValid = false;

    m_direct_access_version_info_isSet = false;
    m_direct_access_version_info_isValid = false;

    m_interactive_device_availability_estimate_isSet = false;
    m_interactive_device_availability_estimate_isValid = false;

    m_version_id_isSet = false;
    m_version_id_isValid = false;
}

void OAIPerAndroidVersionInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPerAndroidVersionInfo::fromJsonObject(QJsonObject json) {

    m_device_capacity_isValid = ::OpenAPI::fromJsonValue(m_device_capacity, json[QString("deviceCapacity")]);
    m_device_capacity_isSet = !json[QString("deviceCapacity")].isNull() && m_device_capacity_isValid;

    m_direct_access_version_info_isValid = ::OpenAPI::fromJsonValue(m_direct_access_version_info, json[QString("directAccessVersionInfo")]);
    m_direct_access_version_info_isSet = !json[QString("directAccessVersionInfo")].isNull() && m_direct_access_version_info_isValid;

    m_interactive_device_availability_estimate_isValid = ::OpenAPI::fromJsonValue(m_interactive_device_availability_estimate, json[QString("interactiveDeviceAvailabilityEstimate")]);
    m_interactive_device_availability_estimate_isSet = !json[QString("interactiveDeviceAvailabilityEstimate")].isNull() && m_interactive_device_availability_estimate_isValid;

    m_version_id_isValid = ::OpenAPI::fromJsonValue(m_version_id, json[QString("versionId")]);
    m_version_id_isSet = !json[QString("versionId")].isNull() && m_version_id_isValid;
}

QString OAIPerAndroidVersionInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPerAndroidVersionInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_device_capacity_isSet) {
        obj.insert(QString("deviceCapacity"), ::OpenAPI::toJsonValue(m_device_capacity));
    }
    if (m_direct_access_version_info.isSet()) {
        obj.insert(QString("directAccessVersionInfo"), ::OpenAPI::toJsonValue(m_direct_access_version_info));
    }
    if (m_interactive_device_availability_estimate_isSet) {
        obj.insert(QString("interactiveDeviceAvailabilityEstimate"), ::OpenAPI::toJsonValue(m_interactive_device_availability_estimate));
    }
    if (m_version_id_isSet) {
        obj.insert(QString("versionId"), ::OpenAPI::toJsonValue(m_version_id));
    }
    return obj;
}

QString OAIPerAndroidVersionInfo::getDeviceCapacity() const {
    return m_device_capacity;
}
void OAIPerAndroidVersionInfo::setDeviceCapacity(const QString &device_capacity) {
    m_device_capacity = device_capacity;
    m_device_capacity_isSet = true;
}

bool OAIPerAndroidVersionInfo::is_device_capacity_Set() const{
    return m_device_capacity_isSet;
}

bool OAIPerAndroidVersionInfo::is_device_capacity_Valid() const{
    return m_device_capacity_isValid;
}

OAIDirectAccessVersionInfo OAIPerAndroidVersionInfo::getDirectAccessVersionInfo() const {
    return m_direct_access_version_info;
}
void OAIPerAndroidVersionInfo::setDirectAccessVersionInfo(const OAIDirectAccessVersionInfo &direct_access_version_info) {
    m_direct_access_version_info = direct_access_version_info;
    m_direct_access_version_info_isSet = true;
}

bool OAIPerAndroidVersionInfo::is_direct_access_version_info_Set() const{
    return m_direct_access_version_info_isSet;
}

bool OAIPerAndroidVersionInfo::is_direct_access_version_info_Valid() const{
    return m_direct_access_version_info_isValid;
}

QString OAIPerAndroidVersionInfo::getInteractiveDeviceAvailabilityEstimate() const {
    return m_interactive_device_availability_estimate;
}
void OAIPerAndroidVersionInfo::setInteractiveDeviceAvailabilityEstimate(const QString &interactive_device_availability_estimate) {
    m_interactive_device_availability_estimate = interactive_device_availability_estimate;
    m_interactive_device_availability_estimate_isSet = true;
}

bool OAIPerAndroidVersionInfo::is_interactive_device_availability_estimate_Set() const{
    return m_interactive_device_availability_estimate_isSet;
}

bool OAIPerAndroidVersionInfo::is_interactive_device_availability_estimate_Valid() const{
    return m_interactive_device_availability_estimate_isValid;
}

QString OAIPerAndroidVersionInfo::getVersionId() const {
    return m_version_id;
}
void OAIPerAndroidVersionInfo::setVersionId(const QString &version_id) {
    m_version_id = version_id;
    m_version_id_isSet = true;
}

bool OAIPerAndroidVersionInfo::is_version_id_Set() const{
    return m_version_id_isSet;
}

bool OAIPerAndroidVersionInfo::is_version_id_Valid() const{
    return m_version_id_isValid;
}

bool OAIPerAndroidVersionInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_device_capacity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_direct_access_version_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_interactive_device_availability_estimate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPerAndroidVersionInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
