# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TestDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error_message: str=None, progress_messages: List[str]=None):
        """TestDetails - a model defined in OpenAPI

        :param error_message: The error_message of this TestDetails.
        :param progress_messages: The progress_messages of this TestDetails.
        """
        self.openapi_types = {
            'error_message': str,
            'progress_messages': List[str]
        }

        self.attribute_map = {
            'error_message': 'errorMessage',
            'progress_messages': 'progressMessages'
        }

        self._error_message = error_message
        self._progress_messages = progress_messages

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TestDetails of this TestDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_message(self):
        """Gets the error_message of this TestDetails.

        Output only. If the TestState is ERROR, then this string will contain human-readable details about the error.

        :return: The error_message of this TestDetails.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this TestDetails.

        Output only. If the TestState is ERROR, then this string will contain human-readable details about the error.

        :param error_message: The error_message of this TestDetails.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def progress_messages(self):
        """Gets the progress_messages of this TestDetails.

        Output only. Human-readable, detailed descriptions of the test's progress. For example: \"Provisioning a device\", \"Starting Test\". During the course of execution new data may be appended to the end of progress_messages.

        :return: The progress_messages of this TestDetails.
        :rtype: List[str]
        """
        return self._progress_messages

    @progress_messages.setter
    def progress_messages(self, progress_messages):
        """Sets the progress_messages of this TestDetails.

        Output only. Human-readable, detailed descriptions of the test's progress. For example: \"Provisioning a device\", \"Starting Test\". During the course of execution new data may be appended to the end of progress_messages.

        :param progress_messages: The progress_messages of this TestDetails.
        :type progress_messages: List[str]
        """

        self._progress_messages = progress_messages
