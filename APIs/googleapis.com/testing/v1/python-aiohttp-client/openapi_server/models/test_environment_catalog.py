# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.android_device_catalog import AndroidDeviceCatalog
from openapi_server.models.device_ip_block_catalog import DeviceIpBlockCatalog
from openapi_server.models.ios_device_catalog import IosDeviceCatalog
from openapi_server.models.network_configuration_catalog import NetworkConfigurationCatalog
from openapi_server.models.provided_software_catalog import ProvidedSoftwareCatalog
from openapi_server import util


class TestEnvironmentCatalog(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, android_device_catalog: AndroidDeviceCatalog=None, device_ip_block_catalog: DeviceIpBlockCatalog=None, ios_device_catalog: IosDeviceCatalog=None, network_configuration_catalog: NetworkConfigurationCatalog=None, software_catalog: ProvidedSoftwareCatalog=None):
        """TestEnvironmentCatalog - a model defined in OpenAPI

        :param android_device_catalog: The android_device_catalog of this TestEnvironmentCatalog.
        :param device_ip_block_catalog: The device_ip_block_catalog of this TestEnvironmentCatalog.
        :param ios_device_catalog: The ios_device_catalog of this TestEnvironmentCatalog.
        :param network_configuration_catalog: The network_configuration_catalog of this TestEnvironmentCatalog.
        :param software_catalog: The software_catalog of this TestEnvironmentCatalog.
        """
        self.openapi_types = {
            'android_device_catalog': AndroidDeviceCatalog,
            'device_ip_block_catalog': DeviceIpBlockCatalog,
            'ios_device_catalog': IosDeviceCatalog,
            'network_configuration_catalog': NetworkConfigurationCatalog,
            'software_catalog': ProvidedSoftwareCatalog
        }

        self.attribute_map = {
            'android_device_catalog': 'androidDeviceCatalog',
            'device_ip_block_catalog': 'deviceIpBlockCatalog',
            'ios_device_catalog': 'iosDeviceCatalog',
            'network_configuration_catalog': 'networkConfigurationCatalog',
            'software_catalog': 'softwareCatalog'
        }

        self._android_device_catalog = android_device_catalog
        self._device_ip_block_catalog = device_ip_block_catalog
        self._ios_device_catalog = ios_device_catalog
        self._network_configuration_catalog = network_configuration_catalog
        self._software_catalog = software_catalog

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestEnvironmentCatalog':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TestEnvironmentCatalog of this TestEnvironmentCatalog.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def android_device_catalog(self):
        """Gets the android_device_catalog of this TestEnvironmentCatalog.


        :return: The android_device_catalog of this TestEnvironmentCatalog.
        :rtype: AndroidDeviceCatalog
        """
        return self._android_device_catalog

    @android_device_catalog.setter
    def android_device_catalog(self, android_device_catalog):
        """Sets the android_device_catalog of this TestEnvironmentCatalog.


        :param android_device_catalog: The android_device_catalog of this TestEnvironmentCatalog.
        :type android_device_catalog: AndroidDeviceCatalog
        """

        self._android_device_catalog = android_device_catalog

    @property
    def device_ip_block_catalog(self):
        """Gets the device_ip_block_catalog of this TestEnvironmentCatalog.


        :return: The device_ip_block_catalog of this TestEnvironmentCatalog.
        :rtype: DeviceIpBlockCatalog
        """
        return self._device_ip_block_catalog

    @device_ip_block_catalog.setter
    def device_ip_block_catalog(self, device_ip_block_catalog):
        """Sets the device_ip_block_catalog of this TestEnvironmentCatalog.


        :param device_ip_block_catalog: The device_ip_block_catalog of this TestEnvironmentCatalog.
        :type device_ip_block_catalog: DeviceIpBlockCatalog
        """

        self._device_ip_block_catalog = device_ip_block_catalog

    @property
    def ios_device_catalog(self):
        """Gets the ios_device_catalog of this TestEnvironmentCatalog.


        :return: The ios_device_catalog of this TestEnvironmentCatalog.
        :rtype: IosDeviceCatalog
        """
        return self._ios_device_catalog

    @ios_device_catalog.setter
    def ios_device_catalog(self, ios_device_catalog):
        """Sets the ios_device_catalog of this TestEnvironmentCatalog.


        :param ios_device_catalog: The ios_device_catalog of this TestEnvironmentCatalog.
        :type ios_device_catalog: IosDeviceCatalog
        """

        self._ios_device_catalog = ios_device_catalog

    @property
    def network_configuration_catalog(self):
        """Gets the network_configuration_catalog of this TestEnvironmentCatalog.


        :return: The network_configuration_catalog of this TestEnvironmentCatalog.
        :rtype: NetworkConfigurationCatalog
        """
        return self._network_configuration_catalog

    @network_configuration_catalog.setter
    def network_configuration_catalog(self, network_configuration_catalog):
        """Sets the network_configuration_catalog of this TestEnvironmentCatalog.


        :param network_configuration_catalog: The network_configuration_catalog of this TestEnvironmentCatalog.
        :type network_configuration_catalog: NetworkConfigurationCatalog
        """

        self._network_configuration_catalog = network_configuration_catalog

    @property
    def software_catalog(self):
        """Gets the software_catalog of this TestEnvironmentCatalog.


        :return: The software_catalog of this TestEnvironmentCatalog.
        :rtype: ProvidedSoftwareCatalog
        """
        return self._software_catalog

    @software_catalog.setter
    def software_catalog(self, software_catalog):
        """Sets the software_catalog of this TestEnvironmentCatalog.


        :param software_catalog: The software_catalog of this TestEnvironmentCatalog.
        :type software_catalog: ProvidedSoftwareCatalog
        """

        self._software_catalog = software_catalog
