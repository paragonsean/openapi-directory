# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ToolResultsExecution(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, execution_id: str=None, history_id: str=None, project_id: str=None):
        """ToolResultsExecution - a model defined in OpenAPI

        :param execution_id: The execution_id of this ToolResultsExecution.
        :param history_id: The history_id of this ToolResultsExecution.
        :param project_id: The project_id of this ToolResultsExecution.
        """
        self.openapi_types = {
            'execution_id': str,
            'history_id': str,
            'project_id': str
        }

        self.attribute_map = {
            'execution_id': 'executionId',
            'history_id': 'historyId',
            'project_id': 'projectId'
        }

        self._execution_id = execution_id
        self._history_id = history_id
        self._project_id = project_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ToolResultsExecution':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ToolResultsExecution of this ToolResultsExecution.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def execution_id(self):
        """Gets the execution_id of this ToolResultsExecution.

        Output only. A tool results execution ID.

        :return: The execution_id of this ToolResultsExecution.
        :rtype: str
        """
        return self._execution_id

    @execution_id.setter
    def execution_id(self, execution_id):
        """Sets the execution_id of this ToolResultsExecution.

        Output only. A tool results execution ID.

        :param execution_id: The execution_id of this ToolResultsExecution.
        :type execution_id: str
        """

        self._execution_id = execution_id

    @property
    def history_id(self):
        """Gets the history_id of this ToolResultsExecution.

        Output only. A tool results history ID.

        :return: The history_id of this ToolResultsExecution.
        :rtype: str
        """
        return self._history_id

    @history_id.setter
    def history_id(self, history_id):
        """Sets the history_id of this ToolResultsExecution.

        Output only. A tool results history ID.

        :param history_id: The history_id of this ToolResultsExecution.
        :type history_id: str
        """

        self._history_id = history_id

    @property
    def project_id(self):
        """Gets the project_id of this ToolResultsExecution.

        Output only. The cloud project that owns the tool results execution.

        :return: The project_id of this ToolResultsExecution.
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this ToolResultsExecution.

        Output only. The cloud project that owns the tool results execution.

        :param project_id: The project_id of this ToolResultsExecution.
        :type project_id: str
        """

        self._project_id = project_id
