# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.file_reference import FileReference
from openapi_server import util


class IosXcTest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_bundle_id: str=None, test_special_entitlements: bool=None, tests_zip: FileReference=None, xcode_version: str=None, xctestrun: FileReference=None):
        """IosXcTest - a model defined in OpenAPI

        :param app_bundle_id: The app_bundle_id of this IosXcTest.
        :param test_special_entitlements: The test_special_entitlements of this IosXcTest.
        :param tests_zip: The tests_zip of this IosXcTest.
        :param xcode_version: The xcode_version of this IosXcTest.
        :param xctestrun: The xctestrun of this IosXcTest.
        """
        self.openapi_types = {
            'app_bundle_id': str,
            'test_special_entitlements': bool,
            'tests_zip': FileReference,
            'xcode_version': str,
            'xctestrun': FileReference
        }

        self.attribute_map = {
            'app_bundle_id': 'appBundleId',
            'test_special_entitlements': 'testSpecialEntitlements',
            'tests_zip': 'testsZip',
            'xcode_version': 'xcodeVersion',
            'xctestrun': 'xctestrun'
        }

        self._app_bundle_id = app_bundle_id
        self._test_special_entitlements = test_special_entitlements
        self._tests_zip = tests_zip
        self._xcode_version = xcode_version
        self._xctestrun = xctestrun

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IosXcTest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IosXcTest of this IosXcTest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_bundle_id(self):
        """Gets the app_bundle_id of this IosXcTest.

        Output only. The bundle id for the application under test.

        :return: The app_bundle_id of this IosXcTest.
        :rtype: str
        """
        return self._app_bundle_id

    @app_bundle_id.setter
    def app_bundle_id(self, app_bundle_id):
        """Sets the app_bundle_id of this IosXcTest.

        Output only. The bundle id for the application under test.

        :param app_bundle_id: The app_bundle_id of this IosXcTest.
        :type app_bundle_id: str
        """

        self._app_bundle_id = app_bundle_id

    @property
    def test_special_entitlements(self):
        """Gets the test_special_entitlements of this IosXcTest.

        The option to test special app entitlements. Setting this would re-sign the app having special entitlements with an explicit application-identifier. Currently supports testing aps-environment entitlement.

        :return: The test_special_entitlements of this IosXcTest.
        :rtype: bool
        """
        return self._test_special_entitlements

    @test_special_entitlements.setter
    def test_special_entitlements(self, test_special_entitlements):
        """Sets the test_special_entitlements of this IosXcTest.

        The option to test special app entitlements. Setting this would re-sign the app having special entitlements with an explicit application-identifier. Currently supports testing aps-environment entitlement.

        :param test_special_entitlements: The test_special_entitlements of this IosXcTest.
        :type test_special_entitlements: bool
        """

        self._test_special_entitlements = test_special_entitlements

    @property
    def tests_zip(self):
        """Gets the tests_zip of this IosXcTest.


        :return: The tests_zip of this IosXcTest.
        :rtype: FileReference
        """
        return self._tests_zip

    @tests_zip.setter
    def tests_zip(self, tests_zip):
        """Sets the tests_zip of this IosXcTest.


        :param tests_zip: The tests_zip of this IosXcTest.
        :type tests_zip: FileReference
        """

        self._tests_zip = tests_zip

    @property
    def xcode_version(self):
        """Gets the xcode_version of this IosXcTest.

        The Xcode version that should be used for the test. Use the TestEnvironmentDiscoveryService to get supported options. Defaults to the latest Xcode version Firebase Test Lab supports.

        :return: The xcode_version of this IosXcTest.
        :rtype: str
        """
        return self._xcode_version

    @xcode_version.setter
    def xcode_version(self, xcode_version):
        """Sets the xcode_version of this IosXcTest.

        The Xcode version that should be used for the test. Use the TestEnvironmentDiscoveryService to get supported options. Defaults to the latest Xcode version Firebase Test Lab supports.

        :param xcode_version: The xcode_version of this IosXcTest.
        :type xcode_version: str
        """

        self._xcode_version = xcode_version

    @property
    def xctestrun(self):
        """Gets the xctestrun of this IosXcTest.


        :return: The xctestrun of this IosXcTest.
        :rtype: FileReference
        """
        return self._xctestrun

    @xctestrun.setter
    def xctestrun(self, xctestrun):
        """Sets the xctestrun of this IosXcTest.


        :param xctestrun: The xctestrun of this IosXcTest.
        :type xctestrun: FileReference
        """

        self._xctestrun = xctestrun
