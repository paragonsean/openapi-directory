# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_storage import GoogleCloudStorage
from openapi_server.models.tool_results_execution import ToolResultsExecution
from openapi_server.models.tool_results_history import ToolResultsHistory
from openapi_server import util


class ResultStorage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, google_cloud_storage: GoogleCloudStorage=None, results_url: str=None, tool_results_execution: ToolResultsExecution=None, tool_results_history: ToolResultsHistory=None):
        """ResultStorage - a model defined in OpenAPI

        :param google_cloud_storage: The google_cloud_storage of this ResultStorage.
        :param results_url: The results_url of this ResultStorage.
        :param tool_results_execution: The tool_results_execution of this ResultStorage.
        :param tool_results_history: The tool_results_history of this ResultStorage.
        """
        self.openapi_types = {
            'google_cloud_storage': GoogleCloudStorage,
            'results_url': str,
            'tool_results_execution': ToolResultsExecution,
            'tool_results_history': ToolResultsHistory
        }

        self.attribute_map = {
            'google_cloud_storage': 'googleCloudStorage',
            'results_url': 'resultsUrl',
            'tool_results_execution': 'toolResultsExecution',
            'tool_results_history': 'toolResultsHistory'
        }

        self._google_cloud_storage = google_cloud_storage
        self._results_url = results_url
        self._tool_results_execution = tool_results_execution
        self._tool_results_history = tool_results_history

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResultStorage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResultStorage of this ResultStorage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def google_cloud_storage(self):
        """Gets the google_cloud_storage of this ResultStorage.


        :return: The google_cloud_storage of this ResultStorage.
        :rtype: GoogleCloudStorage
        """
        return self._google_cloud_storage

    @google_cloud_storage.setter
    def google_cloud_storage(self, google_cloud_storage):
        """Sets the google_cloud_storage of this ResultStorage.


        :param google_cloud_storage: The google_cloud_storage of this ResultStorage.
        :type google_cloud_storage: GoogleCloudStorage
        """

        self._google_cloud_storage = google_cloud_storage

    @property
    def results_url(self):
        """Gets the results_url of this ResultStorage.

        Output only. URL to the results in the Firebase Web Console.

        :return: The results_url of this ResultStorage.
        :rtype: str
        """
        return self._results_url

    @results_url.setter
    def results_url(self, results_url):
        """Sets the results_url of this ResultStorage.

        Output only. URL to the results in the Firebase Web Console.

        :param results_url: The results_url of this ResultStorage.
        :type results_url: str
        """

        self._results_url = results_url

    @property
    def tool_results_execution(self):
        """Gets the tool_results_execution of this ResultStorage.


        :return: The tool_results_execution of this ResultStorage.
        :rtype: ToolResultsExecution
        """
        return self._tool_results_execution

    @tool_results_execution.setter
    def tool_results_execution(self, tool_results_execution):
        """Sets the tool_results_execution of this ResultStorage.


        :param tool_results_execution: The tool_results_execution of this ResultStorage.
        :type tool_results_execution: ToolResultsExecution
        """

        self._tool_results_execution = tool_results_execution

    @property
    def tool_results_history(self):
        """Gets the tool_results_history of this ResultStorage.


        :return: The tool_results_history of this ResultStorage.
        :rtype: ToolResultsHistory
        """
        return self._tool_results_history

    @tool_results_history.setter
    def tool_results_history(self, tool_results_history):
        """Sets the tool_results_history of this ResultStorage.


        :param tool_results_history: The tool_results_history of this ResultStorage.
        :type tool_results_history: ToolResultsHistory
        """

        self._tool_results_history = tool_results_history
