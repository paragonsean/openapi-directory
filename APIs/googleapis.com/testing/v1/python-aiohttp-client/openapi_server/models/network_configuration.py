# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.traffic_rule import TrafficRule
from openapi_server import util


class NetworkConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, down_rule: TrafficRule=None, id: str=None, up_rule: TrafficRule=None):
        """NetworkConfiguration - a model defined in OpenAPI

        :param down_rule: The down_rule of this NetworkConfiguration.
        :param id: The id of this NetworkConfiguration.
        :param up_rule: The up_rule of this NetworkConfiguration.
        """
        self.openapi_types = {
            'down_rule': TrafficRule,
            'id': str,
            'up_rule': TrafficRule
        }

        self.attribute_map = {
            'down_rule': 'downRule',
            'id': 'id',
            'up_rule': 'upRule'
        }

        self._down_rule = down_rule
        self._id = id
        self._up_rule = up_rule

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetworkConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NetworkConfiguration of this NetworkConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def down_rule(self):
        """Gets the down_rule of this NetworkConfiguration.


        :return: The down_rule of this NetworkConfiguration.
        :rtype: TrafficRule
        """
        return self._down_rule

    @down_rule.setter
    def down_rule(self, down_rule):
        """Sets the down_rule of this NetworkConfiguration.


        :param down_rule: The down_rule of this NetworkConfiguration.
        :type down_rule: TrafficRule
        """

        self._down_rule = down_rule

    @property
    def id(self):
        """Gets the id of this NetworkConfiguration.

        The unique opaque id for this network traffic configuration.

        :return: The id of this NetworkConfiguration.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this NetworkConfiguration.

        The unique opaque id for this network traffic configuration.

        :param id: The id of this NetworkConfiguration.
        :type id: str
        """

        self._id = id

    @property
    def up_rule(self):
        """Gets the up_rule of this NetworkConfiguration.


        :return: The up_rule of this NetworkConfiguration.
        :rtype: TrafficRule
        """
        return self._up_rule

    @up_rule.setter
    def up_rule(self, up_rule):
        """Sets the up_rule of this NetworkConfiguration.


        :param up_rule: The up_rule of this NetworkConfiguration.
        :type up_rule: TrafficRule
        """

        self._up_rule = up_rule
