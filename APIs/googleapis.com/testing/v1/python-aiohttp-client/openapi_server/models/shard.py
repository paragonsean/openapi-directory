# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.test_targets_for_shard import TestTargetsForShard
from openapi_server import util


class Shard(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, estimated_shard_duration: str=None, num_shards: int=None, shard_index: int=None, test_targets_for_shard: TestTargetsForShard=None):
        """Shard - a model defined in OpenAPI

        :param estimated_shard_duration: The estimated_shard_duration of this Shard.
        :param num_shards: The num_shards of this Shard.
        :param shard_index: The shard_index of this Shard.
        :param test_targets_for_shard: The test_targets_for_shard of this Shard.
        """
        self.openapi_types = {
            'estimated_shard_duration': str,
            'num_shards': int,
            'shard_index': int,
            'test_targets_for_shard': TestTargetsForShard
        }

        self.attribute_map = {
            'estimated_shard_duration': 'estimatedShardDuration',
            'num_shards': 'numShards',
            'shard_index': 'shardIndex',
            'test_targets_for_shard': 'testTargetsForShard'
        }

        self._estimated_shard_duration = estimated_shard_duration
        self._num_shards = num_shards
        self._shard_index = shard_index
        self._test_targets_for_shard = test_targets_for_shard

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Shard':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Shard of this Shard.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def estimated_shard_duration(self):
        """Gets the estimated_shard_duration of this Shard.

        Output only. The estimated shard duration based on previous test case timing records, if available.

        :return: The estimated_shard_duration of this Shard.
        :rtype: str
        """
        return self._estimated_shard_duration

    @estimated_shard_duration.setter
    def estimated_shard_duration(self, estimated_shard_duration):
        """Sets the estimated_shard_duration of this Shard.

        Output only. The estimated shard duration based on previous test case timing records, if available.

        :param estimated_shard_duration: The estimated_shard_duration of this Shard.
        :type estimated_shard_duration: str
        """

        self._estimated_shard_duration = estimated_shard_duration

    @property
    def num_shards(self):
        """Gets the num_shards of this Shard.

        Output only. The total number of shards.

        :return: The num_shards of this Shard.
        :rtype: int
        """
        return self._num_shards

    @num_shards.setter
    def num_shards(self, num_shards):
        """Sets the num_shards of this Shard.

        Output only. The total number of shards.

        :param num_shards: The num_shards of this Shard.
        :type num_shards: int
        """

        self._num_shards = num_shards

    @property
    def shard_index(self):
        """Gets the shard_index of this Shard.

        Output only. The index of the shard among all the shards.

        :return: The shard_index of this Shard.
        :rtype: int
        """
        return self._shard_index

    @shard_index.setter
    def shard_index(self, shard_index):
        """Sets the shard_index of this Shard.

        Output only. The index of the shard among all the shards.

        :param shard_index: The shard_index of this Shard.
        :type shard_index: int
        """

        self._shard_index = shard_index

    @property
    def test_targets_for_shard(self):
        """Gets the test_targets_for_shard of this Shard.


        :return: The test_targets_for_shard of this Shard.
        :rtype: TestTargetsForShard
        """
        return self._test_targets_for_shard

    @test_targets_for_shard.setter
    def test_targets_for_shard(self, test_targets_for_shard):
        """Sets the test_targets_for_shard of this Shard.


        :param test_targets_for_shard: The test_targets_for_shard of this Shard.
        :type test_targets_for_shard: TestTargetsForShard
        """

        self._test_targets_for_shard = test_targets_for_shard
