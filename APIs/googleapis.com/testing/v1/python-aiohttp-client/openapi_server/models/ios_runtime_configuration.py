# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.locale import Locale
from openapi_server.models.orientation import Orientation
from openapi_server import util


class IosRuntimeConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, locales: List[Locale]=None, orientations: List[Orientation]=None):
        """IosRuntimeConfiguration - a model defined in OpenAPI

        :param locales: The locales of this IosRuntimeConfiguration.
        :param orientations: The orientations of this IosRuntimeConfiguration.
        """
        self.openapi_types = {
            'locales': List[Locale],
            'orientations': List[Orientation]
        }

        self.attribute_map = {
            'locales': 'locales',
            'orientations': 'orientations'
        }

        self._locales = locales
        self._orientations = orientations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IosRuntimeConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IosRuntimeConfiguration of this IosRuntimeConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def locales(self):
        """Gets the locales of this IosRuntimeConfiguration.

        The set of available locales.

        :return: The locales of this IosRuntimeConfiguration.
        :rtype: List[Locale]
        """
        return self._locales

    @locales.setter
    def locales(self, locales):
        """Sets the locales of this IosRuntimeConfiguration.

        The set of available locales.

        :param locales: The locales of this IosRuntimeConfiguration.
        :type locales: List[Locale]
        """

        self._locales = locales

    @property
    def orientations(self):
        """Gets the orientations of this IosRuntimeConfiguration.

        The set of available orientations.

        :return: The orientations of this IosRuntimeConfiguration.
        :rtype: List[Orientation]
        """
        return self._orientations

    @orientations.setter
    def orientations(self, orientations):
        """Sets the orientations of this IosRuntimeConfiguration.

        The set of available orientations.

        :param orientations: The orientations of this IosRuntimeConfiguration.
        :type orientations: List[Orientation]
        """

        self._orientations = orientations
