# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.intent_filter import IntentFilter
from openapi_server.models.metadata import Metadata
from openapi_server.models.service import Service
from openapi_server.models.uses_feature import UsesFeature
from openapi_server import util


class ApkManifest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_label: str=None, intent_filters: List[IntentFilter]=None, max_sdk_version: int=None, metadata: List[Metadata]=None, min_sdk_version: int=None, package_name: str=None, services: List[Service]=None, target_sdk_version: int=None, uses_feature: List[UsesFeature]=None, uses_permission: List[str]=None, version_code: str=None, version_name: str=None):
        """ApkManifest - a model defined in OpenAPI

        :param application_label: The application_label of this ApkManifest.
        :param intent_filters: The intent_filters of this ApkManifest.
        :param max_sdk_version: The max_sdk_version of this ApkManifest.
        :param metadata: The metadata of this ApkManifest.
        :param min_sdk_version: The min_sdk_version of this ApkManifest.
        :param package_name: The package_name of this ApkManifest.
        :param services: The services of this ApkManifest.
        :param target_sdk_version: The target_sdk_version of this ApkManifest.
        :param uses_feature: The uses_feature of this ApkManifest.
        :param uses_permission: The uses_permission of this ApkManifest.
        :param version_code: The version_code of this ApkManifest.
        :param version_name: The version_name of this ApkManifest.
        """
        self.openapi_types = {
            'application_label': str,
            'intent_filters': List[IntentFilter],
            'max_sdk_version': int,
            'metadata': List[Metadata],
            'min_sdk_version': int,
            'package_name': str,
            'services': List[Service],
            'target_sdk_version': int,
            'uses_feature': List[UsesFeature],
            'uses_permission': List[str],
            'version_code': str,
            'version_name': str
        }

        self.attribute_map = {
            'application_label': 'applicationLabel',
            'intent_filters': 'intentFilters',
            'max_sdk_version': 'maxSdkVersion',
            'metadata': 'metadata',
            'min_sdk_version': 'minSdkVersion',
            'package_name': 'packageName',
            'services': 'services',
            'target_sdk_version': 'targetSdkVersion',
            'uses_feature': 'usesFeature',
            'uses_permission': 'usesPermission',
            'version_code': 'versionCode',
            'version_name': 'versionName'
        }

        self._application_label = application_label
        self._intent_filters = intent_filters
        self._max_sdk_version = max_sdk_version
        self._metadata = metadata
        self._min_sdk_version = min_sdk_version
        self._package_name = package_name
        self._services = services
        self._target_sdk_version = target_sdk_version
        self._uses_feature = uses_feature
        self._uses_permission = uses_permission
        self._version_code = version_code
        self._version_name = version_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApkManifest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApkManifest of this ApkManifest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_label(self):
        """Gets the application_label of this ApkManifest.

        User-readable name for the application.

        :return: The application_label of this ApkManifest.
        :rtype: str
        """
        return self._application_label

    @application_label.setter
    def application_label(self, application_label):
        """Sets the application_label of this ApkManifest.

        User-readable name for the application.

        :param application_label: The application_label of this ApkManifest.
        :type application_label: str
        """

        self._application_label = application_label

    @property
    def intent_filters(self):
        """Gets the intent_filters of this ApkManifest.


        :return: The intent_filters of this ApkManifest.
        :rtype: List[IntentFilter]
        """
        return self._intent_filters

    @intent_filters.setter
    def intent_filters(self, intent_filters):
        """Sets the intent_filters of this ApkManifest.


        :param intent_filters: The intent_filters of this ApkManifest.
        :type intent_filters: List[IntentFilter]
        """

        self._intent_filters = intent_filters

    @property
    def max_sdk_version(self):
        """Gets the max_sdk_version of this ApkManifest.

        Maximum API level on which the application is designed to run.

        :return: The max_sdk_version of this ApkManifest.
        :rtype: int
        """
        return self._max_sdk_version

    @max_sdk_version.setter
    def max_sdk_version(self, max_sdk_version):
        """Sets the max_sdk_version of this ApkManifest.

        Maximum API level on which the application is designed to run.

        :param max_sdk_version: The max_sdk_version of this ApkManifest.
        :type max_sdk_version: int
        """

        self._max_sdk_version = max_sdk_version

    @property
    def metadata(self):
        """Gets the metadata of this ApkManifest.

        Meta-data tags defined in the manifest.

        :return: The metadata of this ApkManifest.
        :rtype: List[Metadata]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this ApkManifest.

        Meta-data tags defined in the manifest.

        :param metadata: The metadata of this ApkManifest.
        :type metadata: List[Metadata]
        """

        self._metadata = metadata

    @property
    def min_sdk_version(self):
        """Gets the min_sdk_version of this ApkManifest.

        Minimum API level required for the application to run.

        :return: The min_sdk_version of this ApkManifest.
        :rtype: int
        """
        return self._min_sdk_version

    @min_sdk_version.setter
    def min_sdk_version(self, min_sdk_version):
        """Sets the min_sdk_version of this ApkManifest.

        Minimum API level required for the application to run.

        :param min_sdk_version: The min_sdk_version of this ApkManifest.
        :type min_sdk_version: int
        """

        self._min_sdk_version = min_sdk_version

    @property
    def package_name(self):
        """Gets the package_name of this ApkManifest.

        Full Java-style package name for this application, e.g. \"com.example.foo\".

        :return: The package_name of this ApkManifest.
        :rtype: str
        """
        return self._package_name

    @package_name.setter
    def package_name(self, package_name):
        """Sets the package_name of this ApkManifest.

        Full Java-style package name for this application, e.g. \"com.example.foo\".

        :param package_name: The package_name of this ApkManifest.
        :type package_name: str
        """

        self._package_name = package_name

    @property
    def services(self):
        """Gets the services of this ApkManifest.

        Services contained in the tag.

        :return: The services of this ApkManifest.
        :rtype: List[Service]
        """
        return self._services

    @services.setter
    def services(self, services):
        """Sets the services of this ApkManifest.

        Services contained in the tag.

        :param services: The services of this ApkManifest.
        :type services: List[Service]
        """

        self._services = services

    @property
    def target_sdk_version(self):
        """Gets the target_sdk_version of this ApkManifest.

        Specifies the API Level on which the application is designed to run.

        :return: The target_sdk_version of this ApkManifest.
        :rtype: int
        """
        return self._target_sdk_version

    @target_sdk_version.setter
    def target_sdk_version(self, target_sdk_version):
        """Sets the target_sdk_version of this ApkManifest.

        Specifies the API Level on which the application is designed to run.

        :param target_sdk_version: The target_sdk_version of this ApkManifest.
        :type target_sdk_version: int
        """

        self._target_sdk_version = target_sdk_version

    @property
    def uses_feature(self):
        """Gets the uses_feature of this ApkManifest.

        Feature usage tags defined in the manifest.

        :return: The uses_feature of this ApkManifest.
        :rtype: List[UsesFeature]
        """
        return self._uses_feature

    @uses_feature.setter
    def uses_feature(self, uses_feature):
        """Sets the uses_feature of this ApkManifest.

        Feature usage tags defined in the manifest.

        :param uses_feature: The uses_feature of this ApkManifest.
        :type uses_feature: List[UsesFeature]
        """

        self._uses_feature = uses_feature

    @property
    def uses_permission(self):
        """Gets the uses_permission of this ApkManifest.

        Permissions declared to be used by the application

        :return: The uses_permission of this ApkManifest.
        :rtype: List[str]
        """
        return self._uses_permission

    @uses_permission.setter
    def uses_permission(self, uses_permission):
        """Sets the uses_permission of this ApkManifest.

        Permissions declared to be used by the application

        :param uses_permission: The uses_permission of this ApkManifest.
        :type uses_permission: List[str]
        """

        self._uses_permission = uses_permission

    @property
    def version_code(self):
        """Gets the version_code of this ApkManifest.

        Version number used internally by the app.

        :return: The version_code of this ApkManifest.
        :rtype: str
        """
        return self._version_code

    @version_code.setter
    def version_code(self, version_code):
        """Sets the version_code of this ApkManifest.

        Version number used internally by the app.

        :param version_code: The version_code of this ApkManifest.
        :type version_code: str
        """

        self._version_code = version_code

    @property
    def version_name(self):
        """Gets the version_name of this ApkManifest.

        Version number shown to users.

        :return: The version_name of this ApkManifest.
        :rtype: str
        """
        return self._version_name

    @version_name.setter
    def version_name(self, version_name):
        """Sets the version_name of this ApkManifest.

        Version number shown to users.

        :param version_name: The version_name of this ApkManifest.
        :type version_name: str
        """

        self._version_name = version_name
