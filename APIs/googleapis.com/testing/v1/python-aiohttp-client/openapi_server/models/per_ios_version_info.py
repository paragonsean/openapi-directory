# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PerIosVersionInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_capacity: str=None, version_id: str=None):
        """PerIosVersionInfo - a model defined in OpenAPI

        :param device_capacity: The device_capacity of this PerIosVersionInfo.
        :param version_id: The version_id of this PerIosVersionInfo.
        """
        self.openapi_types = {
            'device_capacity': str,
            'version_id': str
        }

        self.attribute_map = {
            'device_capacity': 'deviceCapacity',
            'version_id': 'versionId'
        }

        self._device_capacity = device_capacity
        self._version_id = version_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PerIosVersionInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PerIosVersionInfo of this PerIosVersionInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_capacity(self):
        """Gets the device_capacity of this PerIosVersionInfo.

        The number of online devices for an iOS version.

        :return: The device_capacity of this PerIosVersionInfo.
        :rtype: str
        """
        return self._device_capacity

    @device_capacity.setter
    def device_capacity(self, device_capacity):
        """Sets the device_capacity of this PerIosVersionInfo.

        The number of online devices for an iOS version.

        :param device_capacity: The device_capacity of this PerIosVersionInfo.
        :type device_capacity: str
        """
        allowed_values = ["DEVICE_CAPACITY_UNSPECIFIED", "DEVICE_CAPACITY_HIGH", "DEVICE_CAPACITY_MEDIUM", "DEVICE_CAPACITY_LOW", "DEVICE_CAPACITY_NONE"]  # noqa: E501
        if device_capacity not in allowed_values:
            raise ValueError(
                "Invalid value for `device_capacity` ({0}), must be one of {1}"
                .format(device_capacity, allowed_values)
            )

        self._device_capacity = device_capacity

    @property
    def version_id(self):
        """Gets the version_id of this PerIosVersionInfo.

        An iOS version.

        :return: The version_id of this PerIosVersionInfo.
        :rtype: str
        """
        return self._version_id

    @version_id.setter
    def version_id(self, version_id):
        """Sets the version_id of this PerIosVersionInfo.

        An iOS version.

        :param version_id: The version_id of this PerIosVersionInfo.
        :type version_id: str
        """

        self._version_id = version_id
