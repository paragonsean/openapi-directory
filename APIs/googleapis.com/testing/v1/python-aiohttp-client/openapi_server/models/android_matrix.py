# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AndroidMatrix(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, android_model_ids: List[str]=None, android_version_ids: List[str]=None, locales: List[str]=None, orientations: List[str]=None):
        """AndroidMatrix - a model defined in OpenAPI

        :param android_model_ids: The android_model_ids of this AndroidMatrix.
        :param android_version_ids: The android_version_ids of this AndroidMatrix.
        :param locales: The locales of this AndroidMatrix.
        :param orientations: The orientations of this AndroidMatrix.
        """
        self.openapi_types = {
            'android_model_ids': List[str],
            'android_version_ids': List[str],
            'locales': List[str],
            'orientations': List[str]
        }

        self.attribute_map = {
            'android_model_ids': 'androidModelIds',
            'android_version_ids': 'androidVersionIds',
            'locales': 'locales',
            'orientations': 'orientations'
        }

        self._android_model_ids = android_model_ids
        self._android_version_ids = android_version_ids
        self._locales = locales
        self._orientations = orientations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AndroidMatrix':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AndroidMatrix of this AndroidMatrix.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def android_model_ids(self):
        """Gets the android_model_ids of this AndroidMatrix.

        Required. The ids of the set of Android device to be used. Use the TestEnvironmentDiscoveryService to get supported options.

        :return: The android_model_ids of this AndroidMatrix.
        :rtype: List[str]
        """
        return self._android_model_ids

    @android_model_ids.setter
    def android_model_ids(self, android_model_ids):
        """Sets the android_model_ids of this AndroidMatrix.

        Required. The ids of the set of Android device to be used. Use the TestEnvironmentDiscoveryService to get supported options.

        :param android_model_ids: The android_model_ids of this AndroidMatrix.
        :type android_model_ids: List[str]
        """

        self._android_model_ids = android_model_ids

    @property
    def android_version_ids(self):
        """Gets the android_version_ids of this AndroidMatrix.

        Required. The ids of the set of Android OS version to be used. Use the TestEnvironmentDiscoveryService to get supported options.

        :return: The android_version_ids of this AndroidMatrix.
        :rtype: List[str]
        """
        return self._android_version_ids

    @android_version_ids.setter
    def android_version_ids(self, android_version_ids):
        """Sets the android_version_ids of this AndroidMatrix.

        Required. The ids of the set of Android OS version to be used. Use the TestEnvironmentDiscoveryService to get supported options.

        :param android_version_ids: The android_version_ids of this AndroidMatrix.
        :type android_version_ids: List[str]
        """

        self._android_version_ids = android_version_ids

    @property
    def locales(self):
        """Gets the locales of this AndroidMatrix.

        Required. The set of locales the test device will enable for testing. Use the TestEnvironmentDiscoveryService to get supported options.

        :return: The locales of this AndroidMatrix.
        :rtype: List[str]
        """
        return self._locales

    @locales.setter
    def locales(self, locales):
        """Sets the locales of this AndroidMatrix.

        Required. The set of locales the test device will enable for testing. Use the TestEnvironmentDiscoveryService to get supported options.

        :param locales: The locales of this AndroidMatrix.
        :type locales: List[str]
        """

        self._locales = locales

    @property
    def orientations(self):
        """Gets the orientations of this AndroidMatrix.

        Required. The set of orientations to test with. Use the TestEnvironmentDiscoveryService to get supported options.

        :return: The orientations of this AndroidMatrix.
        :rtype: List[str]
        """
        return self._orientations

    @orientations.setter
    def orientations(self, orientations):
        """Sets the orientations of this AndroidMatrix.

        Required. The set of orientations to test with. Use the TestEnvironmentDiscoveryService to get supported options.

        :param orientations: The orientations of this AndroidMatrix.
        :type orientations: List[str]
        """

        self._orientations = orientations
