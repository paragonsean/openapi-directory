# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.file_reference import FileReference
from openapi_server import util


class IosTestLoop(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_bundle_id: str=None, app_ipa: FileReference=None, scenarios: List[int]=None):
        """IosTestLoop - a model defined in OpenAPI

        :param app_bundle_id: The app_bundle_id of this IosTestLoop.
        :param app_ipa: The app_ipa of this IosTestLoop.
        :param scenarios: The scenarios of this IosTestLoop.
        """
        self.openapi_types = {
            'app_bundle_id': str,
            'app_ipa': FileReference,
            'scenarios': List[int]
        }

        self.attribute_map = {
            'app_bundle_id': 'appBundleId',
            'app_ipa': 'appIpa',
            'scenarios': 'scenarios'
        }

        self._app_bundle_id = app_bundle_id
        self._app_ipa = app_ipa
        self._scenarios = scenarios

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IosTestLoop':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IosTestLoop of this IosTestLoop.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_bundle_id(self):
        """Gets the app_bundle_id of this IosTestLoop.

        Output only. The bundle id for the application under test.

        :return: The app_bundle_id of this IosTestLoop.
        :rtype: str
        """
        return self._app_bundle_id

    @app_bundle_id.setter
    def app_bundle_id(self, app_bundle_id):
        """Sets the app_bundle_id of this IosTestLoop.

        Output only. The bundle id for the application under test.

        :param app_bundle_id: The app_bundle_id of this IosTestLoop.
        :type app_bundle_id: str
        """

        self._app_bundle_id = app_bundle_id

    @property
    def app_ipa(self):
        """Gets the app_ipa of this IosTestLoop.


        :return: The app_ipa of this IosTestLoop.
        :rtype: FileReference
        """
        return self._app_ipa

    @app_ipa.setter
    def app_ipa(self, app_ipa):
        """Sets the app_ipa of this IosTestLoop.


        :param app_ipa: The app_ipa of this IosTestLoop.
        :type app_ipa: FileReference
        """

        self._app_ipa = app_ipa

    @property
    def scenarios(self):
        """Gets the scenarios of this IosTestLoop.

        The list of scenarios that should be run during the test. Defaults to the single scenario 0 if unspecified.

        :return: The scenarios of this IosTestLoop.
        :rtype: List[int]
        """
        return self._scenarios

    @scenarios.setter
    def scenarios(self, scenarios):
        """Sets the scenarios of this IosTestLoop.

        The list of scenarios that should be run during the test. Defaults to the single scenario 0 if unspecified.

        :param scenarios: The scenarios of this IosTestLoop.
        :type scenarios: List[int]
        """

        self._scenarios = scenarios
