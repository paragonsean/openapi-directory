# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DirectAccessVersionInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, direct_access_supported: bool=None, minimum_android_studio_version: str=None):
        """DirectAccessVersionInfo - a model defined in OpenAPI

        :param direct_access_supported: The direct_access_supported of this DirectAccessVersionInfo.
        :param minimum_android_studio_version: The minimum_android_studio_version of this DirectAccessVersionInfo.
        """
        self.openapi_types = {
            'direct_access_supported': bool,
            'minimum_android_studio_version': str
        }

        self.attribute_map = {
            'direct_access_supported': 'directAccessSupported',
            'minimum_android_studio_version': 'minimumAndroidStudioVersion'
        }

        self._direct_access_supported = direct_access_supported
        self._minimum_android_studio_version = minimum_android_studio_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DirectAccessVersionInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DirectAccessVersionInfo of this DirectAccessVersionInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def direct_access_supported(self):
        """Gets the direct_access_supported of this DirectAccessVersionInfo.

        Whether direct access is supported at all. Clients are expected to filter down the device list to only android models and versions which support Direct Access when that is the user intent.

        :return: The direct_access_supported of this DirectAccessVersionInfo.
        :rtype: bool
        """
        return self._direct_access_supported

    @direct_access_supported.setter
    def direct_access_supported(self, direct_access_supported):
        """Sets the direct_access_supported of this DirectAccessVersionInfo.

        Whether direct access is supported at all. Clients are expected to filter down the device list to only android models and versions which support Direct Access when that is the user intent.

        :param direct_access_supported: The direct_access_supported of this DirectAccessVersionInfo.
        :type direct_access_supported: bool
        """

        self._direct_access_supported = direct_access_supported

    @property
    def minimum_android_studio_version(self):
        """Gets the minimum_android_studio_version of this DirectAccessVersionInfo.

        Output only. Indicates client-device compatibility, where a device is known to work only with certain workarounds implemented in the Android Studio client. Expected format \"major.minor.micro.patch\", e.g. \"5921.22.2211.8881706\".

        :return: The minimum_android_studio_version of this DirectAccessVersionInfo.
        :rtype: str
        """
        return self._minimum_android_studio_version

    @minimum_android_studio_version.setter
    def minimum_android_studio_version(self, minimum_android_studio_version):
        """Sets the minimum_android_studio_version of this DirectAccessVersionInfo.

        Output only. Indicates client-device compatibility, where a device is known to work only with certain workarounds implemented in the Android Studio client. Expected format \"major.minor.micro.patch\", e.g. \"5921.22.2211.8881706\".

        :param minimum_android_studio_version: The minimum_android_studio_version of this DirectAccessVersionInfo.
        :type minimum_android_studio_version: str
        """

        self._minimum_android_studio_version = minimum_android_studio_version
